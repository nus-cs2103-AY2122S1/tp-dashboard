[{"path":"README.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"marcuspeh"},"content":"# Around the World in $80","lastModifiedDate":"2021-09-23"},{"lineNumber":2,"author":{"gitId":"marcuspeh"},"content":"[![CI Status](https://github.com/AY2122S1-CS2103T-F13-1/tp/workflows/Java%20CI/badge.svg)](https://github.com/AY2122S1-CS2103T-F13-1/tp/actions)","lastModifiedDate":"2021-09-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"![Ui](docs/images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"marcuspeh"},"content":"## About","lastModifiedDate":"2021-09-23"},{"lineNumber":7,"author":{"gitId":"marcuspeh"},"content":"Travellers have big notes that make settling payments inconvenient. Most travel groups often designate one person to pay. This method of settling payments poses a vexing task of splitting costs at the end of the day or on the spot. Our app effectively splits bills between different contacts to serve this purpose.","lastModifiedDate":"2021-09-23"},{"lineNumber":8,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":9,"author":{"gitId":"marcuspeh"},"content":"## Links","lastModifiedDate":"2021-09-23"},{"lineNumber":10,"author":{"gitId":"marcuspeh"},"content":"* [Website](https://ay2122s1-cs2103t-f13-1.github.io/tp)","lastModifiedDate":"2021-10-31"},{"lineNumber":11,"author":{"gitId":"marcuspeh"},"content":"* [User Guide](https://ay2122s1-cs2103t-f13-1.github.io/tp/UserGuide.html)","lastModifiedDate":"2021-09-23"},{"lineNumber":12,"author":{"gitId":"marcuspeh"},"content":"* [Developer Guide](https://ay2122s1-cs2103t-f13-1.github.io/tp/DeveloperGuide.html)","lastModifiedDate":"2021-09-23"},{"lineNumber":13,"author":{"gitId":"marcuspeh"},"content":"* [About Us](https://ay2122s1-cs2103t-f13-1.github.io/tp/AboutUs.html)","lastModifiedDate":"2021-09-23"},{"lineNumber":14,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":15,"author":{"gitId":"marcuspeh"},"content":"## Acknowledgement","lastModifiedDate":"2021-09-23"},{"lineNumber":16,"author":{"gitId":"marcuspeh"},"content":"This project is based on the AddressBook-Level3 project created by the [SE-EDU initiative](https://se-education.org).","lastModifiedDate":"2021-09-23"}],"authorContributionMap":{"marcuspeh":13,"-":3}},{"path":"build.gradle","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2016-08-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2017-12-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2017-12-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00274.0.4\u0027","lastModifiedDate":"2019-02-28"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2016-12-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    id \u0027jacoco\u0027","lastModifiedDate":"2020-08-07"},{"lineNumber":7,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-29"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-29"},{"lineNumber":9,"author":{"gitId":"ramapriyan912001"},"content":"mainClassName \u003d \u0027seedu.awe.Main\u0027","lastModifiedDate":"2021-10-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"sourceCompatibility \u003d JavaVersion.VERSION_11","lastModifiedDate":"2019-02-20"},{"lineNumber":12,"author":{"gitId":"-"},"content":"targetCompatibility \u003d JavaVersion.VERSION_11","lastModifiedDate":"2019-02-20"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    maven { url \u0027https://oss.sonatype.org/content/repositories/snapshots/\u0027 }","lastModifiedDate":"2018-04-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"checkstyle {","lastModifiedDate":"2016-10-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u00278.29\u0027","lastModifiedDate":"2020-05-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-10-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2018-03-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2018-03-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    finalizedBy jacocoTestReport","lastModifiedDate":"2020-08-07"},{"lineNumber":26,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-08-07"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-08-07"},{"lineNumber":28,"author":{"gitId":"marcuspeh"},"content":"run {","lastModifiedDate":"2021-10-18"},{"lineNumber":29,"author":{"gitId":"marcuspeh"},"content":"    enableAssertions \u003d true","lastModifiedDate":"2021-10-18"},{"lineNumber":30,"author":{"gitId":"marcuspeh"},"content":"}","lastModifiedDate":"2021-10-18"},{"lineNumber":31,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":32,"author":{"gitId":"-"},"content":"task coverage(type: JacocoReport) {","lastModifiedDate":"2020-08-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    sourceDirectories.from files(sourceSets.main.allSource.srcDirs)","lastModifiedDate":"2020-08-07"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    classDirectories.from files(sourceSets.main.output)","lastModifiedDate":"2020-08-07"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    executionData.from files(jacocoTestReport.executionData)","lastModifiedDate":"2020-08-07"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    afterEvaluate {","lastModifiedDate":"2020-08-07"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        classDirectories.from files(classDirectories.files.collect {","lastModifiedDate":"2020-08-07"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            fileTree(dir: it, exclude: [\u0027**/*.jar\u0027])","lastModifiedDate":"2020-08-07"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        })","lastModifiedDate":"2020-08-07"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-08-07"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    reports {","lastModifiedDate":"2020-08-07"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        html.enabled \u003d true","lastModifiedDate":"2020-08-07"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        xml.enabled \u003d true","lastModifiedDate":"2020-08-07"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-08-07"},{"lineNumber":45,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-03-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    String jUnitVersion \u003d \u00275.4.0\u0027","lastModifiedDate":"2019-02-10"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    String javaFxVersion \u003d \u002711\u0027","lastModifiedDate":"2019-02-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-05"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    implementation group: \u0027com.fasterxml.jackson.core\u0027, name: \u0027jackson-databind\u0027, version: \u00272.7.0\u0027","lastModifiedDate":"2018-03-29"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    implementation group: \u0027com.fasterxml.jackson.datatype\u0027, name: \u0027jackson-datatype-jsr310\u0027, version: \u00272.7.4\u0027","lastModifiedDate":"2018-03-29"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-05"},{"lineNumber":67,"author":{"gitId":"ramapriyan912001"},"content":"    implementation group: \u0027org.apache.commons\u0027, name: \u0027commons-lang3\u0027, version: \u00273.0\u0027","lastModifiedDate":"2021-10-03"},{"lineNumber":68,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":69,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: jUnitVersion","lastModifiedDate":"2018-03-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: jUnitVersion","lastModifiedDate":"2018-03-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-29"},{"lineNumber":75,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2016-08-29"},{"lineNumber":76,"author":{"gitId":"ramapriyan912001"},"content":"    archiveName \u003d \u0027awe.jar\u0027","lastModifiedDate":"2021-10-28"},{"lineNumber":77,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-29"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"defaultTasks \u0027clean\u0027, \u0027test\u0027","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"marcuspeh":4,"ramapriyan912001":5,"-":70}},{"path":"docs/AboutUs.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: About Us","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"marcuspeh"},"content":"Around the World in $80 was developed by the AY2122S1-CS2103T-F13-1 team.","lastModifiedDate":"2021-09-22"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"We are a team based in the [School of Computing, National University of Singapore](http://www.comp.nus.edu.sg).","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"marcuspeh"},"content":"This project is based on the AddressBook-Level3 project created by the [SE-EDU initiative](https://se-education.org).","lastModifiedDate":"2021-09-22"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-06-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"## Project team","lastModifiedDate":"2020-06-07"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"chrus-chong"},"content":"### Chrus Chong Kai Ngee","lastModifiedDate":"2021-09-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"chrus-chong"},"content":"\u003cimg src\u003d\"images/chrus-chong.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2021-09-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"chrus-chong"},"content":"[LinkedIn](https://www.linkedin.com/in/chrus-chong/)","lastModifiedDate":"2021-09-22"},{"lineNumber":18,"author":{"gitId":"chrus-chong"},"content":"[GitHub](https://github.com/chrus-chong)","lastModifiedDate":"2021-09-22"},{"lineNumber":19,"author":{"gitId":"chrus-chong"},"content":"[Portfolio](team/chruschong.md)","lastModifiedDate":"2021-10-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"* Role: Project Advisor","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"marcuspeh"},"content":"### Peh Hoe Khim Marcus","lastModifiedDate":"2021-09-22"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"marcuspeh"},"content":"\u003cimg src\u003d\"images/marcuspeh.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2021-09-22"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"marcuspeh"},"content":"[LinkedIn](https://www.linkedin.com/in/marcuspeh/)","lastModifiedDate":"2021-09-22"},{"lineNumber":28,"author":{"gitId":"marcuspeh"},"content":"[Github](http://github.com/marcuspeh)","lastModifiedDate":"2021-09-22"},{"lineNumber":29,"author":{"gitId":"marcuspeh"},"content":"[Portfolio](team/marcuspeh.md)","lastModifiedDate":"2021-10-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"* Role: Team Lead","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"* Responsibilities: UI","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"ramapriyan912001"},"content":"### Ramapriyan Srivatsan Purisai Devarajan","lastModifiedDate":"2021-09-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"ramapriyan912001"},"content":"\u003cimg src\u003d\"images/ramapriyan912001.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2021-09-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"ramapriyan912001"},"content":"[LinkedIn](https://www.linkedin.com/in/ramapriyansrivatsanpd/)","lastModifiedDate":"2021-09-23"},{"lineNumber":39,"author":{"gitId":"ramapriyan912001"},"content":"[Github](https://github.com/ramapriyan912001)","lastModifiedDate":"2021-09-23"},{"lineNumber":40,"author":{"gitId":"ramapriyan912001"},"content":"[Portfolio](team/ramapriyansrivatsanpurisaidevarajan.md)","lastModifiedDate":"2021-10-04"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"ramapriyan912001"},"content":"* Role: Team Lead","lastModifiedDate":"2021-09-23"},{"lineNumber":43,"author":{"gitId":"ramapriyan912001"},"content":"* Responsibilities: Backend Engineering","lastModifiedDate":"2021-09-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"kheekheekhee"},"content":"### Ee Kar Hee, Nicholas","lastModifiedDate":"2021-09-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"kheekheekhee"},"content":"\u003cimg src\u003d\"images/kheekheekhee.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2021-09-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"kheekheekhee"},"content":"[LinkedIn](https://www.linkedin.com/in/ekhn/)","lastModifiedDate":"2021-09-25"},{"lineNumber":50,"author":{"gitId":"kheekheekhee"},"content":"[Github](http://github.com/kheekheekhee)","lastModifiedDate":"2021-09-25"},{"lineNumber":51,"author":{"gitId":"kheekheekhee"},"content":"[Portfolio](team/nicholasee.md)","lastModifiedDate":"2021-10-07"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"kheekheekhee"},"content":"* Responsibilities: Frontend Engineering","lastModifiedDate":"2021-09-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"Jingwencloud"},"content":"### Ong Jingwen","lastModifiedDate":"2021-09-26"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"Jingwencloud"},"content":"\u003cimg src\u003d\"images/jingwencloud.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2021-09-26"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"Jingwencloud"},"content":"[Github](http://github.com/Jingwencloud)","lastModifiedDate":"2021-09-26"},{"lineNumber":61,"author":{"gitId":"Jingwencloud"},"content":"[Portfolio](team/ongjingwen.md)","lastModifiedDate":"2021-10-07"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2020-05-23"},{"lineNumber":64,"author":{"gitId":"Jingwencloud"},"content":"","lastModifiedDate":"2021-09-26"}],"authorContributionMap":{"marcuspeh":7,"Jingwencloud":5,"chrus-chong":5,"kheekheekhee":6,"ramapriyan912001":7,"-":34}},{"path":"docs/DeveloperGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: Developer Guide","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"marcuspeh"},"content":"## Table of Contents","lastModifiedDate":"2021-10-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2021-10-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2021-10-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":10,"author":{"gitId":"-"},"content":"## **Acknowledgements**","lastModifiedDate":"2021-07-30"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":12,"author":{"gitId":"marcuspeh"},"content":"This project is based on the AddressBook-Level3 project created by the [SE-EDU initiative](https://se-education.org).","lastModifiedDate":"2021-10-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":14,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-07-30"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"## **Setting up, getting started**","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"Refer to the guide [_Setting up and getting started_](SettingUp.md).","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"## **Design**","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"marcuspeh"},"content":":bulb: **Tip:** The `.puml` files used to create diagrams in this document can be found in the [diagrams](https://github.com/ay2122s1-cs2103t-f13-1/addressbook-level3/tree/master/docs/diagrams/) folder. Refer to the [_PlantUML Tutorial_ at se-edu/guides](https://se-education.org/guides/tutorials/plantUml.html) to learn how to create and edit diagrams.","lastModifiedDate":"2021-10-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"### Architecture","lastModifiedDate":"2021-07-31"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ArchitectureDiagram.png\" width\u003d\"280\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"The ***Architecture Diagram*** given above explains the high-level design of the App.","lastModifiedDate":"2021-07-31"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"Given below is a quick overview of main components and how they interact with each other.","lastModifiedDate":"2021-07-31"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":37,"author":{"gitId":"-"},"content":"**Main components of the architecture**","lastModifiedDate":"2021-07-31"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"marcuspeh"},"content":"**`Main`** has two classes called [`Main`](https://github.com/ay2122s1-cs2103t-f13-1/addressbook-level3/tree/master/src/main/java/seedu/address/Main.java) and [`MainApp`](https://github.com/ay2122s1-cs2103t-f13-1/addressbook-level3/tree/master/src/main/java/seedu/address/MainApp.java). It is responsible for,","lastModifiedDate":"2021-10-20"},{"lineNumber":40,"author":{"gitId":"-"},"content":"* At app launch: Initializes the components in the correct sequence, and connects them up with each other.","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"* At shut down: Shuts down the components and invokes cleanup methods where necessary.","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"[**`Commons`**](#common-classes) represents a collection of classes used by multiple other components.","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"The rest of the App consists of four components.","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"* [**`UI`**](#ui-component): The UI of the App.","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"* [**`Logic`**](#logic-component): The command executor.","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"* [**`Model`**](#model-component): Holds the data of the App in memory.","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"* [**`Storage`**](#storage-component): Reads data from, and writes data to, the hard disk.","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"**How the architecture components interact with each other**","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"The *Sequence Diagram* below shows how the components interact with each other for the scenario where the user issues the command `delete 1`.","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ArchitectureSequenceDiagram.png\" width\u003d\"574\" /\u003e","lastModifiedDate":"2020-06-07"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"Each of the four main components (also shown in the diagram above),","lastModifiedDate":"2021-07-31"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":61,"author":{"gitId":"-"},"content":"* defines its *API* in an `interface` with the same name as the Component.","lastModifiedDate":"2021-07-31"},{"lineNumber":62,"author":{"gitId":"-"},"content":"* implements its functionality using a concrete `{Component Name}Manager` class (which follows the corresponding API `interface` mentioned in the previous point.","lastModifiedDate":"2021-07-31"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":64,"author":{"gitId":"-"},"content":"For example, the `Logic` component defines its API in the `Logic.java` interface and implements its functionality using the `LogicManager.java` class which follows the `Logic` interface. Other components interact with a given component through its interface rather than the concrete class (reason: to prevent outside component\u0027s being coupled to the implementation of a component), as illustrated in the (partial) class diagram below.","lastModifiedDate":"2021-07-31"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":66,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ComponentManagers.png\" width\u003d\"300\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":68,"author":{"gitId":"-"},"content":"The sections below give more details of each component.","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"### UI component","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"marcuspeh"},"content":"The **API** of this component is specified in [`Ui.java`](https://github.com/ay2122s1-cs2103t-f13-1/addressbook-level3/tree/master/src/main/java/seedu/address/ui/Ui.java)","lastModifiedDate":"2021-10-20"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"![Structure of the UI Component](images/UiClassDiagram.png)","lastModifiedDate":"2021-07-31"},{"lineNumber":75,"author":{"gitId":"marcuspeh"},"content":"(Note: Implementation of NavigationButton and ViewPanel class diagram are referenced below.)","lastModifiedDate":"2021-10-21"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":77,"author":{"gitId":"marcuspeh"},"content":"The UI consists of a `MainWindow` that is made up of parts e.g. `CommandBox`, `ResultDisplay`, `ViewPanel`, `NavigationButton` etc. ","lastModifiedDate":"2021-10-21"},{"lineNumber":78,"author":{"gitId":"marcuspeh"},"content":"All these, except for `GroupButtonListener` and `PersonButtonListner` in `NavigationButton`, inherit from the abstract `UiPart` class which captures the commonalities between classes that represent parts of the visible GUI.","lastModifiedDate":"2021-10-21"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"marcuspeh"},"content":"The `UI` component uses the JavaFx UI framework. The layout of these UI parts are defined in matching `.fxml` files that are in the `src/main/resources/view` folder. For example, the layout of the [`MainWindow`](https://github.com/ay2122s1-cs2103t-f13-1/addressbook-level3/tree/master/src/main/java/seedu/address/ui/MainWindow.java) is specified in [`MainWindow.fxml`](https://github.com/ay2122s1-cs2103t-f13-1/addressbook-level3/tree/master/src/main/resources/view/MainWindow.fxml)","lastModifiedDate":"2021-10-20"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"The `UI` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"* executes user commands using the `Logic` component.","lastModifiedDate":"2021-07-31"},{"lineNumber":85,"author":{"gitId":"-"},"content":"* listens for changes to `Model` data so that the UI can be updated with the modified data.","lastModifiedDate":"2021-07-31"},{"lineNumber":86,"author":{"gitId":"-"},"content":"* keeps a reference to the `Logic` component, because the `UI` relies on the `Logic` to execute commands.","lastModifiedDate":"2021-07-31"},{"lineNumber":87,"author":{"gitId":"-"},"content":"* depends on some classes in the `Model` component, as it displays `Person` object residing in the `Model`.","lastModifiedDate":"2021-07-31"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"marcuspeh"},"content":"\u003cimg src\u003d\"images/UiViewPanelDiagram.png\" width\u003d\"450\" /\u003e","lastModifiedDate":"2021-10-21"},{"lineNumber":90,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":91,"author":{"gitId":"marcuspeh"},"content":"The `ViewPanel` consist of the following parts:","lastModifiedDate":"2021-10-20"},{"lineNumber":92,"author":{"gitId":"marcuspeh"},"content":"* `GroupListPanel`","lastModifiedDate":"2021-10-20"},{"lineNumber":93,"author":{"gitId":"marcuspeh"},"content":"* `ContactListPanel`","lastModifiedDate":"2021-10-31"},{"lineNumber":94,"author":{"gitId":"Jingwencloud"},"content":"* `ExpenseListPanel`","lastModifiedDate":"2021-10-21"},{"lineNumber":95,"author":{"gitId":"ramapriyan912001"},"content":"* `PaymentListPanel`","lastModifiedDate":"2021-10-29"},{"lineNumber":96,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":97,"author":{"gitId":"marcuspeh"},"content":"Each panel will display the corresponding list accordingly. The ViewPanel will only show up a single list panel at a time. ","lastModifiedDate":"2021-10-20"},{"lineNumber":98,"author":{"gitId":"marcuspeh"},"content":"We have decided to opt for this way of implementation due to the following:","lastModifiedDate":"2021-10-20"},{"lineNumber":99,"author":{"gitId":"marcuspeh"},"content":"* Able to make use of existing AB3 implementation of `PersonList`","lastModifiedDate":"2021-10-20"},{"lineNumber":100,"author":{"gitId":"marcuspeh"},"content":"* Will not increase code complexity as compared to both list using the same panel.","lastModifiedDate":"2021-10-20"},{"lineNumber":101,"author":{"gitId":"marcuspeh"},"content":"* Able to toggle easily with CLI commands","lastModifiedDate":"2021-10-20"},{"lineNumber":102,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":103,"author":{"gitId":"marcuspeh"},"content":"In addition to using CLI command, we will also be implementing the toggling of list panel with the use of buttons.","lastModifiedDate":"2021-10-20"},{"lineNumber":104,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":105,"author":{"gitId":"marcuspeh"},"content":"\u003cimg src\u003d\"images/UiNavigationButtonDiagram.png\" width\u003d\"450\" /\u003e","lastModifiedDate":"2021-10-21"},{"lineNumber":106,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":107,"author":{"gitId":"marcuspeh"},"content":"The `NavigationButtonPanel` consist of the following parts:","lastModifiedDate":"2021-10-20"},{"lineNumber":108,"author":{"gitId":"marcuspeh"},"content":"* GroupViewButton","lastModifiedDate":"2021-10-20"},{"lineNumber":109,"author":{"gitId":"marcuspeh"},"content":"* ContactViewButton","lastModifiedDate":"2021-10-31"},{"lineNumber":110,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":111,"author":{"gitId":"Jingwencloud"},"content":"Clicking each button will show the respective list view in `ViewPanel`. The clicking of the button is handled by `EventHandler`.","lastModifiedDate":"2021-10-21"},{"lineNumber":112,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":113,"author":{"gitId":"-"},"content":"### Logic component","lastModifiedDate":"2020-05-23"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":115,"author":{"gitId":"marcuspeh"},"content":"**API** : [`Logic.java`](https://github.com/ay2122s1-cs2103t-f13-1/addressbook-level3/tree/master/src/main/java/seedu/address/logic/Logic.java)","lastModifiedDate":"2021-10-20"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":117,"author":{"gitId":"-"},"content":"Here\u0027s a (partial) class diagram of the `Logic` component:","lastModifiedDate":"2021-07-31"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/LogicClassDiagram.png\" width\u003d\"550\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"How the `Logic` component works:","lastModifiedDate":"2021-07-31"},{"lineNumber":122,"author":{"gitId":"-"},"content":"1. When `Logic` is called upon to execute a command, it uses the `AddressBookParser` class to parse the user command.","lastModifiedDate":"2021-07-31"},{"lineNumber":123,"author":{"gitId":"-"},"content":"1. This results in a `Command` object (more precisely, an object of one of its subclasses e.g., `AddCommand`) which is executed by the `LogicManager`.","lastModifiedDate":"2021-07-31"},{"lineNumber":124,"author":{"gitId":"marcuspeh"},"content":"1. The command can communicate with the `Model` when it is executed (e.g. to add a contact).","lastModifiedDate":"2021-10-31"},{"lineNumber":125,"author":{"gitId":"-"},"content":"1. The result of the command execution is encapsulated as a `CommandResult` object which is returned back from `Logic`.","lastModifiedDate":"2021-07-31"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":127,"author":{"gitId":"-"},"content":"The Sequence Diagram below illustrates the interactions within the `Logic` component for the `execute(\"delete 1\")` API call.","lastModifiedDate":"2021-07-31"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":129,"author":{"gitId":"marcuspeh"},"content":"\u003cimg src\u003d\"images/DeleteSequenceDiagram.png\" width\u003d\"600\" /\u003e","lastModifiedDate":"2021-10-21"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":131,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The lifeline for `DeleteCommandParser` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2020-05-23"},{"lineNumber":132,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"Here are the other classes in `Logic` (omitted from the class diagram above) that are used for parsing a user command:","lastModifiedDate":"2021-07-31"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":136,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ParserClasses.png\" width\u003d\"600\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":"How the parsing works:","lastModifiedDate":"2021-07-31"},{"lineNumber":139,"author":{"gitId":"-"},"content":"* When called upon to parse a user command, the `AddressBookParser` class creates an `XYZCommandParser` (`XYZ` is a placeholder for the specific command name e.g., `AddCommandParser`) which uses the other classes shown above to parse the user command and create a `XYZCommand` object (e.g., `AddCommand`) which the `AddressBookParser` returns back as a `Command` object.","lastModifiedDate":"2021-07-31"},{"lineNumber":140,"author":{"gitId":"-"},"content":"* All `XYZCommandParser` classes (e.g., `AddCommandParser`, `DeleteCommandParser`, ...) inherit from the `Parser` interface so that they can be treated similarly where possible e.g, during testing.","lastModifiedDate":"2021-07-31"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":142,"author":{"gitId":"-"},"content":"### Model component","lastModifiedDate":"2021-07-31"},{"lineNumber":143,"author":{"gitId":"marcuspeh"},"content":"**API** : [`Model.java`](https://github.com/ay2122s1-cs2103t-f13-1/addressbook-level3/tree/master/src/main/java/seedu/address/model/Model.java)","lastModifiedDate":"2021-10-20"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":145,"author":{"gitId":"marcuspeh"},"content":"\u003cimg src\u003d\"images/ModelClassDiagram.png\" width\u003d\"700\" /\u003e","lastModifiedDate":"2021-10-21"},{"lineNumber":146,"author":{"gitId":"marcuspeh"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-10-21"},{"lineNumber":147,"author":{"gitId":"marcuspeh"},"content":"(Note: Implementation of Person, Group and Expense class diagram are referenced below.)","lastModifiedDate":"2021-10-21"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":149,"author":{"gitId":"-"},"content":"The `Model` component,","lastModifiedDate":"2021-07-31"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"marcuspeh"},"content":"* stores the address book data","lastModifiedDate":"2021-10-21"},{"lineNumber":152,"author":{"gitId":"marcuspeh"},"content":"    * all `Person` objects (which are contained in a `UniquePersonList` object).","lastModifiedDate":"2021-10-21"},{"lineNumber":153,"author":{"gitId":"marcuspeh"},"content":"    * all `Group` objects (which are contained in a `UniqueGroupList` object).","lastModifiedDate":"2021-10-21"},{"lineNumber":154,"author":{"gitId":"marcuspeh"},"content":"    * all `Expense` objects (which are contained in a `ExpenseList` object).","lastModifiedDate":"2021-10-21"},{"lineNumber":155,"author":{"gitId":"ramapriyan912001"},"content":"    * all `Payment` objects (which are contained in a `PaymentList` object).","lastModifiedDate":"2021-10-29"},{"lineNumber":156,"author":{"gitId":"ramapriyan912001"},"content":"* stores the currently \u0027selected\u0027 `Person`/`Group`/`Expense`/`Payment` objects (e.g., results of a search query) as a separate _filtered_ list which is exposed to outsiders as an unmodifiable `ObservableList\u003c\u003e` that can be \u0027observed\u0027 e.g. the UI can be bound to this list so that the UI automatically updates when the data in the list change.","lastModifiedDate":"2021-10-29"},{"lineNumber":157,"author":{"gitId":"-"},"content":"* stores a `UserPref` object that represents the user’s preferences. This is exposed to the outside as a `ReadOnlyUserPref` objects.","lastModifiedDate":"2021-07-31"},{"lineNumber":158,"author":{"gitId":"-"},"content":"* does not depend on any of the other three components (as the `Model` represents data entities of the domain, they should make sense on their own without depending on other components)","lastModifiedDate":"2021-07-31"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":160,"author":{"gitId":"marcuspeh"},"content":"\u003cimg src\u003d\"images/PersonClassDiagram.png\" width\u003d\"450\" /\u003e","lastModifiedDate":"2021-10-21"},{"lineNumber":161,"author":{"gitId":"marcuspeh"},"content":"\u003cimg src\u003d\"images/ExpenseClassDiagram.png\" width\u003d\"350\" /\u003e","lastModifiedDate":"2021-10-21"},{"lineNumber":162,"author":{"gitId":"marcuspeh"},"content":"\u003cimg src\u003d\"images/GroupClassDiagram.png\" width\u003d\"450\" /\u003e","lastModifiedDate":"2021-10-21"},{"lineNumber":163,"author":{"gitId":"ramapriyan912001"},"content":"\u003cimg src\u003d\"images/PaymentClassDiagram.png\" width\u003d\"450\" /\u003e","lastModifiedDate":"2021-10-29"},{"lineNumber":164,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":165,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** An alternative (arguably, a more OOP) model is given below. It has a `Tag` list in the `AddressBook`, which `Person` references. This allows `AddressBook` to only require one `Tag` object per unique tag, instead of each `Person` needing their own `Tag` objects.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":167,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/BetterModelClassDiagram.png\" width\u003d\"450\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":169,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":172,"author":{"gitId":"-"},"content":"### Storage component","lastModifiedDate":"2020-05-23"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":174,"author":{"gitId":"marcuspeh"},"content":"**API** : [`Storage.java`](https://github.com/ay2122s1-cs2103t-f13-1/addressbook-level3/tree/master/src/main/java/seedu/address/storage/Storage.java)","lastModifiedDate":"2021-10-20"},{"lineNumber":175,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":176,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/StorageClassDiagram.png\" width\u003d\"550\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":178,"author":{"gitId":"-"},"content":"The `Storage` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":179,"author":{"gitId":"-"},"content":"* can save both address book data and user preference data in json format, and read them back into corresponding objects.","lastModifiedDate":"2021-07-31"},{"lineNumber":180,"author":{"gitId":"-"},"content":"* inherits from both `AddressBookStorage` and `UserPrefStorage`, which means it can be treated as either one (if only the functionality of only one is needed).","lastModifiedDate":"2021-07-31"},{"lineNumber":181,"author":{"gitId":"-"},"content":"* depends on some classes in the `Model` component (because the `Storage` component\u0027s job is to save/retrieve objects that belong to the `Model`)","lastModifiedDate":"2021-07-21"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":183,"author":{"gitId":"-"},"content":"### Common classes","lastModifiedDate":"2020-05-23"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":185,"author":{"gitId":"marcuspeh"},"content":"Classes used by multiple components are in the `seedu.awe.commons` package.","lastModifiedDate":"2021-10-05"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":187,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":188,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":189,"author":{"gitId":"-"},"content":"## **Implementation**","lastModifiedDate":"2020-05-23"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":191,"author":{"gitId":"-"},"content":"This section describes some noteworthy details on how certain features are implemented.","lastModifiedDate":"2020-05-23"},{"lineNumber":192,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":193,"author":{"gitId":"ramapriyan912001"},"content":"### Create Group Feature","lastModifiedDate":"2021-10-20"},{"lineNumber":194,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":195,"author":{"gitId":"ramapriyan912001"},"content":"The create group mechanism is facilitated by defining a Group model and adding a Unique Group List field to ","lastModifiedDate":"2021-10-20"},{"lineNumber":196,"author":{"gitId":"ramapriyan912001"},"content":"`AddressBook`. The Group model contains a `GroupName` field containing the name of the group, an `ArrayList` of `Person`","lastModifiedDate":"2021-10-20"},{"lineNumber":197,"author":{"gitId":"ramapriyan912001"},"content":"objects who are members of the Group, an `ArrayList` of `Expense` objects that keeps track of the expenditures of the ","lastModifiedDate":"2021-10-20"},{"lineNumber":198,"author":{"gitId":"ramapriyan912001"},"content":"Group, a `HashMap` that contains details of how much each member has paid in total across the expenses, and a `HashMap`","lastModifiedDate":"2021-10-20"},{"lineNumber":199,"author":{"gitId":"ramapriyan912001"},"content":"that contains details of the total expenditure incurred by each member across the trip.","lastModifiedDate":"2021-10-20"},{"lineNumber":200,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":201,"author":{"gitId":"chrus-chong"},"content":"The following activity diagram shows what happens when a user executes a `createGroup` command.","lastModifiedDate":"2021-10-21"},{"lineNumber":202,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":203,"author":{"gitId":"chrus-chong"},"content":"![CreateGroupActivityDiagram](images/CreateGroupActivityDiagram.png)","lastModifiedDate":"2021-10-21"},{"lineNumber":204,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":205,"author":{"gitId":"chrus-chong"},"content":"Given below is an example usage scenario and how the `creategroup` mechanism behaves at each step.","lastModifiedDate":"2021-10-21"},{"lineNumber":206,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":207,"author":{"gitId":"chrus-chong"},"content":"Step 1. A valid `creategroup` command is given as user input. This prompts the `LogicManager` to run its execute()","lastModifiedDate":"2021-10-21"},{"lineNumber":208,"author":{"gitId":"chrus-chong"},"content":"method.","lastModifiedDate":"2021-10-21"},{"lineNumber":209,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":210,"author":{"gitId":"chrus-chong"},"content":"Step 2. The `CreateGroupCommandParser` parses the input and checks for presence of the relevant prefixes.","lastModifiedDate":"2021-10-21"},{"lineNumber":211,"author":{"gitId":"chrus-chong"},"content":"It also checks that the group name is valid and all members specified are in the contact list.","lastModifiedDate":"2021-10-21"},{"lineNumber":212,"author":{"gitId":"chrus-chong"},"content":"It returns a `CreateGroupCommand`.","lastModifiedDate":"2021-10-21"},{"lineNumber":213,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":214,"author":{"gitId":"chrus-chong"},"content":"Step 3. `CreateGroupCommand` runs its execute() method which checks if a group with the same name has already been","lastModifiedDate":"2021-10-21"},{"lineNumber":215,"author":{"gitId":"chrus-chong"},"content":"created. If not, the newly created group is added into the AWE model and all members within the group are updated in","lastModifiedDate":"2021-10-21"},{"lineNumber":216,"author":{"gitId":"chrus-chong"},"content":"the model. Upon successful execution, `CommandResult` is returned.","lastModifiedDate":"2021-10-21"},{"lineNumber":217,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":218,"author":{"gitId":"chrus-chong"},"content":"The following sequence operation shows how the `creategroup` operation works.","lastModifiedDate":"2021-10-21"},{"lineNumber":219,"author":{"gitId":"chrus-chong"},"content":"![CreateGroupSequenceDiagram](images/CreateGroupSequenceDiagram.png)","lastModifiedDate":"2021-10-21"},{"lineNumber":220,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":221,"author":{"gitId":"chrus-chong"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The lifeline for `CreateGroupCommandParser`","lastModifiedDate":"2021-10-21"},{"lineNumber":222,"author":{"gitId":"chrus-chong"},"content":"should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2021-10-21"},{"lineNumber":223,"author":{"gitId":"chrus-chong"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-10-21"},{"lineNumber":224,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":225,"author":{"gitId":"chrus-chong"},"content":"![CreateGroupRef](images/CreateGroupRef.png)","lastModifiedDate":"2021-10-29"},{"lineNumber":226,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":227,"author":{"gitId":"chrus-chong"},"content":"#### Design considerations:","lastModifiedDate":"2021-10-21"},{"lineNumber":228,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":229,"author":{"gitId":"chrus-chong"},"content":"**Aspect: User command for `creategroup`:**","lastModifiedDate":"2021-10-21"},{"lineNumber":230,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":231,"author":{"gitId":"chrus-chong"},"content":"* **Alternative 1 (current choice):** Create Travel Group with specified members and tags.","lastModifiedDate":"2021-10-21"},{"lineNumber":232,"author":{"gitId":"chrus-chong"},"content":"    * Pros: Intuitive for user to create a travel group with specified members and tags.","lastModifiedDate":"2021-10-21"},{"lineNumber":233,"author":{"gitId":"chrus-chong"},"content":"    * Pros: Provides user with convenience of setting up a travel group with minimal commands.","lastModifiedDate":"2021-10-21"},{"lineNumber":234,"author":{"gitId":"chrus-chong"},"content":"    * Cons: Harder to implement.","lastModifiedDate":"2021-10-21"},{"lineNumber":235,"author":{"gitId":"chrus-chong"},"content":"    * Cons: Easier for user to make an erroneous command.","lastModifiedDate":"2021-10-21"},{"lineNumber":236,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":237,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":238,"author":{"gitId":"chrus-chong"},"content":"* **Alternative 2 :** Create Travel Group only.","lastModifiedDate":"2021-10-21"},{"lineNumber":239,"author":{"gitId":"chrus-chong"},"content":"    * Pros: Easy to implement.","lastModifiedDate":"2021-10-21"},{"lineNumber":240,"author":{"gitId":"chrus-chong"},"content":"    * Pros: Command has single responsibility. Easy to remember the sole purpose of `creategroup` command.","lastModifiedDate":"2021-10-21"},{"lineNumber":241,"author":{"gitId":"chrus-chong"},"content":"    * Cons: Unintuitive for user as travel group is created without any members or tags.","lastModifiedDate":"2021-10-21"},{"lineNumber":242,"author":{"gitId":"chrus-chong"},"content":"    * Cons: Inconvenient for user to use multiple commands to set up a travel group.","lastModifiedDate":"2021-10-21"},{"lineNumber":243,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":244,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":245,"author":{"gitId":"chrus-chong"},"content":"* **Justification**","lastModifiedDate":"2021-10-21"},{"lineNumber":246,"author":{"gitId":"chrus-chong"},"content":"    * User will have at least one member in mind when creating a group.","lastModifiedDate":"2021-10-21"},{"lineNumber":247,"author":{"gitId":"chrus-chong"},"content":"    * As such, it is only natural for the `creategroup` command to support addition of members and tags into the group","lastModifiedDate":"2021-10-21"},{"lineNumber":248,"author":{"gitId":"chrus-chong"},"content":"      upon creation.","lastModifiedDate":"2021-10-21"},{"lineNumber":249,"author":{"gitId":"chrus-chong"},"content":"    * This minimizes the number of commands a user has to make in setting up a functional Group.","lastModifiedDate":"2021-10-21"},{"lineNumber":250,"author":{"gitId":"chrus-chong"},"content":"    * As such, it is better to choose Alternative 1, as this provides the user with a far better user experience.","lastModifiedDate":"2021-10-21"},{"lineNumber":251,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":252,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":253,"author":{"gitId":"ramapriyan912001"},"content":"### Delete Group Feature","lastModifiedDate":"2021-10-20"},{"lineNumber":254,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":255,"author":{"gitId":"ramapriyan912001"},"content":"The delete group mechanism is facilitated by maintaining the constraint that every `Group` has a unique `GroupName`.","lastModifiedDate":"2021-10-20"},{"lineNumber":256,"author":{"gitId":"ramapriyan912001"},"content":"This allows the `Model` class to easily retrieve the Group based on the name entered by the user and remove the group from the model.","lastModifiedDate":"2021-10-21"},{"lineNumber":257,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":258,"author":{"gitId":"ramapriyan912001"},"content":"The following activity diagram shows what happens when a user executes a `deletegroup` command.","lastModifiedDate":"2021-10-21"},{"lineNumber":259,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":260,"author":{"gitId":"ramapriyan912001"},"content":"![DeleteGroupActivityDiagram](images/DeleteGroupActivityDiagram.png)","lastModifiedDate":"2021-10-21"},{"lineNumber":261,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":262,"author":{"gitId":"ramapriyan912001"},"content":"Given below is an example usage scenario and how the `deletegroup` mechanism behaves at each step.","lastModifiedDate":"2021-10-21"},{"lineNumber":263,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":264,"author":{"gitId":"ramapriyan912001"},"content":"Step 1. A valid `deletegroup` command is given as user input. This prompts the `LogicManager` to run its execute()","lastModifiedDate":"2021-10-21"},{"lineNumber":265,"author":{"gitId":"ramapriyan912001"},"content":"method.","lastModifiedDate":"2021-10-21"},{"lineNumber":266,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":267,"author":{"gitId":"ramapriyan912001"},"content":"Step 2. The `DeleteGroupCommandParser` parses the input and checks for presence of the relevant prefixes.","lastModifiedDate":"2021-10-21"},{"lineNumber":268,"author":{"gitId":"ramapriyan912001"},"content":"It also checks that the group name is valid (does not have any non-alphanumeric characters).","lastModifiedDate":"2021-10-21"},{"lineNumber":269,"author":{"gitId":"ramapriyan912001"},"content":"It returns a `DeleteGroupCommand`.","lastModifiedDate":"2021-10-21"},{"lineNumber":270,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":271,"author":{"gitId":"ramapriyan912001"},"content":"Step 3. `DeleteGroupCommand` runs its execute() method which checks if a group with the same name has been","lastModifiedDate":"2021-10-21"},{"lineNumber":272,"author":{"gitId":"ramapriyan912001"},"content":"created in the past. If so, this group is retrieved from the model. Subsequently, the group is removed from the addressbook.","lastModifiedDate":"2021-10-21"},{"lineNumber":273,"author":{"gitId":"ramapriyan912001"},"content":"Upon successful execution, `CommandResult` is returned.","lastModifiedDate":"2021-10-21"},{"lineNumber":274,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":275,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":276,"author":{"gitId":"ramapriyan912001"},"content":"The following sequence operation shows how the `deletegroup` operation works.","lastModifiedDate":"2021-10-21"},{"lineNumber":277,"author":{"gitId":"ramapriyan912001"},"content":"![DeleteGroupSequenceDiagram](images/DeleteGroupSequenceDiagram.png)","lastModifiedDate":"2021-10-21"},{"lineNumber":278,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":279,"author":{"gitId":"ramapriyan912001"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The lifeline for `DeleteGroupCommandParser` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2021-10-20"},{"lineNumber":280,"author":{"gitId":"ramapriyan912001"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-10-20"},{"lineNumber":281,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":282,"author":{"gitId":"ramapriyan912001"},"content":"#### Design considerations:","lastModifiedDate":"2021-10-20"},{"lineNumber":283,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":284,"author":{"gitId":"ramapriyan912001"},"content":"**Aspect: User command for deletegroup:**","lastModifiedDate":"2021-10-20"},{"lineNumber":285,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":286,"author":{"gitId":"ramapriyan912001"},"content":"* **Alternative 1 (current choice):** Delete based on `GroupName`","lastModifiedDate":"2021-10-20"},{"lineNumber":287,"author":{"gitId":"ramapriyan912001"},"content":"    * Pros: Easy to implement.","lastModifiedDate":"2021-10-20"},{"lineNumber":288,"author":{"gitId":"ramapriyan912001"},"content":"    * Pros: Difficult for user to make an erroneous command.","lastModifiedDate":"2021-10-20"},{"lineNumber":289,"author":{"gitId":"ramapriyan912001"},"content":"    * Cons: Long user command.  ","lastModifiedDate":"2021-10-20"},{"lineNumber":290,"author":{"gitId":"ramapriyan912001"},"content":"    * Cons: Requires imposition of constraint that group names are unique.","lastModifiedDate":"2021-10-20"},{"lineNumber":291,"author":{"gitId":"ramapriyan912001"},"content":"    ","lastModifiedDate":"2021-10-20"},{"lineNumber":292,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":293,"author":{"gitId":"ramapriyan912001"},"content":"* **Alternative 2 (index based):** Delete based on index position in `ObservableList`","lastModifiedDate":"2021-10-20"},{"lineNumber":294,"author":{"gitId":"ramapriyan912001"},"content":"    * Pros: Easy to implement.","lastModifiedDate":"2021-10-20"},{"lineNumber":295,"author":{"gitId":"ramapriyan912001"},"content":"    * Pros: Short user command  ","lastModifiedDate":"2021-10-20"},{"lineNumber":296,"author":{"gitId":"ramapriyan912001"},"content":"    * Cons: Unintuitive for user.","lastModifiedDate":"2021-10-20"},{"lineNumber":297,"author":{"gitId":"ramapriyan912001"},"content":"    * Cons: Easy for user to make an erroneous command.","lastModifiedDate":"2021-10-20"},{"lineNumber":298,"author":{"gitId":"ramapriyan912001"},"content":"    ","lastModifiedDate":"2021-10-20"},{"lineNumber":299,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":300,"author":{"gitId":"ramapriyan912001"},"content":"* **Justification**","lastModifiedDate":"2021-10-20"},{"lineNumber":301,"author":{"gitId":"ramapriyan912001"},"content":"    * Group contains large mass of information such as multiple expenses, individual expenditures, and payments.","lastModifiedDate":"2021-10-20"},{"lineNumber":302,"author":{"gitId":"ramapriyan912001"},"content":"    * This information is unrecoverable once deleted.","lastModifiedDate":"2021-10-20"},{"lineNumber":303,"author":{"gitId":"ramapriyan912001"},"content":"    * As such, it is better to choose Alternative 1, as this makes it difficult for user to accidentally delete a group.","lastModifiedDate":"2021-10-20"},{"lineNumber":304,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":305,"author":{"gitId":"ramapriyan912001"},"content":"**Aspect: Internal delete mechanism:**","lastModifiedDate":"2021-10-27"},{"lineNumber":306,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":307,"author":{"gitId":"ramapriyan912001"},"content":"* **Alternative 1 (current choice):** Retrieve group from list and delete","lastModifiedDate":"2021-10-27"},{"lineNumber":308,"author":{"gitId":"ramapriyan912001"},"content":"  * Pros: Easy to implement.","lastModifiedDate":"2021-10-27"},{"lineNumber":309,"author":{"gitId":"ramapriyan912001"},"content":"  * Pros: Easier to modify in future.","lastModifiedDate":"2021-10-27"},{"lineNumber":310,"author":{"gitId":"ramapriyan912001"},"content":"  * Cons: Extra step of retrieval leads to slower execution.","lastModifiedDate":"2021-10-27"},{"lineNumber":311,"author":{"gitId":"ramapriyan912001"},"content":"  ","lastModifiedDate":"2021-10-27"},{"lineNumber":312,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":313,"author":{"gitId":"ramapriyan912001"},"content":"* **Alternative 2 (name based):** Delete based on `GroupName`","lastModifiedDate":"2021-10-27"},{"lineNumber":314,"author":{"gitId":"ramapriyan912001"},"content":"  * Pros: Easy to implement.","lastModifiedDate":"2021-10-27"},{"lineNumber":315,"author":{"gitId":"ramapriyan912001"},"content":"  * Pros: Process is completed faster.","lastModifiedDate":"2021-10-27"},{"lineNumber":316,"author":{"gitId":"ramapriyan912001"},"content":"  * Cons: Might cause issues in case of future modifications.","lastModifiedDate":"2021-10-27"},{"lineNumber":317,"author":{"gitId":"ramapriyan912001"},"content":"  ","lastModifiedDate":"2021-10-27"},{"lineNumber":318,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":319,"author":{"gitId":"ramapriyan912001"},"content":"* **Justification**","lastModifiedDate":"2021-10-27"},{"lineNumber":320,"author":{"gitId":"ramapriyan912001"},"content":"  * Retrieving the group and subsequently deleting the group is a slower process.","lastModifiedDate":"2021-10-27"},{"lineNumber":321,"author":{"gitId":"ramapriyan912001"},"content":"  * However, the alternative implementation relies on the uniqueness of the `GroupName` field of `Group` objects.","lastModifiedDate":"2021-10-27"},{"lineNumber":322,"author":{"gitId":"ramapriyan912001"},"content":"  * Should we modify or remove the constraint, the alternative implementation would require significant alterations.","lastModifiedDate":"2021-10-27"},{"lineNumber":323,"author":{"gitId":"ramapriyan912001"},"content":"  * To make the feature more extendable, we choose alternative 1.","lastModifiedDate":"2021-10-27"},{"lineNumber":324,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":325,"author":{"gitId":"chrus-chong"},"content":"### Group Add Contact Feature","lastModifiedDate":"2021-10-29"},{"lineNumber":326,"author":{"gitId":"chrus-chong"},"content":"![GroupAddContactSequenceDiagram](images/GroupAddContactSequenceDiagram.png)","lastModifiedDate":"2021-10-29"},{"lineNumber":327,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":328,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":329,"author":{"gitId":"chrus-chong"},"content":"### Group Remove Contact Feature","lastModifiedDate":"2021-10-29"},{"lineNumber":330,"author":{"gitId":"chrus-chong"},"content":"![GroupRemoveContactSequenceDiagram](images/GroupRemoveContactSequenceDiagram.png)","lastModifiedDate":"2021-10-29"},{"lineNumber":331,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":332,"author":{"gitId":"chrus-chong"},"content":"### Group Add Tag Feature","lastModifiedDate":"2021-10-29"},{"lineNumber":333,"author":{"gitId":"chrus-chong"},"content":"![GroupAddTagSequenceDiagram](images/GroupAddTagSequenceDiagram.png)","lastModifiedDate":"2021-10-29"},{"lineNumber":334,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":335,"author":{"gitId":"chrus-chong"},"content":"### Group Remove Tag Feature","lastModifiedDate":"2021-10-29"},{"lineNumber":336,"author":{"gitId":"chrus-chong"},"content":"![GroupRemoveTagSequenceDiagram](images/GroupRemoveTagSequenceDiagram.png)","lastModifiedDate":"2021-10-29"},{"lineNumber":337,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":338,"author":{"gitId":"chrus-chong"},"content":"### Group Edit Name Feature","lastModifiedDate":"2021-10-29"},{"lineNumber":339,"author":{"gitId":"chrus-chong"},"content":"![GroupEditNameSequenceDiagram](images/GroupEditNameSequenceDiagram.png)","lastModifiedDate":"2021-10-29"},{"lineNumber":340,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":341,"author":{"gitId":"marcuspeh"},"content":"### Find group feature","lastModifiedDate":"2021-10-21"},{"lineNumber":342,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":343,"author":{"gitId":"marcuspeh"},"content":"The find group feature supports both single keyword and multi keyword search. This allows the displayed view panel to show the entries related to the search keywords entered by the user.","lastModifiedDate":"2021-10-22"},{"lineNumber":344,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":345,"author":{"gitId":"marcuspeh"},"content":"The following activity diagram shows what happens when a user executes a `findgroups` command:","lastModifiedDate":"2021-10-22"},{"lineNumber":346,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":347,"author":{"gitId":"marcuspeh"},"content":"\u003cimg src\u003d\"images/FindGroupsActivityDiagram.png\" width\u003d\"350\" /\u003e","lastModifiedDate":"2021-10-22"},{"lineNumber":348,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":349,"author":{"gitId":"marcuspeh"},"content":"Given below is an example usage scenario and how the `findgroup` operation behaves at each step:","lastModifiedDate":"2021-10-22"},{"lineNumber":350,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":351,"author":{"gitId":"marcuspeh"},"content":"Assuming the programs only have the initial data when the user first starts the app, the `FilteredList` should contain only 2 groups - London and Bali.","lastModifiedDate":"2021-10-22"},{"lineNumber":352,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":353,"author":{"gitId":"marcuspeh"},"content":"Step 1. When the user executes `findgroups London` command, the message is passed into `LogicManager` and parsed by `AddressBookParser`.","lastModifiedDate":"2021-10-22"},{"lineNumber":354,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":355,"author":{"gitId":"marcuspeh"},"content":"Step 2. `FindGroupsCommandParser` is created and the arguments are parsed by it. The arguments are used to create `GroupContainsKeywordsPredicate` and `FindGroupsCommand` is returned to the `LogicManager`.","lastModifiedDate":"2021-10-21"},{"lineNumber":356,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":357,"author":{"gitId":"marcuspeh"},"content":"Step 3. The `LogicManager` then calls `FindGroupCommand#execute(model)` method, which updated the `FilteredList\u003cGroup\u003e` in `ModelManager`. Thereafter, the `FilteredList\u003cGroup\u003e` should contains only London.","lastModifiedDate":"2021-10-22"},{"lineNumber":358,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":359,"author":{"gitId":"marcuspeh"},"content":"Step 4. The GUI listens for updates in the `FilteredList\u003cGroup\u003e` and updates the display to display London only.","lastModifiedDate":"2021-10-22"},{"lineNumber":360,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":361,"author":{"gitId":"marcuspeh"},"content":"Step 5. `CommandResult` is returned to the `LogicManager`, which also switches the view panel to `GroupsListPanel` if needed. See UI implementation below for more details of switching view panel.","lastModifiedDate":"2021-10-22"},{"lineNumber":362,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":363,"author":{"gitId":"marcuspeh"},"content":"Step 6. The output from `CommandResult` is then displayed as an output for the user.","lastModifiedDate":"2021-10-21"},{"lineNumber":364,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":365,"author":{"gitId":"marcuspeh"},"content":"The following sequence diagram shows how the `findgroups` operation works:","lastModifiedDate":"2021-10-22"},{"lineNumber":366,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":367,"author":{"gitId":"marcuspeh"},"content":"\u003cimg src\u003d\"images/FindGroupsSequenceDiagram.png\" width\u003d\"600\" /\u003e","lastModifiedDate":"2021-10-22"},{"lineNumber":368,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":369,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":370,"author":{"gitId":"kheekheekhee"},"content":"### Add expense feature","lastModifiedDate":"2021-10-21"},{"lineNumber":371,"author":{"gitId":"kheekheekhee"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":372,"author":{"gitId":"kheekheekhee"},"content":"The add expense mechanism is facilitated by defining an Expense model and adding an Expense List field to","lastModifiedDate":"2021-10-21"},{"lineNumber":373,"author":{"gitId":"kheekheekhee"},"content":"`AddressBook`. The Expense model contains a `Person` field containing the payer of the Expense, a `Cost` field","lastModifiedDate":"2021-10-21"},{"lineNumber":374,"author":{"gitId":"kheekheekhee"},"content":"containing the cost of the expense, a `List` of `Person` objects that keeps track of the people involved in the","lastModifiedDate":"2021-10-21"},{"lineNumber":375,"author":{"gitId":"kheekheekhee"},"content":"expense, a `HashMap` that contains details of how much each member has paid in total for the expense.","lastModifiedDate":"2021-10-21"},{"lineNumber":376,"author":{"gitId":"kheekheekhee"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":377,"author":{"gitId":"kheekheekhee"},"content":"The following activity diagram shows what happens when a user executes a `addexpense` command.","lastModifiedDate":"2021-10-21"},{"lineNumber":378,"author":{"gitId":"kheekheekhee"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":379,"author":{"gitId":"kheekheekhee"},"content":"![AddExpenseActivityDiagram](images/AddExpenseActivityDiagram.png)","lastModifiedDate":"2021-10-21"},{"lineNumber":380,"author":{"gitId":"kheekheekhee"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":381,"author":{"gitId":"kheekheekhee"},"content":"Given below is an example usage scenario and how the `addexpense` mechanism behaves at each step.","lastModifiedDate":"2021-10-21"},{"lineNumber":382,"author":{"gitId":"kheekheekhee"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":383,"author":{"gitId":"kheekheekhee"},"content":"Step 1. A valid `addexpense` command is given as user input. This prompts the `LogicManager` to run its execute()","lastModifiedDate":"2021-10-21"},{"lineNumber":384,"author":{"gitId":"kheekheekhee"},"content":"method.","lastModifiedDate":"2021-10-21"},{"lineNumber":385,"author":{"gitId":"kheekheekhee"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":386,"author":{"gitId":"kheekheekhee"},"content":"Step 2. The `AddExpenseCommandParser` parses the input and checks for presence of the relevant prefixes.","lastModifiedDate":"2021-10-21"},{"lineNumber":387,"author":{"gitId":"kheekheekhee"},"content":"It also checks that the group name is valid and all members specified are in the specified group.","lastModifiedDate":"2021-10-21"},{"lineNumber":388,"author":{"gitId":"kheekheekhee"},"content":"It returns a `AddExpenseCommand`.","lastModifiedDate":"2021-10-21"},{"lineNumber":389,"author":{"gitId":"kheekheekhee"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":390,"author":{"gitId":"kheekheekhee"},"content":"Step 3. `AddExpenseCommand` runs its execute() method which adds the newly created expense involving the into the","lastModifiedDate":"2021-10-21"},{"lineNumber":391,"author":{"gitId":"kheekheekhee"},"content":"relevant group members into the group and the group is updated in the AWE model.Upon successful execution,","lastModifiedDate":"2021-10-21"},{"lineNumber":392,"author":{"gitId":"kheekheekhee"},"content":"`CommandResult` is returned.","lastModifiedDate":"2021-10-21"},{"lineNumber":393,"author":{"gitId":"kheekheekhee"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":394,"author":{"gitId":"kheekheekhee"},"content":"The following sequence operation shows how the `addexpense` operation works.","lastModifiedDate":"2021-10-21"},{"lineNumber":395,"author":{"gitId":"kheekheekhee"},"content":"![AddExpenseSequenceDiagram](images/AddExpenseSequenceDiagram.png)","lastModifiedDate":"2021-10-21"},{"lineNumber":396,"author":{"gitId":"kheekheekhee"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":397,"author":{"gitId":"kheekheekhee"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The lifeline for `AddExpenseCommandParser`","lastModifiedDate":"2021-10-21"},{"lineNumber":398,"author":{"gitId":"kheekheekhee"},"content":"should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2021-10-21"},{"lineNumber":399,"author":{"gitId":"kheekheekhee"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-10-21"},{"lineNumber":400,"author":{"gitId":"kheekheekhee"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":401,"author":{"gitId":"kheekheekhee"},"content":"#### Design considerations:","lastModifiedDate":"2021-10-21"},{"lineNumber":402,"author":{"gitId":"kheekheekhee"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":403,"author":{"gitId":"kheekheekhee"},"content":"**Aspect: User command for `addexpense`:**","lastModifiedDate":"2021-10-21"},{"lineNumber":404,"author":{"gitId":"kheekheekhee"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":405,"author":{"gitId":"kheekheekhee"},"content":"* **Alternative 1 (current choice):** Create Expense with specified group and group members.","lastModifiedDate":"2021-10-21"},{"lineNumber":406,"author":{"gitId":"kheekheekhee"},"content":"    * Pros: Intuitive for user to create an expense with specified group and group members via their names.","lastModifiedDate":"2021-10-21"},{"lineNumber":407,"author":{"gitId":"kheekheekhee"},"content":"    * Pros: Provides user with convenience of creating an expense with minimal input.","lastModifiedDate":"2021-10-21"},{"lineNumber":408,"author":{"gitId":"kheekheekhee"},"content":"    * Cons: Harder to implement.","lastModifiedDate":"2021-10-21"},{"lineNumber":409,"author":{"gitId":"kheekheekhee"},"content":"    * Cons: Easier for user to make an erroneous command.","lastModifiedDate":"2021-10-21"},{"lineNumber":410,"author":{"gitId":"kheekheekhee"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":411,"author":{"gitId":"kheekheekhee"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":412,"author":{"gitId":"kheekheekhee"},"content":"* **Alternative 2 (index based):** Create Expense with based on index position in `ObservableList`.","lastModifiedDate":"2021-10-21"},{"lineNumber":413,"author":{"gitId":"kheekheekhee"},"content":"    * Pros: Easy to implement.","lastModifiedDate":"2021-10-21"},{"lineNumber":414,"author":{"gitId":"kheekheekhee"},"content":"    * Cons: Inconvenient for user to add an expense as they have to check again the index of both the person and group.","lastModifiedDate":"2021-10-21"},{"lineNumber":415,"author":{"gitId":"kheekheekhee"},"content":"    * Cons: Easy for user to make an erroneous command.","lastModifiedDate":"2021-10-21"},{"lineNumber":416,"author":{"gitId":"kheekheekhee"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":417,"author":{"gitId":"kheekheekhee"},"content":"* **Justification**","lastModifiedDate":"2021-10-21"},{"lineNumber":418,"author":{"gitId":"kheekheekhee"},"content":"    * Each person has a unique name and the implementation for adding an expense based on a person\u0027s and group\u0027s ","lastModifiedDate":"2021-10-21"},{"lineNumber":419,"author":{"gitId":"kheekheekhee"},"content":"      name is simple.","lastModifiedDate":"2021-10-21"},{"lineNumber":420,"author":{"gitId":"kheekheekhee"},"content":"    * Users may need a long time to find the index of a person or group if the list of either is very long.","lastModifiedDate":"2021-10-21"},{"lineNumber":421,"author":{"gitId":"kheekheekhee"},"content":"    * Hence, adding expenses based on the specified person and group name is more appropriate.","lastModifiedDate":"2021-10-21"},{"lineNumber":422,"author":{"gitId":"kheekheekhee"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":423,"author":{"gitId":"Jingwencloud"},"content":"### Find Expenses Feature","lastModifiedDate":"2021-10-21"},{"lineNumber":424,"author":{"gitId":"Jingwencloud"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":425,"author":{"gitId":"Jingwencloud"},"content":"The find expenses mechanism is facilitated by `Group`. Each group has a unique group name and also an expense list ","lastModifiedDate":"2021-10-21"},{"lineNumber":426,"author":{"gitId":"Jingwencloud"},"content":"required for finding expenses within a group.","lastModifiedDate":"2021-10-21"},{"lineNumber":427,"author":{"gitId":"Jingwencloud"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":428,"author":{"gitId":"Jingwencloud"},"content":"The following activity diagram shows what happens when a user executes a `findexpenses` command.","lastModifiedDate":"2021-10-21"},{"lineNumber":429,"author":{"gitId":"Jingwencloud"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":430,"author":{"gitId":"Jingwencloud"},"content":"![FindExpensesActivityDiagram](images/FindExpensesActivityDiagram.png)","lastModifiedDate":"2021-10-21"},{"lineNumber":431,"author":{"gitId":"Jingwencloud"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":432,"author":{"gitId":"Jingwencloud"},"content":"Given below is an example usage scenario and how the `findexpenses` mechanism behaves at each step.","lastModifiedDate":"2021-10-21"},{"lineNumber":433,"author":{"gitId":"Jingwencloud"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":434,"author":{"gitId":"Jingwencloud"},"content":"Step 1. The user executes a valid `findexpenses eat gn/London` command. This prompts the `LogicManager` ","lastModifiedDate":"2021-10-21"},{"lineNumber":435,"author":{"gitId":"Jingwencloud"},"content":"to run its execute() method.","lastModifiedDate":"2021-10-21"},{"lineNumber":436,"author":{"gitId":"Jingwencloud"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":437,"author":{"gitId":"Jingwencloud"},"content":"Step 2. The `FindExpensesCommandParser` parses the input and checks for presence of the group name prefix.","lastModifiedDate":"2021-10-21"},{"lineNumber":438,"author":{"gitId":"Jingwencloud"},"content":"It also checks that the group name is valid (does not have any non-alphanumeric characters). The arguments are ","lastModifiedDate":"2021-10-21"},{"lineNumber":439,"author":{"gitId":"Jingwencloud"},"content":"used to create `DescriptionContainsKeywordsPredicate` and `FindExpensesCommand` is returned to the `LogicManager`.","lastModifiedDate":"2021-10-21"},{"lineNumber":440,"author":{"gitId":"Jingwencloud"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":441,"author":{"gitId":"Jingwencloud"},"content":"Step 3. The `LogicManager` then calls `FindExpensesCommand#execute(model)` method, which updates the ","lastModifiedDate":"2021-10-21"},{"lineNumber":442,"author":{"gitId":"Jingwencloud"},"content":"`FilteredList\u003cExpense\u003e` in `ModelManager` using the predicate created in step 2.","lastModifiedDate":"2021-10-21"},{"lineNumber":443,"author":{"gitId":"Jingwencloud"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":444,"author":{"gitId":"Jingwencloud"},"content":"Step 4. The GUI listens for updates in the `FilteredList\u003cExpense\u003e` and updates the display accordingly.","lastModifiedDate":"2021-10-21"},{"lineNumber":445,"author":{"gitId":"Jingwencloud"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":446,"author":{"gitId":"Jingwencloud"},"content":"Step 5. `CommandResult` is returned to the `LogicManager`, which also switches the viewpanel to `ExpensesListPanel` if needed.","lastModifiedDate":"2021-10-21"},{"lineNumber":447,"author":{"gitId":"Jingwencloud"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":448,"author":{"gitId":"Jingwencloud"},"content":"Step 6. The output from `CommandResult` is then displayed as an output for the user.","lastModifiedDate":"2021-10-21"},{"lineNumber":449,"author":{"gitId":"Jingwencloud"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":450,"author":{"gitId":"Jingwencloud"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":451,"author":{"gitId":"Jingwencloud"},"content":"The following sequence operation shows how the `findexpenses` operation works.","lastModifiedDate":"2021-10-21"},{"lineNumber":452,"author":{"gitId":"Jingwencloud"},"content":"![FindExpensesSequenceDiagram](images/FindExpensesSequenceDiagram.png)","lastModifiedDate":"2021-10-21"},{"lineNumber":453,"author":{"gitId":"Jingwencloud"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":454,"author":{"gitId":"Jingwencloud"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The lifeline for `DeleteGroupCommandParser` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2021-10-21"},{"lineNumber":455,"author":{"gitId":"Jingwencloud"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-10-21"},{"lineNumber":456,"author":{"gitId":"Jingwencloud"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":457,"author":{"gitId":"Jingwencloud"},"content":"#### Design considerations:","lastModifiedDate":"2021-10-21"},{"lineNumber":458,"author":{"gitId":"Jingwencloud"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":459,"author":{"gitId":"Jingwencloud"},"content":"**Aspect: User command for findexpenses:**","lastModifiedDate":"2021-10-21"},{"lineNumber":460,"author":{"gitId":"Jingwencloud"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":461,"author":{"gitId":"Jingwencloud"},"content":"* **Alternative 1 (current choice):** Find based on `GroupName`","lastModifiedDate":"2021-10-21"},{"lineNumber":462,"author":{"gitId":"Jingwencloud"},"content":"    * Pros: Easy to implement.","lastModifiedDate":"2021-10-21"},{"lineNumber":463,"author":{"gitId":"Jingwencloud"},"content":"    * Cons: Long user command if group name is long.","lastModifiedDate":"2021-10-21"},{"lineNumber":464,"author":{"gitId":"Jingwencloud"},"content":"    * Cons: Requires imposition of constraint that group names are unique.","lastModifiedDate":"2021-10-21"},{"lineNumber":465,"author":{"gitId":"Jingwencloud"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":466,"author":{"gitId":"Jingwencloud"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":467,"author":{"gitId":"Jingwencloud"},"content":"* **Alternative 2 (index based):** Find expenses in the group indicated by index position in `ObservableList`","lastModifiedDate":"2021-10-21"},{"lineNumber":468,"author":{"gitId":"Jingwencloud"},"content":"    * Pros: Short user command with just the index.","lastModifiedDate":"2021-10-21"},{"lineNumber":469,"author":{"gitId":"Jingwencloud"},"content":"    * Cons: User need to check for the right index of the group.","lastModifiedDate":"2021-10-21"},{"lineNumber":470,"author":{"gitId":"Jingwencloud"},"content":"    * Cons: Easy for user to make an erroneous command.","lastModifiedDate":"2021-10-21"},{"lineNumber":471,"author":{"gitId":"Jingwencloud"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":472,"author":{"gitId":"Jingwencloud"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":473,"author":{"gitId":"Jingwencloud"},"content":"* **Justification**","lastModifiedDate":"2021-10-21"},{"lineNumber":474,"author":{"gitId":"Jingwencloud"},"content":"    * Each group has a unique name and the implementation for finding a group based on the group name is simple. ","lastModifiedDate":"2021-10-21"},{"lineNumber":475,"author":{"gitId":"Jingwencloud"},"content":"    * Users may need a long time to find the index of a group if the list of groups is very long.","lastModifiedDate":"2021-10-21"},{"lineNumber":476,"author":{"gitId":"Jingwencloud"},"content":"    * Hence, finding expenses based on the specified group name is more appropriate.","lastModifiedDate":"2021-10-21"},{"lineNumber":477,"author":{"gitId":"Jingwencloud"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":478,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":479,"author":{"gitId":"ramapriyan912001"},"content":"### Delete Expense Feature","lastModifiedDate":"2021-10-25"},{"lineNumber":480,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":481,"author":{"gitId":"ramapriyan912001"},"content":"The delete expense mechanism is facilitated by the addition of an `ExpenseList` field within the `AddressBook` object maintained by the model.","lastModifiedDate":"2021-10-25"},{"lineNumber":482,"author":{"gitId":"ramapriyan912001"},"content":"Each `Expense` belongs to a `Group` object, also maintained within the `AddressBook`.","lastModifiedDate":"2021-10-25"},{"lineNumber":483,"author":{"gitId":"ramapriyan912001"},"content":"Deletion of an expense must be accompanied by deletion of the expense from the `Group` object to which it belongs.","lastModifiedDate":"2021-10-25"},{"lineNumber":484,"author":{"gitId":"ramapriyan912001"},"content":"The command allows the user to delete an expense based on the index position of the expense in the page viewed by the user.","lastModifiedDate":"2021-10-25"},{"lineNumber":485,"author":{"gitId":"ramapriyan912001"},"content":"This means that the user is constrained to only being permitted to delete expenses when they are viewing a list of expenses; that is, after they enter the `findexpenses` or `expenses` command.","lastModifiedDate":"2021-10-25"},{"lineNumber":486,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":487,"author":{"gitId":"ramapriyan912001"},"content":"The following activity diagram shows what happens when a user executes a `deleteexpense` command.","lastModifiedDate":"2021-10-25"},{"lineNumber":488,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":489,"author":{"gitId":"ramapriyan912001"},"content":"![DeleteExpenseActivityDiagram](images/DeleteExpenseActivityDiagram.png)","lastModifiedDate":"2021-10-25"},{"lineNumber":490,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":491,"author":{"gitId":"ramapriyan912001"},"content":"Given below is an example usage scenario and how the `deleteexpense` mechanism behaves at each step.","lastModifiedDate":"2021-10-25"},{"lineNumber":492,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":493,"author":{"gitId":"ramapriyan912001"},"content":"Step 1. A valid `deleteexpense` command is given as user input. This prompts the `LogicManager` to run its execute()","lastModifiedDate":"2021-10-25"},{"lineNumber":494,"author":{"gitId":"ramapriyan912001"},"content":"method.","lastModifiedDate":"2021-10-25"},{"lineNumber":495,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":496,"author":{"gitId":"ramapriyan912001"},"content":"Step 2. The `DeleteExpenseCommandParser` parses the input and checks for presence of the `INDEX` input.","lastModifiedDate":"2021-10-25"},{"lineNumber":497,"author":{"gitId":"ramapriyan912001"},"content":"It returns a `DeleteExpenseCommand`.","lastModifiedDate":"2021-10-25"},{"lineNumber":498,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":499,"author":{"gitId":"ramapriyan912001"},"content":"Step 3. `DeleteExpenseCommand` runs its execute() method which checks if the `INDEX` entered is within the range of the size of the list of expneses seen by the user.","lastModifiedDate":"2021-10-26"},{"lineNumber":500,"author":{"gitId":"ramapriyan912001"},"content":"If so, the `Expense` at the `INDEX` position is deleted from the `ExpenseList`. The `ObservableList` within `ExpenseList` is updated, meaniing the UI updates and the user can see the new list of expenses, without the deleted expense.","lastModifiedDate":"2021-10-26"},{"lineNumber":501,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":502,"author":{"gitId":"ramapriyan912001"},"content":"Step 4. The `Group` to which this expense belongs is retrieved from the `ExpenseList`.","lastModifiedDate":"2021-10-26"},{"lineNumber":503,"author":{"gitId":"ramapriyan912001"},"content":"The expense is subsequently deleted from the `expenses` field present in the `Group` object.","lastModifiedDate":"2021-10-26"},{"lineNumber":504,"author":{"gitId":"ramapriyan912001"},"content":"The updated `Group` is then placed back into the `GroupList` within the `AddressBook`.","lastModifiedDate":"2021-10-26"},{"lineNumber":505,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":506,"author":{"gitId":"ramapriyan912001"},"content":"Step 5: Upon successful execution, `CommandResult` is returned.","lastModifiedDate":"2021-10-26"},{"lineNumber":507,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":508,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":509,"author":{"gitId":"ramapriyan912001"},"content":"The following sequence operation shows how the `deleteexpense` operation works.","lastModifiedDate":"2021-10-25"},{"lineNumber":510,"author":{"gitId":"ramapriyan912001"},"content":"![DeleteExpenseSequenceDiagram](images/DeleteExpenseSequenceDiagram.png)","lastModifiedDate":"2021-10-25"},{"lineNumber":511,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":512,"author":{"gitId":"ramapriyan912001"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The lifeline for `DeleteExpenseCommandParser` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2021-10-25"},{"lineNumber":513,"author":{"gitId":"ramapriyan912001"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-10-25"},{"lineNumber":514,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":515,"author":{"gitId":"ramapriyan912001"},"content":"#### Design considerations","lastModifiedDate":"2021-10-25"},{"lineNumber":516,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":517,"author":{"gitId":"ramapriyan912001"},"content":"**Aspect: User command for deleteexpense:**","lastModifiedDate":"2021-10-26"},{"lineNumber":518,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":519,"author":{"gitId":"ramapriyan912001"},"content":"* **Alternative 1 (current choice):** Delete based on index position in `ObservableList`","lastModifiedDate":"2021-10-25"},{"lineNumber":520,"author":{"gitId":"ramapriyan912001"},"content":"    * Pros: Easy to implement.","lastModifiedDate":"2021-10-25"},{"lineNumber":521,"author":{"gitId":"ramapriyan912001"},"content":"    * Pros: Short user command.","lastModifiedDate":"2021-10-25"},{"lineNumber":522,"author":{"gitId":"ramapriyan912001"},"content":"    * Cons: Less intuitive for user.","lastModifiedDate":"2021-10-25"},{"lineNumber":523,"author":{"gitId":"ramapriyan912001"},"content":"    * Cons: Easy for user to make an erroneous command.","lastModifiedDate":"2021-10-25"},{"lineNumber":524,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":525,"author":{"gitId":"ramapriyan912001"},"content":"* **Alternative 2 (description based):** Delete based on `description`","lastModifiedDate":"2021-10-25"},{"lineNumber":526,"author":{"gitId":"ramapriyan912001"},"content":"    * Pros: Easy to implement.","lastModifiedDate":"2021-10-25"},{"lineNumber":527,"author":{"gitId":"ramapriyan912001"},"content":"    * Pros: Difficult for user to make an erroneous command.","lastModifiedDate":"2021-10-25"},{"lineNumber":528,"author":{"gitId":"ramapriyan912001"},"content":"    * Cons: Long user command.","lastModifiedDate":"2021-10-25"},{"lineNumber":529,"author":{"gitId":"ramapriyan912001"},"content":"    * Cons: Requires imposition of constraint that expense description names are unique.","lastModifiedDate":"2021-10-25"},{"lineNumber":530,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":531,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":532,"author":{"gitId":"ramapriyan912001"},"content":"* **Justification**","lastModifiedDate":"2021-10-25"},{"lineNumber":533,"author":{"gitId":"ramapriyan912001"},"content":"    * Expenses, unlike Groups, do not contain a large volume of information.","lastModifiedDate":"2021-10-25"},{"lineNumber":534,"author":{"gitId":"ramapriyan912001"},"content":"    * This information is unrecoverable once deleted.","lastModifiedDate":"2021-10-25"},{"lineNumber":535,"author":{"gitId":"ramapriyan912001"},"content":"    * However, the damage to a user as a result of an error is not significant. The user can re-enter the details with a single command.","lastModifiedDate":"2021-10-25"},{"lineNumber":536,"author":{"gitId":"ramapriyan912001"},"content":"    * Therefore, the need to protect the user from erroneous decisions is not significant.","lastModifiedDate":"2021-10-25"},{"lineNumber":537,"author":{"gitId":"ramapriyan912001"},"content":"    * Furthermore, many expenses are likely to have similar descriptions. Constraining users to using unique descriptions for expenses is likely to compromise the user experience.","lastModifiedDate":"2021-10-25"},{"lineNumber":538,"author":{"gitId":"ramapriyan912001"},"content":"    * As such, it is better to choose Alternative 1, as this allows the user to quickly delete expenses, and not compromise on the flexibility of the user.","lastModifiedDate":"2021-10-25"},{"lineNumber":539,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":540,"author":{"gitId":"ramapriyan912001"},"content":"### Calculate Payments Feature","lastModifiedDate":"2021-10-25"},{"lineNumber":541,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":542,"author":{"gitId":"ramapriyan912001"},"content":"The purpose of this feature is to provide users with a simple set of transactions that would allow all debts within the group to be settled.","lastModifiedDate":"2021-10-25"},{"lineNumber":543,"author":{"gitId":"ramapriyan912001"},"content":"The UI mechanism is facilitated by the addition of a `PaymentList` field of `Payment` objects, present within the `AddressBook` object maintained by the model.","lastModifiedDate":"2021-10-26"},{"lineNumber":544,"author":{"gitId":"ramapriyan912001"},"content":"The functionality of this feature is facilitated by the fact that group objects maintain two hashmaps: -","lastModifiedDate":"2021-10-26"},{"lineNumber":545,"author":{"gitId":"ramapriyan912001"},"content":"* `paidByPayers`, which maintains how much each member of the group has paid (total payments) during the course of the trip.","lastModifiedDate":"2021-10-26"},{"lineNumber":546,"author":{"gitId":"ramapriyan912001"},"content":"* `splitExpenses`, which maintains how much expenditure each member of the group has incurred (total expenditure) during the course of the trip.","lastModifiedDate":"2021-10-26"},{"lineNumber":547,"author":{"gitId":"ramapriyan912001"},"content":"These maps allow calculations with respect to how much each individual is owed, and how much each individual owes.","lastModifiedDate":"2021-10-26"},{"lineNumber":548,"author":{"gitId":"ramapriyan912001"},"content":"  ","lastModifiedDate":"2021-10-26"},{"lineNumber":549,"author":{"gitId":"ramapriyan912001"},"content":"#### The Algorithm","lastModifiedDate":"2021-10-26"},{"lineNumber":550,"author":{"gitId":"ramapriyan912001"},"content":"The invariant maintained is that the sum of all payments made (values within `paidByPayers`) should equal the total expenditures incurred by the group (values within `splitExpenses`).","lastModifiedDate":"2021-10-25"},{"lineNumber":551,"author":{"gitId":"ramapriyan912001"},"content":"Define surplus as the net amount each individual is owed by others. This ultimately means that some members have negative surplus, and some have positive surplus.","lastModifiedDate":"2021-10-26"},{"lineNumber":552,"author":{"gitId":"ramapriyan912001"},"content":"The goal is to ensure that the deficits balance the surpluses with the minimum number of transactions.","lastModifiedDate":"2021-10-26"},{"lineNumber":553,"author":{"gitId":"ramapriyan912001"},"content":"To assist with the tracking of each individual and their surplus, an inner `Pair` class was created with a `Person` field and a primitive double field for the surplus.","lastModifiedDate":"2021-10-26"},{"lineNumber":554,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":555,"author":{"gitId":"ramapriyan912001"},"content":"* Initialise an empty list of Pairs and an empty list of `Payment` objects.","lastModifiedDate":"2021-10-27"},{"lineNumber":556,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":557,"author":{"gitId":"ramapriyan912001"},"content":"* Iterate through the `members` of the group and retrieve each individual\u0027s total payments and total expenditures.","lastModifiedDate":"2021-10-27"},{"lineNumber":558,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":559,"author":{"gitId":"ramapriyan912001"},"content":"* Calculate the surplus of each individual by subtracting their total expenditures from their total payments.","lastModifiedDate":"2021-10-27"},{"lineNumber":560,"author":{"gitId":"ramapriyan912001"},"content":"Initialise a `Pair` object with the `Person` object of the individual, and their surplus. Add this pair to the list if the surplus is not 0.","lastModifiedDate":"2021-10-27"},{"lineNumber":561,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":562,"author":{"gitId":"ramapriyan912001"},"content":"* Iterate until the list is empty and perform the following steps.","lastModifiedDate":"2021-10-26"},{"lineNumber":563,"author":{"gitId":"ramapriyan912001"},"content":"  * Sort the list in ascending order of surplus. This means that those who owe more are placed in the earlier part of the list and those who are owed more are placed towards the end of the `Pair` list.","lastModifiedDate":"2021-10-26"},{"lineNumber":564,"author":{"gitId":"ramapriyan912001"},"content":"  * Retrieve the first `Pair` and last `Pair` in the list. It is invariant that the first pair will have negative surplus and the last pair will have positive surplus.","lastModifiedDate":"2021-10-26"},{"lineNumber":565,"author":{"gitId":"ramapriyan912001"},"content":"  * Check to see which pair has a smaller magnitude. Define this value to be `SMALL_VAL`.","lastModifiedDate":"2021-10-26"},{"lineNumber":566,"author":{"gitId":"ramapriyan912001"},"content":"  * Create a `Payment` object with a `Cost` of `SMALL_VAL`, and payee and payer as the two individuals within the first pair and last pair retrieved respectively. Add this `Payment` object to the list of `Payment` objects.","lastModifiedDate":"2021-10-27"},{"lineNumber":567,"author":{"gitId":"ramapriyan912001"},"content":"  * If the pairs do not have equal magnitude, remove the pair with the surplus value of smaller magnitude from the list. Calculate the new surplus value of the other pair to be the sum of the surpluses of both pairs. Update the other pair with this new surplus value and place it back into the list.","lastModifiedDate":"2021-10-26"},{"lineNumber":568,"author":{"gitId":"ramapriyan912001"},"content":"  * If the pairs do have equal magnitude, remove both pairs from the list.","lastModifiedDate":"2021-10-26"},{"lineNumber":569,"author":{"gitId":"ramapriyan912001"},"content":"  ","lastModifiedDate":"2021-10-26"},{"lineNumber":570,"author":{"gitId":"ramapriyan912001"},"content":"* Return the list of `Payment` objects.","lastModifiedDate":"2021-10-26"},{"lineNumber":571,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":572,"author":{"gitId":"ramapriyan912001"},"content":"The following diagram shows the flow of the algorithm.","lastModifiedDate":"2021-10-27"},{"lineNumber":573,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":574,"author":{"gitId":"ramapriyan912001"},"content":"![CalculatePaymentsAlgorithmDiagram](images/CalculatePaymentsCommandAlgorithmDiagram.png)","lastModifiedDate":"2021-10-27"},{"lineNumber":575,"author":{"gitId":"ramapriyan912001"},"content":"  ","lastModifiedDate":"2021-10-27"},{"lineNumber":576,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":577,"author":{"gitId":"ramapriyan912001"},"content":"The following activity diagram shows what happens when a user executes a `calculatepayments` command.","lastModifiedDate":"2021-10-25"},{"lineNumber":578,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":579,"author":{"gitId":"ramapriyan912001"},"content":"![CalculatePaymentsActivityDiagram](images/CalculatePaymentsActivityDiagram.png)","lastModifiedDate":"2021-10-25"},{"lineNumber":580,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":581,"author":{"gitId":"ramapriyan912001"},"content":"Given below is an example usage scenario and how the `calculatepayments` mechanism behaves at each step.","lastModifiedDate":"2021-10-25"},{"lineNumber":582,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":583,"author":{"gitId":"ramapriyan912001"},"content":"Step 1. A valid `calculatepayments` command is given as user input. This prompts the `LogicManager` to run its execute()","lastModifiedDate":"2021-10-26"},{"lineNumber":584,"author":{"gitId":"ramapriyan912001"},"content":"method.","lastModifiedDate":"2021-10-25"},{"lineNumber":585,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":586,"author":{"gitId":"ramapriyan912001"},"content":"Step 2. The `CalculatePaymentsCommandParser` parses the input and checks for presence of the `GROUP_NAME` prefix.","lastModifiedDate":"2021-10-26"},{"lineNumber":587,"author":{"gitId":"ramapriyan912001"},"content":"It checks that the `GROUP_NAME` is valid (does not have any non-alphanumeric characters).","lastModifiedDate":"2021-10-26"},{"lineNumber":588,"author":{"gitId":"ramapriyan912001"},"content":"It returns a `CalculatePaymentsCommand`.","lastModifiedDate":"2021-10-25"},{"lineNumber":589,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":590,"author":{"gitId":"ramapriyan912001"},"content":"Step 3. `CalculatePaymentsCommand` runs its execute() method which checks if a group with the `GROUP_NAME` entered by the user has been","lastModifiedDate":"2021-10-25"},{"lineNumber":591,"author":{"gitId":"ramapriyan912001"},"content":"created in the past. If so, this group is retrieved from the model.","lastModifiedDate":"2021-10-26"},{"lineNumber":592,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":593,"author":{"gitId":"ramapriyan912001"},"content":"Step 4. Subsequently, the **Algorithm** is used to tabulate a list of `Payment` objects.","lastModifiedDate":"2021-10-26"},{"lineNumber":594,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":595,"author":{"gitId":"ramapriyan912001"},"content":"Step 5. The `PaymentList` field is updated with the generated list of payments, triggering a change in the UI to show the user the list of payments.","lastModifiedDate":"2021-10-26"},{"lineNumber":596,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":597,"author":{"gitId":"ramapriyan912001"},"content":"Step 6. Upon successful execution, `CommandResult` is returned.","lastModifiedDate":"2021-10-26"},{"lineNumber":598,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":599,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":600,"author":{"gitId":"ramapriyan912001"},"content":"The following sequence operation shows how the `calculatepayments` operation works.","lastModifiedDate":"2021-10-25"},{"lineNumber":601,"author":{"gitId":"ramapriyan912001"},"content":"![DeleteExpenseSequenceDiagram](images/CalculatePaymentsSequenceDiagram.png)","lastModifiedDate":"2021-10-25"},{"lineNumber":602,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":603,"author":{"gitId":"ramapriyan912001"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The lifeline for `CalculatePaymentsCommandParser` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2021-10-25"},{"lineNumber":604,"author":{"gitId":"ramapriyan912001"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-10-25"},{"lineNumber":605,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":606,"author":{"gitId":"ramapriyan912001"},"content":"**Note: When a `Person` is deleted from contacts or removed from the group, the functioning of this command does not change. The deleted person may still be part of the list of payments depending on the expenses they had previously.**","lastModifiedDate":"2021-10-30"},{"lineNumber":607,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":608,"author":{"gitId":"ramapriyan912001"},"content":"#### Design considerations","lastModifiedDate":"2021-10-25"},{"lineNumber":609,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":610,"author":{"gitId":"ramapriyan912001"},"content":"**Aspect: Algorithm utilised for calculatepayments:**","lastModifiedDate":"2021-10-26"},{"lineNumber":611,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":612,"author":{"gitId":"ramapriyan912001"},"content":"* **Alternative 1 (current choice):** Prioritise settling of bigger debts ","lastModifiedDate":"2021-10-26"},{"lineNumber":613,"author":{"gitId":"ramapriyan912001"},"content":"    * Pros: Easy to implement.","lastModifiedDate":"2021-10-25"},{"lineNumber":614,"author":{"gitId":"ramapriyan912001"},"content":"    * Pros: Smaller number of transactions.","lastModifiedDate":"2021-10-26"},{"lineNumber":615,"author":{"gitId":"ramapriyan912001"},"content":"    * Cons: Larger value transactions.","lastModifiedDate":"2021-10-26"},{"lineNumber":616,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":617,"author":{"gitId":"ramapriyan912001"},"content":"* **Alternative 2:** Prioritise settling of smaller debts","lastModifiedDate":"2021-10-26"},{"lineNumber":618,"author":{"gitId":"ramapriyan912001"},"content":"    * Pros: Smaller value transactions.","lastModifiedDate":"2021-10-26"},{"lineNumber":619,"author":{"gitId":"ramapriyan912001"},"content":"    * Cons: Greater number of transactions.","lastModifiedDate":"2021-10-26"},{"lineNumber":620,"author":{"gitId":"ramapriyan912001"},"content":"    * Cons: More difficult to implement.","lastModifiedDate":"2021-10-26"},{"lineNumber":621,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":622,"author":{"gitId":"ramapriyan912001"},"content":"* **Justification**","lastModifiedDate":"2021-10-25"},{"lineNumber":623,"author":{"gitId":"ramapriyan912001"},"content":"    * The size of the transaction matters less to the user than the volume of transactions.","lastModifiedDate":"2021-10-26"},{"lineNumber":624,"author":{"gitId":"ramapriyan912001"},"content":"    * Moreover, an easier implementation reduces the possibility of bugs.","lastModifiedDate":"2021-10-26"},{"lineNumber":625,"author":{"gitId":"ramapriyan912001"},"content":"    * As such, we chose to prioritise the settling of bigger debts in our algorithm.","lastModifiedDate":"2021-10-26"},{"lineNumber":626,"author":{"gitId":"ramapriyan912001"},"content":"  ","lastModifiedDate":"2021-10-25"},{"lineNumber":627,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":628,"author":{"gitId":"marcuspeh"},"content":"### UI Display","lastModifiedDate":"2021-10-22"},{"lineNumber":629,"author":{"gitId":"marcuspeh"},"content":"AWE has multiple lists / views to display such as for `groups`, `contacts` and `expenses`.","lastModifiedDate":"2021-10-22"},{"lineNumber":630,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":631,"author":{"gitId":"marcuspeh"},"content":"The display, called view panel, will only be able to show up 1 view at a time depending on the command. It is of upmost importance to get it to display the correct view.","lastModifiedDate":"2021-10-28"},{"lineNumber":632,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":633,"author":{"gitId":"marcuspeh"},"content":"To achieve the toggling between each view panels, we implemented the following:","lastModifiedDate":"2021-10-22"},{"lineNumber":634,"author":{"gitId":"marcuspeh"},"content":"* An enumeration `UiView` to contain the following `CONTACT_PAGE`, `GROUP_PAGE`, `EXPENSE_PAGE`, `TRANSACTION_SUMMARY`, `PAYMENT_PAGE`. Each enum represents a different view.","lastModifiedDate":"2021-10-22"},{"lineNumber":635,"author":{"gitId":"marcuspeh"},"content":"* `CommandResult` was given 6 more boolean fields, each representing a different view as well.","lastModifiedDate":"2021-10-22"},{"lineNumber":636,"author":{"gitId":"marcuspeh"},"content":"* `MainWindow` checks for the 6 boolean fields in `CommandResult` and passes `UiView` to `ViewPanel` for toggling the view.","lastModifiedDate":"2021-10-22"},{"lineNumber":637,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":638,"author":{"gitId":"marcuspeh"},"content":"The following activity diagram shows how the `MainWindow` checks and sends the `UiView` to `ViewPanel`. ","lastModifiedDate":"2021-10-22"},{"lineNumber":639,"author":{"gitId":"marcuspeh"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-10-28"},{"lineNumber":640,"author":{"gitId":"marcuspeh"},"content":"\u003cimg src\u003d\"images/UiTogglingActivityDiagram.png\" width\u003d\"500\" /\u003e","lastModifiedDate":"2021-10-22"},{"lineNumber":641,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":642,"author":{"gitId":"marcuspeh"},"content":"#### Proposed Implementation","lastModifiedDate":"2021-10-22"},{"lineNumber":643,"author":{"gitId":"marcuspeh"},"content":"**Aspect: Navigating between different view**","lastModifiedDate":"2021-10-22"},{"lineNumber":644,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":645,"author":{"gitId":"marcuspeh"},"content":"* **Alternative 1**: Make use of JavaFx\u0027s tab","lastModifiedDate":"2021-10-22"},{"lineNumber":646,"author":{"gitId":"marcuspeh"},"content":"    * Pros: Easy to implement.","lastModifiedDate":"2021-10-22"},{"lineNumber":647,"author":{"gitId":"marcuspeh"},"content":"    * Cons: Unable to fully customised the layout. Have to use the standard JavaFx\u0027s tab layout.","lastModifiedDate":"2021-10-22"},{"lineNumber":648,"author":{"gitId":"marcuspeh"},"content":"  ","lastModifiedDate":"2021-10-22"},{"lineNumber":649,"author":{"gitId":"marcuspeh"},"content":"* **Alternative 2 (current choice)**: Replacing the child of the view panel node\u003cbr\u003e","lastModifiedDate":"2021-10-22"},{"lineNumber":650,"author":{"gitId":"marcuspeh"},"content":"    (Refer to [JavaFx tutorial](https://se-education.org/guides/tutorials/javaFxPart1.html) for more information about JavaFx)","lastModifiedDate":"2021-10-22"},{"lineNumber":651,"author":{"gitId":"marcuspeh"},"content":"    * Pros: More customisable in terms of layout.","lastModifiedDate":"2021-10-22"},{"lineNumber":652,"author":{"gitId":"marcuspeh"},"content":"    * Pros: Able to make use of existing codes.","lastModifiedDate":"2021-10-22"},{"lineNumber":653,"author":{"gitId":"marcuspeh"},"content":"    * Cons: More classes to implement to handle the toggling between views.","lastModifiedDate":"2021-10-22"},{"lineNumber":654,"author":{"gitId":"marcuspeh"},"content":"    ","lastModifiedDate":"2021-10-22"},{"lineNumber":655,"author":{"gitId":"marcuspeh"},"content":"* **Justification**","lastModifiedDate":"2021-10-22"},{"lineNumber":656,"author":{"gitId":"marcuspeh"},"content":"    * We want to place the command result display below the buttons according to our [wireframe](https://www.figma.com/file/VwuDOdHr7CSyDUWb4Kwkmx/CS2103T-tP?node-id\u003d0%3A1).","lastModifiedDate":"2021-10-22"},{"lineNumber":657,"author":{"gitId":"marcuspeh"},"content":"    * Using JavaFx\u0027s tab will not let us customise the layout as such.","lastModifiedDate":"2021-10-22"},{"lineNumber":658,"author":{"gitId":"marcuspeh"},"content":"    * Hence, replacing the child of a view panel is more appropriate.","lastModifiedDate":"2021-10-22"},{"lineNumber":659,"author":{"gitId":"marcuspeh"},"content":"    ","lastModifiedDate":"2021-10-22"},{"lineNumber":660,"author":{"gitId":"marcuspeh"},"content":"### Ui Navigation Buttons","lastModifiedDate":"2021-10-22"},{"lineNumber":661,"author":{"gitId":"marcuspeh"},"content":"To improve the usability of AWE, buttons are implemented into the Ui to allow switching of view easily.","lastModifiedDate":"2021-10-22"},{"lineNumber":662,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":663,"author":{"gitId":"marcuspeh"},"content":"However, only 2 main views can be toggled by the buttons - Contacts page and Groups page.","lastModifiedDate":"2021-10-28"},{"lineNumber":664,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":665,"author":{"gitId":"marcuspeh"},"content":"To achieve this, the following is implemented:","lastModifiedDate":"2021-10-22"},{"lineNumber":666,"author":{"gitId":"marcuspeh"},"content":"* 2 buttons (`GroupViewButton` and `ContactViewButton`) for the user to click.","lastModifiedDate":"2021-10-22"},{"lineNumber":667,"author":{"gitId":"marcuspeh"},"content":"* Event listener for each button - `GroupButtonListener` and `ContactButtonListener`. The event listener works by calling `ViewPanel#toggleView` when the button is clicked.","lastModifiedDate":"2021-10-22"},{"lineNumber":668,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":669,"author":{"gitId":"marcuspeh"},"content":"Given below is an example usage scenario and how the button mechanism behaves at each step. In this example, the button used is `GroupViewButton` but it can also be replaced with `ContactViewButton`.","lastModifiedDate":"2021-10-22"},{"lineNumber":670,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":671,"author":{"gitId":"marcuspeh"},"content":"Step 1. When `GroupViewButton` is initiated, an event listener `GroupButtonListener` is created and used.","lastModifiedDate":"2021-10-22"},{"lineNumber":672,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":673,"author":{"gitId":"marcuspeh"},"content":"Step 2. Once the user clicks on `GroupViewButton`, the event listener will trigger and the `GroupButtonListener#handle` will run. This calls `ViewPanel#toggleView` and passes `UiView.GROUP_PAGE` as parameters. ","lastModifiedDate":"2021-10-22"},{"lineNumber":674,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":675,"author":{"gitId":"marcuspeh"},"content":"Step 3. `ViewPanel` will change the child of itself to `ContactListPanel` (Refer to [JavaFx tutorial](https://se-education.org/guides/tutorials/javaFxPart1.html) for more information about JavaFx). Hence, GUI will update to show contact page","lastModifiedDate":"2021-10-22"},{"lineNumber":676,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":677,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":678,"author":{"gitId":"-"},"content":"### \\[Proposed\\] Undo/redo feature","lastModifiedDate":"2020-06-07"},{"lineNumber":679,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":680,"author":{"gitId":"-"},"content":"#### Proposed Implementation","lastModifiedDate":"2020-05-23"},{"lineNumber":681,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":682,"author":{"gitId":"-"},"content":"The proposed undo/redo mechanism is facilitated by `VersionedAddressBook`. It extends `AddressBook` with an undo/redo history, stored internally as an `addressBookStateList` and `currentStatePointer`. Additionally, it implements the following operations:","lastModifiedDate":"2020-05-23"},{"lineNumber":683,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":684,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#commit()` — Saves the current address book state in its history.","lastModifiedDate":"2020-05-23"},{"lineNumber":685,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#undo()` — Restores the previous address book state from its history.","lastModifiedDate":"2020-05-23"},{"lineNumber":686,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#redo()` — Restores a previously undone address book state from its history.","lastModifiedDate":"2020-05-23"},{"lineNumber":687,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":688,"author":{"gitId":"-"},"content":"These operations are exposed in the `Model` interface as `Model#commitAddressBook()`, `Model#undoAddressBook()` and `Model#redoAddressBook()` respectively.","lastModifiedDate":"2020-05-23"},{"lineNumber":689,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":690,"author":{"gitId":"-"},"content":"Given below is an example usage scenario and how the undo/redo mechanism behaves at each step.","lastModifiedDate":"2020-05-23"},{"lineNumber":691,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":692,"author":{"gitId":"-"},"content":"Step 1. The user launches the application for the first time. The `VersionedAddressBook` will be initialized with the initial address book state, and the `currentStatePointer` pointing to that single address book state.","lastModifiedDate":"2020-05-23"},{"lineNumber":693,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":694,"author":{"gitId":"-"},"content":"![UndoRedoState0](images/UndoRedoState0.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":695,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":696,"author":{"gitId":"-"},"content":"Step 2. The user executes `delete 5` command to delete the 5th person in the address book. The `delete` command calls `Model#commitAddressBook()`, causing the modified state of the address book after the `delete 5` command executes to be saved in the `addressBookStateList`, and the `currentStatePointer` is shifted to the newly inserted address book state.","lastModifiedDate":"2020-05-23"},{"lineNumber":697,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":698,"author":{"gitId":"-"},"content":"![UndoRedoState1](images/UndoRedoState1.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":699,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":700,"author":{"gitId":"-"},"content":"Step 3. The user executes `add n/David …​` to add a new person. The `add` command also calls `Model#commitAddressBook()`, causing another modified address book state to be saved into the `addressBookStateList`.","lastModifiedDate":"2020-05-23"},{"lineNumber":701,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":702,"author":{"gitId":"-"},"content":"![UndoRedoState2](images/UndoRedoState2.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":703,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":704,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If a command fails its execution, it will not call `Model#commitAddressBook()`, so the address book state will not be saved into the `addressBookStateList`.","lastModifiedDate":"2020-05-23"},{"lineNumber":705,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":706,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":707,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":708,"author":{"gitId":"-"},"content":"Step 4. The user now decides that adding the person was a mistake, and decides to undo that action by executing the `undo` command. The `undo` command will call `Model#undoAddressBook()`, which will shift the `currentStatePointer` once to the left, pointing it to the previous address book state, and restores the address book to that state.","lastModifiedDate":"2020-05-23"},{"lineNumber":709,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":710,"author":{"gitId":"-"},"content":"![UndoRedoState3](images/UndoRedoState3.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":711,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":712,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If the `currentStatePointer` is at index 0, pointing to the initial AddressBook state, then there are no previous AddressBook states to restore. The `undo` command uses `Model#canUndoAddressBook()` to check if this is the case. If so, it will return an error to the user rather","lastModifiedDate":"2020-05-23"},{"lineNumber":713,"author":{"gitId":"-"},"content":"than attempting to perform the undo.","lastModifiedDate":"2020-05-23"},{"lineNumber":714,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":715,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":716,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":717,"author":{"gitId":"-"},"content":"The following sequence diagram shows how the undo operation works:","lastModifiedDate":"2020-05-23"},{"lineNumber":718,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":719,"author":{"gitId":"-"},"content":"![UndoSequenceDiagram](images/UndoSequenceDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":720,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":721,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The lifeline for `UndoCommand` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2020-05-23"},{"lineNumber":722,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":723,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":724,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":725,"author":{"gitId":"-"},"content":"The `redo` command does the opposite — it calls `Model#redoAddressBook()`, which shifts the `currentStatePointer` once to the right, pointing to the previously undone state, and restores the address book to that state.","lastModifiedDate":"2020-05-23"},{"lineNumber":726,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":727,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If the `currentStatePointer` is at index `addressBookStateList.size() - 1`, pointing to the latest address book state, then there are no undone AddressBook states to restore. The `redo` command uses `Model#canRedoAddressBook()` to check if this is the case. If so, it will return an error to the user rather than attempting to perform the redo.","lastModifiedDate":"2020-05-23"},{"lineNumber":728,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":729,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":730,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":731,"author":{"gitId":"marcuspeh"},"content":"Step 5. The user then decides to execute the command `contacts`. Commands that do not modify the address book, such as `contacts`, will usually not call `Model#commitAddressBook()`, `Model#undoAddressBook()` or `Model#redoAddressBook()`. Thus, the `addressBookStateList` remains unchanged.","lastModifiedDate":"2021-09-29"},{"lineNumber":732,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":733,"author":{"gitId":"-"},"content":"![UndoRedoState4](images/UndoRedoState4.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":734,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":735,"author":{"gitId":"ramapriyan912001"},"content":"Step 6. The user executes `clearalldata`, which calls `Model#commitAddressBook()`. Since the `currentStatePointer` is not pointing at the end of the `addressBookStateList`, all address book states after the `currentStatePointer` will be purged. Reason: It no longer makes sense to redo the `add n/David …​` command. This is the behavior that most modern desktop applications follow.","lastModifiedDate":"2021-10-30"},{"lineNumber":736,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":737,"author":{"gitId":"-"},"content":"![UndoRedoState5](images/UndoRedoState5.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":738,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":739,"author":{"gitId":"-"},"content":"The following activity diagram summarizes what happens when a user executes a new command:","lastModifiedDate":"2020-05-23"},{"lineNumber":740,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":741,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/CommitActivityDiagram.png\" width\u003d\"250\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":742,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":743,"author":{"gitId":"-"},"content":"#### Design considerations:","lastModifiedDate":"2021-07-31"},{"lineNumber":744,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":745,"author":{"gitId":"-"},"content":"**Aspect: How undo \u0026 redo executes:**","lastModifiedDate":"2021-07-31"},{"lineNumber":746,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":747,"author":{"gitId":"-"},"content":"* **Alternative 1 (current choice):** Saves the entire address book.","lastModifiedDate":"2020-05-23"},{"lineNumber":748,"author":{"gitId":"-"},"content":"  * Pros: Easy to implement.","lastModifiedDate":"2020-05-23"},{"lineNumber":749,"author":{"gitId":"-"},"content":"  * Cons: May have performance issues in terms of memory usage.","lastModifiedDate":"2020-05-23"},{"lineNumber":750,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":751,"author":{"gitId":"-"},"content":"* **Alternative 2:** Individual command knows how to undo/redo by","lastModifiedDate":"2020-05-23"},{"lineNumber":752,"author":{"gitId":"-"},"content":"  itself.","lastModifiedDate":"2020-05-23"},{"lineNumber":753,"author":{"gitId":"-"},"content":"  * Pros: Will use less memory (e.g. for `delete`, just save the person being deleted).","lastModifiedDate":"2020-05-23"},{"lineNumber":754,"author":{"gitId":"-"},"content":"  * Cons: We must ensure that the implementation of each individual command are correct.","lastModifiedDate":"2020-05-23"},{"lineNumber":755,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":756,"author":{"gitId":"-"},"content":"_{more aspects and alternatives to be added}_","lastModifiedDate":"2020-05-23"},{"lineNumber":757,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":758,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":759,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":760,"author":{"gitId":"-"},"content":"## **Documentation, logging, testing, configuration, dev-ops**","lastModifiedDate":"2020-06-07"},{"lineNumber":761,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":762,"author":{"gitId":"-"},"content":"* [Documentation guide](Documentation.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":763,"author":{"gitId":"-"},"content":"* [Testing guide](Testing.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":764,"author":{"gitId":"-"},"content":"* [Logging guide](Logging.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":765,"author":{"gitId":"-"},"content":"* [Configuration guide](Configuration.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":766,"author":{"gitId":"-"},"content":"* [DevOps guide](DevOps.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":767,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":768,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":769,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":770,"author":{"gitId":"-"},"content":"## **Appendix: Requirements**","lastModifiedDate":"2020-05-23"},{"lineNumber":771,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":772,"author":{"gitId":"-"},"content":"### Product scope","lastModifiedDate":"2020-05-23"},{"lineNumber":773,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":774,"author":{"gitId":"-"},"content":"**Target user profile**:","lastModifiedDate":"2020-05-23"},{"lineNumber":775,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":776,"author":{"gitId":"chrus-chong"},"content":"* travels in groups","lastModifiedDate":"2021-09-23"},{"lineNumber":777,"author":{"gitId":"chrus-chong"},"content":"* wants to split expenses in a convenient and efficient manner","lastModifiedDate":"2021-09-23"},{"lineNumber":778,"author":{"gitId":"-"},"content":"* prefer desktop apps over other types","lastModifiedDate":"2020-05-23"},{"lineNumber":779,"author":{"gitId":"-"},"content":"* can type fast","lastModifiedDate":"2020-05-23"},{"lineNumber":780,"author":{"gitId":"-"},"content":"* prefers typing to mouse interactions","lastModifiedDate":"2020-05-26"},{"lineNumber":781,"author":{"gitId":"-"},"content":"* is reasonably comfortable using CLI apps","lastModifiedDate":"2020-05-23"},{"lineNumber":782,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":783,"author":{"gitId":"chrus-chong"},"content":"**Value proposition**:","lastModifiedDate":"2021-09-23"},{"lineNumber":784,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":785,"author":{"gitId":"chrus-chong"},"content":"Travellers have big notes that make settling payments inconvenient.","lastModifiedDate":"2021-09-23"},{"lineNumber":786,"author":{"gitId":"chrus-chong"},"content":"Most travel groups often designate one person to pay.","lastModifiedDate":"2021-09-23"},{"lineNumber":787,"author":{"gitId":"chrus-chong"},"content":"This method of settling payments poses a vexing task of splitting costs at the end of the day or on-the-spot.","lastModifiedDate":"2021-09-23"},{"lineNumber":788,"author":{"gitId":"chrus-chong"},"content":"Our app effectively splits bills between different contacts to serve this purpose.","lastModifiedDate":"2021-09-23"},{"lineNumber":789,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":790,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":791,"author":{"gitId":"-"},"content":"### User stories","lastModifiedDate":"2020-06-07"},{"lineNumber":792,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":793,"author":{"gitId":"-"},"content":"Priorities: High (must have) - `* * *`, Medium (nice to have) - `* *`, Low (unlikely to have) - `*`","lastModifiedDate":"2020-05-23"},{"lineNumber":794,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":795,"author":{"gitId":"-"},"content":"| Priority | As a …​                                            | I want to …​                                        | So that I can…​                                                           |","lastModifiedDate":"2020-05-23"},{"lineNumber":796,"author":{"gitId":"marcuspeh"},"content":"| -------- | ------------------------------------------------- | -------------------------------------------------- | ------------------------------------------------------------------------ |","lastModifiedDate":"2021-09-24"},{"lineNumber":797,"author":{"gitId":"chrus-chong"},"content":"| `* * *`  | user that has paid for a shared experience        | easily check how much I have paid up front         | ensure I have liquidity for emergencies and or other unforeseen expenses |","lastModifiedDate":"2021-09-23"},{"lineNumber":798,"author":{"gitId":"chrus-chong"},"content":"| `* * *`  | user who has paid for others                      | easily check how much I am owed by friends         | recoup the money I have paid on their behalf                             |","lastModifiedDate":"2021-09-23"},{"lineNumber":799,"author":{"gitId":"chrus-chong"},"content":"| `* * *`  | user paying for a shared expense                  | enter the amount I have paid                       | update the total amount they have to pay                                 |","lastModifiedDate":"2021-09-23"},{"lineNumber":800,"author":{"gitId":"chrus-chong"},"content":"| `* * *`  | user that owes my friend money                    | easily check how much I owe each person            | conveniently proceed to pay my friend                                    |","lastModifiedDate":"2021-09-23"},{"lineNumber":801,"author":{"gitId":"chrus-chong"},"content":"| `* * *`  | busy user who does not want to remember phone numbers | easily save all my friends\u0027 numbers            | conveniently proceed to pay my friend                                    |","lastModifiedDate":"2021-09-29"},{"lineNumber":802,"author":{"gitId":"chrus-chong"},"content":"| `* * *`  | user with flexible travel plans                   | edit the details of expenditure for events         | modify the records quickly and easily                                    |","lastModifiedDate":"2021-09-29"},{"lineNumber":803,"author":{"gitId":"chrus-chong"},"content":"| `* * *`  | beginner user                                     | run the app easily with a click of a button        | avoid wasting time trying to figure out how to get the app to work       |","lastModifiedDate":"2021-09-29"},{"lineNumber":804,"author":{"gitId":"ramapriyan912001"},"content":"| `* * *`  | inexperienced user in the app who types fast      | type in the commands for the app                   | do more things in the app with the same amount of time compared to using a mouse to click |","lastModifiedDate":"2021-09-30"},{"lineNumber":805,"author":{"gitId":"chrus-chong"},"content":"| `* * *`  | user who wants an easy workflow                   | easily toggle between contacts and groups page with a command or a click of a button | make my workflow on the app smoother   |","lastModifiedDate":"2021-09-29"},{"lineNumber":806,"author":{"gitId":"marcuspeh"},"content":"| `* *`    | user who has a number of travel plans             | easily find a group                                | check who still owes me money in the group                               |","lastModifiedDate":"2021-10-09"},{"lineNumber":807,"author":{"gitId":"chrus-chong"},"content":"| `* *`    | user who has to recoup the money                  | divide up the expenses suitably amongst my friends | know how much to recoup from each person                                 |","lastModifiedDate":"2021-09-23"},{"lineNumber":808,"author":{"gitId":"chrus-chong"},"content":"| `* *`    | user paying for the shared expense                | see how much I have paid according to the date     | monitor the amount spent each day                                        |","lastModifiedDate":"2021-09-23"},{"lineNumber":809,"author":{"gitId":"chrus-chong"},"content":"| `* *`    | user who worries about individual expenses        | check the breakdown of my personal expenditure     | keep track of how much money I have spent                                |","lastModifiedDate":"2021-09-23"},{"lineNumber":810,"author":{"gitId":"ramapriyan912001"},"content":"| `* *`    | user who likes to differentiate work from leisure | use this app to separate the different types of contacts I have | I won’t mix them up                                         |","lastModifiedDate":"2021-09-23"},{"lineNumber":811,"author":{"gitId":"ramapriyan912001"},"content":"| `* *`    | user who wants to stay in contact with friends    | use this app to easily save their phone numbers    | I can remain in contact                                                  |","lastModifiedDate":"2021-09-23"},{"lineNumber":812,"author":{"gitId":"ramapriyan912001"},"content":"| `* *`    | potential user exploring the app                  | see the app containing sample data                 | see what the app generally looks like when it is used                    |","lastModifiedDate":"2021-09-23"},{"lineNumber":813,"author":{"gitId":"ramapriyan912001"},"content":"| `* *`    | potential user exploring the app                  | undo my actions                                    | test the app\u0027s features with the same data                               |","lastModifiedDate":"2021-09-23"},{"lineNumber":814,"author":{"gitId":"ramapriyan912001"},"content":"| `* *`    | potential user testing the app                    | run the app on different platforms (windows, linux and os-x) | not have to specifically run a certain platform                |","lastModifiedDate":"2021-09-23"},{"lineNumber":815,"author":{"gitId":"marcuspeh"},"content":"| `* *`    | user with flexible travel plans                   | delete a group                                     | modify the records easily if plans change                                |","lastModifiedDate":"2021-09-24"},{"lineNumber":816,"author":{"gitId":"Jingwencloud"},"content":"| `* *`    | beginner user who first opened the app            | view the help page                                 | so that I can learn how to use the app                                   |","lastModifiedDate":"2021-09-26"},{"lineNumber":817,"author":{"gitId":"chrus-chong"},"content":"| `*`      | user who values organisation                      | view the group’s expenditure by categories         | plan the budgeting for future expenses more effectively                  |","lastModifiedDate":"2021-09-29"},{"lineNumber":818,"author":{"gitId":"chrus-chong"},"content":"| `*`      | user who needs to repay debt                      | easily set up installment payments                 | can avoid paying too much money at one go                                |","lastModifiedDate":"2021-09-29"},{"lineNumber":819,"author":{"gitId":"chrus-chong"},"content":"| `*`      | user who has lots of contacts to keep track of    | tag each contact                                   | easily find groups of people using the tags                              |","lastModifiedDate":"2021-09-29"},{"lineNumber":820,"author":{"gitId":"chrus-chong"},"content":"| `* `     | user whose friends frequently change numbers      | use this app to easily edit their numbers or save multiple numbers with notes | easily remember which number to use           |","lastModifiedDate":"2021-09-29"},{"lineNumber":821,"author":{"gitId":"Jingwencloud"},"content":"| `*`      | beginner user that is tech-savvy                  | view the documentation                             | figure out how to use the app                                            |","lastModifiedDate":"2021-09-26"},{"lineNumber":822,"author":{"gitId":"Jingwencloud"},"content":"| `*`      | beginner user                                     | mass add my contacts                               | avoid manually keying in one by one                                      |","lastModifiedDate":"2021-09-26"},{"lineNumber":823,"author":{"gitId":"Jingwencloud"},"content":"| `*`      | beginner user                                     | easily distinguish functions in the app            | use it without the app being too daunting                                |","lastModifiedDate":"2021-09-26"},{"lineNumber":824,"author":{"gitId":"Jingwencloud"},"content":"| `*`      | expert user                                       | create my own shortcuts for commands               | control what I can do with the app more effectively                      |","lastModifiedDate":"2021-09-26"},{"lineNumber":825,"author":{"gitId":"Jingwencloud"},"content":"| `*`      | expert user                                       | mass delete contacts from the app                  | save time by not deleting it manually                                    |","lastModifiedDate":"2021-09-26"},{"lineNumber":826,"author":{"gitId":"Jingwencloud"},"content":"| `*`      | expert user                                       | refer to previous trips and the expenditure        | plan future trips efficiently                                            |","lastModifiedDate":"2021-09-26"},{"lineNumber":827,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":828,"author":{"gitId":"-"},"content":"### Use cases","lastModifiedDate":"2020-06-07"},{"lineNumber":829,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":830,"author":{"gitId":"marcuspeh"},"content":"(For all use cases below, the **System** is the `AWE` and the **Actor** is the `user`, unless specified otherwise)","lastModifiedDate":"2021-09-24"},{"lineNumber":831,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":832,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":833,"author":{"gitId":"ramapriyan912001"},"content":"**Use case: Help User Understand Product**","lastModifiedDate":"2021-09-30"},{"lineNumber":834,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":835,"author":{"gitId":"-"},"content":"**MSS**","lastModifiedDate":"2021-09-30"},{"lineNumber":836,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":837,"author":{"gitId":"ramapriyan912001"},"content":"1. User request to find commands and their explanations.","lastModifiedDate":"2021-09-30"},{"lineNumber":838,"author":{"gitId":"ramapriyan912001"},"content":"2. AWE shows a list of command keyword(s) and explanations.","lastModifiedDate":"2021-09-30"},{"lineNumber":839,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":840,"author":{"gitId":"ramapriyan912001"},"content":"**Extensions**","lastModifiedDate":"2021-09-30"},{"lineNumber":841,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":842,"author":{"gitId":"ramapriyan912001"},"content":"* 2a. AWE detects errant command.","lastModifiedDate":"2021-09-30"},{"lineNumber":843,"author":{"gitId":"ramapriyan912001"},"content":"    * 2a1. AWE displays the list of command keyword(s) and explanations.","lastModifiedDate":"2021-09-30"},{"lineNumber":844,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":845,"author":{"gitId":"ramapriyan912001"},"content":"      Use case ends.","lastModifiedDate":"2021-09-30"},{"lineNumber":846,"author":{"gitId":"ramapriyan912001"},"content":"    ","lastModifiedDate":"2021-09-30"},{"lineNumber":847,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":848,"author":{"gitId":"chrus-chong"},"content":"**Use case: Add a Person**","lastModifiedDate":"2021-10-05"},{"lineNumber":849,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":850,"author":{"gitId":"marcuspeh"},"content":"**MSS**","lastModifiedDate":"2021-09-24"},{"lineNumber":851,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":852,"author":{"gitId":"chrus-chong"},"content":"1. User chooses to add a person to the AddressBook.","lastModifiedDate":"2021-09-29"},{"lineNumber":853,"author":{"gitId":"marcuspeh"},"content":"2. User enters add command into CLI along with person name, phone number, and tags if applicable.","lastModifiedDate":"2021-11-01"},{"lineNumber":854,"author":{"gitId":"marcuspeh"},"content":"3. AWE displays confirmation message.","lastModifiedDate":"2021-09-24"},{"lineNumber":855,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":856,"author":{"gitId":"marcuspeh"},"content":"   Use case ends.","lastModifiedDate":"2021-09-24"},{"lineNumber":857,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":858,"author":{"gitId":"marcuspeh"},"content":"**Extensions**","lastModifiedDate":"2021-09-24"},{"lineNumber":859,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":860,"author":{"gitId":"marcuspeh"},"content":"* 2a. AWE detects invalid command format that does not contain all 2 parameter identifiers (\"n/\", \"p/\").","lastModifiedDate":"2021-11-01"},{"lineNumber":861,"author":{"gitId":"chrus-chong"},"content":"    * 2a1. AWE returns invalid command format error and displays ```add``` command format and example.","lastModifiedDate":"2021-09-29"},{"lineNumber":862,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":863,"author":{"gitId":"chrus-chong"},"content":"      Use case ends.","lastModifiedDate":"2021-09-29"},{"lineNumber":864,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":865,"author":{"gitId":"marcuspeh"},"content":"* 2b. Command contains 2 parameters identifiers but name is blank.","lastModifiedDate":"2021-11-01"},{"lineNumber":866,"author":{"gitId":"chrus-chong"},"content":"    * 2b1. AWE reminds user that names should only contain alphanumeric characters and should not be blank.","lastModifiedDate":"2021-09-29"},{"lineNumber":867,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":868,"author":{"gitId":"chrus-chong"},"content":"      Use case ends.","lastModifiedDate":"2021-09-29"},{"lineNumber":869,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":870,"author":{"gitId":"marcuspeh"},"content":"* 2c. Command contains 2 parameters identifiers but phone number is less than 3 digits or not a number.","lastModifiedDate":"2021-11-01"},{"lineNumber":871,"author":{"gitId":"chrus-chong"},"content":"    * 2c1. AWE reminds user that phone numbers should only contain numbers and be at least 3 digits long.","lastModifiedDate":"2021-09-29"},{"lineNumber":872,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":873,"author":{"gitId":"chrus-chong"},"content":"      Use case ends.","lastModifiedDate":"2021-09-29"},{"lineNumber":874,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":875,"author":{"gitId":"kheekheekhee"},"content":"**Use case: Edit a person**","lastModifiedDate":"2021-09-29"},{"lineNumber":876,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":877,"author":{"gitId":"ramapriyan912001"},"content":"**Preconditions: User\u0027s last entered command is either `findcontacts` or `contacts`, i.e. the user is viewing an contacts list.**","lastModifiedDate":"2021-10-30"},{"lineNumber":878,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":879,"author":{"gitId":"-"},"content":"**MSS**","lastModifiedDate":"2020-05-23"},{"lineNumber":880,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":881,"author":{"gitId":"marcuspeh"},"content":"1. User requests to list contacts","lastModifiedDate":"2021-10-31"},{"lineNumber":882,"author":{"gitId":"marcuspeh"},"content":"2. AWE shows a list of contacts","lastModifiedDate":"2021-10-31"},{"lineNumber":883,"author":{"gitId":"kheekheekhee"},"content":"3. User requests to edit a specific person in the list","lastModifiedDate":"2021-09-29"},{"lineNumber":884,"author":{"gitId":"kheekheekhee"},"content":"4. User enters edited information","lastModifiedDate":"2021-09-29"},{"lineNumber":885,"author":{"gitId":"kheekheekhee"},"content":"5. AWE edits the person","lastModifiedDate":"2021-09-29"},{"lineNumber":886,"author":{"gitId":"-"},"content":"    ","lastModifiedDate":"2020-05-23"},{"lineNumber":887,"author":{"gitId":"-"},"content":"    Use case ends.","lastModifiedDate":"2020-05-23"},{"lineNumber":888,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":889,"author":{"gitId":"-"},"content":"**Extensions**","lastModifiedDate":"2020-05-23"},{"lineNumber":890,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":891,"author":{"gitId":"-"},"content":"* 2a. The list is empty.","lastModifiedDate":"2020-05-23"},{"lineNumber":892,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":893,"author":{"gitId":"-"},"content":"  Use case ends.","lastModifiedDate":"2020-05-23"},{"lineNumber":894,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":895,"author":{"gitId":"ramapriyan912001"},"content":"* 2b. The given index is invalid.","lastModifiedDate":"2021-10-30"},{"lineNumber":896,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":897,"author":{"gitId":"ramapriyan912001"},"content":"    * 2b1. AWE shows an error message.","lastModifiedDate":"2021-10-30"},{"lineNumber":898,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":899,"author":{"gitId":"-"},"content":"      Use case resumes at step 2.","lastModifiedDate":"2020-05-23"},{"lineNumber":900,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":901,"author":{"gitId":"ramapriyan912001"},"content":"* 2c. The given information has an invalid format.","lastModifiedDate":"2021-10-30"},{"lineNumber":902,"author":{"gitId":"kheekheekhee"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":903,"author":{"gitId":"ramapriyan912001"},"content":"    * 2c1. AWE shows an error message.","lastModifiedDate":"2021-10-30"},{"lineNumber":904,"author":{"gitId":"kheekheekhee"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":905,"author":{"gitId":"kheekheekhee"},"content":"      Use case resumes at step 2.","lastModifiedDate":"2021-09-29"},{"lineNumber":906,"author":{"gitId":"kheekheekhee"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":907,"author":{"gitId":"ramapriyan912001"},"content":"* 2d. User is not viewing a list of contacts when entering command.","lastModifiedDate":"2021-10-30"},{"lineNumber":908,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":909,"author":{"gitId":"ramapriyan912001"},"content":"  * 2d1. AWE shows an error message asking user to enter `findcontacts` or `contacts` command first.","lastModifiedDate":"2021-10-30"},{"lineNumber":910,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":911,"author":{"gitId":"ramapriyan912001"},"content":"    Use case ends.","lastModifiedDate":"2021-10-30"},{"lineNumber":912,"author":{"gitId":"ramapriyan912001"},"content":"    ","lastModifiedDate":"2021-10-30"},{"lineNumber":913,"author":{"gitId":"marcuspeh"},"content":"**Use case: List all contacts**","lastModifiedDate":"2021-10-31"},{"lineNumber":914,"author":{"gitId":"Jingwencloud"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":915,"author":{"gitId":"Jingwencloud"},"content":"**MSS**","lastModifiedDate":"2021-09-30"},{"lineNumber":916,"author":{"gitId":"Jingwencloud"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":917,"author":{"gitId":"marcuspeh"},"content":"1. User requests to list contacts.","lastModifiedDate":"2021-10-31"},{"lineNumber":918,"author":{"gitId":"marcuspeh"},"content":"2. AWE shows list of contacts. ","lastModifiedDate":"2021-10-31"},{"lineNumber":919,"author":{"gitId":"Jingwencloud"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":920,"author":{"gitId":"Jingwencloud"},"content":"   Use case ends. ","lastModifiedDate":"2021-09-30"},{"lineNumber":921,"author":{"gitId":"Jingwencloud"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":922,"author":{"gitId":"Jingwencloud"},"content":"**Extensions**","lastModifiedDate":"2021-09-30"},{"lineNumber":923,"author":{"gitId":"Jingwencloud"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":924,"author":{"gitId":"marcuspeh"},"content":"* 2a. There are no contacts to be listed.","lastModifiedDate":"2021-10-31"},{"lineNumber":925,"author":{"gitId":"Jingwencloud"},"content":"    * 2a1. AWE does not display any contacts.","lastModifiedDate":"2021-09-30"},{"lineNumber":926,"author":{"gitId":"Jingwencloud"},"content":"      ","lastModifiedDate":"2021-09-30"},{"lineNumber":927,"author":{"gitId":"Jingwencloud"},"content":"      Use case ends.","lastModifiedDate":"2021-09-30"},{"lineNumber":928,"author":{"gitId":"Jingwencloud"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":929,"author":{"gitId":"Jingwencloud"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":930,"author":{"gitId":"marcuspeh"},"content":"**Use case: Find a person**","lastModifiedDate":"2021-09-29"},{"lineNumber":931,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":932,"author":{"gitId":"marcuspeh"},"content":"**Preconditions: User is in ContactsPage**","lastModifiedDate":"2021-09-29"},{"lineNumber":933,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":934,"author":{"gitId":"marcuspeh"},"content":"**MSS**","lastModifiedDate":"2021-09-29"},{"lineNumber":935,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":936,"author":{"gitId":"marcuspeh"},"content":"1. User request to find person based on keyword(s).","lastModifiedDate":"2021-09-29"},{"lineNumber":937,"author":{"gitId":"marcuspeh"},"content":"2. AWE shows a list of contacts that matches the keyword(s).","lastModifiedDate":"2021-10-31"},{"lineNumber":938,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":939,"author":{"gitId":"marcuspeh"},"content":"**Extensions**","lastModifiedDate":"2021-09-29"},{"lineNumber":940,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":941,"author":{"gitId":"marcuspeh"},"content":"* 2a. There isn\u0027t any contacts saved.","lastModifiedDate":"2021-09-29"},{"lineNumber":942,"author":{"gitId":"marcuspeh"},"content":"    * 2a1. AWE displays nothing in the contacts page.","lastModifiedDate":"2021-09-29"},{"lineNumber":943,"author":{"gitId":"marcuspeh"},"content":"    * 2a2. AWE shows a message saying no person found.","lastModifiedDate":"2021-09-29"},{"lineNumber":944,"author":{"gitId":"marcuspeh"},"content":"    ","lastModifiedDate":"2021-09-29"},{"lineNumber":945,"author":{"gitId":"marcuspeh"},"content":"      Use case ends.","lastModifiedDate":"2021-09-29"},{"lineNumber":946,"author":{"gitId":"marcuspeh"},"content":"      ","lastModifiedDate":"2021-09-29"},{"lineNumber":947,"author":{"gitId":"marcuspeh"},"content":"* 2b. There is not contacts matching the search parameters.","lastModifiedDate":"2021-09-29"},{"lineNumber":948,"author":{"gitId":"marcuspeh"},"content":"    * 2b1. AWE displays nothing in the contacts page.","lastModifiedDate":"2021-09-29"},{"lineNumber":949,"author":{"gitId":"marcuspeh"},"content":"    * 2b2. AWE shows a message saying no person found.","lastModifiedDate":"2021-09-29"},{"lineNumber":950,"author":{"gitId":"marcuspeh"},"content":"    ","lastModifiedDate":"2021-09-29"},{"lineNumber":951,"author":{"gitId":"marcuspeh"},"content":"      Use case ends.","lastModifiedDate":"2021-09-29"},{"lineNumber":952,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":953,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":954,"author":{"gitId":"-"},"content":"**Use case: Delete a person**","lastModifiedDate":"2020-05-23"},{"lineNumber":955,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":956,"author":{"gitId":"ramapriyan912001"},"content":"**Preconditions: User\u0027s last entered command is either `findcontacts` or `contacts`, i.e. the user is viewing an contacts list.**","lastModifiedDate":"2021-10-30"},{"lineNumber":957,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":958,"author":{"gitId":"-"},"content":"**MSS**","lastModifiedDate":"2020-05-23"},{"lineNumber":959,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":960,"author":{"gitId":"ramapriyan912001"},"content":"1. User requests to list persons.","lastModifiedDate":"2021-10-30"},{"lineNumber":961,"author":{"gitId":"ramapriyan912001"},"content":"2. AWE shows a list of persons.","lastModifiedDate":"2021-10-30"},{"lineNumber":962,"author":{"gitId":"ramapriyan912001"},"content":"3. User requests to delete a specific person in the list.","lastModifiedDate":"2021-10-30"},{"lineNumber":963,"author":{"gitId":"ramapriyan912001"},"content":"4. AWE deletes the person.","lastModifiedDate":"2021-10-30"},{"lineNumber":964,"author":{"gitId":"ramapriyan912001"},"content":"5. AWE removes the person from groups of which the person was a member.","lastModifiedDate":"2021-10-30"},{"lineNumber":965,"author":{"gitId":"ramapriyan912001"},"content":"6. AWE displays confirmation message.","lastModifiedDate":"2021-10-30"},{"lineNumber":966,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":967,"author":{"gitId":"-"},"content":"    Use case ends.","lastModifiedDate":"2020-05-23"},{"lineNumber":968,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":969,"author":{"gitId":"-"},"content":"**Extensions**","lastModifiedDate":"2020-05-23"},{"lineNumber":970,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":971,"author":{"gitId":"-"},"content":"* 2a. The list is empty.","lastModifiedDate":"2020-05-23"},{"lineNumber":972,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":973,"author":{"gitId":"-"},"content":"  Use case ends.","lastModifiedDate":"2020-05-23"},{"lineNumber":974,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":975,"author":{"gitId":"ramapriyan912001"},"content":"* 2b. The given index is invalid.","lastModifiedDate":"2021-10-30"},{"lineNumber":976,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":977,"author":{"gitId":"ramapriyan912001"},"content":"    * 2b1. AWE shows an error message.","lastModifiedDate":"2021-10-30"},{"lineNumber":978,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":979,"author":{"gitId":"ramapriyan912001"},"content":"* 2c. User is not viewing a list of contacts when entering command.","lastModifiedDate":"2021-10-30"},{"lineNumber":980,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":981,"author":{"gitId":"ramapriyan912001"},"content":"  * 2c1. AWE shows an error message asking user to enter `findcontacts` or `contacts` command first.","lastModifiedDate":"2021-10-30"},{"lineNumber":982,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":983,"author":{"gitId":"ramapriyan912001"},"content":"    Use case ends.","lastModifiedDate":"2021-10-30"},{"lineNumber":984,"author":{"gitId":"chrus-chong"},"content":"    ","lastModifiedDate":"2021-09-23"},{"lineNumber":985,"author":{"gitId":"chrus-chong"},"content":"**Use case: Create Travel Group**","lastModifiedDate":"2021-09-23"},{"lineNumber":986,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":987,"author":{"gitId":"chrus-chong"},"content":"**MSS**","lastModifiedDate":"2021-09-23"},{"lineNumber":988,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":989,"author":{"gitId":"chrus-chong"},"content":"1. User chooses to create a group.","lastModifiedDate":"2021-09-23"},{"lineNumber":990,"author":{"gitId":"chrus-chong"},"content":"2. User enters create group command into CLI along with group name and names of members.","lastModifiedDate":"2021-09-23"},{"lineNumber":991,"author":{"gitId":"chrus-chong"},"content":"3. AWE displays confirmation message.","lastModifiedDate":"2021-09-23"},{"lineNumber":992,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":993,"author":{"gitId":"chrus-chong"},"content":"   Use case ends.","lastModifiedDate":"2021-09-23"},{"lineNumber":994,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":995,"author":{"gitId":"chrus-chong"},"content":"**Extensions**","lastModifiedDate":"2021-09-23"},{"lineNumber":996,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":997,"author":{"gitId":"chrus-chong"},"content":"* 2a. AWE detects group member whose name is not in the AddressBook.","lastModifiedDate":"2021-09-29"},{"lineNumber":998,"author":{"gitId":"chrus-chong"},"content":"  * 2a1. AWE displays message to remind User to type in full name of members as in the AddressBook.","lastModifiedDate":"2021-09-29"},{"lineNumber":999,"author":{"gitId":"chrus-chong"},"content":"  ","lastModifiedDate":"2021-09-23"},{"lineNumber":1000,"author":{"gitId":"chrus-chong"},"content":"    Use case ends.","lastModifiedDate":"2021-09-23"},{"lineNumber":1001,"author":{"gitId":"chrus-chong"},"content":"    ","lastModifiedDate":"2021-09-23"},{"lineNumber":1002,"author":{"gitId":"ramapriyan912001"},"content":"    ","lastModifiedDate":"2021-09-30"},{"lineNumber":1003,"author":{"gitId":"ramapriyan912001"},"content":"**Use case: Delete Travel Group**","lastModifiedDate":"2021-09-24"},{"lineNumber":1004,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":1005,"author":{"gitId":"ramapriyan912001"},"content":"**MSS**","lastModifiedDate":"2021-09-24"},{"lineNumber":1006,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":1007,"author":{"gitId":"ramapriyan912001"},"content":"1. User requests to delete group with a specific name.","lastModifiedDate":"2021-10-29"},{"lineNumber":1008,"author":{"gitId":"ramapriyan912001"},"content":"2. AWE deletes group with specified group name.","lastModifiedDate":"2021-10-29"},{"lineNumber":1009,"author":{"gitId":"ramapriyan912001"},"content":"3. AWE shows updated list of groups.","lastModifiedDate":"2021-10-29"},{"lineNumber":1010,"author":{"gitId":"ramapriyan912001"},"content":"3. AWE displays confirmation message.","lastModifiedDate":"2021-09-24"},{"lineNumber":1011,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":1012,"author":{"gitId":"ramapriyan912001"},"content":"   Use case ends.","lastModifiedDate":"2021-09-24"},{"lineNumber":1013,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":1014,"author":{"gitId":"ramapriyan912001"},"content":"**Extensions**","lastModifiedDate":"2021-09-24"},{"lineNumber":1015,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":1016,"author":{"gitId":"ramapriyan912001"},"content":"* 2a. AWE detects group name that contains non-alphanumeric characters.","lastModifiedDate":"2021-10-29"},{"lineNumber":1017,"author":{"gitId":"ramapriyan912001"},"content":"  * 2a1. AWE displays message to remind User to type in a group name that contains only alphanumeric characters.","lastModifiedDate":"2021-10-29"},{"lineNumber":1018,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":1019,"author":{"gitId":"ramapriyan912001"},"content":"    Use case ends.","lastModifiedDate":"2021-10-29"},{"lineNumber":1020,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":1021,"author":{"gitId":"ramapriyan912001"},"content":"* 2b. AWE detects group name that is not in address book.","lastModifiedDate":"2021-10-29"},{"lineNumber":1022,"author":{"gitId":"ramapriyan912001"},"content":"    * 2a1. AWE displays message to remind User to type in name of a group inside the addressbook.","lastModifiedDate":"2021-09-24"},{"lineNumber":1023,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":1024,"author":{"gitId":"ramapriyan912001"},"content":"      Use case ends.    ","lastModifiedDate":"2021-09-24"},{"lineNumber":1025,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":1026,"author":{"gitId":"chrus-chong"},"content":"**Use case: List all travel groups**","lastModifiedDate":"2021-10-05"},{"lineNumber":1027,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":1028,"author":{"gitId":"marcuspeh"},"content":"**MSS**","lastModifiedDate":"2021-09-29"},{"lineNumber":1029,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":1030,"author":{"gitId":"marcuspeh"},"content":"1. User choose to list all groups","lastModifiedDate":"2021-09-29"},{"lineNumber":1031,"author":{"gitId":"marcuspeh"},"content":"2. GroupsPage shows a list of groups","lastModifiedDate":"2021-09-29"},{"lineNumber":1032,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":1033,"author":{"gitId":"marcuspeh"},"content":"**Extension**","lastModifiedDate":"2021-09-29"},{"lineNumber":1034,"author":{"gitId":"marcuspeh"},"content":"* 2a. AWE detects that there is no group created.","lastModifiedDate":"2021-09-29"},{"lineNumber":1035,"author":{"gitId":"marcuspeh"},"content":"    * 2a1 AWE displays a blank screen.","lastModifiedDate":"2021-09-29"},{"lineNumber":1036,"author":{"gitId":"marcuspeh"},"content":"    ","lastModifiedDate":"2021-09-29"},{"lineNumber":1037,"author":{"gitId":"marcuspeh"},"content":"      Use case ends.","lastModifiedDate":"2021-09-29"},{"lineNumber":1038,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":1039,"author":{"gitId":"Jingwencloud"},"content":"**Use case: List expenses of a travel group**","lastModifiedDate":"2021-10-21"},{"lineNumber":1040,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":1041,"author":{"gitId":"chrus-chong"},"content":"**MSS**","lastModifiedDate":"2021-09-23"},{"lineNumber":1042,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":1043,"author":{"gitId":"marcuspeh"},"content":"1. User request to list groups.","lastModifiedDate":"2021-09-24"},{"lineNumber":1044,"author":{"gitId":"marcuspeh"},"content":"2. GroupsPage shows a list of groups.","lastModifiedDate":"2021-09-29"},{"lineNumber":1045,"author":{"gitId":"marcuspeh"},"content":"3. User request to see expenses of a specific group.","lastModifiedDate":"2021-09-24"},{"lineNumber":1046,"author":{"gitId":"marcuspeh"},"content":"4. AW3 displays all the expenses of the group.","lastModifiedDate":"2021-09-24"},{"lineNumber":1047,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":1048,"author":{"gitId":"chrus-chong"},"content":"   Use case ends.","lastModifiedDate":"2021-09-23"},{"lineNumber":1049,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":1050,"author":{"gitId":"chrus-chong"},"content":"**Extensions**","lastModifiedDate":"2021-09-23"},{"lineNumber":1051,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":1052,"author":{"gitId":"marcuspeh"},"content":"* 2a. AWE detects no groups created yet.","lastModifiedDate":"2021-09-24"},{"lineNumber":1053,"author":{"gitId":"marcuspeh"},"content":"  * 2a1. AWE displays message to remind User to create a group before empty GroupsPage displayed.","lastModifiedDate":"2021-09-29"},{"lineNumber":1054,"author":{"gitId":"marcuspeh"},"content":"  ","lastModifiedDate":"2021-09-24"},{"lineNumber":1055,"author":{"gitId":"marcuspeh"},"content":"    Use case ends.","lastModifiedDate":"2021-09-24"},{"lineNumber":1056,"author":{"gitId":"marcuspeh"},"content":"    ","lastModifiedDate":"2021-09-24"},{"lineNumber":1057,"author":{"gitId":"Jingwencloud"},"content":"* 3a. The given group name is invalid.","lastModifiedDate":"2021-10-21"},{"lineNumber":1058,"author":{"gitId":"marcuspeh"},"content":"    * 3a1. AWE displays an error.","lastModifiedDate":"2021-09-24"},{"lineNumber":1059,"author":{"gitId":"chrus-chong"},"content":"    ","lastModifiedDate":"2021-09-23"},{"lineNumber":1060,"author":{"gitId":"chrus-chong"},"content":"      Use case ends.","lastModifiedDate":"2021-09-23"},{"lineNumber":1061,"author":{"gitId":"chrus-chong"},"content":"      ","lastModifiedDate":"2021-09-23"},{"lineNumber":1062,"author":{"gitId":"marcuspeh"},"content":"* 4a. AWE detect no expenses logged under the group.","lastModifiedDate":"2021-09-24"},{"lineNumber":1063,"author":{"gitId":"Jingwencloud"},"content":"    * 4a1. AWE displays an empty list.","lastModifiedDate":"2021-10-21"},{"lineNumber":1064,"author":{"gitId":"Jingwencloud"},"content":"    ","lastModifiedDate":"2021-10-21"},{"lineNumber":1065,"author":{"gitId":"Jingwencloud"},"content":"      Use case ends.","lastModifiedDate":"2021-10-21"},{"lineNumber":1066,"author":{"gitId":"Jingwencloud"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":1067,"author":{"gitId":"Jingwencloud"},"content":"**Use case: Find expenses in a travel group**","lastModifiedDate":"2021-10-21"},{"lineNumber":1068,"author":{"gitId":"Jingwencloud"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":1069,"author":{"gitId":"Jingwencloud"},"content":"**MSS**","lastModifiedDate":"2021-10-21"},{"lineNumber":1070,"author":{"gitId":"Jingwencloud"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":1071,"author":{"gitId":"Jingwencloud"},"content":"1. User request to find expense(s) based on keyword(s) and group name.","lastModifiedDate":"2021-10-21"},{"lineNumber":1072,"author":{"gitId":"Jingwencloud"},"content":"2. AWE shows a list of expenses in specified group that matches the keyword(s).","lastModifiedDate":"2021-10-21"},{"lineNumber":1073,"author":{"gitId":"Jingwencloud"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":1074,"author":{"gitId":"Jingwencloud"},"content":"**Extensions**","lastModifiedDate":"2021-10-21"},{"lineNumber":1075,"author":{"gitId":"Jingwencloud"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":1076,"author":{"gitId":"Jingwencloud"},"content":"* 2a. The specified group does not exist in AWE.","lastModifiedDate":"2021-10-21"},{"lineNumber":1077,"author":{"gitId":"Jingwencloud"},"content":"    * 2a1. AWE shows a message saying that there is no such existing group.","lastModifiedDate":"2021-10-21"},{"lineNumber":1078,"author":{"gitId":"Jingwencloud"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":1079,"author":{"gitId":"Jingwencloud"},"content":"      Use case ends.","lastModifiedDate":"2021-10-21"},{"lineNumber":1080,"author":{"gitId":"Jingwencloud"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":1081,"author":{"gitId":"Jingwencloud"},"content":"* 2b. There are no expenses matching the search parameters.","lastModifiedDate":"2021-10-21"},{"lineNumber":1082,"author":{"gitId":"Jingwencloud"},"content":"    * 2b1. AWE displays nothing in the expenses page.","lastModifiedDate":"2021-10-21"},{"lineNumber":1083,"author":{"gitId":"Jingwencloud"},"content":"    * 2b2. AWE shows a message saying no expenses are found.","lastModifiedDate":"2021-10-21"},{"lineNumber":1084,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":1085,"author":{"gitId":"marcuspeh"},"content":"      Use case ends.","lastModifiedDate":"2021-09-24"},{"lineNumber":1086,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":1087,"author":{"gitId":"Jingwencloud"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":1088,"author":{"gitId":"marcuspeh"},"content":"**Use case: Find Groups**","lastModifiedDate":"2021-10-21"},{"lineNumber":1089,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":1090,"author":{"gitId":"marcuspeh"},"content":"*MSS*","lastModifiedDate":"2021-10-21"},{"lineNumber":1091,"author":{"gitId":"marcuspeh"},"content":"1. User request to find groups based on keywords.","lastModifiedDate":"2021-10-21"},{"lineNumber":1092,"author":{"gitId":"marcuspeh"},"content":"2. GroupsPage shows a list of groups that matches the search predicates.","lastModifiedDate":"2021-10-21"},{"lineNumber":1093,"author":{"gitId":"marcuspeh"},"content":"3. AWE displays a message with number of groups found","lastModifiedDate":"2021-10-21"},{"lineNumber":1094,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":1095,"author":{"gitId":"marcuspeh"},"content":"    Use case ends","lastModifiedDate":"2021-10-21"},{"lineNumber":1096,"author":{"gitId":"marcuspeh"},"content":"    ","lastModifiedDate":"2021-10-21"},{"lineNumber":1097,"author":{"gitId":"marcuspeh"},"content":"**Extension**","lastModifiedDate":"2021-10-21"},{"lineNumber":1098,"author":{"gitId":"marcuspeh"},"content":"* 2a. AWE can\u0027t find any groups that matches the keywords.","lastModifiedDate":"2021-10-21"},{"lineNumber":1099,"author":{"gitId":"marcuspeh"},"content":"    2a1. GroupsPage shows an empty page","lastModifiedDate":"2021-10-21"},{"lineNumber":1100,"author":{"gitId":"marcuspeh"},"content":"    ","lastModifiedDate":"2021-10-21"},{"lineNumber":1101,"author":{"gitId":"marcuspeh"},"content":"    Use case continues","lastModifiedDate":"2021-10-21"},{"lineNumber":1102,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":1103,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":1104,"author":{"gitId":"kheekheekhee"},"content":"**Use case: Add Expense**","lastModifiedDate":"2021-09-25"},{"lineNumber":1105,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":1106,"author":{"gitId":"kheekheekhee"},"content":"**Preconditions: User has is a member of the specified travel group**","lastModifiedDate":"2021-10-21"},{"lineNumber":1107,"author":{"gitId":"kheekheekhee"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":1108,"author":{"gitId":"kheekheekhee"},"content":"**MSS**","lastModifiedDate":"2021-09-25"},{"lineNumber":1109,"author":{"gitId":"kheekheekhee"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":1110,"author":{"gitId":"kheekheekhee"},"content":"1. User requests to add an expense to the active travel group","lastModifiedDate":"2021-09-25"},{"lineNumber":1111,"author":{"gitId":"kheekheekhee"},"content":"2. AWE displays confirmation message.","lastModifiedDate":"2021-09-25"},{"lineNumber":1112,"author":{"gitId":"kheekheekhee"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":1113,"author":{"gitId":"kheekheekhee"},"content":"    Use case ends.","lastModifiedDate":"2021-09-25"},{"lineNumber":1114,"author":{"gitId":"kheekheekhee"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":1115,"author":{"gitId":"kheekheekhee"},"content":"**Extensions**","lastModifiedDate":"2021-09-25"},{"lineNumber":1116,"author":{"gitId":"kheekheekhee"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":1117,"author":{"gitId":"kheekheekhee"},"content":"* 1a. AWE detects that there are no travel groups active.","lastModifiedDate":"2021-09-25"},{"lineNumber":1118,"author":{"gitId":"kheekheekhee"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":1119,"author":{"gitId":"kheekheekhee"},"content":"    * 1a1. AWE informs user that no travel groups are active.","lastModifiedDate":"2021-09-25"},{"lineNumber":1120,"author":{"gitId":"chrus-chong"},"content":"  ","lastModifiedDate":"2021-09-23"},{"lineNumber":1121,"author":{"gitId":"kheekheekhee"},"content":"      Use case ends.","lastModifiedDate":"2021-09-25"},{"lineNumber":1122,"author":{"gitId":"kheekheekhee"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":1123,"author":{"gitId":"kheekheekhee"},"content":"* 1b. AWE detects that inputted command is an incorrect format.","lastModifiedDate":"2021-09-25"},{"lineNumber":1124,"author":{"gitId":"kheekheekhee"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":1125,"author":{"gitId":"kheekheekhee"},"content":"    * 1b1. AWE informs user that expense was not added and reminds the user of the correct format/","lastModifiedDate":"2021-09-25"},{"lineNumber":1126,"author":{"gitId":"kheekheekhee"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":1127,"author":{"gitId":"kheekheekhee"},"content":"      Use case ends.","lastModifiedDate":"2021-09-25"},{"lineNumber":1128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":1129,"author":{"gitId":"Jingwencloud"},"content":"**Use case: Delete a shared expense**","lastModifiedDate":"2021-09-26"},{"lineNumber":1130,"author":{"gitId":"Jingwencloud"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":1131,"author":{"gitId":"ramapriyan912001"},"content":"**Preconditions: User\u0027s last entered command is either `findexpenses` or `expenses`, i.e. the user is viewing an expense list.**","lastModifiedDate":"2021-10-29"},{"lineNumber":1132,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":1133,"author":{"gitId":"Jingwencloud"},"content":"**MSS**","lastModifiedDate":"2021-09-26"},{"lineNumber":1134,"author":{"gitId":"Jingwencloud"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":1135,"author":{"gitId":"ramapriyan912001"},"content":"1. User requests to delete an expense from list of expenses viewed by its position on screen.","lastModifiedDate":"2021-10-29"},{"lineNumber":1136,"author":{"gitId":"ramapriyan912001"},"content":"2. AWE deletes the specified expense.","lastModifiedDate":"2021-10-29"},{"lineNumber":1137,"author":{"gitId":"ramapriyan912001"},"content":"3. AWE shows updated list of expenses.","lastModifiedDate":"2021-10-29"},{"lineNumber":1138,"author":{"gitId":"ramapriyan912001"},"content":"4. AWE displays confirmation message.","lastModifiedDate":"2021-10-29"},{"lineNumber":1139,"author":{"gitId":"Jingwencloud"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":1140,"author":{"gitId":"Jingwencloud"},"content":"   Use case ends. ","lastModifiedDate":"2021-09-26"},{"lineNumber":1141,"author":{"gitId":"Jingwencloud"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":1142,"author":{"gitId":"Jingwencloud"},"content":"**Extensions**","lastModifiedDate":"2021-09-26"},{"lineNumber":1143,"author":{"gitId":"Jingwencloud"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":1144,"author":{"gitId":"ramapriyan912001"},"content":"* 2a. The given index is not within range 1 to length of list of expenses on screen.","lastModifiedDate":"2021-10-29"},{"lineNumber":1145,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":1146,"author":{"gitId":"ramapriyan912001"},"content":"    * 2a1. AWE shows an error message saying index is invalid.","lastModifiedDate":"2021-10-29"},{"lineNumber":1147,"author":{"gitId":"Jingwencloud"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":1148,"author":{"gitId":"Jingwencloud"},"content":"      Use case ends.","lastModifiedDate":"2021-09-26"},{"lineNumber":1149,"author":{"gitId":"Jingwencloud"},"content":"  ","lastModifiedDate":"2021-09-26"},{"lineNumber":1150,"author":{"gitId":"ramapriyan912001"},"content":"* 2b. User is not viewing a list of expenses when entering command.","lastModifiedDate":"2021-10-29"},{"lineNumber":1151,"author":{"gitId":"Jingwencloud"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":1152,"author":{"gitId":"ramapriyan912001"},"content":"    * 2b1. AWE shows an error message asking user to enter `findexpenses` or `expenses` command first.","lastModifiedDate":"2021-10-29"},{"lineNumber":1153,"author":{"gitId":"Jingwencloud"},"content":"  ","lastModifiedDate":"2021-09-26"},{"lineNumber":1154,"author":{"gitId":"ramapriyan912001"},"content":"      Use case ends.","lastModifiedDate":"2021-10-29"},{"lineNumber":1155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":1156,"author":{"gitId":"chrus-chong"},"content":"**Use case: Clear AddressBook of all entries**","lastModifiedDate":"2021-09-29"},{"lineNumber":1157,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":1158,"author":{"gitId":"chrus-chong"},"content":"**MSS**","lastModifiedDate":"2021-09-29"},{"lineNumber":1159,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":1160,"author":{"gitId":"ramapriyan912001"},"content":"1. User enters clearalldata command.","lastModifiedDate":"2021-10-30"},{"lineNumber":1161,"author":{"gitId":"chrus-chong"},"content":"2. All entries are deleted from AddressBook.","lastModifiedDate":"2021-09-29"},{"lineNumber":1162,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":1163,"author":{"gitId":"chrus-chong"},"content":"   Use case ends.","lastModifiedDate":"2021-09-29"},{"lineNumber":1164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":1165,"author":{"gitId":"ramapriyan912001"},"content":"**Use case: Calculate payments**","lastModifiedDate":"2021-10-29"},{"lineNumber":1166,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":1167,"author":{"gitId":"ramapriyan912001"},"content":"**MSS**","lastModifiedDate":"2021-10-29"},{"lineNumber":1168,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":1169,"author":{"gitId":"ramapriyan912001"},"content":"1. User requests to calculate and show payments to be made for a specified group.","lastModifiedDate":"2021-10-29"},{"lineNumber":1170,"author":{"gitId":"ramapriyan912001"},"content":"2. AWE calculate payments for the specified group.","lastModifiedDate":"2021-10-29"},{"lineNumber":1171,"author":{"gitId":"ramapriyan912001"},"content":"3. AWE shows list of payments.","lastModifiedDate":"2021-10-29"},{"lineNumber":1172,"author":{"gitId":"ramapriyan912001"},"content":"4. AWE displays confirmation message.","lastModifiedDate":"2021-10-29"},{"lineNumber":1173,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":1174,"author":{"gitId":"ramapriyan912001"},"content":"   Use case ends.","lastModifiedDate":"2021-10-29"},{"lineNumber":1175,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":1176,"author":{"gitId":"ramapriyan912001"},"content":"**Extensions**","lastModifiedDate":"2021-10-29"},{"lineNumber":1177,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":1178,"author":{"gitId":"ramapriyan912001"},"content":"* 2b. AWE detects group name that is not in address book.","lastModifiedDate":"2021-10-29"},{"lineNumber":1179,"author":{"gitId":"ramapriyan912001"},"content":"  ","lastModifiedDate":"2021-10-29"},{"lineNumber":1180,"author":{"gitId":"ramapriyan912001"},"content":"  * 2a1. AWE displays message to remind User to type in name of a group inside the addressbook.","lastModifiedDate":"2021-10-29"},{"lineNumber":1181,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":1182,"author":{"gitId":"ramapriyan912001"},"content":"    Use case ends.","lastModifiedDate":"2021-10-29"},{"lineNumber":1183,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":1184,"author":{"gitId":"ramapriyan912001"},"content":"* 2b. There are no payments to be made.","lastModifiedDate":"2021-10-29"},{"lineNumber":1185,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":1186,"author":{"gitId":"ramapriyan912001"},"content":"  * 2b1. AWE shows an empty list of payments.","lastModifiedDate":"2021-10-29"},{"lineNumber":1187,"author":{"gitId":"ramapriyan912001"},"content":"  * 2b2. AWE displays a confirmation message stating that there are no payments to be made.","lastModifiedDate":"2021-10-29"},{"lineNumber":1188,"author":{"gitId":"ramapriyan912001"},"content":"    ","lastModifiedDate":"2021-10-29"},{"lineNumber":1189,"author":{"gitId":"ramapriyan912001"},"content":"    Use case ends.","lastModifiedDate":"2021-10-29"},{"lineNumber":1190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":1191,"author":{"gitId":"-"},"content":"### Non-Functional Requirements","lastModifiedDate":"2020-05-23"},{"lineNumber":1192,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":1193,"author":{"gitId":"-"},"content":"1.  Should work on any _mainstream OS_ as long as it has Java `11` or above installed.","lastModifiedDate":"2020-05-23"},{"lineNumber":1194,"author":{"gitId":"marcuspeh"},"content":"2.  Should be able to hold up to 1000 contacts without a noticeable sluggishness in performance for typical usage.","lastModifiedDate":"2021-10-31"},{"lineNumber":1195,"author":{"gitId":"-"},"content":"3.  A user with above average typing speed for regular English text (i.e. not code, not system admin commands) should be able to accomplish most of the tasks faster using commands than using the mouse.","lastModifiedDate":"2020-05-23"},{"lineNumber":1196,"author":{"gitId":"kheekheekhee"},"content":"4.  Should be able to hold up to 100 groups without a noticeable sluggishness in performance for typical usage.","lastModifiedDate":"2021-09-30"},{"lineNumber":1197,"author":{"gitId":"marcuspeh"},"content":"5.  Layout between contacts and groups should be intuitive and easy to understand and navigate.","lastModifiedDate":"2021-10-31"},{"lineNumber":1198,"author":{"gitId":"kheekheekhee"},"content":"6.  Usage of `$` should be standardized for money.","lastModifiedDate":"2021-09-30"},{"lineNumber":1199,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":1200,"author":{"gitId":"-"},"content":"*{More to be added}*","lastModifiedDate":"2020-05-23"},{"lineNumber":1201,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":1202,"author":{"gitId":"-"},"content":"### Glossary","lastModifiedDate":"2020-05-23"},{"lineNumber":1203,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":1204,"author":{"gitId":"-"},"content":"* **Mainstream OS**: Windows, Linux, Unix, OS-X","lastModifiedDate":"2020-05-23"},{"lineNumber":1205,"author":{"gitId":"-"},"content":"* **Private contact detail**: A contact detail that is not meant to be shared with others","lastModifiedDate":"2020-05-23"},{"lineNumber":1206,"author":{"gitId":"marcuspeh"},"content":"* **AddressBook**: The page displaying all the contacts","lastModifiedDate":"2021-09-24"},{"lineNumber":1207,"author":{"gitId":"marcuspeh"},"content":"* **ContactPage**: The page displaying all the contacts","lastModifiedDate":"2021-09-29"},{"lineNumber":1208,"author":{"gitId":"marcuspeh"},"content":"* **GroupsPage**: The page displaying all the travel groups","lastModifiedDate":"2021-09-29"},{"lineNumber":1209,"author":{"gitId":"Jingwencloud"},"content":"* **ExpensesPage**: The page displaying all the expenses of a travel group","lastModifiedDate":"2021-09-30"},{"lineNumber":1210,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":1211,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":1212,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":1213,"author":{"gitId":"-"},"content":"## **Appendix: Instructions for manual testing**","lastModifiedDate":"2020-05-23"},{"lineNumber":1214,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":1215,"author":{"gitId":"-"},"content":"Given below are instructions to test the app manually.","lastModifiedDate":"2020-05-23"},{"lineNumber":1216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":1217,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** These instructions only provide a starting point for testers to work on;","lastModifiedDate":"2020-05-23"},{"lineNumber":1218,"author":{"gitId":"-"},"content":"testers are expected to do more *exploratory* testing.","lastModifiedDate":"2020-05-23"},{"lineNumber":1219,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":1220,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":1221,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":1222,"author":{"gitId":"-"},"content":"### Launch and shutdown","lastModifiedDate":"2020-05-23"},{"lineNumber":1223,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":1224,"author":{"gitId":"-"},"content":"1. Initial launch","lastModifiedDate":"2020-05-23"},{"lineNumber":1225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":1226,"author":{"gitId":"-"},"content":"   1. Download the jar file and copy into an empty folder","lastModifiedDate":"2020-05-23"},{"lineNumber":1227,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":1228,"author":{"gitId":"-"},"content":"   1. Double-click the jar file Expected: Shows the GUI with a set of sample contacts. The window size may not be optimum.","lastModifiedDate":"2020-05-23"},{"lineNumber":1229,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":1230,"author":{"gitId":"-"},"content":"1. Saving window preferences","lastModifiedDate":"2020-05-23"},{"lineNumber":1231,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":1232,"author":{"gitId":"-"},"content":"   1. Resize the window to an optimum size. Move the window to a different location. Close the window.","lastModifiedDate":"2020-05-23"},{"lineNumber":1233,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":1234,"author":{"gitId":"-"},"content":"   1. Re-launch the app by double-clicking the jar file.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":1235,"author":{"gitId":"-"},"content":"       Expected: The most recent window size and location is retained.","lastModifiedDate":"2020-05-23"},{"lineNumber":1236,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":1237,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"},{"lineNumber":1238,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":1239,"author":{"gitId":"-"},"content":"### Deleting a person","lastModifiedDate":"2020-05-23"},{"lineNumber":1240,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":1241,"author":{"gitId":"marcuspeh"},"content":"1. Deleting a person while all contacts are being shown","lastModifiedDate":"2021-10-31"},{"lineNumber":1242,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":1243,"author":{"gitId":"marcuspeh"},"content":"   1. Prerequisites: List all contacts using the `contacts` command. Multiple contacts in the list.","lastModifiedDate":"2021-10-31"},{"lineNumber":1244,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":1245,"author":{"gitId":"-"},"content":"   1. Test case: `delete 1`\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":1246,"author":{"gitId":"-"},"content":"      Expected: First contact is deleted from the list. Details of the deleted contact shown in the status message. Timestamp in the status bar is updated.","lastModifiedDate":"2020-05-23"},{"lineNumber":1247,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":1248,"author":{"gitId":"-"},"content":"   1. Test case: `delete 0`\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":1249,"author":{"gitId":"marcuspeh"},"content":"      Expected: No contact is deleted. Error details shown in the status message. Status bar remains the same.","lastModifiedDate":"2021-10-31"},{"lineNumber":1250,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":1251,"author":{"gitId":"-"},"content":"   1. Other incorrect delete commands to try: `delete`, `delete x`, `...` (where x is larger than the list size)\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":1252,"author":{"gitId":"-"},"content":"      Expected: Similar to previous.","lastModifiedDate":"2020-05-23"},{"lineNumber":1253,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":1254,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"},{"lineNumber":1255,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":1256,"author":{"gitId":"marcuspeh"},"content":"### Search for groups","lastModifiedDate":"2021-10-21"},{"lineNumber":1257,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":1258,"author":{"gitId":"marcuspeh"},"content":"1. Search for groups in GroupPage","lastModifiedDate":"2021-10-21"},{"lineNumber":1259,"author":{"gitId":"marcuspeh"},"content":"    1. Prerequisites: The preloaded data for groups are not modified. (No groups are removed or added)","lastModifiedDate":"2021-10-21"},{"lineNumber":1260,"author":{"gitId":"marcuspeh"},"content":"    ","lastModifiedDate":"2021-10-21"},{"lineNumber":1261,"author":{"gitId":"marcuspeh"},"content":"    1. Test case: `findgroups London`","lastModifiedDate":"2021-10-21"},{"lineNumber":1262,"author":{"gitId":"marcuspeh"},"content":"       Expected: GroupList will list out 1 group with the name \u0027London\u0027. 1 groups found shown in the status message.","lastModifiedDate":"2021-10-21"},{"lineNumber":1263,"author":{"gitId":"marcuspeh"},"content":"       ","lastModifiedDate":"2021-10-21"},{"lineNumber":1264,"author":{"gitId":"marcuspeh"},"content":"    1. Test case: `findgroups London Singapore`","lastModifiedDate":"2021-10-21"},{"lineNumber":1265,"author":{"gitId":"marcuspeh"},"content":"       Expected: GroupList will list out 1 group with the name \u0027London\u0027. 1 groups found shown in the status message.","lastModifiedDate":"2021-10-21"},{"lineNumber":1266,"author":{"gitId":"marcuspeh"},"content":"    ","lastModifiedDate":"2021-10-21"},{"lineNumber":1267,"author":{"gitId":"marcuspeh"},"content":"    1. Test case: `findgroups Singapore`","lastModifiedDate":"2021-10-21"},{"lineNumber":1268,"author":{"gitId":"marcuspeh"},"content":"       Expected: GroupList will display a blank page. 0 groups found shown in status message.","lastModifiedDate":"2021-10-21"},{"lineNumber":1269,"author":{"gitId":"marcuspeh"},"content":"       ","lastModifiedDate":"2021-10-21"},{"lineNumber":1270,"author":{"gitId":"marcuspeh"},"content":"2. Search for groups in ContactPage","lastModifiedDate":"2021-10-21"},{"lineNumber":1271,"author":{"gitId":"marcuspeh"},"content":"   1. Prerequisites: The preloaded data for groups are not modified. (No groups are removed or added)","lastModifiedDate":"2021-10-21"},{"lineNumber":1272,"author":{"gitId":"marcuspeh"},"content":"   ","lastModifiedDate":"2021-10-21"},{"lineNumber":1273,"author":{"gitId":"marcuspeh"},"content":"   1. Test case: `findgroups London`","lastModifiedDate":"2021-10-21"},{"lineNumber":1274,"author":{"gitId":"marcuspeh"},"content":"      Expected: GroupList displayed. GroupList will list out 1 group with the name \u0027London\u0027. 1 groups found shown in the status message.","lastModifiedDate":"2021-10-21"},{"lineNumber":1275,"author":{"gitId":"marcuspeh"},"content":"      ","lastModifiedDate":"2021-10-21"},{"lineNumber":1276,"author":{"gitId":"marcuspeh"},"content":"   1. Test case: `findgroups London Singapore`","lastModifiedDate":"2021-10-21"},{"lineNumber":1277,"author":{"gitId":"marcuspeh"},"content":"      Expected: GroupList displayed. GroupList will list out 1 group with the name \u0027London\u0027. 1 groups found shown in the status message.","lastModifiedDate":"2021-10-21"},{"lineNumber":1278,"author":{"gitId":"marcuspeh"},"content":"   ","lastModifiedDate":"2021-10-21"},{"lineNumber":1279,"author":{"gitId":"marcuspeh"},"content":"   1. Test case: `findgroups Singapore`","lastModifiedDate":"2021-10-21"},{"lineNumber":1280,"author":{"gitId":"marcuspeh"},"content":"      Expected: GroupList displayed. GroupList will display a blank page. 0 groups found shown in status message.","lastModifiedDate":"2021-10-21"},{"lineNumber":1281,"author":{"gitId":"marcuspeh"},"content":"    ","lastModifiedDate":"2021-10-21"},{"lineNumber":1282,"author":{"gitId":"marcuspeh"},"content":"    ","lastModifiedDate":"2021-10-21"},{"lineNumber":1283,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":1284,"author":{"gitId":"marcuspeh"},"content":"### Viewing expenses","lastModifiedDate":"2021-09-24"},{"lineNumber":1285,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":1286,"author":{"gitId":"marcuspeh"},"content":"1. Viewing all expenses of a travel group","lastModifiedDate":"2021-09-24"},{"lineNumber":1287,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":1288,"author":{"gitId":"Jingwencloud"},"content":"   1. Prerequisites: Have at least one group in the app.","lastModifiedDate":"2021-10-21"},{"lineNumber":1289,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":1290,"author":{"gitId":"Jingwencloud"},"content":"   1. Test case: `expenses gn/London`\u003cbr\u003e","lastModifiedDate":"2021-10-21"},{"lineNumber":1291,"author":{"gitId":"Jingwencloud"},"content":"      Expected: Expenses under the group named London are displayed. Details of the operation shown in the status message.","lastModifiedDate":"2021-10-21"},{"lineNumber":1292,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":1293,"author":{"gitId":"Jingwencloud"},"content":"   1. Test case: `expenses gn/Test`\u003cbr\u003e","lastModifiedDate":"2021-10-21"},{"lineNumber":1294,"author":{"gitId":"Jingwencloud"},"content":"      Expected: No expenses displayed as group does not exist. Error details shown in the status message.","lastModifiedDate":"2021-10-21"},{"lineNumber":1295,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":1296,"author":{"gitId":"Jingwencloud"},"content":"   1. Other incorrect delete commands to try: `expenses`, `delete gn/`, `...`","lastModifiedDate":"2021-10-21"},{"lineNumber":1297,"author":{"gitId":"marcuspeh"},"content":"      Expected: Similar to previous.","lastModifiedDate":"2021-09-24"},{"lineNumber":1298,"author":{"gitId":"marcuspeh"},"content":"      ","lastModifiedDate":"2021-09-24"},{"lineNumber":1299,"author":{"gitId":"Jingwencloud"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":1300,"author":{"gitId":"Jingwencloud"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":1301,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2021-09-24"},{"lineNumber":1302,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":1303,"author":{"gitId":"-"},"content":"### Saving data","lastModifiedDate":"2020-05-23"},{"lineNumber":1304,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":1305,"author":{"gitId":"-"},"content":"1. Dealing with missing/corrupted data files","lastModifiedDate":"2020-05-23"},{"lineNumber":1306,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":1307,"author":{"gitId":"-"},"content":"   1. _{explain how to simulate a missing/corrupted file, and the expected behavior}_","lastModifiedDate":"2020-05-23"},{"lineNumber":1308,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":1309,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"marcuspeh":260,"Jingwencloud":124,"chrus-chong":145,"kheekheekhee":85,"ramapriyan912001":343,"-":352}},{"path":"docs/SettingUp.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: Setting up and getting started","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"## Setting up the project in your computer","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-warning\"\u003e:exclamation: **Caution:**","lastModifiedDate":"2020-06-07"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"Follow the steps in the following guide precisely. Things will not work out if you deviate in some steps.","lastModifiedDate":"2020-06-07"},{"lineNumber":17,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"First, **fork** this repo, and **clone** the fork into your computer.","lastModifiedDate":"2020-06-07"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-06-07"},{"lineNumber":21,"author":{"gitId":"-"},"content":"If you plan to use Intellij IDEA (highly recommended):","lastModifiedDate":"2020-06-07"},{"lineNumber":22,"author":{"gitId":"-"},"content":"1. **Configure the JDK**: Follow the guide [_[se-edu/guides] IDEA: Configuring the JDK_](https://se-education.org/guides/tutorials/intellijJdk.html) to to ensure Intellij is configured to use **JDK 11**.","lastModifiedDate":"2020-06-07"},{"lineNumber":23,"author":{"gitId":"-"},"content":"1. **Import the project as a Gradle project**: Follow the guide [_[se-edu/guides] IDEA: Importing a Gradle project_](https://se-education.org/guides/tutorials/intellijImportGradleProject.html) to import the project into IDEA.\u003cbr\u003e","lastModifiedDate":"2020-06-07"},{"lineNumber":24,"author":{"gitId":"-"},"content":"  :exclamation: Note: Importing a Gradle project is slightly different from importing a normal Java project.","lastModifiedDate":"2020-06-07"},{"lineNumber":25,"author":{"gitId":"-"},"content":"1. **Verify the setup**:","lastModifiedDate":"2020-06-07"},{"lineNumber":26,"author":{"gitId":"ramapriyan912001"},"content":"   1. Run the `seedu.awe.Main` and try a few commands.","lastModifiedDate":"2021-10-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"   1. [Run the tests](Testing.md) to ensure they all pass.","lastModifiedDate":"2020-06-07"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-06-07"},{"lineNumber":29,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"## Before writing code","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"1. **Configure the coding style**","lastModifiedDate":"2020-06-07"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"   If using IDEA, follow the guide [_[se-edu/guides] IDEA: Configuring the code style_](https://se-education.org/guides/tutorials/intellijCodeStyle.html) to set up IDEA\u0027s coding style to match ours.","lastModifiedDate":"2020-09-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"   \u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e:bulb: **Tip:**","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"   Optionally, you can follow the guide [_[se-edu/guides] Using Checkstyle_](https://se-education.org/guides/tutorials/checkstyle.html) to find how to use the CheckStyle within IDEA e.g., to report problems _as_ you write code.","lastModifiedDate":"2020-06-07"},{"lineNumber":40,"author":{"gitId":"-"},"content":"   \u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"1. **Set up CI**","lastModifiedDate":"2020-06-07"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"   This project comes with a GitHub Actions config files (in `.github/workflows` folder). When GitHub detects those files, it will run the CI for your project automatically at each push to the `master` branch or to any PR. No set up required.","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"1. **Learn the design**","lastModifiedDate":"2020-06-07"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"   When you are ready to start coding, we recommend that you get some sense of the overall design by reading about [AddressBook’s architecture](DeveloperGuide.md#architecture).","lastModifiedDate":"2020-06-07"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"1. **Do the tutorials**","lastModifiedDate":"2020-06-07"},{"lineNumber":51,"author":{"gitId":"-"},"content":"   These tutorials will help you get acquainted with the codebase.","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"   * [Tracing code](tutorials/TracingCode.md)","lastModifiedDate":"2020-07-29"},{"lineNumber":54,"author":{"gitId":"-"},"content":"   * [Adding a new command](tutorials/AddRemark.md)","lastModifiedDate":"2020-07-29"},{"lineNumber":55,"author":{"gitId":"-"},"content":"   * [Removing fields](tutorials/RemovingFields.md)","lastModifiedDate":"2021-08-01"}],"authorContributionMap":{"ramapriyan912001":1,"-":54}},{"path":"docs/Testing.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: Testing guide","lastModifiedDate":"2020-06-07"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"## Running tests","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"There are two ways to run tests.","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"* **Method 1: Using IntelliJ JUnit test runner**","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"  * To run all tests, right-click on the `src/test/java` folder and choose `Run \u0027All Tests\u0027`","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"  * To run a subset of tests, you can right-click on a test package,","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    test class, or a test and choose `Run \u0027ABC\u0027`","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"* **Method 2: Using Gradle**","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"  * Open a console and run the command `gradlew clean test` (Mac/Linux: `./gradlew clean test`)","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-secondary\"\u003e:link: **Link**: Read [this Gradle Tutorial from the se-edu/guides](https://se-education.org/guides/tutorials/gradle.html) to learn more about using Gradle.","lastModifiedDate":"2020-06-07"},{"lineNumber":23,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"## Types of tests","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"This project has three types of tests:","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"1. *Unit tests* targeting the lowest level methods/classes.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"ramapriyan912001"},"content":"   e.g. `seedu.awe.commons.StringUtilTest`","lastModifiedDate":"2021-10-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"1. *Integration tests* that are checking the integration of multiple code units (those code units are assumed to be working).\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"ramapriyan912001"},"content":"   e.g. `seedu.awe.storage.StorageManagerTest`","lastModifiedDate":"2021-10-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"1. Hybrids of unit and integration tests. These test are checking multiple code units as well as how the are connected together.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"ramapriyan912001"},"content":"   e.g. `seedu.awe.logic.LogicManagerTest`","lastModifiedDate":"2021-10-05"}],"authorContributionMap":{"ramapriyan912001":3,"-":33}},{"path":"docs/UserGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: User Guide","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"chrus-chong"},"content":"Around the World in $80 (AWE) is a desktop app for keeping track of spending and expenditure during travels, splitting ","lastModifiedDate":"2021-10-26"},{"lineNumber":7,"author":{"gitId":"chrus-chong"},"content":"expenses with travel-mates, and facilitating easy recollection of debts at the end of every trip. AWE is the world\u0027s","lastModifiedDate":"2021-10-26"},{"lineNumber":8,"author":{"gitId":"chrus-chong"},"content":"only bespoke app designed for group travellers.","lastModifiedDate":"2021-10-26"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"chrus-chong"},"content":"The app promises to revolutionise the group-travel space. With AWE, bills can be split and monitored in a centralised","lastModifiedDate":"2021-10-26"},{"lineNumber":11,"author":{"gitId":"chrus-chong"},"content":"manner that minimises the potential for disputes and maximises the efficiency of payment and recollection of debts.","lastModifiedDate":"2021-10-26"},{"lineNumber":12,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":13,"author":{"gitId":"ramapriyan912001"},"content":"AWE\u0027s vision is a more interconnected world where relationships are more easily built and maintained.","lastModifiedDate":"2021-10-25"},{"lineNumber":14,"author":{"gitId":"chrus-chong"},"content":"Our mission is to accomplish through a user-centric approach that seeks to provide the user with what they need, at the","lastModifiedDate":"2021-10-26"},{"lineNumber":15,"author":{"gitId":"chrus-chong"},"content":"tip of their fingertips. This document marks the first step towards the accomplishment of that mission, and the","lastModifiedDate":"2021-10-26"},{"lineNumber":16,"author":{"gitId":"chrus-chong"},"content":"beginning of your journey around the world.","lastModifiedDate":"2021-10-26"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"marcuspeh"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-10-27"},{"lineNumber":19,"author":{"gitId":"marcuspeh"},"content":"\u003cdiv style\u003d\"page-break-after: always;\" id\u003d\"tableofcontents\"\u003e\u003c/div\u003e","lastModifiedDate":"2021-10-31"},{"lineNumber":20,"author":{"gitId":"marcuspeh"},"content":"\u003cp style\u003d\"font-size: 1.75rem; margin-top: 60px; color: #e46c0a; font-weight:400; margin-bottom: 15px;\"\u003eTable of Contents\u003c/p\u003e","lastModifiedDate":"2021-10-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2021-10-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"marcuspeh"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2021-10-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"ramapriyan912001"},"content":"## 1. About the Document","lastModifiedDate":"2021-10-25"},{"lineNumber":27,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":28,"author":{"gitId":"chrus-chong"},"content":"The purpose of this document is to make sure that you have a pleasant and intuitive experience when using our app.","lastModifiedDate":"2021-10-26"},{"lineNumber":29,"author":{"gitId":"chrus-chong"},"content":"In line with our user-centric approach, the guide is structured to ensure that the knowledge of the workings of our app","lastModifiedDate":"2021-10-26"},{"lineNumber":30,"author":{"gitId":"chrus-chong"},"content":"is easily accessible.","lastModifiedDate":"2021-10-26"},{"lineNumber":31,"author":{"gitId":"ramapriyan912001"},"content":"The document serves as a guide for users to understand the way to use our app to extract maximum satisfaction.","lastModifiedDate":"2021-10-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":33,"author":{"gitId":"ramapriyan912001"},"content":"**To accomplish this, we have taken the following steps**","lastModifiedDate":"2021-10-25"},{"lineNumber":34,"author":{"gitId":"chrus-chong"},"content":"* We provide you with a glossary of contents to explain away some vocabulary that you might find confusing, so that you ","lastModifiedDate":"2021-10-26"},{"lineNumber":35,"author":{"gitId":"chrus-chong"},"content":"can focus on exploring AWE to the full extent of its functionalities.","lastModifiedDate":"2021-10-26"},{"lineNumber":36,"author":{"gitId":"ramapriyan912001"},"content":"* We provide you with the tools to be able to read this guide with little need for re-referencing previous sections.","lastModifiedDate":"2021-10-25"},{"lineNumber":37,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":38,"author":{"gitId":"marcuspeh"},"content":"[Section 1](#1-about-the-document) provides readers with a brief overview of how to use this document. [Section 2](#2-quick-start) details the setting up of AWE","lastModifiedDate":"2021-10-31"},{"lineNumber":39,"author":{"gitId":"marcuspeh"},"content":"and [Section 3](#2-features) documents the main features of AWE. If you still face problems using AWE, refer to our FAQ in [Section 4](#4-faq). ","lastModifiedDate":"2021-10-31"},{"lineNumber":40,"author":{"gitId":"marcuspeh"},"content":"For a summary of all the commands available, refer to [Section 5](#5-command-summary).","lastModifiedDate":"2021-10-31"},{"lineNumber":41,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":42,"author":{"gitId":"marcuspeh"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2021-10-27"},{"lineNumber":43,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":44,"author":{"gitId":"ramapriyan912001"},"content":"### 1.1 Glossary","lastModifiedDate":"2021-10-25"},{"lineNumber":45,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":46,"author":{"gitId":"ramapriyan912001"},"content":"Term | Explanation","lastModifiedDate":"2021-10-25"},{"lineNumber":47,"author":{"gitId":"ramapriyan912001"},"content":"--------|------------------","lastModifiedDate":"2021-10-25"},{"lineNumber":48,"author":{"gitId":"ramapriyan912001"},"content":"**Command Line Interface (CLI)** | The Command Line Interface, or CLI for short, is the user interface on which AWE is based. This means that most of AWE\u0027s functionality is unlocked by the typing of inputs by the user, rather than the clicking of a mouse or the selection of options via a menu.","lastModifiedDate":"2021-10-25"},{"lineNumber":49,"author":{"gitId":"chrus-chong"},"content":"**Graphical User Interface (GUI)** | The Graphical User Interface, or GUI for short, is a user interface which supports all of its features through the clicking of a mouse or the selection of options via a menu. It does not require users to type in commands.","lastModifiedDate":"2021-10-26"},{"lineNumber":50,"author":{"gitId":"ramapriyan912001"},"content":"**Command** | Commands are the user inputs that trigger the specific features of the app. Commands are often denoted in highlighted letters. For instance, to create a group, the `creategroup` command is utilised. ","lastModifiedDate":"2021-10-25"},{"lineNumber":51,"author":{"gitId":"marcuspeh"},"content":"**Parameter** | A Parameter refers to a specific detail required for a command. For instance, adding a contact within an app would require a details such as the contact\u0027s name. In this case, the name is a parameter of this command. Parameters are often denoted in the guide in highlighted uppercase letters, for eg. `NAME`.","lastModifiedDate":"2021-10-31"},{"lineNumber":52,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":53,"author":{"gitId":"chrus-chong"},"content":"### 1.2 Format of commands","lastModifiedDate":"2021-10-26"},{"lineNumber":54,"author":{"gitId":"chrus-chong"},"content":"If you wish to jump straight into using our features, refer to Section 5 for the summary of commands.","lastModifiedDate":"2021-10-26"},{"lineNumber":55,"author":{"gitId":"chrus-chong"},"content":"Here are some pointers to take note of.","lastModifiedDate":"2021-10-26"},{"lineNumber":56,"author":{"gitId":"chrus-chong"},"content":"1. Words in `UPPER_CASE` are parameters to be supplied by you.","lastModifiedDate":"2021-10-26"},{"lineNumber":57,"author":{"gitId":"chrus-chong"},"content":"2. Words that are enclosed in `[   ]` denote optional parameters that the user can choose to enter or leave out.","lastModifiedDate":"2021-10-26"},{"lineNumber":58,"author":{"gitId":"chrus-chong"},"content":"3. You will notice that our commands require you to use characters such as `e/`, `t/`, etc. This is allows our programme","lastModifiedDate":"2021-10-26"},{"lineNumber":59,"author":{"gitId":"chrus-chong"},"content":"to locate which words belong to which category of input.","lastModifiedDate":"2021-10-26"},{"lineNumber":60,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":61,"author":{"gitId":"marcuspeh"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-10-31"},{"lineNumber":62,"author":{"gitId":"marcuspeh"},"content":"[Click here to return to table of contents](#tableofcontents)","lastModifiedDate":"2021-10-31"},{"lineNumber":63,"author":{"gitId":"marcuspeh"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-10-31"},{"lineNumber":64,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-10-25"},{"lineNumber":65,"author":{"gitId":"marcuspeh"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2021-10-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":67,"author":{"gitId":"chrus-chong"},"content":"## 2. Quick start","lastModifiedDate":"2021-10-26"},{"lineNumber":68,"author":{"gitId":"chrus-chong"},"content":"AWE\u0027s primary asset is its speed. Unlike traditional Graphic User Interfaces (GUIs) which rely on slow actions such as mouse clicking and selection of options from long menus, with its CLI, AWE offers users the benefit of speed.","lastModifiedDate":"2021-10-26"},{"lineNumber":69,"author":{"gitId":"chrus-chong"},"content":"For those who type fast, the app will be faster than most mainstream contact management apps.","lastModifiedDate":"2021-10-26"},{"lineNumber":70,"author":{"gitId":"chrus-chong"},"content":"For those who are not as fast, familiarity with the commands over time will allow you to harness the full capabilities of AWE.","lastModifiedDate":"2021-10-26"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"marcuspeh"},"content":"1. Ensure you have Java `11` or above installed in your Computer. Follow [this guide](https://www.codejava.net/java-se/download-and-install-java-11-openjdk-and-oracle-jdk) to install it.","lastModifiedDate":"2021-10-31"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"marcuspeh"},"content":"2. Download the latest `awe.jar` from [here](https://github.com/AY2122S1-CS2103T-F13-1/tp/releases).","lastModifiedDate":"2021-10-31"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"chrus-chong"},"content":"3. Copy the file to the folder you want to use as the _home folder_ for your tp.","lastModifiedDate":"2021-10-21"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"chrus-chong"},"content":"4. Double-click the file to start the app. The GUI similar to the below should appear in a few seconds. Note how the app contains some sample data.\u003cbr\u003e","lastModifiedDate":"2021-10-21"},{"lineNumber":79,"author":{"gitId":"marcuspeh"},"content":"   ![Ui](images/AweUi.png)","lastModifiedDate":"2021-10-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"   ","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"marcuspeh"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2021-10-27"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":83,"author":{"gitId":"chrus-chong"},"content":"5. Type the command in the command box and press Enter to execute it. e.g. typing **`help`** and pressing Enter will open the help window.\u003cbr\u003e","lastModifiedDate":"2021-10-21"},{"lineNumber":84,"author":{"gitId":"-"},"content":"   Some example commands you can try:","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"marcuspeh"},"content":"   * **`contacts`** : The command `contacts` lists all contacts.","lastModifiedDate":"2021-09-29"},{"lineNumber":87,"author":{"gitId":"marcuspeh"},"content":"   ","lastModifiedDate":"2021-09-29"},{"lineNumber":88,"author":{"gitId":"marcuspeh"},"content":"   * **`groups`** : The command `groups` lists all groups.","lastModifiedDate":"2021-09-29"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"marcuspeh"},"content":"   * **`expenses`** : The command `expenses gn/London` lists all expenses in the preloaded group `London`.","lastModifiedDate":"2021-10-31"},{"lineNumber":91,"author":{"gitId":"Jingwencloud"},"content":"     ","lastModifiedDate":"2021-10-15"},{"lineNumber":92,"author":{"gitId":"marcuspeh"},"content":"   * **`addcontact`** : The command `addcontact n/John Doe p/98765432` adds a contact named `John Doe` to AWE.","lastModifiedDate":"2021-11-01"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"marcuspeh"},"content":"   * **`deletecontact`** : The command `deletecontact 3` removes the 3rd contact shown in the current list.","lastModifiedDate":"2021-10-11"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"marcuspeh"},"content":"   * **`creategroup`** : The command `creategroup gn/Bali n/John Doe n/Alex Yeoh t/friends` creates a group named Bali containing members `John Doe` and `Alex Yeoh`, with the tag `friends`.","lastModifiedDate":"2021-11-01"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":98,"author":{"gitId":"ramapriyan912001"},"content":"   * **`deletegroup`** : The command `deletegroup gn/Bali` removes the group named Bali.","lastModifiedDate":"2021-10-10"},{"lineNumber":99,"author":{"gitId":"ramapriyan912001"},"content":"   ","lastModifiedDate":"2021-10-10"},{"lineNumber":100,"author":{"gitId":"kheekheekhee"},"content":"   * **`addexpense`** : The command `addexpense n/Alex Yeoh gn/Bali $/50 d/drinks` adds an expense paid for by `Alex Yeoh` into the group `Bali` of `$50` for `drinks`.","lastModifiedDate":"2021-10-12"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":102,"author":{"gitId":"ramapriyan912001"},"content":"   * **`deleteexpense`** : The command `deleteexpense 1` removes the 1st expense (by one-based-index) from the list of expenses visible to the user.","lastModifiedDate":"2021-10-25"},{"lineNumber":103,"author":{"gitId":"ramapriyan912001"},"content":"   ","lastModifiedDate":"2021-10-10"},{"lineNumber":104,"author":{"gitId":"marcuspeh"},"content":"   * **`transactionsummary `** : The command `transactionsummary  gn/Bali` provides a list of spending made by each user in the group named Bali.","lastModifiedDate":"2021-10-22"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":106,"author":{"gitId":"ramapriyan912001"},"content":"   * **`calculatepayments`** : The command `calculatepayments gn/Bali` provides a list of payments to be made between users to settle debts for the group named Bali.","lastModifiedDate":"2021-10-21"},{"lineNumber":107,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":108,"author":{"gitId":"ramapriyan912001"},"content":"   * **`clearalldata`** : The command `clearalldata` removes all expenses / contacts / groups.","lastModifiedDate":"2021-10-30"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":110,"author":{"gitId":"marcuspeh"},"content":"   * **`editcontact`** : The command `editcontact 1 n/Thomas Betty` edits the name of the 1st contact to be Thomas Betty and removes all existing tags.","lastModifiedDate":"2021-10-31"},{"lineNumber":111,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":112,"author":{"gitId":"ramapriyan912001"},"content":"   * **`exit`** : The command `exit` exits the app.","lastModifiedDate":"2021-09-23"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":114,"author":{"gitId":"chrus-chong"},"content":"6. Refer to the [Features](#features) below for details of each command.","lastModifiedDate":"2021-10-21"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":116,"author":{"gitId":"marcuspeh"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-10-31"},{"lineNumber":117,"author":{"gitId":"marcuspeh"},"content":"[Click here to return to table of contents](#tableofcontents)","lastModifiedDate":"2021-10-31"},{"lineNumber":118,"author":{"gitId":"marcuspeh"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-10-31"},{"lineNumber":119,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":120,"author":{"gitId":"marcuspeh"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2021-10-27"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"chrus-chong"},"content":"## 3. Features","lastModifiedDate":"2021-10-26"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-info\"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":126,"author":{"gitId":"ramapriyan912001"},"content":"**Notes about the command format:**\u003cbr\u003e","lastModifiedDate":"2021-09-23"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":128,"author":{"gitId":"-"},"content":"* Words in `UPPER_CASE` are the parameters to be supplied by the user.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":129,"author":{"gitId":"-"},"content":"  e.g. in `add n/NAME`, `NAME` is a parameter which can be used as `add n/John Doe`.","lastModifiedDate":"2020-05-23"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":131,"author":{"gitId":"-"},"content":"* Items in square brackets are optional.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":132,"author":{"gitId":"-"},"content":"  e.g `n/NAME [t/TAG]` can be used as `n/John Doe t/friend` or as `n/John Doe`.","lastModifiedDate":"2020-05-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"* Items with `…`​ after them can be used multiple times including zero times.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"  e.g. `[t/TAG]…​` can be used as ` ` (i.e. 0 times), `t/friend`, `t/friend t/family` etc.","lastModifiedDate":"2020-05-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":137,"author":{"gitId":"marcuspeh"},"content":"* Parameters can be in any order other than `addexpenses`. Look at [`addexoense`](#332-adding-a-shared-expense-addexpense) for more details regarding it. \u003cbr\u003e","lastModifiedDate":"2021-11-01"},{"lineNumber":138,"author":{"gitId":"-"},"content":"  e.g. if the command specifies `n/NAME p/PHONE_NUMBER`, `p/PHONE_NUMBER n/NAME` is also acceptable.","lastModifiedDate":"2020-05-23"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"* If a parameter is expected only once in the command but you specified it multiple times, only the last occurrence of the parameter will be taken.\u003cbr\u003e","lastModifiedDate":"2021-02-04"},{"lineNumber":141,"author":{"gitId":"-"},"content":"  e.g. if you specify `p/12341234 p/56785678`, only `p/56785678` will be taken.","lastModifiedDate":"2021-02-04"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":143,"author":{"gitId":"ramapriyan912001"},"content":"* Extraneous parameters for commands that do not take in parameters (such as `help`, `list`, `exit` and `clearalldata`) will be ignored.\u003cbr\u003e","lastModifiedDate":"2021-10-30"},{"lineNumber":144,"author":{"gitId":"-"},"content":"  e.g. if the command specifies `help 123`, it will be interpreted as `help`.","lastModifiedDate":"2021-02-03"},{"lineNumber":145,"author":{"gitId":"-"},"content":"  ","lastModifiedDate":"2021-02-03"},{"lineNumber":146,"author":{"gitId":"marcuspeh"},"content":"* Except `findexpenses`, `findgroups`, `findcontacts`, parameters are case-sensitive.","lastModifiedDate":"2021-11-01"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":148,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":150,"author":{"gitId":"marcuspeh"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-10-31"},{"lineNumber":151,"author":{"gitId":"marcuspeh"},"content":"[Click here to return to table of contents](#tableofcontents)","lastModifiedDate":"2021-10-31"},{"lineNumber":152,"author":{"gitId":"marcuspeh"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-10-31"},{"lineNumber":153,"author":{"gitId":"marcuspeh"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-10-27"},{"lineNumber":154,"author":{"gitId":"marcuspeh"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2021-10-27"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":156,"author":{"gitId":"chrus-chong"},"content":"### 3.1. Contacts","lastModifiedDate":"2021-10-26"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":158,"author":{"gitId":"chrus-chong"},"content":"#### 3.1.1. Listing all contacts : `contacts`","lastModifiedDate":"2021-10-26"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":160,"author":{"gitId":"marcuspeh"},"content":"Shows a list of all contacts in AWE.","lastModifiedDate":"2021-10-22"},{"lineNumber":161,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":162,"author":{"gitId":"marcuspeh"},"content":"Format: `contacts`","lastModifiedDate":"2021-10-11"},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":164,"author":{"gitId":"marcuspeh"},"content":"#### 3.1.2. Adding a contact: `addcontact`","lastModifiedDate":"2021-10-31"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":166,"author":{"gitId":"marcuspeh"},"content":"Adds a contact to AWE.","lastModifiedDate":"2021-10-31"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":168,"author":{"gitId":"marcuspeh"},"content":"Format: `addcontact n/NAME p/PHONE_NUMBER [t/TAG]…​`","lastModifiedDate":"2021-11-01"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":170,"author":{"gitId":"marcuspeh"},"content":"* Contact list will be displayed after the command succeeded.","lastModifiedDate":"2021-11-01"},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":172,"author":{"gitId":"marcuspeh"},"content":"* Duplicate contacts cannot be added into AWE","lastModifiedDate":"2021-10-31"},{"lineNumber":173,"author":{"gitId":"marcuspeh"},"content":"* Contacts are duplicate if they have the same name","lastModifiedDate":"2021-10-31"},{"lineNumber":174,"author":{"gitId":"marcuspeh"},"content":"* NAME are case-sensitive, \"Hans\" and \"hans\" will be treated as 2 separate person. Refer to [FAQ](#4faq) for the rational behind this.","lastModifiedDate":"2021-11-01"},{"lineNumber":175,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":176,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e:bulb: **Tip:**","lastModifiedDate":"2020-05-23"},{"lineNumber":177,"author":{"gitId":"marcuspeh"},"content":"A contact can have any number of tags (including 0)","lastModifiedDate":"2021-10-31"},{"lineNumber":178,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":179,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":180,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":181,"author":{"gitId":"marcuspeh"},"content":"* `addcontact n/John Doe p/98765432`","lastModifiedDate":"2021-11-01"},{"lineNumber":182,"author":{"gitId":"marcuspeh"},"content":"* `addcontact n/Betsy Crowe t/friend p/1234567 t/criminal`","lastModifiedDate":"2021-11-01"},{"lineNumber":183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":184,"author":{"gitId":"marcuspeh"},"content":"#### 3.1.3. Editing a contact : `editcontact`","lastModifiedDate":"2021-10-31"},{"lineNumber":185,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":186,"author":{"gitId":"marcuspeh"},"content":"Edits an existing contact in AWE.","lastModifiedDate":"2021-10-31"},{"lineNumber":187,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":188,"author":{"gitId":"marcuspeh"},"content":"Format: `editcontact INDEX [n/NAME] [p/PHONE] [t/TAG]…​`","lastModifiedDate":"2021-11-01"},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":190,"author":{"gitId":"marcuspeh"},"content":"* Edits the contact at the specified `INDEX`. The index refers to the index number shown in the displayed contact list. The index **must be a positive integer** 1, 2, 3, …​","lastModifiedDate":"2021-10-31"},{"lineNumber":191,"author":{"gitId":"-"},"content":"* At least one of the optional fields must be provided.","lastModifiedDate":"2020-05-23"},{"lineNumber":192,"author":{"gitId":"ramapriyan912001"},"content":"* Since the command edits the contact based on the list visible to the user, it is necessary for the user to be viewing a list of contacts when utilising this command. This means that the user must have entered a `findcontacts` or `contacts` command just prior to entering the `editcontact` command.  ","lastModifiedDate":"2021-10-30"},{"lineNumber":193,"author":{"gitId":"-"},"content":"* Existing values will be updated to the input values.","lastModifiedDate":"2020-05-23"},{"lineNumber":194,"author":{"gitId":"marcuspeh"},"content":"* When editing tags, the existing tags of the contact will be removed i.e adding of tags is not cumulative.","lastModifiedDate":"2021-10-31"},{"lineNumber":195,"author":{"gitId":"marcuspeh"},"content":"* You can remove all the contact’s tags by typing `t/` without specifying any tags after it.","lastModifiedDate":"2021-11-01"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":197,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":198,"author":{"gitId":"marcuspeh"},"content":"*  `editcontact 1 p/91234567` Edits the phone number of the 1st contact to be `91234567`.","lastModifiedDate":"2021-11-01"},{"lineNumber":199,"author":{"gitId":"marcuspeh"},"content":"*  `editcontact 2 n/Betsy Crower t/` Edits the name of the 2nd contact to be `Betsy Crower` and clears all existing tags.","lastModifiedDate":"2021-10-31"},{"lineNumber":200,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":201,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":202,"author":{"gitId":"marcuspeh"},"content":"#### 3.1.4. Deleting a contact : `deletecontact`","lastModifiedDate":"2021-10-31"},{"lineNumber":203,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":204,"author":{"gitId":"marcuspeh"},"content":"Deletes the specified contact from AWE.","lastModifiedDate":"2021-10-31"},{"lineNumber":205,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":206,"author":{"gitId":"marcuspeh"},"content":"Format: `deletecontact INDEX`","lastModifiedDate":"2021-10-11"},{"lineNumber":207,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":208,"author":{"gitId":"marcuspeh"},"content":"* Deletes the person at the specified `INDEX`.","lastModifiedDate":"2021-10-11"},{"lineNumber":209,"author":{"gitId":"ramapriyan912001"},"content":"* Deletes the person from any groups of which the person was a member. ","lastModifiedDate":"2021-10-30"},{"lineNumber":210,"author":{"gitId":"ramapriyan912001"},"content":"* If the contact was the only member of a group, that group will now be deleted.  ","lastModifiedDate":"2021-10-30"},{"lineNumber":211,"author":{"gitId":"marcuspeh"},"content":"* The index refers to the index number shown in the displayed person list.","lastModifiedDate":"2021-10-11"},{"lineNumber":212,"author":{"gitId":"marcuspeh"},"content":"* The index **must be a positive integer** 1, 2, 3, …​","lastModifiedDate":"2021-10-11"},{"lineNumber":213,"author":{"gitId":"marcuspeh"},"content":"* Contact list will be displayed after the command succeeded.","lastModifiedDate":"2021-11-01"},{"lineNumber":214,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":215,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2021-10-11"},{"lineNumber":216,"author":{"gitId":"marcuspeh"},"content":"* `contacts` to display a list of all contacts, followed by `deletecontact 2` deletes the 2nd contact in AWE.","lastModifiedDate":"2021-10-31"},{"lineNumber":217,"author":{"gitId":"marcuspeh"},"content":"* `findcontacts Betsy` to find all contacts with the name Betsy, followed by `deletecontact 1` deletes the 1st contact in the results of the `findcontacts` command.","lastModifiedDate":"2021-10-31"},{"lineNumber":218,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":219,"author":{"gitId":"marcuspeh"},"content":"#### 3.1.5. Locating a contact by name: `findcontacts`","lastModifiedDate":"2021-10-31"},{"lineNumber":220,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":221,"author":{"gitId":"marcuspeh"},"content":"Finds contacts whose names contain any of the given keywords.","lastModifiedDate":"2021-10-31"},{"lineNumber":222,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":223,"author":{"gitId":"marcuspeh"},"content":"Format: `findcontacts KEYWORD [MORE_KEYWORDS]`","lastModifiedDate":"2021-10-11"},{"lineNumber":224,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":225,"author":{"gitId":"-"},"content":"* The search is case-insensitive. e.g `hans` will match `Hans`","lastModifiedDate":"2020-05-23"},{"lineNumber":226,"author":{"gitId":"-"},"content":"* The order of the keywords does not matter. e.g. `Hans Bo` will match `Bo Hans`","lastModifiedDate":"2020-05-23"},{"lineNumber":227,"author":{"gitId":"-"},"content":"* Only the name is searched.","lastModifiedDate":"2020-05-23"},{"lineNumber":228,"author":{"gitId":"-"},"content":"* Only full words will be matched e.g. `Han` will not match `Hans`","lastModifiedDate":"2020-05-23"},{"lineNumber":229,"author":{"gitId":"marcuspeh"},"content":"* contacts matching at least one keyword will be returned (i.e. `OR` search).","lastModifiedDate":"2021-10-31"},{"lineNumber":230,"author":{"gitId":"-"},"content":"  e.g. `Hans Bo` will return `Hans Gruber`, `Bo Yang`","lastModifiedDate":"2020-05-23"},{"lineNumber":231,"author":{"gitId":"marcuspeh"},"content":"* Contact list will be displayed after the command succeeded.","lastModifiedDate":"2021-11-01"},{"lineNumber":232,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":233,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":234,"author":{"gitId":"marcuspeh"},"content":"* `findcontacts John` returns `john` and `John Doe`","lastModifiedDate":"2021-10-11"},{"lineNumber":235,"author":{"gitId":"marcuspeh"},"content":"* `findcontacts alex david` returns `Alex Yeoh`, `David Li`\u003cbr\u003e","lastModifiedDate":"2021-10-11"},{"lineNumber":236,"author":{"gitId":"-"},"content":"  ![result for \u0027find alex david\u0027](images/findAlexDavidResult.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":237,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":238,"author":{"gitId":"marcuspeh"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-10-31"},{"lineNumber":239,"author":{"gitId":"marcuspeh"},"content":"[Click here to return to table of contents](#tableofcontents)","lastModifiedDate":"2021-10-31"},{"lineNumber":240,"author":{"gitId":"marcuspeh"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-10-31"},{"lineNumber":241,"author":{"gitId":"marcuspeh"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-10-27"},{"lineNumber":242,"author":{"gitId":"marcuspeh"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2021-10-27"},{"lineNumber":243,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":244,"author":{"gitId":"chrus-chong"},"content":"### 3.2. Groups","lastModifiedDate":"2021-10-26"},{"lineNumber":245,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":246,"author":{"gitId":"chrus-chong"},"content":"#### 3.2.1. Listing all groups : `groups`","lastModifiedDate":"2021-10-26"},{"lineNumber":247,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":248,"author":{"gitId":"marcuspeh"},"content":"Shows a list of all groups in GroupPage.","lastModifiedDate":"2021-10-11"},{"lineNumber":249,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":250,"author":{"gitId":"marcuspeh"},"content":"Format: `groups`","lastModifiedDate":"2021-10-11"},{"lineNumber":251,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":252,"author":{"gitId":"chrus-chong"},"content":"#### 3.2.2. Creating a travel group: ```creategroup```","lastModifiedDate":"2021-10-26"},{"lineNumber":253,"author":{"gitId":"marcuspeh"},"content":"Creates a group of people of your choice from AWE.","lastModifiedDate":"2021-10-22"},{"lineNumber":254,"author":{"gitId":"marcuspeh"},"content":"Adds you as a member of the group by default.","lastModifiedDate":"2021-09-29"},{"lineNumber":255,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":256,"author":{"gitId":"ramapriyan912001"},"content":"Format: `creategroup gn/GROUP_NAME n/NAME1 [n/NAME2] [n/NAME3]...[t/TAG1]`","lastModifiedDate":"2021-10-11"},{"lineNumber":257,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":258,"author":{"gitId":"ramapriyan912001"},"content":"* GROUP_NAME is a mandatory field.","lastModifiedDate":"2021-10-10"},{"lineNumber":259,"author":{"gitId":"ramapriyan912001"},"content":"* A group with the same name as GROUP_NAME cannot exist for the creation of a group through this command. ","lastModifiedDate":"2021-10-10"},{"lineNumber":260,"author":{"gitId":"marcuspeh"},"content":"* GROUP_NAME are case-sensitive, \"Japan\" and \"japan\" will be treated as 2 separate groups. Refer to [FAQ](#4faq) for the rational behind this.","lastModifiedDate":"2021-11-01"},{"lineNumber":261,"author":{"gitId":"ramapriyan912001"},"content":"* At least one NAME is necessary.","lastModifiedDate":"2021-10-10"},{"lineNumber":262,"author":{"gitId":"marcuspeh"},"content":"* The names are required to be in AWE and should match contact names exactly.","lastModifiedDate":"2021-10-22"},{"lineNumber":263,"author":{"gitId":"ramapriyan912001"},"content":"* Tags cannot have whitespace and special characters other than alphanumeric characters.","lastModifiedDate":"2021-10-10"},{"lineNumber":264,"author":{"gitId":"ramapriyan912001"},"content":"* Tags are optional.","lastModifiedDate":"2021-10-10"},{"lineNumber":265,"author":{"gitId":"marcuspeh"},"content":"* Group list will be displayed after the command succeeded.","lastModifiedDate":"2021-11-01"},{"lineNumber":266,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":267,"author":{"gitId":"marcuspeh"},"content":"Examples:","lastModifiedDate":"2021-09-29"},{"lineNumber":268,"author":{"gitId":"chrus-chong"},"content":"* `creategroup gn/Bali n/Jacob Tan n/Max Chia n/Julianne Tay`","lastModifiedDate":"2021-10-26"},{"lineNumber":269,"author":{"gitId":"chrus-chong"},"content":"* `creategroup gn/London n/Justin Lee n/Raj Gopal n/Keith Chia`","lastModifiedDate":"2021-10-26"},{"lineNumber":270,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":271,"author":{"gitId":"chrus-chong"},"content":"#### 3.2.3. Deleting a travel group: `deletegroup`","lastModifiedDate":"2021-10-26"},{"lineNumber":272,"author":{"gitId":"ramapriyan912001"},"content":"Deletes a group from your groups.","lastModifiedDate":"2021-09-23"},{"lineNumber":273,"author":{"gitId":"ramapriyan912001"},"content":"All the details from the group are lost once this action is completed.","lastModifiedDate":"2021-09-23"},{"lineNumber":274,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":275,"author":{"gitId":"ramapriyan912001"},"content":"Format: `deletegroup gn/GROUP_NAME`","lastModifiedDate":"2021-10-11"},{"lineNumber":276,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":277,"author":{"gitId":"ramapriyan912001"},"content":"* GROUP_NAME is a mandatory field.","lastModifiedDate":"2021-09-23"},{"lineNumber":278,"author":{"gitId":"ramapriyan912001"},"content":"* A group with GROUP_NAME as its name must exist.","lastModifiedDate":"2021-09-23"},{"lineNumber":279,"author":{"gitId":"marcuspeh"},"content":"* Group list will be displayed after the command succeeded.","lastModifiedDate":"2021-11-01"},{"lineNumber":280,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":281,"author":{"gitId":"ramapriyan912001"},"content":"Examples:","lastModifiedDate":"2021-09-23"},{"lineNumber":282,"author":{"gitId":"ramapriyan912001"},"content":"* `deletegroup gn/Bali`","lastModifiedDate":"2021-10-10"},{"lineNumber":283,"author":{"gitId":"ramapriyan912001"},"content":"* `deletegroup gn/London`","lastModifiedDate":"2021-10-10"},{"lineNumber":284,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":285,"author":{"gitId":"chrus-chong"},"content":"#### 3.2.4. Locating group by name: `findgroups`","lastModifiedDate":"2021-10-26"},{"lineNumber":286,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":287,"author":{"gitId":"marcuspeh"},"content":"Find groups whose names contain any of the given keywords.","lastModifiedDate":"2021-10-11"},{"lineNumber":288,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":289,"author":{"gitId":"marcuspeh"},"content":"Format: `findgroups KEYWORD [MORE_KEYWORDS]`","lastModifiedDate":"2021-10-11"},{"lineNumber":290,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":291,"author":{"gitId":"marcuspeh"},"content":"* The search is case-insensitive. e.g `london` will match `London`","lastModifiedDate":"2021-10-11"},{"lineNumber":292,"author":{"gitId":"marcuspeh"},"content":"* The order of the keywords does not matter. e.g. `United States` will match `States United`","lastModifiedDate":"2021-10-11"},{"lineNumber":293,"author":{"gitId":"marcuspeh"},"content":"* Only the group name is searched.","lastModifiedDate":"2021-10-11"},{"lineNumber":294,"author":{"gitId":"marcuspeh"},"content":"* Only full words will be matched e.g. `London` will not match `Lond`","lastModifiedDate":"2021-10-11"},{"lineNumber":295,"author":{"gitId":"marcuspeh"},"content":"* Groups matching at least one keyword will be returned (i.e. `OR` search).","lastModifiedDate":"2021-10-11"},{"lineNumber":296,"author":{"gitId":"marcuspeh"},"content":"  e.g. `Taiwan Malaysia` will return `Taiwan`, `Malaysia`","lastModifiedDate":"2021-10-11"},{"lineNumber":297,"author":{"gitId":"marcuspeh"},"content":"* Group list will be displayed after the command succeeded.","lastModifiedDate":"2021-11-01"},{"lineNumber":298,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":299,"author":{"gitId":"marcuspeh"},"content":"Examples:","lastModifiedDate":"2021-10-11"},{"lineNumber":300,"author":{"gitId":"Jingwencloud"},"content":"* `findgroups London` returns `London` and `london trip`","lastModifiedDate":"2021-10-15"},{"lineNumber":301,"author":{"gitId":"Jingwencloud"},"content":"* `findgroups Taiwan Malaysia` returns `Taiwan` `Malaysia`\u003cbr\u003e","lastModifiedDate":"2021-10-15"},{"lineNumber":302,"author":{"gitId":"marcuspeh"},"content":"  ![result for \u0027findcontacts Taiwan Malaysia\u0027](images/findGroupMalaysiaTaiwanResult.png)","lastModifiedDate":"2021-10-31"},{"lineNumber":303,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":304,"author":{"gitId":"marcuspeh"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2021-10-22"},{"lineNumber":305,"author":{"gitId":"marcuspeh"},"content":":bulb: **Tip:** You can search for multiple groups by entering more keywords.","lastModifiedDate":"2021-10-30"},{"lineNumber":306,"author":{"gitId":"marcuspeh"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-10-30"},{"lineNumber":307,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":308,"author":{"gitId":"chrus-chong"},"content":"#### 3.2.5. Adding a contact to an existing group: `groupaddcontact`","lastModifiedDate":"2021-10-26"},{"lineNumber":309,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":310,"author":{"gitId":"chrus-chong"},"content":"Add contact in contact list into an existing travel group.","lastModifiedDate":"2021-10-20"},{"lineNumber":311,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":312,"author":{"gitId":"marcuspeh"},"content":"Format: `groupaddcontact gn/GROUP_NAME n/CONTACT_NAME1 [n/CONTACT_NAME2] ...`","lastModifiedDate":"2021-10-22"},{"lineNumber":313,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":314,"author":{"gitId":"chrus-chong"},"content":"* Group name in the user input must already be an existing group.","lastModifiedDate":"2021-10-20"},{"lineNumber":315,"author":{"gitId":"chrus-chong"},"content":"* The search is case-sensitive. e.g `hans` will not match `Hans`","lastModifiedDate":"2021-10-20"},{"lineNumber":316,"author":{"gitId":"chrus-chong"},"content":"* Only the name is searched.","lastModifiedDate":"2021-10-20"},{"lineNumber":317,"author":{"gitId":"chrus-chong"},"content":"* Only full words will be matched e.g. `Han` will not match `Hans`","lastModifiedDate":"2021-10-20"},{"lineNumber":318,"author":{"gitId":"chrus-chong"},"content":"* Type in the full name of contacts to add.","lastModifiedDate":"2021-10-20"},{"lineNumber":319,"author":{"gitId":"chrus-chong"},"content":"* Duplicate members in a group/user input will not be added.","lastModifiedDate":"2021-10-20"},{"lineNumber":320,"author":{"gitId":"marcuspeh"},"content":"* Group list will not be displayed after the command succeeded.","lastModifiedDate":"2021-11-01"},{"lineNumber":321,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":322,"author":{"gitId":"chrus-chong"},"content":"Examples:","lastModifiedDate":"2021-10-20"},{"lineNumber":323,"author":{"gitId":"chrus-chong"},"content":"* `groupaddcontact gn/Bali n/Irfan Ibrahim` to add Irfan Ibrahim into the Bali travel group.","lastModifiedDate":"2021-10-20"},{"lineNumber":324,"author":{"gitId":"chrus-chong"},"content":"* `groupaddcontact gn/Prague n/Bernice Yu n/David Li n/Alex Yeoh` to add Bernice Yu, David Li, and Alex Yeoh into the","lastModifiedDate":"2021-10-20"},{"lineNumber":325,"author":{"gitId":"chrus-chong"},"content":"Prague travel group.","lastModifiedDate":"2021-10-20"},{"lineNumber":326,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":327,"author":{"gitId":"chrus-chong"},"content":"#### 3.2.6. Removing a contact from an existing group: `groupremovecontact`","lastModifiedDate":"2021-10-26"},{"lineNumber":328,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":329,"author":{"gitId":"chrus-chong"},"content":"Remove contact in contact list from an existing travel group.","lastModifiedDate":"2021-10-20"},{"lineNumber":330,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":331,"author":{"gitId":"marcuspeh"},"content":"Format: `groupremovecontact gn/GROUP_NAME n/CONTACT_NAME [n/CONTACT_NAME] ...`","lastModifiedDate":"2021-10-22"},{"lineNumber":332,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":333,"author":{"gitId":"chrus-chong"},"content":"* Group name in the user input must already be an existing group.","lastModifiedDate":"2021-10-20"},{"lineNumber":334,"author":{"gitId":"chrus-chong"},"content":"* The search is case-sensitive. e.g `hans` will not match `Hans`","lastModifiedDate":"2021-10-20"},{"lineNumber":335,"author":{"gitId":"chrus-chong"},"content":"* Only the name is searched.","lastModifiedDate":"2021-10-20"},{"lineNumber":336,"author":{"gitId":"chrus-chong"},"content":"* Only full words will be matched e.g. `Han` will not match `Hans`","lastModifiedDate":"2021-10-20"},{"lineNumber":337,"author":{"gitId":"chrus-chong"},"content":"* Type in the full name of contacts to remove.","lastModifiedDate":"2021-10-20"},{"lineNumber":338,"author":{"gitId":"chrus-chong"},"content":"* Members can only be removed if they are in the travel group.","lastModifiedDate":"2021-10-20"},{"lineNumber":339,"author":{"gitId":"marcuspeh"},"content":"* Group list will not be displayed after the command succeeded.","lastModifiedDate":"2021-11-01"},{"lineNumber":340,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":341,"author":{"gitId":"chrus-chong"},"content":"Examples:","lastModifiedDate":"2021-10-20"},{"lineNumber":342,"author":{"gitId":"chrus-chong"},"content":"* `groupremovecontact gn/Bali n/Irfan Ibrahim` to remove Irfan Ibrahim from the Bali travel group.","lastModifiedDate":"2021-10-20"},{"lineNumber":343,"author":{"gitId":"chrus-chong"},"content":"* `groupremovecontact gn/Prague n/Bernice Yu n/David Li n/Alex Yeoh` to remove Bernice Yu, David Li, and Alex Yeoh","lastModifiedDate":"2021-10-20"},{"lineNumber":344,"author":{"gitId":"chrus-chong"},"content":"from the Prague travel group.","lastModifiedDate":"2021-10-20"},{"lineNumber":345,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":346,"author":{"gitId":"chrus-chong"},"content":"#### 3.2.7. Adding a tag to an existing group: `groupaddtag`","lastModifiedDate":"2021-10-26"},{"lineNumber":347,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":348,"author":{"gitId":"chrus-chong"},"content":"Add tag for an existing travel group.","lastModifiedDate":"2021-10-20"},{"lineNumber":349,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":350,"author":{"gitId":"marcuspeh"},"content":"Format: `groupaddtag gn/GROUP_NAME t/TAG [t/TAG2] ...`","lastModifiedDate":"2021-10-22"},{"lineNumber":351,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":352,"author":{"gitId":"chrus-chong"},"content":"* Group name in the user input must already be an existing group.","lastModifiedDate":"2021-10-20"},{"lineNumber":353,"author":{"gitId":"chrus-chong"},"content":"* The search is case-sensitive. e.g `bali` will not match `Bali`","lastModifiedDate":"2021-10-20"},{"lineNumber":354,"author":{"gitId":"chrus-chong"},"content":"* Only full words will be matched e.g. `Bal` will not match `Bali`","lastModifiedDate":"2021-10-20"},{"lineNumber":355,"author":{"gitId":"chrus-chong"},"content":"* Duplicate tags in a group/user input will not be added.","lastModifiedDate":"2021-10-20"},{"lineNumber":356,"author":{"gitId":"marcuspeh"},"content":"* Group list will not be displayed after the command succeeded.","lastModifiedDate":"2021-11-01"},{"lineNumber":357,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":358,"author":{"gitId":"chrus-chong"},"content":"Examples:","lastModifiedDate":"2021-10-20"},{"lineNumber":359,"author":{"gitId":"chrus-chong"},"content":"* `groupaddtag gn/Bali t/Friends` to indicate that the Bali travel group is with friends.","lastModifiedDate":"2021-10-20"},{"lineNumber":360,"author":{"gitId":"chrus-chong"},"content":"* `groupaddtag gn/Prague t/Family t/Cousins` to indicate that the Prague travel group is with family,","lastModifiedDate":"2021-10-20"},{"lineNumber":361,"author":{"gitId":"chrus-chong"},"content":"more specifically, cousins.","lastModifiedDate":"2021-10-20"},{"lineNumber":362,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":363,"author":{"gitId":"chrus-chong"},"content":"#### 3.2.8. Removing a tag from an existing group: `groupremovetag`","lastModifiedDate":"2021-10-26"},{"lineNumber":364,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":365,"author":{"gitId":"chrus-chong"},"content":"Remove tag from an existing travel group.","lastModifiedDate":"2021-10-20"},{"lineNumber":366,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":367,"author":{"gitId":"marcuspeh"},"content":"Format: `groupremovetag gn/GROUP_NAME t/TAG [t/TAG2] ...`","lastModifiedDate":"2021-10-22"},{"lineNumber":368,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":369,"author":{"gitId":"chrus-chong"},"content":"* Group name in the user input must already be an existing group.","lastModifiedDate":"2021-10-20"},{"lineNumber":370,"author":{"gitId":"chrus-chong"},"content":"* Tag has to be in existing group before it can be removed.","lastModifiedDate":"2021-10-20"},{"lineNumber":371,"author":{"gitId":"chrus-chong"},"content":"* The search is case-sensitive. e.g `bali` will not match `Bali`","lastModifiedDate":"2021-10-20"},{"lineNumber":372,"author":{"gitId":"chrus-chong"},"content":"* Only full words will be matched e.g. `Bal` will not match `Bali`","lastModifiedDate":"2021-10-20"},{"lineNumber":373,"author":{"gitId":"chrus-chong"},"content":"* Duplicate tags in a group/user input will not be removed.","lastModifiedDate":"2021-10-20"},{"lineNumber":374,"author":{"gitId":"marcuspeh"},"content":"* Group list will not be displayed after the command succeeded.","lastModifiedDate":"2021-11-01"},{"lineNumber":375,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":376,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2021-10-20"},{"lineNumber":377,"author":{"gitId":"chrus-chong"},"content":"* `groupremovetag gn/Bali t/Friends` to remove the friends tag from the Bali travel group.","lastModifiedDate":"2021-10-20"},{"lineNumber":378,"author":{"gitId":"chrus-chong"},"content":"* `groupremovetag gn/Prague t/Family t/Cousins` to the tags family and cousins from the Prague travel group.","lastModifiedDate":"2021-10-20"},{"lineNumber":379,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":380,"author":{"gitId":"chrus-chong"},"content":"#### 3.2.9. Editing travel group name: `groupeditname`","lastModifiedDate":"2021-10-26"},{"lineNumber":381,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":382,"author":{"gitId":"chrus-chong"},"content":"Edit group name for an existing travel group.","lastModifiedDate":"2021-10-20"},{"lineNumber":383,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":384,"author":{"gitId":"marcuspeh"},"content":"Format: `groupeditname gn/OLD_GROUP_NAME gn/NEW_GROUP_NAME`","lastModifiedDate":"2021-10-22"},{"lineNumber":385,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":386,"author":{"gitId":"chrus-chong"},"content":"* Group name in the user input must already be an existing group.","lastModifiedDate":"2021-10-20"},{"lineNumber":387,"author":{"gitId":"chrus-chong"},"content":"* The search is case-sensitive. e.g `bali` will not match `Bali`","lastModifiedDate":"2021-10-20"},{"lineNumber":388,"author":{"gitId":"chrus-chong"},"content":"* Only full words will be matched e.g. `Bal` will not match `Bali`","lastModifiedDate":"2021-10-20"},{"lineNumber":389,"author":{"gitId":"marcuspeh"},"content":"* Group list will not be displayed after the command succeeded.","lastModifiedDate":"2021-11-01"},{"lineNumber":390,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":391,"author":{"gitId":"chrus-chong"},"content":"Examples:","lastModifiedDate":"2021-10-20"},{"lineNumber":392,"author":{"gitId":"chrus-chong"},"content":"* `groupeditname gn/Bali gn/Thailand` to change the group name from Bali to Thailand.","lastModifiedDate":"2021-10-20"},{"lineNumber":393,"author":{"gitId":"chrus-chong"},"content":"* `groupeditname gn/Germany gn/Munich` to change the group name from Germany to Munich.","lastModifiedDate":"2021-10-20"},{"lineNumber":394,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":395,"author":{"gitId":"marcuspeh"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-10-31"},{"lineNumber":396,"author":{"gitId":"marcuspeh"},"content":"[Click here to return to table of contents](#tableofcontents)","lastModifiedDate":"2021-10-31"},{"lineNumber":397,"author":{"gitId":"marcuspeh"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-10-31"},{"lineNumber":398,"author":{"gitId":"marcuspeh"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-10-27"},{"lineNumber":399,"author":{"gitId":"marcuspeh"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2021-10-27"},{"lineNumber":400,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":401,"author":{"gitId":"chrus-chong"},"content":"### 3.3. Expenses","lastModifiedDate":"2021-10-26"},{"lineNumber":402,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":403,"author":{"gitId":"marcuspeh"},"content":"#### 3.3.1. Listing expenses of a specified group: `expenses`","lastModifiedDate":"2021-10-30"},{"lineNumber":404,"author":{"gitId":"Jingwencloud"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":405,"author":{"gitId":"Jingwencloud"},"content":"Shows a list containing all existing expenses within the specified travel group. Expenses are sorted from most recent to least recent.","lastModifiedDate":"2021-10-15"},{"lineNumber":406,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":407,"author":{"gitId":"Jingwencloud"},"content":"Format: `expenses gn/GROUP_NAME`","lastModifiedDate":"2021-10-21"},{"lineNumber":408,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":409,"author":{"gitId":"Jingwencloud"},"content":"* GROUP_NAME argument is mandatory.","lastModifiedDate":"2021-10-21"},{"lineNumber":410,"author":{"gitId":"Jingwencloud"},"content":"* GROUP_NAME must correspond to the name of an existing travel group.","lastModifiedDate":"2021-10-21"},{"lineNumber":411,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":412,"author":{"gitId":"marcuspeh"},"content":"Examples: ","lastModifiedDate":"2021-10-11"},{"lineNumber":413,"author":{"gitId":"Jingwencloud"},"content":"* `expenses gn/London` shows all the expenses of the group named London.","lastModifiedDate":"2021-10-21"},{"lineNumber":414,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":415,"author":{"gitId":"chrus-chong"},"content":"#### 3.3.2. Adding a shared expense: `addexpense`","lastModifiedDate":"2021-10-26"},{"lineNumber":416,"author":{"gitId":"kheekheekhee"},"content":"Adds a shared expense to the specified travel group.","lastModifiedDate":"2021-10-12"},{"lineNumber":417,"author":{"gitId":"kheekheekhee"},"content":"The expense can be paid for and split among any number of contacts within the travel group.","lastModifiedDate":"2021-09-25"},{"lineNumber":418,"author":{"gitId":"kheekheekhee"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":419,"author":{"gitId":"marcuspeh"},"content":"Format: `addexpense n/PAYER_NAME gn/GROUP_NAME $/TOTAL_AMOUNT_PAID d/DESCRIPTION [n/PAYEE_WHO_MADE_A_PERSONAL_PAYMENT] [$/PAYEE\u0027S_PERSONAL_PAYMENT_TO_EXCLUDE_FROM_TOTAL_AMOUNT] [ex/PERSON_TO_EXCLUDE_FROM_EXPENSE]`","lastModifiedDate":"2021-10-22"},{"lineNumber":420,"author":{"gitId":"kheekheekhee"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":421,"author":{"gitId":"kheekheekhee"},"content":"* There should be at least one PAYER_NAME in the command.","lastModifiedDate":"2021-10-12"},{"lineNumber":422,"author":{"gitId":"kheekheekhee"},"content":"* PAYER_NAME must be immediately followed by the GROUP NAME.","lastModifiedDate":"2021-10-12"},{"lineNumber":423,"author":{"gitId":"kheekheekhee"},"content":"* By default, all members of the group will be included in the expense.","lastModifiedDate":"2021-10-12"},{"lineNumber":424,"author":{"gitId":"marcuspeh"},"content":"* The names are required to be in AWE.","lastModifiedDate":"2021-10-22"},{"lineNumber":425,"author":{"gitId":"kheekheekhee"},"content":"* The names are required to be in the specified group.","lastModifiedDate":"2021-10-12"},{"lineNumber":426,"author":{"gitId":"marcuspeh"},"content":"* DESCRIPTION of the expense does not need to be unique.","lastModifiedDate":"2021-10-22"},{"lineNumber":427,"author":{"gitId":"kheekheekhee"},"content":"* Each personal payment has to be a name immediately followed by the amount of the personal payment.","lastModifiedDate":"2021-10-12"},{"lineNumber":428,"author":{"gitId":"marcuspeh"},"content":"* Expense list of the group will not be displayed after the command succeeded.","lastModifiedDate":"2021-11-01"},{"lineNumber":429,"author":{"gitId":"kheekheekhee"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":430,"author":{"gitId":"kheekheekhee"},"content":"Examples:","lastModifiedDate":"2021-09-25"},{"lineNumber":431,"author":{"gitId":"chrus-chong"},"content":"* `addexpense n/Nic gn/Catch up $/50 d/Movie and dinner`","lastModifiedDate":"2021-10-26"},{"lineNumber":432,"author":{"gitId":"chrus-chong"},"content":"* `addexpense n/Tom gn/Date $/60 d/Big meal but Jerry wants to pay for his own Coke n/Jerry $/2`","lastModifiedDate":"2021-10-26"},{"lineNumber":433,"author":{"gitId":"chrus-chong"},"content":"* `addexpense n/Keith gn/Movie night $/40 d/For movie but Kelly didn\u0027t watch ex/Kelly`","lastModifiedDate":"2021-10-26"},{"lineNumber":434,"author":{"gitId":"kheekheekhee"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":435,"author":{"gitId":"chrus-chong"},"content":"#### 3.3.3. Deleting a shared expense: `deleteexpense`","lastModifiedDate":"2021-10-26"},{"lineNumber":436,"author":{"gitId":"Jingwencloud"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":437,"author":{"gitId":"ramapriyan912001"},"content":"Deletes a shared expense from a travel group.","lastModifiedDate":"2021-10-10"},{"lineNumber":438,"author":{"gitId":"Jingwencloud"},"content":"This command deletes the expense for all members involved in the expense.","lastModifiedDate":"2021-09-25"},{"lineNumber":439,"author":{"gitId":"Jingwencloud"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":440,"author":{"gitId":"ramapriyan912001"},"content":"Format: `deleteexpense INDEX`","lastModifiedDate":"2021-10-25"},{"lineNumber":441,"author":{"gitId":"Jingwencloud"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":442,"author":{"gitId":"ramapriyan912001"},"content":"* INDEX argument is mandatory.","lastModifiedDate":"2021-10-10"},{"lineNumber":443,"author":{"gitId":"ramapriyan912001"},"content":"* INDEX has to be between 1 and the length of the list of expenses visible to the user on the screen.","lastModifiedDate":"2021-10-25"},{"lineNumber":444,"author":{"gitId":"ramapriyan912001"},"content":"* Since the command deletes the expense based on the list visible to the user, it is necessary for the user to be viewing a list of expenses when utilising this command. This means that the user must have entered a `findexpenses` or `expenses` command just prior to entering the `deleteexpense` command. ","lastModifiedDate":"2021-10-25"},{"lineNumber":445,"author":{"gitId":"marcuspeh"},"content":"* Expense list of the group will remain to be displayed after the command succeeded.","lastModifiedDate":"2021-11-01"},{"lineNumber":446,"author":{"gitId":"Jingwencloud"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":447,"author":{"gitId":"Jingwencloud"},"content":"Examples:","lastModifiedDate":"2021-09-25"},{"lineNumber":448,"author":{"gitId":"ramapriyan912001"},"content":"* `deleteexpense 1`","lastModifiedDate":"2021-10-25"},{"lineNumber":449,"author":{"gitId":"ramapriyan912001"},"content":"* `deleteexpense 2`","lastModifiedDate":"2021-10-25"},{"lineNumber":450,"author":{"gitId":"Jingwencloud"},"content":"","lastModifiedDate":"2021-09-25"},{"lineNumber":451,"author":{"gitId":"chrus-chong"},"content":"#### 3.3.4. Locating a shared expense by description: `findexpenses`","lastModifiedDate":"2021-10-26"},{"lineNumber":452,"author":{"gitId":"Jingwencloud"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":453,"author":{"gitId":"Jingwencloud"},"content":"Finds expenses within the specified group which descriptions contain any of the given keywords.","lastModifiedDate":"2021-10-15"},{"lineNumber":454,"author":{"gitId":"Jingwencloud"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":455,"author":{"gitId":"marcuspeh"},"content":"Format: `findexpenses KEYWORD [MORE_KEYWORDS] gn/GROUP_NAME`","lastModifiedDate":"2021-10-31"},{"lineNumber":456,"author":{"gitId":"Jingwencloud"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":457,"author":{"gitId":"Jingwencloud"},"content":"* The search is case-insensitive. e.g `dinner` will match `Dinner`","lastModifiedDate":"2021-10-15"},{"lineNumber":458,"author":{"gitId":"Jingwencloud"},"content":"* The order of the keywords does not matter. e.g. `Dinner Transportation` will match `Transportation Dinner`","lastModifiedDate":"2021-10-15"},{"lineNumber":459,"author":{"gitId":"Jingwencloud"},"content":"* Only the description is searched.","lastModifiedDate":"2021-10-15"},{"lineNumber":460,"author":{"gitId":"Jingwencloud"},"content":"* Only full words will be matched e.g. `Dinner` will not match `Dinners`","lastModifiedDate":"2021-10-15"},{"lineNumber":461,"author":{"gitId":"Jingwencloud"},"content":"* Expenses matching at least one keyword will be returned (i.e. `OR` search).","lastModifiedDate":"2021-10-15"},{"lineNumber":462,"author":{"gitId":"Jingwencloud"},"content":"  e.g. `Dinner Transportation` will return `Friday dinner`, `Transportation tickets`","lastModifiedDate":"2021-10-15"},{"lineNumber":463,"author":{"gitId":"marcuspeh"},"content":"* Expense list of the group will be displayed after the command succeeded.","lastModifiedDate":"2021-11-01"},{"lineNumber":464,"author":{"gitId":"Jingwencloud"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":465,"author":{"gitId":"Jingwencloud"},"content":"Examples:","lastModifiedDate":"2021-10-15"},{"lineNumber":466,"author":{"gitId":"marcuspeh"},"content":"* `findexpenses dinner gn/London` returns `dinner` and `Friday dinner` in the group `London`","lastModifiedDate":"2021-10-31"},{"lineNumber":467,"author":{"gitId":"marcuspeh"},"content":"* `findexpenses lunch souvenirs gn/London` returns `lunch`, `souvenirs`in the group `London`\u003cbr\u003e","lastModifiedDate":"2021-10-31"},{"lineNumber":468,"author":{"gitId":"Jingwencloud"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":469,"author":{"gitId":"chrus-chong"},"content":"#### 3.3.5 Calculating total spending of each user: `transactionsummary`","lastModifiedDate":"2021-10-26"},{"lineNumber":470,"author":{"gitId":"marcuspeh"},"content":"Displays a list of individual spending for each users in the group.","lastModifiedDate":"2021-11-01"},{"lineNumber":471,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":472,"author":{"gitId":"marcuspeh"},"content":"Format: `transactionsummary gn/GROUP_NAME`","lastModifiedDate":"2021-10-22"},{"lineNumber":473,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":474,"author":{"gitId":"marcuspeh"},"content":"* GROUP_NAME is a mandatory field.","lastModifiedDate":"2021-10-22"},{"lineNumber":475,"author":{"gitId":"marcuspeh"},"content":"* A group with GROUP_NAME as its name must exist.","lastModifiedDate":"2021-10-22"},{"lineNumber":476,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":477,"author":{"gitId":"marcuspeh"},"content":"Examples:","lastModifiedDate":"2021-10-22"},{"lineNumber":478,"author":{"gitId":"marcuspeh"},"content":"* `transactionsummary gn/Bali`","lastModifiedDate":"2021-10-22"},{"lineNumber":479,"author":{"gitId":"marcuspeh"},"content":"* `transactionsummary gn/London`","lastModifiedDate":"2021-10-22"},{"lineNumber":480,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":481,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":482,"author":{"gitId":"chrus-chong"},"content":"#### 3.3.6. Calculating payments to make: `calculatepayments`","lastModifiedDate":"2021-10-26"},{"lineNumber":483,"author":{"gitId":"ramapriyan912001"},"content":"Uses the net spend of the user on the trip to tabulate a fast set of payments to settle the debts between members of the group.","lastModifiedDate":"2021-10-21"},{"lineNumber":484,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":485,"author":{"gitId":"ramapriyan912001"},"content":"Format: `calculatepayments gn/GROUP_NAME`","lastModifiedDate":"2021-10-21"},{"lineNumber":486,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":487,"author":{"gitId":"ramapriyan912001"},"content":"* GROUP_NAME is a mandatory field.","lastModifiedDate":"2021-10-21"},{"lineNumber":488,"author":{"gitId":"ramapriyan912001"},"content":"* A group with GROUP_NAME as its name must exist.","lastModifiedDate":"2021-10-21"},{"lineNumber":489,"author":{"gitId":"ramapriyan912001"},"content":"* Output e.g. [`John pays Mark $20.50`, `Sara pays Dev $15`]","lastModifiedDate":"2021-10-21"},{"lineNumber":490,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":491,"author":{"gitId":"ramapriyan912001"},"content":"Examples:","lastModifiedDate":"2021-10-21"},{"lineNumber":492,"author":{"gitId":"ramapriyan912001"},"content":"* `calculatepayments gn/Bali`","lastModifiedDate":"2021-10-21"},{"lineNumber":493,"author":{"gitId":"ramapriyan912001"},"content":"* `calculatepayments gn/London`\u003cbr\u003e","lastModifiedDate":"2021-10-25"},{"lineNumber":494,"author":{"gitId":"ramapriyan912001"},"content":"  ![result for \u0027findcontacts Taiwan Malaysia\u0027](images/CALCULATEPAYMENTSUI.png)","lastModifiedDate":"2021-10-25"},{"lineNumber":495,"author":{"gitId":"ramapriyan912001"},"content":"  ","lastModifiedDate":"2021-10-21"},{"lineNumber":496,"author":{"gitId":"ramapriyan912001"},"content":"**Note: When a `Person` is deleted from contacts or removed from the group, the functioning of this command does not change. The deleted person may still be part of the list of payments depending on the expenses they had previously.**","lastModifiedDate":"2021-10-30"},{"lineNumber":497,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":498,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":499,"author":{"gitId":"marcuspeh"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-10-31"},{"lineNumber":500,"author":{"gitId":"marcuspeh"},"content":"[Click here to return to table of contents](#tableofcontents)","lastModifiedDate":"2021-10-31"},{"lineNumber":501,"author":{"gitId":"marcuspeh"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-10-31"},{"lineNumber":502,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":503,"author":{"gitId":"marcuspeh"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-10-27"},{"lineNumber":504,"author":{"gitId":"marcuspeh"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2021-10-27"},{"lineNumber":505,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":506,"author":{"gitId":"chrus-chong"},"content":"### 3.4. Miscellaneous","lastModifiedDate":"2021-10-26"},{"lineNumber":507,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":508,"author":{"gitId":"chrus-chong"},"content":"#### 3.4.1. Viewing help : `help`","lastModifiedDate":"2021-10-26"},{"lineNumber":509,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":510,"author":{"gitId":"chrus-chong"},"content":"Shows a message explaining how to access the help page.","lastModifiedDate":"2021-10-21"},{"lineNumber":511,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":512,"author":{"gitId":"chrus-chong"},"content":"![help message](images/helpMessage.png)","lastModifiedDate":"2021-10-21"},{"lineNumber":513,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":514,"author":{"gitId":"chrus-chong"},"content":"Format: `help`","lastModifiedDate":"2021-10-21"},{"lineNumber":515,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":516,"author":{"gitId":"ramapriyan912001"},"content":"#### 3.4.2. Clearing all entries : `clearalldata`","lastModifiedDate":"2021-10-30"},{"lineNumber":517,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":518,"author":{"gitId":"marcuspeh"},"content":"Clears all entries from AWE.","lastModifiedDate":"2021-10-22"},{"lineNumber":519,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":520,"author":{"gitId":"ramapriyan912001"},"content":"Format: `clearalldata`","lastModifiedDate":"2021-10-30"},{"lineNumber":521,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":522,"author":{"gitId":"marcuspeh"},"content":"* After clearing of data, `contacts` page will be shown","lastModifiedDate":"2021-10-31"},{"lineNumber":523,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":524,"author":{"gitId":"chrus-chong"},"content":"#### 3.4.3. Exiting the program : `exit`","lastModifiedDate":"2021-10-26"},{"lineNumber":525,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":526,"author":{"gitId":"-"},"content":"Exits the program.","lastModifiedDate":"2021-09-29"},{"lineNumber":527,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":528,"author":{"gitId":"-"},"content":"Format: `exit`","lastModifiedDate":"2021-09-29"},{"lineNumber":529,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":530,"author":{"gitId":"chrus-chong"},"content":"#### 3.4.4. Saving the data","lastModifiedDate":"2021-10-26"},{"lineNumber":531,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":532,"author":{"gitId":"chrus-chong"},"content":"AWE data are saved in the hard disk automatically after any command that changes the data. There is no need to save manually.","lastModifiedDate":"2021-10-21"},{"lineNumber":533,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":534,"author":{"gitId":"chrus-chong"},"content":"#### 3.4.5. Editing the data file","lastModifiedDate":"2021-10-26"},{"lineNumber":535,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":536,"author":{"gitId":"chrus-chong"},"content":"AWE data are saved as a JSON file `[JAR file location]/data/awe.json`. Advanced users are welcome to update data directly by editing that data file.","lastModifiedDate":"2021-10-21"},{"lineNumber":537,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":538,"author":{"gitId":"marcuspeh"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-warning\"\u003e","lastModifiedDate":"2021-10-30"},{"lineNumber":539,"author":{"gitId":"marcuspeh"},"content":":exclamation: **Caution:**","lastModifiedDate":"2021-10-30"},{"lineNumber":540,"author":{"gitId":"chrus-chong"},"content":"If your changes to the data file makes its format invalid, AWE will discard all data and start with an empty data file at the next run.","lastModifiedDate":"2021-10-21"},{"lineNumber":541,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-10-21"},{"lineNumber":542,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-22"},{"lineNumber":543,"author":{"gitId":"marcuspeh"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-10-31"},{"lineNumber":544,"author":{"gitId":"marcuspeh"},"content":"[Click here to return to table of contents](#tableofcontents)","lastModifiedDate":"2021-10-31"},{"lineNumber":545,"author":{"gitId":"marcuspeh"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-10-31"},{"lineNumber":546,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-10-27"},{"lineNumber":547,"author":{"gitId":"marcuspeh"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2021-10-27"},{"lineNumber":548,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":549,"author":{"gitId":"chrus-chong"},"content":"## 4. FAQ","lastModifiedDate":"2021-10-26"},{"lineNumber":550,"author":{"gitId":"marcuspeh"},"content":"**Q**: Why are NAME case-sensitive?","lastModifiedDate":"2021-11-01"},{"lineNumber":551,"author":{"gitId":"marcuspeh"},"content":"**A**: Since common names are quite usual, we have decided to allow the addition of 2 contacts such as \"jun jie\" and \"Jun Jie\" in order to keep track of their numbers. ","lastModifiedDate":"2021-11-01"},{"lineNumber":552,"author":{"gitId":"marcuspeh"},"content":"Furthermore, since AWE deals with overseas travels, quite a number of travellers might get a new overseas number when they are travelling. This will allow users to keep track of both","lastModifiedDate":"2021-11-01"},{"lineNumber":553,"author":{"gitId":"marcuspeh"},"content":"their local and overseas local separately. Deleting the number after returning from the trip will be easier as well. In both cases, users can distinguish the 2 contacts with similar names using tags.","lastModifiedDate":"2021-11-01"},{"lineNumber":554,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":555,"author":{"gitId":"marcuspeh"},"content":"**Q**: Why are GROUP_NAME case-sensitive?","lastModifiedDate":"2021-11-01"},{"lineNumber":556,"author":{"gitId":"marcuspeh"},"content":"**A**: Similar to the above question, a user might travel to the same destination more than once. This will allow the addition of each individual trips.","lastModifiedDate":"2021-11-01"},{"lineNumber":557,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":558,"author":{"gitId":"-"},"content":"**Q**: How do I transfer my data to another Computer?\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":559,"author":{"gitId":"ramapriyan912001"},"content":"**A**: Install the app in the other computer and overwrite the empty data file it creates with the file that contains the data of your previous AWE home folder.","lastModifiedDate":"2021-09-30"},{"lineNumber":560,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":561,"author":{"gitId":"marcuspeh"},"content":"**Q**: What if the Jar file does not open properly when I double click on it?\u003cbr\u003e","lastModifiedDate":"2021-09-23"},{"lineNumber":562,"author":{"gitId":"marcuspeh"},"content":"**A**: Open a command prompt in that folder and run the command `java -jar -ea AWE.jar`.","lastModifiedDate":"2021-09-23"},{"lineNumber":563,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-23"},{"lineNumber":564,"author":{"gitId":"marcuspeh"},"content":"**Q**: What do I do if I see `AWE.jar` cannot be opened because it is from an unidentified developer when I double click the jar file on a mac?\u003cbr\u003e","lastModifiedDate":"2021-09-23"},{"lineNumber":565,"author":{"gitId":"marcuspeh"},"content":"**A**: Go to `System Preferences -\u003e Security and Privacy -\u003e General` and click on `Open anyways` as such\u003cbr\u003e","lastModifiedDate":"2021-10-21"},{"lineNumber":566,"author":{"gitId":"marcuspeh"},"content":"![Mac Security Preference](images/MacSecurityPreference.png)","lastModifiedDate":"2021-10-21"},{"lineNumber":567,"author":{"gitId":"marcuspeh"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-09-23"},{"lineNumber":568,"author":{"gitId":"marcuspeh"},"content":"If your questions are not answered in the FAQ, check out the issue page on our GitHub linked [here](https://github.com/AY2122S1-CS2103T-F13-1/tp/issues).","lastModifiedDate":"2021-09-23"},{"lineNumber":569,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":570,"author":{"gitId":"marcuspeh"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-10-31"},{"lineNumber":571,"author":{"gitId":"marcuspeh"},"content":"[Click here to return to table of contents](#tableofcontents)","lastModifiedDate":"2021-10-31"},{"lineNumber":572,"author":{"gitId":"marcuspeh"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-10-31"},{"lineNumber":573,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":574,"author":{"gitId":"marcuspeh"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2021-10-27"},{"lineNumber":575,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":576,"author":{"gitId":"chrus-chong"},"content":"## 5. Command summary","lastModifiedDate":"2021-10-26"},{"lineNumber":577,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":578,"author":{"gitId":"marcuspeh"},"content":"### 5.1 Contacts commands","lastModifiedDate":"2021-10-27"},{"lineNumber":579,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":580,"author":{"gitId":"-"},"content":"Action | Format, Examples","lastModifiedDate":"2020-05-23"},{"lineNumber":581,"author":{"gitId":"-"},"content":"--------|------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":582,"author":{"gitId":"chrus-chong"},"content":"**View Contacts** | `contacts`","lastModifiedDate":"2021-10-26"},{"lineNumber":583,"author":{"gitId":"marcuspeh"},"content":"**Add Contact** | `addcontact n/NAME p/PHONE_NUMBER [t/TAG]…​` \u003cbr\u003e e.g., `add n/James Ho p/22224444 t/friend t/colleague`","lastModifiedDate":"2021-11-01"},{"lineNumber":584,"author":{"gitId":"chrus-chong"},"content":"**Delete Contact** | `deletecontact INDEX`\u003cbr\u003e e.g., `delete 3`","lastModifiedDate":"2021-10-26"},{"lineNumber":585,"author":{"gitId":"marcuspeh"},"content":"**Edit Contact** | `editcontact INDEX [n/NAME] [p/PHONE_NUMBER] [t/TAG]…​`\u003cbr\u003e e.g.,`edit 2 n/James Lee`","lastModifiedDate":"2021-11-01"},{"lineNumber":586,"author":{"gitId":"marcuspeh"},"content":"**Find Contacts** | `findcontacts KEYWORD [MORE_KEYWORDS]`\u003cbr\u003e e.g., `findcontacts James Jake`","lastModifiedDate":"2021-10-31"},{"lineNumber":587,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":588,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":589,"author":{"gitId":"marcuspeh"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2021-10-27"},{"lineNumber":590,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":591,"author":{"gitId":"marcuspeh"},"content":"### 5.2 Groups commands","lastModifiedDate":"2021-10-27"},{"lineNumber":592,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":593,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":594,"author":{"gitId":"marcuspeh"},"content":"Action | Format, Examples","lastModifiedDate":"2021-10-27"},{"lineNumber":595,"author":{"gitId":"marcuspeh"},"content":"--------|------------------","lastModifiedDate":"2021-10-27"},{"lineNumber":596,"author":{"gitId":"chrus-chong"},"content":"**View Groups** | `groups`","lastModifiedDate":"2021-10-26"},{"lineNumber":597,"author":{"gitId":"chrus-chong"},"content":"**Create Group** | `creategroup gn/GROUP_NAME n/NAME1 n/NAME2 n/NAME3...t/TAG1` \u003cbr\u003e e.g., `creategroup gn/Bali n/Jacob Tan n/Max Chia n/Julianne Tay t/friends`","lastModifiedDate":"2021-10-26"},{"lineNumber":598,"author":{"gitId":"chrus-chong"},"content":"**Delete Group** | `deletegroup gn/GROUP_NAME` \u003cbr\u003e e.g., `deletegroup gn/Vienna`","lastModifiedDate":"2021-10-26"},{"lineNumber":599,"author":{"gitId":"chrus-chong"},"content":"**Add Contact to Group** | `groupaddcontact gn/GROUP_NAME n/NAME1 [n/MORE_NAMES]` \u003cbr\u003e e.g., `groupaddcontact gn/Bali n/Jacob Tan`","lastModifiedDate":"2021-10-26"},{"lineNumber":600,"author":{"gitId":"chrus-chong"},"content":"**Add Tags to Group** | `groupaddtag gn/GROUP_NAME n/TAG1 [n/MORE_TAGS]` \u003cbr\u003e e.g., `groupaddtag gn/Bali n/friends`","lastModifiedDate":"2021-10-26"},{"lineNumber":601,"author":{"gitId":"chrus-chong"},"content":"**Edit Group Name** | `groupeditname gn/OLD_GROUP_NAME gn/NEW_GROUP_NAME` \u003cbr\u003e e.g., `groupedittag gn/Bali gn/Hanoi`","lastModifiedDate":"2021-10-26"},{"lineNumber":602,"author":{"gitId":"marcuspeh"},"content":"**Remove Tags from Group** | `groupremovetag gn/GROUP_NAME n/TAG1 [n/MORE_TAGS]` \u003cbr\u003e e.g., `groupremovetag gn/Bali n/friends`","lastModifiedDate":"2021-10-27"},{"lineNumber":603,"author":{"gitId":"marcuspeh"},"content":"**Remove Contact from Group** | `groupremovecontact gn/GROUP_NAME n/NAME1 [n/MORE_NAMES]` \u003cbr\u003e e.g., `groupremovecontact gn/Bali n/Jacob Tan`","lastModifiedDate":"2021-10-27"},{"lineNumber":604,"author":{"gitId":"marcuspeh"},"content":"**Find Groups** | `findgroups KEYWORD [MORE_KEYWORDS]`\u003cbr\u003e e.g., `findgroups James Jake`","lastModifiedDate":"2021-10-31"},{"lineNumber":605,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":606,"author":{"gitId":"marcuspeh"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2021-10-27"},{"lineNumber":607,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":608,"author":{"gitId":"marcuspeh"},"content":"### 5.3 Expense commands","lastModifiedDate":"2021-10-27"},{"lineNumber":609,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":610,"author":{"gitId":"marcuspeh"},"content":"Action | Format, Examples","lastModifiedDate":"2021-10-27"},{"lineNumber":611,"author":{"gitId":"marcuspeh"},"content":"--------|------------------","lastModifiedDate":"2021-10-27"},{"lineNumber":612,"author":{"gitId":"chrus-chong"},"content":"**View Expense** | `expense INDEX` \u003cbr\u003e e.g., `expense 2`","lastModifiedDate":"2021-10-26"},{"lineNumber":613,"author":{"gitId":"chrus-chong"},"content":"**Add Expense** | `add expense add expense /des DESCRIPTION /by PAYER_NAME1 AMOUNT PAID BY NAME 1 /for PAYEE_NAME1 PAYEE_NAME 2` \u003cbr\u003e e.g., `add expense /des Koi /by Jake 20.00 /for Justin, Raj, Keith`","lastModifiedDate":"2021-10-26"},{"lineNumber":614,"author":{"gitId":"chrus-chong"},"content":"**Delete Expense** | `deleteexpense INDEX` \u003cbr\u003e e.g., `deleteexpense 1`","lastModifiedDate":"2021-10-26"},{"lineNumber":615,"author":{"gitId":"marcuspeh"},"content":"**Find Expenses** | `findexpenses KEYWORD [MORE_KEYWORDS] gn/GROUP_NAME`\u003cbr\u003e e.g., `findexpenses dinner buffet gn/London`","lastModifiedDate":"2021-10-31"},{"lineNumber":616,"author":{"gitId":"marcuspeh"},"content":"**Calculate Spending** | `transactionsummary gn/GROUP_NAME` \u003cbr\u003e e.g., `transactionsummary gn/Bali` ","lastModifiedDate":"2021-10-22"},{"lineNumber":617,"author":{"gitId":"ramapriyan912001"},"content":"**Calculate Payments** | `calculatepayments gn/GROUP_NAME` \u003cbr\u003e e.g., `calculatepayments gn/Bali` ","lastModifiedDate":"2021-10-21"},{"lineNumber":618,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":619,"author":{"gitId":"marcuspeh"},"content":"### 5.4 Miscellaneous Commands","lastModifiedDate":"2021-10-27"},{"lineNumber":620,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":621,"author":{"gitId":"marcuspeh"},"content":"Action | Format, Examples","lastModifiedDate":"2021-10-27"},{"lineNumber":622,"author":{"gitId":"marcuspeh"},"content":"--------|------------------","lastModifiedDate":"2021-10-27"},{"lineNumber":623,"author":{"gitId":"ramapriyan912001"},"content":"**Clear Data** | `clearalldata`","lastModifiedDate":"2021-10-31"},{"lineNumber":624,"author":{"gitId":"-"},"content":"**Help** | `help`","lastModifiedDate":"2020-05-23"},{"lineNumber":625,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":626,"author":{"gitId":"marcuspeh"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-10-31"},{"lineNumber":627,"author":{"gitId":"marcuspeh"},"content":"[Click here to return to table of contents](#tableofcontents)","lastModifiedDate":"2021-10-31"},{"lineNumber":628,"author":{"gitId":"marcuspeh"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-10-31"},{"lineNumber":629,"author":{"gitId":"marcuspeh"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-10-27"},{"lineNumber":630,"author":{"gitId":"marcuspeh"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2021-10-27"},{"lineNumber":631,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":632,"author":{"gitId":"chrus-chong"},"content":"## 6. Final Word","lastModifiedDate":"2021-10-26"},{"lineNumber":633,"author":{"gitId":"chrus-chong"},"content":"AWE hopes to revolutionise the group-travel space through its effective handling of shared expenses on a centralised","lastModifiedDate":"2021-10-26"},{"lineNumber":634,"author":{"gitId":"chrus-chong"},"content":"platform to maximise the efficiency of payment and recollection of debts. Our team is committed to delivering a seamless ","lastModifiedDate":"2021-10-26"},{"lineNumber":635,"author":{"gitId":"marcuspeh"},"content":"experience for potential users. We are always looking to improve. As such, do drop us an email at \u003ca href \u003d \"mailto: awe80contact@gmail.com\"\u003eawe80contact@gmail.com\u003c/a\u003e","lastModifiedDate":"2021-10-31"},{"lineNumber":636,"author":{"gitId":"chrus-chong"},"content":"if you discover any bugs while using the application.","lastModifiedDate":"2021-10-26"},{"lineNumber":637,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":638,"author":{"gitId":"marcuspeh"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-10-31"},{"lineNumber":639,"author":{"gitId":"marcuspeh"},"content":"[Click here to return to table of contents](#tableofcontents)","lastModifiedDate":"2021-10-31"},{"lineNumber":640,"author":{"gitId":"marcuspeh"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-10-31"}],"authorContributionMap":{"marcuspeh":231,"Jingwencloud":29,"chrus-chong":152,"kheekheekhee":13,"ramapriyan912001":77,"-":138}},{"path":"docs/_sass/minima/_base.scss","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"html {","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  font-size: $base-font-size;","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Reset some basic elements","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"body, h1, h2, h3, h4, h5, h6,","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"p, blockquote, pre, hr,","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"dl, dd, ol, ul, figure {","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"  margin: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"  padding: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * Basic styling","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"body {","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"  font: $base-font-weight #{$base-font-size}/#{$base-line-height} $base-font-family;","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"  color: $text-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"  background-color: $background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"  -webkit-text-size-adjust: 100%;","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"  -webkit-font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     -moz-font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"       -o-font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"          font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"  font-kerning: normal;","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"  display: flex;","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"  min-height: 100vh;","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"  flex-direction: column;","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"  overflow-wrap: break-word;","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":" * Set `margin-bottom` to maintain vertical rhythm","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"h1, h2, h3, h4, h5, h6,","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"p, blockquote, pre,","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"ul, ol, dl, figure,","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"%vertical-rhythm {","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"  margin-bottom: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"hr {","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"  margin-top: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"  margin-bottom: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":" * `main` element","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"main {","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"  display: block; /* Default value of `display` of `main` element is \u0027inline\u0027 in IE 11. */","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":" * Images","lastModifiedDate":"2020-05-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"img {","lastModifiedDate":"2020-05-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"  max-width: 100%;","lastModifiedDate":"2020-05-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"  vertical-align: middle;","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":" * Figures","lastModifiedDate":"2020-05-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"figure \u003e img {","lastModifiedDate":"2020-05-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"  display: block;","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"figcaption {","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"  font-size: $small-font-size;","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":" * Lists","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"ul, ol {","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"  margin-left: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"li {","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"  \u003e ul,","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"  \u003e ol {","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    margin-bottom: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":" * Headings","lastModifiedDate":"2020-05-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"h1, h2, h3, h4, h5, h6 {","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"  font-weight: $base-font-weight;","lastModifiedDate":"2020-05-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":" * Links","lastModifiedDate":"2020-05-23"},{"lineNumber":113,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":114,"author":{"gitId":"-"},"content":"a {","lastModifiedDate":"2020-05-23"},{"lineNumber":115,"author":{"gitId":"-"},"content":"  color: $link-base-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"  text-decoration: none;","lastModifiedDate":"2020-05-23"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"  \u0026:visited {","lastModifiedDate":"2020-05-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    color: $link-visited-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":120,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"  \u0026:hover {","lastModifiedDate":"2020-05-23"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    color: $text-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    text-decoration: underline;","lastModifiedDate":"2020-05-23"},{"lineNumber":125,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":127,"author":{"gitId":"-"},"content":"  .social-media-list \u0026:hover {","lastModifiedDate":"2020-05-23"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    text-decoration: none;","lastModifiedDate":"2020-05-23"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    .username {","lastModifiedDate":"2020-05-23"},{"lineNumber":131,"author":{"gitId":"-"},"content":"      text-decoration: underline;","lastModifiedDate":"2020-05-23"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":" * Blockquotes","lastModifiedDate":"2020-05-23"},{"lineNumber":139,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"blockquote {","lastModifiedDate":"2020-05-23"},{"lineNumber":141,"author":{"gitId":"-"},"content":"  color: $brand-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":142,"author":{"gitId":"-"},"content":"  border-left: 4px solid $brand-color-light;","lastModifiedDate":"2020-05-23"},{"lineNumber":143,"author":{"gitId":"-"},"content":"  padding-left: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":144,"author":{"gitId":"-"},"content":"  @include relative-font-size(1.125);","lastModifiedDate":"2020-05-23"},{"lineNumber":145,"author":{"gitId":"-"},"content":"  font-style: italic;","lastModifiedDate":"2020-05-23"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"  \u003e :last-child {","lastModifiedDate":"2020-05-23"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    margin-bottom: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":149,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"  i, em {","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    font-style: normal;","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":154,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":158,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":159,"author":{"gitId":"-"},"content":" * Code formatting","lastModifiedDate":"2020-05-23"},{"lineNumber":160,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":161,"author":{"gitId":"-"},"content":"pre,","lastModifiedDate":"2020-05-23"},{"lineNumber":162,"author":{"gitId":"-"},"content":"code {","lastModifiedDate":"2020-05-23"},{"lineNumber":163,"author":{"gitId":"-"},"content":"  font-family: $code-font-family;","lastModifiedDate":"2020-05-23"},{"lineNumber":164,"author":{"gitId":"-"},"content":"  font-size: 0.9375em;","lastModifiedDate":"2020-05-23"},{"lineNumber":165,"author":{"gitId":"-"},"content":"  border: 1px solid $brand-color-light;","lastModifiedDate":"2020-05-23"},{"lineNumber":166,"author":{"gitId":"-"},"content":"  border-radius: 3px;","lastModifiedDate":"2020-05-23"},{"lineNumber":167,"author":{"gitId":"-"},"content":"  background-color: $code-background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":168,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":170,"author":{"gitId":"-"},"content":"code {","lastModifiedDate":"2020-05-23"},{"lineNumber":171,"author":{"gitId":"-"},"content":"  padding: 1px 5px;","lastModifiedDate":"2020-05-23"},{"lineNumber":172,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":174,"author":{"gitId":"-"},"content":"pre {","lastModifiedDate":"2020-05-23"},{"lineNumber":175,"author":{"gitId":"-"},"content":"  padding: 8px 12px;","lastModifiedDate":"2020-05-23"},{"lineNumber":176,"author":{"gitId":"-"},"content":"  overflow-x: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":178,"author":{"gitId":"-"},"content":"  \u003e code {","lastModifiedDate":"2020-05-23"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    border: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    padding-right: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":181,"author":{"gitId":"-"},"content":"    padding-left: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":182,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":183,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":185,"author":{"gitId":"-"},"content":".highlight {","lastModifiedDate":"2020-05-23"},{"lineNumber":186,"author":{"gitId":"-"},"content":"  border-radius: 3px;","lastModifiedDate":"2020-05-23"},{"lineNumber":187,"author":{"gitId":"-"},"content":"  background: $code-background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":188,"author":{"gitId":"-"},"content":"  @extend %vertical-rhythm;","lastModifiedDate":"2020-05-23"},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":190,"author":{"gitId":"-"},"content":"  .highlighter-rouge \u0026 {","lastModifiedDate":"2020-05-23"},{"lineNumber":191,"author":{"gitId":"-"},"content":"    background: $code-background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":192,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":193,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":197,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":198,"author":{"gitId":"-"},"content":" * Wrapper","lastModifiedDate":"2020-05-23"},{"lineNumber":199,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":200,"author":{"gitId":"-"},"content":".wrapper {","lastModifiedDate":"2020-05-23"},{"lineNumber":201,"author":{"gitId":"-"},"content":"  max-width: calc(#{$content-width} - (#{$spacing-unit}));","lastModifiedDate":"2020-05-23"},{"lineNumber":202,"author":{"gitId":"-"},"content":"  margin-right: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":203,"author":{"gitId":"-"},"content":"  margin-left: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":204,"author":{"gitId":"-"},"content":"  padding-right: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":205,"author":{"gitId":"-"},"content":"  padding-left: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":206,"author":{"gitId":"-"},"content":"  @extend %clearfix;","lastModifiedDate":"2020-05-23"},{"lineNumber":207,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":208,"author":{"gitId":"-"},"content":"  @media screen and (min-width: $on-large) {","lastModifiedDate":"2020-05-23"},{"lineNumber":209,"author":{"gitId":"-"},"content":"    max-width: calc(#{$content-width} - (#{$spacing-unit} * 2));","lastModifiedDate":"2020-05-23"},{"lineNumber":210,"author":{"gitId":"-"},"content":"    padding-right: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":211,"author":{"gitId":"-"},"content":"    padding-left: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":212,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":213,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":214,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":217,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":218,"author":{"gitId":"-"},"content":" * Clearfix","lastModifiedDate":"2020-05-23"},{"lineNumber":219,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":220,"author":{"gitId":"-"},"content":"%clearfix:after {","lastModifiedDate":"2020-05-23"},{"lineNumber":221,"author":{"gitId":"-"},"content":"  content: \"\";","lastModifiedDate":"2020-05-23"},{"lineNumber":222,"author":{"gitId":"-"},"content":"  display: table;","lastModifiedDate":"2020-05-23"},{"lineNumber":223,"author":{"gitId":"-"},"content":"  clear: both;","lastModifiedDate":"2020-05-23"},{"lineNumber":224,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":226,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":227,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":228,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":229,"author":{"gitId":"-"},"content":" * Icons","lastModifiedDate":"2020-05-23"},{"lineNumber":230,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":231,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":232,"author":{"gitId":"-"},"content":".orange {","lastModifiedDate":"2020-05-23"},{"lineNumber":233,"author":{"gitId":"-"},"content":"  color: #f66a0a;","lastModifiedDate":"2020-05-23"},{"lineNumber":234,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":235,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":236,"author":{"gitId":"-"},"content":".grey {","lastModifiedDate":"2020-05-23"},{"lineNumber":237,"author":{"gitId":"-"},"content":"  color: #828282;","lastModifiedDate":"2020-05-23"},{"lineNumber":238,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":239,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":240,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":241,"author":{"gitId":"-"},"content":" * Tables","lastModifiedDate":"2020-05-23"},{"lineNumber":242,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":243,"author":{"gitId":"-"},"content":"table {","lastModifiedDate":"2020-05-23"},{"lineNumber":244,"author":{"gitId":"-"},"content":"  margin-bottom: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":245,"author":{"gitId":"-"},"content":"  width: 100%;","lastModifiedDate":"2020-05-23"},{"lineNumber":246,"author":{"gitId":"-"},"content":"  text-align: $table-text-align;","lastModifiedDate":"2020-05-23"},{"lineNumber":247,"author":{"gitId":"-"},"content":"  color: $table-text-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":248,"author":{"gitId":"-"},"content":"  border-collapse: collapse;","lastModifiedDate":"2020-05-23"},{"lineNumber":249,"author":{"gitId":"-"},"content":"  border: 1px solid $table-border-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":250,"author":{"gitId":"-"},"content":"  tr {","lastModifiedDate":"2020-05-23"},{"lineNumber":251,"author":{"gitId":"-"},"content":"    \u0026:nth-child(even) {","lastModifiedDate":"2020-05-23"},{"lineNumber":252,"author":{"gitId":"-"},"content":"      background-color: $table-zebra-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":253,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":254,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":255,"author":{"gitId":"-"},"content":"  th, td {","lastModifiedDate":"2020-05-23"},{"lineNumber":256,"author":{"gitId":"-"},"content":"    padding: ($spacing-unit / 3) ($spacing-unit / 2);","lastModifiedDate":"2020-05-23"},{"lineNumber":257,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":258,"author":{"gitId":"-"},"content":"  th {","lastModifiedDate":"2020-05-23"},{"lineNumber":259,"author":{"gitId":"-"},"content":"    background-color: $table-header-bg-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":260,"author":{"gitId":"-"},"content":"    border: 1px solid $table-header-border;","lastModifiedDate":"2020-05-23"},{"lineNumber":261,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":262,"author":{"gitId":"-"},"content":"  td {","lastModifiedDate":"2020-05-23"},{"lineNumber":263,"author":{"gitId":"-"},"content":"    border: 1px solid $table-border-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":264,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":265,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":266,"author":{"gitId":"-"},"content":"  @include media-query($on-laptop) {","lastModifiedDate":"2020-05-23"},{"lineNumber":267,"author":{"gitId":"-"},"content":"    display: block;","lastModifiedDate":"2020-05-23"},{"lineNumber":268,"author":{"gitId":"-"},"content":"    overflow-x: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":269,"author":{"gitId":"-"},"content":"    -webkit-overflow-scrolling: touch;","lastModifiedDate":"2020-05-23"},{"lineNumber":270,"author":{"gitId":"-"},"content":"            -ms-overflow-style: -ms-autohiding-scrollbar;","lastModifiedDate":"2020-05-23"},{"lineNumber":271,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":272,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":273,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-01-11"},{"lineNumber":274,"author":{"gitId":"-"},"content":"@media print {","lastModifiedDate":"2021-01-12"},{"lineNumber":275,"author":{"gitId":"-"},"content":"  /**","lastModifiedDate":"2021-01-11"},{"lineNumber":276,"author":{"gitId":"-"},"content":"  * Prevents page break from cutting through content when printing","lastModifiedDate":"2021-01-12"},{"lineNumber":277,"author":{"gitId":"-"},"content":"  */","lastModifiedDate":"2021-01-11"},{"lineNumber":278,"author":{"gitId":"-"},"content":"  body {","lastModifiedDate":"2021-01-11"},{"lineNumber":279,"author":{"gitId":"-"},"content":"    display: block;","lastModifiedDate":"2021-01-11"},{"lineNumber":280,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-11"},{"lineNumber":281,"author":{"gitId":"-"},"content":"  /**","lastModifiedDate":"2021-01-12"},{"lineNumber":282,"author":{"gitId":"-"},"content":"  * Replaces the top navigation menu with the project name when printing","lastModifiedDate":"2021-01-12"},{"lineNumber":283,"author":{"gitId":"-"},"content":"  */","lastModifiedDate":"2021-01-12"},{"lineNumber":284,"author":{"gitId":"-"},"content":"  .site-header .wrapper {","lastModifiedDate":"2021-01-12"},{"lineNumber":285,"author":{"gitId":"-"},"content":"    display: none;","lastModifiedDate":"2021-01-12"},{"lineNumber":286,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-12"},{"lineNumber":287,"author":{"gitId":"-"},"content":"  .site-header {","lastModifiedDate":"2021-01-12"},{"lineNumber":288,"author":{"gitId":"-"},"content":"    text-align: center;","lastModifiedDate":"2021-01-12"},{"lineNumber":289,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-12"},{"lineNumber":290,"author":{"gitId":"-"},"content":"  .site-header:before {","lastModifiedDate":"2021-01-12"},{"lineNumber":291,"author":{"gitId":"marcuspeh"},"content":"    content: \"AWE\";","lastModifiedDate":"2021-09-23"},{"lineNumber":292,"author":{"gitId":"-"},"content":"    font-size: 32px;","lastModifiedDate":"2021-01-12"},{"lineNumber":293,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-11"},{"lineNumber":294,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-01-12"},{"lineNumber":295,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-01-12"}],"authorContributionMap":{"marcuspeh":1,"-":294}},{"path":"docs/diagrams/AddExpenseActivityDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"kheekheekhee"},"content":"@startuml","lastModifiedDate":"2021-10-21"},{"lineNumber":2,"author":{"gitId":"kheekheekhee"},"content":"start","lastModifiedDate":"2021-10-21"},{"lineNumber":3,"author":{"gitId":"kheekheekhee"},"content":":User executes command;","lastModifiedDate":"2021-10-21"},{"lineNumber":4,"author":{"gitId":"kheekheekhee"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":5,"author":{"gitId":"kheekheekhee"},"content":"\u0027Since the beta syntax does not support placing the condition outside the","lastModifiedDate":"2021-10-21"},{"lineNumber":6,"author":{"gitId":"kheekheekhee"},"content":"\u0027diamond we place it as the true branch instead.","lastModifiedDate":"2021-10-21"},{"lineNumber":7,"author":{"gitId":"kheekheekhee"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":8,"author":{"gitId":"kheekheekhee"},"content":"if () then ([specified group exists in model, specified participants of expense are members of specified group and expense is valid])","lastModifiedDate":"2021-10-21"},{"lineNumber":9,"author":{"gitId":"kheekheekhee"},"content":"    :Retrieve Group from model;","lastModifiedDate":"2021-10-21"},{"lineNumber":10,"author":{"gitId":"kheekheekhee"},"content":"    :New Expense involving participants created in specified group;","lastModifiedDate":"2021-10-21"},{"lineNumber":11,"author":{"gitId":"kheekheekhee"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":12,"author":{"gitId":"kheekheekhee"},"content":"else([else])","lastModifiedDate":"2021-10-21"},{"lineNumber":13,"author":{"gitId":"kheekheekhee"},"content":"endif","lastModifiedDate":"2021-10-21"},{"lineNumber":14,"author":{"gitId":"kheekheekhee"},"content":"stop","lastModifiedDate":"2021-10-21"},{"lineNumber":15,"author":{"gitId":"kheekheekhee"},"content":"@enduml","lastModifiedDate":"2021-10-21"}],"authorContributionMap":{"kheekheekhee":15}},{"path":"docs/diagrams/AddExpenseSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"kheekheekhee"},"content":"@startuml","lastModifiedDate":"2021-10-21"},{"lineNumber":2,"author":{"gitId":"kheekheekhee"},"content":"!include style.puml","lastModifiedDate":"2021-10-21"},{"lineNumber":3,"author":{"gitId":"kheekheekhee"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":4,"author":{"gitId":"kheekheekhee"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2021-10-21"},{"lineNumber":5,"author":{"gitId":"kheekheekhee"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2021-10-21"},{"lineNumber":6,"author":{"gitId":"marcuspeh"},"content":"participant \":AweParser\" as AweParser LOGIC_COLOR","lastModifiedDate":"2021-10-22"},{"lineNumber":7,"author":{"gitId":"kheekheekhee"},"content":"participant \":AddExpenseCommandParser\" as AddExpenseCommandParser LOGIC_COLOR","lastModifiedDate":"2021-10-21"},{"lineNumber":8,"author":{"gitId":"kheekheekhee"},"content":"participant \"addExpenseCommand:AddExpenseCommand\" as AddExpenseCommand LOGIC_COLOR","lastModifiedDate":"2021-10-21"},{"lineNumber":9,"author":{"gitId":"kheekheekhee"},"content":"participant \":CommandResult\" as CommandResult LOGIC_COLOR","lastModifiedDate":"2021-10-21"},{"lineNumber":10,"author":{"gitId":"kheekheekhee"},"content":"end box","lastModifiedDate":"2021-10-21"},{"lineNumber":11,"author":{"gitId":"kheekheekhee"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":12,"author":{"gitId":"kheekheekhee"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2021-10-21"},{"lineNumber":13,"author":{"gitId":"kheekheekhee"},"content":"participant \":Model\" as Model MODEL_COLOR","lastModifiedDate":"2021-10-21"},{"lineNumber":14,"author":{"gitId":"kheekheekhee"},"content":"end box","lastModifiedDate":"2021-10-21"},{"lineNumber":15,"author":{"gitId":"kheekheekhee"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":16,"author":{"gitId":"kheekheekhee"},"content":"[-\u003e LogicManager : execute(\"addexpense n/Alex Yeoh gn/Bali $/50 d/Food\")","lastModifiedDate":"2021-10-25"},{"lineNumber":17,"author":{"gitId":"kheekheekhee"},"content":"activate LogicManager","lastModifiedDate":"2021-10-21"},{"lineNumber":18,"author":{"gitId":"kheekheekhee"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":19,"author":{"gitId":"kheekheekhee"},"content":"LogicManager -\u003e AweParser : parseCommand(\"addexpense n/Alex Yeoh gn/Bali $/50 d/Food\")","lastModifiedDate":"2021-10-25"},{"lineNumber":20,"author":{"gitId":"marcuspeh"},"content":"activate AweParser","lastModifiedDate":"2021-10-22"},{"lineNumber":21,"author":{"gitId":"kheekheekhee"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":22,"author":{"gitId":"kheekheekhee"},"content":"create AddExpenseCommandParser","lastModifiedDate":"2021-10-21"},{"lineNumber":23,"author":{"gitId":"marcuspeh"},"content":"AweParser -\u003e AddExpenseCommandParser","lastModifiedDate":"2021-10-22"},{"lineNumber":24,"author":{"gitId":"kheekheekhee"},"content":"activate AddExpenseCommandParser","lastModifiedDate":"2021-10-21"},{"lineNumber":25,"author":{"gitId":"kheekheekhee"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":26,"author":{"gitId":"marcuspeh"},"content":"AddExpenseCommandParser --\u003e AweParser","lastModifiedDate":"2021-10-22"},{"lineNumber":27,"author":{"gitId":"kheekheekhee"},"content":"deactivate AddExpenseCommandParser","lastModifiedDate":"2021-10-21"},{"lineNumber":28,"author":{"gitId":"kheekheekhee"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":29,"author":{"gitId":"kheekheekhee"},"content":"AweParser -\u003e AddExpenseCommandParser : parse(\"n/Alex Yeoh gn/Bali $/50 d/Food\")","lastModifiedDate":"2021-10-25"},{"lineNumber":30,"author":{"gitId":"kheekheekhee"},"content":"activate AddExpenseCommandParser","lastModifiedDate":"2021-10-21"},{"lineNumber":31,"author":{"gitId":"kheekheekhee"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":32,"author":{"gitId":"kheekheekhee"},"content":"create AddExpenseCommand","lastModifiedDate":"2021-10-21"},{"lineNumber":33,"author":{"gitId":"kheekheekhee"},"content":"AddExpenseCommandParser -\u003e AddExpenseCommand","lastModifiedDate":"2021-10-21"},{"lineNumber":34,"author":{"gitId":"kheekheekhee"},"content":"activate AddExpenseCommand","lastModifiedDate":"2021-10-21"},{"lineNumber":35,"author":{"gitId":"kheekheekhee"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":36,"author":{"gitId":"kheekheekhee"},"content":"AddExpenseCommand --\u003e AddExpenseCommandParser : addExpenseCommand","lastModifiedDate":"2021-10-21"},{"lineNumber":37,"author":{"gitId":"kheekheekhee"},"content":"deactivate AddExpenseCommand","lastModifiedDate":"2021-10-21"},{"lineNumber":38,"author":{"gitId":"kheekheekhee"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":39,"author":{"gitId":"marcuspeh"},"content":"AddExpenseCommandParser --\u003e AweParser : addExpenseCommand","lastModifiedDate":"2021-10-22"},{"lineNumber":40,"author":{"gitId":"kheekheekhee"},"content":"deactivate AddExpenseCommandParser","lastModifiedDate":"2021-10-21"},{"lineNumber":41,"author":{"gitId":"kheekheekhee"},"content":"\u0027Hidden arrow to position the destroy marker below the end of the activation bar.","lastModifiedDate":"2021-10-21"},{"lineNumber":42,"author":{"gitId":"marcuspeh"},"content":"AddExpenseCommandParser -[hidden]-\u003e AweParser","lastModifiedDate":"2021-10-22"},{"lineNumber":43,"author":{"gitId":"kheekheekhee"},"content":"destroy AddExpenseCommandParser","lastModifiedDate":"2021-10-21"},{"lineNumber":44,"author":{"gitId":"kheekheekhee"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":45,"author":{"gitId":"marcuspeh"},"content":"AweParser --\u003e LogicManager : addExpenseCommand","lastModifiedDate":"2021-10-22"},{"lineNumber":46,"author":{"gitId":"marcuspeh"},"content":"deactivate AweParser","lastModifiedDate":"2021-10-22"},{"lineNumber":47,"author":{"gitId":"kheekheekhee"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":48,"author":{"gitId":"kheekheekhee"},"content":"LogicManager -\u003e AddExpenseCommand : execute()","lastModifiedDate":"2021-10-21"},{"lineNumber":49,"author":{"gitId":"kheekheekhee"},"content":"activate AddExpenseCommand","lastModifiedDate":"2021-10-21"},{"lineNumber":50,"author":{"gitId":"kheekheekhee"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":51,"author":{"gitId":"kheekheekhee"},"content":"AddExpenseCommand -\u003e Model : addExpense(e:Expense, g:Group)","lastModifiedDate":"2021-10-21"},{"lineNumber":52,"author":{"gitId":"kheekheekhee"},"content":"activate Model","lastModifiedDate":"2021-10-21"},{"lineNumber":53,"author":{"gitId":"kheekheekhee"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":54,"author":{"gitId":"kheekheekhee"},"content":"Model --\u003e AddExpenseCommand","lastModifiedDate":"2021-10-21"},{"lineNumber":55,"author":{"gitId":"kheekheekhee"},"content":"deactivate Model","lastModifiedDate":"2021-10-21"},{"lineNumber":56,"author":{"gitId":"kheekheekhee"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":57,"author":{"gitId":"kheekheekhee"},"content":"create CommandResult","lastModifiedDate":"2021-10-21"},{"lineNumber":58,"author":{"gitId":"kheekheekhee"},"content":"AddExpenseCommand -\u003e CommandResult","lastModifiedDate":"2021-10-21"},{"lineNumber":59,"author":{"gitId":"kheekheekhee"},"content":"activate CommandResult","lastModifiedDate":"2021-10-21"},{"lineNumber":60,"author":{"gitId":"kheekheekhee"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":61,"author":{"gitId":"kheekheekhee"},"content":"CommandResult --\u003e AddExpenseCommand","lastModifiedDate":"2021-10-21"},{"lineNumber":62,"author":{"gitId":"kheekheekhee"},"content":"deactivate CommandResult","lastModifiedDate":"2021-10-21"},{"lineNumber":63,"author":{"gitId":"kheekheekhee"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":64,"author":{"gitId":"kheekheekhee"},"content":"AddExpenseCommand --\u003e LogicManager : result","lastModifiedDate":"2021-10-21"},{"lineNumber":65,"author":{"gitId":"kheekheekhee"},"content":"deactivate AddExpenseCommand","lastModifiedDate":"2021-10-21"},{"lineNumber":66,"author":{"gitId":"kheekheekhee"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":67,"author":{"gitId":"kheekheekhee"},"content":"[\u003c--LogicManager","lastModifiedDate":"2021-10-21"},{"lineNumber":68,"author":{"gitId":"kheekheekhee"},"content":"deactivate LogicManager","lastModifiedDate":"2021-10-21"},{"lineNumber":69,"author":{"gitId":"kheekheekhee"},"content":"@enduml","lastModifiedDate":"2021-10-21"}],"authorContributionMap":{"marcuspeh":8,"kheekheekhee":61}},{"path":"docs/diagrams/ArchitectureSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"Actor User as user USER_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"Participant \":UI\" as ui UI_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"Participant \":Logic\" as logic LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Participant \":Model\" as model MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"Participant \":Storage\" as storage STORAGE_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":10,"author":{"gitId":"marcuspeh"},"content":"user -[USER_COLOR]\u003e ui : \"deletecontact 1\"","lastModifiedDate":"2021-10-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"activate ui UI_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"marcuspeh"},"content":"ui -[UI_COLOR]\u003e logic : execute(\"deletecontactt 1\")","lastModifiedDate":"2021-10-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":"activate logic LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"logic -[LOGIC_COLOR]\u003e model : deletePerson(p)","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"activate model MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"model -[MODEL_COLOR]-\u003e logic","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"deactivate model","lastModifiedDate":"2019-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"logic -[LOGIC_COLOR]\u003e storage : saveAddressBook(addressBook)","lastModifiedDate":"2019-07-03"},{"lineNumber":23,"author":{"gitId":"-"},"content":"activate storage STORAGE_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":25,"author":{"gitId":"-"},"content":"storage -[STORAGE_COLOR]\u003e storage : Save to file","lastModifiedDate":"2019-07-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"activate storage STORAGE_COLOR_T1","lastModifiedDate":"2019-07-03"},{"lineNumber":27,"author":{"gitId":"-"},"content":"storage --[STORAGE_COLOR]\u003e storage","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"deactivate storage","lastModifiedDate":"2019-07-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"storage --[STORAGE_COLOR]\u003e logic","lastModifiedDate":"2019-07-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"deactivate storage","lastModifiedDate":"2019-07-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"logic --[LOGIC_COLOR]\u003e ui","lastModifiedDate":"2019-07-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"deactivate logic","lastModifiedDate":"2019-07-03"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":36,"author":{"gitId":"-"},"content":"ui--[UI_COLOR]\u003e user","lastModifiedDate":"2019-07-03"},{"lineNumber":37,"author":{"gitId":"-"},"content":"deactivate ui","lastModifiedDate":"2019-07-03"},{"lineNumber":38,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"marcuspeh":2,"-":36}},{"path":"docs/diagrams/CalculatePaymentsActivityDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"ramapriyan912001"},"content":"@startuml","lastModifiedDate":"2021-10-25"},{"lineNumber":2,"author":{"gitId":"ramapriyan912001"},"content":"start","lastModifiedDate":"2021-10-25"},{"lineNumber":3,"author":{"gitId":"ramapriyan912001"},"content":":User executes command;","lastModifiedDate":"2021-10-25"},{"lineNumber":4,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":5,"author":{"gitId":"ramapriyan912001"},"content":"\u0027Since the beta syntax does not support placing the condition outside the","lastModifiedDate":"2021-10-25"},{"lineNumber":6,"author":{"gitId":"ramapriyan912001"},"content":"\u0027diamond we place it as the true branch instead.","lastModifiedDate":"2021-10-25"},{"lineNumber":7,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":8,"author":{"gitId":"ramapriyan912001"},"content":"if () then ([model contains Group (based on GroupName)])","lastModifiedDate":"2021-10-25"},{"lineNumber":9,"author":{"gitId":"ramapriyan912001"},"content":"    :Retrieve Group from model;","lastModifiedDate":"2021-10-25"},{"lineNumber":10,"author":{"gitId":"ramapriyan912001"},"content":"    :Utilise **Algorithm** to Calculate Payments;","lastModifiedDate":"2021-10-27"},{"lineNumber":11,"author":{"gitId":"ramapriyan912001"},"content":"else ([else])","lastModifiedDate":"2021-10-25"},{"lineNumber":12,"author":{"gitId":"ramapriyan912001"},"content":"endif","lastModifiedDate":"2021-10-25"},{"lineNumber":13,"author":{"gitId":"ramapriyan912001"},"content":"stop","lastModifiedDate":"2021-10-25"},{"lineNumber":14,"author":{"gitId":"ramapriyan912001"},"content":"@enduml","lastModifiedDate":"2021-10-25"}],"authorContributionMap":{"ramapriyan912001":14}},{"path":"docs/diagrams/CalculatePaymentsCommandAlgorithmDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"ramapriyan912001"},"content":"@startuml","lastModifiedDate":"2021-10-27"},{"lineNumber":2,"author":{"gitId":"ramapriyan912001"},"content":"start","lastModifiedDate":"2021-10-27"},{"lineNumber":3,"author":{"gitId":"ramapriyan912001"},"content":"-\u003e Receive Group object;","lastModifiedDate":"2021-10-27"},{"lineNumber":4,"author":{"gitId":"ramapriyan912001"},"content":":Initialise an empty list of Pairs","lastModifiedDate":"2021-10-27"},{"lineNumber":5,"author":{"gitId":"ramapriyan912001"},"content":"Initialise an empty list of Payments;","lastModifiedDate":"2021-10-27"},{"lineNumber":6,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":7,"author":{"gitId":"ramapriyan912001"},"content":":Iterate over group members","lastModifiedDate":"2021-10-27"},{"lineNumber":8,"author":{"gitId":"ramapriyan912001"},"content":"Retrieve total payments and expenditures;","lastModifiedDate":"2021-10-27"},{"lineNumber":9,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":10,"author":{"gitId":"ramapriyan912001"},"content":":Calculate the surplus of each individual","lastModifiedDate":"2021-10-27"},{"lineNumber":11,"author":{"gitId":"ramapriyan912001"},"content":"Populate pair list with Persons with non-zero surpluses;","lastModifiedDate":"2021-10-27"},{"lineNumber":12,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":13,"author":{"gitId":"ramapriyan912001"},"content":"while (pair list is not empty)","lastModifiedDate":"2021-10-27"},{"lineNumber":14,"author":{"gitId":"ramapriyan912001"},"content":":Sort the list in ascending order of surplus;","lastModifiedDate":"2021-10-27"},{"lineNumber":15,"author":{"gitId":"ramapriyan912001"},"content":":Retrieve the first Pair and last Pair in the list;","lastModifiedDate":"2021-10-27"},{"lineNumber":16,"author":{"gitId":"ramapriyan912001"},"content":":Check to see which pair has a smaller magnitude","lastModifiedDate":"2021-10-27"},{"lineNumber":17,"author":{"gitId":"ramapriyan912001"},"content":"Define this value to be SMALL_VAL;","lastModifiedDate":"2021-10-27"},{"lineNumber":18,"author":{"gitId":"ramapriyan912001"},"content":":Create a Payment object with a Cost SMALL_VAL","lastModifiedDate":"2021-10-27"},{"lineNumber":19,"author":{"gitId":"ramapriyan912001"},"content":"Payee is Person from first pair","lastModifiedDate":"2021-10-27"},{"lineNumber":20,"author":{"gitId":"ramapriyan912001"},"content":"Payer is Person from last pair;","lastModifiedDate":"2021-10-27"},{"lineNumber":21,"author":{"gitId":"ramapriyan912001"},"content":"    if () then ([pairs do not have equal magnitude])","lastModifiedDate":"2021-10-27"},{"lineNumber":22,"author":{"gitId":"ramapriyan912001"},"content":"    :Remove pair with SMALL_VAL from list;","lastModifiedDate":"2021-10-27"},{"lineNumber":23,"author":{"gitId":"ramapriyan912001"},"content":"    :Decrease Cost of other pair by SMALL_VAL;","lastModifiedDate":"2021-10-27"},{"lineNumber":24,"author":{"gitId":"ramapriyan912001"},"content":"    else ([else])","lastModifiedDate":"2021-10-27"},{"lineNumber":25,"author":{"gitId":"ramapriyan912001"},"content":"    :Remove both pairs from list;","lastModifiedDate":"2021-10-27"},{"lineNumber":26,"author":{"gitId":"ramapriyan912001"},"content":"    endif","lastModifiedDate":"2021-10-27"},{"lineNumber":27,"author":{"gitId":"ramapriyan912001"},"content":"endwhile","lastModifiedDate":"2021-10-27"},{"lineNumber":28,"author":{"gitId":"ramapriyan912001"},"content":"stop","lastModifiedDate":"2021-10-27"},{"lineNumber":29,"author":{"gitId":"ramapriyan912001"},"content":"@enduml","lastModifiedDate":"2021-10-27"}],"authorContributionMap":{"ramapriyan912001":29}},{"path":"docs/diagrams/CalculatePaymentsRefSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"ramapriyan912001"},"content":"@startuml","lastModifiedDate":"2021-10-27"},{"lineNumber":2,"author":{"gitId":"ramapriyan912001"},"content":"!include style.puml","lastModifiedDate":"2021-10-27"},{"lineNumber":3,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":4,"author":{"gitId":"ramapriyan912001"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2021-10-27"},{"lineNumber":5,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":6,"author":{"gitId":"ramapriyan912001"},"content":"participant \":AweParser\" as AweParser LOGIC_COLOR","lastModifiedDate":"2021-10-27"},{"lineNumber":7,"author":{"gitId":"ramapriyan912001"},"content":"participant \":CalculatePaymentsCommandParser\" as CalculatePaymentsCommandParser LOGIC_COLOR","lastModifiedDate":"2021-10-27"},{"lineNumber":8,"author":{"gitId":"ramapriyan912001"},"content":"participant \"cpCommand:CalculatePaymentsCommand\" as CalculatePaymentsCommand LOGIC_COLOR","lastModifiedDate":"2021-10-27"},{"lineNumber":9,"author":{"gitId":"ramapriyan912001"},"content":"end box","lastModifiedDate":"2021-10-27"},{"lineNumber":10,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":11,"author":{"gitId":"ramapriyan912001"},"content":"mainframe \"sd get calculatePaymentsCommand\"","lastModifiedDate":"2021-10-27"},{"lineNumber":12,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":13,"author":{"gitId":"ramapriyan912001"},"content":"activate AweParser","lastModifiedDate":"2021-10-27"},{"lineNumber":14,"author":{"gitId":"ramapriyan912001"},"content":"create CalculatePaymentsCommandParser","lastModifiedDate":"2021-10-27"},{"lineNumber":15,"author":{"gitId":"ramapriyan912001"},"content":"AweParser -\u003e CalculatePaymentsCommandParser","lastModifiedDate":"2021-10-27"},{"lineNumber":16,"author":{"gitId":"ramapriyan912001"},"content":"activate CalculatePaymentsCommandParser","lastModifiedDate":"2021-10-27"},{"lineNumber":17,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":18,"author":{"gitId":"ramapriyan912001"},"content":"CalculatePaymentsCommandParser --\u003e AweParser","lastModifiedDate":"2021-10-27"},{"lineNumber":19,"author":{"gitId":"ramapriyan912001"},"content":"deactivate CalculatePaymentsCommandParser","lastModifiedDate":"2021-10-27"},{"lineNumber":20,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":21,"author":{"gitId":"ramapriyan912001"},"content":"AweParser -\u003e CalculatePaymentsCommandParser : parse(\"gn/Bali\")","lastModifiedDate":"2021-10-27"},{"lineNumber":22,"author":{"gitId":"ramapriyan912001"},"content":"activate CalculatePaymentsCommandParser","lastModifiedDate":"2021-10-27"},{"lineNumber":23,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":24,"author":{"gitId":"ramapriyan912001"},"content":"create CalculatePaymentsCommand","lastModifiedDate":"2021-10-27"},{"lineNumber":25,"author":{"gitId":"ramapriyan912001"},"content":"CalculatePaymentsCommandParser -\u003e CalculatePaymentsCommand","lastModifiedDate":"2021-10-27"},{"lineNumber":26,"author":{"gitId":"ramapriyan912001"},"content":"activate CalculatePaymentsCommand","lastModifiedDate":"2021-10-27"},{"lineNumber":27,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":28,"author":{"gitId":"ramapriyan912001"},"content":"CalculatePaymentsCommand --\u003e CalculatePaymentsCommandParser : calculatePaymentsCommand","lastModifiedDate":"2021-10-27"},{"lineNumber":29,"author":{"gitId":"ramapriyan912001"},"content":"deactivate CalculatePaymentsCommand","lastModifiedDate":"2021-10-27"},{"lineNumber":30,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":31,"author":{"gitId":"ramapriyan912001"},"content":"CalculatePaymentsCommandParser --\u003e AweParser : calculatePaymentsCommand","lastModifiedDate":"2021-10-27"},{"lineNumber":32,"author":{"gitId":"ramapriyan912001"},"content":"deactivate CalculatePaymentsCommandParser","lastModifiedDate":"2021-10-27"},{"lineNumber":33,"author":{"gitId":"ramapriyan912001"},"content":"\u0027Hidden arrow to position the destroy marker below the end of the activation bar.","lastModifiedDate":"2021-10-27"},{"lineNumber":34,"author":{"gitId":"ramapriyan912001"},"content":"CalculatePaymentsCommandParser -[hidden]-\u003e AweParser","lastModifiedDate":"2021-10-27"},{"lineNumber":35,"author":{"gitId":"ramapriyan912001"},"content":"destroy CalculatePaymentsCommandParser","lastModifiedDate":"2021-10-27"},{"lineNumber":36,"author":{"gitId":"ramapriyan912001"},"content":"deactivate AweParser","lastModifiedDate":"2021-10-27"},{"lineNumber":37,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":38,"author":{"gitId":"ramapriyan912001"},"content":"@enduml","lastModifiedDate":"2021-10-27"}],"authorContributionMap":{"ramapriyan912001":38}},{"path":"docs/diagrams/CalculatePaymentsSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"ramapriyan912001"},"content":"@startuml","lastModifiedDate":"2021-10-25"},{"lineNumber":2,"author":{"gitId":"ramapriyan912001"},"content":"!include style.puml","lastModifiedDate":"2021-10-25"},{"lineNumber":3,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":4,"author":{"gitId":"ramapriyan912001"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2021-10-25"},{"lineNumber":5,"author":{"gitId":"ramapriyan912001"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2021-10-25"},{"lineNumber":6,"author":{"gitId":"ramapriyan912001"},"content":"participant \":AweParser\" as AweParser LOGIC_COLOR","lastModifiedDate":"2021-10-25"},{"lineNumber":7,"author":{"gitId":"ramapriyan912001"},"content":"participant \":CalculatePaymentsCommand\" as CalculatePaymentsCommand LOGIC_COLOR","lastModifiedDate":"2021-10-27"},{"lineNumber":8,"author":{"gitId":"ramapriyan912001"},"content":"participant \":CommandResult\" as CommandResult LOGIC_COLOR","lastModifiedDate":"2021-10-25"},{"lineNumber":9,"author":{"gitId":"ramapriyan912001"},"content":"end box","lastModifiedDate":"2021-10-25"},{"lineNumber":10,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":11,"author":{"gitId":"ramapriyan912001"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2021-10-25"},{"lineNumber":12,"author":{"gitId":"ramapriyan912001"},"content":"participant \":Model\" as Model MODEL_COLOR","lastModifiedDate":"2021-10-25"},{"lineNumber":13,"author":{"gitId":"ramapriyan912001"},"content":"end box","lastModifiedDate":"2021-10-25"},{"lineNumber":14,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":15,"author":{"gitId":"ramapriyan912001"},"content":"[-\u003e LogicManager : execute(\"calculatepayments gn/Bali\")","lastModifiedDate":"2021-10-27"},{"lineNumber":16,"author":{"gitId":"ramapriyan912001"},"content":"activate LogicManager","lastModifiedDate":"2021-10-25"},{"lineNumber":17,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":18,"author":{"gitId":"ramapriyan912001"},"content":"LogicManager -\u003e AweParser : parseCommand(\"calculatepayments gn/Bali\")","lastModifiedDate":"2021-10-27"},{"lineNumber":19,"author":{"gitId":"ramapriyan912001"},"content":"activate AweParser","lastModifiedDate":"2021-10-25"},{"lineNumber":20,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":21,"author":{"gitId":"ramapriyan912001"},"content":"note right","lastModifiedDate":"2021-10-29"},{"lineNumber":22,"author":{"gitId":"ramapriyan912001"},"content":"Refer to ref frame for","lastModifiedDate":"2021-10-29"},{"lineNumber":23,"author":{"gitId":"ramapriyan912001"},"content":"details on creation of","lastModifiedDate":"2021-10-29"},{"lineNumber":24,"author":{"gitId":"ramapriyan912001"},"content":"the CalculatePaymentsCommand object","lastModifiedDate":"2021-10-29"},{"lineNumber":25,"author":{"gitId":"ramapriyan912001"},"content":"end note","lastModifiedDate":"2021-10-29"},{"lineNumber":26,"author":{"gitId":"ramapriyan912001"},"content":"group sd get calculatePaymentsCommand","lastModifiedDate":"2021-10-29"},{"lineNumber":27,"author":{"gitId":"ramapriyan912001"},"content":"create CalculatePaymentsCommand","lastModifiedDate":"2021-10-27"},{"lineNumber":28,"author":{"gitId":"ramapriyan912001"},"content":"AweParser -\u003e CalculatePaymentsCommand","lastModifiedDate":"2021-10-27"},{"lineNumber":29,"author":{"gitId":"ramapriyan912001"},"content":"activate CalculatePaymentsCommand","lastModifiedDate":"2021-10-29"},{"lineNumber":30,"author":{"gitId":"ramapriyan912001"},"content":"CalculatePaymentsCommand --\u003e AweParser","lastModifiedDate":"2021-10-29"},{"lineNumber":31,"author":{"gitId":"ramapriyan912001"},"content":"deactivate CalculatePaymentsCommand","lastModifiedDate":"2021-10-29"},{"lineNumber":32,"author":{"gitId":"ramapriyan912001"},"content":"end group","lastModifiedDate":"2021-10-29"},{"lineNumber":33,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":34,"author":{"gitId":"ramapriyan912001"},"content":"AweParser --\u003e LogicManager : calculatePaymentsCommand","lastModifiedDate":"2021-10-27"},{"lineNumber":35,"author":{"gitId":"ramapriyan912001"},"content":"deactivate AweParser","lastModifiedDate":"2021-10-25"},{"lineNumber":36,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":37,"author":{"gitId":"ramapriyan912001"},"content":"LogicManager -\u003e CalculatePaymentsCommand : execute()","lastModifiedDate":"2021-10-27"},{"lineNumber":38,"author":{"gitId":"ramapriyan912001"},"content":"activate CalculatePaymentsCommand","lastModifiedDate":"2021-10-27"},{"lineNumber":39,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":40,"author":{"gitId":"ramapriyan912001"},"content":"CalculatePaymentsCommand -\u003e Model : getGroupByName(GroupName(\"Bali\"))","lastModifiedDate":"2021-10-27"},{"lineNumber":41,"author":{"gitId":"ramapriyan912001"},"content":"activate Model","lastModifiedDate":"2021-10-25"},{"lineNumber":42,"author":{"gitId":"ramapriyan912001"},"content":"Model --\u003e CalculatePaymentsCommand : group","lastModifiedDate":"2021-10-27"},{"lineNumber":43,"author":{"gitId":"ramapriyan912001"},"content":"deactivate Model","lastModifiedDate":"2021-10-27"},{"lineNumber":44,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":45,"author":{"gitId":"ramapriyan912001"},"content":"CalculatePaymentsCommand -\u003e CalculatePaymentsCommand : payments:getPayments(group)","lastModifiedDate":"2021-10-27"},{"lineNumber":46,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":47,"author":{"gitId":"ramapriyan912001"},"content":"CalculatePaymentsCommand -\u003e Model : setPayments(payments)","lastModifiedDate":"2021-10-27"},{"lineNumber":48,"author":{"gitId":"ramapriyan912001"},"content":"activate Model","lastModifiedDate":"2021-10-27"},{"lineNumber":49,"author":{"gitId":"ramapriyan912001"},"content":"Model --\u003e CalculatePaymentsCommand","lastModifiedDate":"2021-10-27"},{"lineNumber":50,"author":{"gitId":"ramapriyan912001"},"content":"deactivate Model","lastModifiedDate":"2021-10-25"},{"lineNumber":51,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":52,"author":{"gitId":"ramapriyan912001"},"content":"create CommandResult","lastModifiedDate":"2021-10-25"},{"lineNumber":53,"author":{"gitId":"ramapriyan912001"},"content":"CalculatePaymentsCommand -\u003e CommandResult","lastModifiedDate":"2021-10-27"},{"lineNumber":54,"author":{"gitId":"ramapriyan912001"},"content":"activate CommandResult","lastModifiedDate":"2021-10-25"},{"lineNumber":55,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":56,"author":{"gitId":"ramapriyan912001"},"content":"CommandResult --\u003e CalculatePaymentsCommand : result","lastModifiedDate":"2021-10-27"},{"lineNumber":57,"author":{"gitId":"ramapriyan912001"},"content":"deactivate CommandResult","lastModifiedDate":"2021-10-25"},{"lineNumber":58,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":59,"author":{"gitId":"ramapriyan912001"},"content":"CalculatePaymentsCommand --\u003e LogicManager : result","lastModifiedDate":"2021-10-27"},{"lineNumber":60,"author":{"gitId":"ramapriyan912001"},"content":"deactivate CalculatePaymentsCommand","lastModifiedDate":"2021-10-27"},{"lineNumber":61,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":62,"author":{"gitId":"ramapriyan912001"},"content":"[\u003c--LogicManager","lastModifiedDate":"2021-10-25"},{"lineNumber":63,"author":{"gitId":"ramapriyan912001"},"content":"deactivate LogicManager","lastModifiedDate":"2021-10-25"},{"lineNumber":64,"author":{"gitId":"ramapriyan912001"},"content":"@enduml","lastModifiedDate":"2021-10-25"}],"authorContributionMap":{"ramapriyan912001":64}},{"path":"docs/diagrams/CreateGroupActivityDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"chrus-chong"},"content":"@startuml","lastModifiedDate":"2021-10-21"},{"lineNumber":2,"author":{"gitId":"chrus-chong"},"content":"start","lastModifiedDate":"2021-10-21"},{"lineNumber":3,"author":{"gitId":"chrus-chong"},"content":":User executes command;","lastModifiedDate":"2021-10-21"},{"lineNumber":4,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":5,"author":{"gitId":"chrus-chong"},"content":"\u0027Since the beta syntax does not support placing the condition outside the","lastModifiedDate":"2021-10-21"},{"lineNumber":6,"author":{"gitId":"chrus-chong"},"content":"\u0027diamond we place it as the true branch instead.","lastModifiedDate":"2021-10-21"},{"lineNumber":7,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":8,"author":{"gitId":"chrus-chong"},"content":"if () then ([command is valid])","lastModifiedDate":"2021-10-21"},{"lineNumber":9,"author":{"gitId":"chrus-chong"},"content":"    :New Group created with relevant members and tags;","lastModifiedDate":"2021-10-21"},{"lineNumber":10,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":11,"author":{"gitId":"chrus-chong"},"content":"    if () then ([group not in model])","lastModifiedDate":"2021-10-21"},{"lineNumber":12,"author":{"gitId":"chrus-chong"},"content":"        :Add new group to model;","lastModifiedDate":"2021-10-21"},{"lineNumber":13,"author":{"gitId":"chrus-chong"},"content":"        :Update state of group members in contact list;","lastModifiedDate":"2021-10-21"},{"lineNumber":14,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":15,"author":{"gitId":"chrus-chong"},"content":"    else ([else])","lastModifiedDate":"2021-10-21"},{"lineNumber":16,"author":{"gitId":"chrus-chong"},"content":"    endif","lastModifiedDate":"2021-10-21"},{"lineNumber":17,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":18,"author":{"gitId":"chrus-chong"},"content":"else([else])","lastModifiedDate":"2021-10-21"},{"lineNumber":19,"author":{"gitId":"chrus-chong"},"content":"endif","lastModifiedDate":"2021-10-21"},{"lineNumber":20,"author":{"gitId":"chrus-chong"},"content":"stop","lastModifiedDate":"2021-10-21"},{"lineNumber":21,"author":{"gitId":"chrus-chong"},"content":"@enduml","lastModifiedDate":"2021-10-21"}],"authorContributionMap":{"chrus-chong":21}},{"path":"docs/diagrams/CreateGroupRef.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"chrus-chong"},"content":"@startuml","lastModifiedDate":"2021-10-26"},{"lineNumber":2,"author":{"gitId":"chrus-chong"},"content":"!include style.puml","lastModifiedDate":"2021-10-26"},{"lineNumber":3,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":4,"author":{"gitId":"chrus-chong"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2021-10-26"},{"lineNumber":5,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":6,"author":{"gitId":"chrus-chong"},"content":"participant \":AweParser\" as AweParser LOGIC_COLOR","lastModifiedDate":"2021-10-26"},{"lineNumber":7,"author":{"gitId":"chrus-chong"},"content":"participant \":CreateGroupCommandParser\" as CreateGroupCommandParser LOGIC_COLOR","lastModifiedDate":"2021-10-26"},{"lineNumber":8,"author":{"gitId":"chrus-chong"},"content":"participant \"createGroupCommand:CreateGroupCommand\" as CreateGroupCommand LOGIC_COLOR","lastModifiedDate":"2021-10-26"},{"lineNumber":9,"author":{"gitId":"chrus-chong"},"content":"end box","lastModifiedDate":"2021-10-26"},{"lineNumber":10,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":11,"author":{"gitId":"chrus-chong"},"content":"mainframe sd get createGroupCommand","lastModifiedDate":"2021-10-29"},{"lineNumber":12,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":13,"author":{"gitId":"chrus-chong"},"content":"create CreateGroupCommandParser","lastModifiedDate":"2021-10-26"},{"lineNumber":14,"author":{"gitId":"chrus-chong"},"content":"AweParser -\u003e CreateGroupCommandParser","lastModifiedDate":"2021-10-26"},{"lineNumber":15,"author":{"gitId":"chrus-chong"},"content":"activate CreateGroupCommandParser","lastModifiedDate":"2021-10-26"},{"lineNumber":16,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":17,"author":{"gitId":"chrus-chong"},"content":"CreateGroupCommandParser --\u003e AweParser","lastModifiedDate":"2021-10-26"},{"lineNumber":18,"author":{"gitId":"chrus-chong"},"content":"deactivate CreateGroupCommandParser","lastModifiedDate":"2021-10-26"},{"lineNumber":19,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":20,"author":{"gitId":"chrus-chong"},"content":"AweParser -\u003e CreateGroupCommandParser : parse(\"gn/Bali n/Tom\")","lastModifiedDate":"2021-10-29"},{"lineNumber":21,"author":{"gitId":"chrus-chong"},"content":"activate CreateGroupCommandParser","lastModifiedDate":"2021-10-26"},{"lineNumber":22,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":23,"author":{"gitId":"chrus-chong"},"content":"create CreateGroupCommand","lastModifiedDate":"2021-10-26"},{"lineNumber":24,"author":{"gitId":"chrus-chong"},"content":"CreateGroupCommandParser -\u003e CreateGroupCommand","lastModifiedDate":"2021-10-26"},{"lineNumber":25,"author":{"gitId":"chrus-chong"},"content":"activate CreateGroupCommand","lastModifiedDate":"2021-10-26"},{"lineNumber":26,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":27,"author":{"gitId":"chrus-chong"},"content":"CreateGroupCommand --\u003e CreateGroupCommandParser : createGroupCommand","lastModifiedDate":"2021-10-26"},{"lineNumber":28,"author":{"gitId":"chrus-chong"},"content":"deactivate CreateGroupCommand","lastModifiedDate":"2021-10-26"},{"lineNumber":29,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":30,"author":{"gitId":"chrus-chong"},"content":"CreateGroupCommandParser --\u003e AweParser : createGroupCommand","lastModifiedDate":"2021-10-26"},{"lineNumber":31,"author":{"gitId":"chrus-chong"},"content":"deactivate CreateGroupCommandParser","lastModifiedDate":"2021-10-26"},{"lineNumber":32,"author":{"gitId":"chrus-chong"},"content":"\u0027Hidden arrow to position the destroy marker below the end of the activation bar.","lastModifiedDate":"2021-10-26"},{"lineNumber":33,"author":{"gitId":"chrus-chong"},"content":"CreateGroupCommandParser -[hidden]-\u003e AweParser","lastModifiedDate":"2021-10-26"},{"lineNumber":34,"author":{"gitId":"chrus-chong"},"content":"destroy CreateGroupCommandParser","lastModifiedDate":"2021-10-26"},{"lineNumber":35,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":36,"author":{"gitId":"chrus-chong"},"content":"@enduml","lastModifiedDate":"2021-10-26"}],"authorContributionMap":{"chrus-chong":36}},{"path":"docs/diagrams/CreateGroupSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"chrus-chong"},"content":"@startuml","lastModifiedDate":"2021-10-21"},{"lineNumber":2,"author":{"gitId":"chrus-chong"},"content":"!include style.puml","lastModifiedDate":"2021-10-21"},{"lineNumber":3,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":4,"author":{"gitId":"chrus-chong"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2021-10-21"},{"lineNumber":5,"author":{"gitId":"chrus-chong"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2021-10-21"},{"lineNumber":6,"author":{"gitId":"marcuspeh"},"content":"participant \":AweParser\" as AweParser LOGIC_COLOR","lastModifiedDate":"2021-10-22"},{"lineNumber":7,"author":{"gitId":"chrus-chong"},"content":"participant \":CreateGroupCommand\" as CreateGroupCommand LOGIC_COLOR","lastModifiedDate":"2021-10-26"},{"lineNumber":8,"author":{"gitId":"chrus-chong"},"content":"participant \":CommandResult\" as CommandResult LOGIC_COLOR","lastModifiedDate":"2021-10-21"},{"lineNumber":9,"author":{"gitId":"chrus-chong"},"content":"end box","lastModifiedDate":"2021-10-21"},{"lineNumber":10,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":11,"author":{"gitId":"chrus-chong"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2021-10-21"},{"lineNumber":12,"author":{"gitId":"chrus-chong"},"content":"participant \":Model\" as Model MODEL_COLOR","lastModifiedDate":"2021-10-21"},{"lineNumber":13,"author":{"gitId":"chrus-chong"},"content":"end box","lastModifiedDate":"2021-10-21"},{"lineNumber":14,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":15,"author":{"gitId":"chrus-chong"},"content":"[-\u003e LogicManager : execute(\"creategroup gn/Bali n/Tom\")","lastModifiedDate":"2021-10-26"},{"lineNumber":16,"author":{"gitId":"chrus-chong"},"content":"activate LogicManager","lastModifiedDate":"2021-10-21"},{"lineNumber":17,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":18,"author":{"gitId":"chrus-chong"},"content":"LogicManager -\u003e AweParser : parseCommand(\"creategroup gn/Bali n/Tom\")","lastModifiedDate":"2021-10-26"},{"lineNumber":19,"author":{"gitId":"marcuspeh"},"content":"activate AweParser","lastModifiedDate":"2021-10-22"},{"lineNumber":20,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":21,"author":{"gitId":"chrus-chong"},"content":"/\u0027Clarify with tutor if there is a need to display CreateGroupCommandParser class within the ref\u0027/","lastModifiedDate":"2021-10-26"},{"lineNumber":22,"author":{"gitId":"chrus-chong"},"content":"note right","lastModifiedDate":"2021-10-29"},{"lineNumber":23,"author":{"gitId":"chrus-chong"},"content":"Refer to ref frame for","lastModifiedDate":"2021-10-29"},{"lineNumber":24,"author":{"gitId":"chrus-chong"},"content":"details on creation of","lastModifiedDate":"2021-10-29"},{"lineNumber":25,"author":{"gitId":"chrus-chong"},"content":"the CreateGroupCommand object","lastModifiedDate":"2021-10-29"},{"lineNumber":26,"author":{"gitId":"chrus-chong"},"content":"end note","lastModifiedDate":"2021-10-29"},{"lineNumber":27,"author":{"gitId":"chrus-chong"},"content":"group sd get createGroupCommand","lastModifiedDate":"2021-10-29"},{"lineNumber":28,"author":{"gitId":"chrus-chong"},"content":"create CreateGroupCommand","lastModifiedDate":"2021-10-21"},{"lineNumber":29,"author":{"gitId":"chrus-chong"},"content":"AweParser -\u003e CreateGroupCommand","lastModifiedDate":"2021-10-26"},{"lineNumber":30,"author":{"gitId":"chrus-chong"},"content":"activate CreateGroupCommand","lastModifiedDate":"2021-10-29"},{"lineNumber":31,"author":{"gitId":"chrus-chong"},"content":"CreateGroupCommand --\u003e AweParser","lastModifiedDate":"2021-10-29"},{"lineNumber":32,"author":{"gitId":"chrus-chong"},"content":"deactivate CreateGroupCommand","lastModifiedDate":"2021-10-29"},{"lineNumber":33,"author":{"gitId":"chrus-chong"},"content":"end group","lastModifiedDate":"2021-10-29"},{"lineNumber":34,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":35,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":36,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":37,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":38,"author":{"gitId":"marcuspeh"},"content":"AweParser --\u003e LogicManager : createGroupCommand","lastModifiedDate":"2021-10-22"},{"lineNumber":39,"author":{"gitId":"marcuspeh"},"content":"deactivate AweParser","lastModifiedDate":"2021-10-22"},{"lineNumber":40,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":41,"author":{"gitId":"chrus-chong"},"content":"LogicManager -\u003e CreateGroupCommand : execute()","lastModifiedDate":"2021-10-21"},{"lineNumber":42,"author":{"gitId":"chrus-chong"},"content":"activate CreateGroupCommand","lastModifiedDate":"2021-10-21"},{"lineNumber":43,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":44,"author":{"gitId":"chrus-chong"},"content":"CreateGroupCommand -\u003e Model : addGroup(g:Group)","lastModifiedDate":"2021-10-29"},{"lineNumber":45,"author":{"gitId":"chrus-chong"},"content":"activate Model","lastModifiedDate":"2021-10-21"},{"lineNumber":46,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":47,"author":{"gitId":"chrus-chong"},"content":"Model --\u003e CreateGroupCommand","lastModifiedDate":"2021-10-21"},{"lineNumber":48,"author":{"gitId":"chrus-chong"},"content":"deactivate Model","lastModifiedDate":"2021-10-21"},{"lineNumber":49,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":50,"author":{"gitId":"chrus-chong"},"content":"create CommandResult","lastModifiedDate":"2021-10-21"},{"lineNumber":51,"author":{"gitId":"chrus-chong"},"content":"CreateGroupCommand -\u003e CommandResult","lastModifiedDate":"2021-10-21"},{"lineNumber":52,"author":{"gitId":"chrus-chong"},"content":"activate CommandResult","lastModifiedDate":"2021-10-21"},{"lineNumber":53,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":54,"author":{"gitId":"chrus-chong"},"content":"CommandResult --\u003e CreateGroupCommand","lastModifiedDate":"2021-10-21"},{"lineNumber":55,"author":{"gitId":"chrus-chong"},"content":"deactivate CommandResult","lastModifiedDate":"2021-10-21"},{"lineNumber":56,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":57,"author":{"gitId":"chrus-chong"},"content":"CreateGroupCommand --\u003e LogicManager : result","lastModifiedDate":"2021-10-21"},{"lineNumber":58,"author":{"gitId":"chrus-chong"},"content":"deactivate CreateGroupCommand","lastModifiedDate":"2021-10-21"},{"lineNumber":59,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":60,"author":{"gitId":"chrus-chong"},"content":"[\u003c--LogicManager","lastModifiedDate":"2021-10-21"},{"lineNumber":61,"author":{"gitId":"chrus-chong"},"content":"deactivate LogicManager","lastModifiedDate":"2021-10-21"},{"lineNumber":62,"author":{"gitId":"chrus-chong"},"content":"@enduml","lastModifiedDate":"2021-10-21"}],"authorContributionMap":{"marcuspeh":4,"chrus-chong":58}},{"path":"docs/diagrams/DeleteExpenseActivityDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"ramapriyan912001"},"content":"@startuml","lastModifiedDate":"2021-10-27"},{"lineNumber":2,"author":{"gitId":"ramapriyan912001"},"content":"start","lastModifiedDate":"2021-10-27"},{"lineNumber":3,"author":{"gitId":"ramapriyan912001"},"content":":User executes command;","lastModifiedDate":"2021-10-27"},{"lineNumber":4,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":5,"author":{"gitId":"ramapriyan912001"},"content":"\u0027Since the beta syntax does not support placing the condition outside the","lastModifiedDate":"2021-10-27"},{"lineNumber":6,"author":{"gitId":"ramapriyan912001"},"content":"\u0027diamond we place it as the true branch instead.","lastModifiedDate":"2021-10-27"},{"lineNumber":7,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":8,"author":{"gitId":"ramapriyan912001"},"content":"if () then (user is currently viewing ExpensesPage)","lastModifiedDate":"2021-10-27"},{"lineNumber":9,"author":{"gitId":"ramapriyan912001"},"content":"    :Check List of Expenses;","lastModifiedDate":"2021-10-27"},{"lineNumber":10,"author":{"gitId":"ramapriyan912001"},"content":"    if () then ([INDEX in range [1, length of Expense List])","lastModifiedDate":"2021-10-27"},{"lineNumber":11,"author":{"gitId":"ramapriyan912001"},"content":"    :delete expense in position INDEX from list;","lastModifiedDate":"2021-10-27"},{"lineNumber":12,"author":{"gitId":"ramapriyan912001"},"content":"    else ([else])","lastModifiedDate":"2021-10-27"},{"lineNumber":13,"author":{"gitId":"ramapriyan912001"},"content":"    endif","lastModifiedDate":"2021-10-27"},{"lineNumber":14,"author":{"gitId":"ramapriyan912001"},"content":"else ([else])","lastModifiedDate":"2021-10-27"},{"lineNumber":15,"author":{"gitId":"ramapriyan912001"},"content":"endif","lastModifiedDate":"2021-10-27"},{"lineNumber":16,"author":{"gitId":"ramapriyan912001"},"content":"stop","lastModifiedDate":"2021-10-27"},{"lineNumber":17,"author":{"gitId":"ramapriyan912001"},"content":"@enduml","lastModifiedDate":"2021-10-27"}],"authorContributionMap":{"ramapriyan912001":17}},{"path":"docs/diagrams/DeleteExpenseRefSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"ramapriyan912001"},"content":"@startuml","lastModifiedDate":"2021-10-27"},{"lineNumber":2,"author":{"gitId":"ramapriyan912001"},"content":"!include style.puml","lastModifiedDate":"2021-10-27"},{"lineNumber":3,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":4,"author":{"gitId":"ramapriyan912001"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2021-10-27"},{"lineNumber":5,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":6,"author":{"gitId":"ramapriyan912001"},"content":"participant \":AweParser\" as AweParser LOGIC_COLOR","lastModifiedDate":"2021-10-27"},{"lineNumber":7,"author":{"gitId":"ramapriyan912001"},"content":"participant \":DeleteExpenseCommandParser\" as DeleteExpenseCommandParser LOGIC_COLOR","lastModifiedDate":"2021-10-27"},{"lineNumber":8,"author":{"gitId":"ramapriyan912001"},"content":"participant \"deleteExpenseCommand:DeleteExpenseCommand\" as DeleteExpenseCommand LOGIC_COLOR","lastModifiedDate":"2021-10-27"},{"lineNumber":9,"author":{"gitId":"ramapriyan912001"},"content":"end box","lastModifiedDate":"2021-10-27"},{"lineNumber":10,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":11,"author":{"gitId":"ramapriyan912001"},"content":"mainframe \"sd get deleteExpenseCommand\"","lastModifiedDate":"2021-10-27"},{"lineNumber":12,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":13,"author":{"gitId":"ramapriyan912001"},"content":"activate AweParser","lastModifiedDate":"2021-10-27"},{"lineNumber":14,"author":{"gitId":"ramapriyan912001"},"content":"create DeleteExpenseCommandParser","lastModifiedDate":"2021-10-27"},{"lineNumber":15,"author":{"gitId":"ramapriyan912001"},"content":"AweParser -\u003e DeleteExpenseCommandParser","lastModifiedDate":"2021-10-27"},{"lineNumber":16,"author":{"gitId":"ramapriyan912001"},"content":"activate DeleteExpenseCommandParser","lastModifiedDate":"2021-10-27"},{"lineNumber":17,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":18,"author":{"gitId":"ramapriyan912001"},"content":"DeleteExpenseCommandParser --\u003e AweParser","lastModifiedDate":"2021-10-27"},{"lineNumber":19,"author":{"gitId":"ramapriyan912001"},"content":"deactivate DeleteExpenseCommandParser","lastModifiedDate":"2021-10-27"},{"lineNumber":20,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":21,"author":{"gitId":"ramapriyan912001"},"content":"AweParser -\u003e DeleteExpenseCommandParser : parse(\"1\")","lastModifiedDate":"2021-10-27"},{"lineNumber":22,"author":{"gitId":"ramapriyan912001"},"content":"activate DeleteExpenseCommandParser","lastModifiedDate":"2021-10-27"},{"lineNumber":23,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":24,"author":{"gitId":"ramapriyan912001"},"content":"create DeleteExpenseCommand","lastModifiedDate":"2021-10-27"},{"lineNumber":25,"author":{"gitId":"ramapriyan912001"},"content":"DeleteExpenseCommandParser -\u003e DeleteExpenseCommand","lastModifiedDate":"2021-10-27"},{"lineNumber":26,"author":{"gitId":"ramapriyan912001"},"content":"activate DeleteExpenseCommand","lastModifiedDate":"2021-10-27"},{"lineNumber":27,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":28,"author":{"gitId":"ramapriyan912001"},"content":"DeleteExpenseCommand --\u003e DeleteExpenseCommandParser : deleteExpenseCommand","lastModifiedDate":"2021-10-27"},{"lineNumber":29,"author":{"gitId":"ramapriyan912001"},"content":"deactivate DeleteExpenseCommand","lastModifiedDate":"2021-10-27"},{"lineNumber":30,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":31,"author":{"gitId":"ramapriyan912001"},"content":"DeleteExpenseCommandParser --\u003e AweParser : deleteExpenseCommand","lastModifiedDate":"2021-10-27"},{"lineNumber":32,"author":{"gitId":"ramapriyan912001"},"content":"deactivate DeleteExpenseCommandParser","lastModifiedDate":"2021-10-27"},{"lineNumber":33,"author":{"gitId":"ramapriyan912001"},"content":"\u0027Hidden arrow to position the destroy marker below the end of the activation bar.","lastModifiedDate":"2021-10-27"},{"lineNumber":34,"author":{"gitId":"ramapriyan912001"},"content":"DeleteExpenseCommandParser -[hidden]-\u003e AweParser","lastModifiedDate":"2021-10-27"},{"lineNumber":35,"author":{"gitId":"ramapriyan912001"},"content":"destroy DeleteExpenseCommandParser","lastModifiedDate":"2021-10-27"},{"lineNumber":36,"author":{"gitId":"ramapriyan912001"},"content":"deactivate AweParser","lastModifiedDate":"2021-10-27"},{"lineNumber":37,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":38,"author":{"gitId":"ramapriyan912001"},"content":"@enduml","lastModifiedDate":"2021-10-27"}],"authorContributionMap":{"ramapriyan912001":38}},{"path":"docs/diagrams/DeleteExpenseSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"ramapriyan912001"},"content":"@startuml","lastModifiedDate":"2021-10-27"},{"lineNumber":2,"author":{"gitId":"ramapriyan912001"},"content":"!include style.puml","lastModifiedDate":"2021-10-27"},{"lineNumber":3,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":4,"author":{"gitId":"ramapriyan912001"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2021-10-27"},{"lineNumber":5,"author":{"gitId":"ramapriyan912001"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2021-10-27"},{"lineNumber":6,"author":{"gitId":"ramapriyan912001"},"content":"participant \":AweParser\" as AweParser LOGIC_COLOR","lastModifiedDate":"2021-10-27"},{"lineNumber":7,"author":{"gitId":"ramapriyan912001"},"content":"participant \":DeleteExpenseCommand\" as DeleteExpenseCommand LOGIC_COLOR","lastModifiedDate":"2021-10-27"},{"lineNumber":8,"author":{"gitId":"ramapriyan912001"},"content":"participant \":CommandResult\" as CommandResult LOGIC_COLOR","lastModifiedDate":"2021-10-27"},{"lineNumber":9,"author":{"gitId":"ramapriyan912001"},"content":"participant \":Group\" as Group LOGIC_COLOR","lastModifiedDate":"2021-10-27"},{"lineNumber":10,"author":{"gitId":"ramapriyan912001"},"content":"end box","lastModifiedDate":"2021-10-27"},{"lineNumber":11,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":12,"author":{"gitId":"ramapriyan912001"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2021-10-27"},{"lineNumber":13,"author":{"gitId":"ramapriyan912001"},"content":"participant \":Model\" as Model MODEL_COLOR","lastModifiedDate":"2021-10-27"},{"lineNumber":14,"author":{"gitId":"ramapriyan912001"},"content":"end box","lastModifiedDate":"2021-10-27"},{"lineNumber":15,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":16,"author":{"gitId":"ramapriyan912001"},"content":"[-\u003e LogicManager : execute(\"deleteexpense 1\")","lastModifiedDate":"2021-10-27"},{"lineNumber":17,"author":{"gitId":"ramapriyan912001"},"content":"activate LogicManager","lastModifiedDate":"2021-10-27"},{"lineNumber":18,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":19,"author":{"gitId":"ramapriyan912001"},"content":"LogicManager -\u003e AweParser : parseCommand(\"deleteexpense 1\")","lastModifiedDate":"2021-10-27"},{"lineNumber":20,"author":{"gitId":"ramapriyan912001"},"content":"activate AweParser","lastModifiedDate":"2021-10-27"},{"lineNumber":21,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":22,"author":{"gitId":"ramapriyan912001"},"content":"note right","lastModifiedDate":"2021-10-29"},{"lineNumber":23,"author":{"gitId":"ramapriyan912001"},"content":"Refer to ref frame for","lastModifiedDate":"2021-10-29"},{"lineNumber":24,"author":{"gitId":"ramapriyan912001"},"content":"details on creation of","lastModifiedDate":"2021-10-29"},{"lineNumber":25,"author":{"gitId":"ramapriyan912001"},"content":"the DeleteExpenseCommand object","lastModifiedDate":"2021-10-29"},{"lineNumber":26,"author":{"gitId":"ramapriyan912001"},"content":"end note","lastModifiedDate":"2021-10-29"},{"lineNumber":27,"author":{"gitId":"ramapriyan912001"},"content":"group sd get deleteExpenseCommand","lastModifiedDate":"2021-10-29"},{"lineNumber":28,"author":{"gitId":"ramapriyan912001"},"content":"create DeleteExpenseCommand","lastModifiedDate":"2021-10-27"},{"lineNumber":29,"author":{"gitId":"ramapriyan912001"},"content":"AweParser -\u003e DeleteExpenseCommand","lastModifiedDate":"2021-10-27"},{"lineNumber":30,"author":{"gitId":"ramapriyan912001"},"content":"activate DeleteExpenseCommand","lastModifiedDate":"2021-10-29"},{"lineNumber":31,"author":{"gitId":"ramapriyan912001"},"content":"DeleteExpenseCommand --\u003e AweParser","lastModifiedDate":"2021-10-29"},{"lineNumber":32,"author":{"gitId":"ramapriyan912001"},"content":"deactivate DeleteExpenseCommand","lastModifiedDate":"2021-10-29"},{"lineNumber":33,"author":{"gitId":"ramapriyan912001"},"content":"end group","lastModifiedDate":"2021-10-29"},{"lineNumber":34,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":35,"author":{"gitId":"ramapriyan912001"},"content":"AweParser --\u003e LogicManager : deleteExpenseCommand","lastModifiedDate":"2021-10-27"},{"lineNumber":36,"author":{"gitId":"ramapriyan912001"},"content":"deactivate AweParser","lastModifiedDate":"2021-10-27"},{"lineNumber":37,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":38,"author":{"gitId":"ramapriyan912001"},"content":"LogicManager -\u003e DeleteExpenseCommand : execute()","lastModifiedDate":"2021-10-27"},{"lineNumber":39,"author":{"gitId":"ramapriyan912001"},"content":"activate DeleteExpenseCommand","lastModifiedDate":"2021-10-27"},{"lineNumber":40,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":41,"author":{"gitId":"ramapriyan912001"},"content":"DeleteExpenseCommand -\u003e Model : getExpense(int index)","lastModifiedDate":"2021-10-27"},{"lineNumber":42,"author":{"gitId":"ramapriyan912001"},"content":"activate Model","lastModifiedDate":"2021-10-27"},{"lineNumber":43,"author":{"gitId":"ramapriyan912001"},"content":"Model --\u003e DeleteExpenseCommand : Expense expense","lastModifiedDate":"2021-10-27"},{"lineNumber":44,"author":{"gitId":"ramapriyan912001"},"content":"deactivate Model","lastModifiedDate":"2021-10-27"},{"lineNumber":45,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":46,"author":{"gitId":"ramapriyan912001"},"content":"DeleteExpenseCommand -\u003e Model : getActiveGroupFromAddressBook()","lastModifiedDate":"2021-10-27"},{"lineNumber":47,"author":{"gitId":"ramapriyan912001"},"content":"activate Model","lastModifiedDate":"2021-10-27"},{"lineNumber":48,"author":{"gitId":"ramapriyan912001"},"content":"Model --\u003e DeleteExpenseCommand : Group group","lastModifiedDate":"2021-10-27"},{"lineNumber":49,"author":{"gitId":"ramapriyan912001"},"content":"deactivate Model","lastModifiedDate":"2021-10-27"},{"lineNumber":50,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":51,"author":{"gitId":"ramapriyan912001"},"content":"DeleteExpenseCommand -\u003e Group : deleteExpense(expense)","lastModifiedDate":"2021-10-27"},{"lineNumber":52,"author":{"gitId":"ramapriyan912001"},"content":"activate Group","lastModifiedDate":"2021-10-27"},{"lineNumber":53,"author":{"gitId":"ramapriyan912001"},"content":"Group -\u003e DeleteExpenseCommand : Group newGroup","lastModifiedDate":"2021-10-27"},{"lineNumber":54,"author":{"gitId":"ramapriyan912001"},"content":"deactivate Group","lastModifiedDate":"2021-10-27"},{"lineNumber":55,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":56,"author":{"gitId":"ramapriyan912001"},"content":"DeleteExpenseCommand -\u003e Model : setGroup(group, newGroup)","lastModifiedDate":"2021-10-27"},{"lineNumber":57,"author":{"gitId":"ramapriyan912001"},"content":"activate Model","lastModifiedDate":"2021-10-27"},{"lineNumber":58,"author":{"gitId":"ramapriyan912001"},"content":"Model --\u003e DeleteExpenseCommand","lastModifiedDate":"2021-10-27"},{"lineNumber":59,"author":{"gitId":"ramapriyan912001"},"content":"deactivate Model","lastModifiedDate":"2021-10-27"},{"lineNumber":60,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":61,"author":{"gitId":"ramapriyan912001"},"content":"create CommandResult","lastModifiedDate":"2021-10-27"},{"lineNumber":62,"author":{"gitId":"ramapriyan912001"},"content":"DeleteExpenseCommand -\u003e CommandResult","lastModifiedDate":"2021-10-27"},{"lineNumber":63,"author":{"gitId":"ramapriyan912001"},"content":"activate CommandResult","lastModifiedDate":"2021-10-27"},{"lineNumber":64,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":65,"author":{"gitId":"ramapriyan912001"},"content":"CommandResult --\u003e DeleteExpenseCommand : result","lastModifiedDate":"2021-10-27"},{"lineNumber":66,"author":{"gitId":"ramapriyan912001"},"content":"deactivate CommandResult","lastModifiedDate":"2021-10-27"},{"lineNumber":67,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":68,"author":{"gitId":"ramapriyan912001"},"content":"DeleteExpenseCommand --\u003e LogicManager : result","lastModifiedDate":"2021-10-27"},{"lineNumber":69,"author":{"gitId":"ramapriyan912001"},"content":"deactivate DeleteExpenseCommand","lastModifiedDate":"2021-10-27"},{"lineNumber":70,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":71,"author":{"gitId":"ramapriyan912001"},"content":"[\u003c--LogicManager","lastModifiedDate":"2021-10-27"},{"lineNumber":72,"author":{"gitId":"ramapriyan912001"},"content":"deactivate LogicManager","lastModifiedDate":"2021-10-27"},{"lineNumber":73,"author":{"gitId":"ramapriyan912001"},"content":"@enduml","lastModifiedDate":"2021-10-27"}],"authorContributionMap":{"ramapriyan912001":73}},{"path":"docs/diagrams/DeleteGroupActivityDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"ramapriyan912001"},"content":"@startuml","lastModifiedDate":"2021-10-21"},{"lineNumber":2,"author":{"gitId":"ramapriyan912001"},"content":"start","lastModifiedDate":"2021-10-21"},{"lineNumber":3,"author":{"gitId":"ramapriyan912001"},"content":":User executes command;","lastModifiedDate":"2021-10-21"},{"lineNumber":4,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":5,"author":{"gitId":"ramapriyan912001"},"content":"\u0027Since the beta syntax does not support placing the condition outside the","lastModifiedDate":"2021-10-21"},{"lineNumber":6,"author":{"gitId":"ramapriyan912001"},"content":"\u0027diamond we place it as the true branch instead.","lastModifiedDate":"2021-10-21"},{"lineNumber":7,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":8,"author":{"gitId":"ramapriyan912001"},"content":"if () then ([model contains Group (based on GroupName)])","lastModifiedDate":"2021-10-21"},{"lineNumber":9,"author":{"gitId":"ramapriyan912001"},"content":"    :Retrieve Group from model;","lastModifiedDate":"2021-10-21"},{"lineNumber":10,"author":{"gitId":"ramapriyan912001"},"content":"    :Remove Group from model;","lastModifiedDate":"2021-10-21"},{"lineNumber":11,"author":{"gitId":"ramapriyan912001"},"content":"else ([else])","lastModifiedDate":"2021-10-21"},{"lineNumber":12,"author":{"gitId":"ramapriyan912001"},"content":"endif","lastModifiedDate":"2021-10-21"},{"lineNumber":13,"author":{"gitId":"ramapriyan912001"},"content":"stop","lastModifiedDate":"2021-10-21"},{"lineNumber":14,"author":{"gitId":"ramapriyan912001"},"content":"@enduml","lastModifiedDate":"2021-10-21"}],"authorContributionMap":{"ramapriyan912001":14}},{"path":"docs/diagrams/DeleteGroupRefSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"ramapriyan912001"},"content":"@startuml","lastModifiedDate":"2021-10-27"},{"lineNumber":2,"author":{"gitId":"ramapriyan912001"},"content":"!include style.puml","lastModifiedDate":"2021-10-27"},{"lineNumber":3,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":4,"author":{"gitId":"ramapriyan912001"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2021-10-27"},{"lineNumber":5,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":6,"author":{"gitId":"ramapriyan912001"},"content":"participant \":AweParser\" as AweParser LOGIC_COLOR","lastModifiedDate":"2021-10-27"},{"lineNumber":7,"author":{"gitId":"ramapriyan912001"},"content":"participant \":DeleteGroupCommandParser\" as DeleteGroupCommandParser LOGIC_COLOR","lastModifiedDate":"2021-10-27"},{"lineNumber":8,"author":{"gitId":"ramapriyan912001"},"content":"participant \"deleteGroupCommand:DeleteGroupCommand\" as DeleteGroupCommand LOGIC_COLOR","lastModifiedDate":"2021-10-27"},{"lineNumber":9,"author":{"gitId":"ramapriyan912001"},"content":"end box","lastModifiedDate":"2021-10-27"},{"lineNumber":10,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":11,"author":{"gitId":"ramapriyan912001"},"content":"mainframe \"sd get deleteGroupCommand\"","lastModifiedDate":"2021-10-27"},{"lineNumber":12,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":13,"author":{"gitId":"ramapriyan912001"},"content":"activate AweParser","lastModifiedDate":"2021-10-27"},{"lineNumber":14,"author":{"gitId":"ramapriyan912001"},"content":"create DeleteGroupCommandParser","lastModifiedDate":"2021-10-27"},{"lineNumber":15,"author":{"gitId":"ramapriyan912001"},"content":"AweParser -\u003e DeleteGroupCommandParser","lastModifiedDate":"2021-10-27"},{"lineNumber":16,"author":{"gitId":"ramapriyan912001"},"content":"activate DeleteGroupCommandParser","lastModifiedDate":"2021-10-27"},{"lineNumber":17,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":18,"author":{"gitId":"ramapriyan912001"},"content":"DeleteGroupCommandParser --\u003e AweParser","lastModifiedDate":"2021-10-27"},{"lineNumber":19,"author":{"gitId":"ramapriyan912001"},"content":"deactivate DeleteGroupCommandParser","lastModifiedDate":"2021-10-27"},{"lineNumber":20,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":21,"author":{"gitId":"ramapriyan912001"},"content":"AweParser -\u003e DeleteGroupCommandParser : parse(\"gn/Bali\")","lastModifiedDate":"2021-10-27"},{"lineNumber":22,"author":{"gitId":"ramapriyan912001"},"content":"activate DeleteGroupCommandParser","lastModifiedDate":"2021-10-27"},{"lineNumber":23,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":24,"author":{"gitId":"ramapriyan912001"},"content":"create DeleteGroupCommand","lastModifiedDate":"2021-10-27"},{"lineNumber":25,"author":{"gitId":"ramapriyan912001"},"content":"DeleteGroupCommandParser -\u003e DeleteGroupCommand","lastModifiedDate":"2021-10-27"},{"lineNumber":26,"author":{"gitId":"ramapriyan912001"},"content":"activate DeleteGroupCommand","lastModifiedDate":"2021-10-27"},{"lineNumber":27,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":28,"author":{"gitId":"ramapriyan912001"},"content":"DeleteGroupCommand --\u003e DeleteGroupCommandParser : deleteGroupCommand","lastModifiedDate":"2021-10-27"},{"lineNumber":29,"author":{"gitId":"ramapriyan912001"},"content":"deactivate DeleteGroupCommand","lastModifiedDate":"2021-10-27"},{"lineNumber":30,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":31,"author":{"gitId":"ramapriyan912001"},"content":"DeleteGroupCommandParser --\u003e AweParser : deleteGroupCommand","lastModifiedDate":"2021-10-27"},{"lineNumber":32,"author":{"gitId":"ramapriyan912001"},"content":"deactivate DeleteGroupCommandParser","lastModifiedDate":"2021-10-27"},{"lineNumber":33,"author":{"gitId":"ramapriyan912001"},"content":"\u0027Hidden arrow to position the destroy marker below the end of the activation bar.","lastModifiedDate":"2021-10-27"},{"lineNumber":34,"author":{"gitId":"ramapriyan912001"},"content":"DeleteGroupCommandParser -[hidden]-\u003e AweParser","lastModifiedDate":"2021-10-27"},{"lineNumber":35,"author":{"gitId":"ramapriyan912001"},"content":"destroy DeleteGroupCommandParser","lastModifiedDate":"2021-10-27"},{"lineNumber":36,"author":{"gitId":"ramapriyan912001"},"content":"deactivate AweParser","lastModifiedDate":"2021-10-27"},{"lineNumber":37,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":38,"author":{"gitId":"ramapriyan912001"},"content":"@enduml","lastModifiedDate":"2021-10-27"}],"authorContributionMap":{"ramapriyan912001":38}},{"path":"docs/diagrams/DeleteGroupSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"ramapriyan912001"},"content":"@startuml","lastModifiedDate":"2021-10-20"},{"lineNumber":2,"author":{"gitId":"ramapriyan912001"},"content":"!include style.puml","lastModifiedDate":"2021-10-20"},{"lineNumber":3,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":4,"author":{"gitId":"ramapriyan912001"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2021-10-20"},{"lineNumber":5,"author":{"gitId":"ramapriyan912001"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2021-10-20"},{"lineNumber":6,"author":{"gitId":"marcuspeh"},"content":"participant \":AweParser\" as AweParser LOGIC_COLOR","lastModifiedDate":"2021-10-22"},{"lineNumber":7,"author":{"gitId":"ramapriyan912001"},"content":"participant \":DeleteGroupCommand\" as DeleteGroupCommand LOGIC_COLOR","lastModifiedDate":"2021-10-27"},{"lineNumber":8,"author":{"gitId":"ramapriyan912001"},"content":"participant \":CommandResult\" as CommandResult LOGIC_COLOR","lastModifiedDate":"2021-10-20"},{"lineNumber":9,"author":{"gitId":"ramapriyan912001"},"content":"end box","lastModifiedDate":"2021-10-20"},{"lineNumber":10,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":11,"author":{"gitId":"ramapriyan912001"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2021-10-20"},{"lineNumber":12,"author":{"gitId":"ramapriyan912001"},"content":"participant \":Model\" as Model MODEL_COLOR","lastModifiedDate":"2021-10-20"},{"lineNumber":13,"author":{"gitId":"ramapriyan912001"},"content":"end box","lastModifiedDate":"2021-10-20"},{"lineNumber":14,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":15,"author":{"gitId":"ramapriyan912001"},"content":"[-\u003e LogicManager : execute(\"deletegroup gn/Bali\")","lastModifiedDate":"2021-10-27"},{"lineNumber":16,"author":{"gitId":"ramapriyan912001"},"content":"activate LogicManager","lastModifiedDate":"2021-10-20"},{"lineNumber":17,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":18,"author":{"gitId":"ramapriyan912001"},"content":"LogicManager -\u003e AweParser : parseCommand(\"deletegroup gn/Bali\")","lastModifiedDate":"2021-10-27"},{"lineNumber":19,"author":{"gitId":"marcuspeh"},"content":"activate AweParser","lastModifiedDate":"2021-10-22"},{"lineNumber":20,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":21,"author":{"gitId":"ramapriyan912001"},"content":"note right","lastModifiedDate":"2021-10-29"},{"lineNumber":22,"author":{"gitId":"ramapriyan912001"},"content":"Refer to ref frame for","lastModifiedDate":"2021-10-29"},{"lineNumber":23,"author":{"gitId":"ramapriyan912001"},"content":"details on creation of","lastModifiedDate":"2021-10-29"},{"lineNumber":24,"author":{"gitId":"ramapriyan912001"},"content":"the DeleteGroupCommand object","lastModifiedDate":"2021-10-29"},{"lineNumber":25,"author":{"gitId":"ramapriyan912001"},"content":"end note","lastModifiedDate":"2021-10-29"},{"lineNumber":26,"author":{"gitId":"ramapriyan912001"},"content":"group sd get deleteGroupCommand","lastModifiedDate":"2021-10-29"},{"lineNumber":27,"author":{"gitId":"ramapriyan912001"},"content":"create DeleteGroupCommand","lastModifiedDate":"2021-10-20"},{"lineNumber":28,"author":{"gitId":"ramapriyan912001"},"content":"AweParser -\u003e DeleteGroupCommand","lastModifiedDate":"2021-10-27"},{"lineNumber":29,"author":{"gitId":"ramapriyan912001"},"content":"activate DeleteGroupCommand","lastModifiedDate":"2021-10-29"},{"lineNumber":30,"author":{"gitId":"ramapriyan912001"},"content":"DeleteGroupCommand --\u003e AweParser","lastModifiedDate":"2021-10-29"},{"lineNumber":31,"author":{"gitId":"ramapriyan912001"},"content":"deactivate DeleteGroupCommand","lastModifiedDate":"2021-10-29"},{"lineNumber":32,"author":{"gitId":"ramapriyan912001"},"content":"end group","lastModifiedDate":"2021-10-29"},{"lineNumber":33,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":34,"author":{"gitId":"ramapriyan912001"},"content":"AweParser --\u003e LogicManager : deleteGroupCommand","lastModifiedDate":"2021-10-27"},{"lineNumber":35,"author":{"gitId":"marcuspeh"},"content":"deactivate AweParser","lastModifiedDate":"2021-10-22"},{"lineNumber":36,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":37,"author":{"gitId":"ramapriyan912001"},"content":"LogicManager -\u003e DeleteGroupCommand : execute()","lastModifiedDate":"2021-10-20"},{"lineNumber":38,"author":{"gitId":"ramapriyan912001"},"content":"activate DeleteGroupCommand","lastModifiedDate":"2021-10-20"},{"lineNumber":39,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":40,"author":{"gitId":"ramapriyan912001"},"content":"DeleteGroupCommand -\u003e Model : getGroupByName(new GroupName(\"Bali\"))","lastModifiedDate":"2021-10-27"},{"lineNumber":41,"author":{"gitId":"ramapriyan912001"},"content":"activate Model","lastModifiedDate":"2021-10-20"},{"lineNumber":42,"author":{"gitId":"ramapriyan912001"},"content":"Model -\u003e DeleteGroupCommand : group","lastModifiedDate":"2021-10-27"},{"lineNumber":43,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":44,"author":{"gitId":"ramapriyan912001"},"content":"deactivate Model","lastModifiedDate":"2021-10-20"},{"lineNumber":45,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":46,"author":{"gitId":"ramapriyan912001"},"content":"DeleteGroupCommand -\u003e Model : deleteGroup(group)","lastModifiedDate":"2021-10-27"},{"lineNumber":47,"author":{"gitId":"ramapriyan912001"},"content":"activate Model","lastModifiedDate":"2021-10-27"},{"lineNumber":48,"author":{"gitId":"ramapriyan912001"},"content":"Model --\u003e DeleteGroupCommand","lastModifiedDate":"2021-10-27"},{"lineNumber":49,"author":{"gitId":"ramapriyan912001"},"content":"deactivate Model","lastModifiedDate":"2021-10-27"},{"lineNumber":50,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":51,"author":{"gitId":"ramapriyan912001"},"content":"create CommandResult","lastModifiedDate":"2021-10-20"},{"lineNumber":52,"author":{"gitId":"ramapriyan912001"},"content":"DeleteGroupCommand -\u003e CommandResult","lastModifiedDate":"2021-10-27"},{"lineNumber":53,"author":{"gitId":"ramapriyan912001"},"content":"activate CommandResult","lastModifiedDate":"2021-10-20"},{"lineNumber":54,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":55,"author":{"gitId":"ramapriyan912001"},"content":"CommandResult --\u003e DeleteGroupCommand : result","lastModifiedDate":"2021-10-27"},{"lineNumber":56,"author":{"gitId":"ramapriyan912001"},"content":"deactivate CommandResult","lastModifiedDate":"2021-10-20"},{"lineNumber":57,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":58,"author":{"gitId":"ramapriyan912001"},"content":"DeleteGroupCommand --\u003e LogicManager : result","lastModifiedDate":"2021-10-20"},{"lineNumber":59,"author":{"gitId":"ramapriyan912001"},"content":"deactivate DeleteGroupCommand","lastModifiedDate":"2021-10-20"},{"lineNumber":60,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":61,"author":{"gitId":"ramapriyan912001"},"content":"[\u003c--LogicManager","lastModifiedDate":"2021-10-20"},{"lineNumber":62,"author":{"gitId":"ramapriyan912001"},"content":"deactivate LogicManager","lastModifiedDate":"2021-10-20"},{"lineNumber":63,"author":{"gitId":"ramapriyan912001"},"content":"@enduml","lastModifiedDate":"2021-10-20"}],"authorContributionMap":{"marcuspeh":3,"ramapriyan912001":60}},{"path":"docs/diagrams/DeleteSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"marcuspeh"},"content":"participant \":AweParser\" as AweParser LOGIC_COLOR","lastModifiedDate":"2021-10-22"},{"lineNumber":7,"author":{"gitId":"-"},"content":"participant \":DeleteCommandParser\" as DeleteCommandParser LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"participant \"d:DeleteCommand\" as DeleteCommand LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"participant \":CommandResult\" as CommandResult LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"end box","lastModifiedDate":"2019-07-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"participant \":Model\" as Model MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"end box","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"marcuspeh"},"content":"[-\u003e LogicManager : execute(\"deletecontact 1\")","lastModifiedDate":"2021-10-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"activate LogicManager","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":19,"author":{"gitId":"marcuspeh"},"content":"LogicManager -\u003e AweParser : parseCommand(\"deletecontact 1\")","lastModifiedDate":"2021-10-22"},{"lineNumber":20,"author":{"gitId":"marcuspeh"},"content":"activate AweParser","lastModifiedDate":"2021-10-22"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"create DeleteCommandParser","lastModifiedDate":"2019-07-03"},{"lineNumber":23,"author":{"gitId":"marcuspeh"},"content":"AweParser -\u003e DeleteCommandParser","lastModifiedDate":"2021-10-22"},{"lineNumber":24,"author":{"gitId":"-"},"content":"activate DeleteCommandParser","lastModifiedDate":"2019-07-03"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":26,"author":{"gitId":"marcuspeh"},"content":"DeleteCommandParser --\u003e AweParser","lastModifiedDate":"2021-10-22"},{"lineNumber":27,"author":{"gitId":"-"},"content":"deactivate DeleteCommandParser","lastModifiedDate":"2019-07-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":29,"author":{"gitId":"marcuspeh"},"content":"AweParser -\u003e DeleteCommandParser : parse(\"1\")","lastModifiedDate":"2021-10-22"},{"lineNumber":30,"author":{"gitId":"-"},"content":"activate DeleteCommandParser","lastModifiedDate":"2019-07-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"create DeleteCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"DeleteCommandParser -\u003e DeleteCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"activate DeleteCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":36,"author":{"gitId":"-"},"content":"DeleteCommand --\u003e DeleteCommandParser : d","lastModifiedDate":"2019-07-03"},{"lineNumber":37,"author":{"gitId":"-"},"content":"deactivate DeleteCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":39,"author":{"gitId":"marcuspeh"},"content":"DeleteCommandParser --\u003e AweParser : d","lastModifiedDate":"2021-10-22"},{"lineNumber":40,"author":{"gitId":"-"},"content":"deactivate DeleteCommandParser","lastModifiedDate":"2019-07-03"},{"lineNumber":41,"author":{"gitId":"-"},"content":"\u0027Hidden arrow to position the destroy marker below the end of the activation bar.","lastModifiedDate":"2019-07-03"},{"lineNumber":42,"author":{"gitId":"marcuspeh"},"content":"DeleteCommandParser -[hidden]-\u003e AweParser","lastModifiedDate":"2021-10-22"},{"lineNumber":43,"author":{"gitId":"-"},"content":"destroy DeleteCommandParser","lastModifiedDate":"2019-07-03"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":45,"author":{"gitId":"marcuspeh"},"content":"AweParser --\u003e LogicManager : d","lastModifiedDate":"2021-10-22"},{"lineNumber":46,"author":{"gitId":"marcuspeh"},"content":"deactivate AweParser","lastModifiedDate":"2021-10-22"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":48,"author":{"gitId":"-"},"content":"LogicManager -\u003e DeleteCommand : execute()","lastModifiedDate":"2019-07-03"},{"lineNumber":49,"author":{"gitId":"-"},"content":"activate DeleteCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":51,"author":{"gitId":"-"},"content":"DeleteCommand -\u003e Model : deletePerson(1)","lastModifiedDate":"2019-07-03"},{"lineNumber":52,"author":{"gitId":"-"},"content":"activate Model","lastModifiedDate":"2019-07-03"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":54,"author":{"gitId":"-"},"content":"Model --\u003e DeleteCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":55,"author":{"gitId":"-"},"content":"deactivate Model","lastModifiedDate":"2019-07-03"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":57,"author":{"gitId":"-"},"content":"create CommandResult","lastModifiedDate":"2019-07-03"},{"lineNumber":58,"author":{"gitId":"-"},"content":"DeleteCommand -\u003e CommandResult","lastModifiedDate":"2019-07-03"},{"lineNumber":59,"author":{"gitId":"-"},"content":"activate CommandResult","lastModifiedDate":"2019-07-03"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":61,"author":{"gitId":"-"},"content":"CommandResult --\u003e DeleteCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":62,"author":{"gitId":"-"},"content":"deactivate CommandResult","lastModifiedDate":"2019-07-03"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":64,"author":{"gitId":"-"},"content":"DeleteCommand --\u003e LogicManager : result","lastModifiedDate":"2019-07-03"},{"lineNumber":65,"author":{"gitId":"-"},"content":"deactivate DeleteCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":67,"author":{"gitId":"-"},"content":"[\u003c--LogicManager","lastModifiedDate":"2019-07-03"},{"lineNumber":68,"author":{"gitId":"-"},"content":"deactivate LogicManager","lastModifiedDate":"2019-07-03"},{"lineNumber":69,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"marcuspeh":11,"-":58}},{"path":"docs/diagrams/ExpenseClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"marcuspeh"},"content":"@startuml","lastModifiedDate":"2021-10-21"},{"lineNumber":2,"author":{"gitId":"marcuspeh"},"content":"!include style.puml","lastModifiedDate":"2021-10-21"},{"lineNumber":3,"author":{"gitId":"marcuspeh"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2021-10-21"},{"lineNumber":4,"author":{"gitId":"marcuspeh"},"content":"skinparam arrowColor MODEL_COLOR","lastModifiedDate":"2021-10-21"},{"lineNumber":5,"author":{"gitId":"marcuspeh"},"content":"skinparam classBackgroundColor MODEL_COLOR","lastModifiedDate":"2021-10-21"},{"lineNumber":6,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":7,"author":{"gitId":"marcuspeh"},"content":"Package Expense \u003c\u003cRectangle\u003e\u003e{","lastModifiedDate":"2021-10-21"},{"lineNumber":8,"author":{"gitId":"marcuspeh"},"content":"    Class Expense","lastModifiedDate":"2021-10-21"},{"lineNumber":9,"author":{"gitId":"marcuspeh"},"content":"    Class Cost","lastModifiedDate":"2021-10-21"},{"lineNumber":10,"author":{"gitId":"marcuspeh"},"content":"    Class Description","lastModifiedDate":"2021-10-21"},{"lineNumber":11,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":12,"author":{"gitId":"marcuspeh"},"content":"}","lastModifiedDate":"2021-10-21"},{"lineNumber":13,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":14,"author":{"gitId":"marcuspeh"},"content":"Package Person \u003c\u003cRectangle\u003e\u003e{","lastModifiedDate":"2021-10-21"},{"lineNumber":15,"author":{"gitId":"marcuspeh"},"content":"}","lastModifiedDate":"2021-10-21"},{"lineNumber":16,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":17,"author":{"gitId":"marcuspeh"},"content":"Class HiddenOutside #FFFFFF","lastModifiedDate":"2021-10-21"},{"lineNumber":18,"author":{"gitId":"marcuspeh"},"content":"HiddenOutside --\u003e Expense","lastModifiedDate":"2021-10-21"},{"lineNumber":19,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":20,"author":{"gitId":"marcuspeh"},"content":"Expense *--\u003e Cost","lastModifiedDate":"2021-10-21"},{"lineNumber":21,"author":{"gitId":"marcuspeh"},"content":"Expense *--\u003e Description","lastModifiedDate":"2021-10-21"},{"lineNumber":22,"author":{"gitId":"marcuspeh"},"content":"Expense -right-\u003e \"1 payer\" Person","lastModifiedDate":"2021-10-21"},{"lineNumber":23,"author":{"gitId":"marcuspeh"},"content":"Expense --\u003e \"1..* involved\" Person","lastModifiedDate":"2021-10-21"},{"lineNumber":24,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":25,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":26,"author":{"gitId":"marcuspeh"},"content":"@enduml","lastModifiedDate":"2021-10-21"}],"authorContributionMap":{"marcuspeh":26}},{"path":"docs/diagrams/FindExpensesActivityDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"Jingwencloud"},"content":"@startuml","lastModifiedDate":"2021-10-21"},{"lineNumber":2,"author":{"gitId":"Jingwencloud"},"content":"start","lastModifiedDate":"2021-10-21"},{"lineNumber":3,"author":{"gitId":"Jingwencloud"},"content":":User executes command;","lastModifiedDate":"2021-10-21"},{"lineNumber":4,"author":{"gitId":"Jingwencloud"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":5,"author":{"gitId":"Jingwencloud"},"content":"\u0027Since the beta syntax does not support placing the condition outside the","lastModifiedDate":"2021-10-21"},{"lineNumber":6,"author":{"gitId":"Jingwencloud"},"content":"\u0027diamond we place it as the true branch instead.","lastModifiedDate":"2021-10-21"},{"lineNumber":7,"author":{"gitId":"Jingwencloud"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":8,"author":{"gitId":"Jingwencloud"},"content":"if () then ([command is valid])","lastModifiedDate":"2021-10-21"},{"lineNumber":9,"author":{"gitId":"Jingwencloud"},"content":"    :Expenses of the specified group is listed;","lastModifiedDate":"2021-10-21"},{"lineNumber":10,"author":{"gitId":"Jingwencloud"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":11,"author":{"gitId":"Jingwencloud"},"content":"else([else])","lastModifiedDate":"2021-10-21"},{"lineNumber":12,"author":{"gitId":"Jingwencloud"},"content":"endif","lastModifiedDate":"2021-10-21"},{"lineNumber":13,"author":{"gitId":"Jingwencloud"},"content":"stop","lastModifiedDate":"2021-10-21"},{"lineNumber":14,"author":{"gitId":"Jingwencloud"},"content":"@enduml","lastModifiedDate":"2021-10-21"}],"authorContributionMap":{"Jingwencloud":14}},{"path":"docs/diagrams/FindExpensesSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"Jingwencloud"},"content":"@startuml","lastModifiedDate":"2021-10-21"},{"lineNumber":2,"author":{"gitId":"Jingwencloud"},"content":"!include style.puml","lastModifiedDate":"2021-10-21"},{"lineNumber":3,"author":{"gitId":"Jingwencloud"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":4,"author":{"gitId":"Jingwencloud"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2021-10-21"},{"lineNumber":5,"author":{"gitId":"Jingwencloud"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2021-10-21"},{"lineNumber":6,"author":{"gitId":"marcuspeh"},"content":"participant \":AweParser\" as AweParser LOGIC_COLOR","lastModifiedDate":"2021-10-22"},{"lineNumber":7,"author":{"gitId":"Jingwencloud"},"content":"participant \":FindExpensesCommandParser\" as FindExpensesCommandParser LOGIC_COLOR","lastModifiedDate":"2021-10-21"},{"lineNumber":8,"author":{"gitId":"Jingwencloud"},"content":"participant \"d:FindExpensesCommand\" as FindExpensesCommand LOGIC_COLOR","lastModifiedDate":"2021-10-21"},{"lineNumber":9,"author":{"gitId":"Jingwencloud"},"content":"participant \":CommandResult\" as CommandResult LOGIC_COLOR","lastModifiedDate":"2021-10-21"},{"lineNumber":10,"author":{"gitId":"Jingwencloud"},"content":"participant \":DescriptionContainsKeywordsPredicate\" as DescriptionContainsKeywordsPredicate LOGIC_COLOR","lastModifiedDate":"2021-10-21"},{"lineNumber":11,"author":{"gitId":"Jingwencloud"},"content":"end box","lastModifiedDate":"2021-10-21"},{"lineNumber":12,"author":{"gitId":"Jingwencloud"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":13,"author":{"gitId":"Jingwencloud"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2021-10-21"},{"lineNumber":14,"author":{"gitId":"Jingwencloud"},"content":"participant \":Model\" as Model MODEL_COLOR","lastModifiedDate":"2021-10-21"},{"lineNumber":15,"author":{"gitId":"Jingwencloud"},"content":"end box","lastModifiedDate":"2021-10-21"},{"lineNumber":16,"author":{"gitId":"Jingwencloud"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":17,"author":{"gitId":"Jingwencloud"},"content":"[-\u003e LogicManager : execute(\"findexpenses dinner gn/London\")","lastModifiedDate":"2021-10-21"},{"lineNumber":18,"author":{"gitId":"Jingwencloud"},"content":"activate LogicManager","lastModifiedDate":"2021-10-21"},{"lineNumber":19,"author":{"gitId":"Jingwencloud"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":20,"author":{"gitId":"marcuspeh"},"content":"LogicManager -\u003e AweParser : parseCommand(\"findexpenses dinner gn/London\")","lastModifiedDate":"2021-10-22"},{"lineNumber":21,"author":{"gitId":"marcuspeh"},"content":"activate AweParser","lastModifiedDate":"2021-10-22"},{"lineNumber":22,"author":{"gitId":"Jingwencloud"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":23,"author":{"gitId":"Jingwencloud"},"content":"create FindExpensesCommandParser","lastModifiedDate":"2021-10-21"},{"lineNumber":24,"author":{"gitId":"marcuspeh"},"content":"AweParser -\u003e FindExpensesCommandParser","lastModifiedDate":"2021-10-22"},{"lineNumber":25,"author":{"gitId":"Jingwencloud"},"content":"activate FindExpensesCommandParser","lastModifiedDate":"2021-10-21"},{"lineNumber":26,"author":{"gitId":"Jingwencloud"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":27,"author":{"gitId":"marcuspeh"},"content":"FindExpensesCommandParser --\u003e AweParser","lastModifiedDate":"2021-10-22"},{"lineNumber":28,"author":{"gitId":"Jingwencloud"},"content":"deactivate FindGroupsCommandParser","lastModifiedDate":"2021-10-21"},{"lineNumber":29,"author":{"gitId":"Jingwencloud"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":30,"author":{"gitId":"marcuspeh"},"content":"AweParser -\u003e FindExpensesCommandParser : parse(\"dinner gn/London\")","lastModifiedDate":"2021-10-22"},{"lineNumber":31,"author":{"gitId":"Jingwencloud"},"content":"activate FindExpensesCommandParser","lastModifiedDate":"2021-10-21"},{"lineNumber":32,"author":{"gitId":"Jingwencloud"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":33,"author":{"gitId":"Jingwencloud"},"content":"create DescriptionContainsKeywordsPredicate","lastModifiedDate":"2021-10-21"},{"lineNumber":34,"author":{"gitId":"Jingwencloud"},"content":"FindExpensesCommandParser -\u003eDescriptionContainsKeywordsPredicate","lastModifiedDate":"2021-10-21"},{"lineNumber":35,"author":{"gitId":"Jingwencloud"},"content":"activate DescriptionContainsKeywordsPredicate","lastModifiedDate":"2021-10-21"},{"lineNumber":36,"author":{"gitId":"Jingwencloud"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":37,"author":{"gitId":"Jingwencloud"},"content":"DescriptionContainsKeywordsPredicate -\u003e FindExpensesCommandParser : c","lastModifiedDate":"2021-10-21"},{"lineNumber":38,"author":{"gitId":"Jingwencloud"},"content":"deactivate DescriptionContainsKeywordsPredicate","lastModifiedDate":"2021-10-21"},{"lineNumber":39,"author":{"gitId":"Jingwencloud"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":40,"author":{"gitId":"Jingwencloud"},"content":"create FindExpensesCommand","lastModifiedDate":"2021-10-21"},{"lineNumber":41,"author":{"gitId":"Jingwencloud"},"content":"FindExpensesCommandParser -\u003e FindExpensesCommand : c","lastModifiedDate":"2021-10-21"},{"lineNumber":42,"author":{"gitId":"Jingwencloud"},"content":"activate FindExpensesCommand","lastModifiedDate":"2021-10-21"},{"lineNumber":43,"author":{"gitId":"Jingwencloud"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":44,"author":{"gitId":"Jingwencloud"},"content":"FindExpensesCommand --\u003e FindExpensesCommandParser : d","lastModifiedDate":"2021-10-21"},{"lineNumber":45,"author":{"gitId":"Jingwencloud"},"content":"deactivate FindExpensesCommand","lastModifiedDate":"2021-10-21"},{"lineNumber":46,"author":{"gitId":"Jingwencloud"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":47,"author":{"gitId":"marcuspeh"},"content":"FindExpensesCommandParser --\u003e AweParser : d","lastModifiedDate":"2021-10-22"},{"lineNumber":48,"author":{"gitId":"Jingwencloud"},"content":"deactivate FindExpensesCommandParser","lastModifiedDate":"2021-10-21"},{"lineNumber":49,"author":{"gitId":"Jingwencloud"},"content":"\u0027Hidden arrow to position the destroy marker below the end of the activation bar.","lastModifiedDate":"2021-10-21"},{"lineNumber":50,"author":{"gitId":"marcuspeh"},"content":"FindExpensesCommandParser -[hidden]-\u003e AweParser","lastModifiedDate":"2021-10-22"},{"lineNumber":51,"author":{"gitId":"Jingwencloud"},"content":"destroy FindExpensesCommandParser","lastModifiedDate":"2021-10-21"},{"lineNumber":52,"author":{"gitId":"Jingwencloud"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":53,"author":{"gitId":"marcuspeh"},"content":"AweParser --\u003e LogicManager : d","lastModifiedDate":"2021-10-22"},{"lineNumber":54,"author":{"gitId":"marcuspeh"},"content":"deactivate AweParser","lastModifiedDate":"2021-10-22"},{"lineNumber":55,"author":{"gitId":"Jingwencloud"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":56,"author":{"gitId":"Jingwencloud"},"content":"LogicManager -\u003e FindExpensesCommand : execute()","lastModifiedDate":"2021-10-21"},{"lineNumber":57,"author":{"gitId":"Jingwencloud"},"content":"activate FindExpensesCommand","lastModifiedDate":"2021-10-21"},{"lineNumber":58,"author":{"gitId":"Jingwencloud"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":59,"author":{"gitId":"Jingwencloud"},"content":"FindExpensesCommand -\u003e Model : updateFilteredExpenseList(c)","lastModifiedDate":"2021-10-21"},{"lineNumber":60,"author":{"gitId":"Jingwencloud"},"content":"activate Model","lastModifiedDate":"2021-10-21"},{"lineNumber":61,"author":{"gitId":"Jingwencloud"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":62,"author":{"gitId":"Jingwencloud"},"content":"Model --\u003e FindExpensesCommand","lastModifiedDate":"2021-10-21"},{"lineNumber":63,"author":{"gitId":"Jingwencloud"},"content":"deactivate Model","lastModifiedDate":"2021-10-21"},{"lineNumber":64,"author":{"gitId":"Jingwencloud"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":65,"author":{"gitId":"Jingwencloud"},"content":"create CommandResult","lastModifiedDate":"2021-10-21"},{"lineNumber":66,"author":{"gitId":"Jingwencloud"},"content":"FindExpensesCommand -\u003e CommandResult","lastModifiedDate":"2021-10-21"},{"lineNumber":67,"author":{"gitId":"Jingwencloud"},"content":"activate CommandResult","lastModifiedDate":"2021-10-21"},{"lineNumber":68,"author":{"gitId":"Jingwencloud"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":69,"author":{"gitId":"Jingwencloud"},"content":"CommandResult --\u003e FindExpensesCommand","lastModifiedDate":"2021-10-21"},{"lineNumber":70,"author":{"gitId":"Jingwencloud"},"content":"deactivate CommandResult","lastModifiedDate":"2021-10-21"},{"lineNumber":71,"author":{"gitId":"Jingwencloud"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":72,"author":{"gitId":"Jingwencloud"},"content":"FindExpensesCommand --\u003e LogicManager : result","lastModifiedDate":"2021-10-21"},{"lineNumber":73,"author":{"gitId":"Jingwencloud"},"content":"deactivate FindExpensesCommand","lastModifiedDate":"2021-10-21"},{"lineNumber":74,"author":{"gitId":"Jingwencloud"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":75,"author":{"gitId":"Jingwencloud"},"content":"[\u003c--LogicManager","lastModifiedDate":"2021-10-21"},{"lineNumber":76,"author":{"gitId":"Jingwencloud"},"content":"deactivate LogicManager","lastModifiedDate":"2021-10-21"},{"lineNumber":77,"author":{"gitId":"Jingwencloud"},"content":"@enduml","lastModifiedDate":"2021-10-21"}],"authorContributionMap":{"Jingwencloud":67,"marcuspeh":10}},{"path":"docs/diagrams/FindGroupsActivityDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"marcuspeh"},"content":"@startuml","lastModifiedDate":"2021-10-22"},{"lineNumber":2,"author":{"gitId":"marcuspeh"},"content":"start","lastModifiedDate":"2021-10-22"},{"lineNumber":3,"author":{"gitId":"marcuspeh"},"content":":User executes command;","lastModifiedDate":"2021-10-22"},{"lineNumber":4,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":5,"author":{"gitId":"marcuspeh"},"content":"\u0027Since the beta syntax does not support placing the condition outside the","lastModifiedDate":"2021-10-22"},{"lineNumber":6,"author":{"gitId":"marcuspeh"},"content":"\u0027diamond we place it as the true branch instead.","lastModifiedDate":"2021-10-22"},{"lineNumber":7,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":8,"author":{"gitId":"marcuspeh"},"content":"if () then ([command is valid])","lastModifiedDate":"2021-10-22"},{"lineNumber":9,"author":{"gitId":"marcuspeh"},"content":"    :Keywords entered parsed as Predicate;","lastModifiedDate":"2021-10-22"},{"lineNumber":10,"author":{"gitId":"marcuspeh"},"content":"    :List is filtered based on the Predicate;","lastModifiedDate":"2021-10-22"},{"lineNumber":11,"author":{"gitId":"marcuspeh"},"content":"else ([else])","lastModifiedDate":"2021-10-22"},{"lineNumber":12,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":13,"author":{"gitId":"marcuspeh"},"content":"endif","lastModifiedDate":"2021-10-22"},{"lineNumber":14,"author":{"gitId":"marcuspeh"},"content":"stop","lastModifiedDate":"2021-10-22"},{"lineNumber":15,"author":{"gitId":"marcuspeh"},"content":"@enduml","lastModifiedDate":"2021-10-22"}],"authorContributionMap":{"marcuspeh":15}},{"path":"docs/diagrams/FindGroupsSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"marcuspeh"},"content":"@startuml","lastModifiedDate":"2021-10-21"},{"lineNumber":2,"author":{"gitId":"marcuspeh"},"content":"!include style.puml","lastModifiedDate":"2021-10-21"},{"lineNumber":3,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":4,"author":{"gitId":"marcuspeh"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2021-10-21"},{"lineNumber":5,"author":{"gitId":"marcuspeh"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2021-10-21"},{"lineNumber":6,"author":{"gitId":"marcuspeh"},"content":"participant \":AweParser\" as AweParser LOGIC_COLOR","lastModifiedDate":"2021-10-22"},{"lineNumber":7,"author":{"gitId":"marcuspeh"},"content":"participant \":FindGroupsCommandParser\" as FindGroupsCommandParser LOGIC_COLOR","lastModifiedDate":"2021-10-21"},{"lineNumber":8,"author":{"gitId":"marcuspeh"},"content":"participant \"d:FindGroupsCommand\" as FindGroupsCommand LOGIC_COLOR","lastModifiedDate":"2021-10-21"},{"lineNumber":9,"author":{"gitId":"marcuspeh"},"content":"participant \":CommandResult\" as CommandResult LOGIC_COLOR","lastModifiedDate":"2021-10-21"},{"lineNumber":10,"author":{"gitId":"marcuspeh"},"content":"participant \":GroupContainsKeywordsPredicate\" as GroupContainsKeywordsPredicate LOGIC_COLOR","lastModifiedDate":"2021-10-21"},{"lineNumber":11,"author":{"gitId":"marcuspeh"},"content":"end box","lastModifiedDate":"2021-10-21"},{"lineNumber":12,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":13,"author":{"gitId":"marcuspeh"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2021-10-21"},{"lineNumber":14,"author":{"gitId":"marcuspeh"},"content":"participant \":Model\" as Model MODEL_COLOR","lastModifiedDate":"2021-10-21"},{"lineNumber":15,"author":{"gitId":"marcuspeh"},"content":"end box","lastModifiedDate":"2021-10-21"},{"lineNumber":16,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":17,"author":{"gitId":"marcuspeh"},"content":"[-\u003e LogicManager : execute(\"findgroups London\")","lastModifiedDate":"2021-10-21"},{"lineNumber":18,"author":{"gitId":"marcuspeh"},"content":"activate LogicManager","lastModifiedDate":"2021-10-21"},{"lineNumber":19,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":20,"author":{"gitId":"marcuspeh"},"content":"LogicManager -\u003e AweParser : parseCommand(\"findgroups London\")","lastModifiedDate":"2021-10-22"},{"lineNumber":21,"author":{"gitId":"marcuspeh"},"content":"activate AweParser","lastModifiedDate":"2021-10-22"},{"lineNumber":22,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":23,"author":{"gitId":"marcuspeh"},"content":"create FindGroupsCommandParser","lastModifiedDate":"2021-10-21"},{"lineNumber":24,"author":{"gitId":"marcuspeh"},"content":"AweParser -\u003e FindGroupsCommandParser","lastModifiedDate":"2021-10-22"},{"lineNumber":25,"author":{"gitId":"marcuspeh"},"content":"activate FindGroupsCommandParser","lastModifiedDate":"2021-10-21"},{"lineNumber":26,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":27,"author":{"gitId":"marcuspeh"},"content":"FindGroupsCommandParser --\u003e AweParser","lastModifiedDate":"2021-10-22"},{"lineNumber":28,"author":{"gitId":"marcuspeh"},"content":"deactivate FindGroupsCommandParser","lastModifiedDate":"2021-10-21"},{"lineNumber":29,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":30,"author":{"gitId":"marcuspeh"},"content":"AweParser -\u003e FindGroupsCommandParser : parse(\"London\")","lastModifiedDate":"2021-10-22"},{"lineNumber":31,"author":{"gitId":"marcuspeh"},"content":"activate FindGroupsCommandParser","lastModifiedDate":"2021-10-21"},{"lineNumber":32,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":33,"author":{"gitId":"marcuspeh"},"content":"create GroupContainsKeywordsPredicate","lastModifiedDate":"2021-10-21"},{"lineNumber":34,"author":{"gitId":"marcuspeh"},"content":"FindGroupsCommandParser -\u003e GroupContainsKeywordsPredicate","lastModifiedDate":"2021-10-21"},{"lineNumber":35,"author":{"gitId":"marcuspeh"},"content":"activate GroupContainsKeywordsPredicate","lastModifiedDate":"2021-10-21"},{"lineNumber":36,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":37,"author":{"gitId":"marcuspeh"},"content":"GroupContainsKeywordsPredicate -\u003e FindGroupsCommandParser : predicate","lastModifiedDate":"2021-10-22"},{"lineNumber":38,"author":{"gitId":"marcuspeh"},"content":"deactivate GroupContainsKeywordsPredicate","lastModifiedDate":"2021-10-21"},{"lineNumber":39,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":40,"author":{"gitId":"marcuspeh"},"content":"create FindGroupsCommand","lastModifiedDate":"2021-10-21"},{"lineNumber":41,"author":{"gitId":"marcuspeh"},"content":"FindGroupsCommandParser -\u003e FindGroupsCommand : predicate","lastModifiedDate":"2021-10-22"},{"lineNumber":42,"author":{"gitId":"marcuspeh"},"content":"activate FindGroupsCommand","lastModifiedDate":"2021-10-21"},{"lineNumber":43,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":44,"author":{"gitId":"marcuspeh"},"content":"FindGroupsCommand --\u003e FindGroupsCommandParser : command","lastModifiedDate":"2021-10-22"},{"lineNumber":45,"author":{"gitId":"marcuspeh"},"content":"deactivate FindGroupsCommand","lastModifiedDate":"2021-10-21"},{"lineNumber":46,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":47,"author":{"gitId":"marcuspeh"},"content":"FindGroupsCommandParser --\u003e AweParser : command","lastModifiedDate":"2021-10-22"},{"lineNumber":48,"author":{"gitId":"marcuspeh"},"content":"deactivate FindGroupsCommandParser","lastModifiedDate":"2021-10-21"},{"lineNumber":49,"author":{"gitId":"marcuspeh"},"content":"\u0027Hidden arrow to position the destroy marker below the end of the activation bar.","lastModifiedDate":"2021-10-21"},{"lineNumber":50,"author":{"gitId":"marcuspeh"},"content":"FindGroupsCommandParser -[hidden]-\u003e AweParser","lastModifiedDate":"2021-10-22"},{"lineNumber":51,"author":{"gitId":"marcuspeh"},"content":"destroy FindGroupsCommandParser","lastModifiedDate":"2021-10-21"},{"lineNumber":52,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":53,"author":{"gitId":"marcuspeh"},"content":"AweParser --\u003e LogicManager : command","lastModifiedDate":"2021-10-22"},{"lineNumber":54,"author":{"gitId":"marcuspeh"},"content":"deactivate AweParser","lastModifiedDate":"2021-10-22"},{"lineNumber":55,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":56,"author":{"gitId":"marcuspeh"},"content":"LogicManager -\u003e FindGroupsCommand : execute()","lastModifiedDate":"2021-10-21"},{"lineNumber":57,"author":{"gitId":"marcuspeh"},"content":"activate FindGroupsCommand","lastModifiedDate":"2021-10-21"},{"lineNumber":58,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":59,"author":{"gitId":"marcuspeh"},"content":"FindGroupsCommand -\u003e Model : updateFilteredGroupList(predicate)","lastModifiedDate":"2021-10-22"},{"lineNumber":60,"author":{"gitId":"marcuspeh"},"content":"activate Model","lastModifiedDate":"2021-10-21"},{"lineNumber":61,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":62,"author":{"gitId":"marcuspeh"},"content":"Model --\u003e FindGroupsCommand","lastModifiedDate":"2021-10-21"},{"lineNumber":63,"author":{"gitId":"marcuspeh"},"content":"deactivate Model","lastModifiedDate":"2021-10-21"},{"lineNumber":64,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":65,"author":{"gitId":"marcuspeh"},"content":"create CommandResult","lastModifiedDate":"2021-10-21"},{"lineNumber":66,"author":{"gitId":"marcuspeh"},"content":"FindGroupsCommand -\u003e CommandResult","lastModifiedDate":"2021-10-21"},{"lineNumber":67,"author":{"gitId":"marcuspeh"},"content":"activate CommandResult","lastModifiedDate":"2021-10-21"},{"lineNumber":68,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":69,"author":{"gitId":"marcuspeh"},"content":"CommandResult --\u003e FindGroupsCommand : result","lastModifiedDate":"2021-10-22"},{"lineNumber":70,"author":{"gitId":"marcuspeh"},"content":"deactivate CommandResult","lastModifiedDate":"2021-10-21"},{"lineNumber":71,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":72,"author":{"gitId":"marcuspeh"},"content":"FindGroupsCommand --\u003e LogicManager : result","lastModifiedDate":"2021-10-21"},{"lineNumber":73,"author":{"gitId":"marcuspeh"},"content":"deactivate FindGroupsCommand","lastModifiedDate":"2021-10-21"},{"lineNumber":74,"author":{"gitId":"marcuspeh"},"content":"\u0027Hidden arrow to position the destroy marker below the end of the activation bar.","lastModifiedDate":"2021-10-22"},{"lineNumber":75,"author":{"gitId":"marcuspeh"},"content":"FindGroupsCommand -[hidden]-\u003e AweParser","lastModifiedDate":"2021-10-22"},{"lineNumber":76,"author":{"gitId":"marcuspeh"},"content":"destroy FindGroupsCommand","lastModifiedDate":"2021-10-22"},{"lineNumber":77,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":78,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":79,"author":{"gitId":"marcuspeh"},"content":"[\u003c--LogicManager","lastModifiedDate":"2021-10-21"},{"lineNumber":80,"author":{"gitId":"marcuspeh"},"content":"deactivate LogicManager","lastModifiedDate":"2021-10-21"},{"lineNumber":81,"author":{"gitId":"marcuspeh"},"content":"@enduml","lastModifiedDate":"2021-10-21"}],"authorContributionMap":{"marcuspeh":81}},{"path":"docs/diagrams/GroupAddContactSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"chrus-chong"},"content":"@startuml","lastModifiedDate":"2021-10-29"},{"lineNumber":2,"author":{"gitId":"chrus-chong"},"content":"!include style.puml","lastModifiedDate":"2021-10-29"},{"lineNumber":3,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":4,"author":{"gitId":"chrus-chong"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2021-10-29"},{"lineNumber":5,"author":{"gitId":"chrus-chong"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2021-10-29"},{"lineNumber":6,"author":{"gitId":"chrus-chong"},"content":"participant \":AweParser\" as AweParser LOGIC_COLOR","lastModifiedDate":"2021-10-29"},{"lineNumber":7,"author":{"gitId":"chrus-chong"},"content":"participant \":GroupAddContactCommand\" as GroupAddContactCommand LOGIC_COLOR","lastModifiedDate":"2021-10-29"},{"lineNumber":8,"author":{"gitId":"chrus-chong"},"content":"participant \"newGroup:Group\" as Group LOGIC_COLOR","lastModifiedDate":"2021-10-29"},{"lineNumber":9,"author":{"gitId":"chrus-chong"},"content":"participant \":CommandResult\" as CommandResult LOGIC_COLOR","lastModifiedDate":"2021-10-29"},{"lineNumber":10,"author":{"gitId":"chrus-chong"},"content":"end box","lastModifiedDate":"2021-10-29"},{"lineNumber":11,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":12,"author":{"gitId":"chrus-chong"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2021-10-29"},{"lineNumber":13,"author":{"gitId":"chrus-chong"},"content":"participant \":Model\" as Model MODEL_COLOR","lastModifiedDate":"2021-10-29"},{"lineNumber":14,"author":{"gitId":"chrus-chong"},"content":"end box","lastModifiedDate":"2021-10-29"},{"lineNumber":15,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":16,"author":{"gitId":"chrus-chong"},"content":"[-\u003e LogicManager : execute(\"groupaddcontact gn/Bali n/Tom\")","lastModifiedDate":"2021-10-29"},{"lineNumber":17,"author":{"gitId":"chrus-chong"},"content":"activate LogicManager","lastModifiedDate":"2021-10-29"},{"lineNumber":18,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":19,"author":{"gitId":"chrus-chong"},"content":"LogicManager -\u003e AweParser : parseCommand(\"groupaddcontact gn/Bali n/Tom\")","lastModifiedDate":"2021-10-29"},{"lineNumber":20,"author":{"gitId":"chrus-chong"},"content":"activate AweParser","lastModifiedDate":"2021-10-29"},{"lineNumber":21,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":22,"author":{"gitId":"chrus-chong"},"content":"/\u0027Clarify with tutor if there is a need to display GroupAddContactCommandParser class within the ref\u0027/","lastModifiedDate":"2021-10-29"},{"lineNumber":23,"author":{"gitId":"chrus-chong"},"content":"note right","lastModifiedDate":"2021-10-29"},{"lineNumber":24,"author":{"gitId":"chrus-chong"},"content":"Same as CreateGroupCommand","lastModifiedDate":"2021-10-29"},{"lineNumber":25,"author":{"gitId":"chrus-chong"},"content":"ref frame except with","lastModifiedDate":"2021-10-29"},{"lineNumber":26,"author":{"gitId":"chrus-chong"},"content":"GroupAddContactCommand","lastModifiedDate":"2021-10-29"},{"lineNumber":27,"author":{"gitId":"chrus-chong"},"content":"and GroupAddContactCommandParser","lastModifiedDate":"2021-10-29"},{"lineNumber":28,"author":{"gitId":"chrus-chong"},"content":"end note","lastModifiedDate":"2021-10-29"},{"lineNumber":29,"author":{"gitId":"chrus-chong"},"content":"group sd get groupAddContactCommand","lastModifiedDate":"2021-10-29"},{"lineNumber":30,"author":{"gitId":"chrus-chong"},"content":"create GroupAddContactCommand","lastModifiedDate":"2021-10-29"},{"lineNumber":31,"author":{"gitId":"chrus-chong"},"content":"AweParser -\u003e GroupAddContactCommand","lastModifiedDate":"2021-10-29"},{"lineNumber":32,"author":{"gitId":"chrus-chong"},"content":"activate GroupAddContactCommand","lastModifiedDate":"2021-10-29"},{"lineNumber":33,"author":{"gitId":"chrus-chong"},"content":"GroupAddContactCommand --\u003e AweParser","lastModifiedDate":"2021-10-29"},{"lineNumber":34,"author":{"gitId":"chrus-chong"},"content":"deactivate GroupAddContactCommand","lastModifiedDate":"2021-10-29"},{"lineNumber":35,"author":{"gitId":"chrus-chong"},"content":"end group","lastModifiedDate":"2021-10-29"},{"lineNumber":36,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":37,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":38,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":39,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":40,"author":{"gitId":"chrus-chong"},"content":"AweParser --\u003e LogicManager : groupAddContactCommand","lastModifiedDate":"2021-10-29"},{"lineNumber":41,"author":{"gitId":"chrus-chong"},"content":"deactivate AweParser","lastModifiedDate":"2021-10-29"},{"lineNumber":42,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":43,"author":{"gitId":"chrus-chong"},"content":"LogicManager -\u003e GroupAddContactCommand : execute()","lastModifiedDate":"2021-10-29"},{"lineNumber":44,"author":{"gitId":"chrus-chong"},"content":"activate GroupAddContactCommand","lastModifiedDate":"2021-10-29"},{"lineNumber":45,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":46,"author":{"gitId":"chrus-chong"},"content":"loop for every member to be added","lastModifiedDate":"2021-10-29"},{"lineNumber":47,"author":{"gitId":"chrus-chong"},"content":"    GroupAddContactCommand -\u003e Group : addMember(newMember)","lastModifiedDate":"2021-10-29"},{"lineNumber":48,"author":{"gitId":"chrus-chong"},"content":"    activate Group","lastModifiedDate":"2021-10-29"},{"lineNumber":49,"author":{"gitId":"chrus-chong"},"content":"    Group --\u003e GroupAddContactCommand : newGroup","lastModifiedDate":"2021-10-29"},{"lineNumber":50,"author":{"gitId":"chrus-chong"},"content":"    deactivate Group","lastModifiedDate":"2021-10-29"},{"lineNumber":51,"author":{"gitId":"chrus-chong"},"content":"end","lastModifiedDate":"2021-10-29"},{"lineNumber":52,"author":{"gitId":"chrus-chong"},"content":"\u0027Hidden arrow to position the destroy marker below the end of the activation bar.","lastModifiedDate":"2021-10-29"},{"lineNumber":53,"author":{"gitId":"chrus-chong"},"content":"Group -[hidden]-\u003e AweParser","lastModifiedDate":"2021-10-29"},{"lineNumber":54,"author":{"gitId":"chrus-chong"},"content":"destroy Group","lastModifiedDate":"2021-10-29"},{"lineNumber":55,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":56,"author":{"gitId":"chrus-chong"},"content":"GroupAddContactCommand -\u003e Model : setGroup(oldGroup, newGroup)","lastModifiedDate":"2021-10-29"},{"lineNumber":57,"author":{"gitId":"chrus-chong"},"content":"activate Model","lastModifiedDate":"2021-10-29"},{"lineNumber":58,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":59,"author":{"gitId":"chrus-chong"},"content":"Model --\u003e GroupAddContactCommand","lastModifiedDate":"2021-10-29"},{"lineNumber":60,"author":{"gitId":"chrus-chong"},"content":"deactivate Model","lastModifiedDate":"2021-10-29"},{"lineNumber":61,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":62,"author":{"gitId":"chrus-chong"},"content":"create CommandResult","lastModifiedDate":"2021-10-29"},{"lineNumber":63,"author":{"gitId":"chrus-chong"},"content":"GroupAddContactCommand -\u003e CommandResult","lastModifiedDate":"2021-10-29"},{"lineNumber":64,"author":{"gitId":"chrus-chong"},"content":"activate CommandResult","lastModifiedDate":"2021-10-29"},{"lineNumber":65,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":66,"author":{"gitId":"chrus-chong"},"content":"CommandResult --\u003e GroupAddContactCommand : result","lastModifiedDate":"2021-10-29"},{"lineNumber":67,"author":{"gitId":"chrus-chong"},"content":"deactivate CommandResult","lastModifiedDate":"2021-10-29"},{"lineNumber":68,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":69,"author":{"gitId":"chrus-chong"},"content":"GroupAddContactCommand --\u003e LogicManager : result","lastModifiedDate":"2021-10-29"},{"lineNumber":70,"author":{"gitId":"chrus-chong"},"content":"deactivate GroupAddContactCommand","lastModifiedDate":"2021-10-29"},{"lineNumber":71,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":72,"author":{"gitId":"chrus-chong"},"content":"[\u003c--LogicManager","lastModifiedDate":"2021-10-29"},{"lineNumber":73,"author":{"gitId":"chrus-chong"},"content":"deactivate LogicManager","lastModifiedDate":"2021-10-29"},{"lineNumber":74,"author":{"gitId":"chrus-chong"},"content":"@enduml","lastModifiedDate":"2021-10-29"}],"authorContributionMap":{"chrus-chong":74}},{"path":"docs/diagrams/GroupAddTagSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"chrus-chong"},"content":"@startuml","lastModifiedDate":"2021-10-29"},{"lineNumber":2,"author":{"gitId":"chrus-chong"},"content":"!include style.puml","lastModifiedDate":"2021-10-29"},{"lineNumber":3,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":4,"author":{"gitId":"chrus-chong"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2021-10-29"},{"lineNumber":5,"author":{"gitId":"chrus-chong"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2021-10-29"},{"lineNumber":6,"author":{"gitId":"chrus-chong"},"content":"participant \":AweParser\" as AweParser LOGIC_COLOR","lastModifiedDate":"2021-10-29"},{"lineNumber":7,"author":{"gitId":"chrus-chong"},"content":"participant \":GroupAddTagCommand\" as GroupAddTagCommand LOGIC_COLOR","lastModifiedDate":"2021-10-29"},{"lineNumber":8,"author":{"gitId":"chrus-chong"},"content":"participant \"newGroup:Group\" as Group LOGIC_COLOR","lastModifiedDate":"2021-10-29"},{"lineNumber":9,"author":{"gitId":"chrus-chong"},"content":"participant \":CommandResult\" as CommandResult LOGIC_COLOR","lastModifiedDate":"2021-10-29"},{"lineNumber":10,"author":{"gitId":"chrus-chong"},"content":"end box","lastModifiedDate":"2021-10-29"},{"lineNumber":11,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":12,"author":{"gitId":"chrus-chong"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2021-10-29"},{"lineNumber":13,"author":{"gitId":"chrus-chong"},"content":"participant \":Model\" as Model MODEL_COLOR","lastModifiedDate":"2021-10-29"},{"lineNumber":14,"author":{"gitId":"chrus-chong"},"content":"end box","lastModifiedDate":"2021-10-29"},{"lineNumber":15,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":16,"author":{"gitId":"chrus-chong"},"content":"[-\u003e LogicManager : execute(\"groupaddtag gn/Bali t/3day\")","lastModifiedDate":"2021-10-29"},{"lineNumber":17,"author":{"gitId":"chrus-chong"},"content":"activate LogicManager","lastModifiedDate":"2021-10-29"},{"lineNumber":18,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":19,"author":{"gitId":"chrus-chong"},"content":"LogicManager -\u003e AweParser : parseCommand(\"groupaddtag gn/Bali t/3day\")","lastModifiedDate":"2021-10-29"},{"lineNumber":20,"author":{"gitId":"chrus-chong"},"content":"activate AweParser","lastModifiedDate":"2021-10-29"},{"lineNumber":21,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":22,"author":{"gitId":"chrus-chong"},"content":"/\u0027Clarify with tutor if there is a need to display GroupAddTagCommandParser class within the ref\u0027/","lastModifiedDate":"2021-10-29"},{"lineNumber":23,"author":{"gitId":"chrus-chong"},"content":"note right","lastModifiedDate":"2021-10-29"},{"lineNumber":24,"author":{"gitId":"chrus-chong"},"content":"Same as CreateGroupCommand","lastModifiedDate":"2021-10-29"},{"lineNumber":25,"author":{"gitId":"chrus-chong"},"content":"ref frame except with","lastModifiedDate":"2021-10-29"},{"lineNumber":26,"author":{"gitId":"chrus-chong"},"content":"GroupAddTagCommand","lastModifiedDate":"2021-10-29"},{"lineNumber":27,"author":{"gitId":"chrus-chong"},"content":"and GroupAddTagCommandParser","lastModifiedDate":"2021-10-29"},{"lineNumber":28,"author":{"gitId":"chrus-chong"},"content":"end note","lastModifiedDate":"2021-10-29"},{"lineNumber":29,"author":{"gitId":"chrus-chong"},"content":"group sd get groupAddTagCommand","lastModifiedDate":"2021-10-29"},{"lineNumber":30,"author":{"gitId":"chrus-chong"},"content":"create GroupAddTagCommand","lastModifiedDate":"2021-10-29"},{"lineNumber":31,"author":{"gitId":"chrus-chong"},"content":"AweParser -\u003e GroupAddTagCommand","lastModifiedDate":"2021-10-29"},{"lineNumber":32,"author":{"gitId":"chrus-chong"},"content":"activate GroupAddTagCommand","lastModifiedDate":"2021-10-29"},{"lineNumber":33,"author":{"gitId":"chrus-chong"},"content":"GroupAddTagCommand --\u003e AweParser","lastModifiedDate":"2021-10-29"},{"lineNumber":34,"author":{"gitId":"chrus-chong"},"content":"deactivate GroupAddTagCommand","lastModifiedDate":"2021-10-29"},{"lineNumber":35,"author":{"gitId":"chrus-chong"},"content":"end group","lastModifiedDate":"2021-10-29"},{"lineNumber":36,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":37,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":38,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":39,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":40,"author":{"gitId":"chrus-chong"},"content":"AweParser --\u003e LogicManager : groupAddTagCommand","lastModifiedDate":"2021-10-29"},{"lineNumber":41,"author":{"gitId":"chrus-chong"},"content":"deactivate AweParser","lastModifiedDate":"2021-10-29"},{"lineNumber":42,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":43,"author":{"gitId":"chrus-chong"},"content":"LogicManager -\u003e GroupAddTagCommand : execute()","lastModifiedDate":"2021-10-29"},{"lineNumber":44,"author":{"gitId":"chrus-chong"},"content":"activate GroupAddTagCommand","lastModifiedDate":"2021-10-29"},{"lineNumber":45,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":46,"author":{"gitId":"chrus-chong"},"content":"loop for every tag to be added","lastModifiedDate":"2021-10-29"},{"lineNumber":47,"author":{"gitId":"chrus-chong"},"content":"    GroupAddTagCommand -\u003e Group : addTag(newTags)","lastModifiedDate":"2021-10-29"},{"lineNumber":48,"author":{"gitId":"chrus-chong"},"content":"    activate Group","lastModifiedDate":"2021-10-29"},{"lineNumber":49,"author":{"gitId":"chrus-chong"},"content":"    Group --\u003e GroupAddTagCommand : newGroup","lastModifiedDate":"2021-10-29"},{"lineNumber":50,"author":{"gitId":"chrus-chong"},"content":"    deactivate Group","lastModifiedDate":"2021-10-29"},{"lineNumber":51,"author":{"gitId":"chrus-chong"},"content":"end","lastModifiedDate":"2021-10-29"},{"lineNumber":52,"author":{"gitId":"chrus-chong"},"content":"\u0027Hidden arrow to position the destroy marker below the end of the activation bar.","lastModifiedDate":"2021-10-29"},{"lineNumber":53,"author":{"gitId":"chrus-chong"},"content":"Group -[hidden]-\u003e AweParser","lastModifiedDate":"2021-10-29"},{"lineNumber":54,"author":{"gitId":"chrus-chong"},"content":"destroy Group","lastModifiedDate":"2021-10-29"},{"lineNumber":55,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":56,"author":{"gitId":"chrus-chong"},"content":"GroupAddTagCommand -\u003e Model : setGroup(oldGroup, newGroup)","lastModifiedDate":"2021-10-29"},{"lineNumber":57,"author":{"gitId":"chrus-chong"},"content":"activate Model","lastModifiedDate":"2021-10-29"},{"lineNumber":58,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":59,"author":{"gitId":"chrus-chong"},"content":"Model --\u003e GroupAddTagCommand","lastModifiedDate":"2021-10-29"},{"lineNumber":60,"author":{"gitId":"chrus-chong"},"content":"deactivate Model","lastModifiedDate":"2021-10-29"},{"lineNumber":61,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":62,"author":{"gitId":"chrus-chong"},"content":"create CommandResult","lastModifiedDate":"2021-10-29"},{"lineNumber":63,"author":{"gitId":"chrus-chong"},"content":"GroupAddTagCommand -\u003e CommandResult","lastModifiedDate":"2021-10-29"},{"lineNumber":64,"author":{"gitId":"chrus-chong"},"content":"activate CommandResult","lastModifiedDate":"2021-10-29"},{"lineNumber":65,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":66,"author":{"gitId":"chrus-chong"},"content":"CommandResult --\u003e GroupAddTagCommand : result","lastModifiedDate":"2021-10-29"},{"lineNumber":67,"author":{"gitId":"chrus-chong"},"content":"deactivate CommandResult","lastModifiedDate":"2021-10-29"},{"lineNumber":68,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":69,"author":{"gitId":"chrus-chong"},"content":"GroupAddTagCommand --\u003e LogicManager : result","lastModifiedDate":"2021-10-29"},{"lineNumber":70,"author":{"gitId":"chrus-chong"},"content":"deactivate GroupAddTagCommand","lastModifiedDate":"2021-10-29"},{"lineNumber":71,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":72,"author":{"gitId":"chrus-chong"},"content":"[\u003c--LogicManager","lastModifiedDate":"2021-10-29"},{"lineNumber":73,"author":{"gitId":"chrus-chong"},"content":"deactivate LogicManager","lastModifiedDate":"2021-10-29"},{"lineNumber":74,"author":{"gitId":"chrus-chong"},"content":"@enduml","lastModifiedDate":"2021-10-29"}],"authorContributionMap":{"chrus-chong":74}},{"path":"docs/diagrams/GroupClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"marcuspeh"},"content":"@startuml","lastModifiedDate":"2021-10-21"},{"lineNumber":2,"author":{"gitId":"marcuspeh"},"content":"!include style.puml","lastModifiedDate":"2021-10-21"},{"lineNumber":3,"author":{"gitId":"marcuspeh"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2021-10-21"},{"lineNumber":4,"author":{"gitId":"marcuspeh"},"content":"skinparam arrowColor MODEL_COLOR","lastModifiedDate":"2021-10-21"},{"lineNumber":5,"author":{"gitId":"marcuspeh"},"content":"skinparam classBackgroundColor MODEL_COLOR","lastModifiedDate":"2021-10-21"},{"lineNumber":6,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":7,"author":{"gitId":"marcuspeh"},"content":"Package Group \u003c\u003cRectangle\u003e\u003e{","lastModifiedDate":"2021-10-21"},{"lineNumber":8,"author":{"gitId":"marcuspeh"},"content":"    Class Group","lastModifiedDate":"2021-10-21"},{"lineNumber":9,"author":{"gitId":"marcuspeh"},"content":"    Class GroupName","lastModifiedDate":"2021-10-21"},{"lineNumber":10,"author":{"gitId":"marcuspeh"},"content":"}","lastModifiedDate":"2021-10-21"},{"lineNumber":11,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":12,"author":{"gitId":"marcuspeh"},"content":"Package Tag \u003c\u003cRectangle\u003e\u003e{","lastModifiedDate":"2021-10-21"},{"lineNumber":13,"author":{"gitId":"marcuspeh"},"content":"Class Tag","lastModifiedDate":"2021-10-21"},{"lineNumber":14,"author":{"gitId":"marcuspeh"},"content":"}","lastModifiedDate":"2021-10-21"},{"lineNumber":15,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":16,"author":{"gitId":"marcuspeh"},"content":"Package Person \u003c\u003cRectangle\u003e\u003e{","lastModifiedDate":"2021-10-21"},{"lineNumber":17,"author":{"gitId":"marcuspeh"},"content":"}","lastModifiedDate":"2021-10-21"},{"lineNumber":18,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":19,"author":{"gitId":"marcuspeh"},"content":"Package Expense \u003c\u003cRectangle\u003e\u003e{","lastModifiedDate":"2021-10-21"},{"lineNumber":20,"author":{"gitId":"marcuspeh"},"content":"}","lastModifiedDate":"2021-10-21"},{"lineNumber":21,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":22,"author":{"gitId":"marcuspeh"},"content":"Class HiddenOutside #FFFFFF","lastModifiedDate":"2021-10-21"},{"lineNumber":23,"author":{"gitId":"marcuspeh"},"content":"HiddenOutside --\u003e Group","lastModifiedDate":"2021-10-21"},{"lineNumber":24,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":25,"author":{"gitId":"marcuspeh"},"content":"Group *--\u003e GroupName","lastModifiedDate":"2021-10-21"},{"lineNumber":26,"author":{"gitId":"marcuspeh"},"content":"Group *--\u003e \"*\" Tag","lastModifiedDate":"2021-10-21"},{"lineNumber":27,"author":{"gitId":"marcuspeh"},"content":"Group --\u003e \"1..* members\" Person","lastModifiedDate":"2021-10-21"},{"lineNumber":28,"author":{"gitId":"marcuspeh"},"content":"Group --\u003e \"*\" Expense","lastModifiedDate":"2021-10-21"},{"lineNumber":29,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":30,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":31,"author":{"gitId":"marcuspeh"},"content":"@enduml","lastModifiedDate":"2021-10-21"}],"authorContributionMap":{"marcuspeh":31}},{"path":"docs/diagrams/GroupEditNameSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"chrus-chong"},"content":"@startuml","lastModifiedDate":"2021-10-29"},{"lineNumber":2,"author":{"gitId":"chrus-chong"},"content":"!include style.puml","lastModifiedDate":"2021-10-29"},{"lineNumber":3,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":4,"author":{"gitId":"chrus-chong"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2021-10-29"},{"lineNumber":5,"author":{"gitId":"chrus-chong"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2021-10-29"},{"lineNumber":6,"author":{"gitId":"chrus-chong"},"content":"participant \":AweParser\" as AweParser LOGIC_COLOR","lastModifiedDate":"2021-10-29"},{"lineNumber":7,"author":{"gitId":"chrus-chong"},"content":"participant \":GroupEditNameCommand\" as GroupEditNameCommand LOGIC_COLOR","lastModifiedDate":"2021-10-29"},{"lineNumber":8,"author":{"gitId":"chrus-chong"},"content":"participant \"oldGroup:Group\" as Group LOGIC_COLOR","lastModifiedDate":"2021-10-29"},{"lineNumber":9,"author":{"gitId":"chrus-chong"},"content":"participant \":CommandResult\" as CommandResult LOGIC_COLOR","lastModifiedDate":"2021-10-29"},{"lineNumber":10,"author":{"gitId":"chrus-chong"},"content":"end box","lastModifiedDate":"2021-10-29"},{"lineNumber":11,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":12,"author":{"gitId":"chrus-chong"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2021-10-29"},{"lineNumber":13,"author":{"gitId":"chrus-chong"},"content":"participant \":Model\" as Model MODEL_COLOR","lastModifiedDate":"2021-10-29"},{"lineNumber":14,"author":{"gitId":"chrus-chong"},"content":"end box","lastModifiedDate":"2021-10-29"},{"lineNumber":15,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":16,"author":{"gitId":"chrus-chong"},"content":"[-\u003e LogicManager : execute(\"groupeditname gn/Bali gn/Czech\")","lastModifiedDate":"2021-10-29"},{"lineNumber":17,"author":{"gitId":"chrus-chong"},"content":"activate LogicManager","lastModifiedDate":"2021-10-29"},{"lineNumber":18,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":19,"author":{"gitId":"chrus-chong"},"content":"LogicManager -\u003e AweParser : parseCommand(\"groupeditname gn/Bali gn/Czech\")","lastModifiedDate":"2021-10-29"},{"lineNumber":20,"author":{"gitId":"chrus-chong"},"content":"activate AweParser","lastModifiedDate":"2021-10-29"},{"lineNumber":21,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":22,"author":{"gitId":"chrus-chong"},"content":"/\u0027Clarify with tutor if there is a need to display GroupEditNameCommandParser class within the ref\u0027/","lastModifiedDate":"2021-10-29"},{"lineNumber":23,"author":{"gitId":"chrus-chong"},"content":"note right","lastModifiedDate":"2021-10-29"},{"lineNumber":24,"author":{"gitId":"chrus-chong"},"content":"Same as CreateGroupCommand","lastModifiedDate":"2021-10-29"},{"lineNumber":25,"author":{"gitId":"chrus-chong"},"content":"ref frame except with","lastModifiedDate":"2021-10-29"},{"lineNumber":26,"author":{"gitId":"chrus-chong"},"content":"GroupEditNameCommand","lastModifiedDate":"2021-10-29"},{"lineNumber":27,"author":{"gitId":"chrus-chong"},"content":"and GroupEditNameCommandParser","lastModifiedDate":"2021-10-29"},{"lineNumber":28,"author":{"gitId":"chrus-chong"},"content":"end note","lastModifiedDate":"2021-10-29"},{"lineNumber":29,"author":{"gitId":"chrus-chong"},"content":"group sd get groupEditNameCommand","lastModifiedDate":"2021-10-29"},{"lineNumber":30,"author":{"gitId":"chrus-chong"},"content":"create GroupEditNameCommand","lastModifiedDate":"2021-10-29"},{"lineNumber":31,"author":{"gitId":"chrus-chong"},"content":"AweParser -\u003e GroupEditNameCommand","lastModifiedDate":"2021-10-29"},{"lineNumber":32,"author":{"gitId":"chrus-chong"},"content":"activate GroupEditNameCommand","lastModifiedDate":"2021-10-29"},{"lineNumber":33,"author":{"gitId":"chrus-chong"},"content":"GroupEditNameCommand --\u003e AweParser","lastModifiedDate":"2021-10-29"},{"lineNumber":34,"author":{"gitId":"chrus-chong"},"content":"deactivate GroupEditNameCommand","lastModifiedDate":"2021-10-29"},{"lineNumber":35,"author":{"gitId":"chrus-chong"},"content":"end group","lastModifiedDate":"2021-10-29"},{"lineNumber":36,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":37,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":38,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":39,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":40,"author":{"gitId":"chrus-chong"},"content":"AweParser --\u003e LogicManager : groupEditNameCommand","lastModifiedDate":"2021-10-29"},{"lineNumber":41,"author":{"gitId":"chrus-chong"},"content":"deactivate AweParser","lastModifiedDate":"2021-10-29"},{"lineNumber":42,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":43,"author":{"gitId":"chrus-chong"},"content":"LogicManager -\u003e GroupEditNameCommand : execute()","lastModifiedDate":"2021-10-29"},{"lineNumber":44,"author":{"gitId":"chrus-chong"},"content":"activate GroupEditNameCommand","lastModifiedDate":"2021-10-29"},{"lineNumber":45,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":46,"author":{"gitId":"chrus-chong"},"content":"GroupEditNameCommand -\u003e Group : editName(newGroupName)","lastModifiedDate":"2021-10-29"},{"lineNumber":47,"author":{"gitId":"chrus-chong"},"content":"activate Group","lastModifiedDate":"2021-10-29"},{"lineNumber":48,"author":{"gitId":"chrus-chong"},"content":"Group --\u003e GroupEditNameCommand : newGroup","lastModifiedDate":"2021-10-29"},{"lineNumber":49,"author":{"gitId":"chrus-chong"},"content":"deactivate Group","lastModifiedDate":"2021-10-29"},{"lineNumber":50,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":51,"author":{"gitId":"chrus-chong"},"content":"\u0027Hidden arrow to position the destroy marker below the end of the activation bar.","lastModifiedDate":"2021-10-29"},{"lineNumber":52,"author":{"gitId":"chrus-chong"},"content":"Group -[hidden]-\u003e AweParser","lastModifiedDate":"2021-10-29"},{"lineNumber":53,"author":{"gitId":"chrus-chong"},"content":"destroy Group","lastModifiedDate":"2021-10-29"},{"lineNumber":54,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":55,"author":{"gitId":"chrus-chong"},"content":"GroupEditNameCommand -\u003e Model : setGroup(oldGroup, newGroup)","lastModifiedDate":"2021-10-29"},{"lineNumber":56,"author":{"gitId":"chrus-chong"},"content":"activate Model","lastModifiedDate":"2021-10-29"},{"lineNumber":57,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":58,"author":{"gitId":"chrus-chong"},"content":"Model --\u003e GroupEditNameCommand","lastModifiedDate":"2021-10-29"},{"lineNumber":59,"author":{"gitId":"chrus-chong"},"content":"deactivate Model","lastModifiedDate":"2021-10-29"},{"lineNumber":60,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":61,"author":{"gitId":"chrus-chong"},"content":"create CommandResult","lastModifiedDate":"2021-10-29"},{"lineNumber":62,"author":{"gitId":"chrus-chong"},"content":"GroupEditNameCommand -\u003e CommandResult","lastModifiedDate":"2021-10-29"},{"lineNumber":63,"author":{"gitId":"chrus-chong"},"content":"activate CommandResult","lastModifiedDate":"2021-10-29"},{"lineNumber":64,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":65,"author":{"gitId":"chrus-chong"},"content":"CommandResult --\u003e GroupEditNameCommand : result","lastModifiedDate":"2021-10-29"},{"lineNumber":66,"author":{"gitId":"chrus-chong"},"content":"deactivate CommandResult","lastModifiedDate":"2021-10-29"},{"lineNumber":67,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":68,"author":{"gitId":"chrus-chong"},"content":"GroupEditNameCommand --\u003e LogicManager : result","lastModifiedDate":"2021-10-29"},{"lineNumber":69,"author":{"gitId":"chrus-chong"},"content":"deactivate GroupEditNameCommand","lastModifiedDate":"2021-10-29"},{"lineNumber":70,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":71,"author":{"gitId":"chrus-chong"},"content":"[\u003c--LogicManager","lastModifiedDate":"2021-10-29"},{"lineNumber":72,"author":{"gitId":"chrus-chong"},"content":"deactivate LogicManager","lastModifiedDate":"2021-10-29"},{"lineNumber":73,"author":{"gitId":"chrus-chong"},"content":"@enduml","lastModifiedDate":"2021-10-29"}],"authorContributionMap":{"chrus-chong":73}},{"path":"docs/diagrams/GroupRemoveContactSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"chrus-chong"},"content":"@startuml","lastModifiedDate":"2021-10-29"},{"lineNumber":2,"author":{"gitId":"chrus-chong"},"content":"!include style.puml","lastModifiedDate":"2021-10-29"},{"lineNumber":3,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":4,"author":{"gitId":"chrus-chong"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2021-10-29"},{"lineNumber":5,"author":{"gitId":"chrus-chong"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2021-10-29"},{"lineNumber":6,"author":{"gitId":"chrus-chong"},"content":"participant \":AweParser\" as AweParser LOGIC_COLOR","lastModifiedDate":"2021-10-29"},{"lineNumber":7,"author":{"gitId":"chrus-chong"},"content":"participant \":GroupRemoveContactCommand\" as GroupRemoveContactCommand LOGIC_COLOR","lastModifiedDate":"2021-10-29"},{"lineNumber":8,"author":{"gitId":"chrus-chong"},"content":"participant \"oldGroup:Group\" as Group LOGIC_COLOR","lastModifiedDate":"2021-10-29"},{"lineNumber":9,"author":{"gitId":"chrus-chong"},"content":"participant \":CommandResult\" as CommandResult LOGIC_COLOR","lastModifiedDate":"2021-10-29"},{"lineNumber":10,"author":{"gitId":"chrus-chong"},"content":"end box","lastModifiedDate":"2021-10-29"},{"lineNumber":11,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":12,"author":{"gitId":"chrus-chong"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2021-10-29"},{"lineNumber":13,"author":{"gitId":"chrus-chong"},"content":"participant \":Model\" as Model MODEL_COLOR","lastModifiedDate":"2021-10-29"},{"lineNumber":14,"author":{"gitId":"chrus-chong"},"content":"end box","lastModifiedDate":"2021-10-29"},{"lineNumber":15,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":16,"author":{"gitId":"chrus-chong"},"content":"[-\u003e LogicManager : execute(\"groupremovecontact gn/Bali n/Tom\")","lastModifiedDate":"2021-10-29"},{"lineNumber":17,"author":{"gitId":"chrus-chong"},"content":"activate LogicManager","lastModifiedDate":"2021-10-29"},{"lineNumber":18,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":19,"author":{"gitId":"chrus-chong"},"content":"LogicManager -\u003e AweParser : parseCommand(\"groupremovecontact gn/Bali n/Tom\")","lastModifiedDate":"2021-10-29"},{"lineNumber":20,"author":{"gitId":"chrus-chong"},"content":"activate AweParser","lastModifiedDate":"2021-10-29"},{"lineNumber":21,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":22,"author":{"gitId":"chrus-chong"},"content":"/\u0027Clarify with tutor if there is a need to display GroupRemoveContactCommandParser class within the ref\u0027/","lastModifiedDate":"2021-10-29"},{"lineNumber":23,"author":{"gitId":"chrus-chong"},"content":"note right","lastModifiedDate":"2021-10-29"},{"lineNumber":24,"author":{"gitId":"chrus-chong"},"content":"Same as CreateGroupCommand","lastModifiedDate":"2021-10-29"},{"lineNumber":25,"author":{"gitId":"chrus-chong"},"content":"ref frame except with","lastModifiedDate":"2021-10-29"},{"lineNumber":26,"author":{"gitId":"chrus-chong"},"content":"GroupRemoveContactCommand","lastModifiedDate":"2021-10-29"},{"lineNumber":27,"author":{"gitId":"chrus-chong"},"content":"and GroupRemoveContactCommandParser","lastModifiedDate":"2021-10-29"},{"lineNumber":28,"author":{"gitId":"chrus-chong"},"content":"end note","lastModifiedDate":"2021-10-29"},{"lineNumber":29,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":30,"author":{"gitId":"chrus-chong"},"content":"group sd get groupRemoveContactCommand","lastModifiedDate":"2021-10-29"},{"lineNumber":31,"author":{"gitId":"chrus-chong"},"content":"    create GroupRemoveContactCommand","lastModifiedDate":"2021-10-29"},{"lineNumber":32,"author":{"gitId":"chrus-chong"},"content":"    AweParser -\u003e GroupRemoveContactCommand","lastModifiedDate":"2021-10-29"},{"lineNumber":33,"author":{"gitId":"chrus-chong"},"content":"    activate GroupRemoveContactCommand","lastModifiedDate":"2021-10-29"},{"lineNumber":34,"author":{"gitId":"chrus-chong"},"content":"    GroupRemoveContactCommand --\u003e AweParser","lastModifiedDate":"2021-10-29"},{"lineNumber":35,"author":{"gitId":"chrus-chong"},"content":"    deactivate GroupRemoveContactCommand","lastModifiedDate":"2021-10-29"},{"lineNumber":36,"author":{"gitId":"chrus-chong"},"content":"end group","lastModifiedDate":"2021-10-29"},{"lineNumber":37,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":38,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":39,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":40,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":41,"author":{"gitId":"chrus-chong"},"content":"AweParser --\u003e LogicManager : groupRemoveContactCommand","lastModifiedDate":"2021-10-29"},{"lineNumber":42,"author":{"gitId":"chrus-chong"},"content":"deactivate AweParser","lastModifiedDate":"2021-10-29"},{"lineNumber":43,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":44,"author":{"gitId":"chrus-chong"},"content":"LogicManager -\u003e GroupRemoveContactCommand : execute()","lastModifiedDate":"2021-10-29"},{"lineNumber":45,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":46,"author":{"gitId":"chrus-chong"},"content":"loop for every member to be removed","lastModifiedDate":"2021-10-29"},{"lineNumber":47,"author":{"gitId":"chrus-chong"},"content":"    activate GroupRemoveContactCommand","lastModifiedDate":"2021-10-29"},{"lineNumber":48,"author":{"gitId":"chrus-chong"},"content":"    GroupRemoveContactCommand -\u003e Group : removeMember(member)","lastModifiedDate":"2021-10-29"},{"lineNumber":49,"author":{"gitId":"chrus-chong"},"content":"    activate Group","lastModifiedDate":"2021-10-29"},{"lineNumber":50,"author":{"gitId":"chrus-chong"},"content":"    Group --\u003e GroupRemoveContactCommand : newGroup","lastModifiedDate":"2021-10-29"},{"lineNumber":51,"author":{"gitId":"chrus-chong"},"content":"    deactivate Group","lastModifiedDate":"2021-10-29"},{"lineNumber":52,"author":{"gitId":"chrus-chong"},"content":"end","lastModifiedDate":"2021-10-29"},{"lineNumber":53,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":54,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":55,"author":{"gitId":"chrus-chong"},"content":"\u0027Hidden arrow to position the destroy marker below the end of the activation bar.","lastModifiedDate":"2021-10-29"},{"lineNumber":56,"author":{"gitId":"chrus-chong"},"content":"Group -[hidden]-\u003e AweParser","lastModifiedDate":"2021-10-29"},{"lineNumber":57,"author":{"gitId":"chrus-chong"},"content":"destroy Group","lastModifiedDate":"2021-10-29"},{"lineNumber":58,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":59,"author":{"gitId":"chrus-chong"},"content":"GroupRemoveContactCommand -\u003e Model : setGroup(oldGroup, newGroup)","lastModifiedDate":"2021-10-29"},{"lineNumber":60,"author":{"gitId":"chrus-chong"},"content":"activate Model","lastModifiedDate":"2021-10-29"},{"lineNumber":61,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":62,"author":{"gitId":"chrus-chong"},"content":"Model --\u003e GroupRemoveContactCommand","lastModifiedDate":"2021-10-29"},{"lineNumber":63,"author":{"gitId":"chrus-chong"},"content":"deactivate Model","lastModifiedDate":"2021-10-29"},{"lineNumber":64,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":65,"author":{"gitId":"chrus-chong"},"content":"create CommandResult","lastModifiedDate":"2021-10-29"},{"lineNumber":66,"author":{"gitId":"chrus-chong"},"content":"GroupRemoveContactCommand -\u003e CommandResult","lastModifiedDate":"2021-10-29"},{"lineNumber":67,"author":{"gitId":"chrus-chong"},"content":"activate CommandResult","lastModifiedDate":"2021-10-29"},{"lineNumber":68,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":69,"author":{"gitId":"chrus-chong"},"content":"CommandResult --\u003e GroupRemoveContactCommand : result","lastModifiedDate":"2021-10-29"},{"lineNumber":70,"author":{"gitId":"chrus-chong"},"content":"deactivate CommandResult","lastModifiedDate":"2021-10-29"},{"lineNumber":71,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":72,"author":{"gitId":"chrus-chong"},"content":"GroupRemoveContactCommand --\u003e LogicManager : result","lastModifiedDate":"2021-10-29"},{"lineNumber":73,"author":{"gitId":"chrus-chong"},"content":"deactivate GroupRemoveContactCommand","lastModifiedDate":"2021-10-29"},{"lineNumber":74,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":75,"author":{"gitId":"chrus-chong"},"content":"[\u003c--LogicManager","lastModifiedDate":"2021-10-29"},{"lineNumber":76,"author":{"gitId":"chrus-chong"},"content":"deactivate LogicManager","lastModifiedDate":"2021-10-29"},{"lineNumber":77,"author":{"gitId":"chrus-chong"},"content":"@enduml","lastModifiedDate":"2021-10-29"}],"authorContributionMap":{"chrus-chong":77}},{"path":"docs/diagrams/GroupRemoveTagSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"chrus-chong"},"content":"@startuml","lastModifiedDate":"2021-10-29"},{"lineNumber":2,"author":{"gitId":"chrus-chong"},"content":"!include style.puml","lastModifiedDate":"2021-10-29"},{"lineNumber":3,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":4,"author":{"gitId":"chrus-chong"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2021-10-29"},{"lineNumber":5,"author":{"gitId":"chrus-chong"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2021-10-29"},{"lineNumber":6,"author":{"gitId":"chrus-chong"},"content":"participant \":AweParser\" as AweParser LOGIC_COLOR","lastModifiedDate":"2021-10-29"},{"lineNumber":7,"author":{"gitId":"chrus-chong"},"content":"participant \":GroupRemoveTagCommand\" as GroupRemoveTagCommand LOGIC_COLOR","lastModifiedDate":"2021-10-29"},{"lineNumber":8,"author":{"gitId":"chrus-chong"},"content":"participant \"newGroup:Group\" as Group LOGIC_COLOR","lastModifiedDate":"2021-10-29"},{"lineNumber":9,"author":{"gitId":"chrus-chong"},"content":"participant \":CommandResult\" as CommandResult LOGIC_COLOR","lastModifiedDate":"2021-10-29"},{"lineNumber":10,"author":{"gitId":"chrus-chong"},"content":"end box","lastModifiedDate":"2021-10-29"},{"lineNumber":11,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":12,"author":{"gitId":"chrus-chong"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2021-10-29"},{"lineNumber":13,"author":{"gitId":"chrus-chong"},"content":"participant \":Model\" as Model MODEL_COLOR","lastModifiedDate":"2021-10-29"},{"lineNumber":14,"author":{"gitId":"chrus-chong"},"content":"end box","lastModifiedDate":"2021-10-29"},{"lineNumber":15,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":16,"author":{"gitId":"chrus-chong"},"content":"[-\u003e LogicManager : execute(\"groupremovetag gn/Bali t/3day\")","lastModifiedDate":"2021-10-29"},{"lineNumber":17,"author":{"gitId":"chrus-chong"},"content":"activate LogicManager","lastModifiedDate":"2021-10-29"},{"lineNumber":18,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":19,"author":{"gitId":"chrus-chong"},"content":"LogicManager -\u003e AweParser : parseCommand(\"groupremovetag gn/Bali t/3day\")","lastModifiedDate":"2021-10-29"},{"lineNumber":20,"author":{"gitId":"chrus-chong"},"content":"activate AweParser","lastModifiedDate":"2021-10-29"},{"lineNumber":21,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":22,"author":{"gitId":"chrus-chong"},"content":"/\u0027Clarify with tutor if there is a need to display GroupRemoveTagCommandParser class within the ref\u0027/","lastModifiedDate":"2021-10-29"},{"lineNumber":23,"author":{"gitId":"chrus-chong"},"content":"note right","lastModifiedDate":"2021-10-29"},{"lineNumber":24,"author":{"gitId":"chrus-chong"},"content":"Same as CreateGroupCommand","lastModifiedDate":"2021-10-29"},{"lineNumber":25,"author":{"gitId":"chrus-chong"},"content":"ref frame except with","lastModifiedDate":"2021-10-29"},{"lineNumber":26,"author":{"gitId":"chrus-chong"},"content":"GroupRemoveTagCommand","lastModifiedDate":"2021-10-29"},{"lineNumber":27,"author":{"gitId":"chrus-chong"},"content":"and GroupRemoveTagCommandParser","lastModifiedDate":"2021-10-29"},{"lineNumber":28,"author":{"gitId":"chrus-chong"},"content":"end note","lastModifiedDate":"2021-10-29"},{"lineNumber":29,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":30,"author":{"gitId":"chrus-chong"},"content":"group sd get groupRemoveTagCommand","lastModifiedDate":"2021-10-29"},{"lineNumber":31,"author":{"gitId":"chrus-chong"},"content":"    create GroupRemoveTagCommand","lastModifiedDate":"2021-10-29"},{"lineNumber":32,"author":{"gitId":"chrus-chong"},"content":"    AweParser -\u003e GroupRemoveTagCommand","lastModifiedDate":"2021-10-29"},{"lineNumber":33,"author":{"gitId":"chrus-chong"},"content":"    activate GroupRemoveTagCommand","lastModifiedDate":"2021-10-29"},{"lineNumber":34,"author":{"gitId":"chrus-chong"},"content":"    GroupRemoveTagCommand --\u003e AweParser","lastModifiedDate":"2021-10-29"},{"lineNumber":35,"author":{"gitId":"chrus-chong"},"content":"    deactivate GroupRemoveTagCommand","lastModifiedDate":"2021-10-29"},{"lineNumber":36,"author":{"gitId":"chrus-chong"},"content":"end group","lastModifiedDate":"2021-10-29"},{"lineNumber":37,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":38,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":39,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":40,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":41,"author":{"gitId":"chrus-chong"},"content":"AweParser --\u003e LogicManager : groupRemoveTagCommand","lastModifiedDate":"2021-10-29"},{"lineNumber":42,"author":{"gitId":"chrus-chong"},"content":"deactivate AweParser","lastModifiedDate":"2021-10-29"},{"lineNumber":43,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":44,"author":{"gitId":"chrus-chong"},"content":"LogicManager -\u003e GroupRemoveTagCommand : execute()","lastModifiedDate":"2021-10-29"},{"lineNumber":45,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":46,"author":{"gitId":"chrus-chong"},"content":"loop for every tag to be removed","lastModifiedDate":"2021-10-29"},{"lineNumber":47,"author":{"gitId":"chrus-chong"},"content":"    activate GroupRemoveTagCommand","lastModifiedDate":"2021-10-29"},{"lineNumber":48,"author":{"gitId":"chrus-chong"},"content":"    GroupRemoveTagCommand -\u003e Group : removeTag(tag)","lastModifiedDate":"2021-10-29"},{"lineNumber":49,"author":{"gitId":"chrus-chong"},"content":"    activate Group","lastModifiedDate":"2021-10-29"},{"lineNumber":50,"author":{"gitId":"chrus-chong"},"content":"    Group --\u003e GroupRemoveTagCommand : newGroup","lastModifiedDate":"2021-10-29"},{"lineNumber":51,"author":{"gitId":"chrus-chong"},"content":"    deactivate Group","lastModifiedDate":"2021-10-29"},{"lineNumber":52,"author":{"gitId":"chrus-chong"},"content":"end","lastModifiedDate":"2021-10-29"},{"lineNumber":53,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":54,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":55,"author":{"gitId":"chrus-chong"},"content":"\u0027Hidden arrow to position the destroy marker below the end of the activation bar.","lastModifiedDate":"2021-10-29"},{"lineNumber":56,"author":{"gitId":"chrus-chong"},"content":"Group -[hidden]-\u003e AweParser","lastModifiedDate":"2021-10-29"},{"lineNumber":57,"author":{"gitId":"chrus-chong"},"content":"destroy Group","lastModifiedDate":"2021-10-29"},{"lineNumber":58,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":59,"author":{"gitId":"chrus-chong"},"content":"GroupRemoveTagCommand -\u003e Model : setGroup(oldGroup, newGroup)","lastModifiedDate":"2021-10-29"},{"lineNumber":60,"author":{"gitId":"chrus-chong"},"content":"activate Model","lastModifiedDate":"2021-10-29"},{"lineNumber":61,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":62,"author":{"gitId":"chrus-chong"},"content":"Model --\u003e GroupRemoveTagCommand","lastModifiedDate":"2021-10-29"},{"lineNumber":63,"author":{"gitId":"chrus-chong"},"content":"deactivate Model","lastModifiedDate":"2021-10-29"},{"lineNumber":64,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":65,"author":{"gitId":"chrus-chong"},"content":"create CommandResult","lastModifiedDate":"2021-10-29"},{"lineNumber":66,"author":{"gitId":"chrus-chong"},"content":"GroupRemoveTagCommand -\u003e CommandResult","lastModifiedDate":"2021-10-29"},{"lineNumber":67,"author":{"gitId":"chrus-chong"},"content":"activate CommandResult","lastModifiedDate":"2021-10-29"},{"lineNumber":68,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":69,"author":{"gitId":"chrus-chong"},"content":"CommandResult --\u003e GroupRemoveTagCommand : result","lastModifiedDate":"2021-10-29"},{"lineNumber":70,"author":{"gitId":"chrus-chong"},"content":"deactivate CommandResult","lastModifiedDate":"2021-10-29"},{"lineNumber":71,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":72,"author":{"gitId":"chrus-chong"},"content":"GroupRemoveTagCommand --\u003e LogicManager : result","lastModifiedDate":"2021-10-29"},{"lineNumber":73,"author":{"gitId":"chrus-chong"},"content":"deactivate GroupRemoveTagCommand","lastModifiedDate":"2021-10-29"},{"lineNumber":74,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":75,"author":{"gitId":"chrus-chong"},"content":"[\u003c--LogicManager","lastModifiedDate":"2021-10-29"},{"lineNumber":76,"author":{"gitId":"chrus-chong"},"content":"deactivate LogicManager","lastModifiedDate":"2021-10-29"},{"lineNumber":77,"author":{"gitId":"chrus-chong"},"content":"@enduml","lastModifiedDate":"2021-10-29"}],"authorContributionMap":{"chrus-chong":77}},{"path":"docs/diagrams/LogicClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam arrowColor LOGIC_COLOR_T4","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam classBackgroundColor LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"package Logic {","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":9,"author":{"gitId":"marcuspeh"},"content":"Class AweParser","lastModifiedDate":"2021-10-22"},{"lineNumber":10,"author":{"gitId":"-"},"content":"Class XYZCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"Class CommandResult","lastModifiedDate":"2019-07-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"Class \"{abstract}\\nCommand\" as Command","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"Interface Logic \u003c\u003cInterface\u003e\u003e","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"Class LogicManager","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"package Model{","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"Class HiddenModel #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":23,"author":{"gitId":"-"},"content":"package Storage{","lastModifiedDate":"2021-03-30"},{"lineNumber":24,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-03-30"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-30"},{"lineNumber":26,"author":{"gitId":"-"},"content":"Class HiddenOutside #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":27,"author":{"gitId":"-"},"content":"HiddenOutside ..\u003e Logic","lastModifiedDate":"2019-07-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"LogicManager .right.|\u003e Logic","lastModifiedDate":"2021-07-31"},{"lineNumber":30,"author":{"gitId":"marcuspeh"},"content":"LogicManager -right-\u003e\"1\" AweParser","lastModifiedDate":"2021-10-22"},{"lineNumber":31,"author":{"gitId":"marcuspeh"},"content":"AweParser ..\u003e XYZCommand : creates \u003e","lastModifiedDate":"2021-10-22"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"XYZCommand -up-|\u003e Command","lastModifiedDate":"2019-07-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"LogicManager .left.\u003e Command : executes \u003e","lastModifiedDate":"2019-07-30"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":36,"author":{"gitId":"-"},"content":"LogicManager --\u003e Model","lastModifiedDate":"2019-07-03"},{"lineNumber":37,"author":{"gitId":"-"},"content":"LogicManager --\u003e Storage","lastModifiedDate":"2021-03-30"},{"lineNumber":38,"author":{"gitId":"-"},"content":"Storage --[hidden] Model","lastModifiedDate":"2021-03-30"},{"lineNumber":39,"author":{"gitId":"-"},"content":"Command .[hidden]up.\u003e Storage","lastModifiedDate":"2021-03-30"},{"lineNumber":40,"author":{"gitId":"-"},"content":"Command .right.\u003e Model","lastModifiedDate":"2019-07-03"},{"lineNumber":41,"author":{"gitId":"-"},"content":"note right of XYZCommand: XYZCommand \u003d AddCommand, \\nFindCommand, etc","lastModifiedDate":"2019-07-03"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":43,"author":{"gitId":"-"},"content":"Logic ..\u003e CommandResult","lastModifiedDate":"2019-07-03"},{"lineNumber":44,"author":{"gitId":"-"},"content":"LogicManager .down.\u003e CommandResult","lastModifiedDate":"2019-07-03"},{"lineNumber":45,"author":{"gitId":"-"},"content":"Command .up.\u003e CommandResult : produces \u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":46,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"marcuspeh":3,"-":43}},{"path":"docs/diagrams/ModelClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam arrowColor MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam classBackgroundColor MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Package Model \u003c\u003cRectangle\u003e\u003e{","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"Interface ReadOnlyAddressBook \u003c\u003cInterface\u003e\u003e","lastModifiedDate":"2019-07-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"Interface ReadOnlyUserPrefs \u003c\u003cInterface\u003e\u003e","lastModifiedDate":"2021-05-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"Interface Model \u003c\u003cInterface\u003e\u003e","lastModifiedDate":"2019-07-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"Class AddressBook","lastModifiedDate":"2019-07-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"Class ReadOnlyAddressBook","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"Class Model","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"Class ModelManager","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"Class UserPrefs","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"Class ReadOnlyUserPrefs","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"marcuspeh"},"content":"Class UniquePersonList","lastModifiedDate":"2021-10-21"},{"lineNumber":18,"author":{"gitId":"marcuspeh"},"content":"Class UniqueGroupList","lastModifiedDate":"2021-10-21"},{"lineNumber":19,"author":{"gitId":"marcuspeh"},"content":"Class ExpenseList","lastModifiedDate":"2021-10-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":21,"author":{"gitId":"marcuspeh"},"content":"Package Person \u003c\u003cRectangle\u003e\u003e{","lastModifiedDate":"2021-10-21"},{"lineNumber":22,"author":{"gitId":"marcuspeh"},"content":"}","lastModifiedDate":"2021-10-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":24,"author":{"gitId":"marcuspeh"},"content":"Package Group \u003c\u003cRectangle\u003e\u003e{","lastModifiedDate":"2021-10-21"},{"lineNumber":25,"author":{"gitId":"marcuspeh"},"content":"}","lastModifiedDate":"2021-10-21"},{"lineNumber":26,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":27,"author":{"gitId":"marcuspeh"},"content":"Package Expense \u003c\u003cRectangle\u003e\u003e{","lastModifiedDate":"2021-10-21"},{"lineNumber":28,"author":{"gitId":"marcuspeh"},"content":"}","lastModifiedDate":"2021-10-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":30,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":32,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":33,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"Class HiddenOutside #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":35,"author":{"gitId":"-"},"content":"HiddenOutside ..\u003e Model","lastModifiedDate":"2019-07-03"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":37,"author":{"gitId":"marcuspeh"},"content":"AddressBook ..|\u003e ReadOnlyAddressBook","lastModifiedDate":"2021-10-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":39,"author":{"gitId":"marcuspeh"},"content":"ModelManager ..|\u003e Model","lastModifiedDate":"2021-10-21"},{"lineNumber":40,"author":{"gitId":"marcuspeh"},"content":"Model ..\u003e ReadOnlyUserPrefs","lastModifiedDate":"2021-10-21"},{"lineNumber":41,"author":{"gitId":"marcuspeh"},"content":"Model ..\u003e ReadOnlyAddressBook","lastModifiedDate":"2021-10-21"},{"lineNumber":42,"author":{"gitId":"marcuspeh"},"content":"ModelManager --\u003e \"1\" AddressBook","lastModifiedDate":"2021-10-21"},{"lineNumber":43,"author":{"gitId":"marcuspeh"},"content":"ModelManager --\u003e \"1\" UserPrefs","lastModifiedDate":"2021-10-21"},{"lineNumber":44,"author":{"gitId":"marcuspeh"},"content":"UserPrefs ..|\u003e ReadOnlyUserPrefs","lastModifiedDate":"2021-10-21"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":46,"author":{"gitId":"-"},"content":"AddressBook *--\u003e \"1\" UniquePersonList","lastModifiedDate":"2019-07-30"},{"lineNumber":47,"author":{"gitId":"-"},"content":"UniquePersonList --\u003e \"~* all\" Person","lastModifiedDate":"2021-07-31"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":49,"author":{"gitId":"marcuspeh"},"content":"AddressBook *--\u003e \"1\" UniqueGroupList","lastModifiedDate":"2021-10-21"},{"lineNumber":50,"author":{"gitId":"marcuspeh"},"content":"UniqueGroupList -right-\u003e \"~* all\" Group","lastModifiedDate":"2021-10-21"},{"lineNumber":51,"author":{"gitId":"marcuspeh"},"content":"Group --\u003e \"1..* members\" Person","lastModifiedDate":"2021-10-21"},{"lineNumber":52,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":53,"author":{"gitId":"marcuspeh"},"content":"AddressBook *--\u003e \"1\" ExpenseList","lastModifiedDate":"2021-10-21"},{"lineNumber":54,"author":{"gitId":"marcuspeh"},"content":"ExpenseList --\u003e \"~* all\" Expense","lastModifiedDate":"2021-10-21"},{"lineNumber":55,"author":{"gitId":"marcuspeh"},"content":"Expense ---\u003e \"1 payer\" Person","lastModifiedDate":"2021-10-21"},{"lineNumber":56,"author":{"gitId":"marcuspeh"},"content":"Expense -right--\u003e \"1..* involved\" Person","lastModifiedDate":"2021-10-21"},{"lineNumber":57,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":59,"author":{"gitId":"-"},"content":"ModelManager --\u003e\"~* filtered\" Person","lastModifiedDate":"2021-07-31"},{"lineNumber":60,"author":{"gitId":"marcuspeh"},"content":"ModelManager --\u003e\"~* filtered\" Group","lastModifiedDate":"2021-10-21"},{"lineNumber":61,"author":{"gitId":"marcuspeh"},"content":"ModelManager --\u003e\"~* filtered\" Expense","lastModifiedDate":"2021-10-21"},{"lineNumber":62,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"marcuspeh":30,"-":32}},{"path":"docs/diagrams/ParserClasses.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2021-07-31"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2021-07-31"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2021-07-31"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam arrowColor LOGIC_COLOR_T4","lastModifiedDate":"2021-07-31"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam classBackgroundColor LOGIC_COLOR","lastModifiedDate":"2021-07-31"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Class \"{abstract}\\nCommand\" as Command","lastModifiedDate":"2021-07-31"},{"lineNumber":8,"author":{"gitId":"-"},"content":"Class XYZCommand","lastModifiedDate":"2021-07-31"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":10,"author":{"gitId":"-"},"content":"package \"Parser classes\"{","lastModifiedDate":"2021-07-31"},{"lineNumber":11,"author":{"gitId":"-"},"content":"Interface Parser \u003c\u003cInterface\u003e\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":12,"author":{"gitId":"marcuspeh"},"content":"Class AweParser","lastModifiedDate":"2021-10-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"Class XYZCommandParser","lastModifiedDate":"2021-07-31"},{"lineNumber":14,"author":{"gitId":"-"},"content":"Class CliSyntax","lastModifiedDate":"2021-07-31"},{"lineNumber":15,"author":{"gitId":"-"},"content":"Class ParserUtil","lastModifiedDate":"2021-07-31"},{"lineNumber":16,"author":{"gitId":"-"},"content":"Class ArgumentMultimap","lastModifiedDate":"2021-07-31"},{"lineNumber":17,"author":{"gitId":"-"},"content":"Class ArgumentTokenizer","lastModifiedDate":"2021-07-31"},{"lineNumber":18,"author":{"gitId":"-"},"content":"Class Prefix","lastModifiedDate":"2021-07-31"},{"lineNumber":19,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-07-31"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":21,"author":{"gitId":"-"},"content":"Class HiddenOutside #FFFFFF","lastModifiedDate":"2021-07-31"},{"lineNumber":22,"author":{"gitId":"marcuspeh"},"content":"HiddenOutside ..\u003e AweParser","lastModifiedDate":"2021-10-22"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":24,"author":{"gitId":"marcuspeh"},"content":"AweParser .down.\u003e XYZCommandParser: creates \u003e","lastModifiedDate":"2021-10-22"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":26,"author":{"gitId":"-"},"content":"XYZCommandParser ..\u003e XYZCommand : creates \u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":27,"author":{"gitId":"marcuspeh"},"content":"AweParser ..\u003e Command : returns \u003e","lastModifiedDate":"2021-10-22"},{"lineNumber":28,"author":{"gitId":"-"},"content":"XYZCommandParser .up.|\u003e Parser","lastModifiedDate":"2021-07-31"},{"lineNumber":29,"author":{"gitId":"-"},"content":"XYZCommandParser ..\u003e ArgumentMultimap","lastModifiedDate":"2021-07-31"},{"lineNumber":30,"author":{"gitId":"-"},"content":"XYZCommandParser ..\u003e ArgumentTokenizer","lastModifiedDate":"2021-07-31"},{"lineNumber":31,"author":{"gitId":"-"},"content":"ArgumentTokenizer .left.\u003e ArgumentMultimap","lastModifiedDate":"2021-07-31"},{"lineNumber":32,"author":{"gitId":"-"},"content":"XYZCommandParser ..\u003e CliSyntax","lastModifiedDate":"2021-07-31"},{"lineNumber":33,"author":{"gitId":"-"},"content":"CliSyntax ..\u003e Prefix","lastModifiedDate":"2021-07-31"},{"lineNumber":34,"author":{"gitId":"-"},"content":"XYZCommandParser ..\u003e ParserUtil","lastModifiedDate":"2021-07-31"},{"lineNumber":35,"author":{"gitId":"-"},"content":"ParserUtil .down.\u003e Prefix","lastModifiedDate":"2021-07-31"},{"lineNumber":36,"author":{"gitId":"-"},"content":"ArgumentTokenizer .down.\u003e Prefix","lastModifiedDate":"2021-07-31"},{"lineNumber":37,"author":{"gitId":"-"},"content":"XYZCommand -up-|\u003e Command","lastModifiedDate":"2021-07-31"},{"lineNumber":38,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2021-07-31"}],"authorContributionMap":{"marcuspeh":4,"-":34}},{"path":"docs/diagrams/PaymentClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"ramapriyan912001"},"content":"@startuml","lastModifiedDate":"2021-10-29"},{"lineNumber":2,"author":{"gitId":"ramapriyan912001"},"content":"!include style.puml","lastModifiedDate":"2021-10-29"},{"lineNumber":3,"author":{"gitId":"ramapriyan912001"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2021-10-29"},{"lineNumber":4,"author":{"gitId":"ramapriyan912001"},"content":"skinparam arrowColor MODEL_COLOR","lastModifiedDate":"2021-10-29"},{"lineNumber":5,"author":{"gitId":"ramapriyan912001"},"content":"skinparam classBackgroundColor MODEL_COLOR","lastModifiedDate":"2021-10-29"},{"lineNumber":6,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":7,"author":{"gitId":"ramapriyan912001"},"content":"Package Payment \u003c\u003cRectangle\u003e\u003e{","lastModifiedDate":"2021-10-29"},{"lineNumber":8,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":9,"author":{"gitId":"ramapriyan912001"},"content":"}","lastModifiedDate":"2021-10-29"},{"lineNumber":10,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":11,"author":{"gitId":"ramapriyan912001"},"content":"Payment *--\u003e \"payee\" Person","lastModifiedDate":"2021-10-29"},{"lineNumber":12,"author":{"gitId":"ramapriyan912001"},"content":"Payment *--\u003e \"payer\" Person","lastModifiedDate":"2021-10-29"},{"lineNumber":13,"author":{"gitId":"ramapriyan912001"},"content":"Payment *--\u003e \"1 cost\" Cost","lastModifiedDate":"2021-10-29"},{"lineNumber":14,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":15,"author":{"gitId":"ramapriyan912001"},"content":"@enduml","lastModifiedDate":"2021-10-29"}],"authorContributionMap":{"ramapriyan912001":15}},{"path":"docs/diagrams/PersonClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"marcuspeh"},"content":"@startuml","lastModifiedDate":"2021-10-21"},{"lineNumber":2,"author":{"gitId":"marcuspeh"},"content":"!include style.puml","lastModifiedDate":"2021-10-21"},{"lineNumber":3,"author":{"gitId":"marcuspeh"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2021-10-21"},{"lineNumber":4,"author":{"gitId":"marcuspeh"},"content":"skinparam arrowColor MODEL_COLOR","lastModifiedDate":"2021-10-21"},{"lineNumber":5,"author":{"gitId":"marcuspeh"},"content":"skinparam classBackgroundColor MODEL_COLOR","lastModifiedDate":"2021-10-21"},{"lineNumber":6,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":7,"author":{"gitId":"marcuspeh"},"content":"Package Person \u003c\u003cRectangle\u003e\u003e{","lastModifiedDate":"2021-10-21"},{"lineNumber":8,"author":{"gitId":"marcuspeh"},"content":"    Class Person","lastModifiedDate":"2021-10-21"},{"lineNumber":9,"author":{"gitId":"marcuspeh"},"content":"    Class Name","lastModifiedDate":"2021-10-21"},{"lineNumber":10,"author":{"gitId":"marcuspeh"},"content":"    Class Phone","lastModifiedDate":"2021-10-21"},{"lineNumber":11,"author":{"gitId":"marcuspeh"},"content":"}","lastModifiedDate":"2021-10-21"},{"lineNumber":12,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":13,"author":{"gitId":"marcuspeh"},"content":"Package Tag \u003c\u003cRectangle\u003e\u003e{","lastModifiedDate":"2021-10-21"},{"lineNumber":14,"author":{"gitId":"marcuspeh"},"content":"Class Tag","lastModifiedDate":"2021-10-21"},{"lineNumber":15,"author":{"gitId":"marcuspeh"},"content":"}","lastModifiedDate":"2021-10-21"},{"lineNumber":16,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":17,"author":{"gitId":"marcuspeh"},"content":"Class HiddenOutside #FFFFFF","lastModifiedDate":"2021-10-21"},{"lineNumber":18,"author":{"gitId":"marcuspeh"},"content":"HiddenOutside --\u003e Person","lastModifiedDate":"2021-10-21"},{"lineNumber":19,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":20,"author":{"gitId":"marcuspeh"},"content":"Person *--\u003e Name","lastModifiedDate":"2021-10-21"},{"lineNumber":21,"author":{"gitId":"marcuspeh"},"content":"Person *--\u003e Phone","lastModifiedDate":"2021-10-21"},{"lineNumber":22,"author":{"gitId":"marcuspeh"},"content":"Person *--\u003e \"*\" Tag","lastModifiedDate":"2021-10-21"},{"lineNumber":23,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":24,"author":{"gitId":"marcuspeh"},"content":"Name -[hidden]right-\u003e Phone","lastModifiedDate":"2021-10-21"},{"lineNumber":25,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":26,"author":{"gitId":"marcuspeh"},"content":"@enduml","lastModifiedDate":"2021-10-21"}],"authorContributionMap":{"marcuspeh":26}},{"path":"docs/diagrams/UiClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam arrowColor UI_COLOR_T4","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam classBackgroundColor UI_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"package UI \u003c\u003cRectangle\u003e\u003e{","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"Interface Ui \u003c\u003cInterface\u003e\u003e","lastModifiedDate":"2019-07-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"Class \"{abstract}\\nUiPart\" as UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"Class UiManager","lastModifiedDate":"2019-07-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"Class MainWindow","lastModifiedDate":"2019-07-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"Class HelpWindow","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"Class ResultDisplay","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"Class StatusBarFooter","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"Class CommandBox","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"marcuspeh"},"content":"package NavigationButton \u003c\u003cRectangle\u003e\u003e {","lastModifiedDate":"2021-10-20"},{"lineNumber":17,"author":{"gitId":"marcuspeh"},"content":"}","lastModifiedDate":"2021-10-20"},{"lineNumber":18,"author":{"gitId":"marcuspeh"},"content":"package ViewPanel \u003c\u003cRectangle\u003e\u003e {","lastModifiedDate":"2021-10-20"},{"lineNumber":19,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"package Logic \u003c\u003cRectangle\u003e\u003e {","lastModifiedDate":"2019-07-03"},{"lineNumber":23,"author":{"gitId":"-"},"content":"Class HiddenLogic #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":24,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"Class HiddenOutside #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":27,"author":{"gitId":"-"},"content":"HiddenOutside ..\u003e Ui","lastModifiedDate":"2019-07-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"UiManager .left.|\u003e Ui","lastModifiedDate":"2019-07-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"UiManager -down-\u003e \"1\" MainWindow","lastModifiedDate":"2021-07-31"},{"lineNumber":31,"author":{"gitId":"-"},"content":"MainWindow *-down-\u003e  \"1\" CommandBox","lastModifiedDate":"2021-07-31"},{"lineNumber":32,"author":{"gitId":"-"},"content":"MainWindow *-down-\u003e \"1\" ResultDisplay","lastModifiedDate":"2021-07-31"},{"lineNumber":33,"author":{"gitId":"-"},"content":"MainWindow *-down-\u003e \"1\" StatusBarFooter","lastModifiedDate":"2021-07-31"},{"lineNumber":34,"author":{"gitId":"marcuspeh"},"content":"MainWindow *-down-\u003e \"1\" NavigationButton","lastModifiedDate":"2021-10-20"},{"lineNumber":35,"author":{"gitId":"marcuspeh"},"content":"MainWindow *-down-\u003e \"1\" ViewPanel","lastModifiedDate":"2021-10-20"},{"lineNumber":36,"author":{"gitId":"-"},"content":"MainWindow --\u003e \"0..1\" HelpWindow","lastModifiedDate":"2021-07-31"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":38,"author":{"gitId":"-"},"content":"MainWindow -left-|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":40,"author":{"gitId":"marcuspeh"},"content":"NavigationButton -left-\u003e ViewPanel","lastModifiedDate":"2021-10-20"},{"lineNumber":41,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":42,"author":{"gitId":"-"},"content":"ResultDisplay --|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":43,"author":{"gitId":"-"},"content":"CommandBox --|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":44,"author":{"gitId":"-"},"content":"StatusBarFooter --|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":45,"author":{"gitId":"-"},"content":"HelpWindow --|\u003e UiPart","lastModifiedDate":"2021-07-31"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":47,"author":{"gitId":"-"},"content":"UiManager -right-\u003e Logic","lastModifiedDate":"2019-07-03"},{"lineNumber":48,"author":{"gitId":"-"},"content":"MainWindow -left-\u003e Logic","lastModifiedDate":"2019-07-03"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":50,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":51,"author":{"gitId":"-"},"content":"HelpWindow -[hidden]left- CommandBox","lastModifiedDate":"2019-07-03"},{"lineNumber":52,"author":{"gitId":"-"},"content":"CommandBox -[hidden]left- ResultDisplay","lastModifiedDate":"2019-07-03"},{"lineNumber":53,"author":{"gitId":"-"},"content":"ResultDisplay -[hidden]left- StatusBarFooter","lastModifiedDate":"2019-07-30"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":55,"author":{"gitId":"-"},"content":"MainWindow -[hidden]-|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":56,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"marcuspeh":8,"-":48}},{"path":"docs/diagrams/UiNavigationButtonDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"marcuspeh"},"content":"@startuml","lastModifiedDate":"2021-10-20"},{"lineNumber":2,"author":{"gitId":"marcuspeh"},"content":"!include style.puml","lastModifiedDate":"2021-10-20"},{"lineNumber":3,"author":{"gitId":"marcuspeh"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2021-10-20"},{"lineNumber":4,"author":{"gitId":"marcuspeh"},"content":"skinparam arrowColor UI_COLOR_T4","lastModifiedDate":"2021-10-20"},{"lineNumber":5,"author":{"gitId":"marcuspeh"},"content":"skinparam classBackgroundColor UI_COLOR","lastModifiedDate":"2021-10-20"},{"lineNumber":6,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":7,"author":{"gitId":"marcuspeh"},"content":"package NavigationButton \u003c\u003cRectangle\u003e\u003e{","lastModifiedDate":"2021-10-20"},{"lineNumber":8,"author":{"gitId":"marcuspeh"},"content":"Class \"{abstract}\\nUiPart\" as UiPart","lastModifiedDate":"2021-10-20"},{"lineNumber":9,"author":{"gitId":"marcuspeh"},"content":"Class NavigationButtonPanel","lastModifiedDate":"2021-10-20"},{"lineNumber":10,"author":{"gitId":"marcuspeh"},"content":"Class GroupViewButton","lastModifiedDate":"2021-10-20"},{"lineNumber":11,"author":{"gitId":"marcuspeh"},"content":"Class PersonViewButton","lastModifiedDate":"2021-10-20"},{"lineNumber":12,"author":{"gitId":"marcuspeh"},"content":"Class PersonButtonListener","lastModifiedDate":"2021-10-20"},{"lineNumber":13,"author":{"gitId":"marcuspeh"},"content":"Class GroupButtonListener","lastModifiedDate":"2021-10-20"},{"lineNumber":14,"author":{"gitId":"marcuspeh"},"content":"}","lastModifiedDate":"2021-10-20"},{"lineNumber":15,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":16,"author":{"gitId":"marcuspeh"},"content":"package ViewPanel \u003c\u003cRectangle\u003e\u003e {","lastModifiedDate":"2021-10-20"},{"lineNumber":17,"author":{"gitId":"marcuspeh"},"content":"Class HiddenLogic #FFFFFF","lastModifiedDate":"2021-10-20"},{"lineNumber":18,"author":{"gitId":"marcuspeh"},"content":"}","lastModifiedDate":"2021-10-20"},{"lineNumber":19,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":20,"author":{"gitId":"marcuspeh"},"content":"Class HiddenOutside #FFFFFF","lastModifiedDate":"2021-10-20"},{"lineNumber":21,"author":{"gitId":"marcuspeh"},"content":"HiddenOutside --\u003e NavigationButtonPanel","lastModifiedDate":"2021-10-20"},{"lineNumber":22,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":23,"author":{"gitId":"marcuspeh"},"content":"GroupViewButton *--\u003e \"1\" GroupButtonListener","lastModifiedDate":"2021-10-20"},{"lineNumber":24,"author":{"gitId":"marcuspeh"},"content":"PersonViewButton *--\u003e \"1\" PersonButtonListener","lastModifiedDate":"2021-10-20"},{"lineNumber":25,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":26,"author":{"gitId":"marcuspeh"},"content":"NavigationButtonPanel *--\u003e \"1\" GroupViewButton","lastModifiedDate":"2021-10-20"},{"lineNumber":27,"author":{"gitId":"marcuspeh"},"content":"NavigationButtonPanel *--\u003e \"1\" PersonViewButton","lastModifiedDate":"2021-10-20"},{"lineNumber":28,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":29,"author":{"gitId":"marcuspeh"},"content":"PersonButtonListener -right-\u003e ViewPanel","lastModifiedDate":"2021-10-20"},{"lineNumber":30,"author":{"gitId":"marcuspeh"},"content":"GroupButtonListener -left-\u003e ViewPanel","lastModifiedDate":"2021-10-20"},{"lineNumber":31,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":32,"author":{"gitId":"marcuspeh"},"content":"NavigationButtonPanel --|\u003e UiPart","lastModifiedDate":"2021-10-20"},{"lineNumber":33,"author":{"gitId":"marcuspeh"},"content":"GroupViewButton --|\u003e UiPart","lastModifiedDate":"2021-10-20"},{"lineNumber":34,"author":{"gitId":"marcuspeh"},"content":"PersonViewButton --|\u003e UiPart","lastModifiedDate":"2021-10-20"},{"lineNumber":35,"author":{"gitId":"marcuspeh"},"content":"@enduml","lastModifiedDate":"2021-10-20"}],"authorContributionMap":{"marcuspeh":35}},{"path":"docs/diagrams/UiTogglingActivityDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"marcuspeh"},"content":"@startuml","lastModifiedDate":"2021-10-22"},{"lineNumber":2,"author":{"gitId":"marcuspeh"},"content":"!pragma useVerticalIf on","lastModifiedDate":"2021-10-22"},{"lineNumber":3,"author":{"gitId":"marcuspeh"},"content":"start","lastModifiedDate":"2021-10-22"},{"lineNumber":4,"author":{"gitId":"marcuspeh"},"content":":User executes command;","lastModifiedDate":"2021-10-22"},{"lineNumber":5,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":6,"author":{"gitId":"marcuspeh"},"content":"\u0027Since the beta syntax does not support placing the condition outside the","lastModifiedDate":"2021-10-22"},{"lineNumber":7,"author":{"gitId":"marcuspeh"},"content":"\u0027diamond we place it as the true branch instead.","lastModifiedDate":"2021-10-22"},{"lineNumber":8,"author":{"gitId":"marcuspeh"},"content":"\u0027  `CONTACT_PAGE`, ``, ``, ``, ``","lastModifiedDate":"2021-10-22"},{"lineNumber":9,"author":{"gitId":"marcuspeh"},"content":"if () then ( [type \u003d\u003d show contacts] )","lastModifiedDate":"2021-10-22"},{"lineNumber":10,"author":{"gitId":"marcuspeh"},"content":"    :UiView.CONTACT_PAGE passed to ViewPanel","lastModifiedDate":"2021-10-22"},{"lineNumber":11,"author":{"gitId":"marcuspeh"},"content":"                     and contacts view displayed;","lastModifiedDate":"2021-10-22"},{"lineNumber":12,"author":{"gitId":"marcuspeh"},"content":"elseif () then ( [type \u003d\u003d show groups] )","lastModifiedDate":"2021-10-22"},{"lineNumber":13,"author":{"gitId":"marcuspeh"},"content":"    :UiView.GROUP_PAGE passed to ViewPanel","lastModifiedDate":"2021-10-22"},{"lineNumber":14,"author":{"gitId":"marcuspeh"},"content":"                          and group view displayed;","lastModifiedDate":"2021-10-22"},{"lineNumber":15,"author":{"gitId":"marcuspeh"},"content":"elseif () then ( [type \u003d\u003d show expense] )","lastModifiedDate":"2021-10-22"},{"lineNumber":16,"author":{"gitId":"marcuspeh"},"content":"    :UiView.EXPENSE_PAGE passed to ViewPanel","lastModifiedDate":"2021-10-22"},{"lineNumber":17,"author":{"gitId":"marcuspeh"},"content":"                     and expense view displayed;","lastModifiedDate":"2021-10-22"},{"lineNumber":18,"author":{"gitId":"marcuspeh"},"content":"elseif () then ( [type \u003d\u003d show transaction summary] )","lastModifiedDate":"2021-10-22"},{"lineNumber":19,"author":{"gitId":"marcuspeh"},"content":"    :UiView.TRANSACTION_SUMMARY passed to ViewPanel","lastModifiedDate":"2021-10-22"},{"lineNumber":20,"author":{"gitId":"marcuspeh"},"content":"                   and transaction summary view displayed;","lastModifiedDate":"2021-10-22"},{"lineNumber":21,"author":{"gitId":"marcuspeh"},"content":"elseif () then ( [type \u003d\u003d show payment] )","lastModifiedDate":"2021-10-22"},{"lineNumber":22,"author":{"gitId":"marcuspeh"},"content":"    :UiView.PAYMENT_PAGE passed to ViewPanel","lastModifiedDate":"2021-10-22"},{"lineNumber":23,"author":{"gitId":"marcuspeh"},"content":"                      and payment view displayed;","lastModifiedDate":"2021-10-22"},{"lineNumber":24,"author":{"gitId":"marcuspeh"},"content":"else ( [else] )","lastModifiedDate":"2021-10-22"},{"lineNumber":25,"author":{"gitId":"marcuspeh"},"content":"    :Nothing is passed to ViewPanel and view panel does not change;","lastModifiedDate":"2021-10-22"},{"lineNumber":26,"author":{"gitId":"marcuspeh"},"content":"endif","lastModifiedDate":"2021-10-22"},{"lineNumber":27,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":28,"author":{"gitId":"marcuspeh"},"content":"stop","lastModifiedDate":"2021-10-22"},{"lineNumber":29,"author":{"gitId":"marcuspeh"},"content":"@enduml","lastModifiedDate":"2021-10-22"}],"authorContributionMap":{"marcuspeh":29}},{"path":"docs/diagrams/UiViewPanelDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"marcuspeh"},"content":"@startuml","lastModifiedDate":"2021-10-20"},{"lineNumber":2,"author":{"gitId":"marcuspeh"},"content":"!include style.puml","lastModifiedDate":"2021-10-20"},{"lineNumber":3,"author":{"gitId":"marcuspeh"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2021-10-20"},{"lineNumber":4,"author":{"gitId":"marcuspeh"},"content":"skinparam arrowColor UI_COLOR_T4","lastModifiedDate":"2021-10-20"},{"lineNumber":5,"author":{"gitId":"marcuspeh"},"content":"skinparam classBackgroundColor UI_COLOR","lastModifiedDate":"2021-10-20"},{"lineNumber":6,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":7,"author":{"gitId":"marcuspeh"},"content":"package ViewPanel \u003c\u003cRectangle\u003e\u003e{","lastModifiedDate":"2021-10-20"},{"lineNumber":8,"author":{"gitId":"marcuspeh"},"content":"Class \"{abstract}\\nUiPart\" as UiPart","lastModifiedDate":"2021-10-20"},{"lineNumber":9,"author":{"gitId":"marcuspeh"},"content":"Class ViewPanel","lastModifiedDate":"2021-10-20"},{"lineNumber":10,"author":{"gitId":"marcuspeh"},"content":"Class GroupListPanel","lastModifiedDate":"2021-10-20"},{"lineNumber":11,"author":{"gitId":"marcuspeh"},"content":"Class GroupCard","lastModifiedDate":"2021-10-20"},{"lineNumber":12,"author":{"gitId":"marcuspeh"},"content":"Class PersonListPanel","lastModifiedDate":"2021-10-20"},{"lineNumber":13,"author":{"gitId":"marcuspeh"},"content":"Class PersonCard","lastModifiedDate":"2021-10-20"},{"lineNumber":14,"author":{"gitId":"Jingwencloud"},"content":"Class ExpenseListPanel","lastModifiedDate":"2021-10-21"},{"lineNumber":15,"author":{"gitId":"Jingwencloud"},"content":"Class ExpenseCard","lastModifiedDate":"2021-10-21"},{"lineNumber":16,"author":{"gitId":"marcuspeh"},"content":"}","lastModifiedDate":"2021-10-20"},{"lineNumber":17,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":18,"author":{"gitId":"marcuspeh"},"content":"package Model \u003c\u003cRectangle\u003e\u003e {","lastModifiedDate":"2021-10-20"},{"lineNumber":19,"author":{"gitId":"marcuspeh"},"content":"Class HiddenModel #FFFFFF","lastModifiedDate":"2021-10-20"},{"lineNumber":20,"author":{"gitId":"marcuspeh"},"content":"}","lastModifiedDate":"2021-10-20"},{"lineNumber":21,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":22,"author":{"gitId":"marcuspeh"},"content":"Class HiddenOutside #FFFFFF","lastModifiedDate":"2021-10-20"},{"lineNumber":23,"author":{"gitId":"marcuspeh"},"content":"HiddenOutside --\u003e ViewPanel","lastModifiedDate":"2021-10-20"},{"lineNumber":24,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":25,"author":{"gitId":"marcuspeh"},"content":"ViewPanel *-down-\u003e \"1\" PersonListPanel","lastModifiedDate":"2021-10-20"},{"lineNumber":26,"author":{"gitId":"marcuspeh"},"content":"ViewPanel *-down-\u003e \"1\" GroupListPanel","lastModifiedDate":"2021-10-20"},{"lineNumber":27,"author":{"gitId":"Jingwencloud"},"content":"ViewPanel *-down-\u003e \"1\" ExpenseListPanel","lastModifiedDate":"2021-10-21"},{"lineNumber":28,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":29,"author":{"gitId":"marcuspeh"},"content":"PersonListPanel -down-\u003e \"*\" PersonCard","lastModifiedDate":"2021-10-20"},{"lineNumber":30,"author":{"gitId":"marcuspeh"},"content":"GroupListPanel -down-\u003e \"*\" GroupCard","lastModifiedDate":"2021-10-20"},{"lineNumber":31,"author":{"gitId":"Jingwencloud"},"content":"ExpenseListPanel -down-\u003e \"*\" ExpenseCard","lastModifiedDate":"2021-10-21"},{"lineNumber":32,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":33,"author":{"gitId":"marcuspeh"},"content":"ViewPanel --|\u003e UiPart","lastModifiedDate":"2021-10-20"},{"lineNumber":34,"author":{"gitId":"marcuspeh"},"content":"PersonListPanel --|\u003e UiPart","lastModifiedDate":"2021-10-20"},{"lineNumber":35,"author":{"gitId":"marcuspeh"},"content":"PersonCard --|\u003e UiPart","lastModifiedDate":"2021-10-20"},{"lineNumber":36,"author":{"gitId":"marcuspeh"},"content":"GroupListPanel --|\u003e UiPart","lastModifiedDate":"2021-10-20"},{"lineNumber":37,"author":{"gitId":"marcuspeh"},"content":"GroupCard --|\u003e UiPart","lastModifiedDate":"2021-10-20"},{"lineNumber":38,"author":{"gitId":"Jingwencloud"},"content":"ExpenseListPanel --|\u003e UiPart","lastModifiedDate":"2021-10-21"},{"lineNumber":39,"author":{"gitId":"Jingwencloud"},"content":"ExpenseCard --|\u003e UiPart","lastModifiedDate":"2021-10-21"},{"lineNumber":40,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":41,"author":{"gitId":"marcuspeh"},"content":"PersonCard .right.\u003e Model","lastModifiedDate":"2021-10-20"},{"lineNumber":42,"author":{"gitId":"marcuspeh"},"content":"GroupCard .left.\u003e Model","lastModifiedDate":"2021-10-20"},{"lineNumber":43,"author":{"gitId":"Jingwencloud"},"content":"ExpenseCard .\u003e Model","lastModifiedDate":"2021-10-21"},{"lineNumber":44,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":45,"author":{"gitId":"marcuspeh"},"content":"@enduml","lastModifiedDate":"2021-10-20"}],"authorContributionMap":{"marcuspeh":38,"Jingwencloud":7}},{"path":"docs/diagrams/UndoRedoState1.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam ClassFontColor #000000","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam ClassBorderColor #000000","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"marcuspeh"},"content":"title After command \"deletecontact 5\"","lastModifiedDate":"2021-10-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"package States \u003c\u003crectangle\u003e\u003e {","lastModifiedDate":"2019-07-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    class State1 as \"__ab0:AddressBook__\"","lastModifiedDate":"2019-07-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    class State2 as \"__ab1:AddressBook__\"","lastModifiedDate":"2019-07-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    class State3 as \"__ab2:AddressBook__\"","lastModifiedDate":"2019-07-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"State1 -[hidden]right-\u003e State2","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"State2 -[hidden]right-\u003e State3","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"hide State3","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"class Pointer as \"Current State\" #FFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"Pointer -up-\u003e State2","lastModifiedDate":"2019-07-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"@end","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"marcuspeh":1,"-":21}},{"path":"docs/diagrams/UndoRedoState2.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam ClassFontColor #000000","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam ClassBorderColor #000000","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"marcuspeh"},"content":"title After command \"addcontact n/David\"","lastModifiedDate":"2021-10-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"package States \u003c\u003crectangle\u003e\u003e {","lastModifiedDate":"2019-07-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    class State1 as \"__ab0:AddressBook__\"","lastModifiedDate":"2019-07-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    class State2 as \"__ab1:AddressBook__\"","lastModifiedDate":"2019-07-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    class State3 as \"__ab2:AddressBook__\"","lastModifiedDate":"2019-07-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"State1 -[hidden]right-\u003e State2","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"State2 -[hidden]right-\u003e State3","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"class Pointer as \"Current State\" #FFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"Pointer -up-\u003e State3","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"@end","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"marcuspeh":1,"-":19}},{"path":"docs/diagrams/UndoRedoState4.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam ClassFontColor #000000","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam ClassBorderColor #000000","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"marcuspeh"},"content":"title After command \"contacts\"","lastModifiedDate":"2021-10-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"package States \u003c\u003crectangle\u003e\u003e {","lastModifiedDate":"2019-07-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    class State1 as \"__ab0:AddressBook__\"","lastModifiedDate":"2019-07-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    class State2 as \"__ab1:AddressBook__\"","lastModifiedDate":"2019-07-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    class State3 as \"__ab2:AddressBook__\"","lastModifiedDate":"2019-07-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"State1 -[hidden]right-\u003e State2","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"State2 -[hidden]right-\u003e State3","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"class Pointer as \"Current State\" #FFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"Pointer -up-\u003e State2","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"@end","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"marcuspeh":1,"-":19}},{"path":"docs/diagrams/UndoRedoState5.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam ClassFontColor #000000","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam ClassBorderColor #000000","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"ramapriyan912001"},"content":"title After command \"clearalldata\"","lastModifiedDate":"2021-10-30"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"package States \u003c\u003crectangle\u003e\u003e {","lastModifiedDate":"2019-07-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    class State1 as \"__ab0:AddressBook__\"","lastModifiedDate":"2019-07-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    class State2 as \"__ab1:AddressBook__\"","lastModifiedDate":"2019-07-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    class State3 as \"__ab3:AddressBook__\"","lastModifiedDate":"2019-07-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"State1 -[hidden]right-\u003e State2","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"State2 -[hidden]right-\u003e State3","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"class Pointer as \"Current State\" #FFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"Pointer -up-\u003e State3","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"note right on link: State ab2 deleted.","lastModifiedDate":"2019-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"@end","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"ramapriyan912001":1,"-":20}},{"path":"docs/diagrams/UndoSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"marcuspeh"},"content":"participant \":AweParser\" as AweParser LOGIC_COLOR","lastModifiedDate":"2021-10-22"},{"lineNumber":7,"author":{"gitId":"-"},"content":"participant \"u:UndoCommand\" as UndoCommand LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"end box","lastModifiedDate":"2019-07-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2019-07-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"participant \":Model\" as Model MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"participant \":VersionedAddressBook\" as VersionedAddressBook MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"end box","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"[-\u003e LogicManager : execute(undo)","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"activate LogicManager","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"marcuspeh"},"content":"LogicManager -\u003e AweParser : parseCommand(undo)","lastModifiedDate":"2021-10-22"},{"lineNumber":18,"author":{"gitId":"marcuspeh"},"content":"activate AweParser","lastModifiedDate":"2021-10-22"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"create UndoCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":21,"author":{"gitId":"marcuspeh"},"content":"AweParser -\u003e UndoCommand","lastModifiedDate":"2021-10-22"},{"lineNumber":22,"author":{"gitId":"-"},"content":"activate UndoCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":24,"author":{"gitId":"marcuspeh"},"content":"UndoCommand --\u003e AweParser","lastModifiedDate":"2021-10-22"},{"lineNumber":25,"author":{"gitId":"-"},"content":"deactivate UndoCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":27,"author":{"gitId":"marcuspeh"},"content":"AweParser --\u003e LogicManager : u","lastModifiedDate":"2021-10-22"},{"lineNumber":28,"author":{"gitId":"marcuspeh"},"content":"deactivate AweParser","lastModifiedDate":"2021-10-22"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"LogicManager -\u003e UndoCommand : execute()","lastModifiedDate":"2019-07-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"activate UndoCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"UndoCommand -\u003e Model : undoAddressBook()","lastModifiedDate":"2019-07-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"activate Model","lastModifiedDate":"2019-07-03"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":36,"author":{"gitId":"-"},"content":"Model -\u003e VersionedAddressBook : undo()","lastModifiedDate":"2019-07-03"},{"lineNumber":37,"author":{"gitId":"-"},"content":"activate VersionedAddressBook","lastModifiedDate":"2019-07-03"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":39,"author":{"gitId":"-"},"content":"VersionedAddressBook -\u003e VersionedAddressBook :resetData(ReadOnlyAddressBook)","lastModifiedDate":"2019-07-03"},{"lineNumber":40,"author":{"gitId":"-"},"content":"VersionedAddressBook --\u003e Model :","lastModifiedDate":"2019-07-03"},{"lineNumber":41,"author":{"gitId":"-"},"content":"deactivate VersionedAddressBook","lastModifiedDate":"2019-07-03"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":43,"author":{"gitId":"-"},"content":"Model --\u003e UndoCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":44,"author":{"gitId":"-"},"content":"deactivate Model","lastModifiedDate":"2019-07-03"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":46,"author":{"gitId":"-"},"content":"UndoCommand --\u003e LogicManager : result","lastModifiedDate":"2019-07-03"},{"lineNumber":47,"author":{"gitId":"-"},"content":"deactivate UndoCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":48,"author":{"gitId":"-"},"content":"UndoCommand -[hidden]-\u003e LogicManager : result","lastModifiedDate":"2019-07-03"},{"lineNumber":49,"author":{"gitId":"-"},"content":"destroy UndoCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":51,"author":{"gitId":"-"},"content":"[\u003c--LogicManager","lastModifiedDate":"2019-07-03"},{"lineNumber":52,"author":{"gitId":"-"},"content":"deactivate LogicManager","lastModifiedDate":"2019-07-03"},{"lineNumber":53,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"marcuspeh":7,"-":46}},{"path":"docs/index.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"marcuspeh"},"content":"title: Around the World in $80","lastModifiedDate":"2021-10-22"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"[![CI Status](https://github.com/se-edu/addressbook-level3/workflows/Java%20CI/badge.svg)](https://github.com/se-edu/addressbook-level3/actions)","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"[![codecov](https://codecov.io/gh/AY2122S1-CS2103T-F13-1/tp/branch/master/graph/badge.svg?token\u003d9ME779K3QC)](https://codecov.io/gh/AY2122S1-CS2103T-F13-1/tp)","lastModifiedDate":"2021-09-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"![Ui](images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"marcuspeh"},"content":"**Around the World in $80 (AWE) is a desktop application for spiting expenses on trips.** While it has a GUI, most of the user interactions happen using a CLI (Command Line Interface).","lastModifiedDate":"2021-10-21"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"marcuspeh"},"content":"AWE promises to revolutionises the group-travel space. With AWE, bills can be split and monitored in a centralised manner that minimises the potential for disputes and maximises the efficiency of payment and recollection of debts.","lastModifiedDate":"2021-10-21"},{"lineNumber":14,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":15,"author":{"gitId":"marcuspeh"},"content":"* If you are interested in using AWE, head over to the [_Quick Start_ section of the **User Guide**](UserGuide.html#quick-start).","lastModifiedDate":"2021-10-21"},{"lineNumber":16,"author":{"gitId":"marcuspeh"},"content":"* If you are interested about developing AWE, the [**Developer Guide**](DeveloperGuide.html) is a good place to start.","lastModifiedDate":"2021-10-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"**Acknowledgements**","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"* Libraries used: [JavaFX](https://openjfx.io/), [Jackson](https://github.com/FasterXML/jackson), [JUnit5](https://github.com/junit-team/junit5)","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"marcuspeh":6,"-":15}},{"path":"docs/team/chruschong.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"chrus-chong"},"content":"---","lastModifiedDate":"2021-10-05"},{"lineNumber":2,"author":{"gitId":"chrus-chong"},"content":"layout: page","lastModifiedDate":"2021-10-05"},{"lineNumber":3,"author":{"gitId":"chrus-chong"},"content":"title: Chrus Chong\u0027s Project Portfolio Page","lastModifiedDate":"2021-10-05"},{"lineNumber":4,"author":{"gitId":"chrus-chong"},"content":"---","lastModifiedDate":"2021-10-05"},{"lineNumber":5,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":6,"author":{"gitId":"chrus-chong"},"content":"### Project: Around the World in $80","lastModifiedDate":"2021-10-05"},{"lineNumber":7,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":8,"author":{"gitId":"chrus-chong"},"content":"Around the World in $80 (AWE) is a desktop application that splits bills between different contacts. The user interacts with it using a CLI, and it has a GUI created with JavaFX. It is written in Java, and has about 10 kLoC.","lastModifiedDate":"2021-10-05"},{"lineNumber":9,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":10,"author":{"gitId":"chrus-chong"},"content":"Given below are my contributions to the project. [RepoSense link](https://nus-cs2103-ay2122s1.github.io/tp-dashboard/?search\u003dchrus\u0026sort\u003dgroupTitle\u0026sortWithin\u003dtitle\u0026timeframe\u003dcommit\u0026mergegroup\u003d\u0026groupSelect\u003dgroupByRepos\u0026breakdown\u003dtrue\u0026checkedFileTypes\u003ddocs~functional-code~test-code~other\u0026since\u003d2021-09-17\u0026tabOpen\u003dfalse\u0026zFR\u003dfalse)","lastModifiedDate":"2021-10-05"},{"lineNumber":11,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":12,"author":{"gitId":"chrus-chong"},"content":"### Features","lastModifiedDate":"2021-10-05"},{"lineNumber":13,"author":{"gitId":"chrus-chong"},"content":"* **New Feature**: Constructed the `creategroup` feature for AWE.","lastModifiedDate":"2021-10-05"},{"lineNumber":14,"author":{"gitId":"chrus-chong"},"content":"    * What it does: Allows user to create a new travel group with the command line interface.","lastModifiedDate":"2021-10-05"},{"lineNumber":15,"author":{"gitId":"chrus-chong"},"content":"    * Justification: This feature is crucial as the user should be able to create groups to record travel expenses.","lastModifiedDate":"2021-10-05"},{"lineNumber":16,"author":{"gitId":"chrus-chong"},"content":"    * Highlights: This implementation added in a new command `creategroup` to create a new group. It creates a","lastModifiedDate":"2021-10-20"},{"lineNumber":17,"author":{"gitId":"chrus-chong"},"content":"      new travel group with the specified members.","lastModifiedDate":"2021-10-20"},{"lineNumber":18,"author":{"gitId":"chrus-chong"},"content":"    * Contribution: Built the entire framework for this feature.","lastModifiedDate":"2021-10-20"},{"lineNumber":19,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":20,"author":{"gitId":"chrus-chong"},"content":"* **New Feature**: Constructed the `groupaddcontact` feature for AWE.","lastModifiedDate":"2021-10-20"},{"lineNumber":21,"author":{"gitId":"chrus-chong"},"content":"    * What it does: Allows user to add a person into an existing group with the command line interface.","lastModifiedDate":"2021-10-20"},{"lineNumber":22,"author":{"gitId":"chrus-chong"},"content":"    * Justification: This feature is important as the user should be able to add members to travel groups after ","lastModifiedDate":"2021-10-20"},{"lineNumber":23,"author":{"gitId":"chrus-chong"},"content":"      creating them. The prevents the need for deleting a re-creating a group to change membership.","lastModifiedDate":"2021-10-20"},{"lineNumber":24,"author":{"gitId":"chrus-chong"},"content":"    * Highlights: This implementation added in a new command `groupaddcontact` to add a contact into a specified group.","lastModifiedDate":"2021-10-20"},{"lineNumber":25,"author":{"gitId":"chrus-chong"},"content":"      It adds at least one new member into an existing travel group.","lastModifiedDate":"2021-10-20"},{"lineNumber":26,"author":{"gitId":"chrus-chong"},"content":"    * Contribution: Built the entire framework for this feature.","lastModifiedDate":"2021-10-20"},{"lineNumber":27,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":28,"author":{"gitId":"chrus-chong"},"content":"* **New Feature**: Constructed the `groupremovecontact` feature for AWE.","lastModifiedDate":"2021-10-20"},{"lineNumber":29,"author":{"gitId":"chrus-chong"},"content":"    * What it does: Allows user to remove a person from an existing group with the command line interface.","lastModifiedDate":"2021-10-20"},{"lineNumber":30,"author":{"gitId":"chrus-chong"},"content":"    * Justification: This feature is important as the user should be able to remove members from travel groups after","lastModifiedDate":"2021-10-20"},{"lineNumber":31,"author":{"gitId":"chrus-chong"},"content":"      creating them. The prevents the need for deleting a re-creating a group to change membership.","lastModifiedDate":"2021-10-20"},{"lineNumber":32,"author":{"gitId":"chrus-chong"},"content":"    * Highlights: This implementation added in a new command `groupremovecontact` to remove a contact from a specified","lastModifiedDate":"2021-10-20"},{"lineNumber":33,"author":{"gitId":"chrus-chong"},"content":"      group. It removes at least one member from an existing travel group.","lastModifiedDate":"2021-10-20"},{"lineNumber":34,"author":{"gitId":"chrus-chong"},"content":"    * Contribution: Built the entire framework for this feature.","lastModifiedDate":"2021-10-20"},{"lineNumber":35,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":36,"author":{"gitId":"chrus-chong"},"content":"* **New Feature**: Constructed the `groupeditname` feature for AWE.","lastModifiedDate":"2021-10-20"},{"lineNumber":37,"author":{"gitId":"chrus-chong"},"content":"    * What it does: Allows user to change the group name of an existing group with the command line interface.","lastModifiedDate":"2021-10-20"},{"lineNumber":38,"author":{"gitId":"chrus-chong"},"content":"    * Justification: This feature is important as the user should be able to change a travel group\u0027s name.","lastModifiedDate":"2021-10-20"},{"lineNumber":39,"author":{"gitId":"chrus-chong"},"content":"      The prevents the need for deleting a re-creating a group to change group name.","lastModifiedDate":"2021-10-20"},{"lineNumber":40,"author":{"gitId":"chrus-chong"},"content":"    * Highlights: This implementation added in a new command `groupeditname` to edit a travel group\u0027s name.","lastModifiedDate":"2021-10-20"},{"lineNumber":41,"author":{"gitId":"chrus-chong"},"content":"    * Contribution: Built the entire framework for this feature.","lastModifiedDate":"2021-10-20"},{"lineNumber":42,"author":{"gitId":"chrus-chong"},"content":"  ","lastModifiedDate":"2021-10-20"},{"lineNumber":43,"author":{"gitId":"chrus-chong"},"content":"* **New Feature**: Constructed the `groupaddtag` feature for AWE.","lastModifiedDate":"2021-10-20"},{"lineNumber":44,"author":{"gitId":"chrus-chong"},"content":"    * What it does: Allows user to add a tag into an existing group with the command line interface.","lastModifiedDate":"2021-10-20"},{"lineNumber":45,"author":{"gitId":"chrus-chong"},"content":"    * Justification: This feature is important as the user should be able to add tags to travel groups after","lastModifiedDate":"2021-10-20"},{"lineNumber":46,"author":{"gitId":"chrus-chong"},"content":"      creating them. The prevents the need for deleting a re-creating a group to change tags.","lastModifiedDate":"2021-10-20"},{"lineNumber":47,"author":{"gitId":"chrus-chong"},"content":"    * Highlights: This implementation added in a new command `groupaddtag` to add a tag into a specified group.","lastModifiedDate":"2021-10-20"},{"lineNumber":48,"author":{"gitId":"chrus-chong"},"content":"      It adds at least one new tag into an existing travel group.","lastModifiedDate":"2021-10-20"},{"lineNumber":49,"author":{"gitId":"chrus-chong"},"content":"    * Contribution: Built the entire framework for this feature.","lastModifiedDate":"2021-10-20"},{"lineNumber":50,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":51,"author":{"gitId":"chrus-chong"},"content":"* **New Feature**: Constructed the `groupremovetag` feature for AWE.","lastModifiedDate":"2021-10-20"},{"lineNumber":52,"author":{"gitId":"chrus-chong"},"content":"    * What it does: Allows user to remove a tag from an existing group with the command line interface.","lastModifiedDate":"2021-10-20"},{"lineNumber":53,"author":{"gitId":"chrus-chong"},"content":"    * Justification: This feature is important as the user should be able to remove tags from travel groups after","lastModifiedDate":"2021-10-20"},{"lineNumber":54,"author":{"gitId":"chrus-chong"},"content":"      creating them. The prevents the need for deleting a re-creating a group to change tags.","lastModifiedDate":"2021-10-20"},{"lineNumber":55,"author":{"gitId":"chrus-chong"},"content":"    * Highlights: This implementation added in a new command `groupremovetag` to remove a contact from a specified","lastModifiedDate":"2021-10-20"},{"lineNumber":56,"author":{"gitId":"chrus-chong"},"content":"      group. It removes at least one tag from an existing travel group.","lastModifiedDate":"2021-10-20"},{"lineNumber":57,"author":{"gitId":"chrus-chong"},"content":"    * Contribution: Built the entire framework for this feature.","lastModifiedDate":"2021-10-05"},{"lineNumber":58,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":59,"author":{"gitId":"chrus-chong"},"content":"* **New Feature**: Developed storage functionalities for `creategroup` and `deletegroup` feature.","lastModifiedDate":"2021-10-05"},{"lineNumber":60,"author":{"gitId":"chrus-chong"},"content":"  * What it does: Allows group data to be saved upon creation or deletion of group.","lastModifiedDate":"2021-10-05"},{"lineNumber":61,"author":{"gitId":"chrus-chong"},"content":"  * Justification: This feature is crucial as the changes to travel groups should be automatically saved.","lastModifiedDate":"2021-10-05"},{"lineNumber":62,"author":{"gitId":"ramapriyan912001"},"content":"  * Highlights: This implementation ensures that the most up-to-date group data is saved into `/data/awe.json` with each command.","lastModifiedDate":"2021-10-31"},{"lineNumber":63,"author":{"gitId":"chrus-chong"},"content":"  * Contribution: Pieced together the basic framework provided by [@ramapriyan912001](https://github.com/ramapriyan912001) to develop fully functional storage abilities for `creategroup` and `deletegroup`.","lastModifiedDate":"2021-10-05"},{"lineNumber":64,"author":{"gitId":"chrus-chong"},"content":"  ","lastModifiedDate":"2021-10-05"},{"lineNumber":65,"author":{"gitId":"chrus-chong"},"content":"### Others","lastModifiedDate":"2021-10-05"},{"lineNumber":66,"author":{"gitId":"chrus-chong"},"content":"* **Project management**","lastModifiedDate":"2021-10-05"},{"lineNumber":67,"author":{"gitId":"chrus-chong"},"content":"    * Managed releases: -","lastModifiedDate":"2021-10-05"},{"lineNumber":68,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":69,"author":{"gitId":"chrus-chong"},"content":"* **Documentation**:","lastModifiedDate":"2021-10-05"},{"lineNumber":70,"author":{"gitId":"chrus-chong"},"content":"    * User Guide:","lastModifiedDate":"2021-10-05"},{"lineNumber":71,"author":{"gitId":"chrus-chong"},"content":"        * Added documentation for the features `create group`","lastModifiedDate":"2021-10-05"},{"lineNumber":72,"author":{"gitId":"chrus-chong"},"content":"    * Developer Guide:","lastModifiedDate":"2021-10-05"},{"lineNumber":73,"author":{"gitId":"chrus-chong"},"content":"        * Created table of contents for ease of navigation.","lastModifiedDate":"2021-10-05"},{"lineNumber":74,"author":{"gitId":"chrus-chong"},"content":"        * Rearranged all user stories to ensure they follow decreasing order of priority.","lastModifiedDate":"2021-10-05"},{"lineNumber":75,"author":{"gitId":"chrus-chong"},"content":"        * Added use cases for `Add a Person`, `Clear All Entries` and `Create Travel Group`.","lastModifiedDate":"2021-10-05"},{"lineNumber":76,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":77,"author":{"gitId":"chrus-chong"},"content":"* **Community**:","lastModifiedDate":"2021-10-05"},{"lineNumber":78,"author":{"gitId":"chrus-chong"},"content":"    * PRs reviewed (with non-trivial review comments): [\\#124](https://github.com/AY2122S1-CS2103T-F13-1/tp/pull/124)","lastModifiedDate":"2021-10-05"},{"lineNumber":79,"author":{"gitId":"chrus-chong"},"content":"    * Contributed to forum discussions (examples: [1](), [2](), [3](), [4]())","lastModifiedDate":"2021-10-05"},{"lineNumber":80,"author":{"gitId":"chrus-chong"},"content":"    * Reported bugs and suggestions for other teams in the class (examples: [1](), [2](), [3]())","lastModifiedDate":"2021-10-05"},{"lineNumber":81,"author":{"gitId":"chrus-chong"},"content":"    * Some parts of the history feature I added was adopted by several other class mates ([1](), [2]())","lastModifiedDate":"2021-10-05"}],"authorContributionMap":{"chrus-chong":80,"ramapriyan912001":1}},{"path":"docs/team/johndoe.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: John Doe\u0027s Project Portfolio Page","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"### Project: AddressBook Level 3","lastModifiedDate":"2021-07-30"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"AddressBook - Level 3 is a desktop address book application used for teaching Software Engineering principles. The user interacts with it using a CLI, and it has a GUI created with JavaFX. It is written in Java, and has about 10 kLoC.","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"* **New Feature**: Added the ability to undo/redo previous commands.","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"  * What it does: allows the user to undo all previous commands one at a time. Preceding undo commands can be reversed by using the redo command.","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"  * Justification: This feature improves the product significantly because a user can make mistakes in commands and the app should provide a convenient way to rectify them.","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"  * Highlights: This enhancement affects existing commands and commands to be added in future. It required an in-depth analysis of design alternatives. The implementation too was challenging as it required changes to existing commands.","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"  * Credits: *{mention here if you reused any code/ideas from elsewhere or if a third-party library is heavily used in the feature so that a reader can make a more accurate judgement of how much effort went into the feature}*","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"* **New Feature**: Added a history command that allows the user to navigate to previous commands using up/down keys.","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"* **Code contributed**: [RepoSense link]()","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"* **Project management**:","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"  * Managed releases `v1.3` - `v1.5rc` (3 releases) on GitHub","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"  * Updated the GUI color scheme (Pull requests [\\#33](), [\\#34]())","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"  * Wrote additional tests for existing features to increase coverage from 88% to 92% (Pull requests [\\#36](), [\\#38]())","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"* **Documentation**:","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"  * User Guide:","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    * Added documentation for the features `delete` and `find` [\\#72]()","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"ramapriyan912001"},"content":"    * Did cosmetic tweaks to existing documentation of features `clearalldata`, `exit`: [\\#74]()","lastModifiedDate":"2021-10-30"},{"lineNumber":33,"author":{"gitId":"-"},"content":"  * Developer Guide:","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    * Added implementation details of the `delete` feature.","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"* **Community**:","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"  * PRs reviewed (with non-trivial review comments): [\\#12](), [\\#32](), [\\#19](), [\\#42]()","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"  * Contributed to forum discussions (examples: [1](), [2](), [3](), [4]())","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"  * Reported bugs and suggestions for other teams in the class (examples: [1](), [2](), [3]())","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"  * Some parts of the history feature I added was adopted by several other class mates ([1](), [2]())","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"* **Tools**:","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"  * Integrated a third party library (Natty) to the project ([\\#42]())","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"  * Integrated a new Github plugin (CircleCI) to the team repo","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"* _{you can add/remove categories in the list above}_","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"ramapriyan912001":1,"-":45}},{"path":"docs/team/marcuspeh.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"marcuspeh"},"content":"---","lastModifiedDate":"2021-10-03"},{"lineNumber":2,"author":{"gitId":"marcuspeh"},"content":"layout: page","lastModifiedDate":"2021-10-03"},{"lineNumber":3,"author":{"gitId":"marcuspeh"},"content":"title: Marcus Peh\u0027s Project Portfolio Page","lastModifiedDate":"2021-10-03"},{"lineNumber":4,"author":{"gitId":"marcuspeh"},"content":"---","lastModifiedDate":"2021-10-03"},{"lineNumber":5,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":6,"author":{"gitId":"marcuspeh"},"content":"### Project: Around the World in $80","lastModifiedDate":"2021-10-03"},{"lineNumber":7,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":8,"author":{"gitId":"marcuspeh"},"content":"Around the World in $80 is a desktop application that splits bills between different contacts. The user interacts with it using a CLI, and it has a GUI created with JavaFX. It is written in Java, and has about 10 kLoC.","lastModifiedDate":"2021-10-03"},{"lineNumber":9,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":10,"author":{"gitId":"marcuspeh"},"content":"Given below are my contributions to the project. [RepoSense link](https://nus-cs2103-ay2122s1.github.io/tp-dashboard/?search\u003dmarcuspeh\u0026sort\u003dgroupTitle\u0026sortWithin\u003dtitle\u0026timeframe\u003dcommit\u0026mergegroup\u003d\u0026groupSelect\u003dgroupByRepos\u0026breakdown\u003dtrue\u0026checkedFileTypes\u003ddocs~functional-code~test-code~other\u0026since\u003d2021-09-17)","lastModifiedDate":"2021-10-07"},{"lineNumber":11,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":12,"author":{"gitId":"marcuspeh"},"content":"### Features","lastModifiedDate":"2021-10-03"},{"lineNumber":13,"author":{"gitId":"marcuspeh"},"content":"* **New Feature**: Added the ability to change between contacts and groups view.","lastModifiedDate":"2021-10-03"},{"lineNumber":14,"author":{"gitId":"marcuspeh"},"content":"  * What it does: Allows the user to see groups / contacts with a command.","lastModifiedDate":"2021-10-03"},{"lineNumber":15,"author":{"gitId":"marcuspeh"},"content":"  * Justification: This feature is crucial as the user should be able to view the groups and contacts created.","lastModifiedDate":"2021-10-03"},{"lineNumber":16,"author":{"gitId":"marcuspeh"},"content":"  * Highlights: This implementation added in a new command `groups` to see all groups. It changes the command `list` to `contacts`. `contacts` allows the user to see all contacts.","lastModifiedDate":"2021-10-03"},{"lineNumber":17,"author":{"gitId":"marcuspeh"},"content":"  * RepoSense: [link](https://app.codecov.io/gh/AY2122S1-CS2103T-F13-1/tp/compare/121)","lastModifiedDate":"2021-10-04"},{"lineNumber":18,"author":{"gitId":"marcuspeh"},"content":"  ","lastModifiedDate":"2021-10-03"},{"lineNumber":19,"author":{"gitId":"marcuspeh"},"content":"* **New Feature**: Added the ability to find groups.","lastModifiedDate":"2021-10-21"},{"lineNumber":20,"author":{"gitId":"marcuspeh"},"content":"  * What it does: Allows the user to find for groups with a command.","lastModifiedDate":"2021-10-21"},{"lineNumber":21,"author":{"gitId":"marcuspeh"},"content":"  * Justification: This feature will allow the user to check if a group has been created and the details of the group.","lastModifiedDate":"2021-10-21"},{"lineNumber":22,"author":{"gitId":"marcuspeh"},"content":"  * Highlight: This implementation added in a new command `findgroups` to find for group. It will also change the view from `contacts` to `groups`.","lastModifiedDate":"2021-10-21"},{"lineNumber":23,"author":{"gitId":"marcuspeh"},"content":"  * RepoSense: [link](https://app.codecov.io/gh/AY2122S1-CS2103T-F13-1/tp/compare/163)","lastModifiedDate":"2021-10-21"},{"lineNumber":24,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":25,"author":{"gitId":"marcuspeh"},"content":"* **New Feature**: Added the ability to see the total spending per person in a trip","lastModifiedDate":"2021-10-21"},{"lineNumber":26,"author":{"gitId":"marcuspeh"},"content":"  * What it does: Allows the user to find their expenses in a trip.","lastModifiedDate":"2021-10-21"},{"lineNumber":27,"author":{"gitId":"marcuspeh"},"content":"  * Justification: This feature will allow the user to track their expenses and cut down spending if needed.","lastModifiedDate":"2021-10-21"},{"lineNumber":28,"author":{"gitId":"marcuspeh"},"content":"  * Highlight: This implementation added in a new command `transactionsummary` to see expenses.","lastModifiedDate":"2021-10-21"},{"lineNumber":29,"author":{"gitId":"marcuspeh"},"content":"  * RepoSense: [link](https://app.codecov.io/gh/AY2122S1-CS2103T-F13-1/tp/compare/206)","lastModifiedDate":"2021-10-21"},{"lineNumber":30,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":31,"author":{"gitId":"marcuspeh"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2021-10-03"},{"lineNumber":32,"author":{"gitId":"marcuspeh"},"content":"  * Updated the UI interface layout. [\\#121](https://github.com/AY2122S1-CS2103T-F13-1/tp/pull/121)","lastModifiedDate":"2021-10-04"},{"lineNumber":33,"author":{"gitId":"marcuspeh"},"content":"  * Added in buttons to toggle between contacts page and group page [\\#121](https://github.com/AY2122S1-CS2103T-F13-1/tp/pull/121)","lastModifiedDate":"2021-10-04"},{"lineNumber":34,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":35,"author":{"gitId":"marcuspeh"},"content":"### Bug Fixes","lastModifiedDate":"2021-10-10"},{"lineNumber":36,"author":{"gitId":"marcuspeh"},"content":"* **severity.HIGH** Edit person does not update groups and expenses. [\\#158](https://github.com/AY2122S1-CS2103T-F13-1/tp/issues/153)","lastModifiedDate":"2021-10-10"},{"lineNumber":37,"author":{"gitId":"marcuspeh"},"content":"   * What happen: The command `addPerson` does not replace the instance of the old person from groups and expenses.","lastModifiedDate":"2021-10-21"},{"lineNumber":38,"author":{"gitId":"marcuspeh"},"content":"   * Pull request: [\\#158](https://github.com/AY2122S1-CS2103T-F13-1/tp/pull/158)","lastModifiedDate":"2021-10-10"},{"lineNumber":39,"author":{"gitId":"marcuspeh"},"content":"   ","lastModifiedDate":"2021-10-10"},{"lineNumber":40,"author":{"gitId":"marcuspeh"},"content":"* **severity.HIGH** Creating an empty group without person will crash the program [\\#224](https://github.com/AY2122S1-CS2103T-F13-1/tp/issues/224)","lastModifiedDate":"2021-10-21"},{"lineNumber":41,"author":{"gitId":"marcuspeh"},"content":"    * What happen: The command `creategroup` throws a `EmptyGroupsException` and is not handled.","lastModifiedDate":"2021-10-21"},{"lineNumber":42,"author":{"gitId":"marcuspeh"},"content":"    * Pull request: [\\#207](https://github.com/AY2122S1-CS2103T-F13-1/tp/pull/207)","lastModifiedDate":"2021-10-21"},{"lineNumber":43,"author":{"gitId":"marcuspeh"},"content":"    ","lastModifiedDate":"2021-10-21"},{"lineNumber":44,"author":{"gitId":"marcuspeh"},"content":"* **severity.HIGH** Running AWE without data.json will crash the program [\\#223](https://github.com/AY2122S1-CS2103T-F13-1/tp/issues/223)","lastModifiedDate":"2021-10-21"},{"lineNumber":45,"author":{"gitId":"marcuspeh"},"content":"    * What happen: Running AWE without data.json will cause a `RuntimeException`. ","lastModifiedDate":"2021-10-21"},{"lineNumber":46,"author":{"gitId":"marcuspeh"},"content":"    * Pull request: [\\#186](https://github.com/AY2122S1-CS2103T-F13-1/tp/issues/186)","lastModifiedDate":"2021-10-21"},{"lineNumber":47,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":48,"author":{"gitId":"marcuspeh"},"content":"### Others","lastModifiedDate":"2021-10-03"},{"lineNumber":49,"author":{"gitId":"marcuspeh"},"content":"* **Project management**","lastModifiedDate":"2021-10-03"},{"lineNumber":50,"author":{"gitId":"marcuspeh"},"content":"  * Managed releases: [v1.2](https://github.com/AY2122S1-CS2103T-F13-1/tp/releases/tag/v1.2), [v1.2b]()","lastModifiedDate":"2021-10-09"},{"lineNumber":51,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":52,"author":{"gitId":"marcuspeh"},"content":"* **Documentation**:","lastModifiedDate":"2021-10-03"},{"lineNumber":53,"author":{"gitId":"marcuspeh"},"content":"  * User Guide:","lastModifiedDate":"2021-10-03"},{"lineNumber":54,"author":{"gitId":"marcuspeh"},"content":"    * Added user guide for the features `groups`, `expenses`and `findgroups`.","lastModifiedDate":"2021-10-21"},{"lineNumber":55,"author":{"gitId":"marcuspeh"},"content":"    * Added FAQ.","lastModifiedDate":"2021-10-21"},{"lineNumber":56,"author":{"gitId":"marcuspeh"},"content":"  * Developer Guide:","lastModifiedDate":"2021-10-03"},{"lineNumber":57,"author":{"gitId":"marcuspeh"},"content":"    * Added use cases for `view groups`, `find person` and `view expenses`.","lastModifiedDate":"2021-10-03"},{"lineNumber":58,"author":{"gitId":"marcuspeh"},"content":"    * Updated UI segment with class diagram and explanation.","lastModifiedDate":"2021-10-21"},{"lineNumber":59,"author":{"gitId":"marcuspeh"},"content":"    * Added implementation, test cases  and use cases for `findgroups`.","lastModifiedDate":"2021-10-21"},{"lineNumber":60,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":61,"author":{"gitId":"marcuspeh"},"content":"* **Community**:","lastModifiedDate":"2021-10-03"},{"lineNumber":62,"author":{"gitId":"marcuspeh"},"content":"  * PRs reviewed (with non-trivial review comments): [\\#113](https://github.com/AY2122S1-CS2103T-F13-1/tp/pull/113), [\\#116](https://github.com/AY2122S1-CS2103T-F13-1/tp/pull/116)","lastModifiedDate":"2021-10-07"},{"lineNumber":63,"author":{"gitId":"marcuspeh"},"content":"  * Contributed to forum discussions (examples: [1](), [2](), [3](), [4]())","lastModifiedDate":"2021-10-03"},{"lineNumber":64,"author":{"gitId":"marcuspeh"},"content":"  * Reported bugs and suggestions for other teams in the class (examples: [1](), [2](), [3]())","lastModifiedDate":"2021-10-03"}],"authorContributionMap":{"marcuspeh":64}},{"path":"docs/team/nicholasee.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"kheekheekhee"},"content":"---","lastModifiedDate":"2021-10-07"},{"lineNumber":2,"author":{"gitId":"kheekheekhee"},"content":"layout: page","lastModifiedDate":"2021-10-07"},{"lineNumber":3,"author":{"gitId":"kheekheekhee"},"content":"title: Nicholas Ee\u0027s Project Portfolio Page","lastModifiedDate":"2021-10-07"},{"lineNumber":4,"author":{"gitId":"kheekheekhee"},"content":"---","lastModifiedDate":"2021-10-07"},{"lineNumber":5,"author":{"gitId":"kheekheekhee"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":6,"author":{"gitId":"kheekheekhee"},"content":"### Project: Around the World in $80","lastModifiedDate":"2021-10-07"},{"lineNumber":7,"author":{"gitId":"kheekheekhee"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":8,"author":{"gitId":"kheekheekhee"},"content":"Around the World in $80 is a desktop application that splits bills between different contacts. The user interacts with it using a CLI, and it has a GUI created with JavaFX. It is written in Java, and has about 10 kLoC.","lastModifiedDate":"2021-10-07"},{"lineNumber":9,"author":{"gitId":"kheekheekhee"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":10,"author":{"gitId":"marcuspeh"},"content":"Given below are my contributions to the project. [RepoSense link](https://nus-cs2103-ay2122s1.github.io/tp-dashboard/?search\u003dkheekheekhee\u0026sort\u003dgroupTitle\u0026sortWithin\u003dtitle\u0026timeframe\u003dcommit\u0026mergegroup\u003d\u0026groupSelect\u003dgroupByRepos\u0026breakdown\u003dtrue\u0026checkedFileTypes\u003ddocs~functional-code~test-code~other\u0026since\u003d2021-09-17)","lastModifiedDate":"2021-10-07"},{"lineNumber":11,"author":{"gitId":"kheekheekhee"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":12,"author":{"gitId":"kheekheekhee"},"content":"### Features","lastModifiedDate":"2021-10-07"},{"lineNumber":13,"author":{"gitId":"kheekheekhee"},"content":"* **New Feature**: Added the ability to add expenses in groups.","lastModifiedDate":"2021-10-07"},{"lineNumber":14,"author":{"gitId":"kheekheekhee"},"content":"  * What it does: Allows the user to log their expenses within the specified group.","lastModifiedDate":"2021-10-07"},{"lineNumber":15,"author":{"gitId":"kheekheekhee"},"content":"  * Justification: This feature is crucial as the user should be able log various expenses into respective groups.","lastModifiedDate":"2021-10-07"},{"lineNumber":16,"author":{"gitId":"kheekheekhee"},"content":"  * Highlights: This implementation added in a new command `expense` to add expenses to groups.","lastModifiedDate":"2021-10-07"},{"lineNumber":17,"author":{"gitId":"kheekheekhee"},"content":"  * RepoSense: [link](https://app.codecov.io/gh/AY2122S1-CS2103T-F13-1/tp/compare/135)","lastModifiedDate":"2021-10-07"},{"lineNumber":18,"author":{"gitId":"kheekheekhee"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":19,"author":{"gitId":"kheekheekhee"},"content":"### Others","lastModifiedDate":"2021-10-07"},{"lineNumber":20,"author":{"gitId":"kheekheekhee"},"content":"* **Project management**","lastModifiedDate":"2021-10-07"},{"lineNumber":21,"author":{"gitId":"kheekheekhee"},"content":"  * Managed releases: -","lastModifiedDate":"2021-10-07"},{"lineNumber":22,"author":{"gitId":"kheekheekhee"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":23,"author":{"gitId":"kheekheekhee"},"content":"* **Documentation**:","lastModifiedDate":"2021-10-07"},{"lineNumber":24,"author":{"gitId":"kheekheekhee"},"content":"  * User Guide:","lastModifiedDate":"2021-10-07"},{"lineNumber":25,"author":{"gitId":"kheekheekhee"},"content":"    * Added documentation for the features `expenses`","lastModifiedDate":"2021-10-07"},{"lineNumber":26,"author":{"gitId":"kheekheekhee"},"content":"  * Developer Guide:","lastModifiedDate":"2021-10-07"},{"lineNumber":27,"author":{"gitId":"kheekheekhee"},"content":"    * Added use cases for `edit a person`, `add expense` and `delete a person`.","lastModifiedDate":"2021-10-07"},{"lineNumber":28,"author":{"gitId":"kheekheekhee"},"content":"    * Added non-functional requirements.","lastModifiedDate":"2021-10-07"},{"lineNumber":29,"author":{"gitId":"kheekheekhee"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":30,"author":{"gitId":"kheekheekhee"},"content":"* **Community**:","lastModifiedDate":"2021-10-07"},{"lineNumber":31,"author":{"gitId":"kheekheekhee"},"content":"  * PRs reviewed (with non-trivial review comments): [\\#1]()","lastModifiedDate":"2021-10-07"},{"lineNumber":32,"author":{"gitId":"kheekheekhee"},"content":"  * Contributed to forum discussions (examples: [1](), [2](), [3](), [4]())","lastModifiedDate":"2021-10-07"},{"lineNumber":33,"author":{"gitId":"kheekheekhee"},"content":"  * Reported bugs and suggestions for other teams in the class (examples: [1](), [2](), [3]())","lastModifiedDate":"2021-10-07"},{"lineNumber":34,"author":{"gitId":"kheekheekhee"},"content":"  * Some parts of the history feature I added was adopted by several other class mates ([1](), [2]())","lastModifiedDate":"2021-10-07"}],"authorContributionMap":{"marcuspeh":1,"kheekheekhee":33}},{"path":"docs/team/ongjingwen.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"Jingwencloud"},"content":"---","lastModifiedDate":"2021-10-07"},{"lineNumber":2,"author":{"gitId":"Jingwencloud"},"content":"layout: page","lastModifiedDate":"2021-10-07"},{"lineNumber":3,"author":{"gitId":"Jingwencloud"},"content":"title: Ong Jingwen\u0027s Project Portfolio Page","lastModifiedDate":"2021-10-07"},{"lineNumber":4,"author":{"gitId":"Jingwencloud"},"content":"---","lastModifiedDate":"2021-10-07"},{"lineNumber":5,"author":{"gitId":"Jingwencloud"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":6,"author":{"gitId":"Jingwencloud"},"content":"### Project: Around the World in $80","lastModifiedDate":"2021-10-07"},{"lineNumber":7,"author":{"gitId":"Jingwencloud"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":8,"author":{"gitId":"Jingwencloud"},"content":"Around the World in $80 is a desktop application that splits bills between different contacts. The user interacts with it using a CLI, and it has a GUI created with JavaFX. It is written in Java, and has about 10 kLoC.","lastModifiedDate":"2021-10-07"},{"lineNumber":9,"author":{"gitId":"Jingwencloud"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":10,"author":{"gitId":"Jingwencloud"},"content":"Given below are my contributions to the project. [RepoSense link](https://nus-cs2103-ay2122s1.github.io/tp-dashboard/?search\u003d\u0026sort\u003dgroupTitle\u0026sortWithin\u003dtitle\u0026timeframe\u003dcommit\u0026mergegroup\u003d\u0026groupSelect\u003dgroupByRepos\u0026breakdown\u003dtrue\u0026checkedFileTypes\u003ddocs~functional-code~test-code~other\u0026since\u003d2021-09-17\u0026tabOpen\u003dtrue\u0026tabType\u003dauthorship\u0026tabAuthor\u003dJingwencloud\u0026tabRepo\u003dAY2122S1-CS2103T-F13-1%2Ftp%5Bmaster%5D\u0026authorshipIsMergeGroup\u003dfalse\u0026authorshipFileTypes\u003ddocs\u0026authorshipIsBinaryFileTypeChecked\u003dfalse\u0026zFR\u003dfalse)","lastModifiedDate":"2021-10-07"},{"lineNumber":11,"author":{"gitId":"Jingwencloud"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":12,"author":{"gitId":"Jingwencloud"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":13,"author":{"gitId":"Jingwencloud"},"content":"* **New Feature**: Added the ability to list expenses of a specified group.","lastModifiedDate":"2021-10-07"},{"lineNumber":14,"author":{"gitId":"Jingwencloud"},"content":"    * What it does: Allows the user to view all the expenses for a certain group.","lastModifiedDate":"2021-10-07"},{"lineNumber":15,"author":{"gitId":"Jingwencloud"},"content":"    * Justification: This feature is crucial as the user should be able to view their expenses for different groups.","lastModifiedDate":"2021-10-07"},{"lineNumber":16,"author":{"gitId":"Jingwencloud"},"content":"    * Highlights: This implementation added a new command \u0027expenses\u0027 to list expenses of a group.","lastModifiedDate":"2021-10-07"},{"lineNumber":17,"author":{"gitId":"Jingwencloud"},"content":"    * Contribution: Built the entire framework for this feature.","lastModifiedDate":"2021-10-07"},{"lineNumber":18,"author":{"gitId":"Jingwencloud"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":19,"author":{"gitId":"Jingwencloud"},"content":"* **Enhancements to existing features**:","lastModifiedDate":"2021-10-07"},{"lineNumber":20,"author":{"gitId":"Jingwencloud"},"content":"    * Added the UI for expenses page.","lastModifiedDate":"2021-10-07"},{"lineNumber":21,"author":{"gitId":"Jingwencloud"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":22,"author":{"gitId":"Jingwencloud"},"content":"* **Documentation**:","lastModifiedDate":"2021-10-07"},{"lineNumber":23,"author":{"gitId":"Jingwencloud"},"content":"    * User Guide:","lastModifiedDate":"2021-10-07"},{"lineNumber":24,"author":{"gitId":"Jingwencloud"},"content":"        * Added documentation for `delete expense` feature","lastModifiedDate":"2021-10-07"},{"lineNumber":25,"author":{"gitId":"Jingwencloud"},"content":"    * Developer Guide:","lastModifiedDate":"2021-10-07"},{"lineNumber":26,"author":{"gitId":"Jingwencloud"},"content":"        * Added use cases for the `list persons` and \u0027delete expense\u0027 feature.","lastModifiedDate":"2021-10-07"},{"lineNumber":27,"author":{"gitId":"Jingwencloud"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":28,"author":{"gitId":"Jingwencloud"},"content":"* **Community**:","lastModifiedDate":"2021-10-07"},{"lineNumber":29,"author":{"gitId":"Jingwencloud"},"content":"    * PRs reviewed (with non-trivial review comments): [\\#12](), [\\#32](), [\\#19](), [\\#42]()","lastModifiedDate":"2021-10-07"},{"lineNumber":30,"author":{"gitId":"Jingwencloud"},"content":"    * Contributed to forum discussions (examples: [1](), [2](), [3](), [4]())","lastModifiedDate":"2021-10-07"},{"lineNumber":31,"author":{"gitId":"Jingwencloud"},"content":"    * Reported bugs and suggestions for other teams in the class (examples: [1](), [2](), [3]())","lastModifiedDate":"2021-10-07"}],"authorContributionMap":{"Jingwencloud":31}},{"path":"docs/team/ramapriyansrivatsanpurisaidevarajan.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"ramapriyan912001"},"content":"---","lastModifiedDate":"2021-10-04"},{"lineNumber":2,"author":{"gitId":"ramapriyan912001"},"content":"layout: page","lastModifiedDate":"2021-10-04"},{"lineNumber":3,"author":{"gitId":"ramapriyan912001"},"content":"title: Ramapriyan Srivatsan Purisai Devarajan\u0027s Project Portfolio Page","lastModifiedDate":"2021-10-04"},{"lineNumber":4,"author":{"gitId":"ramapriyan912001"},"content":"---","lastModifiedDate":"2021-10-04"},{"lineNumber":5,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":6,"author":{"gitId":"ramapriyan912001"},"content":"### Project: Around the World in $80","lastModifiedDate":"2021-10-04"},{"lineNumber":7,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":8,"author":{"gitId":"ramapriyan912001"},"content":"Around the World in $80 is a desktop application that allows group travellers to split bills between different contacts. The user interacts with it using a CLI, and it has a GUI created with JavaFX. It is written in Java, and has about 10 kLoC.","lastModifiedDate":"2021-10-04"},{"lineNumber":9,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":10,"author":{"gitId":"ramapriyan912001"},"content":"Given below are my contributions to the project. [RepoSense link](https://nus-cs2103-ay2122s1.github.io/tp-dashboard/?search\u003dramapriyan\u0026sort\u003dgroupTitle\u0026sortWithin\u003dtitle\u0026timeframe\u003dcommit\u0026mergegroup\u003d\u0026groupSelect\u003dgroupByRepos\u0026breakdown\u003dtrue\u0026checkedFileTypes\u003ddocs~functional-code~test-code~other\u0026since\u003d2021-09-17\u0026tabOpen\u003dfalse\u0026zFR\u003dfalse)","lastModifiedDate":"2021-10-05"},{"lineNumber":11,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":12,"author":{"gitId":"ramapriyan912001"},"content":"### Features","lastModifiedDate":"2021-10-04"},{"lineNumber":13,"author":{"gitId":"ramapriyan912001"},"content":"* **New Feature**: Constructed the `deletegroup` feature","lastModifiedDate":"2021-10-04"},{"lineNumber":14,"author":{"gitId":"ramapriyan912001"},"content":"    * What it does: Allows the user to delete a group with a command.","lastModifiedDate":"2021-10-04"},{"lineNumber":15,"author":{"gitId":"ramapriyan912001"},"content":"    * Justification: This feature is crucial as the user should be able to delete groups once they are obsolete or if the user has made an error.","lastModifiedDate":"2021-10-04"},{"lineNumber":16,"author":{"gitId":"ramapriyan912001"},"content":"    * Highlights: This implementation added in a new command `deletegroup` to delete a group by name.","lastModifiedDate":"2021-10-04"},{"lineNumber":17,"author":{"gitId":"ramapriyan912001"},"content":"    * Contribution: Built the entire framework for the feature including command and parser classes.","lastModifiedDate":"2021-10-25"},{"lineNumber":18,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":19,"author":{"gitId":"ramapriyan912001"},"content":"* **New Feature**: Contributed to `creategroup` feature.","lastModifiedDate":"2021-10-04"},{"lineNumber":20,"author":{"gitId":"ramapriyan912001"},"content":"  * What it does: Allows the user to create a group with select members with a command.","lastModifiedDate":"2021-10-04"},{"lineNumber":21,"author":{"gitId":"ramapriyan912001"},"content":"  * Justification: This feature is crucial as the user should be able to create groups with select members based on their travels.","lastModifiedDate":"2021-10-04"},{"lineNumber":22,"author":{"gitId":"ramapriyan912001"},"content":"  * Highlights: This implementation added in a new command `creategroup` to create a group with select members.","lastModifiedDate":"2021-10-04"},{"lineNumber":23,"author":{"gitId":"ramapriyan912001"},"content":"  * Contribution: Adapted command format and parser. Contributed significantly to the logic for storage of groups.","lastModifiedDate":"2021-10-04"},{"lineNumber":24,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":25,"author":{"gitId":"ramapriyan912001"},"content":"* **New Feature**: Contributed to `deleteexpense` feature.","lastModifiedDate":"2021-10-25"},{"lineNumber":26,"author":{"gitId":"ramapriyan912001"},"content":"    * What it does: Allows the user to delete an expense with a command.","lastModifiedDate":"2021-10-25"},{"lineNumber":27,"author":{"gitId":"ramapriyan912001"},"content":"    * Justification: This feature is crucial as the user should be able to delete errant expense entries.","lastModifiedDate":"2021-10-25"},{"lineNumber":28,"author":{"gitId":"ramapriyan912001"},"content":"    * Highlights: This implementation added in a new command `deleteexpense` to delete an expense by index position on list shown on screen.","lastModifiedDate":"2021-10-25"},{"lineNumber":29,"author":{"gitId":"ramapriyan912001"},"content":"    * Contribution: Built the entire framework for the feature including command and parser classes.","lastModifiedDate":"2021-10-25"},{"lineNumber":30,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":31,"author":{"gitId":"ramapriyan912001"},"content":"* **New Feature**: Contributed to `calculatepayments` feature.","lastModifiedDate":"2021-10-25"},{"lineNumber":32,"author":{"gitId":"ramapriyan912001"},"content":"    * What it does: Provides the users with a set of easy transactions for them to settle their debts from the trip.","lastModifiedDate":"2021-10-25"},{"lineNumber":33,"author":{"gitId":"ramapriyan912001"},"content":"    * Justification: This feature is crucial as the users should be able to efficiently settle their debts in a manner that leaves no room for disputes, and error by manual computation.","lastModifiedDate":"2021-10-25"},{"lineNumber":34,"author":{"gitId":"ramapriyan912001"},"content":"    * Highlights: This implementation added in a new command `calculatepayments` to provide users with a number of suggested transactions to settle their debts from the trip.","lastModifiedDate":"2021-10-25"},{"lineNumber":35,"author":{"gitId":"ramapriyan912001"},"content":"    * Contribution: Built the entire framework for the feature including command and parser classes.","lastModifiedDate":"2021-10-25"},{"lineNumber":36,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":37,"author":{"gitId":"ramapriyan912001"},"content":"### Others","lastModifiedDate":"2021-10-04"},{"lineNumber":38,"author":{"gitId":"ramapriyan912001"},"content":"* **Project management**","lastModifiedDate":"2021-10-04"},{"lineNumber":39,"author":{"gitId":"ramapriyan912001"},"content":"    * Managed releases: -","lastModifiedDate":"2021-10-04"},{"lineNumber":40,"author":{"gitId":"ramapriyan912001"},"content":"    ","lastModifiedDate":"2021-10-04"},{"lineNumber":41,"author":{"gitId":"ramapriyan912001"},"content":"* **Miscellaneous**","lastModifiedDate":"2021-10-25"},{"lineNumber":42,"author":{"gitId":"ramapriyan912001"},"content":"    * Created storage classes for expenses and groups.","lastModifiedDate":"2021-10-25"},{"lineNumber":43,"author":{"gitId":"ramapriyan912001"},"content":"    * Created UI classes for displaying of payments to be made via the `calculate payments` command.","lastModifiedDate":"2021-10-25"},{"lineNumber":44,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":45,"author":{"gitId":"ramapriyan912001"},"content":"* **Documentation**:","lastModifiedDate":"2021-10-04"},{"lineNumber":46,"author":{"gitId":"ramapriyan912001"},"content":"    * User Guide:","lastModifiedDate":"2021-10-04"},{"lineNumber":47,"author":{"gitId":"ramapriyan912001"},"content":"        * Documented `delete group`, `create group`, `delete expense` and `calculatepayments` features.","lastModifiedDate":"2021-10-25"},{"lineNumber":48,"author":{"gitId":"ramapriyan912001"},"content":"        * Added details of `Quick Start`.","lastModifiedDate":"2021-10-04"},{"lineNumber":49,"author":{"gitId":"ramapriyan912001"},"content":"        * Added details of `delete group`, `create group`, `delete expense`, `calculatepayments` and `help` to Command Summary table.","lastModifiedDate":"2021-10-25"},{"lineNumber":50,"author":{"gitId":"ramapriyan912001"},"content":"    * Developer Guide:","lastModifiedDate":"2021-10-04"},{"lineNumber":51,"author":{"gitId":"ramapriyan912001"},"content":"        * Added details for `creategroup`, `deletegroup`, `deleteexpense`, and `calculatepayments` features, including sequence and activity diagrams.","lastModifiedDate":"2021-10-25"},{"lineNumber":52,"author":{"gitId":"ramapriyan912001"},"content":"        * Added use cases for `delete group`, `delete expense`, `calculatepayments`, and `help`.","lastModifiedDate":"2021-10-25"},{"lineNumber":53,"author":{"gitId":"ramapriyan912001"},"content":"    * Created labels for issue-tracking and documentation.","lastModifiedDate":"2021-10-04"},{"lineNumber":54,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":55,"author":{"gitId":"ramapriyan912001"},"content":"* **Community**:","lastModifiedDate":"2021-10-04"},{"lineNumber":56,"author":{"gitId":"ramapriyan912001"},"content":"    * PRs reviewed (with non-trivial review comments): [\\#113](https://github.com/AY2122S1-CS2103T-F13-1/tp/pull/113), [\\#121](https://github.com/AY2122S1-CS2103T-F13-1/tp/pull/121), [\\#166](https://github.com/AY2122S1-CS2103T-F13-1/tp/pull/166)","lastModifiedDate":"2021-10-25"},{"lineNumber":57,"author":{"gitId":"ramapriyan912001"},"content":"    * Worked together with [@chrus-chong](https://github.com/chrus-chong) on group features.","lastModifiedDate":"2021-10-05"}],"authorContributionMap":{"ramapriyan912001":57}},{"path":"docs/tutorials/AddRemark.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-07-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-07-29"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: \"Tutorial: Adding a command\"","lastModifiedDate":"2020-07-29"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-07-29"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":6,"author":{"gitId":"-"},"content":"Let\u0027s walk you through the implementation of a new command — `remark`.","lastModifiedDate":"2020-07-29"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":8,"author":{"gitId":"-"},"content":"This command allows users of the AddressBook application to add optional remarks to people in their address book and edit it if required. The command should have the following format:","lastModifiedDate":"2020-07-29"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":10,"author":{"gitId":"-"},"content":"`remark INDEX r/REMARK` (e.g., `remark 2 r/Likes baseball`)","lastModifiedDate":"2020-07-29"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":12,"author":{"gitId":"-"},"content":"We’ll assume that you have already set up the development environment as outlined in the Developer’s Guide.","lastModifiedDate":"2020-07-29"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"## Create a new `remark` command","lastModifiedDate":"2020-07-29"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":17,"author":{"gitId":"-"},"content":"Looking in the `logic.command` package, you will notice that each existing command have their own class. All the commands inherit from the abstract class `Command` which means that they must override `execute()`. Each `Command` returns an instance of `CommandResult` upon success and `CommandResult#feedbackToUser` is printed to the `ResultDisplay`.","lastModifiedDate":"2020-07-29"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":19,"author":{"gitId":"-"},"content":"Let’s start by creating a new `RemarkCommand` class in the `src/main/java/seedu/address/logic/command` directory.","lastModifiedDate":"2020-07-29"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"For now, let’s keep `RemarkCommand` as simple as possible and print some output. We accomplish that by returning a `CommandResult` with an accompanying message.","lastModifiedDate":"2020-07-29"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":23,"author":{"gitId":"-"},"content":"**`RemarkCommand.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":25,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":26,"author":{"gitId":"ramapriyan912001"},"content":"package seedu.awe.logic.commands;","lastModifiedDate":"2021-10-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":28,"author":{"gitId":"ramapriyan912001"},"content":"import seedu.awe.model.Model;","lastModifiedDate":"2021-10-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":30,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-07-29"},{"lineNumber":31,"author":{"gitId":"-"},"content":" * Changes the remark of an existing person in the address book.","lastModifiedDate":"2020-07-29"},{"lineNumber":32,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-07-29"},{"lineNumber":33,"author":{"gitId":"-"},"content":"public class RemarkCommand extends Command {","lastModifiedDate":"2020-07-29"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"remark\";","lastModifiedDate":"2020-07-29"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2020-07-29"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return new CommandResult(\"Hello from remark\");","lastModifiedDate":"2020-07-29"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":41,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":42,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":44,"author":{"gitId":"-"},"content":"### Hook `RemarkCommand` into the application","lastModifiedDate":"2020-07-29"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":46,"author":{"gitId":"-"},"content":"Now that we have our `RemarkCommand` ready to be executed, we need to update `AddressBookParser#parseCommand()` to recognize the `remark` keyword. Add the new command to the `switch` block by creating a new `case` that returns a new instance of `RemarkCommand`.","lastModifiedDate":"2020-07-29"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":48,"author":{"gitId":"-"},"content":"You can refer to the changes in this [diff](https://github.com/se-edu/addressbook-level3/commit/35eb7286f18a029d39cb7a29df8f172a001e4fd8#diff-34ace715a8a8d2e5a66e71289f017b47).","lastModifiedDate":"2020-07-29"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":50,"author":{"gitId":"-"},"content":"### Run the application","lastModifiedDate":"2020-07-29"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":52,"author":{"gitId":"-"},"content":"Run `Main#main` and try out your new `RemarkCommand`. If everything went well, you should see something like this:","lastModifiedDate":"2020-07-29"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":54,"author":{"gitId":"-"},"content":"![Output displayed](../images/add-remark/RemarkHello.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":56,"author":{"gitId":"-"},"content":"## Change `RemarkCommand` to throw an exception","lastModifiedDate":"2020-07-29"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":58,"author":{"gitId":"-"},"content":"While we have successfully printed a message to `ResultDisplay`, the command does not do what it is supposed to do. Let’s change the command to throw a `CommandException` to accurately reflect that our command is still a work in progress.","lastModifiedDate":"2020-12-12"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":60,"author":{"gitId":"-"},"content":"![The relationship between RemarkCommand and Command](../images/add-remark/CommandInterface.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":62,"author":{"gitId":"-"},"content":"Following the convention in other commands, we add relevant messages as constants and use them.","lastModifiedDate":"2020-07-29"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":64,"author":{"gitId":"-"},"content":"**`RemarkCommand.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":66,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2021-08-01"},{"lineNumber":68,"author":{"gitId":"-"},"content":"            + \": Edits the remark of the person identified \"","lastModifiedDate":"2021-08-01"},{"lineNumber":69,"author":{"gitId":"-"},"content":"            + \"by the index number used in the last person listing. \"","lastModifiedDate":"2020-07-29"},{"lineNumber":70,"author":{"gitId":"-"},"content":"            + \"Existing remark will be overwritten by the input.\\n\"","lastModifiedDate":"2020-07-29"},{"lineNumber":71,"author":{"gitId":"-"},"content":"            + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2020-07-29"},{"lineNumber":72,"author":{"gitId":"-"},"content":"            + \"r/ [REMARK]\\n\"","lastModifiedDate":"2020-07-29"},{"lineNumber":73,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2020-07-29"},{"lineNumber":74,"author":{"gitId":"-"},"content":"            + \"r/ Likes to swim.\";","lastModifiedDate":"2020-07-29"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_NOT_IMPLEMENTED_YET \u003d","lastModifiedDate":"2021-08-01"},{"lineNumber":77,"author":{"gitId":"-"},"content":"            \"Remark command not implemented yet\";","lastModifiedDate":"2021-08-01"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2020-07-29"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        throw new CommandException(MESSAGE_NOT_IMPLEMENTED_YET);","lastModifiedDate":"2020-07-29"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":83,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":85,"author":{"gitId":"-"},"content":"## Enhancing `RemarkCommand`","lastModifiedDate":"2020-07-29"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":87,"author":{"gitId":"-"},"content":"Let’s change `RemarkCommand` to parse input from the user.","lastModifiedDate":"2020-07-29"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":89,"author":{"gitId":"-"},"content":"### Make the command accept parameters","lastModifiedDate":"2020-07-29"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":91,"author":{"gitId":"-"},"content":"We start by modifying the constructor of `RemarkCommand` to accept an `Index` and a `String`. While we are at it, let’s change the error message to echo the values. While this is not a replacement for tests, it is an obvious way to tell if our code is functioning as intended.","lastModifiedDate":"2020-07-29"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":93,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":94,"author":{"gitId":"ramapriyan912001"},"content":"import static seedu.awe.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2021-10-05"},{"lineNumber":95,"author":{"gitId":"-"},"content":"//...","lastModifiedDate":"2020-07-29"},{"lineNumber":96,"author":{"gitId":"-"},"content":"public class RemarkCommand extends Command {","lastModifiedDate":"2020-07-29"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    //...","lastModifiedDate":"2020-07-29"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_ARGUMENTS \u003d \"Index: %1$d, Remark: %2$s\";","lastModifiedDate":"2020-07-29"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    private final Index index;","lastModifiedDate":"2020-07-29"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    private final String remark;","lastModifiedDate":"2020-07-29"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-07-29"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     * @param index of the person in the filtered person list to edit the remark","lastModifiedDate":"2020-07-29"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     * @param remark of the person to be updated to","lastModifiedDate":"2020-07-29"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-07-29"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    public RemarkCommand(Index index, String remark) {","lastModifiedDate":"2020-07-29"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        requireAllNonNull(index, remark);","lastModifiedDate":"2020-07-29"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        this.index \u003d index;","lastModifiedDate":"2020-07-29"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        this.remark \u003d remark;","lastModifiedDate":"2020-07-29"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2020-07-29"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        throw new CommandException(","lastModifiedDate":"2021-08-01"},{"lineNumber":116,"author":{"gitId":"-"},"content":"                String.format(MESSAGE_ARGUMENTS, index.getOneBased(), remark));","lastModifiedDate":"2021-08-01"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2020-07-29"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2020-07-29"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2020-07-29"},{"lineNumber":123,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2020-07-29"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-07-29"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2020-07-29"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        if (!(other instanceof RemarkCommand)) {","lastModifiedDate":"2020-07-29"},{"lineNumber":128,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2020-07-29"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-07-29"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2020-07-29"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        RemarkCommand e \u003d (RemarkCommand) other;","lastModifiedDate":"2020-07-29"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        return index.equals(e.index)","lastModifiedDate":"2020-07-29"},{"lineNumber":134,"author":{"gitId":"-"},"content":"                \u0026\u0026 remark.equals(e.remark);","lastModifiedDate":"2020-07-29"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":136,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":137,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":139,"author":{"gitId":"-"},"content":"Your code should look something like [this](https://github.com/se-edu/addressbook-level3/commit/35eb7286f18a029d39cb7a29df8f172a001e4fd8#diff-34ace715a8a8d2e5a66e71289f017b47) after you are done.","lastModifiedDate":"2020-07-29"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":141,"author":{"gitId":"-"},"content":"### Parse user input","lastModifiedDate":"2020-07-29"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":143,"author":{"gitId":"-"},"content":"Now let’s move on to writing a parser that will extract the index and remark from the input provided by the user.","lastModifiedDate":"2020-07-29"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":145,"author":{"gitId":"ramapriyan912001"},"content":"Create a `RemarkCommandParser` class in the `seedu.awe.logic.parser` package. The class must extend the `Parser` interface.","lastModifiedDate":"2021-10-05"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":147,"author":{"gitId":"-"},"content":"![The relationship between Parser and RemarkCommandParser](../images/add-remark/ParserInterface.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":149,"author":{"gitId":"-"},"content":"Thankfully, `ArgumentTokenizer#tokenize()` makes it trivial to parse user input. Let’s take a look at the JavaDoc provided for the function to understand what it does.","lastModifiedDate":"2020-07-29"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":151,"author":{"gitId":"-"},"content":"**`ArgumentTokenizer.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":153,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":154,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-07-29"},{"lineNumber":155,"author":{"gitId":"-"},"content":" * Tokenizes an arguments string and returns an {@code ArgumentMultimap}","lastModifiedDate":"2020-07-29"},{"lineNumber":156,"author":{"gitId":"-"},"content":" * object that maps prefixes to their respective argument values. Only the","lastModifiedDate":"2020-07-29"},{"lineNumber":157,"author":{"gitId":"-"},"content":" * given prefixes will be recognized in the arguments string.","lastModifiedDate":"2020-07-29"},{"lineNumber":158,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2020-07-29"},{"lineNumber":159,"author":{"gitId":"-"},"content":" * @param argsString Arguments string of the form:","lastModifiedDate":"2020-07-29"},{"lineNumber":160,"author":{"gitId":"-"},"content":" * {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}","lastModifiedDate":"2020-07-29"},{"lineNumber":161,"author":{"gitId":"-"},"content":" * @param prefixes   Prefixes to tokenize the arguments string with","lastModifiedDate":"2020-07-29"},{"lineNumber":162,"author":{"gitId":"-"},"content":" * @return           ArgumentMultimap object that maps prefixes to their","lastModifiedDate":"2020-07-29"},{"lineNumber":163,"author":{"gitId":"-"},"content":" * arguments","lastModifiedDate":"2020-07-29"},{"lineNumber":164,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-07-29"},{"lineNumber":165,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":167,"author":{"gitId":"-"},"content":"We can tell `ArgumentTokenizer#tokenize()` to look out for our new prefix `r/` and it will return us an instance of `ArgumentMultimap`. Now let’s find out what we need to do in order to obtain the Index and String that we need. Let’s look through `ArgumentMultimap` :","lastModifiedDate":"2020-07-29"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":169,"author":{"gitId":"-"},"content":"**`ArgumentMultimap.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":171,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":172,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-07-29"},{"lineNumber":173,"author":{"gitId":"-"},"content":" * Returns the last value of {@code prefix}.","lastModifiedDate":"2020-07-29"},{"lineNumber":174,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-07-29"},{"lineNumber":175,"author":{"gitId":"-"},"content":"public Optional\u003cString\u003e getValue(Prefix prefix) {","lastModifiedDate":"2020-07-29"},{"lineNumber":176,"author":{"gitId":"-"},"content":"    List\u003cString\u003e values \u003d getAllValues(prefix);","lastModifiedDate":"2020-07-29"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    return values.isEmpty() ? Optional.empty() :","lastModifiedDate":"2020-07-29"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        Optional.of(values.get(values.size() - 1));","lastModifiedDate":"2020-07-29"},{"lineNumber":179,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":180,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":182,"author":{"gitId":"-"},"content":"This appears to be what we need to get a String of the remark. But what about the Index? Let\u0027s take a quick peek at existing `Command` that uses an index to see how it is done.","lastModifiedDate":"2020-07-29"},{"lineNumber":183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":184,"author":{"gitId":"-"},"content":"**`DeleteCommandParser.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":185,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":186,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":187,"author":{"gitId":"-"},"content":"Index index \u003d ParserUtil.parseIndex(args);","lastModifiedDate":"2020-07-29"},{"lineNumber":188,"author":{"gitId":"-"},"content":"return new DeleteCommand(index);","lastModifiedDate":"2020-07-29"},{"lineNumber":189,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":191,"author":{"gitId":"-"},"content":"There appears to be another utility class that obtains an `Index` from the input provided by the user.","lastModifiedDate":"2020-07-29"},{"lineNumber":192,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":193,"author":{"gitId":"-"},"content":"Now that we have the know-how to extract the data that we need from the user’s input, we can parse the user command and create a new instance of `RemarkCommand`, as given below.","lastModifiedDate":"2020-07-29"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":195,"author":{"gitId":"-"},"content":"**`RemarkCommandParser.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":197,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":198,"author":{"gitId":"-"},"content":"public RemarkCommand parse(String args) throws ParseException {","lastModifiedDate":"2020-07-29"},{"lineNumber":199,"author":{"gitId":"-"},"content":"    requireNonNull(args);","lastModifiedDate":"2020-07-29"},{"lineNumber":200,"author":{"gitId":"-"},"content":"    ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(args,","lastModifiedDate":"2020-07-29"},{"lineNumber":201,"author":{"gitId":"-"},"content":"        PREFIX_REMARK);","lastModifiedDate":"2020-07-29"},{"lineNumber":202,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":203,"author":{"gitId":"-"},"content":"    Index index;","lastModifiedDate":"2020-07-29"},{"lineNumber":204,"author":{"gitId":"-"},"content":"    try {","lastModifiedDate":"2020-07-29"},{"lineNumber":205,"author":{"gitId":"-"},"content":"        index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2020-07-29"},{"lineNumber":206,"author":{"gitId":"-"},"content":"    } catch (IllegalValueException ive) {","lastModifiedDate":"2020-07-29"},{"lineNumber":207,"author":{"gitId":"-"},"content":"        throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2020-07-29"},{"lineNumber":208,"author":{"gitId":"-"},"content":"            RemarkCommand.MESSAGE_USAGE), ive);","lastModifiedDate":"2020-07-29"},{"lineNumber":209,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":210,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":211,"author":{"gitId":"-"},"content":"    String remark \u003d argMultimap.getValue(PREFIX_REMARK).orElse(\"\");","lastModifiedDate":"2020-07-29"},{"lineNumber":212,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":213,"author":{"gitId":"-"},"content":"    return new RemarkCommand(index, remark);","lastModifiedDate":"2020-07-29"},{"lineNumber":214,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":215,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":217,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":218,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":219,"author":{"gitId":"-"},"content":":information_source: Don’t forget to update `AddressBookParser` to use our new `RemarkCommandParser`!","lastModifiedDate":"2020-07-29"},{"lineNumber":220,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":221,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":222,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":223,"author":{"gitId":"-"},"content":"If you are stuck, check out the sample","lastModifiedDate":"2020-07-29"},{"lineNumber":224,"author":{"gitId":"-"},"content":"[here](https://github.com/se-edu/addressbook-level3/commit/dc6d5139d08f6403da0ec624ea32bd79a2ae0cbf#diff-fc19ecee89c3732a62fbc8c840250508).","lastModifiedDate":"2020-07-29"},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":226,"author":{"gitId":"-"},"content":"## Add `Remark` to the model","lastModifiedDate":"2020-07-29"},{"lineNumber":227,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":228,"author":{"gitId":"-"},"content":"Now that we have all the information that we need, let’s lay the groundwork for propagating the remarks added into the in-memory storage of person data. We achieve that by working with the `Person` model. Each field in a Person is implemented as a separate class (e.g. a `Name` object represents the person’s name). That means we should add a `Remark` class so that we can use a `Remark` object to represent a remark given to a person.","lastModifiedDate":"2020-07-29"},{"lineNumber":229,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":230,"author":{"gitId":"-"},"content":"### Add a new `Remark` class","lastModifiedDate":"2020-07-29"},{"lineNumber":231,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":232,"author":{"gitId":"ramapriyan912001"},"content":"Create a new `Remark` in `seedu.awe.model.person`. Since a `Remark` is a field that is similar to `Address`, we can reuse a significant bit of code.","lastModifiedDate":"2021-10-05"},{"lineNumber":233,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":234,"author":{"gitId":"-"},"content":"A copy-paste and search-replace later, you should have something like [this](https://github.com/se-edu/addressbook-level3/commit/4516e099699baa9e2d51801bd26f016d812dedcc#diff-af2f075d24dfcd333876f0fbce321f25). Note how `Remark` has no constrains and thus does not require input","lastModifiedDate":"2020-07-29"},{"lineNumber":235,"author":{"gitId":"-"},"content":"validation.","lastModifiedDate":"2020-07-29"},{"lineNumber":236,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":237,"author":{"gitId":"-"},"content":"### Make use of `Remark`","lastModifiedDate":"2020-07-29"},{"lineNumber":238,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":239,"author":{"gitId":"-"},"content":"Let’s change `RemarkCommand` and `RemarkCommandParser` to use the new `Remark` class instead of plain `String`. These should be relatively simple changes.","lastModifiedDate":"2020-07-29"},{"lineNumber":240,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":241,"author":{"gitId":"-"},"content":"## Add a placeholder element for remark to the UI","lastModifiedDate":"2020-07-29"},{"lineNumber":242,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":243,"author":{"gitId":"-"},"content":"Without getting too deep into `fxml`, let’s go on a 5 minute adventure to get some placeholder text to show up for each person.","lastModifiedDate":"2020-07-29"},{"lineNumber":244,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":245,"author":{"gitId":"marcuspeh"},"content":"Simply add the following to [`seedu.awe.ui.person.ContactCard`](https://github.com/se-edu/addressbook-level3/commit/850b78879582f38accb05dd20c245963c65ea599#diff-0c6b6abcfac8c205e075294f25e851fe).","lastModifiedDate":"2021-10-22"},{"lineNumber":246,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":247,"author":{"gitId":"-"},"content":"**`PersonCard.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":248,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":249,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":250,"author":{"gitId":"-"},"content":"@FXML","lastModifiedDate":"2020-07-29"},{"lineNumber":251,"author":{"gitId":"-"},"content":"private Label remark;","lastModifiedDate":"2020-07-29"},{"lineNumber":252,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":253,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":254,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":255,"author":{"gitId":"-"},"content":"`@FXML` is an annotation that marks a private or protected field and makes it accessible to FXML. It might sound like Greek to you right now, don’t worry — we will get back to it later.","lastModifiedDate":"2020-07-29"},{"lineNumber":256,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":257,"author":{"gitId":"-"},"content":"Then insert the following into [`main/resources/view/PersonListCard.fxml`](https://github.com/se-edu/addressbook-level3/commit/850b78879582f38accb05dd20c245963c65ea599#diff-12580431f55d7880578aa4c16f249e71).","lastModifiedDate":"2020-07-29"},{"lineNumber":258,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":259,"author":{"gitId":"-"},"content":"**`PersonListCard.fxml`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":260,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":261,"author":{"gitId":"-"},"content":"``` xml","lastModifiedDate":"2020-07-29"},{"lineNumber":262,"author":{"gitId":"-"},"content":"\u003cLabel fx:id\u003d\"remark\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$remark\" /\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":263,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":264,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":265,"author":{"gitId":"-"},"content":"That’s it! Fire up the application again and you should see something like this:","lastModifiedDate":"2020-07-29"},{"lineNumber":266,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":267,"author":{"gitId":"-"},"content":"![$remark shows up in each entry](../images/add-remark/$Remark.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":268,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":269,"author":{"gitId":"-"},"content":"## Modify `Person` to support a `Remark` field","lastModifiedDate":"2020-07-29"},{"lineNumber":270,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":271,"author":{"gitId":"-"},"content":"Since `PersonCard` displays data from a `Person`, we need to update `Person` to get our `Remark` displayed!","lastModifiedDate":"2020-07-29"},{"lineNumber":272,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":273,"author":{"gitId":"-"},"content":"### Modify `Person`","lastModifiedDate":"2020-07-29"},{"lineNumber":274,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":275,"author":{"gitId":"-"},"content":"We change the constructor of `Person` to take a `Remark`. We will also need to define new fields and accessors accordingly to store our new addition.","lastModifiedDate":"2020-07-29"},{"lineNumber":276,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":277,"author":{"gitId":"-"},"content":"### Update other usages of `Person`","lastModifiedDate":"2020-07-29"},{"lineNumber":278,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":279,"author":{"gitId":"-"},"content":"Unfortunately, a change to `Person` will cause other commands to break, you will have to modify these commands to use the updated `Person`!","lastModifiedDate":"2020-07-29"},{"lineNumber":280,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":281,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":282,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":283,"author":{"gitId":"-"},"content":":bulb: Use the `Find Usages` feature in IntelliJ IDEA on the `Person` class to find these commands.","lastModifiedDate":"2020-07-29"},{"lineNumber":284,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":285,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":286,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":287,"author":{"gitId":"-"},"content":"Refer to [this commit](https://github.com/se-edu/addressbook-level3/commit/ce998c37e65b92d35c91d28c7822cd139c2c0a5c) and check that you have got everything in order!","lastModifiedDate":"2020-07-29"},{"lineNumber":288,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":289,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":290,"author":{"gitId":"-"},"content":"## Updating Storage","lastModifiedDate":"2020-07-29"},{"lineNumber":291,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":292,"author":{"gitId":"-"},"content":"AddressBook stores data by serializing `JsonAdaptedPerson` into `json` with the help of an external library — Jackson. Let’s update `JsonAdaptedPerson` to work with our new `Person`!","lastModifiedDate":"2020-07-29"},{"lineNumber":293,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":294,"author":{"gitId":"-"},"content":"While the changes to code may be minimal, the test data will have to be updated as well.","lastModifiedDate":"2020-07-29"},{"lineNumber":295,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":296,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-warning\"\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":297,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":298,"author":{"gitId":"-"},"content":":exclamation: You must delete AddressBook’s storage file located at `/data/addressbook.json` before running it! Not doing so will cause AddressBook to default to an empty address book!","lastModifiedDate":"2020-07-29"},{"lineNumber":299,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":300,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":301,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":302,"author":{"gitId":"-"},"content":"Check out [this commit](https://github.com/se-edu/addressbook-level3/commit/556cbd0e03ff224d7a68afba171ad2eb0ce56bbf)","lastModifiedDate":"2020-07-29"},{"lineNumber":303,"author":{"gitId":"-"},"content":"to see what the changes entail.","lastModifiedDate":"2020-07-29"},{"lineNumber":304,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":305,"author":{"gitId":"-"},"content":"## Finalizing the UI","lastModifiedDate":"2020-07-29"},{"lineNumber":306,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":307,"author":{"gitId":"-"},"content":"Now that we have finalized the `Person` class and its dependencies, we can now bind the `Remark` field to the UI.","lastModifiedDate":"2020-07-29"},{"lineNumber":308,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":309,"author":{"gitId":"-"},"content":"Just add [this one line of code!](https://github.com/se-edu/addressbook-level3/commit/5b98fee11b6b3f5749b6b943c4f3bd3aa049b692)","lastModifiedDate":"2020-07-29"},{"lineNumber":310,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":311,"author":{"gitId":"-"},"content":"**`PersonCard.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":312,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":313,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":314,"author":{"gitId":"-"},"content":"public PersonCard(Person person, int displayedIndex) {","lastModifiedDate":"2020-07-29"},{"lineNumber":315,"author":{"gitId":"-"},"content":"    //...","lastModifiedDate":"2020-07-29"},{"lineNumber":316,"author":{"gitId":"-"},"content":"    remark.setText(person.getRemark().value);","lastModifiedDate":"2020-07-29"},{"lineNumber":317,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":318,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":319,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":320,"author":{"gitId":"-"},"content":"![The remark label is bound properly!](../images/add-remark/RemarkBound.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":321,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":322,"author":{"gitId":"-"},"content":"## Putting everything together","lastModifiedDate":"2020-07-29"},{"lineNumber":323,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":324,"author":{"gitId":"-"},"content":"After the previous step, we notice a peculiar regression — we went from displaying something to nothing at all. However, this is expected behavior as we are yet to update the `RemarkCommand` to make use of the code we\u0027ve been adding in the last few steps.","lastModifiedDate":"2020-07-29"},{"lineNumber":325,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":326,"author":{"gitId":"-"},"content":"### Update `RemarkCommand` and `RemarkCommandParser`","lastModifiedDate":"2020-07-29"},{"lineNumber":327,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":328,"author":{"gitId":"-"},"content":"In this last step, we modify `RemarkCommand#execute()` to change the `Remark` of a `Person`. Since all fields in a `Person` are immutable, we create a new instance of a `Person` with the values that we want and","lastModifiedDate":"2020-07-29"},{"lineNumber":329,"author":{"gitId":"-"},"content":"save it with `Model#setPerson()`.","lastModifiedDate":"2020-07-29"},{"lineNumber":330,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":331,"author":{"gitId":"-"},"content":"**`RemarkCommand.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":332,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":333,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":334,"author":{"gitId":"-"},"content":"//...","lastModifiedDate":"2020-07-29"},{"lineNumber":335,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_ADD_REMARK_SUCCESS \u003d \"Added remark to Person: %1$s\";","lastModifiedDate":"2020-07-29"},{"lineNumber":336,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DELETE_REMARK_SUCCESS \u003d \"Removed remark from Person: %1$s\";","lastModifiedDate":"2020-07-29"},{"lineNumber":337,"author":{"gitId":"-"},"content":"//...","lastModifiedDate":"2020-07-29"},{"lineNumber":338,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":339,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2020-07-29"},{"lineNumber":340,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2020-07-29"},{"lineNumber":341,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":342,"author":{"gitId":"-"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2020-07-29"},{"lineNumber":343,"author":{"gitId":"-"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2020-07-29"},{"lineNumber":344,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-07-29"},{"lineNumber":345,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":346,"author":{"gitId":"-"},"content":"        Person personToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2020-07-29"},{"lineNumber":347,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d new Person(","lastModifiedDate":"2021-08-01"},{"lineNumber":348,"author":{"gitId":"-"},"content":"                personToEdit.getName(), personToEdit.getPhone(), personToEdit.getEmail(),","lastModifiedDate":"2021-08-01"},{"lineNumber":349,"author":{"gitId":"-"},"content":"                personToEdit.getAddress(), remark, personToEdit.getTags());","lastModifiedDate":"2020-07-29"},{"lineNumber":350,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":351,"author":{"gitId":"-"},"content":"        model.setPerson(personToEdit, editedPerson);","lastModifiedDate":"2020-07-29"},{"lineNumber":352,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2020-07-29"},{"lineNumber":353,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":354,"author":{"gitId":"-"},"content":"        return new CommandResult(generateSuccessMessage(editedPerson));","lastModifiedDate":"2020-07-29"},{"lineNumber":355,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":356,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":357,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-07-29"},{"lineNumber":358,"author":{"gitId":"-"},"content":"     * Generates a command execution success message based on whether","lastModifiedDate":"2021-08-01"},{"lineNumber":359,"author":{"gitId":"-"},"content":"     * the remark is added to or removed from","lastModifiedDate":"2021-08-01"},{"lineNumber":360,"author":{"gitId":"-"},"content":"     * {@code personToEdit}.","lastModifiedDate":"2020-07-29"},{"lineNumber":361,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-07-29"},{"lineNumber":362,"author":{"gitId":"-"},"content":"    private String generateSuccessMessage(Person personToEdit) {","lastModifiedDate":"2020-07-29"},{"lineNumber":363,"author":{"gitId":"-"},"content":"        String message \u003d !remark.value.isEmpty() ? MESSAGE_ADD_REMARK_SUCCESS : MESSAGE_DELETE_REMARK_SUCCESS;","lastModifiedDate":"2020-07-29"},{"lineNumber":364,"author":{"gitId":"-"},"content":"        return String.format(message, personToEdit);","lastModifiedDate":"2020-07-29"},{"lineNumber":365,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":366,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":367,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":368,"author":{"gitId":"-"},"content":"![Congratulations!](../images/add-remark/RemarkComplete.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":369,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":370,"author":{"gitId":"-"},"content":"## Writing tests","lastModifiedDate":"2020-07-29"},{"lineNumber":371,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":372,"author":{"gitId":"-"},"content":"Tests are crucial to ensuring that bugs don’t slip into the codebase unnoticed. This is especially true for large code bases where a change might lead to unintended behavior.","lastModifiedDate":"2020-07-29"},{"lineNumber":373,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":374,"author":{"gitId":"-"},"content":"Let’s verify the correctness of our code by writing some tests!","lastModifiedDate":"2020-07-29"},{"lineNumber":375,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":376,"author":{"gitId":"-"},"content":"Of course you can simply add the test cases manually, like you\u0027ve been doing all along this tutorial. The result would be like the test cases in [here](https://github.com/se-edu/addressbook-level3/commit/fac8f3fd855d55831ca0cc73313b5943d49d4d6e#diff-d749de38392f7ea504da7824641ba8d9). Alternatively, you can get the help of IntelliJ to generate the skeletons of the test cases, as explained in the next section.","lastModifiedDate":"2021-08-01"},{"lineNumber":377,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-01"},{"lineNumber":378,"author":{"gitId":"-"},"content":"### Automatically generating tests","lastModifiedDate":"2020-07-29"},{"lineNumber":379,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":380,"author":{"gitId":"-"},"content":"The goal is to write effective and efficient tests to ensure that `RemarkCommand#execute()` behaves as expected.","lastModifiedDate":"2020-07-29"},{"lineNumber":381,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":382,"author":{"gitId":"-"},"content":"The convention for test names is `methodName_testScenario_expectedResult`. An example would be","lastModifiedDate":"2020-07-29"},{"lineNumber":383,"author":{"gitId":"-"},"content":"`execute_filteredList_success`.","lastModifiedDate":"2020-07-29"},{"lineNumber":384,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":385,"author":{"gitId":"-"},"content":"Let’s create a test for `RemarkCommand#execute()` to test that adding a remark works. On `IntelliJ IDEA` you can bring up the context menu and choose to `Go To` \\\u003e `Test` or use the appropriate keyboard shortcut.","lastModifiedDate":"2020-07-29"},{"lineNumber":386,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":387,"author":{"gitId":"-"},"content":"![Using the context menu to jump to tests](../images/add-remark/ContextMenu.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":388,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":389,"author":{"gitId":"-"},"content":"Then, create a test for the `execute` method.","lastModifiedDate":"2020-07-29"},{"lineNumber":390,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":391,"author":{"gitId":"-"},"content":"![Creating a test for `execute`.](../images/add-remark/CreateTest.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":392,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":393,"author":{"gitId":"-"},"content":"Following convention, let’s change the name of the generated method to `execute_addRemarkUnfilteredList_success`.","lastModifiedDate":"2020-07-29"},{"lineNumber":394,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":395,"author":{"gitId":"-"},"content":"Let’s use the utility functions provided in `CommandTestUtil`. The functions ensure that commands produce the expected `CommandResult` and output the correct message. In this case, `CommandTestUtil#assertCommandSuccess` is the best fit as we are testing that a `RemarkCommand` will successfully add a `Remark`.","lastModifiedDate":"2020-07-29"},{"lineNumber":396,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":397,"author":{"gitId":"-"},"content":"You should end up with a test that looks something like [this](https://github.com/se-edu/addressbook-level3/commit/fac8f3fd855d55831ca0cc73313b5943d49d4d6e#diff-d749de38392f7ea504da7824641ba8d9).","lastModifiedDate":"2020-07-29"},{"lineNumber":398,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":399,"author":{"gitId":"-"},"content":"## Conclusion","lastModifiedDate":"2020-07-29"},{"lineNumber":400,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":401,"author":{"gitId":"-"},"content":"This concludes the tutorial for adding a new `Command` to AddressBook.","lastModifiedDate":"2020-07-29"}],"authorContributionMap":{"marcuspeh":1,"ramapriyan912001":5,"-":395}},{"path":"docs/tutorials/RemovingFields.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: \"Tutorial: Removing Fields\"","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003e Perfection is achieved, not when there is nothing more to add, but when there is nothing left to take away.","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003e —  Antoine de Saint-Exupery","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"When working on an existing code base, you will most likely find that some features that are no longer necessary.","lastModifiedDate":"2021-08-01"},{"lineNumber":11,"author":{"gitId":"-"},"content":"This tutorial aims to give you some practice on such a code \u0027removal\u0027 activity by removing the `address` field from `Person` class.","lastModifiedDate":"2021-08-01"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-01"},{"lineNumber":13,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-success\"\u003e","lastModifiedDate":"2021-08-01"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-01"},{"lineNumber":15,"author":{"gitId":"-"},"content":"**If you have done the [Add `remark` command tutorial](AddRemark.html)  already**, you should know where the code had to be updated to add the field `remark`. From that experience, you can deduce where the code needs to be changed to _remove_ that field too. The removing of the `address` field can be done similarly.","lastModifiedDate":"2021-08-01"},{"lineNumber":16,"author":{"gitId":"-"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-08-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-08-01"},{"lineNumber":18,"author":{"gitId":"-"},"content":"However, if you have no such prior knowledge, removing a field can take a quite a bit of detective work. This tutorial takes you through that process. **At least have a read even if you don\u0027t actually do the steps yourself.**","lastModifiedDate":"2021-08-01"},{"lineNumber":19,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-08-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"## Safely deleting `Address`","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"IntelliJ IDEA provides a refactoring tool that can identify *most* parts of a removal easily. Let’s try to use it as much as we can.","lastModifiedDate":"2021-08-01"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"### Assisted refactoring","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"ramapriyan912001"},"content":"The `address` field in `Person` is actually an instance of the `seedu.awe.model.person.Address` class. Since removing the `Address` class will break the application, we start by identifying `Address`\u0027s usages. This allows us to see code that depends on `Address` to function properly and edit them on a case-by-case basis. Right-click the `Address` class and select `Refactor` \\\u003e `Safe Delete` through the menu.","lastModifiedDate":"2021-10-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"* :bulb: To make things simpler, you can unselect the options `Search in comments and strings` and `Search for text occurrences`","lastModifiedDate":"2021-08-01"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"![Usages detected](../images/remove/UnsafeDelete.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"Choose to `View Usages` and you should be presented with a list of `Safe Delete Conflicts`. These conflicts describe locations in which the `Address` class is used.","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"![List of conflicts](../images/remove/SafeDeleteConflicts.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"Remove usages of `Address` by performing `Safe Delete`s on each entry i.e., double-click on the entry (which takes you to the code in concern, right-click on that entity, and choose `Refactor` -\u003e `Safe delete` as before). You will need to exercise discretion when removing usages of `Address`. Functions like `ParserUtil#parseAddress()` can be safely removed but its usages must be removed as well. Other usages like in `EditPersonDescriptor` may require more careful inspection.","lastModifiedDate":"2021-08-01"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"Let’s try removing references to `Address` in `EditPersonDescriptor`.","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"1. Safe delete the field `address` in `EditPersonDescriptor`.","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"1. Select `Yes` when prompted to remove getters and setters.","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"1. Select `View Usages` again.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"   ![UnsafeDeleteOnField](../images/remove/UnsafeDeleteOnField.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"1. Remove the usages of `address` and select `Do refactor` when you are done.","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"   \u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"   :bulb: **Tip:** Removing usages may result in errors. Exercise discretion and fix them. For example, removing the `address` field from the `Person` class will require you to modify its constructor.","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"   \u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"1. Repeat the steps for the remaining usages of `Address`","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"After you are done, verify that the application still works by compiling and running it again.","lastModifiedDate":"2020-05-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"### Manual refactoring","lastModifiedDate":"2020-05-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"Unfortunately, there are usages of `Address` that IntelliJ IDEA cannot identify. You can find them by searching for instances of the word `address` in your code (`Edit` \\\u003e `Find` \\\u003e `Find in path`).","lastModifiedDate":"2020-05-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"Places of interest to look out for would be resources used by the application. `main/resources` contains images and `fxml` files used by the application and `test/resources` contains test data. For example, there is a `$address` in each `PersonCard` that has not been removed nor identified.","lastModifiedDate":"2020-05-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"![$address](../images/remove/$address.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"A quick look at the `PersonCard` class and its `fxml` file quickly reveals why it slipped past the automated refactoring.","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"**`PersonCard.java`**","lastModifiedDate":"2020-05-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":"...","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"@FXML","lastModifiedDate":"2020-05-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"private Label address;","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"...","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"**`PersonCard.fxml`**","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"``` xml","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"...","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"\u003cLabel fx:id\u003d\"phone\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$phone\" /\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"\u003cLabel fx:id\u003d\"address\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$address\" /\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"\u003cLabel fx:id\u003d\"email\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$email\" /\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"...","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"After removing the `Label`, we can proceed to formally test our code. If everything went well, you should have most of your tests pass. Fix any remaining errors until the tests all pass.","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"## Tidying up","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"At this point, your application is working as intended and all your tests are passing. What’s left to do is to clean up references to `Address` in test data and documentation.","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"In `src/test/data/`, data meant for testing purposes are stored. While keeping the `address` field in the json files does not cause the tests to fail, it is not good practice to let cruft from old features accumulate.","lastModifiedDate":"2020-05-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"ramapriyan912001"},"content":"**`invalidPersonAwe.json`:**","lastModifiedDate":"2021-10-31"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"```json","lastModifiedDate":"2020-05-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"{","lastModifiedDate":"2020-05-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":"  \"persons\": [ {","lastModifiedDate":"2020-05-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    \"name\": \"Person with invalid name field: Ha!ns Mu@ster\",","lastModifiedDate":"2020-05-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    \"phone\": \"9482424\",","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    \"email\": \"hans@example.com\",","lastModifiedDate":"2020-05-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    \"address\": \"4th street\"","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"  } ]","lastModifiedDate":"2020-05-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-05-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":"You can go through each individual `json` file and manually remove the `address` field.","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"ramapriyan912001":2,"-":110}},{"path":"docs/tutorials/TracingCode.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: \"Tutorial: Tracing code\"","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003e Indeed, the ratio of time spent reading versus writing is well over 10 to 1. We are constantly reading old code as part of the effort to write new code. …​\\[Therefore,\\] making it easy to read makes it easier to write.","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003e —  Robert C. Martin Clean Code: A Handbook of Agile Software Craftsmanship","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"When trying to understand an unfamiliar code base, one common strategy used is to trace some representative execution path through the code base. One easy way to trace an execution path is to use a debugger to step through the code. In this tutorial, you will be using the IntelliJ IDEA’s debugger to trace the execution path of a specific user command.","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"## Before we start","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"Before we jump into the code, it is useful to get an idea of the overall structure and the high-level behavior of the application. This is provided in the \u0027Architecture\u0027 section of the developer guide. In particular, the architecture diagram (reproduced below), tells us that the App consists of several components.","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"![ArchitectureDiagram](../images/ArchitectureDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"It also has a sequence diagram (reproduced below) that tells us how a command propagates through the App.","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"../images/ArchitectureSequenceDiagram.png\" width\u003d\"550\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"Note how the diagram shows only the execution flows _between_ the main components. That is, it does not show details of the execution path *inside* each component. By hiding those details, the diagram aims to inform the reader about the overall execution path of a command without overwhelming the reader with too much details. In this tutorial, you aim to find those omitted details so that you get a more in-depth understanding of how the code works.","lastModifiedDate":"2021-07-31"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"Before we proceed, ensure that you have done the following:","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"1. Read the [*Architecture* section of the DG](../DeveloperGuide.md#architecture)","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"1. Set up the project in Intellij IDEA","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"1. Learn basic debugging features of Intellij IDEA","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"   * If you are using a different IDE, we\u0027ll leave it to you to figure out the equivalent feature to use in your IDE.","lastModifiedDate":"2021-07-31"},{"lineNumber":32,"author":{"gitId":"-"},"content":"   * If you are not using an IDE, we\u0027ll let you figure out how to achieve the same using your coding toolchain.","lastModifiedDate":"2021-07-31"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"## Setting a breakpoint","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"As you know, the first step of debugging is to put in a breakpoint where you want the debugger to pause the execution. For example, if you are trying to understand how the App starts up, you would put a breakpoint in the first statement of the `main` method.","lastModifiedDate":"2021-07-31"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"In our case, we would want to begin the tracing at the very point where the App start processing user input (i.e., somewhere in the UI component), and then trace through how the execution proceeds through the UI component. However, the execution path through a GUI is often somewhat obscure due to various *event-driven mechanisms* used by GUI frameworks, which happens to be the case here too. Therefore, let us put the breakpoint where the `UI` transfers control to the `Logic` component.","lastModifiedDate":"2021-07-31"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"../images/ArchitectureSequenceDiagram.png\" width\u003d\"550\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":42,"author":{"gitId":"ramapriyan912001"},"content":"According to the sequence diagram you saw earlier (and repeated above for reference), the `UI` component yields control to the `Logic` component through a method named `execute`. Searching through the code base for an `execute()` method that belongs to the `Logic` component yields a promising candidate in `seedu.awe.logic.Logic`.","lastModifiedDate":"2021-10-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":44,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"../images/tracing/searchResultsForExecuteMethod.png\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":46,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":48,"author":{"gitId":"-"},"content":":bulb: **Intellij Tip:** The [\u0027**Search Everywhere**\u0027 feature](https://www.jetbrains.com/help/idea/searching-everywhere.html) can be used here. In particular, the \u0027**Find Symbol**\u0027 (\u0027Symbol\u0027 here refers to methods, variables, classes etc.) variant of that feature is quite useful here as we are looking for a _method_ named `execute`, not simply the text `execute`.","lastModifiedDate":"2021-07-31"},{"lineNumber":49,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":51,"author":{"gitId":"ramapriyan912001"},"content":"A quick look at the `seedu.awe.logic.Logic` (an extract given below) confirms that this indeed might be what we’re looking for.","lastModifiedDate":"2021-10-05"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":53,"author":{"gitId":"-"},"content":"```java","lastModifiedDate":"2021-07-31"},{"lineNumber":54,"author":{"gitId":"-"},"content":"public interface Logic {","lastModifiedDate":"2021-07-31"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-07-31"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2021-07-31"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     * @param commandText The command as entered by the user.","lastModifiedDate":"2021-07-31"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     * @return the result of the command execution.","lastModifiedDate":"2021-07-31"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     * @throws CommandException If an error occurs during command execution.","lastModifiedDate":"2021-07-31"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     * @throws ParseException If an error occurs during parsing.","lastModifiedDate":"2021-07-31"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-07-31"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    CommandResult execute(String commandText) throws CommandException, ParseException;","lastModifiedDate":"2021-07-31"},{"lineNumber":63,"author":{"gitId":"-"},"content":"...","lastModifiedDate":"2021-07-31"},{"lineNumber":64,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-07-31"},{"lineNumber":65,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-07-31"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":67,"author":{"gitId":"-"},"content":"But apparently, this is an interface, not a concrete implementation.","lastModifiedDate":"2021-07-31"},{"lineNumber":68,"author":{"gitId":"-"},"content":"That should be fine because the [Architecture section of the Developer Guide](../DeveloperGuide.html#architecture) tells us that components interact through interfaces. Here\u0027s the relevant diagram:","lastModifiedDate":"2021-07-31"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":70,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"../images/ComponentManagers.png\" width\u003d\"300\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":72,"author":{"gitId":"-"},"content":"Next, let\u0027s find out which statement(s) in the `UI` code is calling this method, thus transferring control from the `UI` to the `Logic`.","lastModifiedDate":"2021-07-31"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":74,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":76,"author":{"gitId":"-"},"content":":bulb: **Intellij Tip:** The [\u0027**Find Usages**\u0027 feature](https://www.jetbrains.com/help/idea/find-highlight-usages.html#find-usages) can find from which parts of the code a class/method/variable is being used.","lastModifiedDate":"2021-07-31"},{"lineNumber":77,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"![`Find Usages` tool window. `Edit` \\\u003e `Find` \\\u003e `Find Usages`.](../images/tracing/FindUsages.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"Bingo\\! `MainWindow#executeCommand()` seems to be exactly what we’re looking for\\!","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"Now let’s set the breakpoint. First, double-click the item to reach the corresponding code. Once there, click on the left gutter to set a breakpoint, as shown below.","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":" ![LeftGutter](../images/tracing/LeftGutter.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"## Tracing the execution path","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"Recall from the User Guide that the `edit` command has the format: `edit INDEX [n/NAME] [p/PHONE] [e/EMAIL] [a/ADDRESS] [t/TAG]…​` For this tutorial we will be issuing the command `edit 1 n/Alice Yeoh`.","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":":bulb: **Tip:** Over the course of the debugging session, you will encounter every major component in the application. Try to keep track of what happens inside the component and where the execution transfers to another component.","lastModifiedDate":"2021-07-31"},{"lineNumber":93,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"1. To start the debugging session, simply `Run` \\\u003e `Debug Main`","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"1. When the GUI appears, enter `edit 1 n/Alice Yeoh` into the command box and press `Enter`.","lastModifiedDate":"2021-07-31"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"1. The Debugger tool window should show up and show something like this:\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":100,"author":{"gitId":"-"},"content":"   ![DebuggerStep1](../images/tracing/DebuggerStep1.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"1. Use the _Show execution point_ feature to jump to the line of code that we stopped at:\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":103,"author":{"gitId":"-"},"content":"   ![ShowExecutionPoint](../images/tracing/ShowExecutionPoint.png)\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":104,"author":{"gitId":"-"},"content":"   `CommandResult commandResult \u003d logic.execute(commandText);` is the line that you end up at (i.e., the place where we put the breakpoint).","lastModifiedDate":"2021-07-31"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"1. We are interested in the `logic.execute(commandText)` portion of that line so let’s _Step in_ into that method call:\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    ![StepInto](../images/tracing/StepInto.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"1. We end up in `LogicManager#execute()` (not `Logic#execute` -- but this is expected because we know the `execute()` method in the `Logic` interface is actually implemented by the `LogicManager` class). Let’s take a look at the body of the method. Given below is the same code, with additional explanatory comments.","lastModifiedDate":"2021-07-31"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"   **LogicManager\\#execute().**","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":113,"author":{"gitId":"-"},"content":"   ``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":114,"author":{"gitId":"-"},"content":"   @Override","lastModifiedDate":"2020-05-23"},{"lineNumber":115,"author":{"gitId":"-"},"content":"   public CommandResult execute(String commandText)","lastModifiedDate":"2020-05-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"           throws CommandException, ParseException {","lastModifiedDate":"2020-05-23"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        //Logging, safe to ignore","lastModifiedDate":"2020-05-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        logger.info(\"----------------[USER COMMAND][\" + commandText + \"]\");","lastModifiedDate":"2020-05-23"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        CommandResult commandResult;","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        //Parse user input from String to a Command","lastModifiedDate":"2020-05-23"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        Command command \u003d addressBookParser.parseCommand(commandText);","lastModifiedDate":"2020-05-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        //Executes the Command and stores the result","lastModifiedDate":"2020-05-23"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        commandResult \u003d command.execute(model);","lastModifiedDate":"2020-05-23"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2020-05-23"},{"lineNumber":128,"author":{"gitId":"-"},"content":"            //We can deduce that the previous line of code modifies model in some way","lastModifiedDate":"2020-05-23"},{"lineNumber":129,"author":{"gitId":"-"},"content":"            // since it\u0027s being stored here.","lastModifiedDate":"2020-05-23"},{"lineNumber":130,"author":{"gitId":"-"},"content":"            storage.saveAddressBook(model.getAddressBook());","lastModifiedDate":"2020-05-23"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2020-05-23"},{"lineNumber":132,"author":{"gitId":"-"},"content":"            throw new CommandException(FILE_OPS_ERROR_MESSAGE + ioe, ioe);","lastModifiedDate":"2020-05-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-05-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        return commandResult;","lastModifiedDate":"2020-05-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":139,"author":{"gitId":"-"},"content":"1. `LogicManager#execute()` appears to delegate most of the heavy lifting to other components. Let’s take a closer look at each one.","lastModifiedDate":"2020-05-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":141,"author":{"gitId":"-"},"content":"1. _Step over_ the logging code since it is of no interest to us now.","lastModifiedDate":"2021-07-31"},{"lineNumber":142,"author":{"gitId":"-"},"content":"   ![StepOver](../images/tracing/StepOver.png)","lastModifiedDate":"2021-07-31"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":144,"author":{"gitId":"-"},"content":"1. _Step into_ the line where user input in parsed from a String to a Command, which should bring you to the `AddressBookParser#parseCommand()` method (partial code given below):","lastModifiedDate":"2021-07-31"},{"lineNumber":145,"author":{"gitId":"-"},"content":"   ``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":146,"author":{"gitId":"-"},"content":"   public Command parseCommand(String userInput) throws ParseException {","lastModifiedDate":"2020-05-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"       ...","lastModifiedDate":"2020-05-23"},{"lineNumber":148,"author":{"gitId":"-"},"content":"       final String commandWord \u003d matcher.group(\"commandWord\");","lastModifiedDate":"2020-05-23"},{"lineNumber":149,"author":{"gitId":"-"},"content":"       final String arguments \u003d matcher.group(\"arguments\");","lastModifiedDate":"2020-05-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"       ...","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"1. _Step over_ the statements in that method until you reach the `switch` statement. The \u0027Variables\u0027 window now shows the value of both `commandWord` and `arguments`:\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    ![Variables](../images/tracing/Variables.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":156,"author":{"gitId":"-"},"content":"1. We see that the value of `commandWord` is now `edit` but `arguments` is still not processed in any meaningful way.","lastModifiedDate":"2020-05-23"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":158,"author":{"gitId":"-"},"content":"1. Stepping through the `switch` block, we end up at a call to `EditCommandParser().parse()` as expected (because the command we typed is an edit command).","lastModifiedDate":"2021-07-31"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    ``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    ...","lastModifiedDate":"2020-05-23"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    case EditCommand.COMMAND_WORD:","lastModifiedDate":"2020-05-23"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        return new EditCommandParser().parse(arguments);","lastModifiedDate":"2020-05-23"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    ...","lastModifiedDate":"2020-05-23"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    ```","lastModifiedDate":"2020-05-23"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":167,"author":{"gitId":"-"},"content":"1. Let’s see what `EditCommandParser#parse()` does by stepping into it. You might have to click the \u0027step into\u0027 button multiple times here because there are two method calls in that statement: `EditCommandParser()` and `parse()`.","lastModifiedDate":"2021-07-31"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":169,"author":{"gitId":"-"},"content":"   \u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e:bulb: **Intellij Tip:** Sometimes, you might end up stepping into functions that are not of interest. Simply use the `step out` button to get out of them!","lastModifiedDate":"2021-07-31"},{"lineNumber":170,"author":{"gitId":"-"},"content":"   \u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":172,"author":{"gitId":"-"},"content":"1. Stepping through the method shows that it calls `ArgumentTokenizer#tokenize()` and `ParserUtil#parseIndex()` to obtain the arguments and index required.","lastModifiedDate":"2021-07-31"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":174,"author":{"gitId":"-"},"content":"1. The rest of the method seems to exhaustively check for the existence of each possible parameter of the `edit` command and store any possible changes in an `EditPersonDescriptor`. Recall that we can verify the contents of `editPersonDesciptor` through the \u0027Variables\u0027 window.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":175,"author":{"gitId":"-"},"content":"   ![EditCommand](../images/tracing/EditCommand.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":177,"author":{"gitId":"-"},"content":"1. As you just traced through some code involved in parsing a command, you can take a look at this class diagram to see where the various parsing-related classes you encountered fit into the design of the `Logic` component.","lastModifiedDate":"2021-07-31"},{"lineNumber":178,"author":{"gitId":"-"},"content":"   \u003cimg src\u003d\"../images/ParserClasses.png\" width\u003d\"600\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":179,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":180,"author":{"gitId":"-"},"content":"1. Let’s continue stepping through until we return to `LogicManager#execute()`.","lastModifiedDate":"2020-05-23"},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":182,"author":{"gitId":"-"},"content":"    The sequence diagram below shows the details of the execution path through the Logic component. Does the execution path you traced in the code so far match the diagram?\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":183,"author":{"gitId":"-"},"content":"    ![Tracing an `edit` command through the Logic component](../images/tracing/LogicSequenceDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":185,"author":{"gitId":"-"},"content":"1. Now, step over until you read the statement that calls the `execute()` method of the `EditCommand` object received, and step into that `execute()` method (partial code given below):","lastModifiedDate":"2021-07-31"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":187,"author":{"gitId":"-"},"content":"   **`EditCommand#execute()`:**","lastModifiedDate":"2021-07-31"},{"lineNumber":188,"author":{"gitId":"-"},"content":"   ``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":189,"author":{"gitId":"-"},"content":"   @Override","lastModifiedDate":"2020-05-23"},{"lineNumber":190,"author":{"gitId":"-"},"content":"   public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2020-05-23"},{"lineNumber":191,"author":{"gitId":"-"},"content":"       ...","lastModifiedDate":"2020-05-23"},{"lineNumber":192,"author":{"gitId":"-"},"content":"       Person personToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2020-05-23"},{"lineNumber":193,"author":{"gitId":"-"},"content":"       Person editedPerson \u003d createEditedPerson(personToEdit, editPersonDescriptor);","lastModifiedDate":"2020-05-23"},{"lineNumber":194,"author":{"gitId":"-"},"content":"       if (!personToEdit.isSamePerson(editedPerson) \u0026\u0026 model.hasPerson(editedPerson)) {","lastModifiedDate":"2020-05-23"},{"lineNumber":195,"author":{"gitId":"-"},"content":"           throw new CommandException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2020-05-23"},{"lineNumber":196,"author":{"gitId":"-"},"content":"       }","lastModifiedDate":"2020-05-23"},{"lineNumber":197,"author":{"gitId":"-"},"content":"       model.setPerson(personToEdit, editedPerson);","lastModifiedDate":"2020-05-23"},{"lineNumber":198,"author":{"gitId":"-"},"content":"       model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2020-05-23"},{"lineNumber":199,"author":{"gitId":"-"},"content":"       return new CommandResult(String.format(MESSAGE_EDIT_PERSON_SUCCESS, editedPerson));","lastModifiedDate":"2020-05-23"},{"lineNumber":200,"author":{"gitId":"-"},"content":"   }","lastModifiedDate":"2020-05-23"},{"lineNumber":201,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-23"},{"lineNumber":202,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":203,"author":{"gitId":"-"},"content":"1. As suspected, `command#execute()` does indeed make changes to the `model` object. Specifically,","lastModifiedDate":"2021-07-31"},{"lineNumber":204,"author":{"gitId":"-"},"content":"   * it uses the `setPerson()` method (defined in the interface `Model` and implemented in `ModelManager` as per the usual pattern) to update the person data.","lastModifiedDate":"2021-07-31"},{"lineNumber":205,"author":{"gitId":"-"},"content":"   * it uses the `updateFilteredPersonList` method to ask the `Model` to populate the \u0027filtered list\u0027 with _all_ persons.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":206,"author":{"gitId":"-"},"content":"     FYI, The \u0027filtered list\u0027 is the list of persons resulting from the most recent operation that will be shown to the user immediately after. For the `edit` command, we populate it with all the persons so that the user can see the edited person along with all other persons. If this was a `find` command, we would be setting that list to contain the search results instead.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":207,"author":{"gitId":"-"},"content":"     To provide some context, given below is the class diagram of the `Model` component. See if you can figure out where the \u0027filtered list\u0027 of persons is being tracked.","lastModifiedDate":"2021-07-31"},{"lineNumber":208,"author":{"gitId":"-"},"content":"     \u003cimg src\u003d\"../images/ModelClassDiagram.png\" width\u003d\"450\" /\u003e\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":209,"author":{"gitId":"-"},"content":"   * :bulb: This may be a good time to read through the [`Model` component section of the DG](../DeveloperGuide.html#model-component)","lastModifiedDate":"2021-07-31"},{"lineNumber":210,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":211,"author":{"gitId":"-"},"content":"1. As you step through the rest of the statements in the `EditCommand#execute()` method, you\u0027ll see that it creates a `CommandResult` object (containing information about the result of the execution) and returns it.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":212,"author":{"gitId":"-"},"content":"   Advancing the debugger by one more step should take you back to the middle of the `LogicManager#execute()` method.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":213,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":214,"author":{"gitId":"-"},"content":"1. Given that you have already seen quite a few classes in the `Logic` component in action, see if you can identify in this partial class diagram some of the classes you\u0027ve encountered so far, and see how they fit into the class structure of the `Logic` component:","lastModifiedDate":"2021-07-31"},{"lineNumber":215,"author":{"gitId":"-"},"content":"    \u003cimg src\u003d\"../images/LogicClassDiagram.png\" width\u003d\"550\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":216,"author":{"gitId":"-"},"content":"   * :bulb: This may be a good time to read through the [`Logic` component section of the DG](../DeveloperGuide.html#logic-component)","lastModifiedDate":"2021-07-31"},{"lineNumber":217,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":218,"author":{"gitId":"-"},"content":"1. Similar to before, you can step over/into statements in the `LogicManager#execute()` method to examine how the control is transferred to the `Storage` component and what happens inside that component.","lastModifiedDate":"2021-07-31"},{"lineNumber":219,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":220,"author":{"gitId":"-"},"content":"   \u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e:bulb: **Intellij Tip:** When trying to step into a statement such as `storage.saveAddressBook(model.getAddressBook())` which contains multiple method calls, Intellij will let you choose (by clicking) which one you want to step into.","lastModifiedDate":"2021-07-31"},{"lineNumber":221,"author":{"gitId":"-"},"content":"   \u003c/div\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":222,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":223,"author":{"gitId":"-"},"content":"1.  As you step through the code inside the `Storage` component, you will eventually arrive at the `JsonAddressBook#saveAddressBook()` method which calls the `JsonSerializableAddressBook` constructor, to create an object that can be _serialized_ (i.e., stored in storage medium) in JSON format. That constructor is given below (with added line breaks for easier readability):","lastModifiedDate":"2021-07-31"},{"lineNumber":224,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":225,"author":{"gitId":"-"},"content":"    **`JsonSerializableAddressBook` constructor:**","lastModifiedDate":"2021-07-31"},{"lineNumber":226,"author":{"gitId":"-"},"content":"    ``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":227,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-23"},{"lineNumber":228,"author":{"gitId":"-"},"content":"     * Converts a given {@code ReadOnlyAddressBook} into this class for Jackson use.","lastModifiedDate":"2020-05-23"},{"lineNumber":229,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2020-05-23"},{"lineNumber":230,"author":{"gitId":"-"},"content":"     * @param source future changes to this will not affect the created","lastModifiedDate":"2020-05-23"},{"lineNumber":231,"author":{"gitId":"-"},"content":"     * {@code JsonSerializableAddressBook}.","lastModifiedDate":"2020-05-23"},{"lineNumber":232,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-23"},{"lineNumber":233,"author":{"gitId":"-"},"content":"    public JsonSerializableAddressBook(ReadOnlyAddressBook source) {","lastModifiedDate":"2020-05-23"},{"lineNumber":234,"author":{"gitId":"-"},"content":"        persons.addAll(","lastModifiedDate":"2020-05-23"},{"lineNumber":235,"author":{"gitId":"-"},"content":"            source.getPersonList()","lastModifiedDate":"2020-05-23"},{"lineNumber":236,"author":{"gitId":"-"},"content":"                  .stream()","lastModifiedDate":"2020-05-23"},{"lineNumber":237,"author":{"gitId":"-"},"content":"                  .map(JsonAdaptedPerson::new)","lastModifiedDate":"2020-05-23"},{"lineNumber":238,"author":{"gitId":"-"},"content":"                  .collect(Collectors.toList()));","lastModifiedDate":"2020-05-23"},{"lineNumber":239,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":240,"author":{"gitId":"-"},"content":"    ```","lastModifiedDate":"2020-05-23"},{"lineNumber":241,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":242,"author":{"gitId":"-"},"content":"1. It appears that a `JsonAdaptedPerson` is created for each `Person` and then added to the `JsonSerializableAddressBook`.","lastModifiedDate":"2020-05-23"},{"lineNumber":243,"author":{"gitId":"-"},"content":"   This is because regular Java objects need to go through an _adaptation_ for them to be suitable to be saved in JSON format.","lastModifiedDate":"2021-07-31"},{"lineNumber":244,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":245,"author":{"gitId":"-"},"content":"1. While you are stepping through the classes in the `Storage` component, here is the component\u0027s class diagram to help you understand how those classes fit into the structure of the component.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":246,"author":{"gitId":"-"},"content":"   \u003cimg src\u003d\"../images/StorageClassDiagram.png\" width\u003d\"550\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":247,"author":{"gitId":"-"},"content":"   * :bulb: This may be a good time to read through the [`Storage` component section of the DG](../DeveloperGuide.html#storage-component)","lastModifiedDate":"2021-07-31"},{"lineNumber":248,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":249,"author":{"gitId":"-"},"content":"1. We can continue to step through until you reach the end of the `LogicManager#execute()` method and return to the `MainWindow#executeCommand()` method (the place where we put the original breakpoint).","lastModifiedDate":"2021-07-31"},{"lineNumber":250,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":251,"author":{"gitId":"-"},"content":"1. Stepping into `resultDisplay.setFeedbackToUser(commandResult.getFeedbackToUser());`, we end up in:","lastModifiedDate":"2021-07-31"},{"lineNumber":252,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":253,"author":{"gitId":"-"},"content":"    **`ResultDisplay#setFeedbackToUser()`**","lastModifiedDate":"2021-07-31"},{"lineNumber":254,"author":{"gitId":"-"},"content":"    ``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":255,"author":{"gitId":"-"},"content":"    public void setFeedbackToUser(String feedbackToUser) {","lastModifiedDate":"2020-05-23"},{"lineNumber":256,"author":{"gitId":"-"},"content":"        requireNonNull(feedbackToUser);","lastModifiedDate":"2020-05-23"},{"lineNumber":257,"author":{"gitId":"-"},"content":"        resultDisplay.setText(feedbackToUser);","lastModifiedDate":"2020-05-23"},{"lineNumber":258,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":259,"author":{"gitId":"-"},"content":"    ```","lastModifiedDate":"2020-05-23"},{"lineNumber":260,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":261,"author":{"gitId":"-"},"content":"1. Finally, you can step through until you reach the end of`MainWindow#executeCommand()`.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":262,"author":{"gitId":"-"},"content":"   :bulb: This may be a good time to read through the [`UI` component section of the DG](../DeveloperGuide.html#ui-component)","lastModifiedDate":"2021-07-31"},{"lineNumber":263,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":264,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":265,"author":{"gitId":"-"},"content":"## Conclusion","lastModifiedDate":"2020-05-23"},{"lineNumber":266,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":267,"author":{"gitId":"-"},"content":"In this tutorial, we traced a valid edit command from raw user input to the result being displayed to the user. From this tutorial, you learned more about how the various components work together to produce a response to a user command.","lastModifiedDate":"2021-07-31"},{"lineNumber":268,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":269,"author":{"gitId":"-"},"content":"Here are some quick questions you can try to answer based on your execution path tracing. In some cases, you can do further tracing for the given commands to find exactly what happens.","lastModifiedDate":"2021-07-31"},{"lineNumber":270,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":271,"author":{"gitId":"-"},"content":"1.  In this tutorial, we traced the \"happy path\" (i.e., no errors). What","lastModifiedDate":"2020-05-23"},{"lineNumber":272,"author":{"gitId":"-"},"content":"    do you think will happen if we traced the following commands","lastModifiedDate":"2020-05-23"},{"lineNumber":273,"author":{"gitId":"-"},"content":"    instead? What exceptions do you think will be thrown (if any), where","lastModifiedDate":"2020-05-23"},{"lineNumber":274,"author":{"gitId":"-"},"content":"    will the exceptions be thrown and where will they be handled?","lastModifiedDate":"2020-05-23"},{"lineNumber":275,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":276,"author":{"gitId":"-"},"content":"    1.  `redit 1 n/Alice Yu`","lastModifiedDate":"2020-05-23"},{"lineNumber":277,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":278,"author":{"gitId":"-"},"content":"    2.  `edit 0 n/Alice Yu`","lastModifiedDate":"2020-05-23"},{"lineNumber":279,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":280,"author":{"gitId":"-"},"content":"    3.  `edit 1 n/Alex Yeoh`","lastModifiedDate":"2020-05-23"},{"lineNumber":281,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":282,"author":{"gitId":"-"},"content":"    4.  `edit 1`","lastModifiedDate":"2020-05-23"},{"lineNumber":283,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":284,"author":{"gitId":"-"},"content":"    5.  `edit 1 n/アリス ユー`","lastModifiedDate":"2020-05-23"},{"lineNumber":285,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":286,"author":{"gitId":"-"},"content":"    6.  `edit 1 t/one t/two t/three t/one`","lastModifiedDate":"2020-05-23"},{"lineNumber":287,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":288,"author":{"gitId":"-"},"content":"2.  What components will you have to modify to perform the following","lastModifiedDate":"2020-05-23"},{"lineNumber":289,"author":{"gitId":"-"},"content":"    enhancements to the application?","lastModifiedDate":"2020-05-23"},{"lineNumber":290,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":291,"author":{"gitId":"-"},"content":"    1.  Make command words case-insensitive","lastModifiedDate":"2020-05-23"},{"lineNumber":292,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":293,"author":{"gitId":"-"},"content":"    2.  Allow `delete` to remove more than one index at a time","lastModifiedDate":"2020-05-23"},{"lineNumber":294,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":295,"author":{"gitId":"-"},"content":"    3.  Save the address book in the CSV format instead","lastModifiedDate":"2020-05-23"},{"lineNumber":296,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":297,"author":{"gitId":"-"},"content":"    4.  Add a new command","lastModifiedDate":"2020-05-23"},{"lineNumber":298,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":299,"author":{"gitId":"-"},"content":"    5.  Add a new field to `Person`","lastModifiedDate":"2020-05-23"},{"lineNumber":300,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":301,"author":{"gitId":"-"},"content":"    6.  Add a new entity to the address book","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"ramapriyan912001":2,"-":299}},{"path":"src/main/java/seedu/awe/AppParameters.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ramapriyan912001"},"content":"package seedu.awe;","lastModifiedDate":"2021-10-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Map;","lastModifiedDate":"2018-04-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2018-04-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.application.Application;","lastModifiedDate":"2018-04-21"},{"lineNumber":10,"author":{"gitId":"ramapriyan912001"},"content":"import seedu.awe.commons.core.LogsCenter;","lastModifiedDate":"2021-10-05"},{"lineNumber":11,"author":{"gitId":"ramapriyan912001"},"content":"import seedu.awe.commons.util.FileUtil;","lastModifiedDate":"2021-10-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-04-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Represents the parsed command-line parameters given to the application.","lastModifiedDate":"2018-04-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-04-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class AppParameters {","lastModifiedDate":"2018-04-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(AppParameters.class);","lastModifiedDate":"2018-04-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private Path configPath;","lastModifiedDate":"2018-04-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public Path getConfigPath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        return configPath;","lastModifiedDate":"2018-04-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public void setConfigPath(Path configPath) {","lastModifiedDate":"2018-04-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        this.configPath \u003d configPath;","lastModifiedDate":"2018-04-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Parses the application command-line parameters.","lastModifiedDate":"2018-04-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static AppParameters parse(Application.Parameters parameters) {","lastModifiedDate":"2018-04-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        AppParameters appParameters \u003d new AppParameters();","lastModifiedDate":"2018-04-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        Map\u003cString, String\u003e namedParameters \u003d parameters.getNamed();","lastModifiedDate":"2018-04-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        String configPathParameter \u003d namedParameters.get(\"config\");","lastModifiedDate":"2018-04-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        if (configPathParameter !\u003d null \u0026\u0026 !FileUtil.isValidPath(configPathParameter)) {","lastModifiedDate":"2018-04-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            logger.warning(\"Invalid config path \" + configPathParameter + \". Using default config path.\");","lastModifiedDate":"2018-04-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            configPathParameter \u003d null;","lastModifiedDate":"2018-04-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        appParameters.setConfigPath(configPathParameter !\u003d null ? Paths.get(configPathParameter) : null);","lastModifiedDate":"2018-04-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        return appParameters;","lastModifiedDate":"2018-04-21"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-04-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2018-04-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2018-04-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-04-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        if (!(other instanceof AppParameters)) {","lastModifiedDate":"2018-04-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-04-21"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        AppParameters otherAppParameters \u003d (AppParameters) other;","lastModifiedDate":"2018-04-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        return Objects.equals(getConfigPath(), otherAppParameters.getConfigPath());","lastModifiedDate":"2018-04-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-04-21"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2018-04-21"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        return configPath.hashCode();","lastModifiedDate":"2018-04-21"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":64,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-04-21"}],"authorContributionMap":{"ramapriyan912001":3,"-":61}},{"path":"src/main/java/seedu/awe/Main.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ramapriyan912001"},"content":"package seedu.awe;","lastModifiedDate":"2021-10-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import javafx.application.Application;","lastModifiedDate":"2019-02-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2019-02-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * The main entry point to the application.","lastModifiedDate":"2019-02-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2019-02-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * This is a workaround for the following error when MainApp is made the","lastModifiedDate":"2019-02-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * entry point of the application:","lastModifiedDate":"2019-02-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2019-02-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":" *     Error: JavaFX runtime components are missing, and are required to run this application","lastModifiedDate":"2019-02-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2019-02-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * The reason is that MainApp extends Application. In that case, the","lastModifiedDate":"2019-02-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * LauncherHelper will check for the javafx.graphics module to be present","lastModifiedDate":"2019-02-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * as a named module. We don\u0027t use JavaFX via the module system so it can\u0027t","lastModifiedDate":"2019-02-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * find the javafx.graphics module, and so the launch is aborted.","lastModifiedDate":"2019-02-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2019-02-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * By having a separate main class (Main) that doesn\u0027t extend Application","lastModifiedDate":"2019-02-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * to be the entry point of the application, we avoid this issue.","lastModifiedDate":"2019-02-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2019-02-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"public class Main {","lastModifiedDate":"2019-02-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2019-02-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        Application.launch(MainApp.class, args);","lastModifiedDate":"2019-02-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-02-08"}],"authorContributionMap":{"ramapriyan912001":1,"-":24}},{"path":"src/main/java/seedu/awe/MainApp.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Jingwencloud"},"content":"package seedu.awe;","lastModifiedDate":"2021-10-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.application.Application;","lastModifiedDate":"2016-08-26"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-26"},{"lineNumber":10,"author":{"gitId":"Jingwencloud"},"content":"import seedu.awe.commons.core.Config;","lastModifiedDate":"2021-10-06"},{"lineNumber":11,"author":{"gitId":"Jingwencloud"},"content":"import seedu.awe.commons.core.LogsCenter;","lastModifiedDate":"2021-10-06"},{"lineNumber":12,"author":{"gitId":"Jingwencloud"},"content":"import seedu.awe.commons.core.Version;","lastModifiedDate":"2021-10-06"},{"lineNumber":13,"author":{"gitId":"Jingwencloud"},"content":"import seedu.awe.commons.exceptions.DataConversionException;","lastModifiedDate":"2021-10-06"},{"lineNumber":14,"author":{"gitId":"Jingwencloud"},"content":"import seedu.awe.commons.util.ConfigUtil;","lastModifiedDate":"2021-10-06"},{"lineNumber":15,"author":{"gitId":"Jingwencloud"},"content":"import seedu.awe.commons.util.StringUtil;","lastModifiedDate":"2021-10-06"},{"lineNumber":16,"author":{"gitId":"Jingwencloud"},"content":"import seedu.awe.logic.Logic;","lastModifiedDate":"2021-10-06"},{"lineNumber":17,"author":{"gitId":"Jingwencloud"},"content":"import seedu.awe.logic.LogicManager;","lastModifiedDate":"2021-10-06"},{"lineNumber":18,"author":{"gitId":"Jingwencloud"},"content":"import seedu.awe.model.AddressBook;","lastModifiedDate":"2021-10-06"},{"lineNumber":19,"author":{"gitId":"Jingwencloud"},"content":"import seedu.awe.model.Model;","lastModifiedDate":"2021-10-06"},{"lineNumber":20,"author":{"gitId":"Jingwencloud"},"content":"import seedu.awe.model.ModelManager;","lastModifiedDate":"2021-10-06"},{"lineNumber":21,"author":{"gitId":"Jingwencloud"},"content":"import seedu.awe.model.ReadOnlyAddressBook;","lastModifiedDate":"2021-10-06"},{"lineNumber":22,"author":{"gitId":"Jingwencloud"},"content":"import seedu.awe.model.ReadOnlyUserPrefs;","lastModifiedDate":"2021-10-06"},{"lineNumber":23,"author":{"gitId":"Jingwencloud"},"content":"import seedu.awe.model.UserPrefs;","lastModifiedDate":"2021-10-06"},{"lineNumber":24,"author":{"gitId":"Jingwencloud"},"content":"import seedu.awe.model.util.SampleDataUtil;","lastModifiedDate":"2021-10-06"},{"lineNumber":25,"author":{"gitId":"Jingwencloud"},"content":"import seedu.awe.storage.AddressBookStorage;","lastModifiedDate":"2021-10-06"},{"lineNumber":26,"author":{"gitId":"Jingwencloud"},"content":"import seedu.awe.storage.JsonAddressBookStorage;","lastModifiedDate":"2021-10-06"},{"lineNumber":27,"author":{"gitId":"Jingwencloud"},"content":"import seedu.awe.storage.JsonUserPrefsStorage;","lastModifiedDate":"2021-10-06"},{"lineNumber":28,"author":{"gitId":"Jingwencloud"},"content":"import seedu.awe.storage.Storage;","lastModifiedDate":"2021-10-06"},{"lineNumber":29,"author":{"gitId":"Jingwencloud"},"content":"import seedu.awe.storage.StorageManager;","lastModifiedDate":"2021-10-06"},{"lineNumber":30,"author":{"gitId":"Jingwencloud"},"content":"import seedu.awe.storage.UserPrefsStorage;","lastModifiedDate":"2021-10-06"},{"lineNumber":31,"author":{"gitId":"Jingwencloud"},"content":"import seedu.awe.ui.Ui;","lastModifiedDate":"2021-10-06"},{"lineNumber":32,"author":{"gitId":"Jingwencloud"},"content":"import seedu.awe.ui.UiManager;","lastModifiedDate":"2021-10-06"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":" * Runs the application.","lastModifiedDate":"2019-02-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"public class MainApp extends Application {","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public static final Version VERSION \u003d new Version(0, 2, 0, true);","lastModifiedDate":"2021-08-30"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(MainApp.class);","lastModifiedDate":"2017-04-01"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    protected Ui ui;","lastModifiedDate":"2016-09-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    protected Logic logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    protected Storage storage;","lastModifiedDate":"2016-09-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    protected Model model;","lastModifiedDate":"2016-09-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    protected Config config;","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"Jingwencloud"},"content":"    protected boolean isDataError;","lastModifiedDate":"2021-10-26"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public void init() throws Exception {","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        logger.info(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d[ Initializing AddressBook ]\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");","lastModifiedDate":"2016-09-29"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        super.init();","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        AppParameters appParameters \u003d AppParameters.parse(getParameters());","lastModifiedDate":"2018-04-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        config \u003d initConfig(appParameters.getConfigPath());","lastModifiedDate":"2018-04-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        UserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(config.getUserPrefsFilePath());","lastModifiedDate":"2017-02-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d initPrefs(userPrefsStorage);","lastModifiedDate":"2018-12-06"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        AddressBookStorage addressBookStorage \u003d new JsonAddressBookStorage(userPrefs.getAddressBookFilePath());","lastModifiedDate":"2018-11-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        storage \u003d new StorageManager(addressBookStorage, userPrefsStorage);","lastModifiedDate":"2017-02-25"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        initLogging(config);","lastModifiedDate":"2016-09-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        model \u003d initModelManager(storage, userPrefs);","lastModifiedDate":"2016-09-25"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        ui \u003d new UiManager(logic);","lastModifiedDate":"2018-12-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":73,"author":{"gitId":"Jingwencloud"},"content":"     * Returns a {@code ModelManager} with the data from {@code storage}\u0027s awe book and {@code userPrefs}. \u003cbr\u003e","lastModifiedDate":"2021-10-06"},{"lineNumber":74,"author":{"gitId":"Jingwencloud"},"content":"     * The data from the sample awe book will be used instead if {@code storage}\u0027s awe book is not found,","lastModifiedDate":"2021-10-06"},{"lineNumber":75,"author":{"gitId":"Jingwencloud"},"content":"     * or an empty awe book will be used instead if errors occur when reading {@code storage}\u0027s awe book.","lastModifiedDate":"2021-10-06"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    private Model initModelManager(Storage storage, ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        Optional\u003cReadOnlyAddressBook\u003e addressBookOptional;","lastModifiedDate":"2016-09-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        ReadOnlyAddressBook initialData;","lastModifiedDate":"2016-09-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"            addressBookOptional \u003d storage.readAddressBook();","lastModifiedDate":"2016-09-25"},{"lineNumber":82,"author":{"gitId":"-"},"content":"            if (!addressBookOptional.isPresent()) {","lastModifiedDate":"2016-09-24"},{"lineNumber":83,"author":{"gitId":"-"},"content":"                logger.info(\"Data file not found. Will be starting with a sample AddressBook\");","lastModifiedDate":"2016-12-20"},{"lineNumber":84,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-09-24"},{"lineNumber":85,"author":{"gitId":"-"},"content":"            initialData \u003d addressBookOptional.orElseGet(SampleDataUtil::getSampleAddressBook);","lastModifiedDate":"2016-12-20"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        } catch (DataConversionException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":87,"author":{"gitId":"-"},"content":"            logger.warning(\"Data file not in the correct format. Will be starting with an empty AddressBook\");","lastModifiedDate":"2016-09-24"},{"lineNumber":88,"author":{"gitId":"Jingwencloud"},"content":"            isDataError \u003d true;","lastModifiedDate":"2021-10-26"},{"lineNumber":89,"author":{"gitId":"-"},"content":"            initialData \u003d new AddressBook();","lastModifiedDate":"2016-09-24"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-10-01"},{"lineNumber":91,"author":{"gitId":"-"},"content":"            logger.warning(\"Problem while reading from the file. Will be starting with an empty AddressBook\");","lastModifiedDate":"2016-10-12"},{"lineNumber":92,"author":{"gitId":"Jingwencloud"},"content":"            isDataError \u003d true;","lastModifiedDate":"2021-10-26"},{"lineNumber":93,"author":{"gitId":"-"},"content":"            initialData \u003d new AddressBook();","lastModifiedDate":"2016-09-24"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        return new ModelManager(initialData, userPrefs);","lastModifiedDate":"2016-09-25"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    private void initLogging(Config config) {","lastModifiedDate":"2016-09-24"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        LogsCenter.init(config);","lastModifiedDate":"2016-09-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     * Returns a {@code Config} using the file at {@code configFilePath}. \u003cbr\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     * The default file path {@code Config#DEFAULT_CONFIG_FILE} will be used instead","lastModifiedDate":"2017-08-16"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     * if {@code configFilePath} is null.","lastModifiedDate":"2017-08-16"},{"lineNumber":107,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    protected Config initConfig(Path configFilePath) {","lastModifiedDate":"2018-04-21"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        Config initializedConfig;","lastModifiedDate":"2016-09-24"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        Path configFilePathUsed;","lastModifiedDate":"2018-04-21"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        configFilePathUsed \u003d Config.DEFAULT_CONFIG_FILE;","lastModifiedDate":"2016-09-24"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        if (configFilePath !\u003d null) {","lastModifiedDate":"2016-09-24"},{"lineNumber":115,"author":{"gitId":"-"},"content":"            logger.info(\"Custom Config file specified \" + configFilePath);","lastModifiedDate":"2016-09-24"},{"lineNumber":116,"author":{"gitId":"-"},"content":"            configFilePathUsed \u003d configFilePath;","lastModifiedDate":"2016-09-24"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        logger.info(\"Using config file : \" + configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":122,"author":{"gitId":"-"},"content":"            Optional\u003cConfig\u003e configOptional \u003d ConfigUtil.readConfig(configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":123,"author":{"gitId":"-"},"content":"            initializedConfig \u003d configOptional.orElse(new Config());","lastModifiedDate":"2016-09-24"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        } catch (DataConversionException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":125,"author":{"gitId":"-"},"content":"            logger.warning(\"Config file at \" + configFilePathUsed + \" is not in the correct format. \"","lastModifiedDate":"2017-05-22"},{"lineNumber":126,"author":{"gitId":"-"},"content":"                    + \"Using default config properties\");","lastModifiedDate":"2017-05-22"},{"lineNumber":127,"author":{"gitId":"-"},"content":"            initializedConfig \u003d new Config();","lastModifiedDate":"2016-09-24"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        //Update config file in case it was missing to begin with or there are new/unused fields","lastModifiedDate":"2016-09-24"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":132,"author":{"gitId":"-"},"content":"            ConfigUtil.saveConfig(initializedConfig, configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":134,"author":{"gitId":"-"},"content":"            logger.warning(\"Failed to save config file : \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        return initializedConfig;","lastModifiedDate":"2016-09-24"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":140,"author":{"gitId":"-"},"content":"     * Returns a {@code UserPrefs} using the file at {@code storage}\u0027s user prefs file path,","lastModifiedDate":"2017-08-16"},{"lineNumber":141,"author":{"gitId":"-"},"content":"     * or a new {@code UserPrefs} with default configuration if errors occur when","lastModifiedDate":"2017-08-16"},{"lineNumber":142,"author":{"gitId":"-"},"content":"     * reading from the file.","lastModifiedDate":"2017-08-16"},{"lineNumber":143,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    protected UserPrefs initPrefs(UserPrefsStorage storage) {","lastModifiedDate":"2017-02-25"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        Path prefsFilePath \u003d storage.getUserPrefsFilePath();","lastModifiedDate":"2018-04-21"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        logger.info(\"Using prefs file : \" + prefsFilePath);","lastModifiedDate":"2016-09-24"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        UserPrefs initializedPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":150,"author":{"gitId":"-"},"content":"            Optional\u003cUserPrefs\u003e prefsOptional \u003d storage.readUserPrefs();","lastModifiedDate":"2016-09-25"},{"lineNumber":151,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d prefsOptional.orElse(new UserPrefs());","lastModifiedDate":"2016-09-24"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        } catch (DataConversionException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":153,"author":{"gitId":"-"},"content":"            logger.warning(\"UserPrefs file at \" + prefsFilePath + \" is not in the correct format. \"","lastModifiedDate":"2017-05-22"},{"lineNumber":154,"author":{"gitId":"-"},"content":"                    + \"Using default user prefs\");","lastModifiedDate":"2017-05-22"},{"lineNumber":155,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":157,"author":{"gitId":"-"},"content":"            logger.warning(\"Problem while reading from the file. Will be starting with an empty AddressBook\");","lastModifiedDate":"2016-10-12"},{"lineNumber":158,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        //Update prefs file in case it was missing to begin with or there are new/unused fields","lastModifiedDate":"2016-09-24"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":163,"author":{"gitId":"-"},"content":"            storage.saveUserPrefs(initializedPrefs);","lastModifiedDate":"2016-09-25"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":165,"author":{"gitId":"-"},"content":"            logger.warning(\"Failed to save config file : \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        return initializedPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":171,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    public void start(Stage primaryStage) {","lastModifiedDate":"2016-08-08"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        logger.info(\"Starting AddressBook \" + MainApp.VERSION);","lastModifiedDate":"2016-09-29"},{"lineNumber":174,"author":{"gitId":"Jingwencloud"},"content":"        ui.setIsDataError(isDataError);","lastModifiedDate":"2021-10-26"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        ui.start(primaryStage);","lastModifiedDate":"2016-09-25"},{"lineNumber":176,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":178,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    public void stop() {","lastModifiedDate":"2016-08-08"},{"lineNumber":180,"author":{"gitId":"-"},"content":"        logger.info(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d [ Stopping Address Book ] \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");","lastModifiedDate":"2016-09-29"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":182,"author":{"gitId":"-"},"content":"            storage.saveUserPrefs(model.getUserPrefs());","lastModifiedDate":"2018-12-06"},{"lineNumber":183,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":184,"author":{"gitId":"-"},"content":"            logger.severe(\"Failed to save preferences \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":185,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":186,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-26"},{"lineNumber":187,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"Jingwencloud":31,"-":156}},{"path":"src/main/java/seedu/awe/commons/core/Config.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ramapriyan912001"},"content":"package seedu.awe.commons.core;","lastModifiedDate":"2021-10-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2016-09-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Level;","lastModifiedDate":"2016-09-09"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Config values used by the app","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class Config {","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final Path DEFAULT_CONFIG_FILE \u003d Paths.get(\"config.json\");","lastModifiedDate":"2018-04-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    // Config values customizable through config file","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private Level logLevel \u003d Level.INFO;","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private Path userPrefsFilePath \u003d Paths.get(\"preferences.json\");","lastModifiedDate":"2018-04-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public Level getLogLevel() {","lastModifiedDate":"2016-09-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        return logLevel;","lastModifiedDate":"2016-09-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public void setLogLevel(Level logLevel) {","lastModifiedDate":"2016-09-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        this.logLevel \u003d logLevel;","lastModifiedDate":"2016-09-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public Path getUserPrefsFilePath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        return userPrefsFilePath;","lastModifiedDate":"2016-09-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public void setUserPrefsFilePath(Path userPrefsFilePath) {","lastModifiedDate":"2018-04-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        this.userPrefsFilePath \u003d userPrefsFilePath;","lastModifiedDate":"2016-09-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2016-09-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2016-09-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        if (!(other instanceof Config)) { //this handles null as well.","lastModifiedDate":"2016-09-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2016-09-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        Config o \u003d (Config) other;","lastModifiedDate":"2016-09-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        return Objects.equals(logLevel, o.logLevel)","lastModifiedDate":"2018-12-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"                \u0026\u0026 Objects.equals(userPrefsFilePath, o.userPrefsFilePath);","lastModifiedDate":"2017-02-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        return Objects.hash(logLevel, userPrefsFilePath);","lastModifiedDate":"2018-12-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-09-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2016-09-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        sb.append(\"Current log level : \" + logLevel);","lastModifiedDate":"2018-12-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        sb.append(\"\\nPreference file Location : \" + userPrefsFilePath);","lastModifiedDate":"2016-09-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2016-09-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"ramapriyan912001":1,"-":62}},{"path":"src/main/java/seedu/awe/commons/core/GuiSettings.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ramapriyan912001"},"content":"package seedu.awe.commons.core;","lastModifiedDate":"2021-10-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.awt.Point;","lastModifiedDate":"2017-01-18"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.io.Serializable;","lastModifiedDate":"2016-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2016-09-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * A Serializable class that contains the GUI settings.","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Guarantees: immutable.","lastModifiedDate":"2018-11-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class GuiSettings implements Serializable {","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    private static final double DEFAULT_HEIGHT \u003d 600;","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private static final double DEFAULT_WIDTH \u003d 740;","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private final double windowWidth;","lastModifiedDate":"2018-11-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private final double windowHeight;","lastModifiedDate":"2018-11-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private final Point windowCoordinates;","lastModifiedDate":"2018-11-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * Constructs a {@code GuiSettings} with the default height, width and position.","lastModifiedDate":"2020-05-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public GuiSettings() {","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        windowWidth \u003d DEFAULT_WIDTH;","lastModifiedDate":"2018-08-14"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        windowHeight \u003d DEFAULT_HEIGHT;","lastModifiedDate":"2018-08-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        windowCoordinates \u003d null; // null represent no coordinates","lastModifiedDate":"2018-08-14"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Constructs a {@code GuiSettings} with the specified height, width and position.","lastModifiedDate":"2020-05-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public GuiSettings(double windowWidth, double windowHeight, int xPosition, int yPosition) {","lastModifiedDate":"2018-11-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        this.windowWidth \u003d windowWidth;","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        this.windowHeight \u003d windowHeight;","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        windowCoordinates \u003d new Point(xPosition, yPosition);","lastModifiedDate":"2018-08-14"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public double getWindowWidth() {","lastModifiedDate":"2018-11-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return windowWidth;","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public double getWindowHeight() {","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        return windowHeight;","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public Point getWindowCoordinates() {","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        return windowCoordinates !\u003d null ? new Point(windowCoordinates) : null;","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2016-09-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2016-09-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        if (!(other instanceof GuiSettings)) { //this handles null as well.","lastModifiedDate":"2016-09-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2016-09-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        GuiSettings o \u003d (GuiSettings) other;","lastModifiedDate":"2016-09-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        return windowWidth \u003d\u003d o.windowWidth","lastModifiedDate":"2018-11-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"                \u0026\u0026 windowHeight \u003d\u003d o.windowHeight","lastModifiedDate":"2018-11-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"                \u0026\u0026 Objects.equals(windowCoordinates, o.windowCoordinates);","lastModifiedDate":"2018-11-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        return Objects.hash(windowWidth, windowHeight, windowCoordinates);","lastModifiedDate":"2016-09-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-09-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2016-09-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        sb.append(\"Width : \" + windowWidth + \"\\n\");","lastModifiedDate":"2016-09-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        sb.append(\"Height : \" + windowHeight + \"\\n\");","lastModifiedDate":"2016-09-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        sb.append(\"Position : \" + windowCoordinates);","lastModifiedDate":"2016-09-24"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2016-09-24"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"ramapriyan912001":1,"-":78}},{"path":"src/main/java/seedu/awe/commons/core/LogsCenter.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ramapriyan912001"},"content":"package seedu.awe.commons.core;","lastModifiedDate":"2021-10-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-09-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.logging.ConsoleHandler;","lastModifiedDate":"2017-01-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.FileHandler;","lastModifiedDate":"2017-01-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.logging.Level;","lastModifiedDate":"2017-01-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.logging.SimpleFormatter;","lastModifiedDate":"2017-01-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Configures and manages loggers and handlers, including their logging level","lastModifiedDate":"2016-09-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * Named {@link Logger}s can be obtained from this class\u003cbr\u003e","lastModifiedDate":"2016-09-29"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * These loggers have been configured to output messages to the console and a {@code .log} file by default,","lastModifiedDate":"2016-09-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":" *   at the {@code INFO} level. A new {@code .log} file with a new numbering will be created after the log","lastModifiedDate":"2016-09-29"},{"lineNumber":16,"author":{"gitId":"-"},"content":" *   file reaches 5MB big, up to a maximum of 5 files.\u003cbr\u003e","lastModifiedDate":"2016-09-29"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class LogsCenter {","lastModifiedDate":"2016-09-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private static final int MAX_FILE_COUNT \u003d 5;","lastModifiedDate":"2016-09-28"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private static final int MAX_FILE_SIZE_IN_BYTES \u003d (int) (Math.pow(2, 20) * 5); // 5MB","lastModifiedDate":"2016-09-28"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final String LOG_FILE \u003d \"addressbook.log\";","lastModifiedDate":"2016-09-28"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static Level currentLogLevel \u003d Level.INFO;","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(LogsCenter.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private static FileHandler fileHandler;","lastModifiedDate":"2016-09-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private static ConsoleHandler consoleHandler;","lastModifiedDate":"2016-09-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-29"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * Initializes with a custom log level (specified in the {@code config} object)","lastModifiedDate":"2016-09-29"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Loggers obtained *AFTER* this initialization will have their logging level changed\u003cbr\u003e","lastModifiedDate":"2016-09-29"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Logging levels for existing loggers will only be updated if the logger with the same name","lastModifiedDate":"2016-10-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * is requested again from the LogsCenter.","lastModifiedDate":"2016-10-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-29"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public static void init(Config config) {","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        currentLogLevel \u003d config.getLogLevel();","lastModifiedDate":"2016-09-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        logger.info(\"currentLogLevel: \" + currentLogLevel);","lastModifiedDate":"2016-09-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-29"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * Creates a logger with the given name.","lastModifiedDate":"2017-03-20"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-29"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public static Logger getLogger(String name) {","lastModifiedDate":"2016-09-28"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        Logger logger \u003d Logger.getLogger(name);","lastModifiedDate":"2016-09-28"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        logger.setUseParentHandlers(false);","lastModifiedDate":"2016-09-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        removeHandlers(logger);","lastModifiedDate":"2016-09-28"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        addConsoleHandler(logger);","lastModifiedDate":"2016-09-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        addFileHandler(logger);","lastModifiedDate":"2016-09-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        return Logger.getLogger(name);","lastModifiedDate":"2016-09-28"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-16"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * Creates a Logger for the given class name.","lastModifiedDate":"2017-01-16"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-16"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public static \u003cT\u003e Logger getLogger(Class\u003cT\u003e clazz) {","lastModifiedDate":"2017-01-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        if (clazz \u003d\u003d null) {","lastModifiedDate":"2017-04-05"},{"lineNumber":57,"author":{"gitId":"-"},"content":"            return Logger.getLogger(\"\");","lastModifiedDate":"2017-04-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-04-05"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        return getLogger(clazz.getSimpleName());","lastModifiedDate":"2017-01-16"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-16"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * Adds the {@code consoleHandler} to the {@code logger}. \u003cbr\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * Creates the {@code consoleHandler} if it is null.","lastModifiedDate":"2017-08-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    private static void addConsoleHandler(Logger logger) {","lastModifiedDate":"2016-09-09"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        if (consoleHandler \u003d\u003d null) {","lastModifiedDate":"2017-04-05"},{"lineNumber":68,"author":{"gitId":"-"},"content":"            consoleHandler \u003d createConsoleHandler();","lastModifiedDate":"2017-04-05"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-04-05"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        logger.addHandler(consoleHandler);","lastModifiedDate":"2016-09-09"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     * Remove all the handlers from {@code logger}.","lastModifiedDate":"2017-08-16"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    private static void removeHandlers(Logger logger) {","lastModifiedDate":"2016-09-28"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        Arrays.stream(logger.getHandlers())","lastModifiedDate":"2018-01-21"},{"lineNumber":78,"author":{"gitId":"-"},"content":"                .forEach(logger::removeHandler);","lastModifiedDate":"2018-01-21"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-28"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     * Adds the {@code fileHandler} to the {@code logger}. \u003cbr\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     * Creates {@code fileHandler} if it is null.","lastModifiedDate":"2017-08-16"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    private static void addFileHandler(Logger logger) {","lastModifiedDate":"2016-09-09"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-09"},{"lineNumber":87,"author":{"gitId":"-"},"content":"            if (fileHandler \u003d\u003d null) {","lastModifiedDate":"2017-04-05"},{"lineNumber":88,"author":{"gitId":"-"},"content":"                fileHandler \u003d createFileHandler();","lastModifiedDate":"2017-04-05"},{"lineNumber":89,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-04-05"},{"lineNumber":90,"author":{"gitId":"-"},"content":"            logger.addHandler(fileHandler);","lastModifiedDate":"2016-09-09"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-09"},{"lineNumber":92,"author":{"gitId":"-"},"content":"            logger.warning(\"Error adding file handler for logger.\");","lastModifiedDate":"2016-09-09"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     * Creates a {@code FileHandler} for the log file.","lastModifiedDate":"2017-08-16"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     * @throws IOException if there are problems opening the file.","lastModifiedDate":"2017-08-16"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    private static FileHandler createFileHandler() throws IOException {","lastModifiedDate":"2016-09-09"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        FileHandler fileHandler \u003d new FileHandler(LOG_FILE, MAX_FILE_SIZE_IN_BYTES, MAX_FILE_COUNT, true);","lastModifiedDate":"2016-09-28"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        fileHandler.setFormatter(new SimpleFormatter());","lastModifiedDate":"2016-09-09"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        fileHandler.setLevel(currentLogLevel);","lastModifiedDate":"2016-09-09"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        return fileHandler;","lastModifiedDate":"2016-09-09"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    private static ConsoleHandler createConsoleHandler() {","lastModifiedDate":"2016-09-09"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        ConsoleHandler consoleHandler \u003d new ConsoleHandler();","lastModifiedDate":"2016-09-09"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        consoleHandler.setLevel(currentLogLevel);","lastModifiedDate":"2016-09-09"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        return consoleHandler;","lastModifiedDate":"2016-09-09"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"ramapriyan912001":1,"-":111}},{"path":"src/main/java/seedu/awe/commons/core/Messages.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ramapriyan912001"},"content":"package seedu.awe.commons.core;","lastModifiedDate":"2021-10-05"},{"lineNumber":2,"author":{"gitId":"chrus-chong"},"content":"import static seedu.awe.logic.parser.CliSyntax.PREFIX_COST;","lastModifiedDate":"2021-10-25"},{"lineNumber":3,"author":{"gitId":"chrus-chong"},"content":"import static seedu.awe.logic.parser.CliSyntax.PREFIX_DESCRIPTION;","lastModifiedDate":"2021-10-25"},{"lineNumber":4,"author":{"gitId":"chrus-chong"},"content":"import static seedu.awe.logic.parser.CliSyntax.PREFIX_EXCLUDE;","lastModifiedDate":"2021-10-25"},{"lineNumber":5,"author":{"gitId":"chrus-chong"},"content":"import static seedu.awe.logic.parser.CliSyntax.PREFIX_GROUP_NAME;","lastModifiedDate":"2021-10-25"},{"lineNumber":6,"author":{"gitId":"chrus-chong"},"content":"import static seedu.awe.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2021-10-25"},{"lineNumber":7,"author":{"gitId":"chrus-chong"},"content":"import static seedu.awe.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2021-10-25"},{"lineNumber":8,"author":{"gitId":"chrus-chong"},"content":"import static seedu.awe.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2021-10-25"},{"lineNumber":9,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":10,"author":{"gitId":"chrus-chong"},"content":"import seedu.awe.logic.commands.AddContactCommand;","lastModifiedDate":"2021-10-25"},{"lineNumber":11,"author":{"gitId":"chrus-chong"},"content":"import seedu.awe.logic.commands.AddExpenseCommand;","lastModifiedDate":"2021-10-25"},{"lineNumber":12,"author":{"gitId":"chrus-chong"},"content":"import seedu.awe.logic.commands.CalculatePaymentsCommand;","lastModifiedDate":"2021-10-25"},{"lineNumber":13,"author":{"gitId":"chrus-chong"},"content":"import seedu.awe.logic.commands.DeleteContactCommand;","lastModifiedDate":"2021-10-25"},{"lineNumber":14,"author":{"gitId":"chrus-chong"},"content":"import seedu.awe.logic.commands.DeleteExpenseCommand;","lastModifiedDate":"2021-10-25"},{"lineNumber":15,"author":{"gitId":"chrus-chong"},"content":"import seedu.awe.logic.commands.DeleteGroupCommand;","lastModifiedDate":"2021-10-25"},{"lineNumber":16,"author":{"gitId":"chrus-chong"},"content":"import seedu.awe.logic.commands.EditContactCommand;","lastModifiedDate":"2021-10-25"},{"lineNumber":17,"author":{"gitId":"chrus-chong"},"content":"import seedu.awe.logic.commands.FindContactsCommand;","lastModifiedDate":"2021-10-25"},{"lineNumber":18,"author":{"gitId":"ramapriyan912001"},"content":"import seedu.awe.logic.commands.FindExpensesCommand;","lastModifiedDate":"2021-10-25"},{"lineNumber":19,"author":{"gitId":"chrus-chong"},"content":"import seedu.awe.logic.commands.FindGroupsCommand;","lastModifiedDate":"2021-10-25"},{"lineNumber":20,"author":{"gitId":"chrus-chong"},"content":"import seedu.awe.logic.commands.HelpCommand;","lastModifiedDate":"2021-10-25"},{"lineNumber":21,"author":{"gitId":"ramapriyan912001"},"content":"import seedu.awe.logic.commands.ListContactsCommand;","lastModifiedDate":"2021-10-30"},{"lineNumber":22,"author":{"gitId":"ramapriyan912001"},"content":"import seedu.awe.logic.commands.ListExpensesCommand;","lastModifiedDate":"2021-10-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":" * Container for user visible messages.","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"public class Messages {","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"ramapriyan912001"},"content":"    public static final String MESSAGE_UNKNOWN_COMMAND \u003d \"Unknown command.\";","lastModifiedDate":"2021-10-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_COMMAND_FORMAT \u003d \"Invalid command format! \\n%1$s\";","lastModifiedDate":"2016-08-24"},{"lineNumber":31,"author":{"gitId":"ramapriyan912001"},"content":"    public static final String MESSAGE_INVALID_PERSON_DISPLAYED_INDEX \u003d \"The person index provided is invalid.\";","lastModifiedDate":"2021-10-25"},{"lineNumber":32,"author":{"gitId":"ramapriyan912001"},"content":"    public static final String MESSAGE_INVALID_EXPENSE_DISPLAYED_INDEX \u003d \"The expense index provided is invalid.\";","lastModifiedDate":"2021-10-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_PERSONS_LISTED_OVERVIEW \u003d \"%1$d persons listed!\";","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"marcuspeh"},"content":"    public static final String MESSAGE_GROUPS_LISTED_OVERVIEW \u003d \"%1$d groups listed!\";","lastModifiedDate":"2021-10-10"},{"lineNumber":35,"author":{"gitId":"Jingwencloud"},"content":"    public static final String MESSAGE_EXPENSES_LISTED_OVERVIEW \u003d \"%1$d expenses listed!\";","lastModifiedDate":"2021-10-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":37,"author":{"gitId":"chrus-chong"},"content":"    //messages for contact related commands","lastModifiedDate":"2021-10-25"},{"lineNumber":38,"author":{"gitId":"chrus-chong"},"content":"    public static final String MESSAGE_LISTCONTACTSCOMMAND_SUCCESS \u003d \"Listed all contacts\";","lastModifiedDate":"2021-10-25"},{"lineNumber":39,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":40,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":41,"author":{"gitId":"chrus-chong"},"content":"    public static final String MESSAGE_ADDCONTACTCOMMAND_USAGE \u003d AddContactCommand.COMMAND_WORD","lastModifiedDate":"2021-10-25"},{"lineNumber":42,"author":{"gitId":"chrus-chong"},"content":"            + \": Adds a person to the awe book. \"","lastModifiedDate":"2021-10-25"},{"lineNumber":43,"author":{"gitId":"chrus-chong"},"content":"            + \"Parameters: \"","lastModifiedDate":"2021-10-25"},{"lineNumber":44,"author":{"gitId":"chrus-chong"},"content":"            + PREFIX_NAME + \"NAME \"","lastModifiedDate":"2021-10-25"},{"lineNumber":45,"author":{"gitId":"chrus-chong"},"content":"            + PREFIX_PHONE + \"PHONE \"","lastModifiedDate":"2021-10-25"},{"lineNumber":46,"author":{"gitId":"chrus-chong"},"content":"            + \"[\" + PREFIX_TAG + \"TAG]...\\n\"","lastModifiedDate":"2021-10-25"},{"lineNumber":47,"author":{"gitId":"chrus-chong"},"content":"            + \"Example: \" + AddContactCommand.COMMAND_WORD + \" \"","lastModifiedDate":"2021-10-25"},{"lineNumber":48,"author":{"gitId":"chrus-chong"},"content":"            + PREFIX_NAME + \"John Doe \"","lastModifiedDate":"2021-10-25"},{"lineNumber":49,"author":{"gitId":"chrus-chong"},"content":"            + PREFIX_PHONE + \"98765432 \"","lastModifiedDate":"2021-10-25"},{"lineNumber":50,"author":{"gitId":"chrus-chong"},"content":"            + PREFIX_TAG + \"friends \"","lastModifiedDate":"2021-10-25"},{"lineNumber":51,"author":{"gitId":"chrus-chong"},"content":"            + PREFIX_TAG + \"owesMoney\";","lastModifiedDate":"2021-10-25"},{"lineNumber":52,"author":{"gitId":"chrus-chong"},"content":"    public static final String MESSAGE_ADDCONTACTCOMMAND_SUCCESS \u003d \"New person added: %1$s\";","lastModifiedDate":"2021-10-25"},{"lineNumber":53,"author":{"gitId":"chrus-chong"},"content":"    public static final String MESSAGE_ADDCONTACTCOMMAND_DUPLICATE \u003d \"This person already exists in the awe book\";","lastModifiedDate":"2021-10-25"},{"lineNumber":54,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":55,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":56,"author":{"gitId":"chrus-chong"},"content":"    public static final String MESSAGE_DELETECONTACTCOMMAND_USAGE \u003d DeleteContactCommand.COMMAND_WORD","lastModifiedDate":"2021-10-25"},{"lineNumber":57,"author":{"gitId":"chrus-chong"},"content":"            + \": Deletes the person identified by the index number used in the displayed person list.\\n\"","lastModifiedDate":"2021-10-25"},{"lineNumber":58,"author":{"gitId":"chrus-chong"},"content":"            + \"Parameters: INDEX (must be a positive integer)\\n\"","lastModifiedDate":"2021-10-25"},{"lineNumber":59,"author":{"gitId":"chrus-chong"},"content":"            + \"Example: \" + DeleteContactCommand.COMMAND_WORD + \" 1\";","lastModifiedDate":"2021-10-25"},{"lineNumber":60,"author":{"gitId":"chrus-chong"},"content":"    public static final String MESSAGE_DELETECONTACTCOMMAND_DELETE_PERSON_SUCCESS \u003d \"Deleted Person: %1$s\";","lastModifiedDate":"2021-10-25"},{"lineNumber":61,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":62,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":63,"author":{"gitId":"chrus-chong"},"content":"    public static final String MESSAGE_EDITCONTACTCOMMAND_USAGE \u003d EditContactCommand.COMMAND_WORD","lastModifiedDate":"2021-10-25"},{"lineNumber":64,"author":{"gitId":"chrus-chong"},"content":"            + \": Edits the details of the person identified \"","lastModifiedDate":"2021-10-25"},{"lineNumber":65,"author":{"gitId":"chrus-chong"},"content":"            + \"by the index number used in the displayed person list. \"","lastModifiedDate":"2021-10-25"},{"lineNumber":66,"author":{"gitId":"chrus-chong"},"content":"            + \"Existing values will be overwritten by the input values.\\n\"","lastModifiedDate":"2021-10-25"},{"lineNumber":67,"author":{"gitId":"chrus-chong"},"content":"            + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2021-10-25"},{"lineNumber":68,"author":{"gitId":"chrus-chong"},"content":"            + \"[\" + PREFIX_NAME + \"NAME] \"","lastModifiedDate":"2021-10-25"},{"lineNumber":69,"author":{"gitId":"chrus-chong"},"content":"            + \"[\" + PREFIX_PHONE + \"PHONE] \"","lastModifiedDate":"2021-10-25"},{"lineNumber":70,"author":{"gitId":"chrus-chong"},"content":"            + \"[\" + PREFIX_TAG + \"TAG]...\\n\"","lastModifiedDate":"2021-10-25"},{"lineNumber":71,"author":{"gitId":"chrus-chong"},"content":"            + \"Example: \" + EditContactCommand.COMMAND_WORD + \" 1 \"","lastModifiedDate":"2021-10-25"},{"lineNumber":72,"author":{"gitId":"marcuspeh"},"content":"            + PREFIX_PHONE + \"91234567 \";","lastModifiedDate":"2021-11-01"},{"lineNumber":73,"author":{"gitId":"chrus-chong"},"content":"    public static final String MESSAGE_EDITCONTACTCOMMAND_EDIT_PERSON_SUCCESS \u003d \"Edited Person: %1$s\";","lastModifiedDate":"2021-10-25"},{"lineNumber":74,"author":{"gitId":"chrus-chong"},"content":"    public static final String MESSAGE_EDITCONTACTCOMMAND_NOT_EDITED \u003d \"At least one field to edit must be provided.\";","lastModifiedDate":"2021-10-25"},{"lineNumber":75,"author":{"gitId":"chrus-chong"},"content":"    public static final String MESSAGE_EDITCONTACTCOMMAND_DUPLICATE_PERSON \u003d","lastModifiedDate":"2021-10-25"},{"lineNumber":76,"author":{"gitId":"chrus-chong"},"content":"            \"This person already exists in the awe book.\";","lastModifiedDate":"2021-10-25"},{"lineNumber":77,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":78,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":79,"author":{"gitId":"chrus-chong"},"content":"    public static final String MESSAGE_FINDCONTACTSCOMMAND_USAGE \u003d FindContactsCommand.COMMAND_WORD","lastModifiedDate":"2021-10-25"},{"lineNumber":80,"author":{"gitId":"chrus-chong"},"content":"            + \": Finds all persons whose names contain any of \"","lastModifiedDate":"2021-10-25"},{"lineNumber":81,"author":{"gitId":"chrus-chong"},"content":"            + \"the specified keywords (case-insensitive) and displays them as a list with index numbers.\\n\"","lastModifiedDate":"2021-10-25"},{"lineNumber":82,"author":{"gitId":"chrus-chong"},"content":"            + \"Parameters: KEYWORD [MORE_KEYWORDS]...\\n\"","lastModifiedDate":"2021-10-25"},{"lineNumber":83,"author":{"gitId":"chrus-chong"},"content":"            + \"Example: \" + FindContactsCommand.COMMAND_WORD + \" alice bob charlie\";","lastModifiedDate":"2021-10-25"},{"lineNumber":84,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":85,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":86,"author":{"gitId":"chrus-chong"},"content":"    //messages for group related commands","lastModifiedDate":"2021-10-25"},{"lineNumber":87,"author":{"gitId":"chrus-chong"},"content":"    public static final String MESSAGE_LISTGROUPSCOMMAND_SUCCESS \u003d \"Listed all groups\";","lastModifiedDate":"2021-10-25"},{"lineNumber":88,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":89,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":90,"author":{"gitId":"chrus-chong"},"content":"    public static final String MESSAGE_CREATEGROUPCOMMAND_SUCCESS \u003d \"New group created\";","lastModifiedDate":"2021-10-25"},{"lineNumber":91,"author":{"gitId":"chrus-chong"},"content":"    public static final String MESSAGE_CREATEGROUPCOMMAND_ERROR \u003d","lastModifiedDate":"2021-10-25"},{"lineNumber":92,"author":{"gitId":"chrus-chong"},"content":"            \"Group not created. Be sure to use the exact names of group members\";","lastModifiedDate":"2021-10-25"},{"lineNumber":93,"author":{"gitId":"chrus-chong"},"content":"    public static final String MESSAGE_CREATEGROUPCOMMAND_DUPLICATE_GROUP \u003d \"This group already exists\";","lastModifiedDate":"2021-10-25"},{"lineNumber":94,"author":{"gitId":"chrus-chong"},"content":"    public static final String MESSAGE_CREATEGROUPCOMMAND_USAGE \u003d","lastModifiedDate":"2021-10-25"},{"lineNumber":95,"author":{"gitId":"chrus-chong"},"content":"            \"creategroup gn/GROUPNAME n/NAME1 n/[OPTIONAL NAME2]...\";","lastModifiedDate":"2021-10-25"},{"lineNumber":96,"author":{"gitId":"chrus-chong"},"content":"    public static final String MESSAGE_CREATEGROUPCOMMAND_EMPTY_GROUP \u003d \"Group requires at least 1 member. \\n%1$s\\n%s\";","lastModifiedDate":"2021-10-25"},{"lineNumber":97,"author":{"gitId":"chrus-chong"},"content":"    public static final String MESSAGE_CREATEGROUPCOMMAND_INVALID_NAMES \u003d \"None of the names are in your contact book.\";","lastModifiedDate":"2021-10-25"},{"lineNumber":98,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":99,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":100,"author":{"gitId":"chrus-chong"},"content":"    public static final String MESSAGE_DELETEGROUPCOMMAND_USAGE \u003d DeleteGroupCommand.COMMAND_WORD","lastModifiedDate":"2021-10-25"},{"lineNumber":101,"author":{"gitId":"chrus-chong"},"content":"            + \": deletes a group from the awe book. \"","lastModifiedDate":"2021-10-25"},{"lineNumber":102,"author":{"gitId":"chrus-chong"},"content":"            + \"Parameters: \"","lastModifiedDate":"2021-10-25"},{"lineNumber":103,"author":{"gitId":"chrus-chong"},"content":"            + PREFIX_GROUP_NAME + \"GROUP_NAME\\n\"","lastModifiedDate":"2021-10-25"},{"lineNumber":104,"author":{"gitId":"chrus-chong"},"content":"            + \"Example: \" + DeleteGroupCommand.COMMAND_WORD + \" \"","lastModifiedDate":"2021-10-25"},{"lineNumber":105,"author":{"gitId":"chrus-chong"},"content":"            + PREFIX_GROUP_NAME + \"Bali\";","lastModifiedDate":"2021-10-25"},{"lineNumber":106,"author":{"gitId":"chrus-chong"},"content":"    public static final String MESSAGE_DELETEGROUPCOMMAND_SUCCESS \u003d \"Group %s with %d member(s) deleted\";","lastModifiedDate":"2021-10-25"},{"lineNumber":107,"author":{"gitId":"chrus-chong"},"content":"    public static final String MESSAGE_DELETEGROUPCOMMAND_GROUP_DOES_NOT_EXIST \u003d","lastModifiedDate":"2021-10-25"},{"lineNumber":108,"author":{"gitId":"chrus-chong"},"content":"            \"This group does not exist in the awe book\";","lastModifiedDate":"2021-10-25"},{"lineNumber":109,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":110,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":111,"author":{"gitId":"chrus-chong"},"content":"    public static final String MESSAGE_FINDGROUPSCOMMAND_USAGE \u003d FindGroupsCommand.COMMAND_WORD","lastModifiedDate":"2021-10-25"},{"lineNumber":112,"author":{"gitId":"chrus-chong"},"content":"            + \": Finds all groups whose names contain any of \"","lastModifiedDate":"2021-10-25"},{"lineNumber":113,"author":{"gitId":"chrus-chong"},"content":"            + \"the specified keywords (case-insensitive) and displays them as a list with index numbers.\\n\"","lastModifiedDate":"2021-10-25"},{"lineNumber":114,"author":{"gitId":"chrus-chong"},"content":"            + \"Parameters: KEYWORD [MORE_KEYWORDS]...\\n\"","lastModifiedDate":"2021-10-25"},{"lineNumber":115,"author":{"gitId":"chrus-chong"},"content":"            + \"Example: \" + FindGroupsCommand.COMMAND_WORD + \" london\";","lastModifiedDate":"2021-10-25"},{"lineNumber":116,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":117,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":118,"author":{"gitId":"chrus-chong"},"content":"    public static final String MESSAGE_GROUPADDCONTACTCOMMAND_SUCCESS \u003d \"New member(s) added to group\";","lastModifiedDate":"2021-10-25"},{"lineNumber":119,"author":{"gitId":"chrus-chong"},"content":"    public static final String MESSAGE_GROUPADDCONTACTCOMMAND_ERROR \u003d","lastModifiedDate":"2021-10-25"},{"lineNumber":120,"author":{"gitId":"chrus-chong"},"content":"            \"Contact(s) not added. Be sure to use the exact names of group members\";","lastModifiedDate":"2021-10-25"},{"lineNumber":121,"author":{"gitId":"chrus-chong"},"content":"    public static final String MESSAGE_GROUPADDCONTACTCOMMAND_DUPLICATE_PERSON \u003d \"%1$s is already in the group\";","lastModifiedDate":"2021-10-25"},{"lineNumber":122,"author":{"gitId":"chrus-chong"},"content":"    public static final String MESSAGE_GROUPADDCONTACTCOMMAND_USAGE \u003d","lastModifiedDate":"2021-10-25"},{"lineNumber":123,"author":{"gitId":"chrus-chong"},"content":"            \"groupaddcontact gn/[GROUPNAME] n/[NAME1] n/[OPTIONAL NAME2]\";","lastModifiedDate":"2021-10-25"},{"lineNumber":124,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":125,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":126,"author":{"gitId":"chrus-chong"},"content":"    public static final String MESSAGE_GROUPREMOVECONTACT_SUCCESS \u003d \"Member(s) removed from group\";","lastModifiedDate":"2021-10-25"},{"lineNumber":127,"author":{"gitId":"chrus-chong"},"content":"    public static final String MESSAGE_GROUPREMOVECONTACT_ERROR \u003d \"Contact(s) not removed from group.\"","lastModifiedDate":"2021-10-25"},{"lineNumber":128,"author":{"gitId":"chrus-chong"},"content":"            + \"Be sure to use the exact names of group members\";","lastModifiedDate":"2021-10-25"},{"lineNumber":129,"author":{"gitId":"chrus-chong"},"content":"    public static final String MESSAGE_GROUPREMOVECONTACT_USAGE \u003d","lastModifiedDate":"2021-10-25"},{"lineNumber":130,"author":{"gitId":"chrus-chong"},"content":"            \"groupremovecontact gn/[GROUPNAME] n/[NAME1] n/[OPTIONAL NAME2]\";","lastModifiedDate":"2021-10-25"},{"lineNumber":131,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":132,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":133,"author":{"gitId":"chrus-chong"},"content":"    public static final String MESSAGE_GROUPADDTAGCOMMAND_SUCCESS \u003d \"New tag(s) added to group\";","lastModifiedDate":"2021-10-25"},{"lineNumber":134,"author":{"gitId":"chrus-chong"},"content":"    public static final String MESSAGE_GROUPADDTAGCOMMAND_DUPLICATE_TAG \u003d \"%1$s is already in the group\";","lastModifiedDate":"2021-10-25"},{"lineNumber":135,"author":{"gitId":"chrus-chong"},"content":"    public static final String MESSAGE_GROUPADDTAGCOMMAND_USAGE \u003d","lastModifiedDate":"2021-10-25"},{"lineNumber":136,"author":{"gitId":"chrus-chong"},"content":"            \"groupaddtag gn/[GROUPNAME] n/[TAG1] n/[OPTIONAL TAG2]\";","lastModifiedDate":"2021-10-25"},{"lineNumber":137,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":138,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":139,"author":{"gitId":"chrus-chong"},"content":"    public static final String MESSAGE_GROUPREMOVETAG_SUCCESS \u003d \"Tag(s) removed from group\";","lastModifiedDate":"2021-10-25"},{"lineNumber":140,"author":{"gitId":"chrus-chong"},"content":"    public static final String MESSAGE_GROUPREMOVETAG_ERROR \u003d","lastModifiedDate":"2021-10-25"},{"lineNumber":141,"author":{"gitId":"chrus-chong"},"content":"            \"Tag(s) not removed from group. Make sure to use exact tag names.\";","lastModifiedDate":"2021-10-25"},{"lineNumber":142,"author":{"gitId":"chrus-chong"},"content":"    public static final String MESSAGE_GROUPREMOVETAG_NONEXISTENT_TAG \u003d \"The tag \\\"%1$s\\\" is not found in the group.\";","lastModifiedDate":"2021-10-25"},{"lineNumber":143,"author":{"gitId":"chrus-chong"},"content":"    public static final String MESSAGE_GROUPREMOVETAG_USAGE \u003d \"groupaddtag gn/[GROUPNAME] n/[TAG1] n/[OPTIONAL TAG2]\";","lastModifiedDate":"2021-10-25"},{"lineNumber":144,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":145,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":146,"author":{"gitId":"chrus-chong"},"content":"    public static final String MESSAGE_GROUPEDITNAMECOMMAND_SUCCESS \u003d \"Group name changed to %1$s\";","lastModifiedDate":"2021-10-25"},{"lineNumber":147,"author":{"gitId":"chrus-chong"},"content":"    public static final String MESSAGE_GROUPEDITNAMECOMMAND_ERROR \u003d \"Group name not changed.\";","lastModifiedDate":"2021-10-25"},{"lineNumber":148,"author":{"gitId":"chrus-chong"},"content":"    public static final String MESSAGE_GROUPEDITNAMECOMMAND_USAGE \u003d \"groupeditname gn/[OLDGROUPNAME] gn/[NEWGROUPNAME]\";","lastModifiedDate":"2021-10-25"},{"lineNumber":149,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":150,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":151,"author":{"gitId":"chrus-chong"},"content":"    public static final String MESSAGE_NONEXISTENT_GROUP \u003d \"Group %1$s does not exist.\";","lastModifiedDate":"2021-10-25"},{"lineNumber":152,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":153,"author":{"gitId":"chrus-chong"},"content":"    //messages for expenses related commands","lastModifiedDate":"2021-10-25"},{"lineNumber":154,"author":{"gitId":"chrus-chong"},"content":"    public static final String MESSAGE_LISTEXPENSESCOMMAND_USAGE \u003d ListExpensesCommand.COMMAND_WORD","lastModifiedDate":"2021-10-25"},{"lineNumber":155,"author":{"gitId":"chrus-chong"},"content":"            + \": Lists expenses of a group. \"","lastModifiedDate":"2021-10-25"},{"lineNumber":156,"author":{"gitId":"chrus-chong"},"content":"            + \"Parameters: \"","lastModifiedDate":"2021-10-25"},{"lineNumber":157,"author":{"gitId":"chrus-chong"},"content":"            + PREFIX_GROUP_NAME + \"GROUP NAME \";","lastModifiedDate":"2021-10-25"},{"lineNumber":158,"author":{"gitId":"chrus-chong"},"content":"    public static final String MESSAGE_LISTEXPENSESCOMMAND_SUCCESS \u003d \"Listed all expenses\";","lastModifiedDate":"2021-10-25"},{"lineNumber":159,"author":{"gitId":"chrus-chong"},"content":"    public static final String MESSAGE_LISTEXPENSESCOMMAND_GROUP_NOT_FOUND \u003d \"The specified group does not exist.\";","lastModifiedDate":"2021-10-25"},{"lineNumber":160,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":161,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":162,"author":{"gitId":"chrus-chong"},"content":"    public static final String MESSAGE_ADDEXPENSECOMMAND_USAGE \u003d AddExpenseCommand.COMMAND_WORD","lastModifiedDate":"2021-10-25"},{"lineNumber":163,"author":{"gitId":"chrus-chong"},"content":"            + \": Adds an expense to a group. \"","lastModifiedDate":"2021-10-25"},{"lineNumber":164,"author":{"gitId":"chrus-chong"},"content":"            + \"Parameters: \"","lastModifiedDate":"2021-10-25"},{"lineNumber":165,"author":{"gitId":"chrus-chong"},"content":"            + PREFIX_NAME + \"PAYER NAME \"","lastModifiedDate":"2021-10-25"},{"lineNumber":166,"author":{"gitId":"chrus-chong"},"content":"            + PREFIX_GROUP_NAME + \"GROUP NAME \"","lastModifiedDate":"2021-10-25"},{"lineNumber":167,"author":{"gitId":"chrus-chong"},"content":"            + PREFIX_COST + \"COST \"","lastModifiedDate":"2021-10-25"},{"lineNumber":168,"author":{"gitId":"chrus-chong"},"content":"            + PREFIX_DESCRIPTION + \"DESCRIPTION \"","lastModifiedDate":"2021-10-25"},{"lineNumber":169,"author":{"gitId":"chrus-chong"},"content":"            + \"[\" + PREFIX_NAME + \"PAYEE NAME\" + \"] \"","lastModifiedDate":"2021-10-25"},{"lineNumber":170,"author":{"gitId":"chrus-chong"},"content":"            + \"[\" + PREFIX_COST + \"PAYEE EXPENSE\" + \"]\"","lastModifiedDate":"2021-10-25"},{"lineNumber":171,"author":{"gitId":"chrus-chong"},"content":"            + \"[\" + PREFIX_EXCLUDE + \"EXCLUDED PERSON\" + \"]\";","lastModifiedDate":"2021-10-25"},{"lineNumber":172,"author":{"gitId":"chrus-chong"},"content":"    public static final String MESSAGE_ADDEXPENSECOMMAND_SUCCESS \u003d \"Expense added!\";","lastModifiedDate":"2021-10-25"},{"lineNumber":173,"author":{"gitId":"chrus-chong"},"content":"    public static final String MESSAGE_ADDEXPENSECOMMAND_NOT_PART_OF_GROUP \u003d","lastModifiedDate":"2021-10-25"},{"lineNumber":174,"author":{"gitId":"chrus-chong"},"content":"            \"The person isn\u0027t part of the specified group!\";","lastModifiedDate":"2021-10-25"},{"lineNumber":175,"author":{"gitId":"chrus-chong"},"content":"    public static final String MESSAGE_ADDEXPENSECOMMAND_ALL_MEMBERS_EXCLUDED \u003d","lastModifiedDate":"2021-10-25"},{"lineNumber":176,"author":{"gitId":"chrus-chong"},"content":"            \"You can\u0027t exclude every member of the group!\";","lastModifiedDate":"2021-10-25"},{"lineNumber":177,"author":{"gitId":"chrus-chong"},"content":"    public static final String MESSAGE_ADDEXPENSECOMMAND_COST_ZERO_OR_LESS \u003d","lastModifiedDate":"2021-10-25"},{"lineNumber":178,"author":{"gitId":"chrus-chong"},"content":"            \"The cost of this expense is zero or less!\";","lastModifiedDate":"2021-10-25"},{"lineNumber":179,"author":{"gitId":"chrus-chong"},"content":"    public static final String MESSAGE_ADDEXPENSECOMMAND_CANNOT_ADD_EXCLUDED_MEMBER \u003d","lastModifiedDate":"2021-10-25"},{"lineNumber":180,"author":{"gitId":"chrus-chong"},"content":"            \"You tried to add an expense for an excluded member!\";","lastModifiedDate":"2021-10-25"},{"lineNumber":181,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":182,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":183,"author":{"gitId":"chrus-chong"},"content":"    public static final String MESSAGE_DELETEEXPENSECOMMAND_USAGE \u003d DeleteExpenseCommand.COMMAND_WORD","lastModifiedDate":"2021-10-25"},{"lineNumber":184,"author":{"gitId":"chrus-chong"},"content":"            + \": Deletes the expense identified by the index number used in the displayed expense list.\\n\"","lastModifiedDate":"2021-10-25"},{"lineNumber":185,"author":{"gitId":"chrus-chong"},"content":"            + \"Parameters: INDEX (must be a positive integer) within range of index numbers seen on screen.\\n\"","lastModifiedDate":"2021-10-25"},{"lineNumber":186,"author":{"gitId":"chrus-chong"},"content":"            + \"Example: \" + DeleteExpenseCommand.COMMAND_WORD + \" 1\";","lastModifiedDate":"2021-10-25"},{"lineNumber":187,"author":{"gitId":"chrus-chong"},"content":"    public static final String MESSAGE_DELETEEXPENSECOMMAND_SUCCESS \u003d \"Expense %s successfully deleted!\";","lastModifiedDate":"2021-10-25"},{"lineNumber":188,"author":{"gitId":"chrus-chong"},"content":"    public static final String MESSAGE_DELETEEXPENSECOMMAND_CANNOT_BE_DELETED \u003d","lastModifiedDate":"2021-10-25"},{"lineNumber":189,"author":{"gitId":"chrus-chong"},"content":"            \"Expense cannot be deleted unless you are viewing \"","lastModifiedDate":"2021-10-25"},{"lineNumber":190,"author":{"gitId":"chrus-chong"},"content":"                    + \"the expenses of a group. \"","lastModifiedDate":"2021-10-25"},{"lineNumber":191,"author":{"gitId":"chrus-chong"},"content":"                    + \"To delete an expense, first enter the \" + FindExpensesCommand.COMMAND_WORD + \" or \"","lastModifiedDate":"2021-10-25"},{"lineNumber":192,"author":{"gitId":"chrus-chong"},"content":"                    + ListExpensesCommand.COMMAND_WORD + \" command.\";","lastModifiedDate":"2021-10-25"},{"lineNumber":193,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":194,"author":{"gitId":"ramapriyan912001"},"content":"    public static final String MESSAGE_DELETECONTACTCOMMAND_CANNOT_BE_DELETED \u003d","lastModifiedDate":"2021-10-30"},{"lineNumber":195,"author":{"gitId":"ramapriyan912001"},"content":"            \"Contact cannot be deleted unless you are viewing \"","lastModifiedDate":"2021-10-30"},{"lineNumber":196,"author":{"gitId":"ramapriyan912001"},"content":"                    + \"the contacts of your addressbook. \"","lastModifiedDate":"2021-10-30"},{"lineNumber":197,"author":{"gitId":"ramapriyan912001"},"content":"                    + \"To delete a contact, first enter the \" + FindContactsCommand.COMMAND_WORD + \" or \"","lastModifiedDate":"2021-10-30"},{"lineNumber":198,"author":{"gitId":"ramapriyan912001"},"content":"                    + ListContactsCommand.COMMAND_WORD + \" command.\";","lastModifiedDate":"2021-10-30"},{"lineNumber":199,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":200,"author":{"gitId":"ramapriyan912001"},"content":"    public static final String MESSAGE_EDITCONTACTCOMMAND_CANNOT_BE_EDITED \u003d","lastModifiedDate":"2021-10-30"},{"lineNumber":201,"author":{"gitId":"ramapriyan912001"},"content":"            \"Contact cannot be edited unless you are viewing \"","lastModifiedDate":"2021-10-30"},{"lineNumber":202,"author":{"gitId":"ramapriyan912001"},"content":"                    + \"the contacts of your addressbook. \"","lastModifiedDate":"2021-10-30"},{"lineNumber":203,"author":{"gitId":"ramapriyan912001"},"content":"                    + \"To edit a contact, first enter the \" + FindContactsCommand.COMMAND_WORD + \" or \"","lastModifiedDate":"2021-10-30"},{"lineNumber":204,"author":{"gitId":"ramapriyan912001"},"content":"                    + ListContactsCommand.COMMAND_WORD + \" command.\";","lastModifiedDate":"2021-10-30"},{"lineNumber":205,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":206,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":207,"author":{"gitId":"chrus-chong"},"content":"    public static final String MESSAGE_FINDEXPENSESCOMMAND_USAGE \u003d FindExpensesCommand.COMMAND_WORD","lastModifiedDate":"2021-10-25"},{"lineNumber":208,"author":{"gitId":"chrus-chong"},"content":"            + \": Finds all expenses within the specified group \"","lastModifiedDate":"2021-10-25"},{"lineNumber":209,"author":{"gitId":"chrus-chong"},"content":"            + \"which description contains any of the specified keywords (case-insensitive) and displays them as a\"","lastModifiedDate":"2021-10-25"},{"lineNumber":210,"author":{"gitId":"chrus-chong"},"content":"            + \"list with index numbers.\\n\"","lastModifiedDate":"2021-10-25"},{"lineNumber":211,"author":{"gitId":"chrus-chong"},"content":"            + \"Parameters:\"","lastModifiedDate":"2021-10-25"},{"lineNumber":212,"author":{"gitId":"chrus-chong"},"content":"            + \"KEYWORD [MORE_KEYWORDS]...\\n\"","lastModifiedDate":"2021-10-25"},{"lineNumber":213,"author":{"gitId":"chrus-chong"},"content":"            + PREFIX_GROUP_NAME + \" GROUP NAME\"","lastModifiedDate":"2021-10-25"},{"lineNumber":214,"author":{"gitId":"chrus-chong"},"content":"            + \" Example: \" + FindExpensesCommand.COMMAND_WORD + \"pizza pasta \" + PREFIX_GROUP_NAME + \" london\";","lastModifiedDate":"2021-10-25"},{"lineNumber":215,"author":{"gitId":"chrus-chong"},"content":"    public static final String MESSAGE_FINDEXPENSESCOMMAND_GROUP_NOT_FOUND \u003d \"The specified group does not exists.\";","lastModifiedDate":"2021-10-25"},{"lineNumber":216,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":217,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":218,"author":{"gitId":"chrus-chong"},"content":"    //messages for calculatepayment related commands","lastModifiedDate":"2021-10-25"},{"lineNumber":219,"author":{"gitId":"chrus-chong"},"content":"    public static final String MESSAGE_CALCULATEPAYMENTSCOMMAND_SUCCESS \u003d","lastModifiedDate":"2021-10-25"},{"lineNumber":220,"author":{"gitId":"chrus-chong"},"content":"            \"Payments to be made between group members are listed.\";","lastModifiedDate":"2021-10-25"},{"lineNumber":221,"author":{"gitId":"chrus-chong"},"content":"    public static final String MESSAGE_CALCULATEPAYMENTSCOMMAND_USAGE \u003d CalculatePaymentsCommand.COMMAND_WORD","lastModifiedDate":"2021-10-25"},{"lineNumber":222,"author":{"gitId":"chrus-chong"},"content":"            + \": Calculates the payments to be made between group members to settle debts.\\n\"","lastModifiedDate":"2021-10-25"},{"lineNumber":223,"author":{"gitId":"chrus-chong"},"content":"            + \"Parameters: \"","lastModifiedDate":"2021-10-25"},{"lineNumber":224,"author":{"gitId":"chrus-chong"},"content":"            + PREFIX_GROUP_NAME + \"GROUP_NAME\\n\"","lastModifiedDate":"2021-10-25"},{"lineNumber":225,"author":{"gitId":"chrus-chong"},"content":"            + \"Example: \" + CalculatePaymentsCommand.COMMAND_WORD + \" \"","lastModifiedDate":"2021-10-25"},{"lineNumber":226,"author":{"gitId":"chrus-chong"},"content":"            + PREFIX_GROUP_NAME + \"Bali\";","lastModifiedDate":"2021-10-25"},{"lineNumber":227,"author":{"gitId":"chrus-chong"},"content":"    public static final String MESSAGE_CALCULATEPAYMENTSCOMMAND_PAYMENTS_EMPTY \u003d","lastModifiedDate":"2021-10-25"},{"lineNumber":228,"author":{"gitId":"chrus-chong"},"content":"            \"There are no payments to be made!\";","lastModifiedDate":"2021-10-25"},{"lineNumber":229,"author":{"gitId":"chrus-chong"},"content":"    public static final String MESSAGE_CALCULATEPAYMENTSCOMMAND_GROUP_NOT_FOUND \u003d","lastModifiedDate":"2021-10-25"},{"lineNumber":230,"author":{"gitId":"chrus-chong"},"content":"            \"The specified group does not exists.\";","lastModifiedDate":"2021-10-25"},{"lineNumber":231,"author":{"gitId":"ramapriyan912001"},"content":"    public static final String MESSAGE_CALCULATEPAYMENTSCOMMAND_PAYMENT_DISCREPANCY \u003d","lastModifiedDate":"2021-10-29"},{"lineNumber":232,"author":{"gitId":"ramapriyan912001"},"content":"            \"There appears to be a discrepancy within your payments.\";","lastModifiedDate":"2021-10-29"},{"lineNumber":233,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":234,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":235,"author":{"gitId":"chrus-chong"},"content":"    public static final String MESSAGE_LISTTRANSACTIONSUMMARYCOMMAND_USAGE \u003d \"transactionsummary gn/GROUP_NAME\";","lastModifiedDate":"2021-10-25"},{"lineNumber":236,"author":{"gitId":"chrus-chong"},"content":"    public static final String MESSAGE_LISTTRANSACTIONSUMMARYCOMMAND_GROUP_NOT_FOUND \u003d","lastModifiedDate":"2021-10-25"},{"lineNumber":237,"author":{"gitId":"chrus-chong"},"content":"            \"The specified group does not exists.\";","lastModifiedDate":"2021-10-25"},{"lineNumber":238,"author":{"gitId":"chrus-chong"},"content":"    public static final String MESSAGE_LISTTRANSACTIONSUMMARYCOMMAND_SUCCESS \u003d","lastModifiedDate":"2021-10-25"},{"lineNumber":239,"author":{"gitId":"chrus-chong"},"content":"            \"Expenses for individual group members are listed.\";","lastModifiedDate":"2021-10-25"},{"lineNumber":240,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":241,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":242,"author":{"gitId":"chrus-chong"},"content":"    //messages for miscellaneous commands","lastModifiedDate":"2021-10-25"},{"lineNumber":243,"author":{"gitId":"marcuspeh"},"content":"    public static final String MESSAGE_CLEARALLDATACOMMAND_SUCCESS \u003d \"AWE book has been cleared!\";","lastModifiedDate":"2021-11-01"},{"lineNumber":244,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":245,"author":{"gitId":"marcuspeh"},"content":"    public static final String MESSAGE_EXITCOMMAND_ACKNOWLEDGEMENT \u003d \"Exiting AWE Book as requested ...\";","lastModifiedDate":"2021-11-01"},{"lineNumber":246,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":247,"author":{"gitId":"chrus-chong"},"content":"    public static final String MESSAGE_HELPCOMMAND_USAGE \u003d HelpCommand.COMMAND_WORD","lastModifiedDate":"2021-10-25"},{"lineNumber":248,"author":{"gitId":"chrus-chong"},"content":"            + \": Shows program usage instructions.\\n\"","lastModifiedDate":"2021-10-25"},{"lineNumber":249,"author":{"gitId":"chrus-chong"},"content":"            + \"Example: \" + HelpCommand.COMMAND_WORD;","lastModifiedDate":"2021-10-25"},{"lineNumber":250,"author":{"gitId":"chrus-chong"},"content":"    public static final String MESSAGE_HELPCOMMAND_SHOWING_HELP \u003d \"Opened help window.\";","lastModifiedDate":"2021-10-25"},{"lineNumber":251,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":252,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"marcuspeh":4,"Jingwencloud":1,"chrus-chong":216,"ramapriyan912001":21,"-":10}},{"path":"src/main/java/seedu/awe/commons/core/Version.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ramapriyan912001"},"content":"package seedu.awe.commons.core;","lastModifiedDate":"2021-10-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2016-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2016-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonValue;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Represents a version with major, minor and patch number","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class Version implements Comparable\u003cVersion\u003e {","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public static final String VERSION_REGEX \u003d \"V(\\\\d+)\\\\.(\\\\d+)\\\\.(\\\\d+)(ea)?\";","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private static final String EXCEPTION_STRING_NOT_VERSION \u003d \"String is not a valid Version. %s\";","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private static final Pattern VERSION_PATTERN \u003d Pattern.compile(VERSION_REGEX);","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private final int major;","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private final int minor;","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private final int patch;","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private final boolean isEarlyAccess;","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * Constructs a {@code Version} with the given version details.","lastModifiedDate":"2020-05-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public Version(int major, int minor, int patch, boolean isEarlyAccess) {","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        this.major \u003d major;","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        this.minor \u003d minor;","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        this.patch \u003d patch;","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        this.isEarlyAccess \u003d isEarlyAccess;","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public int getMajor() {","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        return major;","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public int getMinor() {","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        return minor;","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public int getPatch() {","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        return patch;","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public boolean isEarlyAccess() {","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        return isEarlyAccess;","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * Parses a version number string in the format V1.2.3.","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * @param versionString version number string","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * @return a Version object","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public static Version fromString(String versionString) throws IllegalArgumentException {","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        Matcher versionMatcher \u003d VERSION_PATTERN.matcher(versionString);","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        if (!versionMatcher.find()) {","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"            throw new IllegalArgumentException(String.format(EXCEPTION_STRING_NOT_VERSION, versionString));","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        return new Version(Integer.parseInt(versionMatcher.group(1)),","lastModifiedDate":"2016-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"                Integer.parseInt(versionMatcher.group(2)),","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"                Integer.parseInt(versionMatcher.group(3)),","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"                versionMatcher.group(4) \u003d\u003d null ? false : true);","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    @JsonValue","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        return String.format(\"V%d.%d.%d%s\", major, minor, patch, isEarlyAccess ? \"ea\" : \"\");","lastModifiedDate":"2016-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public int compareTo(Version other) {","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        if (major !\u003d other.major) {","lastModifiedDate":"2018-08-14"},{"lineNumber":78,"author":{"gitId":"-"},"content":"            return major - other.major;","lastModifiedDate":"2018-08-14"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-22"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        if (minor !\u003d other.minor) {","lastModifiedDate":"2018-08-14"},{"lineNumber":81,"author":{"gitId":"-"},"content":"            return minor - other.minor;","lastModifiedDate":"2018-08-14"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-22"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        if (patch !\u003d other.patch) {","lastModifiedDate":"2018-08-14"},{"lineNumber":84,"author":{"gitId":"-"},"content":"            return patch - other.patch;","lastModifiedDate":"2018-08-14"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-22"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        if (isEarlyAccess \u003d\u003d other.isEarlyAccess()) {","lastModifiedDate":"2018-08-14"},{"lineNumber":87,"author":{"gitId":"-"},"content":"            return 0;","lastModifiedDate":"2017-05-22"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-22"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        if (isEarlyAccess) {","lastModifiedDate":"2018-08-14"},{"lineNumber":90,"author":{"gitId":"-"},"content":"            return -1;","lastModifiedDate":"2017-05-22"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-22"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        return 1;","lastModifiedDate":"2017-05-22"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2016-08-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        if (obj \u003d\u003d null) {","lastModifiedDate":"2016-08-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2016-08-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        if (!(obj instanceof Version)) {","lastModifiedDate":"2016-08-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2016-08-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        final Version other \u003d (Version) obj;","lastModifiedDate":"2016-08-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        return compareTo(other) \u003d\u003d 0;","lastModifiedDate":"2018-08-14"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-08"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        String hash \u003d String.format(\"%03d%03d%03d\", major, minor, patch);","lastModifiedDate":"2016-08-08"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        if (!isEarlyAccess) {","lastModifiedDate":"2016-08-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"            hash \u003d \"1\" + hash;","lastModifiedDate":"2016-08-08"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        return Integer.parseInt(hash);","lastModifiedDate":"2016-08-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"ramapriyan912001":1,"-":115}},{"path":"src/main/java/seedu/awe/commons/core/index/Index.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ramapriyan912001"},"content":"package seedu.awe.commons.core.index;","lastModifiedDate":"2021-10-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-05-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Represents a zero-based or one-based index.","lastModifiedDate":"2017-05-24"},{"lineNumber":5,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2017-05-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * {@code Index} should be used right from the start (when parsing in a new user input), so that if the current","lastModifiedDate":"2017-05-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * component wants to communicate with another component, it can send an {@code Index} to avoid having to know what","lastModifiedDate":"2017-05-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * base the other component is using for its index. However, after receiving the {@code Index}, that component can","lastModifiedDate":"2017-05-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * convert it back to an int if the index will not be passed to a different component again.","lastModifiedDate":"2017-05-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-05-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class Index {","lastModifiedDate":"2017-05-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private int zeroBasedIndex;","lastModifiedDate":"2017-05-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * Index can only be created by calling {@link Index#fromZeroBased(int)} or","lastModifiedDate":"2017-05-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * {@link Index#fromOneBased(int)}.","lastModifiedDate":"2017-05-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private Index(int zeroBasedIndex) {","lastModifiedDate":"2017-05-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        if (zeroBasedIndex \u003c 0) {","lastModifiedDate":"2017-05-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"            throw new IndexOutOfBoundsException();","lastModifiedDate":"2017-05-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        this.zeroBasedIndex \u003d zeroBasedIndex;","lastModifiedDate":"2017-05-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public int getZeroBased() {","lastModifiedDate":"2017-05-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        return zeroBasedIndex;","lastModifiedDate":"2017-05-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public int getOneBased() {","lastModifiedDate":"2017-05-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        return zeroBasedIndex + 1;","lastModifiedDate":"2017-05-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Creates a new {@code Index} using a zero-based index.","lastModifiedDate":"2017-05-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static Index fromZeroBased(int zeroBasedIndex) {","lastModifiedDate":"2017-05-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        return new Index(zeroBasedIndex);","lastModifiedDate":"2017-05-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * Creates a new {@code Index} using a one-based index.","lastModifiedDate":"2017-05-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public static Index fromOneBased(int oneBasedIndex) {","lastModifiedDate":"2017-05-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        return new Index(oneBasedIndex - 1);","lastModifiedDate":"2017-05-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-05-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-05-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"                || (other instanceof Index // instanceof handles nulls","lastModifiedDate":"2017-05-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"                \u0026\u0026 zeroBasedIndex \u003d\u003d ((Index) other).zeroBasedIndex); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-24"}],"authorContributionMap":{"ramapriyan912001":1,"-":53}},{"path":"src/main/java/seedu/awe/commons/exceptions/DataConversionException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ramapriyan912001"},"content":"package seedu.awe.commons.exceptions;","lastModifiedDate":"2021-10-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Represents an error during conversion of data from one format to another","lastModifiedDate":"2016-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class DataConversionException extends Exception {","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    public DataConversionException(Exception cause) {","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"        super(cause);","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"ramapriyan912001":1,"-":10}},{"path":"src/main/java/seedu/awe/commons/exceptions/IllegalValueException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ramapriyan912001"},"content":"package seedu.awe.commons.exceptions;","lastModifiedDate":"2021-10-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Signals that some given data does not fulfill some constraints.","lastModifiedDate":"2016-08-24"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class IllegalValueException extends Exception {","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"     * @param message should contain relevant information on the failed constraint(s)","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public IllegalValueException(String message) {","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"        super(message);","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * @param message should contain relevant information on the failed constraint(s)","lastModifiedDate":"2017-03-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * @param cause of the main exception","lastModifiedDate":"2017-03-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public IllegalValueException(String message, Throwable cause) {","lastModifiedDate":"2017-03-11"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        super(message, cause);","lastModifiedDate":"2017-03-11"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"ramapriyan912001":1,"-":20}},{"path":"src/main/java/seedu/awe/commons/util/AppUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ramapriyan912001"},"content":"package seedu.awe.commons.util;","lastModifiedDate":"2021-10-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2016-08-18"},{"lineNumber":6,"author":{"gitId":"ramapriyan912001"},"content":"import seedu.awe.MainApp;","lastModifiedDate":"2021-10-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * A container for App specific utility functions","lastModifiedDate":"2016-08-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class AppUtil {","lastModifiedDate":"2016-08-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     * Gets an {@code Image} from the specified path.","lastModifiedDate":"2020-05-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public static Image getImage(String imagePath) {","lastModifiedDate":"2016-08-18"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        requireNonNull(imagePath);","lastModifiedDate":"2017-05-15"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        return new Image(MainApp.class.getResourceAsStream(imagePath));","lastModifiedDate":"2016-08-18"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * Checks that {@code condition} is true. Used for validating arguments to methods.","lastModifiedDate":"2017-05-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @throws IllegalArgumentException if {@code condition} is false.","lastModifiedDate":"2017-05-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-15"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static void checkArgument(Boolean condition) {","lastModifiedDate":"2017-05-15"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        if (!condition) {","lastModifiedDate":"2017-05-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            throw new IllegalArgumentException();","lastModifiedDate":"2017-05-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-15"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-15"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Checks that {@code condition} is true. Used for validating arguments to methods.","lastModifiedDate":"2017-05-15"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-15"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * @throws IllegalArgumentException with {@code errorMessage} if {@code condition} is false.","lastModifiedDate":"2017-05-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-15"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static void checkArgument(Boolean condition, String errorMessage) {","lastModifiedDate":"2017-05-15"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        if (!condition) {","lastModifiedDate":"2017-05-15"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            throw new IllegalArgumentException(errorMessage);","lastModifiedDate":"2017-05-15"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-15"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-15"},{"lineNumber":42,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"ramapriyan912001":2,"-":40}},{"path":"src/main/java/seedu/awe/commons/util/CollectionUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ramapriyan912001"},"content":"package seedu.awe.commons.util;","lastModifiedDate":"2021-10-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-06-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2017-01-30"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2016-12-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Utility methods related to Collections","lastModifiedDate":"2016-09-30"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class CollectionUtil {","lastModifiedDate":"2016-09-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    /** @see #requireAllNonNull(Collection) */","lastModifiedDate":"2017-05-19"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public static void requireAllNonNull(Object... items) {","lastModifiedDate":"2017-05-19"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        requireNonNull(items);","lastModifiedDate":"2017-06-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        Stream.of(items).forEach(Objects::requireNonNull);","lastModifiedDate":"2017-05-19"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * Throws NullPointerException if {@code items} or any element of {@code items} is null.","lastModifiedDate":"2017-05-19"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public static void requireAllNonNull(Collection\u003c?\u003e items) {","lastModifiedDate":"2017-05-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        requireNonNull(items);","lastModifiedDate":"2017-06-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        items.forEach(Objects::requireNonNull);","lastModifiedDate":"2017-05-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Returns true if {@code items} contain any elements that are non-null.","lastModifiedDate":"2017-06-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static boolean isAnyNonNull(Object... items) {","lastModifiedDate":"2017-06-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return items !\u003d null \u0026\u0026 Arrays.stream(items).anyMatch(Objects::nonNull);","lastModifiedDate":"2017-06-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"ramapriyan912001":1,"-":34}},{"path":"src/main/java/seedu/awe/commons/util/ConfigUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ramapriyan912001"},"content":"package seedu.awe.commons.util;","lastModifiedDate":"2021-10-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-09-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2016-09-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":7,"author":{"gitId":"ramapriyan912001"},"content":"import seedu.awe.commons.core.Config;","lastModifiedDate":"2021-10-05"},{"lineNumber":8,"author":{"gitId":"ramapriyan912001"},"content":"import seedu.awe.commons.exceptions.DataConversionException;","lastModifiedDate":"2021-10-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * A class for accessing the Config File.","lastModifiedDate":"2016-09-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class ConfigUtil {","lastModifiedDate":"2016-09-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public static Optional\u003cConfig\u003e readConfig(Path configFilePath) throws DataConversionException {","lastModifiedDate":"2018-04-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        return JsonUtil.readJsonFile(configFilePath, Config.class);","lastModifiedDate":"2016-10-07"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public static void saveConfig(Config config, Path configFilePath) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        JsonUtil.saveJsonFile(config, configFilePath);","lastModifiedDate":"2016-10-07"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-24"}],"authorContributionMap":{"ramapriyan912001":3,"-":20}},{"path":"src/main/java/seedu/awe/commons/util/FileUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ramapriyan912001"},"content":"package seedu.awe.commons.util;","lastModifiedDate":"2021-10-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Files;","lastModifiedDate":"2016-08-26"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.InvalidPathException;","lastModifiedDate":"2018-04-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Writes and reads files","lastModifiedDate":"2016-10-07"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class FileUtil {","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private static final String CHARSET \u003d \"UTF-8\";","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public static boolean isFileExists(Path file) {","lastModifiedDate":"2018-04-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        return Files.exists(file) \u0026\u0026 Files.isRegularFile(file);","lastModifiedDate":"2018-04-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * Returns true if {@code path} can be converted into a {@code Path} via {@link Paths#get(String)},","lastModifiedDate":"2018-04-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * otherwise returns false.","lastModifiedDate":"2018-04-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * @param path A string representing the file path. Cannot be null.","lastModifiedDate":"2018-04-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public static boolean isValidPath(String path) {","lastModifiedDate":"2018-04-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-04-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"            Paths.get(path);","lastModifiedDate":"2018-04-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        } catch (InvalidPathException ipe) {","lastModifiedDate":"2018-04-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-04-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        return true;","lastModifiedDate":"2018-04-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Creates a file if it does not exist along with its missing parent directories.","lastModifiedDate":"2017-08-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * @throws IOException if the file or directory cannot be created.","lastModifiedDate":"2017-08-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public static void createIfMissing(Path file) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        if (!isFileExists(file)) {","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            createFile(file);","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * Creates a file if it does not exist along with its missing parent directories.","lastModifiedDate":"2018-04-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public static void createFile(Path file) throws IOException {","lastModifiedDate":"2018-04-15"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        if (Files.exists(file)) {","lastModifiedDate":"2018-04-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            return;","lastModifiedDate":"2018-04-15"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        createParentDirsOfFile(file);","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        Files.createFile(file);","lastModifiedDate":"2018-04-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     * Creates parent directories of file if it has a parent directory","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public static void createParentDirsOfFile(Path file) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        Path parentDir \u003d file.getParent();","lastModifiedDate":"2018-04-21"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        if (parentDir !\u003d null) {","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"            Files.createDirectories(parentDir);","lastModifiedDate":"2018-04-21"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     * Assumes file exists","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public static String readFromFile(Path file) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        return new String(Files.readAllBytes(file), CHARSET);","lastModifiedDate":"2018-04-21"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     * Writes given string to a file.","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     * Will create the file if it does not exist yet.","lastModifiedDate":"2016-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public static void writeToFile(Path file, String content) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        Files.write(file, content.getBytes(CHARSET));","lastModifiedDate":"2018-04-21"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"ramapriyan912001":1,"-":82}},{"path":"src/main/java/seedu/awe/commons/util/JsonUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ramapriyan912001"},"content":"package seedu.awe.commons.util;","lastModifiedDate":"2021-10-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Files;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.logging.Level;","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonAutoDetect;","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.PropertyAccessor;","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.core.JsonProcessingException;","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.DeserializationContext;","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.DeserializationFeature;","lastModifiedDate":"2016-09-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.ObjectMapper;","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.SerializationFeature;","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.deser.std.FromStringDeserializer;","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.module.SimpleModule;","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.ser.std.ToStringSerializer;","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":23,"author":{"gitId":"ramapriyan912001"},"content":"import seedu.awe.commons.core.LogsCenter;","lastModifiedDate":"2021-10-05"},{"lineNumber":24,"author":{"gitId":"ramapriyan912001"},"content":"import seedu.awe.commons.exceptions.DataConversionException;","lastModifiedDate":"2021-10-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":" * Converts a Java object instance to JSON and vice versa","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"public class JsonUtil {","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(JsonUtil.class);","lastModifiedDate":"2016-10-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private static ObjectMapper objectMapper \u003d new ObjectMapper().findAndRegisterModules()","lastModifiedDate":"2016-10-19"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            .configure(SerializationFeature.WRITE_DATES_AS_TIMESTAMPS, false)","lastModifiedDate":"2016-10-19"},{"lineNumber":35,"author":{"gitId":"-"},"content":"            .configure(DeserializationFeature.FAIL_ON_UNKNOWN_PROPERTIES, false)","lastModifiedDate":"2016-10-19"},{"lineNumber":36,"author":{"gitId":"-"},"content":"            .setVisibility(PropertyAccessor.ALL, JsonAutoDetect.Visibility.NONE)","lastModifiedDate":"2016-10-19"},{"lineNumber":37,"author":{"gitId":"-"},"content":"            .setVisibility(PropertyAccessor.FIELD, JsonAutoDetect.Visibility.ANY)","lastModifiedDate":"2016-10-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            .registerModule(new SimpleModule(\"SimpleModule\")","lastModifiedDate":"2016-10-19"},{"lineNumber":39,"author":{"gitId":"-"},"content":"                    .addSerializer(Level.class, new ToStringSerializer())","lastModifiedDate":"2016-10-19"},{"lineNumber":40,"author":{"gitId":"-"},"content":"                    .addDeserializer(Level.class, new LevelDeserializer(Level.class)));","lastModifiedDate":"2016-10-19"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    static \u003cT\u003e void serializeObjectToJsonFile(Path jsonFile, T objectToSerialize) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        FileUtil.writeToFile(jsonFile, toJsonString(objectToSerialize));","lastModifiedDate":"2016-10-07"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-07"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    static \u003cT\u003e T deserializeObjectFromJsonFile(Path jsonFile, Class\u003cT\u003e classOfObjectToDeserialize)","lastModifiedDate":"2018-04-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            throws IOException {","lastModifiedDate":"2016-10-07"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        return fromJsonString(FileUtil.readFromFile(jsonFile), classOfObjectToDeserialize);","lastModifiedDate":"2016-10-07"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-07"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-07"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * Returns the Json object from the given file or {@code Optional.empty()} object if the file is not found.","lastModifiedDate":"2016-10-07"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * If any values are missing from the file, default values will be used, as long as the file is a valid json file.","lastModifiedDate":"2016-10-07"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * @param filePath cannot be null.","lastModifiedDate":"2016-10-07"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * @param classOfObjectToDeserialize Json file has to correspond to the structure in the class given here.","lastModifiedDate":"2016-10-07"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * @throws DataConversionException if the file format is not as expected.","lastModifiedDate":"2016-10-07"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-07"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public static \u003cT\u003e Optional\u003cT\u003e readJsonFile(","lastModifiedDate":"2016-10-07"},{"lineNumber":59,"author":{"gitId":"-"},"content":"            Path filePath, Class\u003cT\u003e classOfObjectToDeserialize) throws DataConversionException {","lastModifiedDate":"2018-04-21"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2017-05-15"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        if (!Files.exists(filePath)) {","lastModifiedDate":"2018-04-21"},{"lineNumber":63,"author":{"gitId":"-"},"content":"            logger.info(\"Json file \" + filePath + \" not found\");","lastModifiedDate":"2018-04-21"},{"lineNumber":64,"author":{"gitId":"-"},"content":"            return Optional.empty();","lastModifiedDate":"2016-10-07"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-07"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        T jsonFile;","lastModifiedDate":"2016-10-07"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-10-07"},{"lineNumber":70,"author":{"gitId":"-"},"content":"            jsonFile \u003d deserializeObjectFromJsonFile(filePath, classOfObjectToDeserialize);","lastModifiedDate":"2018-04-21"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-10-07"},{"lineNumber":72,"author":{"gitId":"-"},"content":"            logger.warning(\"Error reading from jsonFile file \" + filePath + \": \" + e);","lastModifiedDate":"2018-04-21"},{"lineNumber":73,"author":{"gitId":"-"},"content":"            throw new DataConversionException(e);","lastModifiedDate":"2016-10-07"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-07"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        return Optional.of(jsonFile);","lastModifiedDate":"2016-10-07"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-07"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-07"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * Saves the Json object to the specified file.","lastModifiedDate":"2016-10-07"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     * Overwrites existing file if it exists, creates a new file if it doesn\u0027t.","lastModifiedDate":"2016-10-07"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     * @param jsonFile cannot be null","lastModifiedDate":"2016-10-07"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     * @param filePath cannot be null","lastModifiedDate":"2016-10-07"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     * @throws IOException if there was an error during writing to the file","lastModifiedDate":"2016-10-07"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-07"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public static \u003cT\u003e void saveJsonFile(T jsonFile, Path filePath) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2017-05-15"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        requireNonNull(jsonFile);","lastModifiedDate":"2017-05-15"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        serializeObjectToJsonFile(filePath, jsonFile);","lastModifiedDate":"2018-04-21"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-07"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-19"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     * Converts a given string representation of a JSON data to instance of a class","lastModifiedDate":"2016-10-19"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     * @param \u003cT\u003e The generic type to create an instance of","lastModifiedDate":"2016-10-19"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     * @return The instance of T with the specified values in the JSON string","lastModifiedDate":"2016-10-19"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-19"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    public static \u003cT\u003e T fromJsonString(String json, Class\u003cT\u003e instanceClass) throws IOException {","lastModifiedDate":"2016-10-19"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        return objectMapper.readValue(json, instanceClass);","lastModifiedDate":"2016-10-19"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-19"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-19"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     * Converts a given instance of a class into its JSON data string representation","lastModifiedDate":"2016-10-19"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     * @param instance The T object to be converted into the JSON string","lastModifiedDate":"2016-10-19"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     * @param \u003cT\u003e The generic type to create an instance of","lastModifiedDate":"2016-10-19"},{"lineNumber":107,"author":{"gitId":"-"},"content":"     * @return JSON data representation of the given class instance, in string","lastModifiedDate":"2016-10-19"},{"lineNumber":108,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-19"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    public static \u003cT\u003e String toJsonString(T instance) throws JsonProcessingException {","lastModifiedDate":"2016-10-19"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        return objectMapper.writerWithDefaultPrettyPrinter().writeValueAsString(instance);","lastModifiedDate":"2016-10-19"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-19"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":114,"author":{"gitId":"-"},"content":"     * Contains methods that retrieve logging level from serialized string.","lastModifiedDate":"2017-08-16"},{"lineNumber":115,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    private static class LevelDeserializer extends FromStringDeserializer\u003cLevel\u003e {","lastModifiedDate":"2016-08-08"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        protected LevelDeserializer(Class\u003c?\u003e vc) {","lastModifiedDate":"2016-08-08"},{"lineNumber":119,"author":{"gitId":"-"},"content":"            super(vc);","lastModifiedDate":"2016-08-08"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        protected Level _deserialize(String value, DeserializationContext ctxt) {","lastModifiedDate":"2018-08-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"            return getLoggingLevel(value);","lastModifiedDate":"2016-08-08"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2016-08-08"},{"lineNumber":128,"author":{"gitId":"-"},"content":"         * Gets the logging level that matches loggingLevelString","lastModifiedDate":"2016-08-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":"         * \u003cp\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":130,"author":{"gitId":"-"},"content":"         * Returns null if there are no matches","lastModifiedDate":"2016-08-08"},{"lineNumber":131,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2016-08-08"},{"lineNumber":132,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-08-08"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        private Level getLoggingLevel(String loggingLevelString) {","lastModifiedDate":"2016-08-08"},{"lineNumber":134,"author":{"gitId":"-"},"content":"            return Level.parse(loggingLevelString);","lastModifiedDate":"2016-09-09"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        public Class\u003cLevel\u003e handledType() {","lastModifiedDate":"2016-08-08"},{"lineNumber":139,"author":{"gitId":"-"},"content":"            return Level.class;","lastModifiedDate":"2016-08-08"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":143,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"ramapriyan912001":3,"-":140}},{"path":"src/main/java/seedu/awe/commons/util/StringUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ramapriyan912001"},"content":"package seedu.awe.commons.util;","lastModifiedDate":"2021-10-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"ramapriyan912001"},"content":"import static seedu.awe.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2021-10-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.io.PrintWriter;","lastModifiedDate":"2016-09-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.io.StringWriter;","lastModifiedDate":"2016-09-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Helper functions for handling strings.","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class StringUtil {","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * Returns true if the {@code sentence} contains the {@code word}.","lastModifiedDate":"2016-10-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     *   Ignores case, but a full word match is required.","lastModifiedDate":"2016-10-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     *   \u003cbr\u003eexamples:\u003cpre\u003e","lastModifiedDate":"2016-10-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     *       containsWordIgnoreCase(\"ABc def\", \"abc\") \u003d\u003d true","lastModifiedDate":"2016-10-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     *       containsWordIgnoreCase(\"ABc def\", \"DEF\") \u003d\u003d true","lastModifiedDate":"2016-10-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     *       containsWordIgnoreCase(\"ABc def\", \"AB\") \u003d\u003d false //not a full word match","lastModifiedDate":"2016-10-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     *       \u003c/pre\u003e","lastModifiedDate":"2016-10-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * @param sentence cannot be null","lastModifiedDate":"2016-10-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @param word cannot be null, cannot be empty, must be a single word","lastModifiedDate":"2016-10-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static boolean containsWordIgnoreCase(String sentence, String word) {","lastModifiedDate":"2016-10-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        requireNonNull(sentence);","lastModifiedDate":"2017-05-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        requireNonNull(word);","lastModifiedDate":"2017-05-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        String preppedWord \u003d word.trim();","lastModifiedDate":"2016-10-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        checkArgument(!preppedWord.isEmpty(), \"Word parameter cannot be empty\");","lastModifiedDate":"2017-05-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        checkArgument(preppedWord.split(\"\\\\s+\").length \u003d\u003d 1, \"Word parameter should be a single word\");","lastModifiedDate":"2017-05-15"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        String preppedSentence \u003d sentence;","lastModifiedDate":"2016-10-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        String[] wordsInPreppedSentence \u003d preppedSentence.split(\"\\\\s+\");","lastModifiedDate":"2016-10-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        return Arrays.stream(wordsInPreppedSentence)","lastModifiedDate":"2018-01-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"                .anyMatch(preppedWord::equalsIgnoreCase);","lastModifiedDate":"2018-01-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * Returns a detailed message of the t, including the stack trace.","lastModifiedDate":"2016-09-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public static String getDetails(Throwable t) {","lastModifiedDate":"2016-09-21"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        requireNonNull(t);","lastModifiedDate":"2017-05-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        StringWriter sw \u003d new StringWriter();","lastModifiedDate":"2016-09-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        t.printStackTrace(new PrintWriter(sw));","lastModifiedDate":"2016-09-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        return t.getMessage() + \"\\n\" + sw.toString();","lastModifiedDate":"2016-09-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-22"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * Returns true if {@code s} represents a non-zero unsigned integer","lastModifiedDate":"2017-06-02"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * e.g. 1, 2, 3, ..., {@code Integer.MAX_VALUE} \u003cbr\u003e","lastModifiedDate":"2017-06-02"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * Will return false for any other non-null string input","lastModifiedDate":"2017-06-02"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * e.g. empty string, \"-1\", \"0\", \"+1\", and \" 2 \" (untrimmed), \"3 0\" (contains whitespace), \"1 a\" (contains letters)","lastModifiedDate":"2017-06-02"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * @throws NullPointerException if {@code s} is null.","lastModifiedDate":"2017-06-02"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-22"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public static boolean isNonZeroUnsignedInteger(String s) {","lastModifiedDate":"2017-06-02"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        requireNonNull(s);","lastModifiedDate":"2017-06-02"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-06-02"},{"lineNumber":62,"author":{"gitId":"-"},"content":"            int value \u003d Integer.parseInt(s);","lastModifiedDate":"2017-06-02"},{"lineNumber":63,"author":{"gitId":"-"},"content":"            return value \u003e 0 \u0026\u0026 !s.startsWith(\"+\"); // \"+1\" is successfully parsed by Integer#parseInt(String)","lastModifiedDate":"2017-06-02"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        } catch (NumberFormatException nfe) {","lastModifiedDate":"2017-06-02"},{"lineNumber":65,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-06-02"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-06-02"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":68,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"ramapriyan912001":2,"-":66}},{"path":"src/main/java/seedu/awe/logic/Logic.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ramapriyan912001"},"content":"package seedu.awe.logic;","lastModifiedDate":"2021-10-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-09-25"},{"lineNumber":6,"author":{"gitId":"ramapriyan912001"},"content":"import seedu.awe.commons.core.GuiSettings;","lastModifiedDate":"2021-10-05"},{"lineNumber":7,"author":{"gitId":"ramapriyan912001"},"content":"import seedu.awe.logic.commands.CommandResult;","lastModifiedDate":"2021-10-05"},{"lineNumber":8,"author":{"gitId":"ramapriyan912001"},"content":"import seedu.awe.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-10-05"},{"lineNumber":9,"author":{"gitId":"ramapriyan912001"},"content":"import seedu.awe.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-10-05"},{"lineNumber":10,"author":{"gitId":"ramapriyan912001"},"content":"import seedu.awe.model.ReadOnlyAddressBook;","lastModifiedDate":"2021-10-05"},{"lineNumber":11,"author":{"gitId":"Jingwencloud"},"content":"import seedu.awe.model.expense.Expense;","lastModifiedDate":"2021-10-06"},{"lineNumber":12,"author":{"gitId":"ramapriyan912001"},"content":"import seedu.awe.model.group.Group;","lastModifiedDate":"2021-10-05"},{"lineNumber":13,"author":{"gitId":"ramapriyan912001"},"content":"import seedu.awe.model.payment.Payment;","lastModifiedDate":"2021-10-21"},{"lineNumber":14,"author":{"gitId":"ramapriyan912001"},"content":"import seedu.awe.model.person.Person;","lastModifiedDate":"2021-10-05"},{"lineNumber":15,"author":{"gitId":"Jingwencloud"},"content":"import seedu.awe.model.transactionsummary.TransactionSummary;","lastModifiedDate":"2021-10-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * API of the Logic component","lastModifiedDate":"2016-09-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public interface Logic {","lastModifiedDate":"2016-09-25"},{"lineNumber":21,"author":{"gitId":"Jingwencloud"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2016-09-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @param commandText The command as entered by the user.","lastModifiedDate":"2016-09-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * @return the result of the command execution.","lastModifiedDate":"2016-09-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * @throws CommandException If an error occurs during command execution.","lastModifiedDate":"2017-02-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * @throws ParseException If an error occurs during parsing.","lastModifiedDate":"2017-03-11"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    CommandResult execute(String commandText) throws CommandException, ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * Returns the AddressBook.","lastModifiedDate":"2018-12-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-12-03"},{"lineNumber":34,"author":{"gitId":"ramapriyan912001"},"content":"     * @see seedu.awe.model.Model#getAddressBook()","lastModifiedDate":"2021-10-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-03"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    ReadOnlyAddressBook getAddressBook();","lastModifiedDate":"2018-12-03"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-03"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    /** Returns an unmodifiable view of the filtered list of persons */","lastModifiedDate":"2017-09-01"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    ObservableList\u003cPerson\u003e getFilteredPersonList();","lastModifiedDate":"2018-01-10"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-26"},{"lineNumber":41,"author":{"gitId":"marcuspeh"},"content":"    /** Returns an unmodifiable view of the filtered list of groups */","lastModifiedDate":"2021-10-04"},{"lineNumber":42,"author":{"gitId":"marcuspeh"},"content":"    ObservableList\u003cGroup\u003e getFilteredGroupList();","lastModifiedDate":"2021-10-04"},{"lineNumber":43,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":44,"author":{"gitId":"Jingwencloud"},"content":"    /** Returns the list of expenses. */","lastModifiedDate":"2021-10-07"},{"lineNumber":45,"author":{"gitId":"Jingwencloud"},"content":"    ObservableList\u003cExpense\u003e getExpenses();","lastModifiedDate":"2021-10-07"},{"lineNumber":46,"author":{"gitId":"Jingwencloud"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":47,"author":{"gitId":"Jingwencloud"},"content":"    /** Returns the transaction summary as a list. */","lastModifiedDate":"2021-10-21"},{"lineNumber":48,"author":{"gitId":"Jingwencloud"},"content":"    ObservableList\u003cTransactionSummary\u003e getTransactionSummary();","lastModifiedDate":"2021-10-21"},{"lineNumber":49,"author":{"gitId":"Jingwencloud"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":50,"author":{"gitId":"ramapriyan912001"},"content":"    /** Returns the payments to make as a list. */","lastModifiedDate":"2021-10-21"},{"lineNumber":51,"author":{"gitId":"ramapriyan912001"},"content":"    ObservableList\u003cPayment\u003e getPayments();","lastModifiedDate":"2021-10-21"},{"lineNumber":52,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":54,"author":{"gitId":"ramapriyan912001"},"content":"     * Returns the user prefs\u0027 awe book file path.","lastModifiedDate":"2021-10-05"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    Path getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * Set the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    void setGuiSettings(GuiSettings guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"Jingwencloud":9,"marcuspeh":3,"ramapriyan912001":14,"-":41}},{"path":"src/main/java/seedu/awe/logic/LogicManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ramapriyan912001"},"content":"package seedu.awe.logic;","lastModifiedDate":"2021-10-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-12-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-09-24"},{"lineNumber":8,"author":{"gitId":"ramapriyan912001"},"content":"import seedu.awe.commons.core.GuiSettings;","lastModifiedDate":"2021-10-05"},{"lineNumber":9,"author":{"gitId":"ramapriyan912001"},"content":"import seedu.awe.commons.core.LogsCenter;","lastModifiedDate":"2021-10-05"},{"lineNumber":10,"author":{"gitId":"ramapriyan912001"},"content":"import seedu.awe.logic.commands.Command;","lastModifiedDate":"2021-10-05"},{"lineNumber":11,"author":{"gitId":"ramapriyan912001"},"content":"import seedu.awe.logic.commands.CommandResult;","lastModifiedDate":"2021-10-05"},{"lineNumber":12,"author":{"gitId":"ramapriyan912001"},"content":"import seedu.awe.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-10-05"},{"lineNumber":13,"author":{"gitId":"marcuspeh"},"content":"import seedu.awe.logic.parser.AweParser;","lastModifiedDate":"2021-10-22"},{"lineNumber":14,"author":{"gitId":"ramapriyan912001"},"content":"import seedu.awe.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-10-05"},{"lineNumber":15,"author":{"gitId":"ramapriyan912001"},"content":"import seedu.awe.model.Model;","lastModifiedDate":"2021-10-05"},{"lineNumber":16,"author":{"gitId":"ramapriyan912001"},"content":"import seedu.awe.model.ReadOnlyAddressBook;","lastModifiedDate":"2021-10-05"},{"lineNumber":17,"author":{"gitId":"Jingwencloud"},"content":"import seedu.awe.model.expense.Expense;","lastModifiedDate":"2021-10-06"},{"lineNumber":18,"author":{"gitId":"ramapriyan912001"},"content":"import seedu.awe.model.group.Group;","lastModifiedDate":"2021-10-05"},{"lineNumber":19,"author":{"gitId":"ramapriyan912001"},"content":"import seedu.awe.model.payment.Payment;","lastModifiedDate":"2021-10-21"},{"lineNumber":20,"author":{"gitId":"ramapriyan912001"},"content":"import seedu.awe.model.person.Person;","lastModifiedDate":"2021-10-05"},{"lineNumber":21,"author":{"gitId":"Jingwencloud"},"content":"import seedu.awe.model.transactionsummary.TransactionSummary;","lastModifiedDate":"2021-10-21"},{"lineNumber":22,"author":{"gitId":"ramapriyan912001"},"content":"import seedu.awe.storage.Storage;","lastModifiedDate":"2021-10-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":" * The main LogicManager of the app.","lastModifiedDate":"2016-09-22"},{"lineNumber":26,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"public class LogicManager implements Logic {","lastModifiedDate":"2018-12-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public static final String FILE_OPS_ERROR_MESSAGE \u003d \"Could not save data to file: \";","lastModifiedDate":"2018-12-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(LogicManager.class);","lastModifiedDate":"2016-09-29"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private final Model model;","lastModifiedDate":"2016-09-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private final Storage storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":33,"author":{"gitId":"marcuspeh"},"content":"    private final AweParser aweParser;","lastModifiedDate":"2021-10-22"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * Constructs a {@code LogicManager} with the given {@code Model} and {@code Storage}.","lastModifiedDate":"2020-05-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public LogicManager(Model model, Storage storage) {","lastModifiedDate":"2018-12-09"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        this.model \u003d model;","lastModifiedDate":"2016-09-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        this.storage \u003d storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":41,"author":{"gitId":"marcuspeh"},"content":"        aweParser \u003d new AweParser(model);","lastModifiedDate":"2021-10-22"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public CommandResult execute(String commandText) throws CommandException, ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        logger.info(\"----------------[USER COMMAND][\" + commandText + \"]\");","lastModifiedDate":"2016-09-29"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        CommandResult commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":49,"author":{"gitId":"marcuspeh"},"content":"        Command command \u003d aweParser.parseCommand(commandText);","lastModifiedDate":"2021-10-22"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        commandResult \u003d command.execute(model);","lastModifiedDate":"2019-01-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-12-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            storage.saveAddressBook(model.getAddressBook());","lastModifiedDate":"2018-12-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2018-12-09"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            throw new CommandException(FILE_OPS_ERROR_MESSAGE + ioe, ioe);","lastModifiedDate":"2018-12-09"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        return commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-12-03"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2018-12-03"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        return model.getAddressBook();","lastModifiedDate":"2018-12-03"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-03"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-03"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        return model.getFilteredPersonList();","lastModifiedDate":"2016-09-25"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-29"},{"lineNumber":71,"author":{"gitId":"marcuspeh"},"content":"    @Override","lastModifiedDate":"2021-10-04"},{"lineNumber":72,"author":{"gitId":"marcuspeh"},"content":"    public ObservableList\u003cGroup\u003e getFilteredGroupList() {","lastModifiedDate":"2021-10-04"},{"lineNumber":73,"author":{"gitId":"marcuspeh"},"content":"        return model.getFilteredGroupList();","lastModifiedDate":"2021-10-04"},{"lineNumber":74,"author":{"gitId":"marcuspeh"},"content":"    }","lastModifiedDate":"2021-10-04"},{"lineNumber":75,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":76,"author":{"gitId":"Jingwencloud"},"content":"    @Override","lastModifiedDate":"2021-10-06"},{"lineNumber":77,"author":{"gitId":"Jingwencloud"},"content":"    public ObservableList\u003cExpense\u003e getExpenses() {","lastModifiedDate":"2021-10-07"},{"lineNumber":78,"author":{"gitId":"Jingwencloud"},"content":"        return model.getExpenses();","lastModifiedDate":"2021-10-07"},{"lineNumber":79,"author":{"gitId":"Jingwencloud"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":80,"author":{"gitId":"Jingwencloud"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":81,"author":{"gitId":"Jingwencloud"},"content":"    @Override","lastModifiedDate":"2021-10-21"},{"lineNumber":82,"author":{"gitId":"Jingwencloud"},"content":"    public ObservableList\u003cTransactionSummary\u003e getTransactionSummary() {","lastModifiedDate":"2021-10-21"},{"lineNumber":83,"author":{"gitId":"Jingwencloud"},"content":"        return model.getTransactionSummary();","lastModifiedDate":"2021-10-21"},{"lineNumber":84,"author":{"gitId":"Jingwencloud"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":85,"author":{"gitId":"Jingwencloud"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":86,"author":{"gitId":"ramapriyan912001"},"content":"    @Override","lastModifiedDate":"2021-10-21"},{"lineNumber":87,"author":{"gitId":"ramapriyan912001"},"content":"    public ObservableList\u003cPayment\u003e getPayments() {","lastModifiedDate":"2021-10-21"},{"lineNumber":88,"author":{"gitId":"ramapriyan912001"},"content":"        return model.getPayments();","lastModifiedDate":"2021-10-21"},{"lineNumber":89,"author":{"gitId":"ramapriyan912001"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":90,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        return model.getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        return model.getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        model.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":105,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"marcuspeh":9,"Jingwencloud":12,"ramapriyan912001":18,"-":66}},{"path":"src/main/java/seedu/awe/logic/commands/AddContactCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ramapriyan912001"},"content":"package seedu.awe.logic.commands;","lastModifiedDate":"2021-10-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"chrus-chong"},"content":"import static seedu.awe.commons.core.Messages.MESSAGE_ADDCONTACTCOMMAND_DUPLICATE;","lastModifiedDate":"2021-10-25"},{"lineNumber":5,"author":{"gitId":"chrus-chong"},"content":"import static seedu.awe.commons.core.Messages.MESSAGE_ADDCONTACTCOMMAND_SUCCESS;","lastModifiedDate":"2021-10-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":7,"author":{"gitId":"ramapriyan912001"},"content":"import seedu.awe.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-10-05"},{"lineNumber":8,"author":{"gitId":"ramapriyan912001"},"content":"import seedu.awe.model.Model;","lastModifiedDate":"2021-10-05"},{"lineNumber":9,"author":{"gitId":"ramapriyan912001"},"content":"import seedu.awe.model.person.Person;","lastModifiedDate":"2021-10-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"ramapriyan912001"},"content":" * Adds a person to the awe book.","lastModifiedDate":"2021-10-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"marcuspeh"},"content":"public class AddContactCommand extends Command {","lastModifiedDate":"2021-10-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"marcuspeh"},"content":"    public static final String COMMAND_WORD \u003d \"addcontact\";","lastModifiedDate":"2021-10-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private final Person toAdd;","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * Creates an AddCommand to add the specified {@code Person}","lastModifiedDate":"2018-01-10"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":23,"author":{"gitId":"marcuspeh"},"content":"    public AddContactCommand(Person person) {","lastModifiedDate":"2021-10-11"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        requireNonNull(person);","lastModifiedDate":"2018-01-10"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        toAdd \u003d person;","lastModifiedDate":"2018-01-10"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2017-05-15"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        if (model.hasPerson(toAdd)) {","lastModifiedDate":"2018-08-07"},{"lineNumber":33,"author":{"gitId":"chrus-chong"},"content":"            throw new CommandException(MESSAGE_ADDCONTACTCOMMAND_DUPLICATE);","lastModifiedDate":"2021-10-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        model.addPerson(toAdd);","lastModifiedDate":"2016-09-25"},{"lineNumber":37,"author":{"gitId":"marcuspeh"},"content":"        return new CommandResult(String.format(MESSAGE_ADDCONTACTCOMMAND_SUCCESS, toAdd),","lastModifiedDate":"2021-11-01"},{"lineNumber":38,"author":{"gitId":"marcuspeh"},"content":"                false, false, false, true, false, false, false);","lastModifiedDate":"2021-11-01"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-22"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-22"},{"lineNumber":43,"author":{"gitId":"marcuspeh"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2021-10-05"},{"lineNumber":44,"author":{"gitId":"marcuspeh"},"content":"            return true;","lastModifiedDate":"2021-10-05"},{"lineNumber":45,"author":{"gitId":"marcuspeh"},"content":"        }","lastModifiedDate":"2021-10-05"},{"lineNumber":46,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":47,"author":{"gitId":"marcuspeh"},"content":"        if (!(other instanceof AddContactCommand)) { // instanceof handles nulls","lastModifiedDate":"2021-10-11"},{"lineNumber":48,"author":{"gitId":"marcuspeh"},"content":"            return false;","lastModifiedDate":"2021-10-05"},{"lineNumber":49,"author":{"gitId":"marcuspeh"},"content":"        }","lastModifiedDate":"2021-10-05"},{"lineNumber":50,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":51,"author":{"gitId":"marcuspeh"},"content":"        return toAdd.equals(((AddContactCommand) other).toAdd);","lastModifiedDate":"2021-10-11"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-22"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"marcuspeh":14,"chrus-chong":3,"ramapriyan912001":5,"-":31}},{"path":"src/main/java/seedu/awe/logic/commands/AddExpenseCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kheekheekhee"},"content":"package seedu.awe.logic.commands;","lastModifiedDate":"2021-10-06"},{"lineNumber":2,"author":{"gitId":"kheekheekhee"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":3,"author":{"gitId":"kheekheekhee"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-06"},{"lineNumber":4,"author":{"gitId":"chrus-chong"},"content":"import static seedu.awe.commons.core.Messages.MESSAGE_ADDEXPENSECOMMAND_ALL_MEMBERS_EXCLUDED;","lastModifiedDate":"2021-10-25"},{"lineNumber":5,"author":{"gitId":"chrus-chong"},"content":"import static seedu.awe.commons.core.Messages.MESSAGE_ADDEXPENSECOMMAND_CANNOT_ADD_EXCLUDED_MEMBER;","lastModifiedDate":"2021-10-25"},{"lineNumber":6,"author":{"gitId":"chrus-chong"},"content":"import static seedu.awe.commons.core.Messages.MESSAGE_ADDEXPENSECOMMAND_COST_ZERO_OR_LESS;","lastModifiedDate":"2021-10-25"},{"lineNumber":7,"author":{"gitId":"chrus-chong"},"content":"import static seedu.awe.commons.core.Messages.MESSAGE_ADDEXPENSECOMMAND_NOT_PART_OF_GROUP;","lastModifiedDate":"2021-10-25"},{"lineNumber":8,"author":{"gitId":"chrus-chong"},"content":"import static seedu.awe.commons.core.Messages.MESSAGE_ADDEXPENSECOMMAND_SUCCESS;","lastModifiedDate":"2021-10-25"},{"lineNumber":9,"author":{"gitId":"kheekheekhee"},"content":"import static seedu.awe.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2021-10-11"},{"lineNumber":10,"author":{"gitId":"kheekheekhee"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":11,"author":{"gitId":"kheekheekhee"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-17"},{"lineNumber":12,"author":{"gitId":"kheekheekhee"},"content":"import java.util.HashMap;","lastModifiedDate":"2021-10-17"},{"lineNumber":13,"author":{"gitId":"kheekheekhee"},"content":"import java.util.List;","lastModifiedDate":"2021-10-06"},{"lineNumber":14,"author":{"gitId":"kheekheekhee"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":15,"author":{"gitId":"kheekheekhee"},"content":"import seedu.awe.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-10-06"},{"lineNumber":16,"author":{"gitId":"kheekheekhee"},"content":"import seedu.awe.model.Model;","lastModifiedDate":"2021-10-06"},{"lineNumber":17,"author":{"gitId":"kheekheekhee"},"content":"import seedu.awe.model.expense.Cost;","lastModifiedDate":"2021-10-06"},{"lineNumber":18,"author":{"gitId":"marcuspeh"},"content":"import seedu.awe.model.expense.Description;","lastModifiedDate":"2021-10-25"},{"lineNumber":19,"author":{"gitId":"kheekheekhee"},"content":"import seedu.awe.model.expense.Expense;","lastModifiedDate":"2021-10-06"},{"lineNumber":20,"author":{"gitId":"kheekheekhee"},"content":"import seedu.awe.model.group.Group;","lastModifiedDate":"2021-10-06"},{"lineNumber":21,"author":{"gitId":"kheekheekhee"},"content":"import seedu.awe.model.group.GroupName;","lastModifiedDate":"2021-10-06"},{"lineNumber":22,"author":{"gitId":"kheekheekhee"},"content":"import seedu.awe.model.group.exceptions.DuplicateGroupException;","lastModifiedDate":"2021-10-06"},{"lineNumber":23,"author":{"gitId":"kheekheekhee"},"content":"import seedu.awe.model.person.Person;","lastModifiedDate":"2021-10-06"},{"lineNumber":24,"author":{"gitId":"kheekheekhee"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":25,"author":{"gitId":"kheekheekhee"},"content":"/**","lastModifiedDate":"2021-10-06"},{"lineNumber":26,"author":{"gitId":"kheekheekhee"},"content":" * Adds an expense to a group.","lastModifiedDate":"2021-10-06"},{"lineNumber":27,"author":{"gitId":"kheekheekhee"},"content":" */","lastModifiedDate":"2021-10-06"},{"lineNumber":28,"author":{"gitId":"kheekheekhee"},"content":"public class AddExpenseCommand extends Command {","lastModifiedDate":"2021-10-06"},{"lineNumber":29,"author":{"gitId":"kheekheekhee"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":30,"author":{"gitId":"kheekheekhee"},"content":"    public static final String COMMAND_WORD \u003d \"addexpense\";","lastModifiedDate":"2021-10-11"},{"lineNumber":31,"author":{"gitId":"kheekheekhee"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":32,"author":{"gitId":"marcuspeh"},"content":"    private final Person payer;","lastModifiedDate":"2021-10-25"},{"lineNumber":33,"author":{"gitId":"marcuspeh"},"content":"    private final Cost totalCost;","lastModifiedDate":"2021-10-25"},{"lineNumber":34,"author":{"gitId":"marcuspeh"},"content":"    private final Description description;","lastModifiedDate":"2021-10-25"},{"lineNumber":35,"author":{"gitId":"kheekheekhee"},"content":"    private final GroupName groupName;","lastModifiedDate":"2021-10-06"},{"lineNumber":36,"author":{"gitId":"kheekheekhee"},"content":"    private final List\u003cPerson\u003e selfPayees;","lastModifiedDate":"2021-10-11"},{"lineNumber":37,"author":{"gitId":"kheekheekhee"},"content":"    private final List\u003cCost\u003e selfCosts;","lastModifiedDate":"2021-10-11"},{"lineNumber":38,"author":{"gitId":"kheekheekhee"},"content":"    private final List\u003cPerson\u003e excluded;","lastModifiedDate":"2021-10-17"},{"lineNumber":39,"author":{"gitId":"kheekheekhee"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":40,"author":{"gitId":"kheekheekhee"},"content":"    /**","lastModifiedDate":"2021-10-06"},{"lineNumber":41,"author":{"gitId":"kheekheekhee"},"content":"     * Creates a AddExpenseCommand from the specified Person {@code Index} for the specified {@code Group}","lastModifiedDate":"2021-10-06"},{"lineNumber":42,"author":{"gitId":"kheekheekhee"},"content":"     *","lastModifiedDate":"2021-10-06"},{"lineNumber":43,"author":{"gitId":"marcuspeh"},"content":"     * @param payer Person paying for the expense.","lastModifiedDate":"2021-10-25"},{"lineNumber":44,"author":{"gitId":"marcuspeh"},"content":"     * @param totalCost Total amount of money paid for the expense.","lastModifiedDate":"2021-10-25"},{"lineNumber":45,"author":{"gitId":"marcuspeh"},"content":"     * @param description Description for the expense","lastModifiedDate":"2021-10-25"},{"lineNumber":46,"author":{"gitId":"kheekheekhee"},"content":"     * @param groupName Name of group to add expense to.","lastModifiedDate":"2021-10-12"},{"lineNumber":47,"author":{"gitId":"kheekheekhee"},"content":"     * @param selfPayees List of persons to exclude from the expense.","lastModifiedDate":"2021-10-12"},{"lineNumber":48,"author":{"gitId":"kheekheekhee"},"content":"     * @param selfCosts List of costs to exclude from the expense.","lastModifiedDate":"2021-10-12"},{"lineNumber":49,"author":{"gitId":"marcuspeh"},"content":"     * @param excluded Person excluded from the expense.","lastModifiedDate":"2021-10-25"},{"lineNumber":50,"author":{"gitId":"kheekheekhee"},"content":"     */","lastModifiedDate":"2021-10-06"},{"lineNumber":51,"author":{"gitId":"marcuspeh"},"content":"    public AddExpenseCommand(Person payer, Cost totalCost, Description description, GroupName groupName,","lastModifiedDate":"2021-10-25"},{"lineNumber":52,"author":{"gitId":"kheekheekhee"},"content":"                             List\u003cPerson\u003e selfPayees, List\u003cCost\u003e selfCosts, List\u003cPerson\u003e excluded) {","lastModifiedDate":"2021-10-17"},{"lineNumber":53,"author":{"gitId":"marcuspeh"},"content":"        requireAllNonNull(payer, totalCost, description, groupName, selfPayees, selfCosts, excluded);","lastModifiedDate":"2021-10-25"},{"lineNumber":54,"author":{"gitId":"kheekheekhee"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":55,"author":{"gitId":"marcuspeh"},"content":"        this.payer \u003d payer;","lastModifiedDate":"2021-10-25"},{"lineNumber":56,"author":{"gitId":"marcuspeh"},"content":"        this.totalCost \u003d totalCost;","lastModifiedDate":"2021-10-25"},{"lineNumber":57,"author":{"gitId":"marcuspeh"},"content":"        this.description \u003d description;","lastModifiedDate":"2021-10-25"},{"lineNumber":58,"author":{"gitId":"kheekheekhee"},"content":"        this.groupName \u003d groupName;","lastModifiedDate":"2021-10-06"},{"lineNumber":59,"author":{"gitId":"kheekheekhee"},"content":"        this.selfPayees \u003d selfPayees;","lastModifiedDate":"2021-10-11"},{"lineNumber":60,"author":{"gitId":"kheekheekhee"},"content":"        this.selfCosts \u003d selfCosts;","lastModifiedDate":"2021-10-11"},{"lineNumber":61,"author":{"gitId":"kheekheekhee"},"content":"        this.excluded \u003d excluded;","lastModifiedDate":"2021-10-17"},{"lineNumber":62,"author":{"gitId":"kheekheekhee"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":63,"author":{"gitId":"kheekheekhee"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":64,"author":{"gitId":"kheekheekhee"},"content":"    @Override","lastModifiedDate":"2021-10-06"},{"lineNumber":65,"author":{"gitId":"kheekheekhee"},"content":"    public CommandResult execute(Model model) throws CommandException, DuplicateGroupException {","lastModifiedDate":"2021-10-06"},{"lineNumber":66,"author":{"gitId":"kheekheekhee"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-10-06"},{"lineNumber":67,"author":{"gitId":"kheekheekhee"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":68,"author":{"gitId":"kheekheekhee"},"content":"        Group group \u003d model.getGroupByName(groupName);","lastModifiedDate":"2021-10-06"},{"lineNumber":69,"author":{"gitId":"kheekheekhee"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":70,"author":{"gitId":"marcuspeh"},"content":"        if (!group.isPartOfGroup(payer)) {","lastModifiedDate":"2021-10-25"},{"lineNumber":71,"author":{"gitId":"chrus-chong"},"content":"            throw new CommandException(MESSAGE_ADDEXPENSECOMMAND_NOT_PART_OF_GROUP);","lastModifiedDate":"2021-10-26"},{"lineNumber":72,"author":{"gitId":"kheekheekhee"},"content":"        }","lastModifiedDate":"2021-10-06"},{"lineNumber":73,"author":{"gitId":"kheekheekhee"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":74,"author":{"gitId":"kheekheekhee"},"content":"        for (Person exclude : excluded) {","lastModifiedDate":"2021-10-17"},{"lineNumber":75,"author":{"gitId":"kheekheekhee"},"content":"            if (!group.isPartOfGroup(exclude)) {","lastModifiedDate":"2021-10-11"},{"lineNumber":76,"author":{"gitId":"chrus-chong"},"content":"                throw new CommandException(MESSAGE_ADDEXPENSECOMMAND_NOT_PART_OF_GROUP);","lastModifiedDate":"2021-10-26"},{"lineNumber":77,"author":{"gitId":"kheekheekhee"},"content":"            }","lastModifiedDate":"2021-10-11"},{"lineNumber":78,"author":{"gitId":"kheekheekhee"},"content":"        }","lastModifiedDate":"2021-10-11"},{"lineNumber":79,"author":{"gitId":"kheekheekhee"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":80,"author":{"gitId":"kheekheekhee"},"content":"        if (group.getMembers().size() \u003d\u003d excluded.size()) {","lastModifiedDate":"2021-10-17"},{"lineNumber":81,"author":{"gitId":"chrus-chong"},"content":"            throw new CommandException(MESSAGE_ADDEXPENSECOMMAND_ALL_MEMBERS_EXCLUDED);","lastModifiedDate":"2021-10-26"},{"lineNumber":82,"author":{"gitId":"kheekheekhee"},"content":"        }","lastModifiedDate":"2021-10-11"},{"lineNumber":83,"author":{"gitId":"kheekheekhee"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":84,"author":{"gitId":"marcuspeh"},"content":"        return calculateExpense(group, model);","lastModifiedDate":"2021-10-25"},{"lineNumber":85,"author":{"gitId":"kheekheekhee"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":86,"author":{"gitId":"kheekheekhee"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":87,"author":{"gitId":"marcuspeh"},"content":"    /**","lastModifiedDate":"2021-10-25"},{"lineNumber":88,"author":{"gitId":"marcuspeh"},"content":"     * Process data from user and checks for errors. Data is then passed into createExpense method.","lastModifiedDate":"2021-10-25"},{"lineNumber":89,"author":{"gitId":"marcuspeh"},"content":"     *","lastModifiedDate":"2021-10-25"},{"lineNumber":90,"author":{"gitId":"marcuspeh"},"content":"     * @param group Group for the expense.","lastModifiedDate":"2021-10-25"},{"lineNumber":91,"author":{"gitId":"marcuspeh"},"content":"     * @param model Model for AWE.","lastModifiedDate":"2021-10-25"},{"lineNumber":92,"author":{"gitId":"marcuspeh"},"content":"     * @return Return the result for creating an expense.","lastModifiedDate":"2021-10-25"},{"lineNumber":93,"author":{"gitId":"marcuspeh"},"content":"     * @throws CommandException if any of the person input by the user does not belong to the group","lastModifiedDate":"2021-10-25"},{"lineNumber":94,"author":{"gitId":"marcuspeh"},"content":"     */","lastModifiedDate":"2021-10-25"},{"lineNumber":95,"author":{"gitId":"marcuspeh"},"content":"    private CommandResult calculateExpense(Group group, Model model) throws CommandException {","lastModifiedDate":"2021-10-25"},{"lineNumber":96,"author":{"gitId":"ramapriyan912001"},"content":"        HashMap\u003cPerson, Cost\u003e individualPayment \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2021-10-25"},{"lineNumber":97,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":98,"author":{"gitId":"marcuspeh"},"content":"        Cost leftoverExpenseAfterIndividualExpense \u003d totalCost;","lastModifiedDate":"2021-10-25"},{"lineNumber":99,"author":{"gitId":"kheekheekhee"},"content":"        for (int i \u003d 0; i \u003c selfPayees.size(); i++) {","lastModifiedDate":"2021-10-11"},{"lineNumber":100,"author":{"gitId":"kheekheekhee"},"content":"            Person currentPayer \u003d selfPayees.get(i);","lastModifiedDate":"2021-10-17"},{"lineNumber":101,"author":{"gitId":"kheekheekhee"},"content":"            if (excluded.contains(currentPayer)) {","lastModifiedDate":"2021-10-17"},{"lineNumber":102,"author":{"gitId":"chrus-chong"},"content":"                throw new CommandException(MESSAGE_ADDEXPENSECOMMAND_CANNOT_ADD_EXCLUDED_MEMBER);","lastModifiedDate":"2021-10-26"},{"lineNumber":103,"author":{"gitId":"kheekheekhee"},"content":"            }","lastModifiedDate":"2021-10-17"},{"lineNumber":104,"author":{"gitId":"kheekheekhee"},"content":"            if (currentPayer \u003d\u003d null || !group.isPartOfGroup(currentPayer)) {","lastModifiedDate":"2021-10-17"},{"lineNumber":105,"author":{"gitId":"chrus-chong"},"content":"                throw new CommandException(MESSAGE_ADDEXPENSECOMMAND_NOT_PART_OF_GROUP);","lastModifiedDate":"2021-10-26"},{"lineNumber":106,"author":{"gitId":"kheekheekhee"},"content":"            }","lastModifiedDate":"2021-10-11"},{"lineNumber":107,"author":{"gitId":"ramapriyan912001"},"content":"            individualPayment.merge(currentPayer, selfCosts.get(i), (original, toAdd) -\u003e original.add(toAdd));","lastModifiedDate":"2021-10-25"},{"lineNumber":108,"author":{"gitId":"marcuspeh"},"content":"            leftoverExpenseAfterIndividualExpense \u003d leftoverExpenseAfterIndividualExpense.subtract(selfCosts.get(i));","lastModifiedDate":"2021-10-25"},{"lineNumber":109,"author":{"gitId":"kheekheekhee"},"content":"        }","lastModifiedDate":"2021-10-11"},{"lineNumber":110,"author":{"gitId":"kheekheekhee"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":111,"author":{"gitId":"marcuspeh"},"content":"        if (leftoverExpenseAfterIndividualExpense.cost \u003c\u003d 0) {","lastModifiedDate":"2021-10-25"},{"lineNumber":112,"author":{"gitId":"chrus-chong"},"content":"            throw new CommandException(MESSAGE_ADDEXPENSECOMMAND_COST_ZERO_OR_LESS);","lastModifiedDate":"2021-10-26"},{"lineNumber":113,"author":{"gitId":"kheekheekhee"},"content":"        }","lastModifiedDate":"2021-10-11"},{"lineNumber":114,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":115,"author":{"gitId":"kheekheekhee"},"content":"        ArrayList\u003cPerson\u003e groupMembers \u003d removeExcludedFromGroup(group.getMembers());","lastModifiedDate":"2021-10-19"},{"lineNumber":116,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":117,"author":{"gitId":"ramapriyan912001"},"content":"        return createExpense(model, group, groupMembers, individualPayment);","lastModifiedDate":"2021-10-25"},{"lineNumber":118,"author":{"gitId":"marcuspeh"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":119,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":120,"author":{"gitId":"marcuspeh"},"content":"    /**","lastModifiedDate":"2021-10-25"},{"lineNumber":121,"author":{"gitId":"marcuspeh"},"content":"     * Creates an expense class based on data passed in. Created expense is then added into the model.","lastModifiedDate":"2021-10-25"},{"lineNumber":122,"author":{"gitId":"marcuspeh"},"content":"     *","lastModifiedDate":"2021-10-25"},{"lineNumber":123,"author":{"gitId":"marcuspeh"},"content":"     * @param model Model for AWE","lastModifiedDate":"2021-10-25"},{"lineNumber":124,"author":{"gitId":"marcuspeh"},"content":"     * @param group Group for the expense.","lastModifiedDate":"2021-10-25"},{"lineNumber":125,"author":{"gitId":"marcuspeh"},"content":"     * @param groupMembers List of person that is included in the expense.","lastModifiedDate":"2021-10-25"},{"lineNumber":126,"author":{"gitId":"marcuspeh"},"content":"     * @param individualPayement Individual expenses of the user (if any)","lastModifiedDate":"2021-10-25"},{"lineNumber":127,"author":{"gitId":"marcuspeh"},"content":"     * @return","lastModifiedDate":"2021-10-25"},{"lineNumber":128,"author":{"gitId":"marcuspeh"},"content":"     */","lastModifiedDate":"2021-10-25"},{"lineNumber":129,"author":{"gitId":"marcuspeh"},"content":"    private CommandResult createExpense(Model model, Group group, List\u003cPerson\u003e groupMembers,","lastModifiedDate":"2021-10-25"},{"lineNumber":130,"author":{"gitId":"marcuspeh"},"content":"                                        HashMap\u003cPerson, Cost\u003e individualPayement) {","lastModifiedDate":"2021-10-25"},{"lineNumber":131,"author":{"gitId":"marcuspeh"},"content":"        Expense newExpense \u003d new Expense(payer, totalCost, description, groupMembers, individualPayement);","lastModifiedDate":"2021-10-25"},{"lineNumber":132,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":133,"author":{"gitId":"marcuspeh"},"content":"        Group newGroup \u003d group.addExpense(newExpense);","lastModifiedDate":"2021-10-25"},{"lineNumber":134,"author":{"gitId":"kheekheekhee"},"content":"        model.setGroup(group, newGroup);","lastModifiedDate":"2021-10-06"},{"lineNumber":135,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":136,"author":{"gitId":"marcuspeh"},"content":"        model.addExpense(newExpense, newGroup);","lastModifiedDate":"2021-10-25"},{"lineNumber":137,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":138,"author":{"gitId":"chrus-chong"},"content":"        return new CommandResult(String.format(MESSAGE_ADDEXPENSECOMMAND_SUCCESS, newExpense));","lastModifiedDate":"2021-10-26"},{"lineNumber":139,"author":{"gitId":"kheekheekhee"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":140,"author":{"gitId":"kheekheekhee"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":141,"author":{"gitId":"marcuspeh"},"content":"    /**","lastModifiedDate":"2021-10-25"},{"lineNumber":142,"author":{"gitId":"marcuspeh"},"content":"     * Gets a list of person that is included in the expense. Excluded person is not included in the list.","lastModifiedDate":"2021-10-25"},{"lineNumber":143,"author":{"gitId":"marcuspeh"},"content":"     *","lastModifiedDate":"2021-10-25"},{"lineNumber":144,"author":{"gitId":"marcuspeh"},"content":"     * @param members All members of the group.","lastModifiedDate":"2021-10-25"},{"lineNumber":145,"author":{"gitId":"marcuspeh"},"content":"     * @return A list of Person in the group that is involved in the expense.","lastModifiedDate":"2021-10-25"},{"lineNumber":146,"author":{"gitId":"marcuspeh"},"content":"     */","lastModifiedDate":"2021-10-25"},{"lineNumber":147,"author":{"gitId":"kheekheekhee"},"content":"    private ArrayList\u003cPerson\u003e removeExcludedFromGroup(ArrayList\u003cPerson\u003e members) {","lastModifiedDate":"2021-10-19"},{"lineNumber":148,"author":{"gitId":"kheekheekhee"},"content":"        ArrayList\u003cPerson\u003e groupMembers \u003d new ArrayList\u003c\u003e(members);","lastModifiedDate":"2021-10-19"},{"lineNumber":149,"author":{"gitId":"kheekheekhee"},"content":"        for (Person toExclude : excluded) {","lastModifiedDate":"2021-10-17"},{"lineNumber":150,"author":{"gitId":"kheekheekhee"},"content":"            groupMembers.remove(toExclude);","lastModifiedDate":"2021-10-17"},{"lineNumber":151,"author":{"gitId":"kheekheekhee"},"content":"        }","lastModifiedDate":"2021-10-17"},{"lineNumber":152,"author":{"gitId":"kheekheekhee"},"content":"        return groupMembers;","lastModifiedDate":"2021-10-19"},{"lineNumber":153,"author":{"gitId":"kheekheekhee"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":154,"author":{"gitId":"kheekheekhee"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":155,"author":{"gitId":"marcuspeh"},"content":"    public Cost getTotalCost() {","lastModifiedDate":"2021-10-25"},{"lineNumber":156,"author":{"gitId":"marcuspeh"},"content":"        return totalCost;","lastModifiedDate":"2021-10-25"},{"lineNumber":157,"author":{"gitId":"kheekheekhee"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":158,"author":{"gitId":"kheekheekhee"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":159,"author":{"gitId":"kheekheekhee"},"content":"    @Override","lastModifiedDate":"2021-10-06"},{"lineNumber":160,"author":{"gitId":"kheekheekhee"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-06"},{"lineNumber":161,"author":{"gitId":"kheekheekhee"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2021-10-06"},{"lineNumber":162,"author":{"gitId":"kheekheekhee"},"content":"            return true;","lastModifiedDate":"2021-10-06"},{"lineNumber":163,"author":{"gitId":"kheekheekhee"},"content":"        } else if (!(other instanceof AddExpenseCommand)) {","lastModifiedDate":"2021-10-06"},{"lineNumber":164,"author":{"gitId":"kheekheekhee"},"content":"            return false;","lastModifiedDate":"2021-10-06"},{"lineNumber":165,"author":{"gitId":"kheekheekhee"},"content":"        } else {","lastModifiedDate":"2021-10-06"},{"lineNumber":166,"author":{"gitId":"kheekheekhee"},"content":"            AddExpenseCommand otherCommand \u003d (AddExpenseCommand) other;","lastModifiedDate":"2021-10-06"},{"lineNumber":167,"author":{"gitId":"marcuspeh"},"content":"            return payer.equals(otherCommand.payer)","lastModifiedDate":"2021-10-25"},{"lineNumber":168,"author":{"gitId":"marcuspeh"},"content":"                    \u0026\u0026 totalCost.equals(otherCommand.totalCost)","lastModifiedDate":"2021-10-25"},{"lineNumber":169,"author":{"gitId":"marcuspeh"},"content":"                    \u0026\u0026 description.equals(otherCommand.description)","lastModifiedDate":"2021-10-25"},{"lineNumber":170,"author":{"gitId":"kheekheekhee"},"content":"                    \u0026\u0026 groupName.equals(otherCommand.groupName);","lastModifiedDate":"2021-10-12"},{"lineNumber":171,"author":{"gitId":"kheekheekhee"},"content":"        }","lastModifiedDate":"2021-10-06"},{"lineNumber":172,"author":{"gitId":"kheekheekhee"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":173,"author":{"gitId":"kheekheekhee"},"content":"}","lastModifiedDate":"2021-10-06"}],"authorContributionMap":{"marcuspeh":59,"kheekheekhee":98,"chrus-chong":13,"ramapriyan912001":3}},{"path":"src/main/java/seedu/awe/logic/commands/CalculatePaymentsCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ramapriyan912001"},"content":"package seedu.awe.logic.commands;","lastModifiedDate":"2021-10-17"},{"lineNumber":2,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":3,"author":{"gitId":"ramapriyan912001"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-17"},{"lineNumber":4,"author":{"gitId":"chrus-chong"},"content":"import static seedu.awe.commons.core.Messages.MESSAGE_CALCULATEPAYMENTSCOMMAND_GROUP_NOT_FOUND;","lastModifiedDate":"2021-10-25"},{"lineNumber":5,"author":{"gitId":"chrus-chong"},"content":"import static seedu.awe.commons.core.Messages.MESSAGE_CALCULATEPAYMENTSCOMMAND_PAYMENTS_EMPTY;","lastModifiedDate":"2021-10-25"},{"lineNumber":6,"author":{"gitId":"ramapriyan912001"},"content":"import static seedu.awe.commons.core.Messages.MESSAGE_CALCULATEPAYMENTSCOMMAND_PAYMENT_DISCREPANCY;","lastModifiedDate":"2021-10-29"},{"lineNumber":7,"author":{"gitId":"chrus-chong"},"content":"import static seedu.awe.commons.core.Messages.MESSAGE_CALCULATEPAYMENTSCOMMAND_SUCCESS;","lastModifiedDate":"2021-10-25"},{"lineNumber":8,"author":{"gitId":"ramapriyan912001"},"content":"import static seedu.awe.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2021-10-18"},{"lineNumber":9,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":10,"author":{"gitId":"ramapriyan912001"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-17"},{"lineNumber":11,"author":{"gitId":"ramapriyan912001"},"content":"import java.util.Comparator;","lastModifiedDate":"2021-10-17"},{"lineNumber":12,"author":{"gitId":"ramapriyan912001"},"content":"import java.util.List;","lastModifiedDate":"2021-10-17"},{"lineNumber":13,"author":{"gitId":"ramapriyan912001"},"content":"import java.util.Map;","lastModifiedDate":"2021-10-17"},{"lineNumber":14,"author":{"gitId":"ramapriyan912001"},"content":"import java.util.Optional;","lastModifiedDate":"2021-10-18"},{"lineNumber":15,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":16,"author":{"gitId":"ramapriyan912001"},"content":"import seedu.awe.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-10-17"},{"lineNumber":17,"author":{"gitId":"ramapriyan912001"},"content":"import seedu.awe.logic.commands.helper.Pair;","lastModifiedDate":"2021-10-31"},{"lineNumber":18,"author":{"gitId":"ramapriyan912001"},"content":"import seedu.awe.model.Model;","lastModifiedDate":"2021-10-17"},{"lineNumber":19,"author":{"gitId":"ramapriyan912001"},"content":"import seedu.awe.model.expense.Cost;","lastModifiedDate":"2021-10-17"},{"lineNumber":20,"author":{"gitId":"ramapriyan912001"},"content":"import seedu.awe.model.group.Group;","lastModifiedDate":"2021-10-17"},{"lineNumber":21,"author":{"gitId":"ramapriyan912001"},"content":"import seedu.awe.model.payment.Payment;","lastModifiedDate":"2021-10-17"},{"lineNumber":22,"author":{"gitId":"ramapriyan912001"},"content":"import seedu.awe.model.person.Person;","lastModifiedDate":"2021-10-17"},{"lineNumber":23,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":24,"author":{"gitId":"ramapriyan912001"},"content":"public class CalculatePaymentsCommand extends Command {","lastModifiedDate":"2021-10-17"},{"lineNumber":25,"author":{"gitId":"ramapriyan912001"},"content":"    public static final String COMMAND_WORD \u003d \"calculatepayments\";","lastModifiedDate":"2021-10-17"},{"lineNumber":26,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":27,"author":{"gitId":"ramapriyan912001"},"content":"    private final Group group;","lastModifiedDate":"2021-10-17"},{"lineNumber":28,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":29,"author":{"gitId":"ramapriyan912001"},"content":"    /**","lastModifiedDate":"2021-10-29"},{"lineNumber":30,"author":{"gitId":"ramapriyan912001"},"content":"     * Constructor for command.","lastModifiedDate":"2021-10-29"},{"lineNumber":31,"author":{"gitId":"ramapriyan912001"},"content":"     * @param group group for which payments are to be calculated.","lastModifiedDate":"2021-10-29"},{"lineNumber":32,"author":{"gitId":"ramapriyan912001"},"content":"     */","lastModifiedDate":"2021-10-29"},{"lineNumber":33,"author":{"gitId":"ramapriyan912001"},"content":"    public CalculatePaymentsCommand(Group group) {","lastModifiedDate":"2021-10-17"},{"lineNumber":34,"author":{"gitId":"ramapriyan912001"},"content":"        requireNonNull(group);","lastModifiedDate":"2021-10-29"},{"lineNumber":35,"author":{"gitId":"ramapriyan912001"},"content":"        this.group \u003d group;","lastModifiedDate":"2021-10-17"},{"lineNumber":36,"author":{"gitId":"ramapriyan912001"},"content":"    }","lastModifiedDate":"2021-10-17"},{"lineNumber":37,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":38,"author":{"gitId":"ramapriyan912001"},"content":"    @Override","lastModifiedDate":"2021-10-17"},{"lineNumber":39,"author":{"gitId":"ramapriyan912001"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2021-10-17"},{"lineNumber":40,"author":{"gitId":"ramapriyan912001"},"content":"        requireAllNonNull(group, model);","lastModifiedDate":"2021-10-29"},{"lineNumber":41,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":42,"author":{"gitId":"ramapriyan912001"},"content":"        if (!model.hasGroup(group)) {","lastModifiedDate":"2021-10-17"},{"lineNumber":43,"author":{"gitId":"chrus-chong"},"content":"            throw new CommandException(MESSAGE_CALCULATEPAYMENTSCOMMAND_GROUP_NOT_FOUND);","lastModifiedDate":"2021-10-25"},{"lineNumber":44,"author":{"gitId":"ramapriyan912001"},"content":"        }","lastModifiedDate":"2021-10-17"},{"lineNumber":45,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":46,"author":{"gitId":"ramapriyan912001"},"content":"        Group group \u003d model.getGroupByName(this.group.getGroupName());","lastModifiedDate":"2021-10-27"},{"lineNumber":47,"author":{"gitId":"ramapriyan912001"},"content":"        List\u003cPayment\u003e payments \u003d getPayments(group);","lastModifiedDate":"2021-10-21"},{"lineNumber":48,"author":{"gitId":"ramapriyan912001"},"content":"        model.setPayments(payments);","lastModifiedDate":"2021-10-21"},{"lineNumber":49,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":50,"author":{"gitId":"ramapriyan912001"},"content":"        if (payments.isEmpty()) {","lastModifiedDate":"2021-10-21"},{"lineNumber":51,"author":{"gitId":"chrus-chong"},"content":"            return new CommandResult(MESSAGE_CALCULATEPAYMENTSCOMMAND_PAYMENTS_EMPTY, false, false, false,","lastModifiedDate":"2021-10-25"},{"lineNumber":52,"author":{"gitId":"ramapriyan912001"},"content":"                    false, false, false,","lastModifiedDate":"2021-10-21"},{"lineNumber":53,"author":{"gitId":"ramapriyan912001"},"content":"                    true);","lastModifiedDate":"2021-10-21"},{"lineNumber":54,"author":{"gitId":"ramapriyan912001"},"content":"        } else {","lastModifiedDate":"2021-10-21"},{"lineNumber":55,"author":{"gitId":"chrus-chong"},"content":"            return new CommandResult(MESSAGE_CALCULATEPAYMENTSCOMMAND_SUCCESS, false, false, false,","lastModifiedDate":"2021-10-25"},{"lineNumber":56,"author":{"gitId":"ramapriyan912001"},"content":"                    false, false, false,","lastModifiedDate":"2021-10-21"},{"lineNumber":57,"author":{"gitId":"ramapriyan912001"},"content":"                    true);","lastModifiedDate":"2021-10-21"},{"lineNumber":58,"author":{"gitId":"ramapriyan912001"},"content":"        }","lastModifiedDate":"2021-10-17"},{"lineNumber":59,"author":{"gitId":"ramapriyan912001"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":60,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":61,"author":{"gitId":"ramapriyan912001"},"content":"    private static List\u003cPair\u003e sortPairs(List\u003cPair\u003e pairs) {","lastModifiedDate":"2021-10-17"},{"lineNumber":62,"author":{"gitId":"ramapriyan912001"},"content":"        pairs.sort(new Comparator\u003cPair\u003e() {","lastModifiedDate":"2021-10-17"},{"lineNumber":63,"author":{"gitId":"ramapriyan912001"},"content":"            @Override","lastModifiedDate":"2021-10-17"},{"lineNumber":64,"author":{"gitId":"ramapriyan912001"},"content":"            public int compare(Pair pair, Pair t1) {","lastModifiedDate":"2021-10-17"},{"lineNumber":65,"author":{"gitId":"ramapriyan912001"},"content":"                return pair.compareTo(t1);","lastModifiedDate":"2021-10-17"},{"lineNumber":66,"author":{"gitId":"ramapriyan912001"},"content":"            }","lastModifiedDate":"2021-10-17"},{"lineNumber":67,"author":{"gitId":"ramapriyan912001"},"content":"        });","lastModifiedDate":"2021-10-17"},{"lineNumber":68,"author":{"gitId":"ramapriyan912001"},"content":"        return pairs;","lastModifiedDate":"2021-10-17"},{"lineNumber":69,"author":{"gitId":"ramapriyan912001"},"content":"    }","lastModifiedDate":"2021-10-17"},{"lineNumber":70,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":71,"author":{"gitId":"ramapriyan912001"},"content":"    private List\u003cPair\u003e getNamesAndSurplusesList(Group group) {","lastModifiedDate":"2021-10-27"},{"lineNumber":72,"author":{"gitId":"ramapriyan912001"},"content":"        List\u003cPair\u003e namesAndSurpluses \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-17"},{"lineNumber":73,"author":{"gitId":"ramapriyan912001"},"content":"        Map\u003cPerson, Cost\u003e amountsPaid \u003d group.getPaidByPayers();","lastModifiedDate":"2021-10-17"},{"lineNumber":74,"author":{"gitId":"marcuspeh"},"content":"        Map\u003cPerson, Cost\u003e expensesIncurred \u003d group.getSplitExpenses();","lastModifiedDate":"2021-10-25"},{"lineNumber":75,"author":{"gitId":"ramapriyan912001"},"content":"        List\u003cPerson\u003e members \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-26"},{"lineNumber":76,"author":{"gitId":"ramapriyan912001"},"content":"        for (Person person : amountsPaid.keySet()) {","lastModifiedDate":"2021-10-27"},{"lineNumber":77,"author":{"gitId":"ramapriyan912001"},"content":"            if (!members.contains(person)) {","lastModifiedDate":"2021-10-27"},{"lineNumber":78,"author":{"gitId":"ramapriyan912001"},"content":"                members.add(person);","lastModifiedDate":"2021-10-27"},{"lineNumber":79,"author":{"gitId":"ramapriyan912001"},"content":"            }","lastModifiedDate":"2021-10-27"},{"lineNumber":80,"author":{"gitId":"ramapriyan912001"},"content":"        }","lastModifiedDate":"2021-10-27"},{"lineNumber":81,"author":{"gitId":"ramapriyan912001"},"content":"        for (Person person : expensesIncurred.keySet()) {","lastModifiedDate":"2021-10-27"},{"lineNumber":82,"author":{"gitId":"ramapriyan912001"},"content":"            if (!members.contains(person)) {","lastModifiedDate":"2021-10-27"},{"lineNumber":83,"author":{"gitId":"ramapriyan912001"},"content":"                members.add(person);","lastModifiedDate":"2021-10-27"},{"lineNumber":84,"author":{"gitId":"ramapriyan912001"},"content":"            }","lastModifiedDate":"2021-10-27"},{"lineNumber":85,"author":{"gitId":"ramapriyan912001"},"content":"        }","lastModifiedDate":"2021-10-27"},{"lineNumber":86,"author":{"gitId":"ramapriyan912001"},"content":"        double marginOfError \u003d 0.01;","lastModifiedDate":"2021-10-27"},{"lineNumber":87,"author":{"gitId":"ramapriyan912001"},"content":"        for (Person person: members) {","lastModifiedDate":"2021-10-26"},{"lineNumber":88,"author":{"gitId":"ramapriyan912001"},"content":"            Cost amountPaid \u003d amountsPaid.getOrDefault(person, new Cost(0.0));","lastModifiedDate":"2021-10-26"},{"lineNumber":89,"author":{"gitId":"ramapriyan912001"},"content":"            Cost expenseIncurred \u003d expensesIncurred.getOrDefault(person, new Cost(0.0));","lastModifiedDate":"2021-10-26"},{"lineNumber":90,"author":{"gitId":"ramapriyan912001"},"content":"            double surplus \u003d amountPaid.getCost() - expenseIncurred.getCost();","lastModifiedDate":"2021-10-17"},{"lineNumber":91,"author":{"gitId":"ramapriyan912001"},"content":"            if (Math.abs(surplus) \u003e\u003d marginOfError) {","lastModifiedDate":"2021-10-28"},{"lineNumber":92,"author":{"gitId":"ramapriyan912001"},"content":"                Pair nameSurplusPair \u003d new Pair(surplus, person);","lastModifiedDate":"2021-10-17"},{"lineNumber":93,"author":{"gitId":"ramapriyan912001"},"content":"                namesAndSurpluses.add(nameSurplusPair);","lastModifiedDate":"2021-10-17"},{"lineNumber":94,"author":{"gitId":"ramapriyan912001"},"content":"            }","lastModifiedDate":"2021-10-17"},{"lineNumber":95,"author":{"gitId":"ramapriyan912001"},"content":"        }","lastModifiedDate":"2021-10-27"},{"lineNumber":96,"author":{"gitId":"ramapriyan912001"},"content":"        return namesAndSurpluses;","lastModifiedDate":"2021-10-17"},{"lineNumber":97,"author":{"gitId":"ramapriyan912001"},"content":"    }","lastModifiedDate":"2021-10-17"},{"lineNumber":98,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":99,"author":{"gitId":"ramapriyan912001"},"content":"    /**","lastModifiedDate":"2021-10-17"},{"lineNumber":100,"author":{"gitId":"ramapriyan912001"},"content":"     * Calculates payments to be made between Persons in the group.","lastModifiedDate":"2021-10-17"},{"lineNumber":101,"author":{"gitId":"ramapriyan912001"},"content":"     * @param group group for which payments are to be calculated","lastModifiedDate":"2021-10-17"},{"lineNumber":102,"author":{"gitId":"ramapriyan912001"},"content":"     * @return List of payments to make.","lastModifiedDate":"2021-10-17"},{"lineNumber":103,"author":{"gitId":"ramapriyan912001"},"content":"     */","lastModifiedDate":"2021-10-17"},{"lineNumber":104,"author":{"gitId":"ramapriyan912001"},"content":"    public List\u003cPayment\u003e getPayments(Group group) throws CommandException {","lastModifiedDate":"2021-10-29"},{"lineNumber":105,"author":{"gitId":"ramapriyan912001"},"content":"        List\u003cPair\u003e namesAndSurplusesList \u003d getNamesAndSurplusesList(group);","lastModifiedDate":"2021-10-17"},{"lineNumber":106,"author":{"gitId":"ramapriyan912001"},"content":"        List\u003cPayment\u003e payments \u003d calculatePayments(namesAndSurplusesList);","lastModifiedDate":"2021-10-17"},{"lineNumber":107,"author":{"gitId":"ramapriyan912001"},"content":"        payments.sort(new Comparator\u003cPayment\u003e() {","lastModifiedDate":"2021-10-27"},{"lineNumber":108,"author":{"gitId":"ramapriyan912001"},"content":"            @Override","lastModifiedDate":"2021-10-27"},{"lineNumber":109,"author":{"gitId":"ramapriyan912001"},"content":"            public int compare(Payment payment, Payment t1) {","lastModifiedDate":"2021-10-27"},{"lineNumber":110,"author":{"gitId":"ramapriyan912001"},"content":"                return payment.compareTo(t1);","lastModifiedDate":"2021-10-27"},{"lineNumber":111,"author":{"gitId":"ramapriyan912001"},"content":"            }","lastModifiedDate":"2021-10-27"},{"lineNumber":112,"author":{"gitId":"ramapriyan912001"},"content":"        });","lastModifiedDate":"2021-10-27"},{"lineNumber":113,"author":{"gitId":"ramapriyan912001"},"content":"        return payments;","lastModifiedDate":"2021-10-21"},{"lineNumber":114,"author":{"gitId":"ramapriyan912001"},"content":"    }","lastModifiedDate":"2021-10-17"},{"lineNumber":115,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":116,"author":{"gitId":"ramapriyan912001"},"content":"    private boolean checkSumIsZero(List\u003cPair\u003e pairs) {","lastModifiedDate":"2021-10-17"},{"lineNumber":117,"author":{"gitId":"ramapriyan912001"},"content":"        double total \u003d 0.00;","lastModifiedDate":"2021-10-17"},{"lineNumber":118,"author":{"gitId":"ramapriyan912001"},"content":"        for (Pair pair: pairs) {","lastModifiedDate":"2021-10-17"},{"lineNumber":119,"author":{"gitId":"ramapriyan912001"},"content":"            total +\u003d pair.getSurplus();","lastModifiedDate":"2021-10-17"},{"lineNumber":120,"author":{"gitId":"ramapriyan912001"},"content":"        }","lastModifiedDate":"2021-10-17"},{"lineNumber":121,"author":{"gitId":"ramapriyan912001"},"content":"        double marginOfError \u003d 0.01;","lastModifiedDate":"2021-10-20"},{"lineNumber":122,"author":{"gitId":"ramapriyan912001"},"content":"        return Math.abs(total) \u003c marginOfError;","lastModifiedDate":"2021-10-20"},{"lineNumber":123,"author":{"gitId":"ramapriyan912001"},"content":"    }","lastModifiedDate":"2021-10-17"},{"lineNumber":124,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":125,"author":{"gitId":"ramapriyan912001"},"content":"    private static Optional\u003cPair\u003e getSmallerPair(Pair p1, Pair p2) {","lastModifiedDate":"2021-10-18"},{"lineNumber":126,"author":{"gitId":"ramapriyan912001"},"content":"        requireAllNonNull(p1, p2);","lastModifiedDate":"2021-10-18"},{"lineNumber":127,"author":{"gitId":"ramapriyan912001"},"content":"        double p1AbsoluteSurplus \u003d Math.abs(p1.getSurplus());","lastModifiedDate":"2021-10-17"},{"lineNumber":128,"author":{"gitId":"ramapriyan912001"},"content":"        double p2AbsoluteSurplus \u003d Math.abs(p2.getSurplus());","lastModifiedDate":"2021-10-17"},{"lineNumber":129,"author":{"gitId":"ramapriyan912001"},"content":"        double marginOfError \u003d 0.01;","lastModifiedDate":"2021-10-25"},{"lineNumber":130,"author":{"gitId":"ramapriyan912001"},"content":"        double difference \u003d Math.abs(p1AbsoluteSurplus - p2AbsoluteSurplus);","lastModifiedDate":"2021-10-25"},{"lineNumber":131,"author":{"gitId":"ramapriyan912001"},"content":"        if (difference \u003c marginOfError) {","lastModifiedDate":"2021-10-25"},{"lineNumber":132,"author":{"gitId":"ramapriyan912001"},"content":"            return Optional.empty();","lastModifiedDate":"2021-10-25"},{"lineNumber":133,"author":{"gitId":"ramapriyan912001"},"content":"        } else if (p1AbsoluteSurplus \u003c p2AbsoluteSurplus) {","lastModifiedDate":"2021-10-25"},{"lineNumber":134,"author":{"gitId":"ramapriyan912001"},"content":"            return Optional.ofNullable(p1);","lastModifiedDate":"2021-10-18"},{"lineNumber":135,"author":{"gitId":"ramapriyan912001"},"content":"        } else {","lastModifiedDate":"2021-10-17"},{"lineNumber":136,"author":{"gitId":"ramapriyan912001"},"content":"            return Optional.ofNullable(p2);","lastModifiedDate":"2021-10-25"},{"lineNumber":137,"author":{"gitId":"ramapriyan912001"},"content":"        }","lastModifiedDate":"2021-10-17"},{"lineNumber":138,"author":{"gitId":"ramapriyan912001"},"content":"    }","lastModifiedDate":"2021-10-17"},{"lineNumber":139,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":140,"author":{"gitId":"ramapriyan912001"},"content":"    private static List\u003cPair\u003e removeZeroCostElements(List\u003cPair\u003e pairs) {","lastModifiedDate":"2021-10-20"},{"lineNumber":141,"author":{"gitId":"ramapriyan912001"},"content":"        List\u003cPair\u003e newPairs \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-20"},{"lineNumber":142,"author":{"gitId":"ramapriyan912001"},"content":"        for (int i \u003d 0; i \u003c pairs.size(); i++) {","lastModifiedDate":"2021-10-20"},{"lineNumber":143,"author":{"gitId":"ramapriyan912001"},"content":"            Double surplus \u003d pairs.get(i).getSurplus();","lastModifiedDate":"2021-10-20"},{"lineNumber":144,"author":{"gitId":"ramapriyan912001"},"content":"            if (surplus !\u003d 0) {","lastModifiedDate":"2021-10-20"},{"lineNumber":145,"author":{"gitId":"ramapriyan912001"},"content":"                newPairs.add(pairs.get(i));","lastModifiedDate":"2021-10-20"},{"lineNumber":146,"author":{"gitId":"ramapriyan912001"},"content":"            }","lastModifiedDate":"2021-10-20"},{"lineNumber":147,"author":{"gitId":"ramapriyan912001"},"content":"        }","lastModifiedDate":"2021-10-20"},{"lineNumber":148,"author":{"gitId":"ramapriyan912001"},"content":"        return newPairs;","lastModifiedDate":"2021-10-20"},{"lineNumber":149,"author":{"gitId":"ramapriyan912001"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":150,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":151,"author":{"gitId":"ramapriyan912001"},"content":"    /**","lastModifiedDate":"2021-10-17"},{"lineNumber":152,"author":{"gitId":"ramapriyan912001"},"content":"     * Tabulates payments to make between all persons to balance payments and expenses.","lastModifiedDate":"2021-10-17"},{"lineNumber":153,"author":{"gitId":"ramapriyan912001"},"content":"     * @param pairs Name and Surplus/Deficit of Person.","lastModifiedDate":"2021-10-17"},{"lineNumber":154,"author":{"gitId":"ramapriyan912001"},"content":"     * @return List of payments to balance payments and expenses.","lastModifiedDate":"2021-10-17"},{"lineNumber":155,"author":{"gitId":"ramapriyan912001"},"content":"     * @throws CommandException thrown if a discrepancy in payments is observed.","lastModifiedDate":"2021-10-17"},{"lineNumber":156,"author":{"gitId":"ramapriyan912001"},"content":"     */","lastModifiedDate":"2021-10-17"},{"lineNumber":157,"author":{"gitId":"ramapriyan912001"},"content":"    private List\u003cPayment\u003e calculatePayments(List\u003cPair\u003e pairs) throws CommandException {","lastModifiedDate":"2021-10-27"},{"lineNumber":158,"author":{"gitId":"ramapriyan912001"},"content":"        if (!checkSumIsZero(pairs)) {","lastModifiedDate":"2021-10-17"},{"lineNumber":159,"author":{"gitId":"ramapriyan912001"},"content":"            throw new CommandException(MESSAGE_CALCULATEPAYMENTSCOMMAND_PAYMENT_DISCREPANCY);","lastModifiedDate":"2021-10-29"},{"lineNumber":160,"author":{"gitId":"ramapriyan912001"},"content":"        }","lastModifiedDate":"2021-10-17"},{"lineNumber":161,"author":{"gitId":"ramapriyan912001"},"content":"        pairs \u003d removeZeroCostElements(pairs);","lastModifiedDate":"2021-10-20"},{"lineNumber":162,"author":{"gitId":"ramapriyan912001"},"content":"        List\u003cPayment\u003e payments \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-17"},{"lineNumber":163,"author":{"gitId":"ramapriyan912001"},"content":"        while (!pairs.isEmpty()) {","lastModifiedDate":"2021-10-17"},{"lineNumber":164,"author":{"gitId":"ramapriyan912001"},"content":"            pairs \u003d sortPairs(pairs);","lastModifiedDate":"2021-10-21"},{"lineNumber":165,"author":{"gitId":"ramapriyan912001"},"content":"            Pair pairWithLowestSurplus \u003d pairs.get(0);","lastModifiedDate":"2021-10-17"},{"lineNumber":166,"author":{"gitId":"ramapriyan912001"},"content":"            Pair pairWithHighestSurplus \u003d pairs.get(pairs.size() - 1);","lastModifiedDate":"2021-10-17"},{"lineNumber":167,"author":{"gitId":"ramapriyan912001"},"content":"            Payment paymentToAdd \u003d calculatePayment(pairWithLowestSurplus, pairWithHighestSurplus);","lastModifiedDate":"2021-10-17"},{"lineNumber":168,"author":{"gitId":"ramapriyan912001"},"content":"            payments.add(paymentToAdd);","lastModifiedDate":"2021-10-17"},{"lineNumber":169,"author":{"gitId":"ramapriyan912001"},"content":"            Optional\u003cPair\u003e smallerPair \u003d getSmallerPair(pairWithLowestSurplus, pairWithHighestSurplus);","lastModifiedDate":"2021-10-18"},{"lineNumber":170,"author":{"gitId":"ramapriyan912001"},"content":"            if (smallerPair.isEmpty()) {","lastModifiedDate":"2021-10-18"},{"lineNumber":171,"author":{"gitId":"ramapriyan912001"},"content":"                pairs.remove(0);","lastModifiedDate":"2021-10-17"},{"lineNumber":172,"author":{"gitId":"ramapriyan912001"},"content":"                pairs.remove(pairs.size() - 1);","lastModifiedDate":"2021-10-17"},{"lineNumber":173,"author":{"gitId":"ramapriyan912001"},"content":"            } else if (smallerPair.get().equals(pairWithHighestSurplus)) {","lastModifiedDate":"2021-10-18"},{"lineNumber":174,"author":{"gitId":"ramapriyan912001"},"content":"                pairs.remove(pairs.size() - 1);","lastModifiedDate":"2021-10-18"},{"lineNumber":175,"author":{"gitId":"ramapriyan912001"},"content":"                double newSurplus \u003d pairWithLowestSurplus.getSurplus() + pairWithHighestSurplus.getSurplus();","lastModifiedDate":"2021-10-25"},{"lineNumber":176,"author":{"gitId":"ramapriyan912001"},"content":"                Pair newPairWithLowestSurplus \u003d new Pair(newSurplus, pairWithLowestSurplus.getPerson());","lastModifiedDate":"2021-10-21"},{"lineNumber":177,"author":{"gitId":"ramapriyan912001"},"content":"                pairs.remove(0);","lastModifiedDate":"2021-10-21"},{"lineNumber":178,"author":{"gitId":"ramapriyan912001"},"content":"                pairs.add(0, newPairWithLowestSurplus);","lastModifiedDate":"2021-10-21"},{"lineNumber":179,"author":{"gitId":"ramapriyan912001"},"content":"            } else if (smallerPair.get().equals(pairWithLowestSurplus)) {","lastModifiedDate":"2021-10-18"},{"lineNumber":180,"author":{"gitId":"ramapriyan912001"},"content":"                pairs.remove(0);","lastModifiedDate":"2021-10-18"},{"lineNumber":181,"author":{"gitId":"ramapriyan912001"},"content":"                double newSurplus \u003d pairWithHighestSurplus.getSurplus() + pairWithLowestSurplus.getSurplus();","lastModifiedDate":"2021-10-25"},{"lineNumber":182,"author":{"gitId":"ramapriyan912001"},"content":"                Pair newPairWithHighestSurplus \u003d new Pair(newSurplus, pairWithHighestSurplus.getPerson());","lastModifiedDate":"2021-10-21"},{"lineNumber":183,"author":{"gitId":"ramapriyan912001"},"content":"                pairs.remove(pairs.size() - 1);","lastModifiedDate":"2021-10-21"},{"lineNumber":184,"author":{"gitId":"ramapriyan912001"},"content":"                pairs.add(newPairWithHighestSurplus);","lastModifiedDate":"2021-10-21"},{"lineNumber":185,"author":{"gitId":"ramapriyan912001"},"content":"            }","lastModifiedDate":"2021-10-17"},{"lineNumber":186,"author":{"gitId":"ramapriyan912001"},"content":"        }","lastModifiedDate":"2021-10-17"},{"lineNumber":187,"author":{"gitId":"ramapriyan912001"},"content":"        return payments;","lastModifiedDate":"2021-10-17"},{"lineNumber":188,"author":{"gitId":"ramapriyan912001"},"content":"    }","lastModifiedDate":"2021-10-17"},{"lineNumber":189,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":190,"author":{"gitId":"ramapriyan912001"},"content":"    /**","lastModifiedDate":"2021-10-17"},{"lineNumber":191,"author":{"gitId":"ramapriyan912001"},"content":"     * Calculates individual Payments to make between persons to balance payments and expenditures.","lastModifiedDate":"2021-10-17"},{"lineNumber":192,"author":{"gitId":"ramapriyan912001"},"content":"     * @param deficitPair Name and Amount pair for person paying amount.","lastModifiedDate":"2021-10-17"},{"lineNumber":193,"author":{"gitId":"ramapriyan912001"},"content":"     * @param surplusPair Name and Amount pair for person receiving amount.","lastModifiedDate":"2021-10-17"},{"lineNumber":194,"author":{"gitId":"ramapriyan912001"},"content":"     * @return Payment to make.","lastModifiedDate":"2021-10-17"},{"lineNumber":195,"author":{"gitId":"ramapriyan912001"},"content":"     */","lastModifiedDate":"2021-10-17"},{"lineNumber":196,"author":{"gitId":"ramapriyan912001"},"content":"    private Payment calculatePayment(Pair deficitPair, Pair surplusPair) {","lastModifiedDate":"2021-10-27"},{"lineNumber":197,"author":{"gitId":"ramapriyan912001"},"content":"        Person payee \u003d deficitPair.getPerson();","lastModifiedDate":"2021-10-21"},{"lineNumber":198,"author":{"gitId":"ramapriyan912001"},"content":"        double absoluteDeficit \u003d Math.abs(deficitPair.getSurplus());","lastModifiedDate":"2021-10-17"},{"lineNumber":199,"author":{"gitId":"ramapriyan912001"},"content":"        Person payer \u003d surplusPair.getPerson();","lastModifiedDate":"2021-10-21"},{"lineNumber":200,"author":{"gitId":"ramapriyan912001"},"content":"        double absoluteSurplus \u003d Math.abs(surplusPair.getSurplus());","lastModifiedDate":"2021-10-17"},{"lineNumber":201,"author":{"gitId":"ramapriyan912001"},"content":"        Cost minimumAmount \u003d new Cost(Math.min(absoluteDeficit, absoluteSurplus));","lastModifiedDate":"2021-10-17"},{"lineNumber":202,"author":{"gitId":"ramapriyan912001"},"content":"        return new Payment(payer, payee, minimumAmount);","lastModifiedDate":"2021-10-17"},{"lineNumber":203,"author":{"gitId":"ramapriyan912001"},"content":"    }","lastModifiedDate":"2021-10-17"},{"lineNumber":204,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":205,"author":{"gitId":"ramapriyan912001"},"content":"    @Override","lastModifiedDate":"2021-10-27"},{"lineNumber":206,"author":{"gitId":"ramapriyan912001"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-27"},{"lineNumber":207,"author":{"gitId":"ramapriyan912001"},"content":"        if (this \u003d\u003d other) {","lastModifiedDate":"2021-10-27"},{"lineNumber":208,"author":{"gitId":"ramapriyan912001"},"content":"            return true;","lastModifiedDate":"2021-10-27"},{"lineNumber":209,"author":{"gitId":"ramapriyan912001"},"content":"        } else if (!(other instanceof CalculatePaymentsCommand)) {","lastModifiedDate":"2021-10-27"},{"lineNumber":210,"author":{"gitId":"ramapriyan912001"},"content":"            return false;","lastModifiedDate":"2021-10-27"},{"lineNumber":211,"author":{"gitId":"ramapriyan912001"},"content":"        }","lastModifiedDate":"2021-10-27"},{"lineNumber":212,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":213,"author":{"gitId":"ramapriyan912001"},"content":"        CalculatePaymentsCommand calculatePaymentsCommand \u003d (CalculatePaymentsCommand) other;","lastModifiedDate":"2021-10-27"},{"lineNumber":214,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":215,"author":{"gitId":"ramapriyan912001"},"content":"        return this.group.equals(calculatePaymentsCommand.group);","lastModifiedDate":"2021-10-27"},{"lineNumber":216,"author":{"gitId":"ramapriyan912001"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":217,"author":{"gitId":"ramapriyan912001"},"content":"}","lastModifiedDate":"2021-10-17"}],"authorContributionMap":{"marcuspeh":2,"chrus-chong":6,"ramapriyan912001":209}},{"path":"src/main/java/seedu/awe/logic/commands/ClearAllDataCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ramapriyan912001"},"content":"package seedu.awe.logic.commands;","lastModifiedDate":"2021-10-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"ramapriyan912001"},"content":"import static seedu.awe.commons.core.Messages.MESSAGE_CLEARALLDATACOMMAND_SUCCESS;","lastModifiedDate":"2021-10-30"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":6,"author":{"gitId":"ramapriyan912001"},"content":"import seedu.awe.model.AddressBook;","lastModifiedDate":"2021-10-05"},{"lineNumber":7,"author":{"gitId":"ramapriyan912001"},"content":"import seedu.awe.model.Model;","lastModifiedDate":"2021-10-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"ramapriyan912001"},"content":" * Clears the awe book.","lastModifiedDate":"2021-10-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"ramapriyan912001"},"content":"public class ClearAllDataCommand extends Command {","lastModifiedDate":"2021-10-30"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"ramapriyan912001"},"content":"    public static final String COMMAND_WORD \u003d \"clearalldata\";","lastModifiedDate":"2021-10-30"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2017-05-15"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        model.setAddressBook(new AddressBook());","lastModifiedDate":"2018-11-27"},{"lineNumber":20,"author":{"gitId":"marcuspeh"},"content":"        return new CommandResult(MESSAGE_CLEARALLDATACOMMAND_SUCCESS,","lastModifiedDate":"2021-11-01"},{"lineNumber":21,"author":{"gitId":"marcuspeh"},"content":"                false, false, false, true, false, false, false);","lastModifiedDate":"2021-11-01"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"marcuspeh":2,"ramapriyan912001":7,"-":14}},{"path":"src/main/java/seedu/awe/logic/commands/Command.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ramapriyan912001"},"content":"package seedu.awe.logic.commands;","lastModifiedDate":"2021-10-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"ramapriyan912001"},"content":"import seedu.awe.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-10-05"},{"lineNumber":4,"author":{"gitId":"ramapriyan912001"},"content":"import seedu.awe.model.Model;","lastModifiedDate":"2021-10-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Represents a command with hidden internal logic and the ability to be executed.","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public abstract class Command {","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result message.","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     * @param model {@code Model} which the command should operate on.","lastModifiedDate":"2018-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * @return feedback message of the operation result for display","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * @throws CommandException If an error occurs during command execution.","lastModifiedDate":"2017-02-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public abstract CommandResult execute(Model model) throws CommandException;","lastModifiedDate":"2021-10-07"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"ramapriyan912001":3,"-":17}},{"path":"src/main/java/seedu/awe/logic/commands/CommandResult.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ramapriyan912001"},"content":"package seedu.awe.logic.commands;","lastModifiedDate":"2021-10-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2018-12-09"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Represents the result of a command execution.","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class CommandResult {","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private final String feedbackToUser;","lastModifiedDate":"2018-12-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    /** Help information should be shown to the user. */","lastModifiedDate":"2018-12-09"},{"lineNumber":15,"author":{"gitId":"marcuspeh"},"content":"    private final boolean isHelpCommand;","lastModifiedDate":"2021-10-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    /** The application should exit. */","lastModifiedDate":"2018-12-09"},{"lineNumber":18,"author":{"gitId":"marcuspeh"},"content":"    private final boolean isExitCommand;","lastModifiedDate":"2021-10-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":20,"author":{"gitId":"marcuspeh"},"content":"    /** The application should show groups */","lastModifiedDate":"2021-09-30"},{"lineNumber":21,"author":{"gitId":"marcuspeh"},"content":"    private final boolean isShowGroupsCommand;","lastModifiedDate":"2021-10-05"},{"lineNumber":22,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":23,"author":{"gitId":"marcuspeh"},"content":"    /** The application should show contacts */","lastModifiedDate":"2021-09-30"},{"lineNumber":24,"author":{"gitId":"marcuspeh"},"content":"    private final boolean isShowContactsCommand;","lastModifiedDate":"2021-10-05"},{"lineNumber":25,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":26,"author":{"gitId":"Jingwencloud"},"content":"    /** The application should show expenses */","lastModifiedDate":"2021-10-05"},{"lineNumber":27,"author":{"gitId":"Jingwencloud"},"content":"    private final boolean isShowExpensesCommand;","lastModifiedDate":"2021-10-05"},{"lineNumber":28,"author":{"gitId":"Jingwencloud"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":29,"author":{"gitId":"Jingwencloud"},"content":"    /** The application should show transaction summary */","lastModifiedDate":"2021-10-21"},{"lineNumber":30,"author":{"gitId":"Jingwencloud"},"content":"    private final boolean isShowTransactionSummaryCommand;","lastModifiedDate":"2021-10-21"},{"lineNumber":31,"author":{"gitId":"Jingwencloud"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":32,"author":{"gitId":"ramapriyan912001"},"content":"    /** The application should show payments to make */","lastModifiedDate":"2021-10-21"},{"lineNumber":33,"author":{"gitId":"ramapriyan912001"},"content":"    private final boolean isShowPaymentsCommand;","lastModifiedDate":"2021-10-21"},{"lineNumber":34,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * Constructs a {@code CommandResult} with the specified fields.","lastModifiedDate":"2018-12-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":38,"author":{"gitId":"marcuspeh"},"content":"    public CommandResult(String feedbackToUser, boolean isHelpCommand, boolean isExitCommand,","lastModifiedDate":"2021-10-05"},{"lineNumber":39,"author":{"gitId":"Jingwencloud"},"content":"                         boolean isShowGroupsCommand, boolean isShowContactsCommand,","lastModifiedDate":"2021-10-05"},{"lineNumber":40,"author":{"gitId":"ramapriyan912001"},"content":"                                boolean isShowExpensesCommand, boolean isShowTransactionSummaryCommand,","lastModifiedDate":"2021-10-21"},{"lineNumber":41,"author":{"gitId":"ramapriyan912001"},"content":"                         boolean isShowPaymentsCommand) {","lastModifiedDate":"2021-10-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        this.feedbackToUser \u003d requireNonNull(feedbackToUser);","lastModifiedDate":"2017-05-15"},{"lineNumber":43,"author":{"gitId":"marcuspeh"},"content":"        this.isHelpCommand \u003d isHelpCommand;","lastModifiedDate":"2021-10-05"},{"lineNumber":44,"author":{"gitId":"marcuspeh"},"content":"        this.isExitCommand \u003d isExitCommand;","lastModifiedDate":"2021-10-05"},{"lineNumber":45,"author":{"gitId":"marcuspeh"},"content":"        this.isShowGroupsCommand \u003d isShowGroupsCommand;","lastModifiedDate":"2021-10-05"},{"lineNumber":46,"author":{"gitId":"marcuspeh"},"content":"        this.isShowContactsCommand \u003d isShowContactsCommand;","lastModifiedDate":"2021-10-05"},{"lineNumber":47,"author":{"gitId":"Jingwencloud"},"content":"        this.isShowExpensesCommand \u003d isShowExpensesCommand;","lastModifiedDate":"2021-10-05"},{"lineNumber":48,"author":{"gitId":"Jingwencloud"},"content":"        this.isShowTransactionSummaryCommand \u003d isShowTransactionSummaryCommand;","lastModifiedDate":"2021-10-21"},{"lineNumber":49,"author":{"gitId":"ramapriyan912001"},"content":"        this.isShowPaymentsCommand \u003d isShowPaymentsCommand;","lastModifiedDate":"2021-10-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * Constructs a {@code CommandResult} with the specified {@code feedbackToUser},","lastModifiedDate":"2018-12-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * and other fields set to their default value.","lastModifiedDate":"2018-12-09"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public CommandResult(String feedbackToUser) {","lastModifiedDate":"2018-12-09"},{"lineNumber":57,"author":{"gitId":"ramapriyan912001"},"content":"        this(feedbackToUser, false, false, false, false, false, false, false);","lastModifiedDate":"2021-10-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public String getFeedbackToUser() {","lastModifiedDate":"2018-12-09"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        return feedbackToUser;","lastModifiedDate":"2018-12-09"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public boolean isShowHelp() {","lastModifiedDate":"2018-12-09"},{"lineNumber":65,"author":{"gitId":"marcuspeh"},"content":"        return isHelpCommand;","lastModifiedDate":"2021-10-05"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public boolean isExit() {","lastModifiedDate":"2018-12-09"},{"lineNumber":69,"author":{"gitId":"marcuspeh"},"content":"        return isExitCommand;","lastModifiedDate":"2021-10-05"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":72,"author":{"gitId":"marcuspeh"},"content":"    public boolean isShowGroups() {","lastModifiedDate":"2021-09-30"},{"lineNumber":73,"author":{"gitId":"marcuspeh"},"content":"        return isShowGroupsCommand;","lastModifiedDate":"2021-10-05"},{"lineNumber":74,"author":{"gitId":"marcuspeh"},"content":"    }","lastModifiedDate":"2021-09-30"},{"lineNumber":75,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":76,"author":{"gitId":"marcuspeh"},"content":"    public boolean isShowContacts() {","lastModifiedDate":"2021-09-30"},{"lineNumber":77,"author":{"gitId":"marcuspeh"},"content":"        return isShowContactsCommand;","lastModifiedDate":"2021-10-05"},{"lineNumber":78,"author":{"gitId":"marcuspeh"},"content":"    }","lastModifiedDate":"2021-09-30"},{"lineNumber":79,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":80,"author":{"gitId":"Jingwencloud"},"content":"    public boolean isShowExpenses() {","lastModifiedDate":"2021-10-05"},{"lineNumber":81,"author":{"gitId":"Jingwencloud"},"content":"        return isShowExpensesCommand;","lastModifiedDate":"2021-10-05"},{"lineNumber":82,"author":{"gitId":"Jingwencloud"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":83,"author":{"gitId":"Jingwencloud"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":84,"author":{"gitId":"Jingwencloud"},"content":"    public boolean isShowTransactionSummary() {","lastModifiedDate":"2021-10-21"},{"lineNumber":85,"author":{"gitId":"Jingwencloud"},"content":"        return isShowTransactionSummaryCommand;","lastModifiedDate":"2021-10-21"},{"lineNumber":86,"author":{"gitId":"Jingwencloud"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":87,"author":{"gitId":"Jingwencloud"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":88,"author":{"gitId":"ramapriyan912001"},"content":"    public boolean isShowPaymentsCommand() {","lastModifiedDate":"2021-10-21"},{"lineNumber":89,"author":{"gitId":"ramapriyan912001"},"content":"        return isShowPaymentsCommand;","lastModifiedDate":"2021-10-21"},{"lineNumber":90,"author":{"gitId":"ramapriyan912001"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":91,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-12-09"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2018-12-09"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2018-12-09"},{"lineNumber":95,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-12-09"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2018-12-09"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        if (!(other instanceof CommandResult)) {","lastModifiedDate":"2018-12-09"},{"lineNumber":100,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-12-09"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        CommandResult otherCommandResult \u003d (CommandResult) other;","lastModifiedDate":"2018-12-09"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        return feedbackToUser.equals(otherCommandResult.feedbackToUser)","lastModifiedDate":"2018-12-09"},{"lineNumber":105,"author":{"gitId":"marcuspeh"},"content":"                \u0026\u0026 isHelpCommand \u003d\u003d otherCommandResult.isHelpCommand","lastModifiedDate":"2021-10-05"},{"lineNumber":106,"author":{"gitId":"marcuspeh"},"content":"                \u0026\u0026 isExitCommand \u003d\u003d otherCommandResult.isExitCommand","lastModifiedDate":"2021-10-05"},{"lineNumber":107,"author":{"gitId":"marcuspeh"},"content":"                \u0026\u0026 isShowGroupsCommand \u003d\u003d otherCommandResult.isShowGroupsCommand","lastModifiedDate":"2021-10-05"},{"lineNumber":108,"author":{"gitId":"Jingwencloud"},"content":"                \u0026\u0026 isShowContactsCommand \u003d\u003d otherCommandResult.isShowContactsCommand","lastModifiedDate":"2021-10-05"},{"lineNumber":109,"author":{"gitId":"Jingwencloud"},"content":"                \u0026\u0026 isShowExpensesCommand \u003d\u003d otherCommandResult.isShowExpensesCommand","lastModifiedDate":"2021-10-21"},{"lineNumber":110,"author":{"gitId":"ramapriyan912001"},"content":"                \u0026\u0026 isShowTransactionSummaryCommand \u003d\u003d otherCommandResult.isShowTransactionSummaryCommand","lastModifiedDate":"2021-10-21"},{"lineNumber":111,"author":{"gitId":"ramapriyan912001"},"content":"                \u0026\u0026 isShowPaymentsCommand \u003d\u003d otherCommandResult.isShowPaymentsCommand;","lastModifiedDate":"2021-10-21"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-12-09"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2018-12-09"},{"lineNumber":116,"author":{"gitId":"Jingwencloud"},"content":"        return Objects.hash(feedbackToUser, isHelpCommand, isExitCommand,","lastModifiedDate":"2021-10-06"},{"lineNumber":117,"author":{"gitId":"ramapriyan912001"},"content":"                isShowGroupsCommand, isShowContactsCommand, isShowExpensesCommand, isShowTransactionSummaryCommand,","lastModifiedDate":"2021-10-21"},{"lineNumber":118,"author":{"gitId":"ramapriyan912001"},"content":"                isShowPaymentsCommand);","lastModifiedDate":"2021-10-21"},{"lineNumber":119,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":122,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"marcuspeh":27,"Jingwencloud":20,"ramapriyan912001":16,"-":59}},{"path":"src/main/java/seedu/awe/logic/commands/CreateGroupCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ramapriyan912001"},"content":"package seedu.awe.logic.commands;","lastModifiedDate":"2021-10-05"},{"lineNumber":2,"author":{"gitId":"chrus-chong"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-09-18"},{"lineNumber":3,"author":{"gitId":"chrus-chong"},"content":"import static seedu.awe.commons.core.Messages.MESSAGE_CREATEGROUPCOMMAND_DUPLICATE_GROUP;","lastModifiedDate":"2021-10-25"},{"lineNumber":4,"author":{"gitId":"chrus-chong"},"content":"import static seedu.awe.commons.core.Messages.MESSAGE_CREATEGROUPCOMMAND_ERROR;","lastModifiedDate":"2021-10-25"},{"lineNumber":5,"author":{"gitId":"chrus-chong"},"content":"import static seedu.awe.commons.core.Messages.MESSAGE_CREATEGROUPCOMMAND_SUCCESS;","lastModifiedDate":"2021-10-25"},{"lineNumber":6,"author":{"gitId":"ramapriyan912001"},"content":"import static seedu.awe.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2021-10-09"},{"lineNumber":7,"author":{"gitId":"ramapriyan912001"},"content":"import static seedu.awe.model.Model.PREDICATE_SHOW_ALL_GROUPS;","lastModifiedDate":"2021-10-26"},{"lineNumber":8,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":9,"author":{"gitId":"chrus-chong"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-09-18"},{"lineNumber":10,"author":{"gitId":"ramapriyan912001"},"content":"import java.util.Set;","lastModifiedDate":"2021-10-09"},{"lineNumber":11,"author":{"gitId":"chrus-chong"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2021-10-21"},{"lineNumber":12,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":13,"author":{"gitId":"chrus-chong"},"content":"import seedu.awe.commons.core.LogsCenter;","lastModifiedDate":"2021-10-21"},{"lineNumber":14,"author":{"gitId":"ramapriyan912001"},"content":"import seedu.awe.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-10-05"},{"lineNumber":15,"author":{"gitId":"ramapriyan912001"},"content":"import seedu.awe.model.Model;","lastModifiedDate":"2021-10-05"},{"lineNumber":16,"author":{"gitId":"chrus-chong"},"content":"import seedu.awe.model.ModelManager;","lastModifiedDate":"2021-10-21"},{"lineNumber":17,"author":{"gitId":"ramapriyan912001"},"content":"import seedu.awe.model.group.Group;","lastModifiedDate":"2021-10-05"},{"lineNumber":18,"author":{"gitId":"ramapriyan912001"},"content":"import seedu.awe.model.group.GroupName;","lastModifiedDate":"2021-10-05"},{"lineNumber":19,"author":{"gitId":"ramapriyan912001"},"content":"import seedu.awe.model.person.Person;","lastModifiedDate":"2021-10-05"},{"lineNumber":20,"author":{"gitId":"ramapriyan912001"},"content":"import seedu.awe.model.tag.Tag;","lastModifiedDate":"2021-10-09"},{"lineNumber":21,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":22,"author":{"gitId":"chrus-chong"},"content":"public class CreateGroupCommand extends Command {","lastModifiedDate":"2021-09-18"},{"lineNumber":23,"author":{"gitId":"chrus-chong"},"content":"    public static final String COMMAND_WORD \u003d \"creategroup\";","lastModifiedDate":"2021-09-18"},{"lineNumber":24,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":25,"author":{"gitId":"chrus-chong"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(ModelManager.class);","lastModifiedDate":"2021-10-21"},{"lineNumber":26,"author":{"gitId":"chrus-chong"},"content":"    private final ArrayList\u003cPerson\u003e members;","lastModifiedDate":"2021-09-18"},{"lineNumber":27,"author":{"gitId":"ramapriyan912001"},"content":"    private final GroupName groupName;","lastModifiedDate":"2021-10-09"},{"lineNumber":28,"author":{"gitId":"marcuspeh"},"content":"    private final boolean isValidCommand;","lastModifiedDate":"2021-10-05"},{"lineNumber":29,"author":{"gitId":"ramapriyan912001"},"content":"    private final Set\u003cTag\u003e tags;","lastModifiedDate":"2021-10-09"},{"lineNumber":30,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":31,"author":{"gitId":"chrus-chong"},"content":"    /**","lastModifiedDate":"2021-09-18"},{"lineNumber":32,"author":{"gitId":"chrus-chong"},"content":"     * Creates a CreateGroupCommand to create the specified {@code Group}","lastModifiedDate":"2021-09-18"},{"lineNumber":33,"author":{"gitId":"chrus-chong"},"content":"     */","lastModifiedDate":"2021-09-18"},{"lineNumber":34,"author":{"gitId":"ramapriyan912001"},"content":"    public CreateGroupCommand(GroupName groupName, ArrayList\u003cPerson\u003e members, boolean isValidCommand, Set\u003cTag\u003e tags) {","lastModifiedDate":"2021-10-09"},{"lineNumber":35,"author":{"gitId":"ramapriyan912001"},"content":"        requireAllNonNull(groupName, members, isValidCommand, tags);","lastModifiedDate":"2021-10-09"},{"lineNumber":36,"author":{"gitId":"ramapriyan912001"},"content":"        this.groupName \u003d groupName;","lastModifiedDate":"2021-09-26"},{"lineNumber":37,"author":{"gitId":"chrus-chong"},"content":"        this.members \u003d members;","lastModifiedDate":"2021-09-18"},{"lineNumber":38,"author":{"gitId":"marcuspeh"},"content":"        this.isValidCommand \u003d isValidCommand;","lastModifiedDate":"2021-10-05"},{"lineNumber":39,"author":{"gitId":"ramapriyan912001"},"content":"        this.tags \u003d tags;","lastModifiedDate":"2021-10-09"},{"lineNumber":40,"author":{"gitId":"chrus-chong"},"content":"    }","lastModifiedDate":"2021-09-18"},{"lineNumber":41,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":42,"author":{"gitId":"chrus-chong"},"content":"    public ArrayList\u003cPerson\u003e getMembers() {","lastModifiedDate":"2021-10-06"},{"lineNumber":43,"author":{"gitId":"chrus-chong"},"content":"        return members;","lastModifiedDate":"2021-10-06"},{"lineNumber":44,"author":{"gitId":"chrus-chong"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":45,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":46,"author":{"gitId":"chrus-chong"},"content":"    public GroupName getGroupName() {","lastModifiedDate":"2021-10-06"},{"lineNumber":47,"author":{"gitId":"chrus-chong"},"content":"        return groupName;","lastModifiedDate":"2021-10-06"},{"lineNumber":48,"author":{"gitId":"chrus-chong"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":49,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":50,"author":{"gitId":"chrus-chong"},"content":"    public boolean getValidCommand() {","lastModifiedDate":"2021-10-06"},{"lineNumber":51,"author":{"gitId":"chrus-chong"},"content":"        return isValidCommand;","lastModifiedDate":"2021-10-06"},{"lineNumber":52,"author":{"gitId":"chrus-chong"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":53,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":54,"author":{"gitId":"chrus-chong"},"content":"    /**","lastModifiedDate":"2021-10-06"},{"lineNumber":55,"author":{"gitId":"chrus-chong"},"content":"     * Returns int object tracking the number of non matching members between this.members and otherMembers.","lastModifiedDate":"2021-10-06"},{"lineNumber":56,"author":{"gitId":"chrus-chong"},"content":"     *","lastModifiedDate":"2021-10-06"},{"lineNumber":57,"author":{"gitId":"chrus-chong"},"content":"     * @param numberOfNonMatchingMembers int value to track the number of members in otherMembers","lastModifiedDate":"2021-10-06"},{"lineNumber":58,"author":{"gitId":"chrus-chong"},"content":"     *                                   that are not present in this.members.","lastModifiedDate":"2021-10-06"},{"lineNumber":59,"author":{"gitId":"chrus-chong"},"content":"     * @param member Person object that is being searched for in otherMembers.","lastModifiedDate":"2021-10-06"},{"lineNumber":60,"author":{"gitId":"chrus-chong"},"content":"     * @param otherMembers List of Person objects from another instance of CreateGroupCommand.","lastModifiedDate":"2021-10-06"},{"lineNumber":61,"author":{"gitId":"chrus-chong"},"content":"     * @return int object to track the number of members in otherMembers that are not present in this.members.","lastModifiedDate":"2021-10-06"},{"lineNumber":62,"author":{"gitId":"chrus-chong"},"content":"     */","lastModifiedDate":"2021-10-06"},{"lineNumber":63,"author":{"gitId":"chrus-chong"},"content":"    public int checkForMember(int numberOfNonMatchingMembers, Person member, ArrayList\u003cPerson\u003e otherMembers) {","lastModifiedDate":"2021-10-06"},{"lineNumber":64,"author":{"gitId":"chrus-chong"},"content":"        for (Person otherMember : otherMembers) {","lastModifiedDate":"2021-10-06"},{"lineNumber":65,"author":{"gitId":"chrus-chong"},"content":"            if (member.equals(otherMember)) {","lastModifiedDate":"2021-10-06"},{"lineNumber":66,"author":{"gitId":"chrus-chong"},"content":"                numberOfNonMatchingMembers--;","lastModifiedDate":"2021-10-06"},{"lineNumber":67,"author":{"gitId":"chrus-chong"},"content":"                break;","lastModifiedDate":"2021-10-06"},{"lineNumber":68,"author":{"gitId":"chrus-chong"},"content":"            }","lastModifiedDate":"2021-10-06"},{"lineNumber":69,"author":{"gitId":"chrus-chong"},"content":"        }","lastModifiedDate":"2021-10-06"},{"lineNumber":70,"author":{"gitId":"chrus-chong"},"content":"        return numberOfNonMatchingMembers;","lastModifiedDate":"2021-10-06"},{"lineNumber":71,"author":{"gitId":"chrus-chong"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":72,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":73,"author":{"gitId":"chrus-chong"},"content":"    /**","lastModifiedDate":"2021-10-06"},{"lineNumber":74,"author":{"gitId":"chrus-chong"},"content":"     * Returns a boolean object representing if this.members contains the same Person objects as otherMembers.","lastModifiedDate":"2021-10-06"},{"lineNumber":75,"author":{"gitId":"chrus-chong"},"content":"     *","lastModifiedDate":"2021-10-06"},{"lineNumber":76,"author":{"gitId":"chrus-chong"},"content":"     * @param otherMembers List of Person objects from another instance of CreateGroupCommand.","lastModifiedDate":"2021-10-06"},{"lineNumber":77,"author":{"gitId":"chrus-chong"},"content":"     * @return boolean object representing if this.members contains the same Person objects as otherMembers.","lastModifiedDate":"2021-10-06"},{"lineNumber":78,"author":{"gitId":"chrus-chong"},"content":"     */","lastModifiedDate":"2021-10-06"},{"lineNumber":79,"author":{"gitId":"chrus-chong"},"content":"    public boolean checkSameMembers(ArrayList\u003cPerson\u003e otherMembers) {","lastModifiedDate":"2021-10-06"},{"lineNumber":80,"author":{"gitId":"chrus-chong"},"content":"        int numberOfNonMatchingMembers \u003d otherMembers.size();","lastModifiedDate":"2021-10-06"},{"lineNumber":81,"author":{"gitId":"chrus-chong"},"content":"        for (Person member : this.members) {","lastModifiedDate":"2021-10-06"},{"lineNumber":82,"author":{"gitId":"chrus-chong"},"content":"            numberOfNonMatchingMembers \u003d checkForMember(numberOfNonMatchingMembers, member, otherMembers);","lastModifiedDate":"2021-10-06"},{"lineNumber":83,"author":{"gitId":"chrus-chong"},"content":"        }","lastModifiedDate":"2021-10-06"},{"lineNumber":84,"author":{"gitId":"chrus-chong"},"content":"        return numberOfNonMatchingMembers \u003d\u003d 0;","lastModifiedDate":"2021-10-06"},{"lineNumber":85,"author":{"gitId":"chrus-chong"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":86,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":87,"author":{"gitId":"chrus-chong"},"content":"    @Override","lastModifiedDate":"2021-09-18"},{"lineNumber":88,"author":{"gitId":"ramapriyan912001"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2021-10-07"},{"lineNumber":89,"author":{"gitId":"chrus-chong"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-09-18"},{"lineNumber":90,"author":{"gitId":"marcuspeh"},"content":"        if (!isValidCommand) {","lastModifiedDate":"2021-10-05"},{"lineNumber":91,"author":{"gitId":"chrus-chong"},"content":"            return new CommandResult(MESSAGE_CREATEGROUPCOMMAND_ERROR);","lastModifiedDate":"2021-10-25"},{"lineNumber":92,"author":{"gitId":"chrus-chong"},"content":"        }","lastModifiedDate":"2021-09-18"},{"lineNumber":93,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":94,"author":{"gitId":"ramapriyan912001"},"content":"        Group group \u003d new Group(groupName, members, tags);","lastModifiedDate":"2021-10-09"},{"lineNumber":95,"author":{"gitId":"chrus-chong"},"content":"        if (model.hasGroup(group)) {","lastModifiedDate":"2021-10-05"},{"lineNumber":96,"author":{"gitId":"chrus-chong"},"content":"            throw new CommandException(MESSAGE_CREATEGROUPCOMMAND_DUPLICATE_GROUP);","lastModifiedDate":"2021-10-25"},{"lineNumber":97,"author":{"gitId":"chrus-chong"},"content":"        }","lastModifiedDate":"2021-10-05"},{"lineNumber":98,"author":{"gitId":"chrus-chong"},"content":"        model.addGroup(group);","lastModifiedDate":"2021-10-02"},{"lineNumber":99,"author":{"gitId":"chrus-chong"},"content":"        model.setAllMembersOfGroup(group);","lastModifiedDate":"2021-10-19"},{"lineNumber":100,"author":{"gitId":"chrus-chong"},"content":"        logger.fine(\"Created group \\\"\" + group.getGroupName() + \"\\\"\");","lastModifiedDate":"2021-10-21"},{"lineNumber":101,"author":{"gitId":"ramapriyan912001"},"content":"        model.updateFilteredGroupList(PREDICATE_SHOW_ALL_GROUPS);","lastModifiedDate":"2021-10-26"},{"lineNumber":102,"author":{"gitId":"marcuspeh"},"content":"        return new CommandResult(MESSAGE_CREATEGROUPCOMMAND_SUCCESS,","lastModifiedDate":"2021-11-01"},{"lineNumber":103,"author":{"gitId":"marcuspeh"},"content":"                false, false, true, false, false, false, false);","lastModifiedDate":"2021-11-01"},{"lineNumber":104,"author":{"gitId":"chrus-chong"},"content":"    }","lastModifiedDate":"2021-09-18"},{"lineNumber":105,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":106,"author":{"gitId":"chrus-chong"},"content":"    @Override","lastModifiedDate":"2021-10-06"},{"lineNumber":107,"author":{"gitId":"chrus-chong"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-06"},{"lineNumber":108,"author":{"gitId":"chrus-chong"},"content":"        if (!(other instanceof CreateGroupCommand)) {","lastModifiedDate":"2021-10-06"},{"lineNumber":109,"author":{"gitId":"chrus-chong"},"content":"            return false;","lastModifiedDate":"2021-10-06"},{"lineNumber":110,"author":{"gitId":"chrus-chong"},"content":"        }","lastModifiedDate":"2021-10-06"},{"lineNumber":111,"author":{"gitId":"chrus-chong"},"content":"        CreateGroupCommand otherCommand \u003d (CreateGroupCommand) other;","lastModifiedDate":"2021-10-06"},{"lineNumber":112,"author":{"gitId":"chrus-chong"},"content":"        if (this.isValidCommand \u003d\u003d (otherCommand.getValidCommand())","lastModifiedDate":"2021-10-06"},{"lineNumber":113,"author":{"gitId":"chrus-chong"},"content":"                \u0026\u0026 checkSameMembers(otherCommand.getMembers())","lastModifiedDate":"2021-10-06"},{"lineNumber":114,"author":{"gitId":"chrus-chong"},"content":"                \u0026\u0026 this.groupName.equals(otherCommand.getGroupName())) {","lastModifiedDate":"2021-10-06"},{"lineNumber":115,"author":{"gitId":"chrus-chong"},"content":"            return true;","lastModifiedDate":"2021-10-06"},{"lineNumber":116,"author":{"gitId":"chrus-chong"},"content":"        }","lastModifiedDate":"2021-10-06"},{"lineNumber":117,"author":{"gitId":"chrus-chong"},"content":"        return false;","lastModifiedDate":"2021-10-06"},{"lineNumber":118,"author":{"gitId":"chrus-chong"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":119,"author":{"gitId":"chrus-chong"},"content":"}","lastModifiedDate":"2021-09-18"}],"authorContributionMap":{"marcuspeh":6,"chrus-chong":94,"ramapriyan912001":19}},{"path":"src/main/java/seedu/awe/logic/commands/DeleteContactCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ramapriyan912001"},"content":"package seedu.awe.logic.commands;","lastModifiedDate":"2021-10-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"ramapriyan912001"},"content":"import static seedu.awe.commons.core.Messages.MESSAGE_DELETECONTACTCOMMAND_CANNOT_BE_DELETED;","lastModifiedDate":"2021-10-30"},{"lineNumber":5,"author":{"gitId":"chrus-chong"},"content":"import static seedu.awe.commons.core.Messages.MESSAGE_DELETECONTACTCOMMAND_DELETE_PERSON_SUCCESS;","lastModifiedDate":"2021-10-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-09-01"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":9,"author":{"gitId":"ramapriyan912001"},"content":"import seedu.awe.commons.core.Messages;","lastModifiedDate":"2021-10-05"},{"lineNumber":10,"author":{"gitId":"ramapriyan912001"},"content":"import seedu.awe.commons.core.index.Index;","lastModifiedDate":"2021-10-05"},{"lineNumber":11,"author":{"gitId":"ramapriyan912001"},"content":"import seedu.awe.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-10-05"},{"lineNumber":12,"author":{"gitId":"ramapriyan912001"},"content":"import seedu.awe.model.Model;","lastModifiedDate":"2021-10-05"},{"lineNumber":13,"author":{"gitId":"ramapriyan912001"},"content":"import seedu.awe.model.person.Person;","lastModifiedDate":"2021-10-05"},{"lineNumber":14,"author":{"gitId":"ramapriyan912001"},"content":"import seedu.awe.ui.MainWindow;","lastModifiedDate":"2021-10-30"},{"lineNumber":15,"author":{"gitId":"ramapriyan912001"},"content":"import seedu.awe.ui.UiView;","lastModifiedDate":"2021-10-30"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"ramapriyan912001"},"content":" * Deletes a person identified using it\u0027s displayed index from the awe book.","lastModifiedDate":"2021-10-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"marcuspeh"},"content":"public class DeleteContactCommand extends Command {","lastModifiedDate":"2021-10-11"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"marcuspeh"},"content":"    public static final String COMMAND_WORD \u003d \"deletecontact\";","lastModifiedDate":"2021-10-11"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private final Index targetIndex;","lastModifiedDate":"2017-06-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"marcuspeh"},"content":"    public DeleteContactCommand(Index targetIndex) {","lastModifiedDate":"2021-10-11"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        this.targetIndex \u003d targetIndex;","lastModifiedDate":"2016-09-22"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2018-04-19"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":35,"author":{"gitId":"ramapriyan912001"},"content":"        if (MainWindow.getViewEnum() !\u003d UiView.CONTACT_PAGE) {","lastModifiedDate":"2021-10-30"},{"lineNumber":36,"author":{"gitId":"ramapriyan912001"},"content":"            throw new CommandException(MESSAGE_DELETECONTACTCOMMAND_CANNOT_BE_DELETED);","lastModifiedDate":"2021-10-30"},{"lineNumber":37,"author":{"gitId":"ramapriyan912001"},"content":"        }","lastModifiedDate":"2021-10-30"},{"lineNumber":38,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        if (targetIndex.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2018-04-19"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2018-04-19"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        Person personToDelete \u003d lastShownList.get(targetIndex.getZeroBased());","lastModifiedDate":"2018-04-19"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        model.deletePerson(personToDelete);","lastModifiedDate":"2016-09-25"},{"lineNumber":45,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":46,"author":{"gitId":"marcuspeh"},"content":"        return new CommandResult(String.format(MESSAGE_DELETECONTACTCOMMAND_DELETE_PERSON_SUCCESS, personToDelete),","lastModifiedDate":"2021-11-01"},{"lineNumber":47,"author":{"gitId":"marcuspeh"},"content":"                false, false, false, true, false, false, false);","lastModifiedDate":"2021-11-01"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-27"},{"lineNumber":52,"author":{"gitId":"marcuspeh"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2021-10-05"},{"lineNumber":53,"author":{"gitId":"marcuspeh"},"content":"            return true;","lastModifiedDate":"2021-10-05"},{"lineNumber":54,"author":{"gitId":"marcuspeh"},"content":"        }","lastModifiedDate":"2021-10-05"},{"lineNumber":55,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":56,"author":{"gitId":"marcuspeh"},"content":"        if (!(other instanceof DeleteContactCommand)) { // instanceof handles nulls","lastModifiedDate":"2021-10-11"},{"lineNumber":57,"author":{"gitId":"marcuspeh"},"content":"            return false;","lastModifiedDate":"2021-10-05"},{"lineNumber":58,"author":{"gitId":"marcuspeh"},"content":"        }","lastModifiedDate":"2021-10-05"},{"lineNumber":59,"author":{"gitId":"marcuspeh"},"content":"        return targetIndex.equals(((DeleteContactCommand) other).targetIndex); // state check","lastModifiedDate":"2021-10-11"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"marcuspeh":13,"chrus-chong":1,"ramapriyan912001":15,"-":32}},{"path":"src/main/java/seedu/awe/logic/commands/DeleteExpenseCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ramapriyan912001"},"content":"package seedu.awe.logic.commands;","lastModifiedDate":"2021-10-09"},{"lineNumber":2,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":3,"author":{"gitId":"ramapriyan912001"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-09"},{"lineNumber":4,"author":{"gitId":"chrus-chong"},"content":"import static seedu.awe.commons.core.Messages.MESSAGE_DELETEEXPENSECOMMAND_CANNOT_BE_DELETED;","lastModifiedDate":"2021-10-25"},{"lineNumber":5,"author":{"gitId":"chrus-chong"},"content":"import static seedu.awe.commons.core.Messages.MESSAGE_DELETEEXPENSECOMMAND_SUCCESS;","lastModifiedDate":"2021-10-25"},{"lineNumber":6,"author":{"gitId":"ramapriyan912001"},"content":"import static seedu.awe.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2021-10-09"},{"lineNumber":7,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":8,"author":{"gitId":"ramapriyan912001"},"content":"import java.util.List;","lastModifiedDate":"2021-10-09"},{"lineNumber":9,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":10,"author":{"gitId":"ramapriyan912001"},"content":"import seedu.awe.commons.core.Messages;","lastModifiedDate":"2021-10-09"},{"lineNumber":11,"author":{"gitId":"ramapriyan912001"},"content":"import seedu.awe.commons.core.index.Index;","lastModifiedDate":"2021-10-09"},{"lineNumber":12,"author":{"gitId":"ramapriyan912001"},"content":"import seedu.awe.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-10-09"},{"lineNumber":13,"author":{"gitId":"ramapriyan912001"},"content":"import seedu.awe.model.Model;","lastModifiedDate":"2021-10-09"},{"lineNumber":14,"author":{"gitId":"ramapriyan912001"},"content":"import seedu.awe.model.expense.Expense;","lastModifiedDate":"2021-10-09"},{"lineNumber":15,"author":{"gitId":"ramapriyan912001"},"content":"import seedu.awe.model.group.Group;","lastModifiedDate":"2021-10-09"},{"lineNumber":16,"author":{"gitId":"ramapriyan912001"},"content":"import seedu.awe.ui.MainWindow;","lastModifiedDate":"2021-10-25"},{"lineNumber":17,"author":{"gitId":"ramapriyan912001"},"content":"import seedu.awe.ui.UiView;","lastModifiedDate":"2021-10-25"},{"lineNumber":18,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":19,"author":{"gitId":"ramapriyan912001"},"content":"public class DeleteExpenseCommand extends Command {","lastModifiedDate":"2021-10-09"},{"lineNumber":20,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":21,"author":{"gitId":"ramapriyan912001"},"content":"    public static final String COMMAND_WORD \u003d \"deleteexpense\";","lastModifiedDate":"2021-10-09"},{"lineNumber":22,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":23,"author":{"gitId":"ramapriyan912001"},"content":"    private Index index;","lastModifiedDate":"2021-10-09"},{"lineNumber":24,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":25,"author":{"gitId":"ramapriyan912001"},"content":"    /**","lastModifiedDate":"2021-10-09"},{"lineNumber":26,"author":{"gitId":"ramapriyan912001"},"content":"     * Constructor for Delete Expense Command.","lastModifiedDate":"2021-10-09"},{"lineNumber":27,"author":{"gitId":"ramapriyan912001"},"content":"     * @param index Position of expense to be deleted in observable list.","lastModifiedDate":"2021-10-25"},{"lineNumber":28,"author":{"gitId":"ramapriyan912001"},"content":"     */","lastModifiedDate":"2021-10-09"},{"lineNumber":29,"author":{"gitId":"ramapriyan912001"},"content":"    public DeleteExpenseCommand(Index index) {","lastModifiedDate":"2021-10-25"},{"lineNumber":30,"author":{"gitId":"ramapriyan912001"},"content":"        requireAllNonNull(index);","lastModifiedDate":"2021-10-25"},{"lineNumber":31,"author":{"gitId":"ramapriyan912001"},"content":"        this.index \u003d index;","lastModifiedDate":"2021-10-09"},{"lineNumber":32,"author":{"gitId":"ramapriyan912001"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":33,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":34,"author":{"gitId":"ramapriyan912001"},"content":"    public Index getIndex() {","lastModifiedDate":"2021-10-09"},{"lineNumber":35,"author":{"gitId":"ramapriyan912001"},"content":"        return index;","lastModifiedDate":"2021-10-09"},{"lineNumber":36,"author":{"gitId":"ramapriyan912001"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":37,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":38,"author":{"gitId":"ramapriyan912001"},"content":"    @Override","lastModifiedDate":"2021-10-09"},{"lineNumber":39,"author":{"gitId":"ramapriyan912001"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2021-10-09"},{"lineNumber":40,"author":{"gitId":"ramapriyan912001"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-10-09"},{"lineNumber":41,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":42,"author":{"gitId":"ramapriyan912001"},"content":"        List\u003cExpense\u003e expenseList \u003d model.getExpenses();","lastModifiedDate":"2021-10-25"},{"lineNumber":43,"author":{"gitId":"Jingwencloud"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":44,"author":{"gitId":"ramapriyan912001"},"content":"        if (MainWindow.getViewEnum() !\u003d UiView.EXPENSE_PAGE) {","lastModifiedDate":"2021-10-25"},{"lineNumber":45,"author":{"gitId":"chrus-chong"},"content":"            throw new CommandException(MESSAGE_DELETEEXPENSECOMMAND_CANNOT_BE_DELETED);","lastModifiedDate":"2021-10-25"},{"lineNumber":46,"author":{"gitId":"Jingwencloud"},"content":"        }","lastModifiedDate":"2021-10-21"},{"lineNumber":47,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":48,"author":{"gitId":"Jingwencloud"},"content":"        if (index.getZeroBased() \u003e\u003d expenseList.size()) {","lastModifiedDate":"2021-10-13"},{"lineNumber":49,"author":{"gitId":"ramapriyan912001"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_EXPENSE_DISPLAYED_INDEX);","lastModifiedDate":"2021-10-09"},{"lineNumber":50,"author":{"gitId":"ramapriyan912001"},"content":"        }","lastModifiedDate":"2021-10-09"},{"lineNumber":51,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":52,"author":{"gitId":"ramapriyan912001"},"content":"        Expense expenseToDelete \u003d model.getExpense(index.getZeroBased());","lastModifiedDate":"2021-10-27"},{"lineNumber":53,"author":{"gitId":"ramapriyan912001"},"content":"        Group group \u003d model.getActiveGroupFromAddressBook();","lastModifiedDate":"2021-10-25"},{"lineNumber":54,"author":{"gitId":"ramapriyan912001"},"content":"        Group newGroup \u003d group.deleteExpense(expenseToDelete);","lastModifiedDate":"2021-10-09"},{"lineNumber":55,"author":{"gitId":"ramapriyan912001"},"content":"        model.setGroup(group, newGroup);","lastModifiedDate":"2021-10-09"},{"lineNumber":56,"author":{"gitId":"Jingwencloud"},"content":"        model.deleteExpense(expenseToDelete, newGroup);","lastModifiedDate":"2021-10-13"},{"lineNumber":57,"author":{"gitId":"ramapriyan912001"},"content":"        String expenseToDeleteDescriptionString \u003d expenseToDelete.getDescription().getFullDescription();","lastModifiedDate":"2021-10-09"},{"lineNumber":58,"author":{"gitId":"chrus-chong"},"content":"        return new CommandResult(String.format(MESSAGE_DELETEEXPENSECOMMAND_SUCCESS, expenseToDeleteDescriptionString),","lastModifiedDate":"2021-10-25"},{"lineNumber":59,"author":{"gitId":"chrus-chong"},"content":"                false, false, false, false,","lastModifiedDate":"2021-10-25"},{"lineNumber":60,"author":{"gitId":"chrus-chong"},"content":"                true, false, false);","lastModifiedDate":"2021-10-25"},{"lineNumber":61,"author":{"gitId":"ramapriyan912001"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":62,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":63,"author":{"gitId":"ramapriyan912001"},"content":"    @Override","lastModifiedDate":"2021-10-09"},{"lineNumber":64,"author":{"gitId":"ramapriyan912001"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-09"},{"lineNumber":65,"author":{"gitId":"ramapriyan912001"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2021-10-09"},{"lineNumber":66,"author":{"gitId":"ramapriyan912001"},"content":"            return true;","lastModifiedDate":"2021-10-09"},{"lineNumber":67,"author":{"gitId":"ramapriyan912001"},"content":"        } else if (!(other instanceof DeleteExpenseCommand)) {","lastModifiedDate":"2021-10-09"},{"lineNumber":68,"author":{"gitId":"ramapriyan912001"},"content":"            return false;","lastModifiedDate":"2021-10-09"},{"lineNumber":69,"author":{"gitId":"ramapriyan912001"},"content":"        } else {","lastModifiedDate":"2021-10-09"},{"lineNumber":70,"author":{"gitId":"ramapriyan912001"},"content":"            DeleteExpenseCommand otherCommand \u003d (DeleteExpenseCommand) other;","lastModifiedDate":"2021-10-09"},{"lineNumber":71,"author":{"gitId":"ramapriyan912001"},"content":"            return index.equals(otherCommand.getIndex());","lastModifiedDate":"2021-10-25"},{"lineNumber":72,"author":{"gitId":"ramapriyan912001"},"content":"        }","lastModifiedDate":"2021-10-09"},{"lineNumber":73,"author":{"gitId":"ramapriyan912001"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":74,"author":{"gitId":"ramapriyan912001"},"content":"}","lastModifiedDate":"2021-10-09"}],"authorContributionMap":{"Jingwencloud":4,"chrus-chong":7,"ramapriyan912001":63}},{"path":"src/main/java/seedu/awe/logic/commands/DeleteGroupCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ramapriyan912001"},"content":"package seedu.awe.logic.commands;","lastModifiedDate":"2021-10-05"},{"lineNumber":2,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":3,"author":{"gitId":"ramapriyan912001"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-09-26"},{"lineNumber":4,"author":{"gitId":"chrus-chong"},"content":"import static seedu.awe.commons.core.Messages.MESSAGE_DELETEGROUPCOMMAND_GROUP_DOES_NOT_EXIST;","lastModifiedDate":"2021-10-25"},{"lineNumber":5,"author":{"gitId":"chrus-chong"},"content":"import static seedu.awe.commons.core.Messages.MESSAGE_DELETEGROUPCOMMAND_SUCCESS;","lastModifiedDate":"2021-10-25"},{"lineNumber":6,"author":{"gitId":"ramapriyan912001"},"content":"import static seedu.awe.model.Model.PREDICATE_SHOW_ALL_GROUPS;","lastModifiedDate":"2021-10-26"},{"lineNumber":7,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":8,"author":{"gitId":"ramapriyan912001"},"content":"import seedu.awe.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-10-05"},{"lineNumber":9,"author":{"gitId":"ramapriyan912001"},"content":"import seedu.awe.model.Model;","lastModifiedDate":"2021-10-05"},{"lineNumber":10,"author":{"gitId":"ramapriyan912001"},"content":"import seedu.awe.model.group.Group;","lastModifiedDate":"2021-10-05"},{"lineNumber":11,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":12,"author":{"gitId":"ramapriyan912001"},"content":"public class DeleteGroupCommand extends Command {","lastModifiedDate":"2021-09-26"},{"lineNumber":13,"author":{"gitId":"ramapriyan912001"},"content":"    public static final String COMMAND_WORD \u003d \"deletegroup\";","lastModifiedDate":"2021-09-26"},{"lineNumber":14,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":15,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":16,"author":{"gitId":"ramapriyan912001"},"content":"    private Group group;","lastModifiedDate":"2021-09-26"},{"lineNumber":17,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":18,"author":{"gitId":"ramapriyan912001"},"content":"    /**","lastModifiedDate":"2021-09-26"},{"lineNumber":19,"author":{"gitId":"ramapriyan912001"},"content":"     * Delete group command, delete based on name","lastModifiedDate":"2021-09-26"},{"lineNumber":20,"author":{"gitId":"chrus-chong"},"content":"     *","lastModifiedDate":"2021-10-03"},{"lineNumber":21,"author":{"gitId":"ramapriyan912001"},"content":"     * @param group group object to be deleted","lastModifiedDate":"2021-09-26"},{"lineNumber":22,"author":{"gitId":"ramapriyan912001"},"content":"     */","lastModifiedDate":"2021-09-26"},{"lineNumber":23,"author":{"gitId":"ramapriyan912001"},"content":"    public DeleteGroupCommand(Group group) {","lastModifiedDate":"2021-09-26"},{"lineNumber":24,"author":{"gitId":"ramapriyan912001"},"content":"        this.group \u003d group;","lastModifiedDate":"2021-09-26"},{"lineNumber":25,"author":{"gitId":"ramapriyan912001"},"content":"    }","lastModifiedDate":"2021-09-26"},{"lineNumber":26,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":27,"author":{"gitId":"ramapriyan912001"},"content":"    /**","lastModifiedDate":"2021-09-26"},{"lineNumber":28,"author":{"gitId":"ramapriyan912001"},"content":"     * Get group field","lastModifiedDate":"2021-09-26"},{"lineNumber":29,"author":{"gitId":"chrus-chong"},"content":"     *","lastModifiedDate":"2021-10-03"},{"lineNumber":30,"author":{"gitId":"ramapriyan912001"},"content":"     * @return Group object","lastModifiedDate":"2021-09-26"},{"lineNumber":31,"author":{"gitId":"ramapriyan912001"},"content":"     */","lastModifiedDate":"2021-09-26"},{"lineNumber":32,"author":{"gitId":"ramapriyan912001"},"content":"    public Group getGroup() {","lastModifiedDate":"2021-09-26"},{"lineNumber":33,"author":{"gitId":"ramapriyan912001"},"content":"        return group;","lastModifiedDate":"2021-09-26"},{"lineNumber":34,"author":{"gitId":"ramapriyan912001"},"content":"    }","lastModifiedDate":"2021-09-26"},{"lineNumber":35,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":36,"author":{"gitId":"ramapriyan912001"},"content":"    @Override","lastModifiedDate":"2021-09-26"},{"lineNumber":37,"author":{"gitId":"ramapriyan912001"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2021-09-26"},{"lineNumber":38,"author":{"gitId":"ramapriyan912001"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-09-26"},{"lineNumber":39,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":40,"author":{"gitId":"ramapriyan912001"},"content":"        if (!model.hasGroup(group)) {","lastModifiedDate":"2021-09-26"},{"lineNumber":41,"author":{"gitId":"chrus-chong"},"content":"            throw new CommandException(MESSAGE_DELETEGROUPCOMMAND_GROUP_DOES_NOT_EXIST);","lastModifiedDate":"2021-10-25"},{"lineNumber":42,"author":{"gitId":"ramapriyan912001"},"content":"        }","lastModifiedDate":"2021-09-26"},{"lineNumber":43,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":44,"author":{"gitId":"ramapriyan912001"},"content":"        Group groupFromInternalList \u003d model.getGroupByName(group.getGroupName());","lastModifiedDate":"2021-10-04"},{"lineNumber":45,"author":{"gitId":"ramapriyan912001"},"content":"        model.deleteGroup(groupFromInternalList);","lastModifiedDate":"2021-10-04"},{"lineNumber":46,"author":{"gitId":"chrus-chong"},"content":"        model.setAllMembersOfGroup(groupFromInternalList);","lastModifiedDate":"2021-10-19"},{"lineNumber":47,"author":{"gitId":"ramapriyan912001"},"content":"        int numberOfMembers \u003d groupFromInternalList.getMembers().size();","lastModifiedDate":"2021-10-05"},{"lineNumber":48,"author":{"gitId":"ramapriyan912001"},"content":"        String groupName \u003d groupFromInternalList.getGroupName().getName();","lastModifiedDate":"2021-10-05"},{"lineNumber":49,"author":{"gitId":"ramapriyan912001"},"content":"        model.updateFilteredGroupList(PREDICATE_SHOW_ALL_GROUPS);","lastModifiedDate":"2021-10-26"},{"lineNumber":50,"author":{"gitId":"ramapriyan912001"},"content":"        return new CommandResult(String.format(MESSAGE_DELETEGROUPCOMMAND_SUCCESS, groupName, numberOfMembers),","lastModifiedDate":"2021-10-26"},{"lineNumber":51,"author":{"gitId":"ramapriyan912001"},"content":"                false, false, true, false, false, false, false);","lastModifiedDate":"2021-10-26"},{"lineNumber":52,"author":{"gitId":"ramapriyan912001"},"content":"    }","lastModifiedDate":"2021-09-26"},{"lineNumber":53,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":54,"author":{"gitId":"ramapriyan912001"},"content":"    @Override","lastModifiedDate":"2021-10-07"},{"lineNumber":55,"author":{"gitId":"ramapriyan912001"},"content":"    public boolean equals (Object otherCommand) {","lastModifiedDate":"2021-10-07"},{"lineNumber":56,"author":{"gitId":"ramapriyan912001"},"content":"        if (this \u003d\u003d otherCommand) {","lastModifiedDate":"2021-10-07"},{"lineNumber":57,"author":{"gitId":"ramapriyan912001"},"content":"            return true;","lastModifiedDate":"2021-10-07"},{"lineNumber":58,"author":{"gitId":"ramapriyan912001"},"content":"        }","lastModifiedDate":"2021-10-07"},{"lineNumber":59,"author":{"gitId":"ramapriyan912001"},"content":"        if (!(otherCommand instanceof DeleteGroupCommand)) {","lastModifiedDate":"2021-10-07"},{"lineNumber":60,"author":{"gitId":"ramapriyan912001"},"content":"            return false;","lastModifiedDate":"2021-10-07"},{"lineNumber":61,"author":{"gitId":"ramapriyan912001"},"content":"        }","lastModifiedDate":"2021-10-07"},{"lineNumber":62,"author":{"gitId":"ramapriyan912001"},"content":"        DeleteGroupCommand otherDeleteGroupCommand \u003d (DeleteGroupCommand) otherCommand;","lastModifiedDate":"2021-10-07"},{"lineNumber":63,"author":{"gitId":"ramapriyan912001"},"content":"        return this.getGroup().equals(otherDeleteGroupCommand.getGroup());","lastModifiedDate":"2021-10-07"},{"lineNumber":64,"author":{"gitId":"ramapriyan912001"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":65,"author":{"gitId":"ramapriyan912001"},"content":"}","lastModifiedDate":"2021-09-26"}],"authorContributionMap":{"chrus-chong":7,"ramapriyan912001":58}},{"path":"src/main/java/seedu/awe/logic/commands/EditContactCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ramapriyan912001"},"content":"package seedu.awe.logic.commands;","lastModifiedDate":"2021-10-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"ramapriyan912001"},"content":"import static seedu.awe.commons.core.Messages.MESSAGE_EDITCONTACTCOMMAND_CANNOT_BE_EDITED;","lastModifiedDate":"2021-10-30"},{"lineNumber":5,"author":{"gitId":"chrus-chong"},"content":"import static seedu.awe.commons.core.Messages.MESSAGE_EDITCONTACTCOMMAND_DUPLICATE_PERSON;","lastModifiedDate":"2021-10-25"},{"lineNumber":6,"author":{"gitId":"chrus-chong"},"content":"import static seedu.awe.commons.core.Messages.MESSAGE_EDITCONTACTCOMMAND_EDIT_PERSON_SUCCESS;","lastModifiedDate":"2021-10-25"},{"lineNumber":7,"author":{"gitId":"ramapriyan912001"},"content":"import static seedu.awe.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2021-10-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2018-01-11"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-01-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-12-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2016-12-26"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":15,"author":{"gitId":"ramapriyan912001"},"content":"import seedu.awe.commons.core.Messages;","lastModifiedDate":"2021-10-05"},{"lineNumber":16,"author":{"gitId":"ramapriyan912001"},"content":"import seedu.awe.commons.core.index.Index;","lastModifiedDate":"2021-10-05"},{"lineNumber":17,"author":{"gitId":"ramapriyan912001"},"content":"import seedu.awe.commons.util.CollectionUtil;","lastModifiedDate":"2021-10-05"},{"lineNumber":18,"author":{"gitId":"ramapriyan912001"},"content":"import seedu.awe.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-10-05"},{"lineNumber":19,"author":{"gitId":"ramapriyan912001"},"content":"import seedu.awe.model.Model;","lastModifiedDate":"2021-10-05"},{"lineNumber":20,"author":{"gitId":"ramapriyan912001"},"content":"import seedu.awe.model.person.Name;","lastModifiedDate":"2021-10-05"},{"lineNumber":21,"author":{"gitId":"ramapriyan912001"},"content":"import seedu.awe.model.person.Person;","lastModifiedDate":"2021-10-05"},{"lineNumber":22,"author":{"gitId":"ramapriyan912001"},"content":"import seedu.awe.model.person.Phone;","lastModifiedDate":"2021-10-05"},{"lineNumber":23,"author":{"gitId":"ramapriyan912001"},"content":"import seedu.awe.model.tag.Tag;","lastModifiedDate":"2021-10-05"},{"lineNumber":24,"author":{"gitId":"ramapriyan912001"},"content":"import seedu.awe.ui.MainWindow;","lastModifiedDate":"2021-10-30"},{"lineNumber":25,"author":{"gitId":"ramapriyan912001"},"content":"import seedu.awe.ui.UiView;","lastModifiedDate":"2021-10-30"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":27,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-12-26"},{"lineNumber":28,"author":{"gitId":"ramapriyan912001"},"content":" * Edits the details of an existing person in the awe book.","lastModifiedDate":"2021-10-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-12-26"},{"lineNumber":30,"author":{"gitId":"marcuspeh"},"content":"public class EditContactCommand extends Command {","lastModifiedDate":"2021-10-11"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":32,"author":{"gitId":"marcuspeh"},"content":"    public static final String COMMAND_WORD \u003d \"editcontact\";","lastModifiedDate":"2021-10-11"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private final Index index;","lastModifiedDate":"2017-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private final EditPersonDescriptor editPersonDescriptor;","lastModifiedDate":"2016-12-26"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     * @param index of the person in the filtered person list to edit","lastModifiedDate":"2017-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * @param editPersonDescriptor details to edit the person with","lastModifiedDate":"2016-12-26"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":41,"author":{"gitId":"marcuspeh"},"content":"    public EditContactCommand(Index index, EditPersonDescriptor editPersonDescriptor) {","lastModifiedDate":"2021-10-11"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        requireNonNull(index);","lastModifiedDate":"2017-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        requireNonNull(editPersonDescriptor);","lastModifiedDate":"2017-05-15"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        this.index \u003d index;","lastModifiedDate":"2017-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        this.editPersonDescriptor \u003d new EditPersonDescriptor(editPersonDescriptor);","lastModifiedDate":"2016-12-26"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":49,"author":{"gitId":"chrus-chong"},"content":"    /**","lastModifiedDate":"2021-10-03"},{"lineNumber":50,"author":{"gitId":"chrus-chong"},"content":"     * Returns CommandResult object with message representing successful edit of person.","lastModifiedDate":"2021-10-03"},{"lineNumber":51,"author":{"gitId":"chrus-chong"},"content":"     * If not a valid command, returns CommandResult object with error message.","lastModifiedDate":"2021-10-03"},{"lineNumber":52,"author":{"gitId":"chrus-chong"},"content":"     *","lastModifiedDate":"2021-10-03"},{"lineNumber":53,"author":{"gitId":"chrus-chong"},"content":"     * @param model {@code Model} which the command should operate on.","lastModifiedDate":"2021-10-03"},{"lineNumber":54,"author":{"gitId":"chrus-chong"},"content":"     * @return CommandResult object to depict status of edit operation.","lastModifiedDate":"2021-10-03"},{"lineNumber":55,"author":{"gitId":"chrus-chong"},"content":"     * @throws CommandException If model is null.","lastModifiedDate":"2021-10-03"},{"lineNumber":56,"author":{"gitId":"chrus-chong"},"content":"     */","lastModifiedDate":"2021-10-03"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-26"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2018-04-19"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":62,"author":{"gitId":"ramapriyan912001"},"content":"        if (MainWindow.getViewEnum() !\u003d UiView.CONTACT_PAGE) {","lastModifiedDate":"2021-10-30"},{"lineNumber":63,"author":{"gitId":"ramapriyan912001"},"content":"            throw new CommandException(MESSAGE_EDITCONTACTCOMMAND_CANNOT_BE_EDITED);","lastModifiedDate":"2021-10-30"},{"lineNumber":64,"author":{"gitId":"ramapriyan912001"},"content":"        }","lastModifiedDate":"2021-10-30"},{"lineNumber":65,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2018-04-19"},{"lineNumber":67,"author":{"gitId":"-"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2018-04-19"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        Person personToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2018-04-19"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d createEditedPerson(personToEdit, editPersonDescriptor);","lastModifiedDate":"2018-04-19"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        if (!personToEdit.isSamePerson(editedPerson) \u0026\u0026 model.hasPerson(editedPerson)) {","lastModifiedDate":"2018-08-07"},{"lineNumber":74,"author":{"gitId":"chrus-chong"},"content":"            throw new CommandException(MESSAGE_EDITCONTACTCOMMAND_DUPLICATE_PERSON);","lastModifiedDate":"2021-10-25"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        model.setPerson(personToEdit, editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2017-08-05"},{"lineNumber":79,"author":{"gitId":"chrus-chong"},"content":"        return new CommandResult(String.format(MESSAGE_EDITCONTACTCOMMAND_EDIT_PERSON_SUCCESS, editedPerson));","lastModifiedDate":"2021-10-25"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     * Creates and returns a {@code Person} with the details of {@code personToEdit}","lastModifiedDate":"2016-12-26"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     * edited with {@code editPersonDescriptor}.","lastModifiedDate":"2016-12-26"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    private static Person createEditedPerson(Person personToEdit, EditPersonDescriptor editPersonDescriptor) {","lastModifiedDate":"2018-01-10"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        assert personToEdit !\u003d null;","lastModifiedDate":"2016-12-26"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        Name updatedName \u003d editPersonDescriptor.getName().orElse(personToEdit.getName());","lastModifiedDate":"2017-06-21"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        Phone updatedPhone \u003d editPersonDescriptor.getPhone().orElse(personToEdit.getPhone());","lastModifiedDate":"2017-06-21"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e updatedTags \u003d editPersonDescriptor.getTags().orElse(personToEdit.getTags());","lastModifiedDate":"2017-06-21"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":93,"author":{"gitId":"marcuspeh"},"content":"        return new Person(updatedName, updatedPhone, updatedTags);","lastModifiedDate":"2021-11-01"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-05-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2017-05-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2017-05-08"},{"lineNumber":100,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-05-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-05-08"},{"lineNumber":104,"author":{"gitId":"marcuspeh"},"content":"        if (!(other instanceof EditContactCommand)) {","lastModifiedDate":"2021-10-11"},{"lineNumber":105,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-05-08"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2017-05-08"},{"lineNumber":109,"author":{"gitId":"marcuspeh"},"content":"        EditContactCommand e \u003d (EditContactCommand) other;","lastModifiedDate":"2021-10-11"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        return index.equals(e.index)","lastModifiedDate":"2017-05-25"},{"lineNumber":111,"author":{"gitId":"-"},"content":"                \u0026\u0026 editPersonDescriptor.equals(e.editPersonDescriptor);","lastModifiedDate":"2018-04-19"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-08"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":115,"author":{"gitId":"-"},"content":"     * Stores the details to edit the person with. Each non-empty field value will replace the","lastModifiedDate":"2016-12-26"},{"lineNumber":116,"author":{"gitId":"-"},"content":"     * corresponding field value of the person.","lastModifiedDate":"2016-12-26"},{"lineNumber":117,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    public static class EditPersonDescriptor {","lastModifiedDate":"2016-12-26"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        private Name name;","lastModifiedDate":"2017-06-21"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        private Phone phone;","lastModifiedDate":"2017-06-21"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        private Set\u003cTag\u003e tags;","lastModifiedDate":"2017-06-21"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        public EditPersonDescriptor() {}","lastModifiedDate":"2016-12-26"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":126,"author":{"gitId":"-"},"content":"         * Copy constructor.","lastModifiedDate":"2018-01-11"},{"lineNumber":127,"author":{"gitId":"-"},"content":"         * A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2018-01-11"},{"lineNumber":128,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        public EditPersonDescriptor(EditPersonDescriptor toCopy) {","lastModifiedDate":"2016-12-26"},{"lineNumber":130,"author":{"gitId":"-"},"content":"            setName(toCopy.name);","lastModifiedDate":"2018-01-15"},{"lineNumber":131,"author":{"gitId":"-"},"content":"            setPhone(toCopy.phone);","lastModifiedDate":"2018-01-15"},{"lineNumber":132,"author":{"gitId":"-"},"content":"            setTags(toCopy.tags);","lastModifiedDate":"2018-01-11"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2016-12-26"},{"lineNumber":136,"author":{"gitId":"-"},"content":"         * Returns true if at least one field is edited.","lastModifiedDate":"2016-12-26"},{"lineNumber":137,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-12-26"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        public boolean isAnyFieldEdited() {","lastModifiedDate":"2016-12-26"},{"lineNumber":139,"author":{"gitId":"marcuspeh"},"content":"            return CollectionUtil.isAnyNonNull(name, phone, tags);","lastModifiedDate":"2021-11-01"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        public void setName(Name name) {","lastModifiedDate":"2017-06-21"},{"lineNumber":143,"author":{"gitId":"-"},"content":"            this.name \u003d name;","lastModifiedDate":"2017-06-21"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        public Optional\u003cName\u003e getName() {","lastModifiedDate":"2016-12-26"},{"lineNumber":147,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(name);","lastModifiedDate":"2017-06-21"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        public void setPhone(Phone phone) {","lastModifiedDate":"2017-06-21"},{"lineNumber":151,"author":{"gitId":"-"},"content":"            this.phone \u003d phone;","lastModifiedDate":"2017-06-21"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        public Optional\u003cPhone\u003e getPhone() {","lastModifiedDate":"2016-12-26"},{"lineNumber":155,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(phone);","lastModifiedDate":"2017-06-21"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":159,"author":{"gitId":"-"},"content":"         * Sets {@code tags} to this object\u0027s {@code tags}.","lastModifiedDate":"2018-01-11"},{"lineNumber":160,"author":{"gitId":"-"},"content":"         * A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2018-01-11"},{"lineNumber":161,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        public void setTags(Set\u003cTag\u003e tags) {","lastModifiedDate":"2017-06-21"},{"lineNumber":163,"author":{"gitId":"-"},"content":"            this.tags \u003d (tags !\u003d null) ? new HashSet\u003c\u003e(tags) : null;","lastModifiedDate":"2018-01-11"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":167,"author":{"gitId":"-"},"content":"         * Returns an unmodifiable tag set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2018-01-11"},{"lineNumber":168,"author":{"gitId":"-"},"content":"         * if modification is attempted.","lastModifiedDate":"2018-01-11"},{"lineNumber":169,"author":{"gitId":"-"},"content":"         * Returns {@code Optional#empty()} if {@code tags} is null.","lastModifiedDate":"2018-01-11"},{"lineNumber":170,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        public Optional\u003cSet\u003cTag\u003e\u003e getTags() {","lastModifiedDate":"2017-03-07"},{"lineNumber":172,"author":{"gitId":"-"},"content":"            return (tags !\u003d null) ? Optional.of(Collections.unmodifiableSet(tags)) : Optional.empty();","lastModifiedDate":"2018-01-11"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-05"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        public boolean equals(Object other) {","lastModifiedDate":"2017-05-05"},{"lineNumber":177,"author":{"gitId":"-"},"content":"            // short circuit if same object","lastModifiedDate":"2017-05-05"},{"lineNumber":178,"author":{"gitId":"-"},"content":"            if (other \u003d\u003d this) {","lastModifiedDate":"2017-05-05"},{"lineNumber":179,"author":{"gitId":"-"},"content":"                return true;","lastModifiedDate":"2017-05-05"},{"lineNumber":180,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-05-05"},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":182,"author":{"gitId":"-"},"content":"            // instanceof handles nulls","lastModifiedDate":"2017-05-05"},{"lineNumber":183,"author":{"gitId":"-"},"content":"            if (!(other instanceof EditPersonDescriptor)) {","lastModifiedDate":"2017-05-05"},{"lineNumber":184,"author":{"gitId":"-"},"content":"                return false;","lastModifiedDate":"2017-05-05"},{"lineNumber":185,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-05-05"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":187,"author":{"gitId":"-"},"content":"            // state check","lastModifiedDate":"2017-05-05"},{"lineNumber":188,"author":{"gitId":"-"},"content":"            EditPersonDescriptor e \u003d (EditPersonDescriptor) other;","lastModifiedDate":"2017-05-05"},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-21"},{"lineNumber":190,"author":{"gitId":"-"},"content":"            return getName().equals(e.getName())","lastModifiedDate":"2017-06-21"},{"lineNumber":191,"author":{"gitId":"-"},"content":"                    \u0026\u0026 getPhone().equals(e.getPhone())","lastModifiedDate":"2017-06-21"},{"lineNumber":192,"author":{"gitId":"-"},"content":"                    \u0026\u0026 getTags().equals(e.getTags());","lastModifiedDate":"2017-06-21"},{"lineNumber":193,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-05"},{"lineNumber":194,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":195,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-26"}],"authorContributionMap":{"marcuspeh":7,"chrus-chong":12,"ramapriyan912001":19,"-":157}},{"path":"src/main/java/seedu/awe/logic/commands/ExitCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ramapriyan912001"},"content":"package seedu.awe.logic.commands;","lastModifiedDate":"2021-10-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":3,"author":{"gitId":"chrus-chong"},"content":"import static seedu.awe.commons.core.Messages.MESSAGE_EXITCOMMAND_ACKNOWLEDGEMENT;","lastModifiedDate":"2021-10-25"},{"lineNumber":4,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":5,"author":{"gitId":"ramapriyan912001"},"content":"import seedu.awe.model.Model;","lastModifiedDate":"2021-10-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-22"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Terminates the program.","lastModifiedDate":"2016-09-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-22"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class ExitCommand extends Command {","lastModifiedDate":"2016-09-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"exit\";","lastModifiedDate":"2016-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":16,"author":{"gitId":"chrus-chong"},"content":"        return new CommandResult(MESSAGE_EXITCOMMAND_ACKNOWLEDGEMENT, false, true,","lastModifiedDate":"2021-10-25"},{"lineNumber":17,"author":{"gitId":"ramapriyan912001"},"content":"                false, false, false,","lastModifiedDate":"2021-10-21"},{"lineNumber":18,"author":{"gitId":"ramapriyan912001"},"content":"                false, false);","lastModifiedDate":"2021-10-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-22"}],"authorContributionMap":{"chrus-chong":3,"ramapriyan912001":4,"-":14}},{"path":"src/main/java/seedu/awe/logic/commands/FindContactsCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ramapriyan912001"},"content":"package seedu.awe.logic.commands;","lastModifiedDate":"2021-10-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":5,"author":{"gitId":"ramapriyan912001"},"content":"import seedu.awe.commons.core.Messages;","lastModifiedDate":"2021-10-05"},{"lineNumber":6,"author":{"gitId":"ramapriyan912001"},"content":"import seedu.awe.model.Model;","lastModifiedDate":"2021-10-05"},{"lineNumber":7,"author":{"gitId":"ramapriyan912001"},"content":"import seedu.awe.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2021-10-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-22"},{"lineNumber":10,"author":{"gitId":"ramapriyan912001"},"content":" * Finds and lists all persons in awe book whose name contains any of the argument keywords.","lastModifiedDate":"2021-10-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Keyword matching is case insensitive.","lastModifiedDate":"2018-04-01"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-22"},{"lineNumber":13,"author":{"gitId":"marcuspeh"},"content":"public class FindContactsCommand extends Command {","lastModifiedDate":"2021-10-10"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":15,"author":{"gitId":"marcuspeh"},"content":"    public static final String COMMAND_WORD \u003d \"findcontacts\";","lastModifiedDate":"2021-10-10"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private final NameContainsKeywordsPredicate predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":19,"author":{"gitId":"marcuspeh"},"content":"    public FindContactsCommand(NameContainsKeywordsPredicate predicate) {","lastModifiedDate":"2021-10-10"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        this.predicate \u003d predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-22"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(predicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        return new CommandResult(","lastModifiedDate":"2018-04-01"},{"lineNumber":28,"author":{"gitId":"marcuspeh"},"content":"                String.format(Messages.MESSAGE_PERSONS_LISTED_OVERVIEW, model.getFilteredPersonList().size()),","lastModifiedDate":"2021-10-10"},{"lineNumber":29,"author":{"gitId":"ramapriyan912001"},"content":"                false, false, false, true,","lastModifiedDate":"2021-10-21"},{"lineNumber":30,"author":{"gitId":"ramapriyan912001"},"content":"                false, false, false);","lastModifiedDate":"2021-10-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-27"},{"lineNumber":35,"author":{"gitId":"marcuspeh"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2021-10-05"},{"lineNumber":36,"author":{"gitId":"marcuspeh"},"content":"            return true;","lastModifiedDate":"2021-10-05"},{"lineNumber":37,"author":{"gitId":"marcuspeh"},"content":"        }","lastModifiedDate":"2021-10-05"},{"lineNumber":38,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":39,"author":{"gitId":"marcuspeh"},"content":"        if (!(other instanceof FindContactsCommand)) { // instanceof handles nulls","lastModifiedDate":"2021-10-10"},{"lineNumber":40,"author":{"gitId":"marcuspeh"},"content":"            return false;","lastModifiedDate":"2021-10-05"},{"lineNumber":41,"author":{"gitId":"marcuspeh"},"content":"        }","lastModifiedDate":"2021-10-05"},{"lineNumber":42,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":43,"author":{"gitId":"marcuspeh"},"content":"        return predicate.equals(((FindContactsCommand) other).predicate); // state check","lastModifiedDate":"2021-10-10"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-22"}],"authorContributionMap":{"marcuspeh":13,"ramapriyan912001":7,"-":25}},{"path":"src/main/java/seedu/awe/logic/commands/FindExpensesCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Jingwencloud"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":2,"author":{"gitId":"Jingwencloud"},"content":"package seedu.awe.logic.commands;","lastModifiedDate":"2021-10-12"},{"lineNumber":3,"author":{"gitId":"Jingwencloud"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":4,"author":{"gitId":"Jingwencloud"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-12"},{"lineNumber":5,"author":{"gitId":"chrus-chong"},"content":"import static seedu.awe.commons.core.Messages.MESSAGE_FINDEXPENSESCOMMAND_GROUP_NOT_FOUND;","lastModifiedDate":"2021-10-25"},{"lineNumber":6,"author":{"gitId":"Jingwencloud"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":7,"author":{"gitId":"Jingwencloud"},"content":"import seedu.awe.commons.core.Messages;","lastModifiedDate":"2021-10-12"},{"lineNumber":8,"author":{"gitId":"Jingwencloud"},"content":"import seedu.awe.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-10-12"},{"lineNumber":9,"author":{"gitId":"Jingwencloud"},"content":"import seedu.awe.model.Model;","lastModifiedDate":"2021-10-12"},{"lineNumber":10,"author":{"gitId":"Jingwencloud"},"content":"import seedu.awe.model.expense.DescriptionContainsKeywordsPredicate;","lastModifiedDate":"2021-10-12"},{"lineNumber":11,"author":{"gitId":"Jingwencloud"},"content":"import seedu.awe.model.group.Group;","lastModifiedDate":"2021-10-12"},{"lineNumber":12,"author":{"gitId":"Jingwencloud"},"content":"import seedu.awe.model.group.GroupName;","lastModifiedDate":"2021-10-12"},{"lineNumber":13,"author":{"gitId":"Jingwencloud"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":14,"author":{"gitId":"Jingwencloud"},"content":"/**","lastModifiedDate":"2021-10-12"},{"lineNumber":15,"author":{"gitId":"Jingwencloud"},"content":" * Finds and lists all expenses in a group whose description contains any of the argument keywords.","lastModifiedDate":"2021-10-12"},{"lineNumber":16,"author":{"gitId":"Jingwencloud"},"content":" * Keyword matching is case insensitive.","lastModifiedDate":"2021-10-12"},{"lineNumber":17,"author":{"gitId":"Jingwencloud"},"content":" */","lastModifiedDate":"2021-10-12"},{"lineNumber":18,"author":{"gitId":"Jingwencloud"},"content":"public class FindExpensesCommand extends Command {","lastModifiedDate":"2021-10-12"},{"lineNumber":19,"author":{"gitId":"Jingwencloud"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":20,"author":{"gitId":"Jingwencloud"},"content":"    public static final String COMMAND_WORD \u003d \"findexpenses\";","lastModifiedDate":"2021-10-12"},{"lineNumber":21,"author":{"gitId":"Jingwencloud"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":22,"author":{"gitId":"Jingwencloud"},"content":"    private final GroupName groupName;","lastModifiedDate":"2021-10-12"},{"lineNumber":23,"author":{"gitId":"Jingwencloud"},"content":"    private final DescriptionContainsKeywordsPredicate predicate;","lastModifiedDate":"2021-10-12"},{"lineNumber":24,"author":{"gitId":"Jingwencloud"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":25,"author":{"gitId":"Jingwencloud"},"content":"    /**","lastModifiedDate":"2021-10-12"},{"lineNumber":26,"author":{"gitId":"Jingwencloud"},"content":"     * A public constructor to initialise the group name and predicate to","lastModifiedDate":"2021-10-12"},{"lineNumber":27,"author":{"gitId":"Jingwencloud"},"content":"     * the given ones.","lastModifiedDate":"2021-10-12"},{"lineNumber":28,"author":{"gitId":"Jingwencloud"},"content":"     *","lastModifiedDate":"2021-10-12"},{"lineNumber":29,"author":{"gitId":"Jingwencloud"},"content":"     * @param groupName Name of the group to find expenses from.","lastModifiedDate":"2021-10-12"},{"lineNumber":30,"author":{"gitId":"Jingwencloud"},"content":"     * @param predicate The predicate to filter the expenses list.","lastModifiedDate":"2021-10-12"},{"lineNumber":31,"author":{"gitId":"Jingwencloud"},"content":"     */","lastModifiedDate":"2021-10-12"},{"lineNumber":32,"author":{"gitId":"Jingwencloud"},"content":"    public FindExpensesCommand(GroupName groupName, DescriptionContainsKeywordsPredicate predicate) {","lastModifiedDate":"2021-10-12"},{"lineNumber":33,"author":{"gitId":"Jingwencloud"},"content":"        this.groupName \u003d groupName;","lastModifiedDate":"2021-10-12"},{"lineNumber":34,"author":{"gitId":"Jingwencloud"},"content":"        this.predicate \u003d predicate;","lastModifiedDate":"2021-10-12"},{"lineNumber":35,"author":{"gitId":"Jingwencloud"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":36,"author":{"gitId":"Jingwencloud"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":37,"author":{"gitId":"Jingwencloud"},"content":"    @Override","lastModifiedDate":"2021-10-12"},{"lineNumber":38,"author":{"gitId":"Jingwencloud"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2021-10-12"},{"lineNumber":39,"author":{"gitId":"Jingwencloud"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-10-12"},{"lineNumber":40,"author":{"gitId":"Jingwencloud"},"content":"        Group group \u003d model.getGroupByName(groupName);","lastModifiedDate":"2021-10-12"},{"lineNumber":41,"author":{"gitId":"Jingwencloud"},"content":"        if (group \u003d\u003d null) {","lastModifiedDate":"2021-10-28"},{"lineNumber":42,"author":{"gitId":"Jingwencloud"},"content":"            throw new CommandException(MESSAGE_FINDEXPENSESCOMMAND_GROUP_NOT_FOUND);","lastModifiedDate":"2021-10-28"},{"lineNumber":43,"author":{"gitId":"Jingwencloud"},"content":"        }","lastModifiedDate":"2021-10-28"},{"lineNumber":44,"author":{"gitId":"Jingwencloud"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":45,"author":{"gitId":"Jingwencloud"},"content":"        model.setExpenses(group);","lastModifiedDate":"2021-10-12"},{"lineNumber":46,"author":{"gitId":"Jingwencloud"},"content":"        model.updateFilteredExpenseList(predicate);","lastModifiedDate":"2021-10-12"},{"lineNumber":47,"author":{"gitId":"Jingwencloud"},"content":"        return new CommandResult(","lastModifiedDate":"2021-10-12"},{"lineNumber":48,"author":{"gitId":"Jingwencloud"},"content":"            String.format(Messages.MESSAGE_EXPENSES_LISTED_OVERVIEW, model.getExpenses().size()),","lastModifiedDate":"2021-10-12"},{"lineNumber":49,"author":{"gitId":"ramapriyan912001"},"content":"            false, false, false, false,","lastModifiedDate":"2021-10-21"},{"lineNumber":50,"author":{"gitId":"ramapriyan912001"},"content":"            true, false, false);","lastModifiedDate":"2021-10-21"},{"lineNumber":51,"author":{"gitId":"Jingwencloud"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":52,"author":{"gitId":"Jingwencloud"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":53,"author":{"gitId":"Jingwencloud"},"content":"    @Override","lastModifiedDate":"2021-10-12"},{"lineNumber":54,"author":{"gitId":"Jingwencloud"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-12"},{"lineNumber":55,"author":{"gitId":"Jingwencloud"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2021-10-12"},{"lineNumber":56,"author":{"gitId":"Jingwencloud"},"content":"            return true;","lastModifiedDate":"2021-10-12"},{"lineNumber":57,"author":{"gitId":"Jingwencloud"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":58,"author":{"gitId":"Jingwencloud"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":59,"author":{"gitId":"Jingwencloud"},"content":"        if (!(other instanceof FindExpensesCommand)) { // instanceof handles nulls","lastModifiedDate":"2021-10-12"},{"lineNumber":60,"author":{"gitId":"Jingwencloud"},"content":"            return false;","lastModifiedDate":"2021-10-12"},{"lineNumber":61,"author":{"gitId":"Jingwencloud"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":62,"author":{"gitId":"Jingwencloud"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":63,"author":{"gitId":"Jingwencloud"},"content":"        return predicate.equals(((FindExpensesCommand) other).predicate); // state check","lastModifiedDate":"2021-10-12"},{"lineNumber":64,"author":{"gitId":"Jingwencloud"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":65,"author":{"gitId":"Jingwencloud"},"content":"}","lastModifiedDate":"2021-10-12"}],"authorContributionMap":{"Jingwencloud":62,"chrus-chong":1,"ramapriyan912001":2}},{"path":"src/main/java/seedu/awe/logic/commands/FindGroupsCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"marcuspeh"},"content":"package seedu.awe.logic.commands;","lastModifiedDate":"2021-10-10"},{"lineNumber":2,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":3,"author":{"gitId":"marcuspeh"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-10"},{"lineNumber":4,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":5,"author":{"gitId":"marcuspeh"},"content":"import seedu.awe.commons.core.Messages;","lastModifiedDate":"2021-10-10"},{"lineNumber":6,"author":{"gitId":"marcuspeh"},"content":"import seedu.awe.model.Model;","lastModifiedDate":"2021-10-10"},{"lineNumber":7,"author":{"gitId":"marcuspeh"},"content":"import seedu.awe.model.group.GroupContainsKeywordsPredicate;","lastModifiedDate":"2021-10-10"},{"lineNumber":8,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":9,"author":{"gitId":"marcuspeh"},"content":"/**","lastModifiedDate":"2021-10-10"},{"lineNumber":10,"author":{"gitId":"marcuspeh"},"content":" * Finds and lists all persons in awe book whose name contains any of the argument keywords.","lastModifiedDate":"2021-10-10"},{"lineNumber":11,"author":{"gitId":"marcuspeh"},"content":" * Keyword matching is case insensitive.","lastModifiedDate":"2021-10-10"},{"lineNumber":12,"author":{"gitId":"marcuspeh"},"content":" */","lastModifiedDate":"2021-10-10"},{"lineNumber":13,"author":{"gitId":"marcuspeh"},"content":"public class FindGroupsCommand extends Command {","lastModifiedDate":"2021-10-10"},{"lineNumber":14,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":15,"author":{"gitId":"marcuspeh"},"content":"    public static final String COMMAND_WORD \u003d \"findgroups\";","lastModifiedDate":"2021-10-10"},{"lineNumber":16,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":17,"author":{"gitId":"marcuspeh"},"content":"    private final GroupContainsKeywordsPredicate predicate;","lastModifiedDate":"2021-10-10"},{"lineNumber":18,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":19,"author":{"gitId":"marcuspeh"},"content":"    public FindGroupsCommand(GroupContainsKeywordsPredicate predicate) {","lastModifiedDate":"2021-10-10"},{"lineNumber":20,"author":{"gitId":"marcuspeh"},"content":"        this.predicate \u003d predicate;","lastModifiedDate":"2021-10-10"},{"lineNumber":21,"author":{"gitId":"marcuspeh"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":22,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":23,"author":{"gitId":"marcuspeh"},"content":"    @Override","lastModifiedDate":"2021-10-10"},{"lineNumber":24,"author":{"gitId":"marcuspeh"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2021-10-10"},{"lineNumber":25,"author":{"gitId":"marcuspeh"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-10-10"},{"lineNumber":26,"author":{"gitId":"marcuspeh"},"content":"        model.updateFilteredGroupList(predicate);","lastModifiedDate":"2021-10-10"},{"lineNumber":27,"author":{"gitId":"marcuspeh"},"content":"        return new CommandResult(","lastModifiedDate":"2021-10-10"},{"lineNumber":28,"author":{"gitId":"marcuspeh"},"content":"                String.format(Messages.MESSAGE_GROUPS_LISTED_OVERVIEW, model.getFilteredGroupList().size()),","lastModifiedDate":"2021-10-10"},{"lineNumber":29,"author":{"gitId":"ramapriyan912001"},"content":"                false, false, true, false,","lastModifiedDate":"2021-10-21"},{"lineNumber":30,"author":{"gitId":"ramapriyan912001"},"content":"                false, false, false);","lastModifiedDate":"2021-10-21"},{"lineNumber":31,"author":{"gitId":"marcuspeh"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":32,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":33,"author":{"gitId":"marcuspeh"},"content":"    @Override","lastModifiedDate":"2021-10-10"},{"lineNumber":34,"author":{"gitId":"marcuspeh"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-10"},{"lineNumber":35,"author":{"gitId":"marcuspeh"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2021-10-10"},{"lineNumber":36,"author":{"gitId":"marcuspeh"},"content":"            return true;","lastModifiedDate":"2021-10-10"},{"lineNumber":37,"author":{"gitId":"marcuspeh"},"content":"        }","lastModifiedDate":"2021-10-10"},{"lineNumber":38,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":39,"author":{"gitId":"marcuspeh"},"content":"        if (!(other instanceof FindGroupsCommand)) { // instanceof handles nulls","lastModifiedDate":"2021-10-10"},{"lineNumber":40,"author":{"gitId":"marcuspeh"},"content":"            return false;","lastModifiedDate":"2021-10-10"},{"lineNumber":41,"author":{"gitId":"marcuspeh"},"content":"        }","lastModifiedDate":"2021-10-10"},{"lineNumber":42,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":43,"author":{"gitId":"marcuspeh"},"content":"        return predicate.equals(((FindGroupsCommand) other).predicate); // state check","lastModifiedDate":"2021-10-10"},{"lineNumber":44,"author":{"gitId":"marcuspeh"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":45,"author":{"gitId":"marcuspeh"},"content":"}","lastModifiedDate":"2021-10-10"}],"authorContributionMap":{"marcuspeh":43,"ramapriyan912001":2}},{"path":"src/main/java/seedu/awe/logic/commands/GroupAddContactCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"chrus-chong"},"content":"package seedu.awe.logic.commands;","lastModifiedDate":"2021-10-11"},{"lineNumber":2,"author":{"gitId":"chrus-chong"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-11"},{"lineNumber":3,"author":{"gitId":"chrus-chong"},"content":"import static seedu.awe.commons.core.Messages.MESSAGE_GROUPADDCONTACTCOMMAND_DUPLICATE_PERSON;","lastModifiedDate":"2021-10-25"},{"lineNumber":4,"author":{"gitId":"chrus-chong"},"content":"import static seedu.awe.commons.core.Messages.MESSAGE_GROUPADDCONTACTCOMMAND_ERROR;","lastModifiedDate":"2021-10-25"},{"lineNumber":5,"author":{"gitId":"chrus-chong"},"content":"import static seedu.awe.commons.core.Messages.MESSAGE_GROUPADDCONTACTCOMMAND_SUCCESS;","lastModifiedDate":"2021-10-25"},{"lineNumber":6,"author":{"gitId":"chrus-chong"},"content":"import static seedu.awe.commons.core.Messages.MESSAGE_NONEXISTENT_GROUP;","lastModifiedDate":"2021-10-25"},{"lineNumber":7,"author":{"gitId":"chrus-chong"},"content":"import static seedu.awe.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2021-10-11"},{"lineNumber":8,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":9,"author":{"gitId":"chrus-chong"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-11"},{"lineNumber":10,"author":{"gitId":"chrus-chong"},"content":"import java.util.Objects;","lastModifiedDate":"2021-10-12"},{"lineNumber":11,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":12,"author":{"gitId":"chrus-chong"},"content":"import seedu.awe.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-10-11"},{"lineNumber":13,"author":{"gitId":"chrus-chong"},"content":"import seedu.awe.model.Model;","lastModifiedDate":"2021-10-11"},{"lineNumber":14,"author":{"gitId":"chrus-chong"},"content":"import seedu.awe.model.group.Group;","lastModifiedDate":"2021-10-11"},{"lineNumber":15,"author":{"gitId":"chrus-chong"},"content":"import seedu.awe.model.group.GroupName;","lastModifiedDate":"2021-10-11"},{"lineNumber":16,"author":{"gitId":"chrus-chong"},"content":"import seedu.awe.model.person.Person;","lastModifiedDate":"2021-10-11"},{"lineNumber":17,"author":{"gitId":"marcuspeh"},"content":"import seedu.awe.model.person.exceptions.DuplicatePersonException;","lastModifiedDate":"2021-10-27"},{"lineNumber":18,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":19,"author":{"gitId":"chrus-chong"},"content":"public class GroupAddContactCommand extends Command {","lastModifiedDate":"2021-10-20"},{"lineNumber":20,"author":{"gitId":"chrus-chong"},"content":"    public static final String COMMAND_WORD \u003d \"groupaddcontact\";","lastModifiedDate":"2021-10-20"},{"lineNumber":21,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":22,"author":{"gitId":"chrus-chong"},"content":"    private final GroupName groupName;","lastModifiedDate":"2021-10-11"},{"lineNumber":23,"author":{"gitId":"chrus-chong"},"content":"    private final ArrayList\u003cPerson\u003e newMembers;","lastModifiedDate":"2021-10-11"},{"lineNumber":24,"author":{"gitId":"chrus-chong"},"content":"    private final boolean isValidCommand;","lastModifiedDate":"2021-10-11"},{"lineNumber":25,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":26,"author":{"gitId":"chrus-chong"},"content":"    /**","lastModifiedDate":"2021-10-11"},{"lineNumber":27,"author":{"gitId":"chrus-chong"},"content":"     * Creates a GroupAddContactCommand to add the specified {@code Person}","lastModifiedDate":"2021-10-20"},{"lineNumber":28,"author":{"gitId":"chrus-chong"},"content":"     */","lastModifiedDate":"2021-10-11"},{"lineNumber":29,"author":{"gitId":"chrus-chong"},"content":"    public GroupAddContactCommand(GroupName groupName, ArrayList\u003cPerson\u003e newMembers, boolean isValidCommand) {","lastModifiedDate":"2021-10-20"},{"lineNumber":30,"author":{"gitId":"chrus-chong"},"content":"        requireAllNonNull(groupName, newMembers, isValidCommand);","lastModifiedDate":"2021-10-11"},{"lineNumber":31,"author":{"gitId":"chrus-chong"},"content":"        this.groupName \u003d groupName;","lastModifiedDate":"2021-10-11"},{"lineNumber":32,"author":{"gitId":"chrus-chong"},"content":"        this.newMembers \u003d newMembers;","lastModifiedDate":"2021-10-11"},{"lineNumber":33,"author":{"gitId":"chrus-chong"},"content":"        this.isValidCommand \u003d isValidCommand;","lastModifiedDate":"2021-10-11"},{"lineNumber":34,"author":{"gitId":"chrus-chong"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":35,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":36,"author":{"gitId":"chrus-chong"},"content":"    public GroupName getGroupName() {","lastModifiedDate":"2021-10-11"},{"lineNumber":37,"author":{"gitId":"chrus-chong"},"content":"        return groupName;","lastModifiedDate":"2021-10-11"},{"lineNumber":38,"author":{"gitId":"chrus-chong"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":39,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":40,"author":{"gitId":"chrus-chong"},"content":"    public ArrayList\u003cPerson\u003e getNewMembers() {","lastModifiedDate":"2021-10-11"},{"lineNumber":41,"author":{"gitId":"chrus-chong"},"content":"        return newMembers;","lastModifiedDate":"2021-10-11"},{"lineNumber":42,"author":{"gitId":"chrus-chong"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":43,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":44,"author":{"gitId":"chrus-chong"},"content":"    public boolean getValidCommand() {","lastModifiedDate":"2021-10-11"},{"lineNumber":45,"author":{"gitId":"chrus-chong"},"content":"        return isValidCommand;","lastModifiedDate":"2021-10-11"},{"lineNumber":46,"author":{"gitId":"chrus-chong"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":47,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":48,"author":{"gitId":"chrus-chong"},"content":"    /**","lastModifiedDate":"2021-10-11"},{"lineNumber":49,"author":{"gitId":"chrus-chong"},"content":"     * Returns int object tracking the number of non-matching members between this.newMembers and otherMembers.","lastModifiedDate":"2021-10-11"},{"lineNumber":50,"author":{"gitId":"chrus-chong"},"content":"     *","lastModifiedDate":"2021-10-11"},{"lineNumber":51,"author":{"gitId":"chrus-chong"},"content":"     * @param numberOfNonMatchingMembers int value to track the number of members in otherMembers","lastModifiedDate":"2021-10-11"},{"lineNumber":52,"author":{"gitId":"chrus-chong"},"content":"     *                                   that are not present in this.members.","lastModifiedDate":"2021-10-11"},{"lineNumber":53,"author":{"gitId":"chrus-chong"},"content":"     * @param member Person object that is being searched for in otherMembers.","lastModifiedDate":"2021-10-11"},{"lineNumber":54,"author":{"gitId":"chrus-chong"},"content":"     * @param otherMembers List of Person objects from another instance of GroupAddContactCommand.","lastModifiedDate":"2021-10-20"},{"lineNumber":55,"author":{"gitId":"chrus-chong"},"content":"     * @return int object to track the number of members in otherMembers that are not present in this.newMembers.","lastModifiedDate":"2021-10-11"},{"lineNumber":56,"author":{"gitId":"chrus-chong"},"content":"     */","lastModifiedDate":"2021-10-11"},{"lineNumber":57,"author":{"gitId":"chrus-chong"},"content":"    public int checkForMember(int numberOfNonMatchingMembers, Person member, ArrayList\u003cPerson\u003e otherMembers) {","lastModifiedDate":"2021-10-11"},{"lineNumber":58,"author":{"gitId":"chrus-chong"},"content":"        for (Person otherMember : otherMembers) {","lastModifiedDate":"2021-10-11"},{"lineNumber":59,"author":{"gitId":"chrus-chong"},"content":"            if (member.equals(otherMember)) {","lastModifiedDate":"2021-10-11"},{"lineNumber":60,"author":{"gitId":"chrus-chong"},"content":"                numberOfNonMatchingMembers--;","lastModifiedDate":"2021-10-11"},{"lineNumber":61,"author":{"gitId":"chrus-chong"},"content":"                break;","lastModifiedDate":"2021-10-11"},{"lineNumber":62,"author":{"gitId":"chrus-chong"},"content":"            }","lastModifiedDate":"2021-10-11"},{"lineNumber":63,"author":{"gitId":"chrus-chong"},"content":"        }","lastModifiedDate":"2021-10-11"},{"lineNumber":64,"author":{"gitId":"chrus-chong"},"content":"        return numberOfNonMatchingMembers;","lastModifiedDate":"2021-10-11"},{"lineNumber":65,"author":{"gitId":"chrus-chong"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":66,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":67,"author":{"gitId":"chrus-chong"},"content":"    /**","lastModifiedDate":"2021-10-11"},{"lineNumber":68,"author":{"gitId":"chrus-chong"},"content":"     * Returns a boolean object representing if this.newMembers contains the same Person objects as otherMembers.","lastModifiedDate":"2021-10-11"},{"lineNumber":69,"author":{"gitId":"chrus-chong"},"content":"     *","lastModifiedDate":"2021-10-11"},{"lineNumber":70,"author":{"gitId":"chrus-chong"},"content":"     * @param otherMembers List of Person objects from another instance of GroupAddContactCommand.","lastModifiedDate":"2021-10-20"},{"lineNumber":71,"author":{"gitId":"chrus-chong"},"content":"     * @return boolean object representing if this.newMembers contains the same Person objects as otherMembers.","lastModifiedDate":"2021-10-11"},{"lineNumber":72,"author":{"gitId":"chrus-chong"},"content":"     */","lastModifiedDate":"2021-10-11"},{"lineNumber":73,"author":{"gitId":"chrus-chong"},"content":"    public boolean checkSameMembers(ArrayList\u003cPerson\u003e otherMembers) {","lastModifiedDate":"2021-10-11"},{"lineNumber":74,"author":{"gitId":"chrus-chong"},"content":"        int numberOfNonMatchingMembers \u003d otherMembers.size();","lastModifiedDate":"2021-10-11"},{"lineNumber":75,"author":{"gitId":"chrus-chong"},"content":"        for (Person member : this.newMembers) {","lastModifiedDate":"2021-10-11"},{"lineNumber":76,"author":{"gitId":"chrus-chong"},"content":"            numberOfNonMatchingMembers \u003d checkForMember(numberOfNonMatchingMembers, member, otherMembers);","lastModifiedDate":"2021-10-11"},{"lineNumber":77,"author":{"gitId":"chrus-chong"},"content":"        }","lastModifiedDate":"2021-10-11"},{"lineNumber":78,"author":{"gitId":"chrus-chong"},"content":"        return numberOfNonMatchingMembers \u003d\u003d 0;","lastModifiedDate":"2021-10-11"},{"lineNumber":79,"author":{"gitId":"chrus-chong"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":80,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":81,"author":{"gitId":"chrus-chong"},"content":"    @Override","lastModifiedDate":"2021-10-11"},{"lineNumber":82,"author":{"gitId":"chrus-chong"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2021-10-11"},{"lineNumber":83,"author":{"gitId":"chrus-chong"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-10-11"},{"lineNumber":84,"author":{"gitId":"chrus-chong"},"content":"        if (!isValidCommand) {","lastModifiedDate":"2021-10-11"},{"lineNumber":85,"author":{"gitId":"chrus-chong"},"content":"            throw new CommandException(MESSAGE_GROUPADDCONTACTCOMMAND_ERROR);","lastModifiedDate":"2021-10-25"},{"lineNumber":86,"author":{"gitId":"chrus-chong"},"content":"        }","lastModifiedDate":"2021-10-11"},{"lineNumber":87,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":88,"author":{"gitId":"chrus-chong"},"content":"        Group oldGroup \u003d model.getGroupByName(groupName);","lastModifiedDate":"2021-10-11"},{"lineNumber":89,"author":{"gitId":"chrus-chong"},"content":"        if (Objects.isNull(oldGroup)) {","lastModifiedDate":"2021-10-12"},{"lineNumber":90,"author":{"gitId":"chrus-chong"},"content":"            throw new CommandException(String.format(MESSAGE_NONEXISTENT_GROUP, groupName));","lastModifiedDate":"2021-10-25"},{"lineNumber":91,"author":{"gitId":"chrus-chong"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":92,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":93,"author":{"gitId":"marcuspeh"},"content":"        Group newGroup \u003d oldGroup;","lastModifiedDate":"2021-10-27"},{"lineNumber":94,"author":{"gitId":"chrus-chong"},"content":"        for (Person newMember: newMembers) {","lastModifiedDate":"2021-10-29"},{"lineNumber":95,"author":{"gitId":"marcuspeh"},"content":"            try {","lastModifiedDate":"2021-10-27"},{"lineNumber":96,"author":{"gitId":"chrus-chong"},"content":"                newGroup \u003d newGroup.addMember(newMember);","lastModifiedDate":"2021-10-29"},{"lineNumber":97,"author":{"gitId":"marcuspeh"},"content":"            } catch (DuplicatePersonException exception) {","lastModifiedDate":"2021-10-27"},{"lineNumber":98,"author":{"gitId":"chrus-chong"},"content":"                throw new CommandException(","lastModifiedDate":"2021-10-25"},{"lineNumber":99,"author":{"gitId":"chrus-chong"},"content":"                        String.format(MESSAGE_GROUPADDCONTACTCOMMAND_DUPLICATE_PERSON, newMember.getName()));","lastModifiedDate":"2021-10-29"},{"lineNumber":100,"author":{"gitId":"chrus-chong"},"content":"            }","lastModifiedDate":"2021-10-11"},{"lineNumber":101,"author":{"gitId":"chrus-chong"},"content":"        }","lastModifiedDate":"2021-10-11"},{"lineNumber":102,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":103,"author":{"gitId":"chrus-chong"},"content":"        model.setGroup(oldGroup, newGroup);","lastModifiedDate":"2021-10-19"},{"lineNumber":104,"author":{"gitId":"chrus-chong"},"content":"        model.setAllMembersOfGroup(newGroup);","lastModifiedDate":"2021-10-19"},{"lineNumber":105,"author":{"gitId":"chrus-chong"},"content":"        return new CommandResult(MESSAGE_GROUPADDCONTACTCOMMAND_SUCCESS);","lastModifiedDate":"2021-10-25"},{"lineNumber":106,"author":{"gitId":"chrus-chong"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":107,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":108,"author":{"gitId":"chrus-chong"},"content":"    @Override","lastModifiedDate":"2021-10-11"},{"lineNumber":109,"author":{"gitId":"chrus-chong"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-11"},{"lineNumber":110,"author":{"gitId":"chrus-chong"},"content":"        if (!(other instanceof GroupAddContactCommand)) {","lastModifiedDate":"2021-10-20"},{"lineNumber":111,"author":{"gitId":"chrus-chong"},"content":"            return false;","lastModifiedDate":"2021-10-11"},{"lineNumber":112,"author":{"gitId":"chrus-chong"},"content":"        }","lastModifiedDate":"2021-10-11"},{"lineNumber":113,"author":{"gitId":"chrus-chong"},"content":"        GroupAddContactCommand otherCommand \u003d (GroupAddContactCommand) other;","lastModifiedDate":"2021-10-20"},{"lineNumber":114,"author":{"gitId":"chrus-chong"},"content":"        if (this.isValidCommand \u003d\u003d otherCommand.getValidCommand()","lastModifiedDate":"2021-10-12"},{"lineNumber":115,"author":{"gitId":"chrus-chong"},"content":"                \u0026\u0026 checkSameMembers(otherCommand.getNewMembers())","lastModifiedDate":"2021-10-11"},{"lineNumber":116,"author":{"gitId":"chrus-chong"},"content":"                \u0026\u0026 this.groupName.equals(otherCommand.getGroupName())) {","lastModifiedDate":"2021-10-11"},{"lineNumber":117,"author":{"gitId":"chrus-chong"},"content":"            return true;","lastModifiedDate":"2021-10-11"},{"lineNumber":118,"author":{"gitId":"chrus-chong"},"content":"        }","lastModifiedDate":"2021-10-11"},{"lineNumber":119,"author":{"gitId":"chrus-chong"},"content":"        return false;","lastModifiedDate":"2021-10-11"},{"lineNumber":120,"author":{"gitId":"chrus-chong"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":121,"author":{"gitId":"chrus-chong"},"content":"}","lastModifiedDate":"2021-10-11"}],"authorContributionMap":{"marcuspeh":6,"chrus-chong":115}},{"path":"src/main/java/seedu/awe/logic/commands/GroupAddTagCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"chrus-chong"},"content":"package seedu.awe.logic.commands;","lastModifiedDate":"2021-10-20"},{"lineNumber":2,"author":{"gitId":"chrus-chong"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-20"},{"lineNumber":3,"author":{"gitId":"chrus-chong"},"content":"import static seedu.awe.commons.core.Messages.MESSAGE_GROUPADDTAGCOMMAND_DUPLICATE_TAG;","lastModifiedDate":"2021-10-25"},{"lineNumber":4,"author":{"gitId":"chrus-chong"},"content":"import static seedu.awe.commons.core.Messages.MESSAGE_GROUPADDTAGCOMMAND_SUCCESS;","lastModifiedDate":"2021-10-25"},{"lineNumber":5,"author":{"gitId":"chrus-chong"},"content":"import static seedu.awe.commons.core.Messages.MESSAGE_NONEXISTENT_GROUP;","lastModifiedDate":"2021-10-25"},{"lineNumber":6,"author":{"gitId":"chrus-chong"},"content":"import static seedu.awe.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2021-10-20"},{"lineNumber":7,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":8,"author":{"gitId":"chrus-chong"},"content":"import java.util.Objects;","lastModifiedDate":"2021-10-20"},{"lineNumber":9,"author":{"gitId":"chrus-chong"},"content":"import java.util.Set;","lastModifiedDate":"2021-10-20"},{"lineNumber":10,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":11,"author":{"gitId":"chrus-chong"},"content":"import seedu.awe.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-10-20"},{"lineNumber":12,"author":{"gitId":"chrus-chong"},"content":"import seedu.awe.model.Model;","lastModifiedDate":"2021-10-20"},{"lineNumber":13,"author":{"gitId":"chrus-chong"},"content":"import seedu.awe.model.group.Group;","lastModifiedDate":"2021-10-20"},{"lineNumber":14,"author":{"gitId":"chrus-chong"},"content":"import seedu.awe.model.group.GroupName;","lastModifiedDate":"2021-10-20"},{"lineNumber":15,"author":{"gitId":"chrus-chong"},"content":"import seedu.awe.model.tag.Tag;","lastModifiedDate":"2021-10-20"},{"lineNumber":16,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":17,"author":{"gitId":"chrus-chong"},"content":"public class GroupAddTagCommand extends Command {","lastModifiedDate":"2021-10-20"},{"lineNumber":18,"author":{"gitId":"chrus-chong"},"content":"    public static final String COMMAND_WORD \u003d \"groupaddtag\";","lastModifiedDate":"2021-10-20"},{"lineNumber":19,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":20,"author":{"gitId":"chrus-chong"},"content":"    private final GroupName groupName;","lastModifiedDate":"2021-10-20"},{"lineNumber":21,"author":{"gitId":"chrus-chong"},"content":"    private final Set\u003cTag\u003e newTags;","lastModifiedDate":"2021-10-20"},{"lineNumber":22,"author":{"gitId":"chrus-chong"},"content":"    private final boolean isValidCommand;","lastModifiedDate":"2021-10-20"},{"lineNumber":23,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":24,"author":{"gitId":"chrus-chong"},"content":"    /**","lastModifiedDate":"2021-10-20"},{"lineNumber":25,"author":{"gitId":"chrus-chong"},"content":"     * Creates a GroupAddTagCommand to add the specified {@code Tag}","lastModifiedDate":"2021-10-20"},{"lineNumber":26,"author":{"gitId":"chrus-chong"},"content":"     */","lastModifiedDate":"2021-10-20"},{"lineNumber":27,"author":{"gitId":"chrus-chong"},"content":"    public GroupAddTagCommand(GroupName groupName, Set\u003cTag\u003e newTags, boolean isValidCommand) {","lastModifiedDate":"2021-10-20"},{"lineNumber":28,"author":{"gitId":"chrus-chong"},"content":"        requireAllNonNull(groupName, newTags, isValidCommand);","lastModifiedDate":"2021-10-20"},{"lineNumber":29,"author":{"gitId":"chrus-chong"},"content":"        this.groupName \u003d groupName;","lastModifiedDate":"2021-10-20"},{"lineNumber":30,"author":{"gitId":"chrus-chong"},"content":"        this.newTags \u003d newTags;","lastModifiedDate":"2021-10-20"},{"lineNumber":31,"author":{"gitId":"chrus-chong"},"content":"        this.isValidCommand \u003d isValidCommand;","lastModifiedDate":"2021-10-20"},{"lineNumber":32,"author":{"gitId":"chrus-chong"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":33,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":34,"author":{"gitId":"chrus-chong"},"content":"    public GroupName getGroupName() {","lastModifiedDate":"2021-10-20"},{"lineNumber":35,"author":{"gitId":"chrus-chong"},"content":"        return groupName;","lastModifiedDate":"2021-10-20"},{"lineNumber":36,"author":{"gitId":"chrus-chong"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":37,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":38,"author":{"gitId":"chrus-chong"},"content":"    public Set\u003cTag\u003e getNewTags() {","lastModifiedDate":"2021-10-20"},{"lineNumber":39,"author":{"gitId":"chrus-chong"},"content":"        return newTags;","lastModifiedDate":"2021-10-20"},{"lineNumber":40,"author":{"gitId":"chrus-chong"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":41,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":42,"author":{"gitId":"chrus-chong"},"content":"    public boolean getValidCommand() {","lastModifiedDate":"2021-10-20"},{"lineNumber":43,"author":{"gitId":"chrus-chong"},"content":"        return isValidCommand;","lastModifiedDate":"2021-10-20"},{"lineNumber":44,"author":{"gitId":"chrus-chong"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":45,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":46,"author":{"gitId":"chrus-chong"},"content":"    /**","lastModifiedDate":"2021-10-20"},{"lineNumber":47,"author":{"gitId":"chrus-chong"},"content":"     * Returns int object tracking the number of non-matching tags between this.newTags and otherTags.","lastModifiedDate":"2021-10-20"},{"lineNumber":48,"author":{"gitId":"chrus-chong"},"content":"     *","lastModifiedDate":"2021-10-20"},{"lineNumber":49,"author":{"gitId":"chrus-chong"},"content":"     * @param numberOfNonMatchingTags int value to track the number of tags in otherTags","lastModifiedDate":"2021-10-20"},{"lineNumber":50,"author":{"gitId":"chrus-chong"},"content":"     *                                   that are not present in this.newTags.","lastModifiedDate":"2021-10-20"},{"lineNumber":51,"author":{"gitId":"chrus-chong"},"content":"     * @param tag Tag object that is being searched for in otherTags.","lastModifiedDate":"2021-10-20"},{"lineNumber":52,"author":{"gitId":"chrus-chong"},"content":"     * @param otherTags List of Tag objects from another instance of GroupAddTagCommand.","lastModifiedDate":"2021-10-20"},{"lineNumber":53,"author":{"gitId":"chrus-chong"},"content":"     * @return int object to track the number of tags in otherTags that are not present in this.newTags.","lastModifiedDate":"2021-10-20"},{"lineNumber":54,"author":{"gitId":"chrus-chong"},"content":"     */","lastModifiedDate":"2021-10-20"},{"lineNumber":55,"author":{"gitId":"chrus-chong"},"content":"    public int checkForTag(int numberOfNonMatchingTags, Tag tag, Set\u003cTag\u003e otherTags) {","lastModifiedDate":"2021-10-20"},{"lineNumber":56,"author":{"gitId":"chrus-chong"},"content":"        for (Tag otherTag : otherTags) {","lastModifiedDate":"2021-10-20"},{"lineNumber":57,"author":{"gitId":"chrus-chong"},"content":"            if (tag.equals(otherTag)) {","lastModifiedDate":"2021-10-20"},{"lineNumber":58,"author":{"gitId":"chrus-chong"},"content":"                numberOfNonMatchingTags--;","lastModifiedDate":"2021-10-20"},{"lineNumber":59,"author":{"gitId":"chrus-chong"},"content":"                break;","lastModifiedDate":"2021-10-20"},{"lineNumber":60,"author":{"gitId":"chrus-chong"},"content":"            }","lastModifiedDate":"2021-10-20"},{"lineNumber":61,"author":{"gitId":"chrus-chong"},"content":"        }","lastModifiedDate":"2021-10-20"},{"lineNumber":62,"author":{"gitId":"chrus-chong"},"content":"        return numberOfNonMatchingTags;","lastModifiedDate":"2021-10-20"},{"lineNumber":63,"author":{"gitId":"chrus-chong"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":64,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":65,"author":{"gitId":"chrus-chong"},"content":"    /**","lastModifiedDate":"2021-10-20"},{"lineNumber":66,"author":{"gitId":"chrus-chong"},"content":"     * Returns a boolean object representing if this.newTags contains the same Tag objects as otherTags.","lastModifiedDate":"2021-10-20"},{"lineNumber":67,"author":{"gitId":"chrus-chong"},"content":"     *","lastModifiedDate":"2021-10-20"},{"lineNumber":68,"author":{"gitId":"chrus-chong"},"content":"     * @param otherTags List of Tag objects from another instance of GroupAddTagCommand.","lastModifiedDate":"2021-10-20"},{"lineNumber":69,"author":{"gitId":"chrus-chong"},"content":"     * @return boolean object representing if this.newTags contains the same Tag objects as otherTags.","lastModifiedDate":"2021-10-20"},{"lineNumber":70,"author":{"gitId":"chrus-chong"},"content":"     */","lastModifiedDate":"2021-10-20"},{"lineNumber":71,"author":{"gitId":"chrus-chong"},"content":"    public boolean checkSameTags(Set\u003cTag\u003e otherTags) {","lastModifiedDate":"2021-10-20"},{"lineNumber":72,"author":{"gitId":"chrus-chong"},"content":"        int numberOfNonMatchingTags \u003d otherTags.size();","lastModifiedDate":"2021-10-20"},{"lineNumber":73,"author":{"gitId":"chrus-chong"},"content":"        for (Tag tag : this.newTags) {","lastModifiedDate":"2021-10-20"},{"lineNumber":74,"author":{"gitId":"chrus-chong"},"content":"            checkForTag(numberOfNonMatchingTags, tag, otherTags);","lastModifiedDate":"2021-10-20"},{"lineNumber":75,"author":{"gitId":"chrus-chong"},"content":"        }","lastModifiedDate":"2021-10-20"},{"lineNumber":76,"author":{"gitId":"chrus-chong"},"content":"        return numberOfNonMatchingTags \u003d\u003d 0;","lastModifiedDate":"2021-10-20"},{"lineNumber":77,"author":{"gitId":"chrus-chong"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":78,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":79,"author":{"gitId":"chrus-chong"},"content":"    @Override","lastModifiedDate":"2021-10-20"},{"lineNumber":80,"author":{"gitId":"chrus-chong"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2021-10-20"},{"lineNumber":81,"author":{"gitId":"chrus-chong"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-10-20"},{"lineNumber":82,"author":{"gitId":"chrus-chong"},"content":"        if (!isValidCommand) {","lastModifiedDate":"2021-10-20"},{"lineNumber":83,"author":{"gitId":"chrus-chong"},"content":"            throw new CommandException(Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-20"},{"lineNumber":84,"author":{"gitId":"chrus-chong"},"content":"        }","lastModifiedDate":"2021-10-20"},{"lineNumber":85,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":86,"author":{"gitId":"chrus-chong"},"content":"        Group oldGroup \u003d model.getGroupByName(groupName);","lastModifiedDate":"2021-10-20"},{"lineNumber":87,"author":{"gitId":"chrus-chong"},"content":"        if (Objects.isNull(oldGroup)) {","lastModifiedDate":"2021-10-20"},{"lineNumber":88,"author":{"gitId":"chrus-chong"},"content":"            throw new CommandException(String.format(MESSAGE_NONEXISTENT_GROUP, groupName));","lastModifiedDate":"2021-10-20"},{"lineNumber":89,"author":{"gitId":"chrus-chong"},"content":"        }","lastModifiedDate":"2021-10-20"},{"lineNumber":90,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":91,"author":{"gitId":"chrus-chong"},"content":"        Set\u003cTag\u003e tagsFromOldGroup \u003d oldGroup.getTags();","lastModifiedDate":"2021-10-20"},{"lineNumber":92,"author":{"gitId":"chrus-chong"},"content":"        for (Tag tag : newTags) {","lastModifiedDate":"2021-10-20"},{"lineNumber":93,"author":{"gitId":"chrus-chong"},"content":"            if (tagsFromOldGroup.contains(tag)) {","lastModifiedDate":"2021-10-20"},{"lineNumber":94,"author":{"gitId":"chrus-chong"},"content":"                throw new CommandException(String.format(MESSAGE_GROUPADDTAGCOMMAND_DUPLICATE_TAG, tag.getTagName()));","lastModifiedDate":"2021-10-25"},{"lineNumber":95,"author":{"gitId":"chrus-chong"},"content":"            }","lastModifiedDate":"2021-10-20"},{"lineNumber":96,"author":{"gitId":"chrus-chong"},"content":"        }","lastModifiedDate":"2021-10-20"},{"lineNumber":97,"author":{"gitId":"marcuspeh"},"content":"        Group newGroup \u003d oldGroup.addTag(newTags);","lastModifiedDate":"2021-10-27"},{"lineNumber":98,"author":{"gitId":"chrus-chong"},"content":"        model.setGroup(oldGroup, newGroup);","lastModifiedDate":"2021-10-20"},{"lineNumber":99,"author":{"gitId":"chrus-chong"},"content":"        return new CommandResult(MESSAGE_GROUPADDTAGCOMMAND_SUCCESS);","lastModifiedDate":"2021-10-25"},{"lineNumber":100,"author":{"gitId":"chrus-chong"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":101,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":102,"author":{"gitId":"chrus-chong"},"content":"    @Override","lastModifiedDate":"2021-10-20"},{"lineNumber":103,"author":{"gitId":"chrus-chong"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-20"},{"lineNumber":104,"author":{"gitId":"chrus-chong"},"content":"        if (!(other instanceof GroupAddTagCommand)) {","lastModifiedDate":"2021-10-20"},{"lineNumber":105,"author":{"gitId":"chrus-chong"},"content":"            return false;","lastModifiedDate":"2021-10-20"},{"lineNumber":106,"author":{"gitId":"chrus-chong"},"content":"        }","lastModifiedDate":"2021-10-20"},{"lineNumber":107,"author":{"gitId":"chrus-chong"},"content":"        GroupAddTagCommand otherCommand \u003d (GroupAddTagCommand) other;","lastModifiedDate":"2021-10-20"},{"lineNumber":108,"author":{"gitId":"chrus-chong"},"content":"        if (this.isValidCommand \u003d\u003d otherCommand.getValidCommand()","lastModifiedDate":"2021-10-20"},{"lineNumber":109,"author":{"gitId":"chrus-chong"},"content":"                \u0026\u0026 checkSameTags(otherCommand.getNewTags())","lastModifiedDate":"2021-10-20"},{"lineNumber":110,"author":{"gitId":"chrus-chong"},"content":"                \u0026\u0026 this.groupName.equals(otherCommand.getGroupName())) {","lastModifiedDate":"2021-10-20"},{"lineNumber":111,"author":{"gitId":"chrus-chong"},"content":"            return true;","lastModifiedDate":"2021-10-20"},{"lineNumber":112,"author":{"gitId":"chrus-chong"},"content":"        }","lastModifiedDate":"2021-10-20"},{"lineNumber":113,"author":{"gitId":"chrus-chong"},"content":"        return false;","lastModifiedDate":"2021-10-20"},{"lineNumber":114,"author":{"gitId":"chrus-chong"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":115,"author":{"gitId":"chrus-chong"},"content":"}","lastModifiedDate":"2021-10-20"},{"lineNumber":116,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-10-20"}],"authorContributionMap":{"marcuspeh":2,"chrus-chong":114}},{"path":"src/main/java/seedu/awe/logic/commands/GroupEditNameCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"chrus-chong"},"content":"package seedu.awe.logic.commands;","lastModifiedDate":"2021-10-12"},{"lineNumber":2,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":3,"author":{"gitId":"chrus-chong"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-12"},{"lineNumber":4,"author":{"gitId":"chrus-chong"},"content":"import static seedu.awe.commons.core.Messages.MESSAGE_GROUPEDITNAMECOMMAND_ERROR;","lastModifiedDate":"2021-10-25"},{"lineNumber":5,"author":{"gitId":"chrus-chong"},"content":"import static seedu.awe.commons.core.Messages.MESSAGE_GROUPEDITNAMECOMMAND_SUCCESS;","lastModifiedDate":"2021-10-25"},{"lineNumber":6,"author":{"gitId":"chrus-chong"},"content":"import static seedu.awe.commons.core.Messages.MESSAGE_GROUPEDITNAMECOMMAND_USAGE;","lastModifiedDate":"2021-10-25"},{"lineNumber":7,"author":{"gitId":"chrus-chong"},"content":"import static seedu.awe.commons.core.Messages.MESSAGE_NONEXISTENT_GROUP;","lastModifiedDate":"2021-10-25"},{"lineNumber":8,"author":{"gitId":"chrus-chong"},"content":"import static seedu.awe.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2021-10-12"},{"lineNumber":9,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":10,"author":{"gitId":"chrus-chong"},"content":"import java.util.Objects;","lastModifiedDate":"2021-10-12"},{"lineNumber":11,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":12,"author":{"gitId":"chrus-chong"},"content":"import seedu.awe.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-10-12"},{"lineNumber":13,"author":{"gitId":"chrus-chong"},"content":"import seedu.awe.model.Model;","lastModifiedDate":"2021-10-12"},{"lineNumber":14,"author":{"gitId":"chrus-chong"},"content":"import seedu.awe.model.group.Group;","lastModifiedDate":"2021-10-12"},{"lineNumber":15,"author":{"gitId":"chrus-chong"},"content":"import seedu.awe.model.group.GroupName;","lastModifiedDate":"2021-10-12"},{"lineNumber":16,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":17,"author":{"gitId":"chrus-chong"},"content":"public class GroupEditNameCommand extends Command {","lastModifiedDate":"2021-10-12"},{"lineNumber":18,"author":{"gitId":"chrus-chong"},"content":"    public static final String COMMAND_WORD \u003d \"groupeditname\";","lastModifiedDate":"2021-10-12"},{"lineNumber":19,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":20,"author":{"gitId":"chrus-chong"},"content":"    private final GroupName oldGroupName;","lastModifiedDate":"2021-10-12"},{"lineNumber":21,"author":{"gitId":"chrus-chong"},"content":"    private final GroupName newGroupName;","lastModifiedDate":"2021-10-12"},{"lineNumber":22,"author":{"gitId":"chrus-chong"},"content":"    private final boolean isValidCommand;","lastModifiedDate":"2021-10-12"},{"lineNumber":23,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":24,"author":{"gitId":"chrus-chong"},"content":"    /**","lastModifiedDate":"2021-10-12"},{"lineNumber":25,"author":{"gitId":"chrus-chong"},"content":"     * Creates a GroupEditNameCommand to edit the specified {@code GroupName}","lastModifiedDate":"2021-10-15"},{"lineNumber":26,"author":{"gitId":"chrus-chong"},"content":"     */","lastModifiedDate":"2021-10-12"},{"lineNumber":27,"author":{"gitId":"chrus-chong"},"content":"    public GroupEditNameCommand(GroupName oldGroupName, GroupName newGroupName, boolean isValidCommand) {","lastModifiedDate":"2021-10-12"},{"lineNumber":28,"author":{"gitId":"chrus-chong"},"content":"        requireAllNonNull(newGroupName, isValidCommand);","lastModifiedDate":"2021-10-12"},{"lineNumber":29,"author":{"gitId":"chrus-chong"},"content":"        this.oldGroupName \u003d oldGroupName;","lastModifiedDate":"2021-10-12"},{"lineNumber":30,"author":{"gitId":"chrus-chong"},"content":"        this.newGroupName \u003d newGroupName;","lastModifiedDate":"2021-10-12"},{"lineNumber":31,"author":{"gitId":"chrus-chong"},"content":"        this.isValidCommand \u003d isValidCommand;","lastModifiedDate":"2021-10-12"},{"lineNumber":32,"author":{"gitId":"chrus-chong"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":33,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":34,"author":{"gitId":"chrus-chong"},"content":"    public GroupName getOldGroupName() {","lastModifiedDate":"2021-10-12"},{"lineNumber":35,"author":{"gitId":"chrus-chong"},"content":"        return oldGroupName;","lastModifiedDate":"2021-10-12"},{"lineNumber":36,"author":{"gitId":"chrus-chong"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":37,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":38,"author":{"gitId":"chrus-chong"},"content":"    public GroupName getNewGroupName() {","lastModifiedDate":"2021-10-12"},{"lineNumber":39,"author":{"gitId":"chrus-chong"},"content":"        return newGroupName;","lastModifiedDate":"2021-10-12"},{"lineNumber":40,"author":{"gitId":"chrus-chong"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":41,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":42,"author":{"gitId":"chrus-chong"},"content":"    public boolean getValidCommand() {","lastModifiedDate":"2021-10-12"},{"lineNumber":43,"author":{"gitId":"chrus-chong"},"content":"        return isValidCommand;","lastModifiedDate":"2021-10-12"},{"lineNumber":44,"author":{"gitId":"chrus-chong"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":45,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":46,"author":{"gitId":"chrus-chong"},"content":"    @Override","lastModifiedDate":"2021-10-12"},{"lineNumber":47,"author":{"gitId":"chrus-chong"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2021-10-12"},{"lineNumber":48,"author":{"gitId":"chrus-chong"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-10-12"},{"lineNumber":49,"author":{"gitId":"chrus-chong"},"content":"        if (!isValidCommand) {","lastModifiedDate":"2021-10-12"},{"lineNumber":50,"author":{"gitId":"chrus-chong"},"content":"            throw new CommandException(MESSAGE_GROUPEDITNAMECOMMAND_ERROR + \"\\n\" + MESSAGE_GROUPEDITNAMECOMMAND_USAGE);","lastModifiedDate":"2021-10-25"},{"lineNumber":51,"author":{"gitId":"chrus-chong"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":52,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":53,"author":{"gitId":"chrus-chong"},"content":"        Group oldGroup \u003d model.getGroupByName(oldGroupName);","lastModifiedDate":"2021-10-12"},{"lineNumber":54,"author":{"gitId":"chrus-chong"},"content":"        if (Objects.isNull(oldGroup)) {","lastModifiedDate":"2021-10-12"},{"lineNumber":55,"author":{"gitId":"chrus-chong"},"content":"            throw new CommandException(String.format(MESSAGE_NONEXISTENT_GROUP, oldGroupName));","lastModifiedDate":"2021-10-12"},{"lineNumber":56,"author":{"gitId":"chrus-chong"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":57,"author":{"gitId":"marcuspeh"},"content":"        Group newGroup \u003d oldGroup.editName(newGroupName);","lastModifiedDate":"2021-10-27"},{"lineNumber":58,"author":{"gitId":"chrus-chong"},"content":"        model.setGroup(oldGroup, newGroup);","lastModifiedDate":"2021-10-19"},{"lineNumber":59,"author":{"gitId":"chrus-chong"},"content":"        model.setAllMembersOfGroup(newGroup);","lastModifiedDate":"2021-10-19"},{"lineNumber":60,"author":{"gitId":"chrus-chong"},"content":"        return new CommandResult(String.format(MESSAGE_GROUPEDITNAMECOMMAND_SUCCESS, newGroupName));","lastModifiedDate":"2021-10-25"},{"lineNumber":61,"author":{"gitId":"chrus-chong"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":62,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":63,"author":{"gitId":"chrus-chong"},"content":"    @Override","lastModifiedDate":"2021-10-12"},{"lineNumber":64,"author":{"gitId":"chrus-chong"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-12"},{"lineNumber":65,"author":{"gitId":"chrus-chong"},"content":"        if (!(other instanceof GroupEditNameCommand)) {","lastModifiedDate":"2021-10-12"},{"lineNumber":66,"author":{"gitId":"chrus-chong"},"content":"            return false;","lastModifiedDate":"2021-10-12"},{"lineNumber":67,"author":{"gitId":"chrus-chong"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":68,"author":{"gitId":"chrus-chong"},"content":"        GroupEditNameCommand otherCommand \u003d (GroupEditNameCommand) other;","lastModifiedDate":"2021-10-12"},{"lineNumber":69,"author":{"gitId":"chrus-chong"},"content":"        if (this.isValidCommand \u003d\u003d otherCommand.getValidCommand()","lastModifiedDate":"2021-10-12"},{"lineNumber":70,"author":{"gitId":"chrus-chong"},"content":"                \u0026\u0026 this.oldGroupName.equals(otherCommand.getOldGroupName())","lastModifiedDate":"2021-10-12"},{"lineNumber":71,"author":{"gitId":"chrus-chong"},"content":"                \u0026\u0026 this.newGroupName.equals(otherCommand.getNewGroupName())) {","lastModifiedDate":"2021-10-12"},{"lineNumber":72,"author":{"gitId":"chrus-chong"},"content":"            return true;","lastModifiedDate":"2021-10-12"},{"lineNumber":73,"author":{"gitId":"chrus-chong"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":74,"author":{"gitId":"chrus-chong"},"content":"        return false;","lastModifiedDate":"2021-10-12"},{"lineNumber":75,"author":{"gitId":"chrus-chong"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":76,"author":{"gitId":"chrus-chong"},"content":"}","lastModifiedDate":"2021-10-12"}],"authorContributionMap":{"marcuspeh":1,"chrus-chong":75}},{"path":"src/main/java/seedu/awe/logic/commands/GroupRemoveContactCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"chrus-chong"},"content":"package seedu.awe.logic.commands;","lastModifiedDate":"2021-10-11"},{"lineNumber":2,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":3,"author":{"gitId":"chrus-chong"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-11"},{"lineNumber":4,"author":{"gitId":"chrus-chong"},"content":"import static seedu.awe.commons.core.Messages.MESSAGE_GROUPREMOVECONTACT_ERROR;","lastModifiedDate":"2021-10-25"},{"lineNumber":5,"author":{"gitId":"chrus-chong"},"content":"import static seedu.awe.commons.core.Messages.MESSAGE_GROUPREMOVECONTACT_SUCCESS;","lastModifiedDate":"2021-10-25"},{"lineNumber":6,"author":{"gitId":"chrus-chong"},"content":"import static seedu.awe.commons.core.Messages.MESSAGE_NONEXISTENT_GROUP;","lastModifiedDate":"2021-10-25"},{"lineNumber":7,"author":{"gitId":"chrus-chong"},"content":"import static seedu.awe.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2021-10-11"},{"lineNumber":8,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":9,"author":{"gitId":"chrus-chong"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-11"},{"lineNumber":10,"author":{"gitId":"chrus-chong"},"content":"import java.util.Objects;","lastModifiedDate":"2021-10-12"},{"lineNumber":11,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":12,"author":{"gitId":"chrus-chong"},"content":"import seedu.awe.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-10-11"},{"lineNumber":13,"author":{"gitId":"chrus-chong"},"content":"import seedu.awe.model.Model;","lastModifiedDate":"2021-10-11"},{"lineNumber":14,"author":{"gitId":"chrus-chong"},"content":"import seedu.awe.model.group.Group;","lastModifiedDate":"2021-10-11"},{"lineNumber":15,"author":{"gitId":"chrus-chong"},"content":"import seedu.awe.model.group.GroupName;","lastModifiedDate":"2021-10-11"},{"lineNumber":16,"author":{"gitId":"chrus-chong"},"content":"import seedu.awe.model.person.Person;","lastModifiedDate":"2021-10-11"},{"lineNumber":17,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":18,"author":{"gitId":"chrus-chong"},"content":"public class GroupRemoveContactCommand extends Command {","lastModifiedDate":"2021-10-20"},{"lineNumber":19,"author":{"gitId":"chrus-chong"},"content":"    public static final String COMMAND_WORD \u003d \"groupremovecontact\";","lastModifiedDate":"2021-10-20"},{"lineNumber":20,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":21,"author":{"gitId":"chrus-chong"},"content":"    private final GroupName groupName;","lastModifiedDate":"2021-10-11"},{"lineNumber":22,"author":{"gitId":"chrus-chong"},"content":"    private final ArrayList\u003cPerson\u003e membersToBeRemoved;","lastModifiedDate":"2021-10-11"},{"lineNumber":23,"author":{"gitId":"chrus-chong"},"content":"    private final boolean isValidCommand;","lastModifiedDate":"2021-10-11"},{"lineNumber":24,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":25,"author":{"gitId":"chrus-chong"},"content":"    /**","lastModifiedDate":"2021-10-11"},{"lineNumber":26,"author":{"gitId":"chrus-chong"},"content":"     * Creates a GroupRemoveContactCommand to add the specified {@code Person}","lastModifiedDate":"2021-10-20"},{"lineNumber":27,"author":{"gitId":"chrus-chong"},"content":"     */","lastModifiedDate":"2021-10-11"},{"lineNumber":28,"author":{"gitId":"chrus-chong"},"content":"    public GroupRemoveContactCommand(GroupName groupName,","lastModifiedDate":"2021-10-20"},{"lineNumber":29,"author":{"gitId":"chrus-chong"},"content":"                                     ArrayList\u003cPerson\u003e membersToBeRemoved,","lastModifiedDate":"2021-10-20"},{"lineNumber":30,"author":{"gitId":"chrus-chong"},"content":"                                     boolean isValidCommand) {","lastModifiedDate":"2021-10-20"},{"lineNumber":31,"author":{"gitId":"chrus-chong"},"content":"        requireAllNonNull(groupName, membersToBeRemoved, isValidCommand);","lastModifiedDate":"2021-10-11"},{"lineNumber":32,"author":{"gitId":"chrus-chong"},"content":"        this.groupName \u003d groupName;","lastModifiedDate":"2021-10-11"},{"lineNumber":33,"author":{"gitId":"chrus-chong"},"content":"        this.membersToBeRemoved \u003d membersToBeRemoved;","lastModifiedDate":"2021-10-11"},{"lineNumber":34,"author":{"gitId":"chrus-chong"},"content":"        this.isValidCommand \u003d isValidCommand;","lastModifiedDate":"2021-10-11"},{"lineNumber":35,"author":{"gitId":"chrus-chong"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":36,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":37,"author":{"gitId":"chrus-chong"},"content":"    /**","lastModifiedDate":"2021-10-11"},{"lineNumber":38,"author":{"gitId":"chrus-chong"},"content":"     * Returns int object tracking the number of non-matching members between membersToBeRemoved and otherMembers.","lastModifiedDate":"2021-10-12"},{"lineNumber":39,"author":{"gitId":"chrus-chong"},"content":"     *","lastModifiedDate":"2021-10-11"},{"lineNumber":40,"author":{"gitId":"chrus-chong"},"content":"     * @param numberOfNonMatchingMembers int value to track the number of members in otherMembers","lastModifiedDate":"2021-10-11"},{"lineNumber":41,"author":{"gitId":"chrus-chong"},"content":"     *                                   that are not present in membersToBeRemoved.","lastModifiedDate":"2021-10-12"},{"lineNumber":42,"author":{"gitId":"chrus-chong"},"content":"     * @param member Person object that is being searched for in otherMembers.","lastModifiedDate":"2021-10-11"},{"lineNumber":43,"author":{"gitId":"chrus-chong"},"content":"     * @param otherMembers List of Person objects from another instance of CreateGroupCommand.","lastModifiedDate":"2021-10-11"},{"lineNumber":44,"author":{"gitId":"chrus-chong"},"content":"     * @return int object to track the number of members in otherMembers that are not present in membersToBeRemoved.","lastModifiedDate":"2021-10-12"},{"lineNumber":45,"author":{"gitId":"chrus-chong"},"content":"     */","lastModifiedDate":"2021-10-11"},{"lineNumber":46,"author":{"gitId":"chrus-chong"},"content":"    public int checkForMember(int numberOfNonMatchingMembers, Person member, ArrayList\u003cPerson\u003e otherMembers) {","lastModifiedDate":"2021-10-11"},{"lineNumber":47,"author":{"gitId":"chrus-chong"},"content":"        for (Person otherMember : otherMembers) {","lastModifiedDate":"2021-10-11"},{"lineNumber":48,"author":{"gitId":"chrus-chong"},"content":"            if (member.equals(otherMember)) {","lastModifiedDate":"2021-10-11"},{"lineNumber":49,"author":{"gitId":"chrus-chong"},"content":"                numberOfNonMatchingMembers--;","lastModifiedDate":"2021-10-11"},{"lineNumber":50,"author":{"gitId":"chrus-chong"},"content":"                break;","lastModifiedDate":"2021-10-11"},{"lineNumber":51,"author":{"gitId":"chrus-chong"},"content":"            }","lastModifiedDate":"2021-10-11"},{"lineNumber":52,"author":{"gitId":"chrus-chong"},"content":"        }","lastModifiedDate":"2021-10-11"},{"lineNumber":53,"author":{"gitId":"chrus-chong"},"content":"        return numberOfNonMatchingMembers;","lastModifiedDate":"2021-10-11"},{"lineNumber":54,"author":{"gitId":"chrus-chong"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":55,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":56,"author":{"gitId":"chrus-chong"},"content":"    /**","lastModifiedDate":"2021-10-11"},{"lineNumber":57,"author":{"gitId":"chrus-chong"},"content":"     * Returns a boolean object representing if membersToBeRemoved contains the same Person objects as otherMembers.","lastModifiedDate":"2021-10-12"},{"lineNumber":58,"author":{"gitId":"chrus-chong"},"content":"     *","lastModifiedDate":"2021-10-11"},{"lineNumber":59,"author":{"gitId":"chrus-chong"},"content":"     * @param otherMembers List of Person objects from another instance of GroupRemoveContactCommand.","lastModifiedDate":"2021-10-20"},{"lineNumber":60,"author":{"gitId":"chrus-chong"},"content":"     * @return boolean object representing if membersToBeRemoved contains the same Person objects as otherMembers.","lastModifiedDate":"2021-10-12"},{"lineNumber":61,"author":{"gitId":"chrus-chong"},"content":"     */","lastModifiedDate":"2021-10-11"},{"lineNumber":62,"author":{"gitId":"chrus-chong"},"content":"    public boolean checkSameMembers(ArrayList\u003cPerson\u003e otherMembers) {","lastModifiedDate":"2021-10-11"},{"lineNumber":63,"author":{"gitId":"chrus-chong"},"content":"        int numberOfNonMatchingMembers \u003d otherMembers.size();","lastModifiedDate":"2021-10-11"},{"lineNumber":64,"author":{"gitId":"chrus-chong"},"content":"        for (Person member : this.membersToBeRemoved) {","lastModifiedDate":"2021-10-11"},{"lineNumber":65,"author":{"gitId":"chrus-chong"},"content":"            numberOfNonMatchingMembers \u003d checkForMember(numberOfNonMatchingMembers, member, otherMembers);","lastModifiedDate":"2021-10-11"},{"lineNumber":66,"author":{"gitId":"chrus-chong"},"content":"        }","lastModifiedDate":"2021-10-11"},{"lineNumber":67,"author":{"gitId":"chrus-chong"},"content":"        return numberOfNonMatchingMembers \u003d\u003d 0;","lastModifiedDate":"2021-10-11"},{"lineNumber":68,"author":{"gitId":"chrus-chong"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":69,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":70,"author":{"gitId":"chrus-chong"},"content":"    /**","lastModifiedDate":"2021-10-11"},{"lineNumber":71,"author":{"gitId":"marcuspeh"},"content":"     * Checks if the list of person to be remove is contained in the original list.","lastModifiedDate":"2021-10-27"},{"lineNumber":72,"author":{"gitId":"chrus-chong"},"content":"     *","lastModifiedDate":"2021-10-11"},{"lineNumber":73,"author":{"gitId":"chrus-chong"},"content":"     * @param membersFromOldGroup List of Person objects representing original members in a group.","lastModifiedDate":"2021-10-11"},{"lineNumber":74,"author":{"gitId":"chrus-chong"},"content":"     * @param membersToBeRemoved List of Person objects representing members to be removed from a group.","lastModifiedDate":"2021-10-11"},{"lineNumber":75,"author":{"gitId":"marcuspeh"},"content":"     * @return Whether the list to remove person is valid","lastModifiedDate":"2021-10-27"},{"lineNumber":76,"author":{"gitId":"chrus-chong"},"content":"     */","lastModifiedDate":"2021-10-11"},{"lineNumber":77,"author":{"gitId":"marcuspeh"},"content":"    public boolean checkRemoveMembers(ArrayList\u003cPerson\u003e membersFromOldGroup,","lastModifiedDate":"2021-10-27"},{"lineNumber":78,"author":{"gitId":"marcuspeh"},"content":"                                           ArrayList\u003cPerson\u003e membersToBeRemoved) {","lastModifiedDate":"2021-10-27"},{"lineNumber":79,"author":{"gitId":"chrus-chong"},"content":"        ArrayList\u003cPerson\u003e remainingMembers \u003d new ArrayList\u003c\u003e(membersFromOldGroup);","lastModifiedDate":"2021-10-11"},{"lineNumber":80,"author":{"gitId":"chrus-chong"},"content":"        for (Person memberToBeRemoved : membersToBeRemoved) {","lastModifiedDate":"2021-10-11"},{"lineNumber":81,"author":{"gitId":"chrus-chong"},"content":"            boolean memberToBeRemovedIsPresent \u003d remainingMembers.remove(memberToBeRemoved);","lastModifiedDate":"2021-10-11"},{"lineNumber":82,"author":{"gitId":"chrus-chong"},"content":"            if (!memberToBeRemovedIsPresent) {","lastModifiedDate":"2021-10-11"},{"lineNumber":83,"author":{"gitId":"marcuspeh"},"content":"                return false;","lastModifiedDate":"2021-10-27"},{"lineNumber":84,"author":{"gitId":"chrus-chong"},"content":"            }","lastModifiedDate":"2021-10-11"},{"lineNumber":85,"author":{"gitId":"chrus-chong"},"content":"        }","lastModifiedDate":"2021-10-11"},{"lineNumber":86,"author":{"gitId":"marcuspeh"},"content":"        return true;","lastModifiedDate":"2021-10-27"},{"lineNumber":87,"author":{"gitId":"chrus-chong"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":88,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":89,"author":{"gitId":"chrus-chong"},"content":"    @Override","lastModifiedDate":"2021-10-12"},{"lineNumber":90,"author":{"gitId":"chrus-chong"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2021-10-12"},{"lineNumber":91,"author":{"gitId":"chrus-chong"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-10-12"},{"lineNumber":92,"author":{"gitId":"chrus-chong"},"content":"        if (!isValidCommand) {","lastModifiedDate":"2021-10-12"},{"lineNumber":93,"author":{"gitId":"chrus-chong"},"content":"            throw new CommandException(MESSAGE_GROUPREMOVECONTACT_ERROR);","lastModifiedDate":"2021-10-25"},{"lineNumber":94,"author":{"gitId":"chrus-chong"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":95,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":96,"author":{"gitId":"chrus-chong"},"content":"        Group oldGroup \u003d model.getGroupByName(groupName);","lastModifiedDate":"2021-10-12"},{"lineNumber":97,"author":{"gitId":"chrus-chong"},"content":"        if (Objects.isNull(oldGroup)) {","lastModifiedDate":"2021-10-12"},{"lineNumber":98,"author":{"gitId":"chrus-chong"},"content":"            throw new CommandException(String.format(MESSAGE_NONEXISTENT_GROUP, groupName));","lastModifiedDate":"2021-10-12"},{"lineNumber":99,"author":{"gitId":"chrus-chong"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":100,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":101,"author":{"gitId":"chrus-chong"},"content":"        ArrayList\u003cPerson\u003e membersFromOldGroup \u003d oldGroup.getMembers();","lastModifiedDate":"2021-10-12"},{"lineNumber":102,"author":{"gitId":"marcuspeh"},"content":"        if (!checkRemoveMembers(membersFromOldGroup, membersToBeRemoved)) {","lastModifiedDate":"2021-10-27"},{"lineNumber":103,"author":{"gitId":"marcuspeh"},"content":"            throw new CommandException(MESSAGE_GROUPREMOVECONTACT_ERROR);","lastModifiedDate":"2021-10-27"},{"lineNumber":104,"author":{"gitId":"marcuspeh"},"content":"        }","lastModifiedDate":"2021-10-27"},{"lineNumber":105,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":106,"author":{"gitId":"marcuspeh"},"content":"        Group newGroup \u003d oldGroup;","lastModifiedDate":"2021-10-27"},{"lineNumber":107,"author":{"gitId":"marcuspeh"},"content":"        for (Person member: membersToBeRemoved) {","lastModifiedDate":"2021-10-27"},{"lineNumber":108,"author":{"gitId":"marcuspeh"},"content":"            newGroup \u003d newGroup.removeMember(member);","lastModifiedDate":"2021-10-27"},{"lineNumber":109,"author":{"gitId":"marcuspeh"},"content":"        }","lastModifiedDate":"2021-10-27"},{"lineNumber":110,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":111,"author":{"gitId":"chrus-chong"},"content":"        model.setGroup(oldGroup, newGroup);","lastModifiedDate":"2021-10-19"},{"lineNumber":112,"author":{"gitId":"chrus-chong"},"content":"        model.setAllMembersOfGroup(oldGroup);","lastModifiedDate":"2021-10-19"},{"lineNumber":113,"author":{"gitId":"chrus-chong"},"content":"        return new CommandResult(MESSAGE_GROUPREMOVECONTACT_SUCCESS);","lastModifiedDate":"2021-10-25"},{"lineNumber":114,"author":{"gitId":"chrus-chong"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":115,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":116,"author":{"gitId":"chrus-chong"},"content":"    @Override","lastModifiedDate":"2021-10-12"},{"lineNumber":117,"author":{"gitId":"chrus-chong"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-12"},{"lineNumber":118,"author":{"gitId":"chrus-chong"},"content":"        if (!(other instanceof GroupAddContactCommand)) {","lastModifiedDate":"2021-10-20"},{"lineNumber":119,"author":{"gitId":"chrus-chong"},"content":"            return false;","lastModifiedDate":"2021-10-12"},{"lineNumber":120,"author":{"gitId":"chrus-chong"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":121,"author":{"gitId":"chrus-chong"},"content":"        GroupAddContactCommand otherCommand \u003d (GroupAddContactCommand) other;","lastModifiedDate":"2021-10-20"},{"lineNumber":122,"author":{"gitId":"chrus-chong"},"content":"        if (this.isValidCommand \u003d\u003d otherCommand.getValidCommand()","lastModifiedDate":"2021-10-12"},{"lineNumber":123,"author":{"gitId":"chrus-chong"},"content":"                \u0026\u0026 checkSameMembers(otherCommand.getNewMembers())","lastModifiedDate":"2021-10-12"},{"lineNumber":124,"author":{"gitId":"chrus-chong"},"content":"                \u0026\u0026 this.groupName.equals(otherCommand.getGroupName())) {","lastModifiedDate":"2021-10-12"},{"lineNumber":125,"author":{"gitId":"chrus-chong"},"content":"            return true;","lastModifiedDate":"2021-10-12"},{"lineNumber":126,"author":{"gitId":"chrus-chong"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":127,"author":{"gitId":"chrus-chong"},"content":"        return false;","lastModifiedDate":"2021-10-12"},{"lineNumber":128,"author":{"gitId":"chrus-chong"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":129,"author":{"gitId":"chrus-chong"},"content":"}","lastModifiedDate":"2021-10-11"}],"authorContributionMap":{"marcuspeh":16,"chrus-chong":113}},{"path":"src/main/java/seedu/awe/logic/commands/GroupRemoveTagCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"chrus-chong"},"content":"package seedu.awe.logic.commands;","lastModifiedDate":"2021-10-20"},{"lineNumber":2,"author":{"gitId":"chrus-chong"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-20"},{"lineNumber":3,"author":{"gitId":"chrus-chong"},"content":"import static seedu.awe.commons.core.Messages.MESSAGE_GROUPREMOVETAG_ERROR;","lastModifiedDate":"2021-10-25"},{"lineNumber":4,"author":{"gitId":"chrus-chong"},"content":"import static seedu.awe.commons.core.Messages.MESSAGE_GROUPREMOVETAG_NONEXISTENT_TAG;","lastModifiedDate":"2021-10-25"},{"lineNumber":5,"author":{"gitId":"chrus-chong"},"content":"import static seedu.awe.commons.core.Messages.MESSAGE_GROUPREMOVETAG_SUCCESS;","lastModifiedDate":"2021-10-25"},{"lineNumber":6,"author":{"gitId":"chrus-chong"},"content":"import static seedu.awe.commons.core.Messages.MESSAGE_NONEXISTENT_GROUP;","lastModifiedDate":"2021-10-25"},{"lineNumber":7,"author":{"gitId":"chrus-chong"},"content":"import static seedu.awe.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2021-10-20"},{"lineNumber":8,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":9,"author":{"gitId":"chrus-chong"},"content":"import java.util.HashSet;","lastModifiedDate":"2021-10-20"},{"lineNumber":10,"author":{"gitId":"chrus-chong"},"content":"import java.util.Objects;","lastModifiedDate":"2021-10-20"},{"lineNumber":11,"author":{"gitId":"marcuspeh"},"content":"import java.util.Optional;","lastModifiedDate":"2021-10-27"},{"lineNumber":12,"author":{"gitId":"chrus-chong"},"content":"import java.util.Set;","lastModifiedDate":"2021-10-20"},{"lineNumber":13,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":14,"author":{"gitId":"chrus-chong"},"content":"import seedu.awe.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-10-20"},{"lineNumber":15,"author":{"gitId":"chrus-chong"},"content":"import seedu.awe.model.Model;","lastModifiedDate":"2021-10-20"},{"lineNumber":16,"author":{"gitId":"chrus-chong"},"content":"import seedu.awe.model.group.Group;","lastModifiedDate":"2021-10-20"},{"lineNumber":17,"author":{"gitId":"chrus-chong"},"content":"import seedu.awe.model.group.GroupName;","lastModifiedDate":"2021-10-20"},{"lineNumber":18,"author":{"gitId":"chrus-chong"},"content":"import seedu.awe.model.tag.Tag;","lastModifiedDate":"2021-10-20"},{"lineNumber":19,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":20,"author":{"gitId":"chrus-chong"},"content":"public class GroupRemoveTagCommand extends Command {","lastModifiedDate":"2021-10-20"},{"lineNumber":21,"author":{"gitId":"chrus-chong"},"content":"    public static final String COMMAND_WORD \u003d \"groupremovetag\";","lastModifiedDate":"2021-10-20"},{"lineNumber":22,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":23,"author":{"gitId":"chrus-chong"},"content":"    private final GroupName groupName;","lastModifiedDate":"2021-10-20"},{"lineNumber":24,"author":{"gitId":"chrus-chong"},"content":"    private final Set\u003cTag\u003e tagsToBeRemoved;","lastModifiedDate":"2021-10-20"},{"lineNumber":25,"author":{"gitId":"chrus-chong"},"content":"    private final boolean isValidCommand;","lastModifiedDate":"2021-10-20"},{"lineNumber":26,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":27,"author":{"gitId":"chrus-chong"},"content":"    /**","lastModifiedDate":"2021-10-20"},{"lineNumber":28,"author":{"gitId":"chrus-chong"},"content":"     * Creates a GroupRemoveTagCommand to remove the specified {@code Tag}","lastModifiedDate":"2021-10-20"},{"lineNumber":29,"author":{"gitId":"chrus-chong"},"content":"     */","lastModifiedDate":"2021-10-20"},{"lineNumber":30,"author":{"gitId":"chrus-chong"},"content":"    public GroupRemoveTagCommand(GroupName groupName, Set\u003cTag\u003e tagsToBeRemoved, boolean isValidCommand) {","lastModifiedDate":"2021-10-20"},{"lineNumber":31,"author":{"gitId":"chrus-chong"},"content":"        requireAllNonNull(groupName, tagsToBeRemoved, isValidCommand);","lastModifiedDate":"2021-10-20"},{"lineNumber":32,"author":{"gitId":"chrus-chong"},"content":"        this.groupName \u003d groupName;","lastModifiedDate":"2021-10-20"},{"lineNumber":33,"author":{"gitId":"chrus-chong"},"content":"        this.tagsToBeRemoved \u003d tagsToBeRemoved;","lastModifiedDate":"2021-10-20"},{"lineNumber":34,"author":{"gitId":"chrus-chong"},"content":"        this.isValidCommand \u003d isValidCommand;","lastModifiedDate":"2021-10-20"},{"lineNumber":35,"author":{"gitId":"chrus-chong"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":36,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":37,"author":{"gitId":"chrus-chong"},"content":"    public GroupName getGroupName() {","lastModifiedDate":"2021-10-20"},{"lineNumber":38,"author":{"gitId":"chrus-chong"},"content":"        return groupName;","lastModifiedDate":"2021-10-20"},{"lineNumber":39,"author":{"gitId":"chrus-chong"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":40,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":41,"author":{"gitId":"chrus-chong"},"content":"    public Set\u003cTag\u003e getTagsToBeRemoved() {","lastModifiedDate":"2021-10-20"},{"lineNumber":42,"author":{"gitId":"chrus-chong"},"content":"        return tagsToBeRemoved;","lastModifiedDate":"2021-10-20"},{"lineNumber":43,"author":{"gitId":"chrus-chong"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":44,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":45,"author":{"gitId":"chrus-chong"},"content":"    public boolean getValidCommand() {","lastModifiedDate":"2021-10-20"},{"lineNumber":46,"author":{"gitId":"chrus-chong"},"content":"        return isValidCommand;","lastModifiedDate":"2021-10-20"},{"lineNumber":47,"author":{"gitId":"chrus-chong"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":48,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":49,"author":{"gitId":"chrus-chong"},"content":"    /**","lastModifiedDate":"2021-10-20"},{"lineNumber":50,"author":{"gitId":"chrus-chong"},"content":"     * Returns int object tracking the number of non-matching tags between this.tagsToBeRemoved and otherTags.","lastModifiedDate":"2021-10-20"},{"lineNumber":51,"author":{"gitId":"chrus-chong"},"content":"     *","lastModifiedDate":"2021-10-20"},{"lineNumber":52,"author":{"gitId":"chrus-chong"},"content":"     * @param numberOfNonMatchingTags int value to track the number of tags in otherTags","lastModifiedDate":"2021-10-20"},{"lineNumber":53,"author":{"gitId":"chrus-chong"},"content":"     *                                   that are not present in this.tagsToBeRemoved.","lastModifiedDate":"2021-10-20"},{"lineNumber":54,"author":{"gitId":"chrus-chong"},"content":"     * @param tag Tag object that is being searched for in otherTags.","lastModifiedDate":"2021-10-20"},{"lineNumber":55,"author":{"gitId":"chrus-chong"},"content":"     * @param otherTags List of Tag objects from another instance of GroupRemoveTagCommand.","lastModifiedDate":"2021-10-20"},{"lineNumber":56,"author":{"gitId":"chrus-chong"},"content":"     * @return int object to track the number of tags in otherTags that are not present in this.tagsToBeRemoved.","lastModifiedDate":"2021-10-20"},{"lineNumber":57,"author":{"gitId":"chrus-chong"},"content":"     */","lastModifiedDate":"2021-10-20"},{"lineNumber":58,"author":{"gitId":"chrus-chong"},"content":"    public int checkForTag(int numberOfNonMatchingTags, Tag tag, Set\u003cTag\u003e otherTags) {","lastModifiedDate":"2021-10-20"},{"lineNumber":59,"author":{"gitId":"chrus-chong"},"content":"        for (Tag otherTag : otherTags) {","lastModifiedDate":"2021-10-20"},{"lineNumber":60,"author":{"gitId":"chrus-chong"},"content":"            if (tag.equals(otherTag)) {","lastModifiedDate":"2021-10-20"},{"lineNumber":61,"author":{"gitId":"chrus-chong"},"content":"                numberOfNonMatchingTags--;","lastModifiedDate":"2021-10-20"},{"lineNumber":62,"author":{"gitId":"chrus-chong"},"content":"                break;","lastModifiedDate":"2021-10-20"},{"lineNumber":63,"author":{"gitId":"chrus-chong"},"content":"            }","lastModifiedDate":"2021-10-20"},{"lineNumber":64,"author":{"gitId":"chrus-chong"},"content":"        }","lastModifiedDate":"2021-10-20"},{"lineNumber":65,"author":{"gitId":"chrus-chong"},"content":"        return numberOfNonMatchingTags;","lastModifiedDate":"2021-10-20"},{"lineNumber":66,"author":{"gitId":"chrus-chong"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":67,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":68,"author":{"gitId":"chrus-chong"},"content":"    /**","lastModifiedDate":"2021-10-20"},{"lineNumber":69,"author":{"gitId":"chrus-chong"},"content":"     * Returns a boolean object representing if this.tagsToBeRemoved contains the same Tag objects as otherTags.","lastModifiedDate":"2021-10-20"},{"lineNumber":70,"author":{"gitId":"chrus-chong"},"content":"     *","lastModifiedDate":"2021-10-20"},{"lineNumber":71,"author":{"gitId":"chrus-chong"},"content":"     * @param otherTags List of Tag objects from another instance of GroupRemoveTagCommand.","lastModifiedDate":"2021-10-20"},{"lineNumber":72,"author":{"gitId":"chrus-chong"},"content":"     * @return boolean object representing if this.tagsToBeRemoved contains the same Tag objects as otherTags.","lastModifiedDate":"2021-10-20"},{"lineNumber":73,"author":{"gitId":"chrus-chong"},"content":"     */","lastModifiedDate":"2021-10-20"},{"lineNumber":74,"author":{"gitId":"chrus-chong"},"content":"    public boolean checkSameTags(Set\u003cTag\u003e otherTags) {","lastModifiedDate":"2021-10-20"},{"lineNumber":75,"author":{"gitId":"chrus-chong"},"content":"        int numberOfNonMatchingTags \u003d otherTags.size();","lastModifiedDate":"2021-10-20"},{"lineNumber":76,"author":{"gitId":"chrus-chong"},"content":"        for (Tag tag : this.tagsToBeRemoved) {","lastModifiedDate":"2021-10-20"},{"lineNumber":77,"author":{"gitId":"chrus-chong"},"content":"            checkForTag(numberOfNonMatchingTags, tag, otherTags);","lastModifiedDate":"2021-10-20"},{"lineNumber":78,"author":{"gitId":"chrus-chong"},"content":"        }","lastModifiedDate":"2021-10-20"},{"lineNumber":79,"author":{"gitId":"chrus-chong"},"content":"        return numberOfNonMatchingTags \u003d\u003d 0;","lastModifiedDate":"2021-10-20"},{"lineNumber":80,"author":{"gitId":"chrus-chong"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":81,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":82,"author":{"gitId":"chrus-chong"},"content":"    /**","lastModifiedDate":"2021-10-20"},{"lineNumber":83,"author":{"gitId":"marcuspeh"},"content":"     * Checks if the set of tags stored in the group has the tags to be removed","lastModifiedDate":"2021-10-27"},{"lineNumber":84,"author":{"gitId":"chrus-chong"},"content":"     *","lastModifiedDate":"2021-10-20"},{"lineNumber":85,"author":{"gitId":"chrus-chong"},"content":"     * @param tagsFromOldGroup Set of Tag objects representing original tags in a group.","lastModifiedDate":"2021-10-20"},{"lineNumber":86,"author":{"gitId":"chrus-chong"},"content":"     * @param tagsToBeRemoved Set of Tag objects representing tags to be removed from a group.","lastModifiedDate":"2021-10-20"},{"lineNumber":87,"author":{"gitId":"marcuspeh"},"content":"     * @return whether the tagsToBeRemoved is contains in the original group","lastModifiedDate":"2021-10-27"},{"lineNumber":88,"author":{"gitId":"chrus-chong"},"content":"     */","lastModifiedDate":"2021-10-20"},{"lineNumber":89,"author":{"gitId":"marcuspeh"},"content":"    public Optional\u003cTag\u003e checkRemoveTags(Set\u003cTag\u003e tagsFromOldGroup, Set\u003cTag\u003e tagsToBeRemoved) {","lastModifiedDate":"2021-10-27"},{"lineNumber":90,"author":{"gitId":"chrus-chong"},"content":"        Set\u003cTag\u003e remainingTags \u003d new HashSet\u003c\u003e(tagsFromOldGroup);","lastModifiedDate":"2021-10-20"},{"lineNumber":91,"author":{"gitId":"chrus-chong"},"content":"        for (Tag tagToBeRemoved : tagsToBeRemoved) {","lastModifiedDate":"2021-10-20"},{"lineNumber":92,"author":{"gitId":"chrus-chong"},"content":"            boolean tagToBeRemovedIsPresent \u003d remainingTags.remove(tagToBeRemoved);","lastModifiedDate":"2021-10-20"},{"lineNumber":93,"author":{"gitId":"chrus-chong"},"content":"            if (!tagToBeRemovedIsPresent) {","lastModifiedDate":"2021-10-20"},{"lineNumber":94,"author":{"gitId":"marcuspeh"},"content":"                return Optional.of(tagToBeRemoved);","lastModifiedDate":"2021-10-27"},{"lineNumber":95,"author":{"gitId":"chrus-chong"},"content":"            }","lastModifiedDate":"2021-10-20"},{"lineNumber":96,"author":{"gitId":"chrus-chong"},"content":"        }","lastModifiedDate":"2021-10-20"},{"lineNumber":97,"author":{"gitId":"marcuspeh"},"content":"        return Optional.empty();","lastModifiedDate":"2021-10-27"},{"lineNumber":98,"author":{"gitId":"chrus-chong"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":99,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":100,"author":{"gitId":"chrus-chong"},"content":"    @Override","lastModifiedDate":"2021-10-20"},{"lineNumber":101,"author":{"gitId":"chrus-chong"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2021-10-20"},{"lineNumber":102,"author":{"gitId":"chrus-chong"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-10-20"},{"lineNumber":103,"author":{"gitId":"chrus-chong"},"content":"        if (!isValidCommand) {","lastModifiedDate":"2021-10-20"},{"lineNumber":104,"author":{"gitId":"chrus-chong"},"content":"            throw new CommandException(MESSAGE_GROUPREMOVETAG_ERROR);","lastModifiedDate":"2021-10-25"},{"lineNumber":105,"author":{"gitId":"chrus-chong"},"content":"        }","lastModifiedDate":"2021-10-20"},{"lineNumber":106,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":107,"author":{"gitId":"chrus-chong"},"content":"        Group oldGroup \u003d model.getGroupByName(groupName);","lastModifiedDate":"2021-10-20"},{"lineNumber":108,"author":{"gitId":"chrus-chong"},"content":"        if (Objects.isNull(oldGroup)) {","lastModifiedDate":"2021-10-20"},{"lineNumber":109,"author":{"gitId":"chrus-chong"},"content":"            throw new CommandException(String.format(MESSAGE_NONEXISTENT_GROUP, groupName));","lastModifiedDate":"2021-10-20"},{"lineNumber":110,"author":{"gitId":"chrus-chong"},"content":"        }","lastModifiedDate":"2021-10-20"},{"lineNumber":111,"author":{"gitId":"chrus-chong"},"content":"        Set\u003cTag\u003e tagsFromOldGroup \u003d oldGroup.getTags();","lastModifiedDate":"2021-10-20"},{"lineNumber":112,"author":{"gitId":"marcuspeh"},"content":"        Optional\u003cTag\u003e tagNotInTheGroup \u003d checkRemoveTags(tagsFromOldGroup, tagsToBeRemoved);","lastModifiedDate":"2021-10-28"},{"lineNumber":113,"author":{"gitId":"marcuspeh"},"content":"        if (tagNotInTheGroup.isPresent()) {","lastModifiedDate":"2021-10-28"},{"lineNumber":114,"author":{"gitId":"marcuspeh"},"content":"            throw new CommandException(","lastModifiedDate":"2021-10-27"},{"lineNumber":115,"author":{"gitId":"marcuspeh"},"content":"                    String.format(MESSAGE_GROUPREMOVETAG_NONEXISTENT_TAG, tagNotInTheGroup.get().getTagName())","lastModifiedDate":"2021-10-28"},{"lineNumber":116,"author":{"gitId":"marcuspeh"},"content":"            );","lastModifiedDate":"2021-10-27"},{"lineNumber":117,"author":{"gitId":"marcuspeh"},"content":"        }","lastModifiedDate":"2021-10-27"},{"lineNumber":118,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":119,"author":{"gitId":"marcuspeh"},"content":"        Group newGroup \u003d oldGroup;","lastModifiedDate":"2021-10-27"},{"lineNumber":120,"author":{"gitId":"marcuspeh"},"content":"        for (Tag tag: tagsToBeRemoved) {","lastModifiedDate":"2021-10-27"},{"lineNumber":121,"author":{"gitId":"marcuspeh"},"content":"            newGroup \u003d newGroup.removeTag(tag);","lastModifiedDate":"2021-10-27"},{"lineNumber":122,"author":{"gitId":"marcuspeh"},"content":"        }","lastModifiedDate":"2021-10-27"},{"lineNumber":123,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":124,"author":{"gitId":"chrus-chong"},"content":"        model.setGroup(oldGroup, newGroup);","lastModifiedDate":"2021-10-20"},{"lineNumber":125,"author":{"gitId":"chrus-chong"},"content":"        return new CommandResult(MESSAGE_GROUPREMOVETAG_SUCCESS);","lastModifiedDate":"2021-10-25"},{"lineNumber":126,"author":{"gitId":"chrus-chong"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":127,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":128,"author":{"gitId":"chrus-chong"},"content":"    @Override","lastModifiedDate":"2021-10-20"},{"lineNumber":129,"author":{"gitId":"chrus-chong"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-20"},{"lineNumber":130,"author":{"gitId":"chrus-chong"},"content":"        if (!(other instanceof GroupRemoveTagCommand)) {","lastModifiedDate":"2021-10-20"},{"lineNumber":131,"author":{"gitId":"chrus-chong"},"content":"            return false;","lastModifiedDate":"2021-10-20"},{"lineNumber":132,"author":{"gitId":"chrus-chong"},"content":"        }","lastModifiedDate":"2021-10-20"},{"lineNumber":133,"author":{"gitId":"chrus-chong"},"content":"        GroupRemoveTagCommand otherCommand \u003d (GroupRemoveTagCommand) other;","lastModifiedDate":"2021-10-20"},{"lineNumber":134,"author":{"gitId":"chrus-chong"},"content":"        if (this.isValidCommand \u003d\u003d otherCommand.getValidCommand()","lastModifiedDate":"2021-10-20"},{"lineNumber":135,"author":{"gitId":"chrus-chong"},"content":"                \u0026\u0026 checkSameTags(otherCommand.getTagsToBeRemoved())","lastModifiedDate":"2021-10-20"},{"lineNumber":136,"author":{"gitId":"chrus-chong"},"content":"                \u0026\u0026 this.groupName.equals(otherCommand.getGroupName())) {","lastModifiedDate":"2021-10-20"},{"lineNumber":137,"author":{"gitId":"chrus-chong"},"content":"            return true;","lastModifiedDate":"2021-10-20"},{"lineNumber":138,"author":{"gitId":"chrus-chong"},"content":"        }","lastModifiedDate":"2021-10-20"},{"lineNumber":139,"author":{"gitId":"chrus-chong"},"content":"        return false;","lastModifiedDate":"2021-10-20"},{"lineNumber":140,"author":{"gitId":"chrus-chong"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":141,"author":{"gitId":"chrus-chong"},"content":"}","lastModifiedDate":"2021-10-20"},{"lineNumber":142,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-10-20"}],"authorContributionMap":{"marcuspeh":18,"chrus-chong":124}},{"path":"src/main/java/seedu/awe/logic/commands/HelpCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ramapriyan912001"},"content":"package seedu.awe.logic.commands;","lastModifiedDate":"2021-10-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"chrus-chong"},"content":"import static seedu.awe.commons.core.Messages.MESSAGE_HELPCOMMAND_SHOWING_HELP;","lastModifiedDate":"2021-10-25"},{"lineNumber":4,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":5,"author":{"gitId":"ramapriyan912001"},"content":"import seedu.awe.model.Model;","lastModifiedDate":"2021-10-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-31"},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Format full help instructions for every command for display.","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class HelpCommand extends Command {","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"help\";","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":16,"author":{"gitId":"chrus-chong"},"content":"        return new CommandResult(MESSAGE_HELPCOMMAND_SHOWING_HELP, true, false, false,","lastModifiedDate":"2021-10-25"},{"lineNumber":17,"author":{"gitId":"ramapriyan912001"},"content":"                false, false, false,","lastModifiedDate":"2021-10-21"},{"lineNumber":18,"author":{"gitId":"ramapriyan912001"},"content":"                false);","lastModifiedDate":"2021-10-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"chrus-chong":3,"ramapriyan912001":4,"-":13}},{"path":"src/main/java/seedu/awe/logic/commands/ListContactsCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ramapriyan912001"},"content":"package seedu.awe.logic.commands;","lastModifiedDate":"2021-10-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"chrus-chong"},"content":"import static seedu.awe.commons.core.Messages.MESSAGE_LISTCONTACTSCOMMAND_SUCCESS;","lastModifiedDate":"2021-10-25"},{"lineNumber":5,"author":{"gitId":"ramapriyan912001"},"content":"import static seedu.awe.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2021-10-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"ramapriyan912001"},"content":"import seedu.awe.model.Model;","lastModifiedDate":"2021-10-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"ramapriyan912001"},"content":" * Lists all persons in the awe book to the user.","lastModifiedDate":"2021-10-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"marcuspeh"},"content":"public class ListContactsCommand extends Command {","lastModifiedDate":"2021-10-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"marcuspeh"},"content":"    public static final String COMMAND_WORD \u003d \"contacts\";","lastModifiedDate":"2021-10-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2017-08-05"},{"lineNumber":21,"author":{"gitId":"chrus-chong"},"content":"        return new CommandResult(MESSAGE_LISTCONTACTSCOMMAND_SUCCESS, false, false,","lastModifiedDate":"2021-10-25"},{"lineNumber":22,"author":{"gitId":"chrus-chong"},"content":"                false, true, false,","lastModifiedDate":"2021-10-25"},{"lineNumber":23,"author":{"gitId":"ramapriyan912001"},"content":"                false, false);","lastModifiedDate":"2021-10-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"marcuspeh":2,"chrus-chong":3,"ramapriyan912001":5,"-":15}},{"path":"src/main/java/seedu/awe/logic/commands/ListExpensesCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Jingwencloud"},"content":"package seedu.awe.logic.commands;","lastModifiedDate":"2021-10-06"},{"lineNumber":2,"author":{"gitId":"Jingwencloud"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":3,"author":{"gitId":"Jingwencloud"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-05"},{"lineNumber":4,"author":{"gitId":"chrus-chong"},"content":"import static seedu.awe.commons.core.Messages.MESSAGE_LISTEXPENSESCOMMAND_GROUP_NOT_FOUND;","lastModifiedDate":"2021-10-25"},{"lineNumber":5,"author":{"gitId":"chrus-chong"},"content":"import static seedu.awe.commons.core.Messages.MESSAGE_LISTEXPENSESCOMMAND_SUCCESS;","lastModifiedDate":"2021-10-25"},{"lineNumber":6,"author":{"gitId":"Jingwencloud"},"content":"import static seedu.awe.model.Model.PREDICATE_SHOW_ALL_EXPENSES;","lastModifiedDate":"2021-10-14"},{"lineNumber":7,"author":{"gitId":"Jingwencloud"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":8,"author":{"gitId":"chrus-chong"},"content":"import java.util.Objects;","lastModifiedDate":"2021-10-12"},{"lineNumber":9,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":10,"author":{"gitId":"Jingwencloud"},"content":"import seedu.awe.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-10-07"},{"lineNumber":11,"author":{"gitId":"Jingwencloud"},"content":"import seedu.awe.model.Model;","lastModifiedDate":"2021-10-06"},{"lineNumber":12,"author":{"gitId":"Jingwencloud"},"content":"import seedu.awe.model.group.Group;","lastModifiedDate":"2021-10-07"},{"lineNumber":13,"author":{"gitId":"Jingwencloud"},"content":"import seedu.awe.model.group.GroupName;","lastModifiedDate":"2021-10-07"},{"lineNumber":14,"author":{"gitId":"Jingwencloud"},"content":"import seedu.awe.model.group.exceptions.GroupNotFoundException;","lastModifiedDate":"2021-10-07"},{"lineNumber":15,"author":{"gitId":"Jingwencloud"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":16,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":17,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":18,"author":{"gitId":"Jingwencloud"},"content":"/**","lastModifiedDate":"2021-10-05"},{"lineNumber":19,"author":{"gitId":"Jingwencloud"},"content":" * Lists all expenses of the group to the user.","lastModifiedDate":"2021-10-05"},{"lineNumber":20,"author":{"gitId":"Jingwencloud"},"content":" */","lastModifiedDate":"2021-10-05"},{"lineNumber":21,"author":{"gitId":"Jingwencloud"},"content":"public class ListExpensesCommand extends Command {","lastModifiedDate":"2021-10-05"},{"lineNumber":22,"author":{"gitId":"Jingwencloud"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":23,"author":{"gitId":"Jingwencloud"},"content":"    public static final String COMMAND_WORD \u003d \"expenses\";","lastModifiedDate":"2021-10-05"},{"lineNumber":24,"author":{"gitId":"Jingwencloud"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":25,"author":{"gitId":"Jingwencloud"},"content":"    private final GroupName groupName;","lastModifiedDate":"2021-10-07"},{"lineNumber":26,"author":{"gitId":"Jingwencloud"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":27,"author":{"gitId":"Jingwencloud"},"content":"    /**","lastModifiedDate":"2021-10-07"},{"lineNumber":28,"author":{"gitId":"Jingwencloud"},"content":"     * A public constructor to initialise the group name","lastModifiedDate":"2021-10-07"},{"lineNumber":29,"author":{"gitId":"Jingwencloud"},"content":"     * to the given one.","lastModifiedDate":"2021-10-07"},{"lineNumber":30,"author":{"gitId":"Jingwencloud"},"content":"     *","lastModifiedDate":"2021-10-07"},{"lineNumber":31,"author":{"gitId":"Jingwencloud"},"content":"     * @param groupName The name of the group.","lastModifiedDate":"2021-10-07"},{"lineNumber":32,"author":{"gitId":"Jingwencloud"},"content":"     */","lastModifiedDate":"2021-10-07"},{"lineNumber":33,"author":{"gitId":"Jingwencloud"},"content":"    public ListExpensesCommand(GroupName groupName) {","lastModifiedDate":"2021-10-07"},{"lineNumber":34,"author":{"gitId":"Jingwencloud"},"content":"        requireNonNull(groupName);","lastModifiedDate":"2021-10-07"},{"lineNumber":35,"author":{"gitId":"Jingwencloud"},"content":"        this.groupName \u003d groupName;","lastModifiedDate":"2021-10-07"},{"lineNumber":36,"author":{"gitId":"Jingwencloud"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":37,"author":{"gitId":"Jingwencloud"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":38,"author":{"gitId":"Jingwencloud"},"content":"    @Override","lastModifiedDate":"2021-10-05"},{"lineNumber":39,"author":{"gitId":"Jingwencloud"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2021-10-07"},{"lineNumber":40,"author":{"gitId":"Jingwencloud"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-10-05"},{"lineNumber":41,"author":{"gitId":"Jingwencloud"},"content":"        try {","lastModifiedDate":"2021-10-07"},{"lineNumber":42,"author":{"gitId":"Jingwencloud"},"content":"            Group group \u003d model.getGroupByName(groupName);","lastModifiedDate":"2021-10-07"},{"lineNumber":43,"author":{"gitId":"chrus-chong"},"content":"            if (Objects.isNull(group)) {","lastModifiedDate":"2021-10-12"},{"lineNumber":44,"author":{"gitId":"chrus-chong"},"content":"                throw new CommandException(MESSAGE_LISTEXPENSESCOMMAND_GROUP_NOT_FOUND);","lastModifiedDate":"2021-10-25"},{"lineNumber":45,"author":{"gitId":"chrus-chong"},"content":"            }","lastModifiedDate":"2021-10-12"},{"lineNumber":46,"author":{"gitId":"Jingwencloud"},"content":"            model.setExpenses(group);","lastModifiedDate":"2021-10-07"},{"lineNumber":47,"author":{"gitId":"Jingwencloud"},"content":"            model.updateFilteredExpenseList(PREDICATE_SHOW_ALL_EXPENSES);","lastModifiedDate":"2021-10-14"},{"lineNumber":48,"author":{"gitId":"chrus-chong"},"content":"            return new CommandResult(MESSAGE_LISTEXPENSESCOMMAND_SUCCESS, false, false,","lastModifiedDate":"2021-10-25"},{"lineNumber":49,"author":{"gitId":"ramapriyan912001"},"content":"                    false, false, true,","lastModifiedDate":"2021-10-21"},{"lineNumber":50,"author":{"gitId":"ramapriyan912001"},"content":"                    false, false);","lastModifiedDate":"2021-10-21"},{"lineNumber":51,"author":{"gitId":"Jingwencloud"},"content":"        } catch (GroupNotFoundException e) {","lastModifiedDate":"2021-10-07"},{"lineNumber":52,"author":{"gitId":"chrus-chong"},"content":"            throw new CommandException(MESSAGE_LISTEXPENSESCOMMAND_GROUP_NOT_FOUND);","lastModifiedDate":"2021-10-25"},{"lineNumber":53,"author":{"gitId":"Jingwencloud"},"content":"        }","lastModifiedDate":"2021-10-07"},{"lineNumber":54,"author":{"gitId":"Jingwencloud"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":55,"author":{"gitId":"Jingwencloud"},"content":"}","lastModifiedDate":"2021-10-05"},{"lineNumber":56,"author":{"gitId":"Jingwencloud"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":57,"author":{"gitId":"Jingwencloud"},"content":"","lastModifiedDate":"2021-10-07"}],"authorContributionMap":{"Jingwencloud":44,"chrus-chong":11,"ramapriyan912001":2}},{"path":"src/main/java/seedu/awe/logic/commands/ListGroupsCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ramapriyan912001"},"content":"package seedu.awe.logic.commands;","lastModifiedDate":"2021-10-05"},{"lineNumber":2,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":3,"author":{"gitId":"marcuspeh"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-09-30"},{"lineNumber":4,"author":{"gitId":"chrus-chong"},"content":"import static seedu.awe.commons.core.Messages.MESSAGE_LISTGROUPSCOMMAND_SUCCESS;","lastModifiedDate":"2021-10-25"},{"lineNumber":5,"author":{"gitId":"marcuspeh"},"content":"import static seedu.awe.model.Model.PREDICATE_SHOW_ALL_GROUPS;","lastModifiedDate":"2021-10-10"},{"lineNumber":6,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":7,"author":{"gitId":"ramapriyan912001"},"content":"import seedu.awe.model.Model;","lastModifiedDate":"2021-10-05"},{"lineNumber":8,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":9,"author":{"gitId":"marcuspeh"},"content":"/**","lastModifiedDate":"2021-09-30"},{"lineNumber":10,"author":{"gitId":"ramapriyan912001"},"content":" * Lists all Groups in the awe book to the user.","lastModifiedDate":"2021-10-05"},{"lineNumber":11,"author":{"gitId":"marcuspeh"},"content":" */","lastModifiedDate":"2021-09-30"},{"lineNumber":12,"author":{"gitId":"marcuspeh"},"content":"public class ListGroupsCommand extends Command {","lastModifiedDate":"2021-09-30"},{"lineNumber":13,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":14,"author":{"gitId":"marcuspeh"},"content":"    public static final String COMMAND_WORD \u003d \"groups\";","lastModifiedDate":"2021-09-30"},{"lineNumber":15,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":16,"author":{"gitId":"marcuspeh"},"content":"    @Override","lastModifiedDate":"2021-09-30"},{"lineNumber":17,"author":{"gitId":"marcuspeh"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2021-09-30"},{"lineNumber":18,"author":{"gitId":"marcuspeh"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-09-30"},{"lineNumber":19,"author":{"gitId":"marcuspeh"},"content":"        model.updateFilteredGroupList(PREDICATE_SHOW_ALL_GROUPS);","lastModifiedDate":"2021-10-10"},{"lineNumber":20,"author":{"gitId":"chrus-chong"},"content":"        return new CommandResult(MESSAGE_LISTGROUPSCOMMAND_SUCCESS, false, false,","lastModifiedDate":"2021-10-25"},{"lineNumber":21,"author":{"gitId":"chrus-chong"},"content":"                true, false, false,","lastModifiedDate":"2021-10-25"},{"lineNumber":22,"author":{"gitId":"chrus-chong"},"content":"                false, false);","lastModifiedDate":"2021-10-25"},{"lineNumber":23,"author":{"gitId":"marcuspeh"},"content":"    }","lastModifiedDate":"2021-09-30"},{"lineNumber":24,"author":{"gitId":"marcuspeh"},"content":"}","lastModifiedDate":"2021-09-30"}],"authorContributionMap":{"marcuspeh":17,"chrus-chong":4,"ramapriyan912001":3}},{"path":"src/main/java/seedu/awe/logic/commands/ListTransactionSummaryCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"marcuspeh"},"content":"package seedu.awe.logic.commands;","lastModifiedDate":"2021-10-18"},{"lineNumber":2,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":3,"author":{"gitId":"marcuspeh"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-18"},{"lineNumber":4,"author":{"gitId":"chrus-chong"},"content":"import static seedu.awe.commons.core.Messages.MESSAGE_LISTTRANSACTIONSUMMARYCOMMAND_GROUP_NOT_FOUND;","lastModifiedDate":"2021-10-25"},{"lineNumber":5,"author":{"gitId":"chrus-chong"},"content":"import static seedu.awe.commons.core.Messages.MESSAGE_LISTTRANSACTIONSUMMARYCOMMAND_SUCCESS;","lastModifiedDate":"2021-10-25"},{"lineNumber":6,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":7,"author":{"gitId":"marcuspeh"},"content":"import java.util.HashMap;","lastModifiedDate":"2021-10-18"},{"lineNumber":8,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":9,"author":{"gitId":"marcuspeh"},"content":"import seedu.awe.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-10-18"},{"lineNumber":10,"author":{"gitId":"marcuspeh"},"content":"import seedu.awe.model.Model;","lastModifiedDate":"2021-10-18"},{"lineNumber":11,"author":{"gitId":"marcuspeh"},"content":"import seedu.awe.model.expense.Cost;","lastModifiedDate":"2021-10-18"},{"lineNumber":12,"author":{"gitId":"marcuspeh"},"content":"import seedu.awe.model.group.Group;","lastModifiedDate":"2021-10-18"},{"lineNumber":13,"author":{"gitId":"marcuspeh"},"content":"import seedu.awe.model.person.Person;","lastModifiedDate":"2021-10-18"},{"lineNumber":14,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":15,"author":{"gitId":"marcuspeh"},"content":"public class ListTransactionSummaryCommand extends Command {","lastModifiedDate":"2021-10-18"},{"lineNumber":16,"author":{"gitId":"marcuspeh"},"content":"    public static final String COMMAND_WORD \u003d \"transactionsummary\";","lastModifiedDate":"2021-10-18"},{"lineNumber":17,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":18,"author":{"gitId":"marcuspeh"},"content":"    private final Group group;","lastModifiedDate":"2021-10-18"},{"lineNumber":19,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":20,"author":{"gitId":"marcuspeh"},"content":"    /**","lastModifiedDate":"2021-11-01"},{"lineNumber":21,"author":{"gitId":"marcuspeh"},"content":"     * Constructor for ListTransactionSummaryCommand","lastModifiedDate":"2021-11-01"},{"lineNumber":22,"author":{"gitId":"marcuspeh"},"content":"     *","lastModifiedDate":"2021-11-01"},{"lineNumber":23,"author":{"gitId":"marcuspeh"},"content":"     * @param group Group to show transaction summary","lastModifiedDate":"2021-11-01"},{"lineNumber":24,"author":{"gitId":"marcuspeh"},"content":"     */","lastModifiedDate":"2021-11-01"},{"lineNumber":25,"author":{"gitId":"marcuspeh"},"content":"    public ListTransactionSummaryCommand(Group group) {","lastModifiedDate":"2021-10-18"},{"lineNumber":26,"author":{"gitId":"marcuspeh"},"content":"        requireNonNull(group);","lastModifiedDate":"2021-11-01"},{"lineNumber":27,"author":{"gitId":"marcuspeh"},"content":"        this.group \u003d group;","lastModifiedDate":"2021-10-18"},{"lineNumber":28,"author":{"gitId":"marcuspeh"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":29,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":30,"author":{"gitId":"marcuspeh"},"content":"    @Override","lastModifiedDate":"2021-10-18"},{"lineNumber":31,"author":{"gitId":"marcuspeh"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2021-10-18"},{"lineNumber":32,"author":{"gitId":"marcuspeh"},"content":"        requireNonNull(group);","lastModifiedDate":"2021-10-18"},{"lineNumber":33,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":34,"author":{"gitId":"marcuspeh"},"content":"        if (!model.hasGroup(group)) {","lastModifiedDate":"2021-10-18"},{"lineNumber":35,"author":{"gitId":"chrus-chong"},"content":"            throw new CommandException(MESSAGE_LISTTRANSACTIONSUMMARYCOMMAND_GROUP_NOT_FOUND);","lastModifiedDate":"2021-10-25"},{"lineNumber":36,"author":{"gitId":"marcuspeh"},"content":"        }","lastModifiedDate":"2021-10-18"},{"lineNumber":37,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":38,"author":{"gitId":"marcuspeh"},"content":"        Group group \u003d model.getAddressBook().getGroupByName(this.group.getGroupName());","lastModifiedDate":"2021-10-18"},{"lineNumber":39,"author":{"gitId":"marcuspeh"},"content":"        HashMap\u003cPerson, Cost\u003e summary \u003d group.getSplitExpenses();","lastModifiedDate":"2021-10-25"},{"lineNumber":40,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":41,"author":{"gitId":"marcuspeh"},"content":"        model.setTransactionSummary(summary);","lastModifiedDate":"2021-10-18"},{"lineNumber":42,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":43,"author":{"gitId":"chrus-chong"},"content":"        return new CommandResult(MESSAGE_LISTTRANSACTIONSUMMARYCOMMAND_SUCCESS, false, false,","lastModifiedDate":"2021-10-25"},{"lineNumber":44,"author":{"gitId":"chrus-chong"},"content":"                false, false, false,","lastModifiedDate":"2021-10-25"},{"lineNumber":45,"author":{"gitId":"chrus-chong"},"content":"                true, false);","lastModifiedDate":"2021-10-25"},{"lineNumber":46,"author":{"gitId":"marcuspeh"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":47,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":48,"author":{"gitId":"marcuspeh"},"content":"    @Override","lastModifiedDate":"2021-11-01"},{"lineNumber":49,"author":{"gitId":"marcuspeh"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-11-01"},{"lineNumber":50,"author":{"gitId":"marcuspeh"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2021-11-01"},{"lineNumber":51,"author":{"gitId":"marcuspeh"},"content":"            return true;","lastModifiedDate":"2021-11-01"},{"lineNumber":52,"author":{"gitId":"marcuspeh"},"content":"        }","lastModifiedDate":"2021-11-01"},{"lineNumber":53,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":54,"author":{"gitId":"marcuspeh"},"content":"        if (!(other instanceof ListTransactionSummaryCommand)) { // instanceof handles nulls","lastModifiedDate":"2021-11-01"},{"lineNumber":55,"author":{"gitId":"marcuspeh"},"content":"            return false;","lastModifiedDate":"2021-11-01"},{"lineNumber":56,"author":{"gitId":"marcuspeh"},"content":"        }","lastModifiedDate":"2021-11-01"},{"lineNumber":57,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":58,"author":{"gitId":"marcuspeh"},"content":"        return group.equals(((ListTransactionSummaryCommand) other).group); // state check","lastModifiedDate":"2021-11-01"},{"lineNumber":59,"author":{"gitId":"marcuspeh"},"content":"    }","lastModifiedDate":"2021-11-01"},{"lineNumber":60,"author":{"gitId":"marcuspeh"},"content":"}","lastModifiedDate":"2021-10-18"}],"authorContributionMap":{"marcuspeh":54,"chrus-chong":6}},{"path":"src/main/java/seedu/awe/logic/commands/exceptions/CommandException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ramapriyan912001"},"content":"package seedu.awe.logic.commands.exceptions;","lastModifiedDate":"2021-10-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Represents an error which occurs during execution of a {@link Command}.","lastModifiedDate":"2017-02-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class CommandException extends Exception {","lastModifiedDate":"2017-02-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    public CommandException(String message) {","lastModifiedDate":"2017-02-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"        super(message);","lastModifiedDate":"2017-02-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":12,"author":{"gitId":"-"},"content":"     * Constructs a new {@code CommandException} with the specified detail {@code message} and {@code cause}.","lastModifiedDate":"2018-08-06"},{"lineNumber":13,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public CommandException(String message, Throwable cause) {","lastModifiedDate":"2018-08-06"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        super(message, cause);","lastModifiedDate":"2018-08-06"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-05"}],"authorContributionMap":{"ramapriyan912001":1,"-":16}},{"path":"src/main/java/seedu/awe/logic/commands/helper/Pair.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ramapriyan912001"},"content":"package seedu.awe.logic.commands.helper;","lastModifiedDate":"2021-10-31"},{"lineNumber":2,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":3,"author":{"gitId":"ramapriyan912001"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-31"},{"lineNumber":4,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":5,"author":{"gitId":"ramapriyan912001"},"content":"import java.util.Objects;","lastModifiedDate":"2021-10-31"},{"lineNumber":6,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":7,"author":{"gitId":"ramapriyan912001"},"content":"import seedu.awe.model.person.Person;","lastModifiedDate":"2021-10-31"},{"lineNumber":8,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":9,"author":{"gitId":"ramapriyan912001"},"content":"public class Pair implements Comparable\u003cPair\u003e {","lastModifiedDate":"2021-10-31"},{"lineNumber":10,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":11,"author":{"gitId":"ramapriyan912001"},"content":"    private double surplus;","lastModifiedDate":"2021-10-31"},{"lineNumber":12,"author":{"gitId":"ramapriyan912001"},"content":"    private Person person;","lastModifiedDate":"2021-10-31"},{"lineNumber":13,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":14,"author":{"gitId":"ramapriyan912001"},"content":"    /**","lastModifiedDate":"2021-10-31"},{"lineNumber":15,"author":{"gitId":"ramapriyan912001"},"content":"     * Pair helper class for calculatepayments class","lastModifiedDate":"2021-10-31"},{"lineNumber":16,"author":{"gitId":"ramapriyan912001"},"content":"     * @param surplus double","lastModifiedDate":"2021-10-31"},{"lineNumber":17,"author":{"gitId":"ramapriyan912001"},"content":"     * @param person person","lastModifiedDate":"2021-10-31"},{"lineNumber":18,"author":{"gitId":"ramapriyan912001"},"content":"     */","lastModifiedDate":"2021-10-31"},{"lineNumber":19,"author":{"gitId":"ramapriyan912001"},"content":"    public Pair(double surplus, Person person) {","lastModifiedDate":"2021-10-31"},{"lineNumber":20,"author":{"gitId":"ramapriyan912001"},"content":"        requireNonNull(person);","lastModifiedDate":"2021-10-31"},{"lineNumber":21,"author":{"gitId":"ramapriyan912001"},"content":"        this.surplus \u003d surplus;","lastModifiedDate":"2021-10-31"},{"lineNumber":22,"author":{"gitId":"ramapriyan912001"},"content":"        this.person \u003d person;","lastModifiedDate":"2021-10-31"},{"lineNumber":23,"author":{"gitId":"ramapriyan912001"},"content":"    }","lastModifiedDate":"2021-10-31"},{"lineNumber":24,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":25,"author":{"gitId":"ramapriyan912001"},"content":"    public double getSurplus() {","lastModifiedDate":"2021-10-31"},{"lineNumber":26,"author":{"gitId":"ramapriyan912001"},"content":"        return surplus;","lastModifiedDate":"2021-10-31"},{"lineNumber":27,"author":{"gitId":"ramapriyan912001"},"content":"    }","lastModifiedDate":"2021-10-31"},{"lineNumber":28,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":29,"author":{"gitId":"ramapriyan912001"},"content":"    public Person getPerson() {","lastModifiedDate":"2021-10-31"},{"lineNumber":30,"author":{"gitId":"ramapriyan912001"},"content":"        return person;","lastModifiedDate":"2021-10-31"},{"lineNumber":31,"author":{"gitId":"ramapriyan912001"},"content":"    }","lastModifiedDate":"2021-10-31"},{"lineNumber":32,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":33,"author":{"gitId":"ramapriyan912001"},"content":"    @Override","lastModifiedDate":"2021-10-31"},{"lineNumber":34,"author":{"gitId":"ramapriyan912001"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-31"},{"lineNumber":35,"author":{"gitId":"ramapriyan912001"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2021-10-31"},{"lineNumber":36,"author":{"gitId":"ramapriyan912001"},"content":"            return true;","lastModifiedDate":"2021-10-31"},{"lineNumber":37,"author":{"gitId":"ramapriyan912001"},"content":"        }","lastModifiedDate":"2021-10-31"},{"lineNumber":38,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":39,"author":{"gitId":"ramapriyan912001"},"content":"        if (!(other instanceof Pair)) { // instanceof handles nulls","lastModifiedDate":"2021-10-31"},{"lineNumber":40,"author":{"gitId":"ramapriyan912001"},"content":"            return false;","lastModifiedDate":"2021-10-31"},{"lineNumber":41,"author":{"gitId":"ramapriyan912001"},"content":"        }","lastModifiedDate":"2021-10-31"},{"lineNumber":42,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":43,"author":{"gitId":"ramapriyan912001"},"content":"        Pair otherPayment \u003d (Pair) other;","lastModifiedDate":"2021-10-31"},{"lineNumber":44,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":45,"author":{"gitId":"ramapriyan912001"},"content":"        boolean isSamePerson \u003d person.equals(otherPayment.getPerson());","lastModifiedDate":"2021-10-31"},{"lineNumber":46,"author":{"gitId":"ramapriyan912001"},"content":"        boolean isSameSurplus \u003d surplus \u003d\u003d otherPayment.getSurplus();","lastModifiedDate":"2021-10-31"},{"lineNumber":47,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":48,"author":{"gitId":"ramapriyan912001"},"content":"        return isSamePerson \u0026\u0026 isSameSurplus;","lastModifiedDate":"2021-10-31"},{"lineNumber":49,"author":{"gitId":"ramapriyan912001"},"content":"    }","lastModifiedDate":"2021-10-31"},{"lineNumber":50,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":51,"author":{"gitId":"ramapriyan912001"},"content":"    @Override","lastModifiedDate":"2021-10-31"},{"lineNumber":52,"author":{"gitId":"ramapriyan912001"},"content":"    public int hashCode() {","lastModifiedDate":"2021-10-31"},{"lineNumber":53,"author":{"gitId":"ramapriyan912001"},"content":"        return Objects.hash(surplus, person);","lastModifiedDate":"2021-10-31"},{"lineNumber":54,"author":{"gitId":"ramapriyan912001"},"content":"    }","lastModifiedDate":"2021-10-31"},{"lineNumber":55,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":56,"author":{"gitId":"ramapriyan912001"},"content":"    @Override","lastModifiedDate":"2021-10-31"},{"lineNumber":57,"author":{"gitId":"ramapriyan912001"},"content":"    public int compareTo(Pair p2) {","lastModifiedDate":"2021-10-31"},{"lineNumber":58,"author":{"gitId":"ramapriyan912001"},"content":"        if (this.getSurplus() \u003c p2.getSurplus()) {","lastModifiedDate":"2021-10-31"},{"lineNumber":59,"author":{"gitId":"ramapriyan912001"},"content":"            return -1;","lastModifiedDate":"2021-10-31"},{"lineNumber":60,"author":{"gitId":"ramapriyan912001"},"content":"        } else if (this.getSurplus() \u003e p2.getSurplus()) {","lastModifiedDate":"2021-10-31"},{"lineNumber":61,"author":{"gitId":"ramapriyan912001"},"content":"            return 1;","lastModifiedDate":"2021-10-31"},{"lineNumber":62,"author":{"gitId":"ramapriyan912001"},"content":"        } else {","lastModifiedDate":"2021-10-31"},{"lineNumber":63,"author":{"gitId":"ramapriyan912001"},"content":"            return 0;","lastModifiedDate":"2021-10-31"},{"lineNumber":64,"author":{"gitId":"ramapriyan912001"},"content":"        }","lastModifiedDate":"2021-10-31"},{"lineNumber":65,"author":{"gitId":"ramapriyan912001"},"content":"    }","lastModifiedDate":"2021-10-31"},{"lineNumber":66,"author":{"gitId":"ramapriyan912001"},"content":"}","lastModifiedDate":"2021-10-31"}],"authorContributionMap":{"ramapriyan912001":66}},{"path":"src/main/java/seedu/awe/logic/parser/AddContactCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ramapriyan912001"},"content":"package seedu.awe.logic.parser;","lastModifiedDate":"2021-10-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":3,"author":{"gitId":"chrus-chong"},"content":"import static seedu.awe.commons.core.Messages.MESSAGE_ADDCONTACTCOMMAND_USAGE;","lastModifiedDate":"2021-10-25"},{"lineNumber":4,"author":{"gitId":"ramapriyan912001"},"content":"import static seedu.awe.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-10-05"},{"lineNumber":5,"author":{"gitId":"ramapriyan912001"},"content":"import static seedu.awe.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2021-10-05"},{"lineNumber":6,"author":{"gitId":"ramapriyan912001"},"content":"import static seedu.awe.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2021-10-05"},{"lineNumber":7,"author":{"gitId":"ramapriyan912001"},"content":"import static seedu.awe.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2021-10-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2017-03-17"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":12,"author":{"gitId":"marcuspeh"},"content":"import seedu.awe.logic.commands.AddContactCommand;","lastModifiedDate":"2021-10-11"},{"lineNumber":13,"author":{"gitId":"ramapriyan912001"},"content":"import seedu.awe.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-10-05"},{"lineNumber":14,"author":{"gitId":"ramapriyan912001"},"content":"import seedu.awe.model.person.Name;","lastModifiedDate":"2021-10-05"},{"lineNumber":15,"author":{"gitId":"ramapriyan912001"},"content":"import seedu.awe.model.person.Person;","lastModifiedDate":"2021-10-05"},{"lineNumber":16,"author":{"gitId":"ramapriyan912001"},"content":"import seedu.awe.model.person.Phone;","lastModifiedDate":"2021-10-05"},{"lineNumber":17,"author":{"gitId":"ramapriyan912001"},"content":"import seedu.awe.model.tag.Tag;","lastModifiedDate":"2021-10-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new AddCommand object","lastModifiedDate":"2017-02-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-05"},{"lineNumber":22,"author":{"gitId":"chrus-chong"},"content":"public class AddContactCommandParser implements Parser\u003cAddContactCommand\u003e {","lastModifiedDate":"2021-10-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the AddCommand","lastModifiedDate":"2017-02-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * and returns an AddCommand object for execution.","lastModifiedDate":"2017-02-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-05"},{"lineNumber":29,"author":{"gitId":"marcuspeh"},"content":"    public AddContactCommand parse(String args) throws ParseException {","lastModifiedDate":"2021-10-11"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2017-03-20"},{"lineNumber":31,"author":{"gitId":"marcuspeh"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_PHONE, PREFIX_TAG);","lastModifiedDate":"2021-11-01"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":33,"author":{"gitId":"marcuspeh"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_NAME, PREFIX_PHONE)","lastModifiedDate":"2021-11-01"},{"lineNumber":34,"author":{"gitId":"-"},"content":"                || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2017-12-23"},{"lineNumber":35,"author":{"gitId":"chrus-chong"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, MESSAGE_ADDCONTACTCOMMAND_USAGE));","lastModifiedDate":"2021-10-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-17"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        Name name \u003d ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        Phone phone \u003d ParserUtil.parsePhone(argMultimap.getValue(PREFIX_PHONE).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e tagList \u003d ParserUtil.parseTags(argMultimap.getAllValues(PREFIX_TAG));","lastModifiedDate":"2017-03-17"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":42,"author":{"gitId":"marcuspeh"},"content":"        Person person \u003d new Person(name, phone, tagList);","lastModifiedDate":"2021-11-01"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":44,"author":{"gitId":"marcuspeh"},"content":"        return new AddContactCommand(person);","lastModifiedDate":"2021-10-11"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-17"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2017-03-17"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2017-03-17"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-17"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2017-03-17"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2017-03-17"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-17"},{"lineNumber":54,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-05"}],"authorContributionMap":{"marcuspeh":6,"chrus-chong":3,"ramapriyan912001":10,"-":35}},{"path":"src/main/java/seedu/awe/logic/parser/AddExpenseCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kheekheekhee"},"content":"package seedu.awe.logic.parser;","lastModifiedDate":"2021-10-06"},{"lineNumber":2,"author":{"gitId":"kheekheekhee"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":3,"author":{"gitId":"kheekheekhee"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-06"},{"lineNumber":4,"author":{"gitId":"chrus-chong"},"content":"import static seedu.awe.commons.core.Messages.MESSAGE_ADDEXPENSECOMMAND_NOT_PART_OF_GROUP;","lastModifiedDate":"2021-10-26"},{"lineNumber":5,"author":{"gitId":"chrus-chong"},"content":"import static seedu.awe.commons.core.Messages.MESSAGE_ADDEXPENSECOMMAND_USAGE;","lastModifiedDate":"2021-10-25"},{"lineNumber":6,"author":{"gitId":"kheekheekhee"},"content":"import static seedu.awe.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-10-06"},{"lineNumber":7,"author":{"gitId":"kheekheekhee"},"content":"import static seedu.awe.logic.parser.CliSyntax.PREFIX_COST;","lastModifiedDate":"2021-10-06"},{"lineNumber":8,"author":{"gitId":"kheekheekhee"},"content":"import static seedu.awe.logic.parser.CliSyntax.PREFIX_DESCRIPTION;","lastModifiedDate":"2021-10-06"},{"lineNumber":9,"author":{"gitId":"kheekheekhee"},"content":"import static seedu.awe.logic.parser.CliSyntax.PREFIX_EXCLUDE;","lastModifiedDate":"2021-10-11"},{"lineNumber":10,"author":{"gitId":"kheekheekhee"},"content":"import static seedu.awe.logic.parser.CliSyntax.PREFIX_GROUP_NAME;","lastModifiedDate":"2021-10-06"},{"lineNumber":11,"author":{"gitId":"kheekheekhee"},"content":"import static seedu.awe.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2021-10-11"},{"lineNumber":12,"author":{"gitId":"kheekheekhee"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":13,"author":{"gitId":"kheekheekhee"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-11"},{"lineNumber":14,"author":{"gitId":"kheekheekhee"},"content":"import java.util.List;","lastModifiedDate":"2021-10-11"},{"lineNumber":15,"author":{"gitId":"kheekheekhee"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2021-10-11"},{"lineNumber":16,"author":{"gitId":"kheekheekhee"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":17,"author":{"gitId":"kheekheekhee"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-10-11"},{"lineNumber":18,"author":{"gitId":"kheekheekhee"},"content":"import seedu.awe.logic.commands.AddExpenseCommand;","lastModifiedDate":"2021-10-06"},{"lineNumber":19,"author":{"gitId":"kheekheekhee"},"content":"import seedu.awe.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-10-06"},{"lineNumber":20,"author":{"gitId":"kheekheekhee"},"content":"import seedu.awe.model.Model;","lastModifiedDate":"2021-10-11"},{"lineNumber":21,"author":{"gitId":"kheekheekhee"},"content":"import seedu.awe.model.ReadOnlyAddressBook;","lastModifiedDate":"2021-10-11"},{"lineNumber":22,"author":{"gitId":"kheekheekhee"},"content":"import seedu.awe.model.expense.Cost;","lastModifiedDate":"2021-10-06"},{"lineNumber":23,"author":{"gitId":"kheekheekhee"},"content":"import seedu.awe.model.expense.Description;","lastModifiedDate":"2021-10-06"},{"lineNumber":24,"author":{"gitId":"kheekheekhee"},"content":"import seedu.awe.model.group.GroupName;","lastModifiedDate":"2021-10-06"},{"lineNumber":25,"author":{"gitId":"kheekheekhee"},"content":"import seedu.awe.model.person.Name;","lastModifiedDate":"2021-10-11"},{"lineNumber":26,"author":{"gitId":"kheekheekhee"},"content":"import seedu.awe.model.person.Person;","lastModifiedDate":"2021-10-11"},{"lineNumber":27,"author":{"gitId":"kheekheekhee"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":28,"author":{"gitId":"kheekheekhee"},"content":"/**","lastModifiedDate":"2021-10-06"},{"lineNumber":29,"author":{"gitId":"kheekheekhee"},"content":" * Parses input arguments and creates a new AddExpenseCommand object","lastModifiedDate":"2021-10-06"},{"lineNumber":30,"author":{"gitId":"kheekheekhee"},"content":" */","lastModifiedDate":"2021-10-06"},{"lineNumber":31,"author":{"gitId":"kheekheekhee"},"content":"public class AddExpenseCommandParser implements Parser\u003cAddExpenseCommand\u003e {","lastModifiedDate":"2021-10-06"},{"lineNumber":32,"author":{"gitId":"kheekheekhee"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":33,"author":{"gitId":"kheekheekhee"},"content":"    private ObservableList\u003cPerson\u003e allMembers;","lastModifiedDate":"2021-10-11"},{"lineNumber":34,"author":{"gitId":"kheekheekhee"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":35,"author":{"gitId":"kheekheekhee"},"content":"    /**","lastModifiedDate":"2021-10-11"},{"lineNumber":36,"author":{"gitId":"kheekheekhee"},"content":"     * Creates new CreateGroupParser object.","lastModifiedDate":"2021-10-11"},{"lineNumber":37,"author":{"gitId":"kheekheekhee"},"content":"     *","lastModifiedDate":"2021-10-11"},{"lineNumber":38,"author":{"gitId":"kheekheekhee"},"content":"     * @param model Model object passed into constructor to provide list of contacts.","lastModifiedDate":"2021-10-11"},{"lineNumber":39,"author":{"gitId":"kheekheekhee"},"content":"     */","lastModifiedDate":"2021-10-11"},{"lineNumber":40,"author":{"gitId":"kheekheekhee"},"content":"    public AddExpenseCommandParser(Model model) {","lastModifiedDate":"2021-10-11"},{"lineNumber":41,"author":{"gitId":"kheekheekhee"},"content":"        ReadOnlyAddressBook addressBook \u003d model.getAddressBook();","lastModifiedDate":"2021-10-11"},{"lineNumber":42,"author":{"gitId":"kheekheekhee"},"content":"        allMembers \u003d addressBook.getPersonList();","lastModifiedDate":"2021-10-11"},{"lineNumber":43,"author":{"gitId":"kheekheekhee"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":44,"author":{"gitId":"kheekheekhee"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":45,"author":{"gitId":"kheekheekhee"},"content":"    /**","lastModifiedDate":"2021-10-06"},{"lineNumber":46,"author":{"gitId":"kheekheekhee"},"content":"     * Parses the given {@code String} of arguments in the context of the AddCommand","lastModifiedDate":"2021-10-06"},{"lineNumber":47,"author":{"gitId":"kheekheekhee"},"content":"     * and returns an AddCommand object for execution.","lastModifiedDate":"2021-10-06"},{"lineNumber":48,"author":{"gitId":"kheekheekhee"},"content":"     *","lastModifiedDate":"2021-10-06"},{"lineNumber":49,"author":{"gitId":"kheekheekhee"},"content":"     * @param args user input","lastModifiedDate":"2021-10-06"},{"lineNumber":50,"author":{"gitId":"kheekheekhee"},"content":"     * @return AddExpenseCommand object to represent command to be executed.","lastModifiedDate":"2021-10-06"},{"lineNumber":51,"author":{"gitId":"kheekheekhee"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2021-10-06"},{"lineNumber":52,"author":{"gitId":"kheekheekhee"},"content":"     */","lastModifiedDate":"2021-10-06"},{"lineNumber":53,"author":{"gitId":"kheekheekhee"},"content":"    public AddExpenseCommand parse(String args) throws ParseException {","lastModifiedDate":"2021-10-06"},{"lineNumber":54,"author":{"gitId":"kheekheekhee"},"content":"        requireNonNull(args);","lastModifiedDate":"2021-10-06"},{"lineNumber":55,"author":{"gitId":"kheekheekhee"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(args,","lastModifiedDate":"2021-10-06"},{"lineNumber":56,"author":{"gitId":"kheekheekhee"},"content":"                PREFIX_NAME, PREFIX_GROUP_NAME, PREFIX_COST, PREFIX_DESCRIPTION, PREFIX_EXCLUDE);","lastModifiedDate":"2021-10-11"},{"lineNumber":57,"author":{"gitId":"kheekheekhee"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":58,"author":{"gitId":"kheekheekhee"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_NAME, PREFIX_GROUP_NAME, PREFIX_COST, PREFIX_DESCRIPTION)","lastModifiedDate":"2021-10-11"},{"lineNumber":59,"author":{"gitId":"kheekheekhee"},"content":"                || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2021-10-11"},{"lineNumber":60,"author":{"gitId":"chrus-chong"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, MESSAGE_ADDEXPENSECOMMAND_USAGE));","lastModifiedDate":"2021-10-25"},{"lineNumber":61,"author":{"gitId":"kheekheekhee"},"content":"        }","lastModifiedDate":"2021-10-11"},{"lineNumber":62,"author":{"gitId":"kheekheekhee"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":63,"author":{"gitId":"kheekheekhee"},"content":"        List\u003cName\u003e names \u003d ParserUtil.parseNames(argMultimap.getAllValues(PREFIX_NAME));","lastModifiedDate":"2021-10-11"},{"lineNumber":64,"author":{"gitId":"kheekheekhee"},"content":"        GroupName groupName \u003d ParserUtil.parseGroupName(argMultimap.getValue(PREFIX_GROUP_NAME).get());","lastModifiedDate":"2021-10-11"},{"lineNumber":65,"author":{"gitId":"kheekheekhee"},"content":"        List\u003cCost\u003e costs \u003d ParserUtil.parseCosts(argMultimap.getAllValues(PREFIX_COST));","lastModifiedDate":"2021-10-11"},{"lineNumber":66,"author":{"gitId":"kheekheekhee"},"content":"        Description description \u003d ParserUtil.parseDescription(argMultimap.getValue(PREFIX_DESCRIPTION).get());","lastModifiedDate":"2021-10-11"},{"lineNumber":67,"author":{"gitId":"kheekheekhee"},"content":"        List\u003cName\u003e excludedNames \u003d ParserUtil.parseExcluded(argMultimap.getAllValues(PREFIX_EXCLUDE));","lastModifiedDate":"2021-10-11"},{"lineNumber":68,"author":{"gitId":"kheekheekhee"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":69,"author":{"gitId":"kheekheekhee"},"content":"        if (names.size() !\u003d costs.size()) {","lastModifiedDate":"2021-10-11"},{"lineNumber":70,"author":{"gitId":"chrus-chong"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, MESSAGE_ADDEXPENSECOMMAND_USAGE));","lastModifiedDate":"2021-10-25"},{"lineNumber":71,"author":{"gitId":"kheekheekhee"},"content":"        }","lastModifiedDate":"2021-10-06"},{"lineNumber":72,"author":{"gitId":"kheekheekhee"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":73,"author":{"gitId":"kheekheekhee"},"content":"        Person payer \u003d getPayer(names);","lastModifiedDate":"2021-10-11"},{"lineNumber":74,"author":{"gitId":"kheekheekhee"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":75,"author":{"gitId":"kheekheekhee"},"content":"        if (payer \u003d\u003d null) {","lastModifiedDate":"2021-10-11"},{"lineNumber":76,"author":{"gitId":"chrus-chong"},"content":"            throw new ParseException(MESSAGE_ADDEXPENSECOMMAND_NOT_PART_OF_GROUP);","lastModifiedDate":"2021-10-26"},{"lineNumber":77,"author":{"gitId":"kheekheekhee"},"content":"        }","lastModifiedDate":"2021-10-11"},{"lineNumber":78,"author":{"gitId":"kheekheekhee"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":79,"author":{"gitId":"kheekheekhee"},"content":"        Cost totalCost \u003d getTotalCost(costs);","lastModifiedDate":"2021-10-11"},{"lineNumber":80,"author":{"gitId":"kheekheekhee"},"content":"        ArrayList\u003cPerson\u003e namesAsPersons \u003d namesToPerson(names);","lastModifiedDate":"2021-10-11"},{"lineNumber":81,"author":{"gitId":"kheekheekhee"},"content":"        List\u003cPerson\u003e toExclude \u003d findExcluded(excludedNames);","lastModifiedDate":"2021-10-11"},{"lineNumber":82,"author":{"gitId":"kheekheekhee"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":83,"author":{"gitId":"marcuspeh"},"content":"        return new AddExpenseCommand(payer, totalCost, description, groupName, namesAsPersons, costs, toExclude);","lastModifiedDate":"2021-10-25"},{"lineNumber":84,"author":{"gitId":"kheekheekhee"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":85,"author":{"gitId":"kheekheekhee"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":86,"author":{"gitId":"kheekheekhee"},"content":"    private List\u003cPerson\u003e findExcluded(List\u003cName\u003e toExclude) {","lastModifiedDate":"2021-10-11"},{"lineNumber":87,"author":{"gitId":"kheekheekhee"},"content":"        final ArrayList\u003cPerson\u003e excludedPersons \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-11"},{"lineNumber":88,"author":{"gitId":"kheekheekhee"},"content":"        for (Name name : toExclude) {","lastModifiedDate":"2021-10-11"},{"lineNumber":89,"author":{"gitId":"kheekheekhee"},"content":"            Person person \u003d findPerson(name);","lastModifiedDate":"2021-10-11"},{"lineNumber":90,"author":{"gitId":"kheekheekhee"},"content":"            if (person !\u003d null) {","lastModifiedDate":"2021-10-11"},{"lineNumber":91,"author":{"gitId":"kheekheekhee"},"content":"                excludedPersons.add(person);","lastModifiedDate":"2021-10-11"},{"lineNumber":92,"author":{"gitId":"kheekheekhee"},"content":"            }","lastModifiedDate":"2021-10-11"},{"lineNumber":93,"author":{"gitId":"kheekheekhee"},"content":"        }","lastModifiedDate":"2021-10-11"},{"lineNumber":94,"author":{"gitId":"kheekheekhee"},"content":"        return excludedPersons;","lastModifiedDate":"2021-10-11"},{"lineNumber":95,"author":{"gitId":"kheekheekhee"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":96,"author":{"gitId":"kheekheekhee"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":97,"author":{"gitId":"kheekheekhee"},"content":"    private ArrayList\u003cPerson\u003e namesToPerson(List\u003cName\u003e names) {","lastModifiedDate":"2021-10-11"},{"lineNumber":98,"author":{"gitId":"kheekheekhee"},"content":"        final ArrayList\u003cPerson\u003e persons \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-11"},{"lineNumber":99,"author":{"gitId":"kheekheekhee"},"content":"        for (Name name : names) {","lastModifiedDate":"2021-10-11"},{"lineNumber":100,"author":{"gitId":"kheekheekhee"},"content":"            Person person \u003d findPerson(name);","lastModifiedDate":"2021-10-11"},{"lineNumber":101,"author":{"gitId":"kheekheekhee"},"content":"            persons.add(person);","lastModifiedDate":"2021-10-11"},{"lineNumber":102,"author":{"gitId":"kheekheekhee"},"content":"        }","lastModifiedDate":"2021-10-11"},{"lineNumber":103,"author":{"gitId":"kheekheekhee"},"content":"        return persons;","lastModifiedDate":"2021-10-11"},{"lineNumber":104,"author":{"gitId":"kheekheekhee"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":105,"author":{"gitId":"kheekheekhee"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":106,"author":{"gitId":"kheekheekhee"},"content":"    /**","lastModifiedDate":"2021-10-11"},{"lineNumber":107,"author":{"gitId":"kheekheekhee"},"content":"     * Returns person that matches a given Name object if in addressbook.","lastModifiedDate":"2021-10-11"},{"lineNumber":108,"author":{"gitId":"kheekheekhee"},"content":"     * If person not in addressbook, null is returned.","lastModifiedDate":"2021-10-11"},{"lineNumber":109,"author":{"gitId":"kheekheekhee"},"content":"     *","lastModifiedDate":"2021-10-11"},{"lineNumber":110,"author":{"gitId":"kheekheekhee"},"content":"     * @param memberName Name object representing person that is being searched for in the addressbook.","lastModifiedDate":"2021-10-11"},{"lineNumber":111,"author":{"gitId":"kheekheekhee"},"content":"     * @return Person object if name matches that of a person from the addressbook.","lastModifiedDate":"2021-10-11"},{"lineNumber":112,"author":{"gitId":"kheekheekhee"},"content":"     */","lastModifiedDate":"2021-10-11"},{"lineNumber":113,"author":{"gitId":"kheekheekhee"},"content":"    private Person findPerson(Name memberName) {","lastModifiedDate":"2021-10-11"},{"lineNumber":114,"author":{"gitId":"kheekheekhee"},"content":"        for (Person payee : allMembers) {","lastModifiedDate":"2021-10-11"},{"lineNumber":115,"author":{"gitId":"kheekheekhee"},"content":"            if (payee.getName().equals(memberName)) {","lastModifiedDate":"2021-10-11"},{"lineNumber":116,"author":{"gitId":"kheekheekhee"},"content":"                return payee;","lastModifiedDate":"2021-10-11"},{"lineNumber":117,"author":{"gitId":"kheekheekhee"},"content":"            }","lastModifiedDate":"2021-10-11"},{"lineNumber":118,"author":{"gitId":"kheekheekhee"},"content":"        }","lastModifiedDate":"2021-10-11"},{"lineNumber":119,"author":{"gitId":"kheekheekhee"},"content":"        return null;","lastModifiedDate":"2021-10-11"},{"lineNumber":120,"author":{"gitId":"kheekheekhee"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":121,"author":{"gitId":"kheekheekhee"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":122,"author":{"gitId":"kheekheekhee"},"content":"    private Person getPayer(List\u003cName\u003e names) {","lastModifiedDate":"2021-10-11"},{"lineNumber":123,"author":{"gitId":"kheekheekhee"},"content":"        Name payerName \u003d names.remove(0);","lastModifiedDate":"2021-10-11"},{"lineNumber":124,"author":{"gitId":"kheekheekhee"},"content":"        for (Person payer : allMembers) {","lastModifiedDate":"2021-10-11"},{"lineNumber":125,"author":{"gitId":"kheekheekhee"},"content":"            if (payer.getName().equals(payerName)) {","lastModifiedDate":"2021-10-11"},{"lineNumber":126,"author":{"gitId":"kheekheekhee"},"content":"                return payer;","lastModifiedDate":"2021-10-11"},{"lineNumber":127,"author":{"gitId":"kheekheekhee"},"content":"            }","lastModifiedDate":"2021-10-11"},{"lineNumber":128,"author":{"gitId":"kheekheekhee"},"content":"        }","lastModifiedDate":"2021-10-11"},{"lineNumber":129,"author":{"gitId":"kheekheekhee"},"content":"        return null;","lastModifiedDate":"2021-10-11"},{"lineNumber":130,"author":{"gitId":"kheekheekhee"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":131,"author":{"gitId":"kheekheekhee"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":132,"author":{"gitId":"kheekheekhee"},"content":"    private Cost getTotalCost(List\u003cCost\u003e costs) {","lastModifiedDate":"2021-10-11"},{"lineNumber":133,"author":{"gitId":"kheekheekhee"},"content":"        Cost totalCost \u003d costs.remove(0);","lastModifiedDate":"2021-10-11"},{"lineNumber":134,"author":{"gitId":"kheekheekhee"},"content":"        return totalCost;","lastModifiedDate":"2021-10-11"},{"lineNumber":135,"author":{"gitId":"kheekheekhee"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":136,"author":{"gitId":"kheekheekhee"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":137,"author":{"gitId":"kheekheekhee"},"content":"    /**","lastModifiedDate":"2021-10-11"},{"lineNumber":138,"author":{"gitId":"kheekheekhee"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2021-10-11"},{"lineNumber":139,"author":{"gitId":"kheekheekhee"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2021-10-11"},{"lineNumber":140,"author":{"gitId":"kheekheekhee"},"content":"     */","lastModifiedDate":"2021-10-11"},{"lineNumber":141,"author":{"gitId":"kheekheekhee"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2021-10-11"},{"lineNumber":142,"author":{"gitId":"kheekheekhee"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2021-10-11"},{"lineNumber":143,"author":{"gitId":"kheekheekhee"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":144,"author":{"gitId":"kheekheekhee"},"content":"}","lastModifiedDate":"2021-10-06"}],"authorContributionMap":{"marcuspeh":1,"kheekheekhee":138,"chrus-chong":5}},{"path":"src/main/java/seedu/awe/logic/parser/ArgumentMultimap.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ramapriyan912001"},"content":"package seedu.awe.logic.parser;","lastModifiedDate":"2021-10-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-03-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.HashMap;","lastModifiedDate":"2017-03-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-03-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Map;","lastModifiedDate":"2017-03-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-03-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-03-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Stores mapping of prefixes to their respective arguments.","lastModifiedDate":"2017-03-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Each key may be associated with multiple argument values.","lastModifiedDate":"2017-03-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Values for a given key are stored in a list, and the insertion ordering is maintained.","lastModifiedDate":"2017-03-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * Keys are unique, but the list of argument values may contain duplicate argument values, i.e. the same argument value","lastModifiedDate":"2017-03-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * can be inserted multiple times for the same prefix.","lastModifiedDate":"2017-03-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-03-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class ArgumentMultimap {","lastModifiedDate":"2017-03-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    /** Prefixes mapped to their respective arguments**/","lastModifiedDate":"2017-03-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private final Map\u003cPrefix, List\u003cString\u003e\u003e argMultimap \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2017-03-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * Associates the specified argument value with {@code prefix} key in this map.","lastModifiedDate":"2017-03-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * If the map previously contained a mapping for the key, the new value is appended to the list of existing values.","lastModifiedDate":"2017-03-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * @param prefix   Prefix key with which the specified argument value is to be associated","lastModifiedDate":"2017-03-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * @param argValue Argument value to be associated with the specified prefix key","lastModifiedDate":"2017-03-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public void put(Prefix prefix, String argValue) {","lastModifiedDate":"2017-03-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        List\u003cString\u003e argValues \u003d getAllValues(prefix);","lastModifiedDate":"2017-03-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        argValues.add(argValue);","lastModifiedDate":"2017-03-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        argMultimap.put(prefix, argValues);","lastModifiedDate":"2017-03-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Returns the last value of {@code prefix}.","lastModifiedDate":"2017-03-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public Optional\u003cString\u003e getValue(Prefix prefix) {","lastModifiedDate":"2017-03-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        List\u003cString\u003e values \u003d getAllValues(prefix);","lastModifiedDate":"2017-03-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return values.isEmpty() ? Optional.empty() : Optional.of(values.get(values.size() - 1));","lastModifiedDate":"2017-03-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * Returns all values of {@code prefix}.","lastModifiedDate":"2017-03-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     * If the prefix does not exist or has no values, this will return an empty list.","lastModifiedDate":"2017-03-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * Modifying the returned list will not affect the underlying data structure of the ArgumentMultimap.","lastModifiedDate":"2017-03-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public List\u003cString\u003e getAllValues(Prefix prefix) {","lastModifiedDate":"2017-03-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        if (!argMultimap.containsKey(prefix)) {","lastModifiedDate":"2017-03-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            return new ArrayList\u003c\u003e();","lastModifiedDate":"2017-03-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        return new ArrayList\u003c\u003e(argMultimap.get(prefix));","lastModifiedDate":"2017-03-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * Returns the preamble (text before the first valid prefix). Trims any leading/trailing spaces.","lastModifiedDate":"2017-03-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public String getPreamble() {","lastModifiedDate":"2017-03-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        return getValue(new Prefix(\"\")).orElse(\"\");","lastModifiedDate":"2017-03-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-08"}],"authorContributionMap":{"ramapriyan912001":1,"-":59}},{"path":"src/main/java/seedu/awe/logic/parser/ArgumentTokenizer.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ramapriyan912001"},"content":"package seedu.awe.logic.parser;","lastModifiedDate":"2021-10-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-01-18"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-01-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-01-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-10-16"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Tokenizes arguments string of the form: {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}\u003cbr\u003e","lastModifiedDate":"2016-10-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":" *     e.g. {@code some preamble text t/ 11.00 t/12.00 k/ m/ July}  where prefixes are {@code t/ k/ m/}.\u003cbr\u003e","lastModifiedDate":"2017-05-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * 1. An argument\u0027s value can be an empty string e.g. the value of {@code k/} in the above example.\u003cbr\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * 2. Leading and trailing whitespaces of an argument value will be discarded.\u003cbr\u003e","lastModifiedDate":"2016-10-16"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * 3. An argument may be repeated and all its values will be accumulated e.g. the value of {@code t/}","lastModifiedDate":"2017-05-19"},{"lineNumber":14,"author":{"gitId":"-"},"content":" *    in the above example.\u003cbr\u003e","lastModifiedDate":"2016-10-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-10-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class ArgumentTokenizer {","lastModifiedDate":"2016-10-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * Tokenizes an arguments string and returns an {@code ArgumentMultimap} object that maps prefixes to their","lastModifiedDate":"2017-03-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * respective argument values. Only the given prefixes will be recognized in the arguments string.","lastModifiedDate":"2017-03-20"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * @param argsString Arguments string of the form: {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}","lastModifiedDate":"2017-03-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * @param prefixes   Prefixes to tokenize the arguments string with","lastModifiedDate":"2017-03-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @return           ArgumentMultimap object that maps prefixes to their arguments","lastModifiedDate":"2017-03-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static ArgumentMultimap tokenize(String argsString, Prefix... prefixes) {","lastModifiedDate":"2017-03-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        List\u003cPrefixPosition\u003e positions \u003d findAllPrefixPositions(argsString, prefixes);","lastModifiedDate":"2017-03-20"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        return extractArguments(argsString, positions);","lastModifiedDate":"2017-03-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * Finds all zero-based prefix positions in the given arguments string.","lastModifiedDate":"2017-03-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * @param argsString Arguments string of the form: {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}","lastModifiedDate":"2017-03-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * @param prefixes   Prefixes to find in the arguments string","lastModifiedDate":"2017-03-20"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * @return           List of zero-based prefix positions in the given arguments string","lastModifiedDate":"2017-03-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private static List\u003cPrefixPosition\u003e findAllPrefixPositions(String argsString, Prefix... prefixes) {","lastModifiedDate":"2017-03-20"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return Arrays.stream(prefixes)","lastModifiedDate":"2018-01-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"                .flatMap(prefix -\u003e findPrefixPositions(argsString, prefix).stream())","lastModifiedDate":"2018-01-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"                .collect(Collectors.toList());","lastModifiedDate":"2018-01-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * {@see findAllPrefixPositions}","lastModifiedDate":"2017-03-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    private static List\u003cPrefixPosition\u003e findPrefixPositions(String argsString, Prefix prefix) {","lastModifiedDate":"2017-03-20"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        List\u003cPrefixPosition\u003e positions \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2016-10-16"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        int prefixPosition \u003d findPrefixPosition(argsString, prefix.getPrefix(), 0);","lastModifiedDate":"2017-05-19"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        while (prefixPosition !\u003d -1) {","lastModifiedDate":"2017-05-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"            PrefixPosition extendedPrefix \u003d new PrefixPosition(prefix, prefixPosition);","lastModifiedDate":"2017-05-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            positions.add(extendedPrefix);","lastModifiedDate":"2016-10-16"},{"lineNumber":54,"author":{"gitId":"-"},"content":"            prefixPosition \u003d findPrefixPosition(argsString, prefix.getPrefix(), prefixPosition);","lastModifiedDate":"2017-05-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        return positions;","lastModifiedDate":"2016-10-16"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-19"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     * Returns the index of the first occurrence of {@code prefix} in","lastModifiedDate":"2017-05-19"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * {@code argsString} starting from index {@code fromIndex}. An occurrence","lastModifiedDate":"2017-05-19"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * is valid if there is a whitespace before {@code prefix}. Returns -1 if no","lastModifiedDate":"2017-05-19"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * such occurrence can be found.","lastModifiedDate":"2017-05-19"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-19"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     * E.g if {@code argsString} \u003d \"e/hip/900\", {@code prefix} \u003d \"p/\" and","lastModifiedDate":"2017-05-19"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     * {@code fromIndex} \u003d 0, this method returns -1 as there are no valid","lastModifiedDate":"2017-05-19"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     * occurrences of \"p/\" with whitespace before it. However, if","lastModifiedDate":"2017-05-19"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     * {@code argsString} \u003d \"e/hi p/900\", {@code prefix} \u003d \"p/\" and","lastModifiedDate":"2017-05-19"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     * {@code fromIndex} \u003d 0, this method returns 5.","lastModifiedDate":"2017-05-19"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-19"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    private static int findPrefixPosition(String argsString, String prefix, int fromIndex) {","lastModifiedDate":"2017-05-19"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        int prefixIndex \u003d argsString.indexOf(\" \" + prefix, fromIndex);","lastModifiedDate":"2017-05-19"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        return prefixIndex \u003d\u003d -1 ? -1","lastModifiedDate":"2017-05-19"},{"lineNumber":75,"author":{"gitId":"-"},"content":"                : prefixIndex + 1; // +1 as offset for whitespace","lastModifiedDate":"2017-05-19"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-19"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * Extracts prefixes and their argument values, and returns an {@code ArgumentMultimap} object that maps the","lastModifiedDate":"2017-03-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * extracted prefixes to their respective arguments. Prefixes are extracted based on their zero-based positions in","lastModifiedDate":"2017-03-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     * {@code argsString}.","lastModifiedDate":"2017-03-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     * @param argsString      Arguments string of the form: {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}","lastModifiedDate":"2017-03-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     * @param prefixPositions Zero-based positions of all prefixes in {@code argsString}","lastModifiedDate":"2017-03-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     * @return                ArgumentMultimap object that maps prefixes to their arguments","lastModifiedDate":"2017-03-08"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    private static ArgumentMultimap extractArguments(String argsString, List\u003cPrefixPosition\u003e prefixPositions) {","lastModifiedDate":"2017-03-20"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        // Sort by start position","lastModifiedDate":"2016-10-16"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        prefixPositions.sort((prefix1, prefix2) -\u003e prefix1.getStartPosition() - prefix2.getStartPosition());","lastModifiedDate":"2016-10-16"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        // Insert a PrefixPosition to represent the preamble","lastModifiedDate":"2016-10-16"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        PrefixPosition preambleMarker \u003d new PrefixPosition(new Prefix(\"\"), 0);","lastModifiedDate":"2016-10-16"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        prefixPositions.add(0, preambleMarker);","lastModifiedDate":"2016-10-16"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        // Add a dummy PrefixPosition to represent the end of the string","lastModifiedDate":"2016-10-16"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        PrefixPosition endPositionMarker \u003d new PrefixPosition(new Prefix(\"\"), argsString.length());","lastModifiedDate":"2016-10-16"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        prefixPositions.add(endPositionMarker);","lastModifiedDate":"2016-10-16"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        // Map prefixes to their argument values (if any)","lastModifiedDate":"2017-03-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d new ArgumentMultimap();","lastModifiedDate":"2017-03-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        for (int i \u003d 0; i \u003c prefixPositions.size() - 1; i++) {","lastModifiedDate":"2016-10-16"},{"lineNumber":103,"author":{"gitId":"-"},"content":"            // Extract and store prefixes and their arguments","lastModifiedDate":"2017-03-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"            Prefix argPrefix \u003d prefixPositions.get(i).getPrefix();","lastModifiedDate":"2017-03-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"            String argValue \u003d extractArgumentValue(argsString, prefixPositions.get(i), prefixPositions.get(i + 1));","lastModifiedDate":"2016-10-16"},{"lineNumber":106,"author":{"gitId":"-"},"content":"            argMultimap.put(argPrefix, argValue);","lastModifiedDate":"2017-03-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-16"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        return argMultimap;","lastModifiedDate":"2017-03-08"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":113,"author":{"gitId":"-"},"content":"     * Returns the trimmed value of the argument in the arguments string specified by {@code currentPrefixPosition}.","lastModifiedDate":"2017-03-08"},{"lineNumber":114,"author":{"gitId":"-"},"content":"     * The end position of the value is determined by {@code nextPrefixPosition}.","lastModifiedDate":"2017-03-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    private static String extractArgumentValue(String argsString,","lastModifiedDate":"2017-03-20"},{"lineNumber":117,"author":{"gitId":"-"},"content":"                                        PrefixPosition currentPrefixPosition,","lastModifiedDate":"2016-10-16"},{"lineNumber":118,"author":{"gitId":"-"},"content":"                                        PrefixPosition nextPrefixPosition) {","lastModifiedDate":"2016-10-16"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        Prefix prefix \u003d currentPrefixPosition.getPrefix();","lastModifiedDate":"2016-10-16"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        int valueStartPos \u003d currentPrefixPosition.getStartPosition() + prefix.getPrefix().length();","lastModifiedDate":"2016-10-16"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        String value \u003d argsString.substring(valueStartPos, nextPrefixPosition.getStartPosition());","lastModifiedDate":"2016-10-16"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        return value.trim();","lastModifiedDate":"2016-10-16"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":128,"author":{"gitId":"-"},"content":"     * Represents a prefix\u0027s position in an arguments string.","lastModifiedDate":"2017-03-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-19"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    private static class PrefixPosition {","lastModifiedDate":"2017-03-20"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        private int startPosition;","lastModifiedDate":"2016-10-19"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        private final Prefix prefix;","lastModifiedDate":"2016-10-19"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        PrefixPosition(Prefix prefix, int startPosition) {","lastModifiedDate":"2016-10-19"},{"lineNumber":135,"author":{"gitId":"-"},"content":"            this.prefix \u003d prefix;","lastModifiedDate":"2016-10-19"},{"lineNumber":136,"author":{"gitId":"-"},"content":"            this.startPosition \u003d startPosition;","lastModifiedDate":"2016-10-19"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-19"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        int getStartPosition() {","lastModifiedDate":"2016-10-19"},{"lineNumber":140,"author":{"gitId":"-"},"content":"            return startPosition;","lastModifiedDate":"2018-08-14"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-19"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        Prefix getPrefix() {","lastModifiedDate":"2016-10-19"},{"lineNumber":144,"author":{"gitId":"-"},"content":"            return prefix;","lastModifiedDate":"2018-08-14"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-19"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-19"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":148,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-10-16"}],"authorContributionMap":{"ramapriyan912001":1,"-":147}},{"path":"src/main/java/seedu/awe/logic/parser/AweParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ramapriyan912001"},"content":"package seedu.awe.logic.parser;","lastModifiedDate":"2021-10-05"},{"lineNumber":2,"author":{"gitId":"Jingwencloud"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":3,"author":{"gitId":"chrus-chong"},"content":"import static seedu.awe.commons.core.Messages.MESSAGE_HELPCOMMAND_USAGE;","lastModifiedDate":"2021-10-25"},{"lineNumber":4,"author":{"gitId":"ramapriyan912001"},"content":"import static seedu.awe.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-10-05"},{"lineNumber":5,"author":{"gitId":"ramapriyan912001"},"content":"import static seedu.awe.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2021-10-05"},{"lineNumber":6,"author":{"gitId":"Jingwencloud"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"marcuspeh"},"content":"import seedu.awe.logic.commands.AddContactCommand;","lastModifiedDate":"2021-10-11"},{"lineNumber":11,"author":{"gitId":"kheekheekhee"},"content":"import seedu.awe.logic.commands.AddExpenseCommand;","lastModifiedDate":"2021-10-06"},{"lineNumber":12,"author":{"gitId":"ramapriyan912001"},"content":"import seedu.awe.logic.commands.CalculatePaymentsCommand;","lastModifiedDate":"2021-10-17"},{"lineNumber":13,"author":{"gitId":"ramapriyan912001"},"content":"import seedu.awe.logic.commands.ClearAllDataCommand;","lastModifiedDate":"2021-10-30"},{"lineNumber":14,"author":{"gitId":"ramapriyan912001"},"content":"import seedu.awe.logic.commands.Command;","lastModifiedDate":"2021-10-05"},{"lineNumber":15,"author":{"gitId":"ramapriyan912001"},"content":"import seedu.awe.logic.commands.CreateGroupCommand;","lastModifiedDate":"2021-10-05"},{"lineNumber":16,"author":{"gitId":"marcuspeh"},"content":"import seedu.awe.logic.commands.DeleteContactCommand;","lastModifiedDate":"2021-10-11"},{"lineNumber":17,"author":{"gitId":"ramapriyan912001"},"content":"import seedu.awe.logic.commands.DeleteExpenseCommand;","lastModifiedDate":"2021-10-09"},{"lineNumber":18,"author":{"gitId":"ramapriyan912001"},"content":"import seedu.awe.logic.commands.DeleteGroupCommand;","lastModifiedDate":"2021-10-05"},{"lineNumber":19,"author":{"gitId":"marcuspeh"},"content":"import seedu.awe.logic.commands.EditContactCommand;","lastModifiedDate":"2021-10-11"},{"lineNumber":20,"author":{"gitId":"ramapriyan912001"},"content":"import seedu.awe.logic.commands.ExitCommand;","lastModifiedDate":"2021-10-05"},{"lineNumber":21,"author":{"gitId":"marcuspeh"},"content":"import seedu.awe.logic.commands.FindContactsCommand;","lastModifiedDate":"2021-10-10"},{"lineNumber":22,"author":{"gitId":"Jingwencloud"},"content":"import seedu.awe.logic.commands.FindExpensesCommand;","lastModifiedDate":"2021-10-12"},{"lineNumber":23,"author":{"gitId":"marcuspeh"},"content":"import seedu.awe.logic.commands.FindGroupsCommand;","lastModifiedDate":"2021-10-10"},{"lineNumber":24,"author":{"gitId":"chrus-chong"},"content":"import seedu.awe.logic.commands.GroupAddContactCommand;","lastModifiedDate":"2021-10-20"},{"lineNumber":25,"author":{"gitId":"chrus-chong"},"content":"import seedu.awe.logic.commands.GroupAddTagCommand;","lastModifiedDate":"2021-10-20"},{"lineNumber":26,"author":{"gitId":"chrus-chong"},"content":"import seedu.awe.logic.commands.GroupEditNameCommand;","lastModifiedDate":"2021-10-12"},{"lineNumber":27,"author":{"gitId":"chrus-chong"},"content":"import seedu.awe.logic.commands.GroupRemoveContactCommand;","lastModifiedDate":"2021-10-20"},{"lineNumber":28,"author":{"gitId":"chrus-chong"},"content":"import seedu.awe.logic.commands.GroupRemoveTagCommand;","lastModifiedDate":"2021-10-20"},{"lineNumber":29,"author":{"gitId":"ramapriyan912001"},"content":"import seedu.awe.logic.commands.HelpCommand;","lastModifiedDate":"2021-10-05"},{"lineNumber":30,"author":{"gitId":"ramapriyan912001"},"content":"import seedu.awe.logic.commands.ListContactsCommand;","lastModifiedDate":"2021-10-05"},{"lineNumber":31,"author":{"gitId":"Jingwencloud"},"content":"import seedu.awe.logic.commands.ListExpensesCommand;","lastModifiedDate":"2021-10-06"},{"lineNumber":32,"author":{"gitId":"Jingwencloud"},"content":"import seedu.awe.logic.commands.ListGroupsCommand;","lastModifiedDate":"2021-10-06"},{"lineNumber":33,"author":{"gitId":"marcuspeh"},"content":"import seedu.awe.logic.commands.ListTransactionSummaryCommand;","lastModifiedDate":"2021-10-18"},{"lineNumber":34,"author":{"gitId":"ramapriyan912001"},"content":"import seedu.awe.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-10-05"},{"lineNumber":35,"author":{"gitId":"ramapriyan912001"},"content":"import seedu.awe.model.Model;","lastModifiedDate":"2021-10-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":" * Parses user input.","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"marcuspeh"},"content":"public class AweParser {","lastModifiedDate":"2021-10-22"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * Used for initial separation of command word and args.","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    private static final Pattern BASIC_COMMAND_FORMAT \u003d Pattern.compile(\"(?\u003ccommandWord\u003e\\\\S+)(?\u003carguments\u003e.*)\");","lastModifiedDate":"2016-09-22"},{"lineNumber":46,"author":{"gitId":"chrus-chong"},"content":"    private Model model;","lastModifiedDate":"2021-09-18"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"marcuspeh"},"content":"    public AweParser() {}","lastModifiedDate":"2021-10-22"},{"lineNumber":49,"author":{"gitId":"marcuspeh"},"content":"    public AweParser(Model model) {","lastModifiedDate":"2021-10-22"},{"lineNumber":50,"author":{"gitId":"chrus-chong"},"content":"        this.model \u003d model;","lastModifiedDate":"2021-09-18"},{"lineNumber":51,"author":{"gitId":"chrus-chong"},"content":"    }","lastModifiedDate":"2021-09-18"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * Parses user input into command for execution.","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * @param userInput full user input string","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * @return the command based on the user input","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":59,"author":{"gitId":"ramapriyan912001"},"content":"    public Command parseCommand(String userInput) throws ParseException {","lastModifiedDate":"2021-10-09"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        final Matcher matcher \u003d BASIC_COMMAND_FORMAT.matcher(userInput.trim());","lastModifiedDate":"2016-08-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        if (!matcher.matches()) {","lastModifiedDate":"2016-08-24"},{"lineNumber":62,"author":{"gitId":"chrus-chong"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, MESSAGE_HELPCOMMAND_USAGE));","lastModifiedDate":"2021-10-25"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        final String commandWord \u003d matcher.group(\"commandWord\");","lastModifiedDate":"2016-08-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        final String arguments \u003d matcher.group(\"arguments\");","lastModifiedDate":"2016-08-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        switch (commandWord) {","lastModifiedDate":"2016-08-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":69,"author":{"gitId":"marcuspeh"},"content":"        case AddContactCommand.COMMAND_WORD:","lastModifiedDate":"2021-10-11"},{"lineNumber":70,"author":{"gitId":"chrus-chong"},"content":"            return new AddContactCommandParser().parse(arguments);","lastModifiedDate":"2021-10-25"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":72,"author":{"gitId":"marcuspeh"},"content":"        case EditContactCommand.COMMAND_WORD:","lastModifiedDate":"2021-10-11"},{"lineNumber":73,"author":{"gitId":"-"},"content":"            return new EditCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":75,"author":{"gitId":"marcuspeh"},"content":"        case DeleteContactCommand.COMMAND_WORD:","lastModifiedDate":"2021-10-11"},{"lineNumber":76,"author":{"gitId":"chrus-chong"},"content":"            return new DeleteContactCommandParser().parse(arguments);","lastModifiedDate":"2021-10-25"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":78,"author":{"gitId":"ramapriyan912001"},"content":"        case ClearAllDataCommand.COMMAND_WORD:","lastModifiedDate":"2021-10-30"},{"lineNumber":79,"author":{"gitId":"ramapriyan912001"},"content":"            return new ClearAllDataCommand();","lastModifiedDate":"2021-10-30"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":81,"author":{"gitId":"marcuspeh"},"content":"        case FindContactsCommand.COMMAND_WORD:","lastModifiedDate":"2021-10-10"},{"lineNumber":82,"author":{"gitId":"marcuspeh"},"content":"            return new FindContactsCommandParser().parse(arguments);","lastModifiedDate":"2021-10-10"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":84,"author":{"gitId":"marcuspeh"},"content":"        case FindGroupsCommand.COMMAND_WORD:","lastModifiedDate":"2021-10-10"},{"lineNumber":85,"author":{"gitId":"marcuspeh"},"content":"            return new FindGroupsCommandParser().parse(arguments);","lastModifiedDate":"2021-10-10"},{"lineNumber":86,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":87,"author":{"gitId":"Jingwencloud"},"content":"        case FindExpensesCommand.COMMAND_WORD:","lastModifiedDate":"2021-10-12"},{"lineNumber":88,"author":{"gitId":"Jingwencloud"},"content":"            return new FindExpensesCommandParser().parse(arguments);","lastModifiedDate":"2021-10-12"},{"lineNumber":89,"author":{"gitId":"Jingwencloud"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":90,"author":{"gitId":"marcuspeh"},"content":"        case ListContactsCommand.COMMAND_WORD:","lastModifiedDate":"2021-10-03"},{"lineNumber":91,"author":{"gitId":"marcuspeh"},"content":"            return new ListContactsCommand();","lastModifiedDate":"2021-10-03"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":93,"author":{"gitId":"marcuspeh"},"content":"        case ListGroupsCommand.COMMAND_WORD:","lastModifiedDate":"2021-09-30"},{"lineNumber":94,"author":{"gitId":"marcuspeh"},"content":"            return new ListGroupsCommand();","lastModifiedDate":"2021-09-30"},{"lineNumber":95,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":96,"author":{"gitId":"Jingwencloud"},"content":"        case ListExpensesCommand.COMMAND_WORD:","lastModifiedDate":"2021-10-05"},{"lineNumber":97,"author":{"gitId":"Jingwencloud"},"content":"            return new ListExpensesCommandParser().parse(arguments);","lastModifiedDate":"2021-10-07"},{"lineNumber":98,"author":{"gitId":"Jingwencloud"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":99,"author":{"gitId":"ramapriyan912001"},"content":"        case DeleteExpenseCommand.COMMAND_WORD:","lastModifiedDate":"2021-10-09"},{"lineNumber":100,"author":{"gitId":"ramapriyan912001"},"content":"            return new DeleteExpenseCommandParser().parse(arguments);","lastModifiedDate":"2021-10-09"},{"lineNumber":101,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        case ExitCommand.COMMAND_WORD:","lastModifiedDate":"2016-08-24"},{"lineNumber":103,"author":{"gitId":"-"},"content":"            return new ExitCommand();","lastModifiedDate":"2016-08-24"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        case HelpCommand.COMMAND_WORD:","lastModifiedDate":"2016-08-26"},{"lineNumber":106,"author":{"gitId":"-"},"content":"            return new HelpCommand();","lastModifiedDate":"2016-08-24"},{"lineNumber":107,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":108,"author":{"gitId":"chrus-chong"},"content":"        case CreateGroupCommand.COMMAND_WORD:","lastModifiedDate":"2021-09-18"},{"lineNumber":109,"author":{"gitId":"ramapriyan912001"},"content":"            return new CreateGroupCommandParser(model).parse(arguments);","lastModifiedDate":"2021-10-05"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":111,"author":{"gitId":"ramapriyan912001"},"content":"        case DeleteGroupCommand.COMMAND_WORD:","lastModifiedDate":"2021-09-26"},{"lineNumber":112,"author":{"gitId":"ramapriyan912001"},"content":"            return new DeleteGroupCommandParser(model).parse(arguments);","lastModifiedDate":"2021-10-05"},{"lineNumber":113,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":114,"author":{"gitId":"kheekheekhee"},"content":"        case AddExpenseCommand.COMMAND_WORD:","lastModifiedDate":"2021-10-06"},{"lineNumber":115,"author":{"gitId":"kheekheekhee"},"content":"            return new AddExpenseCommandParser(model).parse(arguments);","lastModifiedDate":"2021-10-11"},{"lineNumber":116,"author":{"gitId":"kheekheekhee"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":117,"author":{"gitId":"chrus-chong"},"content":"        case GroupAddContactCommand.COMMAND_WORD:","lastModifiedDate":"2021-10-20"},{"lineNumber":118,"author":{"gitId":"chrus-chong"},"content":"            return new GroupAddContactCommandParser(model).parse(arguments);","lastModifiedDate":"2021-10-20"},{"lineNumber":119,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":120,"author":{"gitId":"chrus-chong"},"content":"        case GroupRemoveContactCommand.COMMAND_WORD:","lastModifiedDate":"2021-10-20"},{"lineNumber":121,"author":{"gitId":"chrus-chong"},"content":"            return new GroupRemoveContactCommandParser(model).parse(arguments);","lastModifiedDate":"2021-10-20"},{"lineNumber":122,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":123,"author":{"gitId":"chrus-chong"},"content":"        case GroupEditNameCommand.COMMAND_WORD:","lastModifiedDate":"2021-10-12"},{"lineNumber":124,"author":{"gitId":"chrus-chong"},"content":"            return new GroupEditNameCommandParser().parse(arguments);","lastModifiedDate":"2021-10-12"},{"lineNumber":125,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":126,"author":{"gitId":"chrus-chong"},"content":"        case GroupAddTagCommand.COMMAND_WORD:","lastModifiedDate":"2021-10-20"},{"lineNumber":127,"author":{"gitId":"chrus-chong"},"content":"            return new GroupAddTagCommandParser().parse(arguments);","lastModifiedDate":"2021-10-20"},{"lineNumber":128,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":129,"author":{"gitId":"chrus-chong"},"content":"        case GroupRemoveTagCommand.COMMAND_WORD:","lastModifiedDate":"2021-10-20"},{"lineNumber":130,"author":{"gitId":"chrus-chong"},"content":"            return new GroupRemoveTagCommandParser().parse(arguments);","lastModifiedDate":"2021-10-20"},{"lineNumber":131,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":132,"author":{"gitId":"marcuspeh"},"content":"        case ListTransactionSummaryCommand.COMMAND_WORD:","lastModifiedDate":"2021-10-18"},{"lineNumber":133,"author":{"gitId":"marcuspeh"},"content":"            return new ListTransactionSummaryCommandParser().parse(arguments);","lastModifiedDate":"2021-10-18"},{"lineNumber":134,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":135,"author":{"gitId":"ramapriyan912001"},"content":"        case CalculatePaymentsCommand.COMMAND_WORD:","lastModifiedDate":"2021-10-17"},{"lineNumber":136,"author":{"gitId":"ramapriyan912001"},"content":"            return new CalculatePaymentsCommandParser().parse(arguments);","lastModifiedDate":"2021-10-17"},{"lineNumber":137,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        default:","lastModifiedDate":"2016-08-26"},{"lineNumber":139,"author":{"gitId":"-"},"content":"            throw new ParseException(MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2017-03-11"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":143,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"Jingwencloud":11,"marcuspeh":26,"chrus-chong":28,"kheekheekhee":4,"ramapriyan912001":27,"-":47}},{"path":"src/main/java/seedu/awe/logic/parser/CalculatePaymentsCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ramapriyan912001"},"content":"package seedu.awe.logic.parser;","lastModifiedDate":"2021-10-17"},{"lineNumber":2,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":3,"author":{"gitId":"chrus-chong"},"content":"import static seedu.awe.commons.core.Messages.MESSAGE_CALCULATEPAYMENTSCOMMAND_USAGE;","lastModifiedDate":"2021-10-25"},{"lineNumber":4,"author":{"gitId":"ramapriyan912001"},"content":"import static seedu.awe.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-10-17"},{"lineNumber":5,"author":{"gitId":"ramapriyan912001"},"content":"import static seedu.awe.logic.parser.CliSyntax.PREFIX_GROUP_NAME;","lastModifiedDate":"2021-10-17"},{"lineNumber":6,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":7,"author":{"gitId":"ramapriyan912001"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-17"},{"lineNumber":8,"author":{"gitId":"ramapriyan912001"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2021-10-17"},{"lineNumber":9,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":10,"author":{"gitId":"ramapriyan912001"},"content":"import seedu.awe.logic.commands.CalculatePaymentsCommand;","lastModifiedDate":"2021-10-17"},{"lineNumber":11,"author":{"gitId":"ramapriyan912001"},"content":"import seedu.awe.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-10-17"},{"lineNumber":12,"author":{"gitId":"ramapriyan912001"},"content":"import seedu.awe.model.group.Group;","lastModifiedDate":"2021-10-17"},{"lineNumber":13,"author":{"gitId":"ramapriyan912001"},"content":"import seedu.awe.model.group.GroupName;","lastModifiedDate":"2021-10-17"},{"lineNumber":14,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":15,"author":{"gitId":"ramapriyan912001"},"content":"public class CalculatePaymentsCommandParser implements Parser\u003cCalculatePaymentsCommand\u003e {","lastModifiedDate":"2021-10-17"},{"lineNumber":16,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":17,"author":{"gitId":"ramapriyan912001"},"content":"    @Override","lastModifiedDate":"2021-10-17"},{"lineNumber":18,"author":{"gitId":"ramapriyan912001"},"content":"    public CalculatePaymentsCommand parse(String args) throws ParseException {","lastModifiedDate":"2021-10-17"},{"lineNumber":19,"author":{"gitId":"chrus-chong"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(args, PREFIX_GROUP_NAME);","lastModifiedDate":"2021-10-25"},{"lineNumber":20,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":21,"author":{"gitId":"ramapriyan912001"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_GROUP_NAME)","lastModifiedDate":"2021-10-17"},{"lineNumber":22,"author":{"gitId":"ramapriyan912001"},"content":"                || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2021-10-17"},{"lineNumber":23,"author":{"gitId":"ramapriyan912001"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2021-10-17"},{"lineNumber":24,"author":{"gitId":"chrus-chong"},"content":"                    MESSAGE_CALCULATEPAYMENTSCOMMAND_USAGE));","lastModifiedDate":"2021-10-25"},{"lineNumber":25,"author":{"gitId":"ramapriyan912001"},"content":"        }","lastModifiedDate":"2021-10-17"},{"lineNumber":26,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":27,"author":{"gitId":"ramapriyan912001"},"content":"        GroupName groupName \u003d ParserUtil.parseGroupName(argMultimap.getValue(PREFIX_GROUP_NAME).get());","lastModifiedDate":"2021-10-17"},{"lineNumber":28,"author":{"gitId":"ramapriyan912001"},"content":"        Group group \u003d new Group(groupName, new ArrayList\u003c\u003e());","lastModifiedDate":"2021-10-17"},{"lineNumber":29,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":30,"author":{"gitId":"ramapriyan912001"},"content":"        return new CalculatePaymentsCommand(group);","lastModifiedDate":"2021-10-17"},{"lineNumber":31,"author":{"gitId":"ramapriyan912001"},"content":"    }","lastModifiedDate":"2021-10-17"},{"lineNumber":32,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":33,"author":{"gitId":"ramapriyan912001"},"content":"    /**","lastModifiedDate":"2021-10-17"},{"lineNumber":34,"author":{"gitId":"ramapriyan912001"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2021-10-17"},{"lineNumber":35,"author":{"gitId":"ramapriyan912001"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2021-10-17"},{"lineNumber":36,"author":{"gitId":"ramapriyan912001"},"content":"     */","lastModifiedDate":"2021-10-17"},{"lineNumber":37,"author":{"gitId":"ramapriyan912001"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2021-10-17"},{"lineNumber":38,"author":{"gitId":"ramapriyan912001"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2021-10-17"},{"lineNumber":39,"author":{"gitId":"ramapriyan912001"},"content":"    }","lastModifiedDate":"2021-10-17"},{"lineNumber":40,"author":{"gitId":"ramapriyan912001"},"content":"}","lastModifiedDate":"2021-10-17"}],"authorContributionMap":{"chrus-chong":3,"ramapriyan912001":37}},{"path":"src/main/java/seedu/awe/logic/parser/CliSyntax.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ramapriyan912001"},"content":"package seedu.awe.logic.parser;","lastModifiedDate":"2021-10-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Contains Command Line Interface (CLI) syntax definitions common to multiple commands","lastModifiedDate":"2017-02-11"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class CliSyntax {","lastModifiedDate":"2017-02-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    /* Prefix definitions */","lastModifiedDate":"2017-02-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_NAME \u003d new Prefix(\"n/\");","lastModifiedDate":"2017-06-06"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_PHONE \u003d new Prefix(\"p/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_TAG \u003d new Prefix(\"t/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":12,"author":{"gitId":"ramapriyan912001"},"content":"    public static final Prefix PREFIX_GROUP_NAME \u003d new Prefix(\"gn/\");","lastModifiedDate":"2021-09-26"},{"lineNumber":13,"author":{"gitId":"kheekheekhee"},"content":"    public static final Prefix PREFIX_COST \u003d new Prefix(\"$/\");","lastModifiedDate":"2021-10-06"},{"lineNumber":14,"author":{"gitId":"kheekheekhee"},"content":"    public static final Prefix PREFIX_DESCRIPTION \u003d new Prefix(\"d/\");","lastModifiedDate":"2021-10-06"},{"lineNumber":15,"author":{"gitId":"kheekheekhee"},"content":"    public static final Prefix PREFIX_EXCLUDE \u003d new Prefix(\"ex/\");","lastModifiedDate":"2021-10-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-11"}],"authorContributionMap":{"kheekheekhee":3,"ramapriyan912001":2,"-":11}},{"path":"src/main/java/seedu/awe/logic/parser/CreateGroupCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ramapriyan912001"},"content":"package seedu.awe.logic.parser;","lastModifiedDate":"2021-10-05"},{"lineNumber":2,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":3,"author":{"gitId":"chrus-chong"},"content":"import static seedu.awe.commons.core.Messages.MESSAGE_CREATEGROUPCOMMAND_EMPTY_GROUP;","lastModifiedDate":"2021-10-25"},{"lineNumber":4,"author":{"gitId":"chrus-chong"},"content":"import static seedu.awe.commons.core.Messages.MESSAGE_CREATEGROUPCOMMAND_ERROR;","lastModifiedDate":"2021-10-25"},{"lineNumber":5,"author":{"gitId":"chrus-chong"},"content":"import static seedu.awe.commons.core.Messages.MESSAGE_CREATEGROUPCOMMAND_INVALID_NAMES;","lastModifiedDate":"2021-10-25"},{"lineNumber":6,"author":{"gitId":"chrus-chong"},"content":"import static seedu.awe.commons.core.Messages.MESSAGE_CREATEGROUPCOMMAND_USAGE;","lastModifiedDate":"2021-10-25"},{"lineNumber":7,"author":{"gitId":"ramapriyan912001"},"content":"import static seedu.awe.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-10-05"},{"lineNumber":8,"author":{"gitId":"ramapriyan912001"},"content":"import static seedu.awe.logic.parser.CliSyntax.PREFIX_GROUP_NAME;","lastModifiedDate":"2021-10-05"},{"lineNumber":9,"author":{"gitId":"ramapriyan912001"},"content":"import static seedu.awe.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2021-10-05"},{"lineNumber":10,"author":{"gitId":"ramapriyan912001"},"content":"import static seedu.awe.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2021-10-09"},{"lineNumber":11,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":12,"author":{"gitId":"chrus-chong"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-09-18"},{"lineNumber":13,"author":{"gitId":"ramapriyan912001"},"content":"import java.util.List;","lastModifiedDate":"2021-10-09"},{"lineNumber":14,"author":{"gitId":"chrus-chong"},"content":"import java.util.Objects;","lastModifiedDate":"2021-09-18"},{"lineNumber":15,"author":{"gitId":"ramapriyan912001"},"content":"import java.util.Set;","lastModifiedDate":"2021-10-09"},{"lineNumber":16,"author":{"gitId":"ramapriyan912001"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2021-10-03"},{"lineNumber":17,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":18,"author":{"gitId":"chrus-chong"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-09-18"},{"lineNumber":19,"author":{"gitId":"ramapriyan912001"},"content":"import seedu.awe.logic.commands.CreateGroupCommand;","lastModifiedDate":"2021-10-05"},{"lineNumber":20,"author":{"gitId":"ramapriyan912001"},"content":"import seedu.awe.logic.parser.exceptions.EmptyGroupException;","lastModifiedDate":"2021-10-05"},{"lineNumber":21,"author":{"gitId":"ramapriyan912001"},"content":"import seedu.awe.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-10-05"},{"lineNumber":22,"author":{"gitId":"ramapriyan912001"},"content":"import seedu.awe.model.Model;","lastModifiedDate":"2021-10-05"},{"lineNumber":23,"author":{"gitId":"ramapriyan912001"},"content":"import seedu.awe.model.ReadOnlyAddressBook;","lastModifiedDate":"2021-10-05"},{"lineNumber":24,"author":{"gitId":"ramapriyan912001"},"content":"import seedu.awe.model.group.GroupName;","lastModifiedDate":"2021-10-05"},{"lineNumber":25,"author":{"gitId":"ramapriyan912001"},"content":"import seedu.awe.model.person.Name;","lastModifiedDate":"2021-10-05"},{"lineNumber":26,"author":{"gitId":"ramapriyan912001"},"content":"import seedu.awe.model.person.Person;","lastModifiedDate":"2021-10-05"},{"lineNumber":27,"author":{"gitId":"ramapriyan912001"},"content":"import seedu.awe.model.tag.Tag;","lastModifiedDate":"2021-10-09"},{"lineNumber":28,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":29,"author":{"gitId":"ramapriyan912001"},"content":"public class CreateGroupCommandParser implements Parser\u003cCreateGroupCommand\u003e {","lastModifiedDate":"2021-10-05"},{"lineNumber":30,"author":{"gitId":"chrus-chong"},"content":"    private static final String BAD_FORMATTING \u003d \"\\\"creategroup command\\\" is not properly formatted\";","lastModifiedDate":"2021-09-18"},{"lineNumber":31,"author":{"gitId":"chrus-chong"},"content":"    private ObservableList\u003cPerson\u003e allMembers;","lastModifiedDate":"2021-09-18"},{"lineNumber":32,"author":{"gitId":"chrus-chong"},"content":"    private final ArrayList\u003cPerson\u003e toBeAddedToGroup;","lastModifiedDate":"2021-09-18"},{"lineNumber":33,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":34,"author":{"gitId":"chrus-chong"},"content":"    /**","lastModifiedDate":"2021-09-18"},{"lineNumber":35,"author":{"gitId":"chrus-chong"},"content":"     * Creates new CreateGroupParser object.","lastModifiedDate":"2021-09-18"},{"lineNumber":36,"author":{"gitId":"chrus-chong"},"content":"     *","lastModifiedDate":"2021-09-18"},{"lineNumber":37,"author":{"gitId":"chrus-chong"},"content":"     * @param model Model object passed into constructor to provide list of contacts.","lastModifiedDate":"2021-09-18"},{"lineNumber":38,"author":{"gitId":"chrus-chong"},"content":"     */","lastModifiedDate":"2021-09-18"},{"lineNumber":39,"author":{"gitId":"ramapriyan912001"},"content":"    public CreateGroupCommandParser(Model model) {","lastModifiedDate":"2021-10-05"},{"lineNumber":40,"author":{"gitId":"chrus-chong"},"content":"        ReadOnlyAddressBook addressBook \u003d model.getAddressBook();","lastModifiedDate":"2021-09-18"},{"lineNumber":41,"author":{"gitId":"chrus-chong"},"content":"        this.allMembers \u003d addressBook.getPersonList();","lastModifiedDate":"2021-09-18"},{"lineNumber":42,"author":{"gitId":"chrus-chong"},"content":"        this.toBeAddedToGroup \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-09-18"},{"lineNumber":43,"author":{"gitId":"chrus-chong"},"content":"    }","lastModifiedDate":"2021-09-18"},{"lineNumber":44,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":45,"author":{"gitId":"chrus-chong"},"content":"    /**","lastModifiedDate":"2021-09-18"},{"lineNumber":46,"author":{"gitId":"chrus-chong"},"content":"     * Returns CreateGroupCommand based on user input.","lastModifiedDate":"2021-09-18"},{"lineNumber":47,"author":{"gitId":"chrus-chong"},"content":"     *","lastModifiedDate":"2021-09-18"},{"lineNumber":48,"author":{"gitId":"chrus-chong"},"content":"     * @param args User input into addressbook.","lastModifiedDate":"2021-09-18"},{"lineNumber":49,"author":{"gitId":"chrus-chong"},"content":"     * @return CreateGroupCommand object to represent command to be executed.","lastModifiedDate":"2021-09-18"},{"lineNumber":50,"author":{"gitId":"chrus-chong"},"content":"     * @throws ParseException If user input is incorrectly formatted.","lastModifiedDate":"2021-09-18"},{"lineNumber":51,"author":{"gitId":"chrus-chong"},"content":"     */","lastModifiedDate":"2021-09-18"},{"lineNumber":52,"author":{"gitId":"marcuspeh"},"content":"    public CreateGroupCommand parse(String args) throws ParseException, EmptyGroupException {","lastModifiedDate":"2021-10-20"},{"lineNumber":53,"author":{"gitId":"ramapriyan912001"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2021-10-03"},{"lineNumber":54,"author":{"gitId":"ramapriyan912001"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_GROUP_NAME, PREFIX_NAME, PREFIX_TAG);","lastModifiedDate":"2021-10-09"},{"lineNumber":55,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":56,"author":{"gitId":"chrus-chong"},"content":"        if (!ParserUtil.arePrefixesPresent(argMultimap, PREFIX_GROUP_NAME, PREFIX_NAME)","lastModifiedDate":"2021-10-11"},{"lineNumber":57,"author":{"gitId":"ramapriyan912001"},"content":"                || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2021-10-03"},{"lineNumber":58,"author":{"gitId":"chrus-chong"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, MESSAGE_CREATEGROUPCOMMAND_USAGE));","lastModifiedDate":"2021-10-25"},{"lineNumber":59,"author":{"gitId":"ramapriyan912001"},"content":"        }","lastModifiedDate":"2021-10-03"},{"lineNumber":60,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":61,"author":{"gitId":"ramapriyan912001"},"content":"        GroupName groupName \u003d ParserUtil.parseGroupName(argMultimap.getValue(PREFIX_GROUP_NAME).get());","lastModifiedDate":"2021-10-03"},{"lineNumber":62,"author":{"gitId":"ramapriyan912001"},"content":"        List\u003cName\u003e memberNames \u003d ParserUtil.parseMemberNames(argMultimap.getAllValues(PREFIX_NAME));","lastModifiedDate":"2021-10-09"},{"lineNumber":63,"author":{"gitId":"ramapriyan912001"},"content":"        Set\u003cTag\u003e tagSet \u003d ParserUtil.parseTags(argMultimap.getAllValues(PREFIX_TAG));","lastModifiedDate":"2021-10-09"},{"lineNumber":64,"author":{"gitId":"ramapriyan912001"},"content":"        ArrayList\u003cPerson\u003e members \u003d findGroupMembers(memberNames);","lastModifiedDate":"2021-10-09"},{"lineNumber":65,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":66,"author":{"gitId":"marcuspeh"},"content":"        boolean isValidCommand \u003d true;","lastModifiedDate":"2021-10-05"},{"lineNumber":67,"author":{"gitId":"ramapriyan912001"},"content":"        if (groupName.getName().equals(BAD_FORMATTING) || Objects.isNull(members)) {","lastModifiedDate":"2021-10-09"},{"lineNumber":68,"author":{"gitId":"marcuspeh"},"content":"            isValidCommand \u003d false;","lastModifiedDate":"2021-10-05"},{"lineNumber":69,"author":{"gitId":"chrus-chong"},"content":"        }","lastModifiedDate":"2021-09-18"},{"lineNumber":70,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":71,"author":{"gitId":"ramapriyan912001"},"content":"        return new CreateGroupCommand(groupName, members, isValidCommand, tagSet);","lastModifiedDate":"2021-10-09"},{"lineNumber":72,"author":{"gitId":"chrus-chong"},"content":"    }","lastModifiedDate":"2021-09-18"},{"lineNumber":73,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":74,"author":{"gitId":"chrus-chong"},"content":"    /**","lastModifiedDate":"2021-09-18"},{"lineNumber":75,"author":{"gitId":"ramapriyan912001"},"content":"     * Returns list of members in the group.","lastModifiedDate":"2021-10-04"},{"lineNumber":76,"author":{"gitId":"ramapriyan912001"},"content":"     * If user input not valid, null is returned.","lastModifiedDate":"2021-10-04"},{"lineNumber":77,"author":{"gitId":"chrus-chong"},"content":"     *","lastModifiedDate":"2021-09-18"},{"lineNumber":78,"author":{"gitId":"ramapriyan912001"},"content":"     * @param memberNames List of names representing names entered in command.","lastModifiedDate":"2021-10-09"},{"lineNumber":79,"author":{"gitId":"ramapriyan912001"},"content":"     * @return ArrayList of Person objects representing members to be added to the group","lastModifiedDate":"2021-10-04"},{"lineNumber":80,"author":{"gitId":"chrus-chong"},"content":"     */","lastModifiedDate":"2021-09-18"},{"lineNumber":81,"author":{"gitId":"marcuspeh"},"content":"    public ArrayList\u003cPerson\u003e findGroupMembers(List\u003cName\u003e memberNames) throws ParseException, EmptyGroupException {","lastModifiedDate":"2021-10-20"},{"lineNumber":82,"author":{"gitId":"chrus-chong"},"content":"        try {","lastModifiedDate":"2021-09-18"},{"lineNumber":83,"author":{"gitId":"ramapriyan912001"},"content":"            for (Name name : memberNames) {","lastModifiedDate":"2021-10-09"},{"lineNumber":84,"author":{"gitId":"ramapriyan912001"},"content":"                addMemberIfExist(name);","lastModifiedDate":"2021-10-09"},{"lineNumber":85,"author":{"gitId":"ramapriyan912001"},"content":"            }","lastModifiedDate":"2021-10-03"},{"lineNumber":86,"author":{"gitId":"ramapriyan912001"},"content":"            if (!memberNames.isEmpty() \u0026\u0026 toBeAddedToGroup.isEmpty()) {","lastModifiedDate":"2021-10-09"},{"lineNumber":87,"author":{"gitId":"chrus-chong"},"content":"                throw new ParseException(MESSAGE_CREATEGROUPCOMMAND_ERROR);","lastModifiedDate":"2021-10-25"},{"lineNumber":88,"author":{"gitId":"ramapriyan912001"},"content":"            } else if (toBeAddedToGroup.isEmpty()) {","lastModifiedDate":"2021-10-09"},{"lineNumber":89,"author":{"gitId":"ramapriyan912001"},"content":"                throw new EmptyGroupException(MESSAGE_INVALID_COMMAND_FORMAT);","lastModifiedDate":"2021-10-09"},{"lineNumber":90,"author":{"gitId":"chrus-chong"},"content":"            }","lastModifiedDate":"2021-09-18"},{"lineNumber":91,"author":{"gitId":"ramapriyan912001"},"content":"            return toBeAddedToGroup;","lastModifiedDate":"2021-10-04"},{"lineNumber":92,"author":{"gitId":"chrus-chong"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2021-09-18"},{"lineNumber":93,"author":{"gitId":"ramapriyan912001"},"content":"            throw new ParseException(MESSAGE_INVALID_COMMAND_FORMAT);","lastModifiedDate":"2021-10-05"},{"lineNumber":94,"author":{"gitId":"ramapriyan912001"},"content":"        } catch (EmptyGroupException err) {","lastModifiedDate":"2021-10-03"},{"lineNumber":95,"author":{"gitId":"chrus-chong"},"content":"            throw new EmptyGroupException(","lastModifiedDate":"2021-10-25"},{"lineNumber":96,"author":{"gitId":"chrus-chong"},"content":"                    String.format(MESSAGE_CREATEGROUPCOMMAND_EMPTY_GROUP,","lastModifiedDate":"2021-10-25"},{"lineNumber":97,"author":{"gitId":"chrus-chong"},"content":"                            MESSAGE_CREATEGROUPCOMMAND_INVALID_NAMES,","lastModifiedDate":"2021-10-25"},{"lineNumber":98,"author":{"gitId":"chrus-chong"},"content":"                            MESSAGE_CREATEGROUPCOMMAND_USAGE));","lastModifiedDate":"2021-10-25"},{"lineNumber":99,"author":{"gitId":"chrus-chong"},"content":"        }","lastModifiedDate":"2021-09-18"},{"lineNumber":100,"author":{"gitId":"chrus-chong"},"content":"    }","lastModifiedDate":"2021-09-18"},{"lineNumber":101,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":102,"author":{"gitId":"chrus-chong"},"content":"    /**","lastModifiedDate":"2021-09-18"},{"lineNumber":103,"author":{"gitId":"ramapriyan912001"},"content":"     * Returns list of members in the group.","lastModifiedDate":"2021-10-04"},{"lineNumber":104,"author":{"gitId":"ramapriyan912001"},"content":"     * If user input not valid, null is returned.","lastModifiedDate":"2021-10-04"},{"lineNumber":105,"author":{"gitId":"chrus-chong"},"content":"     *","lastModifiedDate":"2021-09-18"},{"lineNumber":106,"author":{"gitId":"chrus-chong"},"content":"     * @param memberName Name object representing name of member to be added.","lastModifiedDate":"2021-09-18"},{"lineNumber":107,"author":{"gitId":"chrus-chong"},"content":"     */","lastModifiedDate":"2021-09-18"},{"lineNumber":108,"author":{"gitId":"chrus-chong"},"content":"    public boolean addMemberIfExist(Name memberName) throws ParseException {","lastModifiedDate":"2021-10-11"},{"lineNumber":109,"author":{"gitId":"chrus-chong"},"content":"        boolean added \u003d false;","lastModifiedDate":"2021-10-10"},{"lineNumber":110,"author":{"gitId":"ramapriyan912001"},"content":"        Person memberFound \u003d findMember(memberName, this.allMembers);","lastModifiedDate":"2021-10-04"},{"lineNumber":111,"author":{"gitId":"chrus-chong"},"content":"        Stream\u003cName\u003e namesOfMembers \u003d this.toBeAddedToGroup.stream().map(member -\u003e member.getName());","lastModifiedDate":"2021-10-10"},{"lineNumber":112,"author":{"gitId":"chrus-chong"},"content":"        long numOfMembersWithSameName \u003d namesOfMembers.filter(existingName -\u003e existingName.equals(memberName)).count();","lastModifiedDate":"2021-10-10"},{"lineNumber":113,"author":{"gitId":"chrus-chong"},"content":"        if (!Objects.isNull(memberFound) \u0026\u0026 numOfMembersWithSameName \u003d\u003d 0) {","lastModifiedDate":"2021-10-10"},{"lineNumber":114,"author":{"gitId":"ramapriyan912001"},"content":"            toBeAddedToGroup.add(memberFound);","lastModifiedDate":"2021-10-04"},{"lineNumber":115,"author":{"gitId":"chrus-chong"},"content":"            added \u003d true;","lastModifiedDate":"2021-10-10"},{"lineNumber":116,"author":{"gitId":"chrus-chong"},"content":"        }","lastModifiedDate":"2021-09-18"},{"lineNumber":117,"author":{"gitId":"chrus-chong"},"content":"        if (!added) {","lastModifiedDate":"2021-10-11"},{"lineNumber":118,"author":{"gitId":"chrus-chong"},"content":"            throw new ParseException(MESSAGE_CREATEGROUPCOMMAND_ERROR);","lastModifiedDate":"2021-10-25"},{"lineNumber":119,"author":{"gitId":"chrus-chong"},"content":"        }","lastModifiedDate":"2021-10-11"},{"lineNumber":120,"author":{"gitId":"chrus-chong"},"content":"        return added;","lastModifiedDate":"2021-10-10"},{"lineNumber":121,"author":{"gitId":"chrus-chong"},"content":"    }","lastModifiedDate":"2021-09-18"},{"lineNumber":122,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":123,"author":{"gitId":"chrus-chong"},"content":"    /**","lastModifiedDate":"2021-09-18"},{"lineNumber":124,"author":{"gitId":"ramapriyan912001"},"content":"     * Returns person that matches a given Name object if in addressbook.","lastModifiedDate":"2021-10-04"},{"lineNumber":125,"author":{"gitId":"ramapriyan912001"},"content":"     * If person not in addressbook, null is returned.","lastModifiedDate":"2021-10-04"},{"lineNumber":126,"author":{"gitId":"chrus-chong"},"content":"     *","lastModifiedDate":"2021-09-18"},{"lineNumber":127,"author":{"gitId":"chrus-chong"},"content":"     * @param memberName Name object representing person that is being searched for in the addressbook.","lastModifiedDate":"2021-09-18"},{"lineNumber":128,"author":{"gitId":"chrus-chong"},"content":"     * @param members ObservableList of Person objects representing all contacts in the addressbook.","lastModifiedDate":"2021-09-18"},{"lineNumber":129,"author":{"gitId":"ramapriyan912001"},"content":"     * @return Person object if name matches that of a person from the addressbook.","lastModifiedDate":"2021-10-04"},{"lineNumber":130,"author":{"gitId":"chrus-chong"},"content":"     */","lastModifiedDate":"2021-09-18"},{"lineNumber":131,"author":{"gitId":"chrus-chong"},"content":"    public static Person findMember(Name memberName, ObservableList\u003cPerson\u003e members) {","lastModifiedDate":"2021-10-10"},{"lineNumber":132,"author":{"gitId":"chrus-chong"},"content":"        for (Person member : members) {","lastModifiedDate":"2021-09-18"},{"lineNumber":133,"author":{"gitId":"chrus-chong"},"content":"            if (member.getName().equals(memberName)) {","lastModifiedDate":"2021-09-18"},{"lineNumber":134,"author":{"gitId":"ramapriyan912001"},"content":"                return member;","lastModifiedDate":"2021-10-04"},{"lineNumber":135,"author":{"gitId":"chrus-chong"},"content":"            }","lastModifiedDate":"2021-09-18"},{"lineNumber":136,"author":{"gitId":"chrus-chong"},"content":"        }","lastModifiedDate":"2021-09-18"},{"lineNumber":137,"author":{"gitId":"ramapriyan912001"},"content":"        return null;","lastModifiedDate":"2021-10-04"},{"lineNumber":138,"author":{"gitId":"chrus-chong"},"content":"    }","lastModifiedDate":"2021-09-18"},{"lineNumber":139,"author":{"gitId":"chrus-chong"},"content":"}","lastModifiedDate":"2021-09-18"}],"authorContributionMap":{"marcuspeh":4,"chrus-chong":79,"ramapriyan912001":56}},{"path":"src/main/java/seedu/awe/logic/parser/DeleteContactCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ramapriyan912001"},"content":"package seedu.awe.logic.parser;","lastModifiedDate":"2021-10-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":3,"author":{"gitId":"chrus-chong"},"content":"import static seedu.awe.commons.core.Messages.MESSAGE_DELETECONTACTCOMMAND_USAGE;","lastModifiedDate":"2021-10-25"},{"lineNumber":4,"author":{"gitId":"ramapriyan912001"},"content":"import static seedu.awe.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-10-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":6,"author":{"gitId":"ramapriyan912001"},"content":"import seedu.awe.commons.core.index.Index;","lastModifiedDate":"2021-10-05"},{"lineNumber":7,"author":{"gitId":"marcuspeh"},"content":"import seedu.awe.logic.commands.DeleteContactCommand;","lastModifiedDate":"2021-10-11"},{"lineNumber":8,"author":{"gitId":"ramapriyan912001"},"content":"import seedu.awe.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-10-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-01-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new DeleteCommand object","lastModifiedDate":"2017-01-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-01-26"},{"lineNumber":13,"author":{"gitId":"chrus-chong"},"content":"public class DeleteContactCommandParser implements Parser\u003cDeleteContactCommand\u003e {","lastModifiedDate":"2021-10-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the DeleteCommand","lastModifiedDate":"2017-01-26"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * and returns a DeleteCommand object for execution.","lastModifiedDate":"2019-05-11"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":20,"author":{"gitId":"marcuspeh"},"content":"    public DeleteContactCommand parse(String args) throws ParseException {","lastModifiedDate":"2021-10-11"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-05-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"            Index index \u003d ParserUtil.parseIndex(args);","lastModifiedDate":"2017-05-25"},{"lineNumber":23,"author":{"gitId":"marcuspeh"},"content":"            return new DeleteContactCommand(index);","lastModifiedDate":"2021-10-11"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2018-07-10"},{"lineNumber":25,"author":{"gitId":"-"},"content":"            throw new ParseException(","lastModifiedDate":"2017-03-11"},{"lineNumber":26,"author":{"gitId":"chrus-chong"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, MESSAGE_DELETECONTACTCOMMAND_USAGE), pe);","lastModifiedDate":"2021-10-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":30,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-26"}],"authorContributionMap":{"marcuspeh":3,"chrus-chong":3,"ramapriyan912001":4,"-":20}},{"path":"src/main/java/seedu/awe/logic/parser/DeleteExpenseCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ramapriyan912001"},"content":"package seedu.awe.logic.parser;","lastModifiedDate":"2021-10-09"},{"lineNumber":2,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":3,"author":{"gitId":"ramapriyan912001"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-09"},{"lineNumber":4,"author":{"gitId":"chrus-chong"},"content":"import static seedu.awe.commons.core.Messages.MESSAGE_DELETEEXPENSECOMMAND_USAGE;","lastModifiedDate":"2021-10-25"},{"lineNumber":5,"author":{"gitId":"ramapriyan912001"},"content":"import static seedu.awe.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-10-09"},{"lineNumber":6,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":7,"author":{"gitId":"ramapriyan912001"},"content":"import seedu.awe.commons.core.index.Index;","lastModifiedDate":"2021-10-09"},{"lineNumber":8,"author":{"gitId":"ramapriyan912001"},"content":"import seedu.awe.logic.commands.DeleteExpenseCommand;","lastModifiedDate":"2021-10-09"},{"lineNumber":9,"author":{"gitId":"ramapriyan912001"},"content":"import seedu.awe.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-10-09"},{"lineNumber":10,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":11,"author":{"gitId":"ramapriyan912001"},"content":"public class DeleteExpenseCommandParser implements Parser\u003cDeleteExpenseCommand\u003e {","lastModifiedDate":"2021-10-09"},{"lineNumber":12,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":13,"author":{"gitId":"ramapriyan912001"},"content":"    @Override","lastModifiedDate":"2021-10-09"},{"lineNumber":14,"author":{"gitId":"ramapriyan912001"},"content":"    public DeleteExpenseCommand parse(String args) throws ParseException {","lastModifiedDate":"2021-10-09"},{"lineNumber":15,"author":{"gitId":"ramapriyan912001"},"content":"        requireNonNull(args);","lastModifiedDate":"2021-10-09"},{"lineNumber":16,"author":{"gitId":"ramapriyan912001"},"content":"        try {","lastModifiedDate":"2021-10-09"},{"lineNumber":17,"author":{"gitId":"ramapriyan912001"},"content":"            Index index \u003d ParserUtil.parseIndex(args);","lastModifiedDate":"2021-10-25"},{"lineNumber":18,"author":{"gitId":"ramapriyan912001"},"content":"            return new DeleteExpenseCommand(index);","lastModifiedDate":"2021-10-25"},{"lineNumber":19,"author":{"gitId":"ramapriyan912001"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2021-10-25"},{"lineNumber":20,"author":{"gitId":"ramapriyan912001"},"content":"            throw new ParseException(","lastModifiedDate":"2021-10-25"},{"lineNumber":21,"author":{"gitId":"chrus-chong"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, MESSAGE_DELETEEXPENSECOMMAND_USAGE), pe);","lastModifiedDate":"2021-10-25"},{"lineNumber":22,"author":{"gitId":"ramapriyan912001"},"content":"        }","lastModifiedDate":"2021-10-09"},{"lineNumber":23,"author":{"gitId":"ramapriyan912001"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":24,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":25,"author":{"gitId":"ramapriyan912001"},"content":"}","lastModifiedDate":"2021-10-09"}],"authorContributionMap":{"chrus-chong":2,"ramapriyan912001":23}},{"path":"src/main/java/seedu/awe/logic/parser/DeleteGroupCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ramapriyan912001"},"content":"package seedu.awe.logic.parser;","lastModifiedDate":"2021-10-05"},{"lineNumber":2,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":3,"author":{"gitId":"chrus-chong"},"content":"import static seedu.awe.commons.core.Messages.MESSAGE_DELETEGROUPCOMMAND_USAGE;","lastModifiedDate":"2021-10-25"},{"lineNumber":4,"author":{"gitId":"ramapriyan912001"},"content":"import static seedu.awe.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-10-05"},{"lineNumber":5,"author":{"gitId":"ramapriyan912001"},"content":"import static seedu.awe.logic.parser.CliSyntax.PREFIX_GROUP_NAME;","lastModifiedDate":"2021-10-05"},{"lineNumber":6,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":7,"author":{"gitId":"ramapriyan912001"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-09-26"},{"lineNumber":8,"author":{"gitId":"ramapriyan912001"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2021-09-26"},{"lineNumber":9,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":10,"author":{"gitId":"ramapriyan912001"},"content":"import seedu.awe.logic.commands.DeleteGroupCommand;","lastModifiedDate":"2021-10-05"},{"lineNumber":11,"author":{"gitId":"ramapriyan912001"},"content":"import seedu.awe.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-10-05"},{"lineNumber":12,"author":{"gitId":"ramapriyan912001"},"content":"import seedu.awe.model.Model;","lastModifiedDate":"2021-10-05"},{"lineNumber":13,"author":{"gitId":"ramapriyan912001"},"content":"import seedu.awe.model.ReadOnlyAddressBook;","lastModifiedDate":"2021-10-05"},{"lineNumber":14,"author":{"gitId":"ramapriyan912001"},"content":"import seedu.awe.model.group.Group;","lastModifiedDate":"2021-10-05"},{"lineNumber":15,"author":{"gitId":"ramapriyan912001"},"content":"import seedu.awe.model.group.GroupName;","lastModifiedDate":"2021-10-05"},{"lineNumber":16,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":17,"author":{"gitId":"ramapriyan912001"},"content":"public class DeleteGroupCommandParser implements Parser\u003cDeleteGroupCommand\u003e {","lastModifiedDate":"2021-10-05"},{"lineNumber":18,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":19,"author":{"gitId":"ramapriyan912001"},"content":"    /**","lastModifiedDate":"2021-09-26"},{"lineNumber":20,"author":{"gitId":"ramapriyan912001"},"content":"     * Creates new CreateGroupParser object.","lastModifiedDate":"2021-09-26"},{"lineNumber":21,"author":{"gitId":"ramapriyan912001"},"content":"     *","lastModifiedDate":"2021-09-26"},{"lineNumber":22,"author":{"gitId":"ramapriyan912001"},"content":"     * @param model Model object passed into constructor to provide list of contacts.","lastModifiedDate":"2021-09-26"},{"lineNumber":23,"author":{"gitId":"ramapriyan912001"},"content":"     */","lastModifiedDate":"2021-09-26"},{"lineNumber":24,"author":{"gitId":"ramapriyan912001"},"content":"    public DeleteGroupCommandParser(Model model) {","lastModifiedDate":"2021-10-05"},{"lineNumber":25,"author":{"gitId":"ramapriyan912001"},"content":"        ReadOnlyAddressBook addressBook \u003d model.getAddressBook();","lastModifiedDate":"2021-09-26"},{"lineNumber":26,"author":{"gitId":"ramapriyan912001"},"content":"    }","lastModifiedDate":"2021-09-26"},{"lineNumber":27,"author":{"gitId":"ramapriyan912001"},"content":"    //assume command is of the following form","lastModifiedDate":"2021-09-26"},{"lineNumber":28,"author":{"gitId":"ramapriyan912001"},"content":"    //deletegroup gn/Berlin","lastModifiedDate":"2021-09-26"},{"lineNumber":29,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":30,"author":{"gitId":"ramapriyan912001"},"content":"    /**","lastModifiedDate":"2021-09-26"},{"lineNumber":31,"author":{"gitId":"ramapriyan912001"},"content":"     * Parses the given {@code String} of arguments in the context of the DeleteGroupCommand","lastModifiedDate":"2021-09-26"},{"lineNumber":32,"author":{"gitId":"ramapriyan912001"},"content":"     * and returns an DeleteGroupCommand object for execution.","lastModifiedDate":"2021-09-26"},{"lineNumber":33,"author":{"gitId":"ramapriyan912001"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2021-09-26"},{"lineNumber":34,"author":{"gitId":"ramapriyan912001"},"content":"     */","lastModifiedDate":"2021-09-26"},{"lineNumber":35,"author":{"gitId":"ramapriyan912001"},"content":"    public DeleteGroupCommand parse(String args) throws ParseException {","lastModifiedDate":"2021-09-26"},{"lineNumber":36,"author":{"gitId":"ramapriyan912001"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2021-09-26"},{"lineNumber":37,"author":{"gitId":"ramapriyan912001"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_GROUP_NAME);","lastModifiedDate":"2021-09-26"},{"lineNumber":38,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":39,"author":{"gitId":"ramapriyan912001"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_GROUP_NAME)","lastModifiedDate":"2021-09-26"},{"lineNumber":40,"author":{"gitId":"ramapriyan912001"},"content":"                || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2021-09-26"},{"lineNumber":41,"author":{"gitId":"chrus-chong"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, MESSAGE_DELETEGROUPCOMMAND_USAGE));","lastModifiedDate":"2021-10-25"},{"lineNumber":42,"author":{"gitId":"ramapriyan912001"},"content":"        }","lastModifiedDate":"2021-09-26"},{"lineNumber":43,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":44,"author":{"gitId":"ramapriyan912001"},"content":"        GroupName groupName \u003d ParserUtil.parseGroupName(argMultimap.getValue(PREFIX_GROUP_NAME).get());","lastModifiedDate":"2021-09-26"},{"lineNumber":45,"author":{"gitId":"ramapriyan912001"},"content":"        Group group \u003d new Group(groupName, new ArrayList\u003c\u003e());","lastModifiedDate":"2021-09-26"},{"lineNumber":46,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":47,"author":{"gitId":"ramapriyan912001"},"content":"        return new DeleteGroupCommand(group);","lastModifiedDate":"2021-09-26"},{"lineNumber":48,"author":{"gitId":"ramapriyan912001"},"content":"    }","lastModifiedDate":"2021-09-26"},{"lineNumber":49,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":50,"author":{"gitId":"ramapriyan912001"},"content":"    /**","lastModifiedDate":"2021-09-26"},{"lineNumber":51,"author":{"gitId":"ramapriyan912001"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2021-09-26"},{"lineNumber":52,"author":{"gitId":"ramapriyan912001"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2021-09-26"},{"lineNumber":53,"author":{"gitId":"ramapriyan912001"},"content":"     */","lastModifiedDate":"2021-09-26"},{"lineNumber":54,"author":{"gitId":"ramapriyan912001"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2021-09-26"},{"lineNumber":55,"author":{"gitId":"ramapriyan912001"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2021-09-26"},{"lineNumber":56,"author":{"gitId":"ramapriyan912001"},"content":"    }","lastModifiedDate":"2021-09-26"},{"lineNumber":57,"author":{"gitId":"ramapriyan912001"},"content":"}","lastModifiedDate":"2021-09-26"}],"authorContributionMap":{"chrus-chong":2,"ramapriyan912001":55}},{"path":"src/main/java/seedu/awe/logic/parser/EditCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ramapriyan912001"},"content":"package seedu.awe.logic.parser;","lastModifiedDate":"2021-10-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"chrus-chong"},"content":"import static seedu.awe.commons.core.Messages.MESSAGE_EDITCONTACTCOMMAND_NOT_EDITED;","lastModifiedDate":"2021-10-25"},{"lineNumber":5,"author":{"gitId":"chrus-chong"},"content":"import static seedu.awe.commons.core.Messages.MESSAGE_EDITCONTACTCOMMAND_USAGE;","lastModifiedDate":"2021-10-25"},{"lineNumber":6,"author":{"gitId":"ramapriyan912001"},"content":"import static seedu.awe.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-10-05"},{"lineNumber":7,"author":{"gitId":"ramapriyan912001"},"content":"import static seedu.awe.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2021-10-05"},{"lineNumber":8,"author":{"gitId":"ramapriyan912001"},"content":"import static seedu.awe.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2021-10-05"},{"lineNumber":9,"author":{"gitId":"ramapriyan912001"},"content":"import static seedu.awe.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2021-10-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2017-01-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-01-26"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":16,"author":{"gitId":"ramapriyan912001"},"content":"import seedu.awe.commons.core.index.Index;","lastModifiedDate":"2021-10-05"},{"lineNumber":17,"author":{"gitId":"marcuspeh"},"content":"import seedu.awe.logic.commands.EditContactCommand;","lastModifiedDate":"2021-10-11"},{"lineNumber":18,"author":{"gitId":"marcuspeh"},"content":"import seedu.awe.logic.commands.EditContactCommand.EditPersonDescriptor;","lastModifiedDate":"2021-10-11"},{"lineNumber":19,"author":{"gitId":"ramapriyan912001"},"content":"import seedu.awe.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-10-05"},{"lineNumber":20,"author":{"gitId":"ramapriyan912001"},"content":"import seedu.awe.model.tag.Tag;","lastModifiedDate":"2021-10-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":22,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-01-26"},{"lineNumber":23,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new EditCommand object","lastModifiedDate":"2017-01-26"},{"lineNumber":24,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-01-26"},{"lineNumber":25,"author":{"gitId":"marcuspeh"},"content":"public class EditCommandParser implements Parser\u003cEditContactCommand\u003e {","lastModifiedDate":"2021-10-11"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the EditCommand","lastModifiedDate":"2017-01-26"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * and returns an EditCommand object for execution.","lastModifiedDate":"2017-01-26"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":32,"author":{"gitId":"marcuspeh"},"content":"    public EditContactCommand parse(String args) throws ParseException {","lastModifiedDate":"2021-10-11"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        requireNonNull(args);","lastModifiedDate":"2017-05-15"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2017-03-20"},{"lineNumber":35,"author":{"gitId":"marcuspeh"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_PHONE, PREFIX_TAG);","lastModifiedDate":"2021-11-01"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        Index index;","lastModifiedDate":"2017-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-05-15"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2017-06-06"},{"lineNumber":41,"author":{"gitId":"chrus-chong"},"content":"        } catch (ParseException parseException) {","lastModifiedDate":"2021-10-25"},{"lineNumber":42,"author":{"gitId":"chrus-chong"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, MESSAGE_EDITCONTACTCOMMAND_USAGE),","lastModifiedDate":"2021-10-25"},{"lineNumber":43,"author":{"gitId":"chrus-chong"},"content":"                    parseException);","lastModifiedDate":"2021-10-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        EditPersonDescriptor editPersonDescriptor \u003d new EditPersonDescriptor();","lastModifiedDate":"2017-01-26"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_NAME).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            editPersonDescriptor.setName(ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get()));","lastModifiedDate":"2018-07-10"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_PHONE).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            editPersonDescriptor.setPhone(ParserUtil.parsePhone(argMultimap.getValue(PREFIX_PHONE).get()));","lastModifiedDate":"2018-07-10"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        parseTagsForEdit(argMultimap.getAllValues(PREFIX_TAG)).ifPresent(editPersonDescriptor::setTags);","lastModifiedDate":"2017-06-21"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        if (!editPersonDescriptor.isAnyFieldEdited()) {","lastModifiedDate":"2017-01-26"},{"lineNumber":56,"author":{"gitId":"chrus-chong"},"content":"            throw new ParseException(MESSAGE_EDITCONTACTCOMMAND_NOT_EDITED);","lastModifiedDate":"2021-10-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":59,"author":{"gitId":"marcuspeh"},"content":"        return new EditContactCommand(index, editPersonDescriptor);","lastModifiedDate":"2021-10-11"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * Parses {@code Collection\u003cString\u003e tags} into a {@code Set\u003cTag\u003e} if {@code tags} is non-empty.","lastModifiedDate":"2017-03-07"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * If {@code tags} contain only one element which is an empty string, it will be parsed into a","lastModifiedDate":"2017-01-26"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     * {@code Set\u003cTag\u003e} containing zero tags.","lastModifiedDate":"2017-03-07"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    private Optional\u003cSet\u003cTag\u003e\u003e parseTagsForEdit(Collection\u003cString\u003e tags) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assert tags !\u003d null;","lastModifiedDate":"2017-01-26"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        if (tags.isEmpty()) {","lastModifiedDate":"2017-01-26"},{"lineNumber":71,"author":{"gitId":"-"},"content":"            return Optional.empty();","lastModifiedDate":"2017-01-26"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        Collection\u003cString\u003e tagSet \u003d tags.size() \u003d\u003d 1 \u0026\u0026 tags.contains(\"\") ? Collections.emptySet() : tags;","lastModifiedDate":"2017-01-26"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        return Optional.of(ParserUtil.parseTags(tagSet));","lastModifiedDate":"2017-01-26"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":77,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-26"}],"authorContributionMap":{"marcuspeh":6,"chrus-chong":6,"ramapriyan912001":8,"-":57}},{"path":"src/main/java/seedu/awe/logic/parser/FindContactsCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ramapriyan912001"},"content":"package seedu.awe.logic.parser;","lastModifiedDate":"2021-10-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":3,"author":{"gitId":"chrus-chong"},"content":"import static seedu.awe.commons.core.Messages.MESSAGE_FINDCONTACTSCOMMAND_USAGE;","lastModifiedDate":"2021-10-25"},{"lineNumber":4,"author":{"gitId":"ramapriyan912001"},"content":"import static seedu.awe.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-10-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-01-26"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":8,"author":{"gitId":"marcuspeh"},"content":"import seedu.awe.logic.commands.FindContactsCommand;","lastModifiedDate":"2021-10-10"},{"lineNumber":9,"author":{"gitId":"ramapriyan912001"},"content":"import seedu.awe.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-10-05"},{"lineNumber":10,"author":{"gitId":"ramapriyan912001"},"content":"import seedu.awe.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2021-10-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-01-26"},{"lineNumber":13,"author":{"gitId":"Jingwencloud"},"content":" * Parses input arguments and creates a new FindContactsCommand object","lastModifiedDate":"2021-10-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-01-26"},{"lineNumber":15,"author":{"gitId":"marcuspeh"},"content":"public class FindContactsCommandParser implements Parser\u003cFindContactsCommand\u003e {","lastModifiedDate":"2021-10-10"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":18,"author":{"gitId":"Jingwencloud"},"content":"     * Parses the given {@code String} of arguments in the context of the FindContactsCommand","lastModifiedDate":"2021-10-12"},{"lineNumber":19,"author":{"gitId":"Jingwencloud"},"content":"     * and returns a FindContactsCommand object for execution.","lastModifiedDate":"2021-10-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":22,"author":{"gitId":"marcuspeh"},"content":"    public FindContactsCommand parse(String args) throws ParseException {","lastModifiedDate":"2021-10-10"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        String trimmedArgs \u003d args.trim();","lastModifiedDate":"2017-02-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        if (trimmedArgs.isEmpty()) {","lastModifiedDate":"2017-02-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"            throw new ParseException(","lastModifiedDate":"2017-03-11"},{"lineNumber":26,"author":{"gitId":"chrus-chong"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, MESSAGE_FINDCONTACTSCOMMAND_USAGE));","lastModifiedDate":"2021-10-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        String[] nameKeywords \u003d trimmedArgs.split(\"\\\\s+\");","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":31,"author":{"gitId":"marcuspeh"},"content":"        return new FindContactsCommand(new NameContainsKeywordsPredicate(Arrays.asList(nameKeywords)));","lastModifiedDate":"2021-10-10"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-26"}],"authorContributionMap":{"marcuspeh":4,"Jingwencloud":3,"chrus-chong":2,"ramapriyan912001":4,"-":21}},{"path":"src/main/java/seedu/awe/logic/parser/FindExpensesCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Jingwencloud"},"content":"package seedu.awe.logic.parser;","lastModifiedDate":"2021-10-12"},{"lineNumber":2,"author":{"gitId":"Jingwencloud"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":3,"author":{"gitId":"Jingwencloud"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-28"},{"lineNumber":4,"author":{"gitId":"chrus-chong"},"content":"import static seedu.awe.commons.core.Messages.MESSAGE_FINDEXPENSESCOMMAND_USAGE;","lastModifiedDate":"2021-10-25"},{"lineNumber":5,"author":{"gitId":"Jingwencloud"},"content":"import static seedu.awe.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-10-12"},{"lineNumber":6,"author":{"gitId":"Jingwencloud"},"content":"import static seedu.awe.logic.parser.CliSyntax.PREFIX_GROUP_NAME;","lastModifiedDate":"2021-10-12"},{"lineNumber":7,"author":{"gitId":"Jingwencloud"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":8,"author":{"gitId":"Jingwencloud"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-10-12"},{"lineNumber":9,"author":{"gitId":"Jingwencloud"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":10,"author":{"gitId":"Jingwencloud"},"content":"import seedu.awe.logic.commands.FindExpensesCommand;","lastModifiedDate":"2021-10-12"},{"lineNumber":11,"author":{"gitId":"Jingwencloud"},"content":"import seedu.awe.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-10-12"},{"lineNumber":12,"author":{"gitId":"Jingwencloud"},"content":"import seedu.awe.model.expense.DescriptionContainsKeywordsPredicate;","lastModifiedDate":"2021-10-12"},{"lineNumber":13,"author":{"gitId":"Jingwencloud"},"content":"import seedu.awe.model.group.GroupName;","lastModifiedDate":"2021-10-12"},{"lineNumber":14,"author":{"gitId":"Jingwencloud"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":15,"author":{"gitId":"Jingwencloud"},"content":"/**","lastModifiedDate":"2021-10-12"},{"lineNumber":16,"author":{"gitId":"Jingwencloud"},"content":" * Parses input arguments and creates a new FindExpensesCommand object","lastModifiedDate":"2021-10-12"},{"lineNumber":17,"author":{"gitId":"Jingwencloud"},"content":" */","lastModifiedDate":"2021-10-12"},{"lineNumber":18,"author":{"gitId":"Jingwencloud"},"content":"public class FindExpensesCommandParser implements Parser\u003cFindExpensesCommand\u003e {","lastModifiedDate":"2021-10-12"},{"lineNumber":19,"author":{"gitId":"Jingwencloud"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":20,"author":{"gitId":"Jingwencloud"},"content":"    /**","lastModifiedDate":"2021-10-12"},{"lineNumber":21,"author":{"gitId":"Jingwencloud"},"content":"     * Extracts the list of keywords from the input.","lastModifiedDate":"2021-10-12"},{"lineNumber":22,"author":{"gitId":"Jingwencloud"},"content":"     *","lastModifiedDate":"2021-10-12"},{"lineNumber":23,"author":{"gitId":"Jingwencloud"},"content":"     * @param args The user input.","lastModifiedDate":"2021-10-12"},{"lineNumber":24,"author":{"gitId":"Jingwencloud"},"content":"     * @return The list of keywords.","lastModifiedDate":"2021-10-12"},{"lineNumber":25,"author":{"gitId":"Jingwencloud"},"content":"     */","lastModifiedDate":"2021-10-12"},{"lineNumber":26,"author":{"gitId":"Jingwencloud"},"content":"    public String[] extractKeywords(String args) {","lastModifiedDate":"2021-10-12"},{"lineNumber":27,"author":{"gitId":"Jingwencloud"},"content":"        int endIndex \u003d args.indexOf(\"gn/\");","lastModifiedDate":"2021-10-12"},{"lineNumber":28,"author":{"gitId":"Jingwencloud"},"content":"        String keywords \u003d args.substring(0, endIndex).trim();","lastModifiedDate":"2021-10-12"},{"lineNumber":29,"author":{"gitId":"Jingwencloud"},"content":"        String[] keywordsArray \u003d keywords.split(\"\\\\s+\");","lastModifiedDate":"2021-10-12"},{"lineNumber":30,"author":{"gitId":"Jingwencloud"},"content":"        return keywordsArray;","lastModifiedDate":"2021-10-12"},{"lineNumber":31,"author":{"gitId":"Jingwencloud"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":32,"author":{"gitId":"Jingwencloud"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":33,"author":{"gitId":"Jingwencloud"},"content":"    /**","lastModifiedDate":"2021-10-12"},{"lineNumber":34,"author":{"gitId":"Jingwencloud"},"content":"     * Parses the given {@code String} of arguments in the context of the FindExpensesCommand","lastModifiedDate":"2021-10-12"},{"lineNumber":35,"author":{"gitId":"Jingwencloud"},"content":"     * and returns a FindExpensesCommand object for execution.","lastModifiedDate":"2021-10-12"},{"lineNumber":36,"author":{"gitId":"Jingwencloud"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2021-10-12"},{"lineNumber":37,"author":{"gitId":"Jingwencloud"},"content":"     */","lastModifiedDate":"2021-10-12"},{"lineNumber":38,"author":{"gitId":"Jingwencloud"},"content":"    public FindExpensesCommand parse(String args) throws ParseException {","lastModifiedDate":"2021-10-12"},{"lineNumber":39,"author":{"gitId":"Jingwencloud"},"content":"        requireNonNull(args);","lastModifiedDate":"2021-10-28"},{"lineNumber":40,"author":{"gitId":"Jingwencloud"},"content":"        String trimmedArgs \u003d args.trim();","lastModifiedDate":"2021-10-12"},{"lineNumber":41,"author":{"gitId":"Jingwencloud"},"content":"        boolean isKeywordAbsent \u003d trimmedArgs.startsWith(\"gn/\");","lastModifiedDate":"2021-10-28"},{"lineNumber":42,"author":{"gitId":"Jingwencloud"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":43,"author":{"gitId":"Jingwencloud"},"content":"        if (trimmedArgs.isEmpty() || isKeywordAbsent) {","lastModifiedDate":"2021-10-28"},{"lineNumber":44,"author":{"gitId":"Jingwencloud"},"content":"            throw new ParseException(","lastModifiedDate":"2021-10-12"},{"lineNumber":45,"author":{"gitId":"chrus-chong"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, MESSAGE_FINDEXPENSESCOMMAND_USAGE));","lastModifiedDate":"2021-10-25"},{"lineNumber":46,"author":{"gitId":"Jingwencloud"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":47,"author":{"gitId":"Jingwencloud"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":48,"author":{"gitId":"Jingwencloud"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(trimmedArgs, PREFIX_GROUP_NAME);","lastModifiedDate":"2021-10-28"},{"lineNumber":49,"author":{"gitId":"Jingwencloud"},"content":"        if (!args.contains(\"gn/\") || argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2021-10-28"},{"lineNumber":50,"author":{"gitId":"Jingwencloud"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, MESSAGE_FINDEXPENSESCOMMAND_USAGE));","lastModifiedDate":"2021-10-28"},{"lineNumber":51,"author":{"gitId":"Jingwencloud"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":52,"author":{"gitId":"Jingwencloud"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":53,"author":{"gitId":"Jingwencloud"},"content":"        GroupName groupName \u003d ParserUtil.parseGroupName((argMultimap.getValue(PREFIX_GROUP_NAME)).get());","lastModifiedDate":"2021-10-28"},{"lineNumber":54,"author":{"gitId":"Jingwencloud"},"content":"        String[] descriptionKeywords \u003d extractKeywords(trimmedArgs);","lastModifiedDate":"2021-10-12"},{"lineNumber":55,"author":{"gitId":"Jingwencloud"},"content":"        return new FindExpensesCommand(groupName,","lastModifiedDate":"2021-10-12"},{"lineNumber":56,"author":{"gitId":"Jingwencloud"},"content":"                new DescriptionContainsKeywordsPredicate(Arrays.asList(descriptionKeywords)));","lastModifiedDate":"2021-10-12"},{"lineNumber":57,"author":{"gitId":"Jingwencloud"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":58,"author":{"gitId":"Jingwencloud"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":59,"author":{"gitId":"Jingwencloud"},"content":"}","lastModifiedDate":"2021-10-12"},{"lineNumber":60,"author":{"gitId":"Jingwencloud"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":61,"author":{"gitId":"Jingwencloud"},"content":"","lastModifiedDate":"2021-10-12"}],"authorContributionMap":{"Jingwencloud":59,"chrus-chong":2}},{"path":"src/main/java/seedu/awe/logic/parser/FindGroupsCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"marcuspeh"},"content":"package seedu.awe.logic.parser;","lastModifiedDate":"2021-10-10"},{"lineNumber":2,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":3,"author":{"gitId":"marcuspeh"},"content":"import static seedu.awe.commons.core.Messages.MESSAGE_FINDGROUPSCOMMAND_USAGE;","lastModifiedDate":"2021-11-01"},{"lineNumber":4,"author":{"gitId":"marcuspeh"},"content":"import static seedu.awe.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-10-10"},{"lineNumber":5,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":6,"author":{"gitId":"marcuspeh"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-10-10"},{"lineNumber":7,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":8,"author":{"gitId":"marcuspeh"},"content":"import seedu.awe.logic.commands.FindGroupsCommand;","lastModifiedDate":"2021-10-10"},{"lineNumber":9,"author":{"gitId":"marcuspeh"},"content":"import seedu.awe.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-10-10"},{"lineNumber":10,"author":{"gitId":"marcuspeh"},"content":"import seedu.awe.model.group.GroupContainsKeywordsPredicate;","lastModifiedDate":"2021-10-10"},{"lineNumber":11,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":12,"author":{"gitId":"marcuspeh"},"content":"/**","lastModifiedDate":"2021-10-10"},{"lineNumber":13,"author":{"gitId":"Jingwencloud"},"content":" * Parses input arguments and creates a new FindGroupsCommand object","lastModifiedDate":"2021-10-12"},{"lineNumber":14,"author":{"gitId":"marcuspeh"},"content":" */","lastModifiedDate":"2021-10-10"},{"lineNumber":15,"author":{"gitId":"marcuspeh"},"content":"public class FindGroupsCommandParser implements Parser\u003cFindGroupsCommand\u003e {","lastModifiedDate":"2021-10-10"},{"lineNumber":16,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":17,"author":{"gitId":"marcuspeh"},"content":"    /**","lastModifiedDate":"2021-10-10"},{"lineNumber":18,"author":{"gitId":"Jingwencloud"},"content":"     * Parses the given {@code String} of arguments in the context of the FindGroupsCommand","lastModifiedDate":"2021-10-12"},{"lineNumber":19,"author":{"gitId":"Jingwencloud"},"content":"     * and returns a FindGroupsCommand object for execution.","lastModifiedDate":"2021-10-12"},{"lineNumber":20,"author":{"gitId":"marcuspeh"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2021-10-10"},{"lineNumber":21,"author":{"gitId":"marcuspeh"},"content":"     */","lastModifiedDate":"2021-10-10"},{"lineNumber":22,"author":{"gitId":"marcuspeh"},"content":"    public FindGroupsCommand parse(String args) throws ParseException {","lastModifiedDate":"2021-10-10"},{"lineNumber":23,"author":{"gitId":"marcuspeh"},"content":"        String trimmedArgs \u003d args.trim();","lastModifiedDate":"2021-10-10"},{"lineNumber":24,"author":{"gitId":"marcuspeh"},"content":"        if (trimmedArgs.isEmpty()) {","lastModifiedDate":"2021-10-10"},{"lineNumber":25,"author":{"gitId":"marcuspeh"},"content":"            throw new ParseException(","lastModifiedDate":"2021-10-10"},{"lineNumber":26,"author":{"gitId":"marcuspeh"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, MESSAGE_FINDGROUPSCOMMAND_USAGE));","lastModifiedDate":"2021-11-01"},{"lineNumber":27,"author":{"gitId":"marcuspeh"},"content":"        }","lastModifiedDate":"2021-10-10"},{"lineNumber":28,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":29,"author":{"gitId":"marcuspeh"},"content":"        String[] nameKeywords \u003d trimmedArgs.split(\"\\\\s+\");","lastModifiedDate":"2021-10-10"},{"lineNumber":30,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":31,"author":{"gitId":"marcuspeh"},"content":"        return new FindGroupsCommand(new GroupContainsKeywordsPredicate(Arrays.asList(nameKeywords)));","lastModifiedDate":"2021-10-10"},{"lineNumber":32,"author":{"gitId":"marcuspeh"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":33,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":34,"author":{"gitId":"marcuspeh"},"content":"}","lastModifiedDate":"2021-10-10"}],"authorContributionMap":{"marcuspeh":31,"Jingwencloud":3}},{"path":"src/main/java/seedu/awe/logic/parser/GroupAddContactCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"chrus-chong"},"content":"package seedu.awe.logic.parser;","lastModifiedDate":"2021-10-11"},{"lineNumber":2,"author":{"gitId":"chrus-chong"},"content":"import static seedu.awe.commons.core.Messages.MESSAGE_GROUPADDCONTACTCOMMAND_ERROR;","lastModifiedDate":"2021-10-25"},{"lineNumber":3,"author":{"gitId":"chrus-chong"},"content":"import static seedu.awe.commons.core.Messages.MESSAGE_GROUPADDCONTACTCOMMAND_USAGE;","lastModifiedDate":"2021-10-25"},{"lineNumber":4,"author":{"gitId":"chrus-chong"},"content":"import static seedu.awe.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-10-11"},{"lineNumber":5,"author":{"gitId":"chrus-chong"},"content":"import static seedu.awe.logic.parser.CliSyntax.PREFIX_GROUP_NAME;","lastModifiedDate":"2021-10-11"},{"lineNumber":6,"author":{"gitId":"chrus-chong"},"content":"import static seedu.awe.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2021-10-11"},{"lineNumber":7,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":8,"author":{"gitId":"chrus-chong"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-11"},{"lineNumber":9,"author":{"gitId":"chrus-chong"},"content":"import java.util.List;","lastModifiedDate":"2021-10-11"},{"lineNumber":10,"author":{"gitId":"chrus-chong"},"content":"import java.util.Objects;","lastModifiedDate":"2021-10-11"},{"lineNumber":11,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":12,"author":{"gitId":"chrus-chong"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-10-11"},{"lineNumber":13,"author":{"gitId":"chrus-chong"},"content":"import seedu.awe.logic.commands.GroupAddContactCommand;","lastModifiedDate":"2021-10-20"},{"lineNumber":14,"author":{"gitId":"chrus-chong"},"content":"import seedu.awe.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-10-11"},{"lineNumber":15,"author":{"gitId":"chrus-chong"},"content":"import seedu.awe.model.Model;","lastModifiedDate":"2021-10-11"},{"lineNumber":16,"author":{"gitId":"chrus-chong"},"content":"import seedu.awe.model.ReadOnlyAddressBook;","lastModifiedDate":"2021-10-11"},{"lineNumber":17,"author":{"gitId":"chrus-chong"},"content":"import seedu.awe.model.group.GroupName;","lastModifiedDate":"2021-10-11"},{"lineNumber":18,"author":{"gitId":"chrus-chong"},"content":"import seedu.awe.model.person.Name;","lastModifiedDate":"2021-10-11"},{"lineNumber":19,"author":{"gitId":"chrus-chong"},"content":"import seedu.awe.model.person.Person;","lastModifiedDate":"2021-10-11"},{"lineNumber":20,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":21,"author":{"gitId":"chrus-chong"},"content":"public class GroupAddContactCommandParser implements Parser\u003cGroupAddContactCommand\u003e {","lastModifiedDate":"2021-10-20"},{"lineNumber":22,"author":{"gitId":"chrus-chong"},"content":"    private static final String BAD_FORMATTING \u003d \"\\\"groupaddcontact command\\\" is not properly formatted\";","lastModifiedDate":"2021-10-20"},{"lineNumber":23,"author":{"gitId":"chrus-chong"},"content":"    private ObservableList\u003cPerson\u003e allMembers;","lastModifiedDate":"2021-10-11"},{"lineNumber":24,"author":{"gitId":"chrus-chong"},"content":"    private final ArrayList\u003cPerson\u003e newMembersToAdd;","lastModifiedDate":"2021-10-11"},{"lineNumber":25,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":26,"author":{"gitId":"chrus-chong"},"content":"    /**","lastModifiedDate":"2021-10-11"},{"lineNumber":27,"author":{"gitId":"chrus-chong"},"content":"     * Creates new GroupAddContactCommandParser object.","lastModifiedDate":"2021-10-20"},{"lineNumber":28,"author":{"gitId":"chrus-chong"},"content":"     *","lastModifiedDate":"2021-10-11"},{"lineNumber":29,"author":{"gitId":"chrus-chong"},"content":"     * @param model Model object passed into constructor to provide list of contacts.","lastModifiedDate":"2021-10-11"},{"lineNumber":30,"author":{"gitId":"chrus-chong"},"content":"     */","lastModifiedDate":"2021-10-11"},{"lineNumber":31,"author":{"gitId":"chrus-chong"},"content":"    public GroupAddContactCommandParser(Model model) {","lastModifiedDate":"2021-10-20"},{"lineNumber":32,"author":{"gitId":"chrus-chong"},"content":"        ReadOnlyAddressBook addressBook \u003d model.getAddressBook();","lastModifiedDate":"2021-10-11"},{"lineNumber":33,"author":{"gitId":"chrus-chong"},"content":"        this.allMembers \u003d addressBook.getPersonList();","lastModifiedDate":"2021-10-11"},{"lineNumber":34,"author":{"gitId":"chrus-chong"},"content":"        this.newMembersToAdd \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-11"},{"lineNumber":35,"author":{"gitId":"chrus-chong"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":36,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":37,"author":{"gitId":"chrus-chong"},"content":"    /**","lastModifiedDate":"2021-10-11"},{"lineNumber":38,"author":{"gitId":"chrus-chong"},"content":"     * Returns GroupAddContactCommand based on user input.","lastModifiedDate":"2021-10-20"},{"lineNumber":39,"author":{"gitId":"chrus-chong"},"content":"     *","lastModifiedDate":"2021-10-11"},{"lineNumber":40,"author":{"gitId":"chrus-chong"},"content":"     * @param args User input into contact list.","lastModifiedDate":"2021-10-12"},{"lineNumber":41,"author":{"gitId":"chrus-chong"},"content":"     * @return GroupAddContactCommand object to represent command to be executed.","lastModifiedDate":"2021-10-20"},{"lineNumber":42,"author":{"gitId":"chrus-chong"},"content":"     * @throws ParseException If user input is incorrectly formatted.","lastModifiedDate":"2021-10-11"},{"lineNumber":43,"author":{"gitId":"chrus-chong"},"content":"     */","lastModifiedDate":"2021-10-11"},{"lineNumber":44,"author":{"gitId":"chrus-chong"},"content":"    @Override","lastModifiedDate":"2021-10-20"},{"lineNumber":45,"author":{"gitId":"chrus-chong"},"content":"    public GroupAddContactCommand parse(String args) throws ParseException {","lastModifiedDate":"2021-10-20"},{"lineNumber":46,"author":{"gitId":"chrus-chong"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2021-10-11"},{"lineNumber":47,"author":{"gitId":"chrus-chong"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_GROUP_NAME, PREFIX_NAME);","lastModifiedDate":"2021-10-11"},{"lineNumber":48,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":49,"author":{"gitId":"chrus-chong"},"content":"        if (!ParserUtil.arePrefixesPresent(argMultimap, PREFIX_GROUP_NAME, PREFIX_NAME)","lastModifiedDate":"2021-10-11"},{"lineNumber":50,"author":{"gitId":"chrus-chong"},"content":"                || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2021-10-11"},{"lineNumber":51,"author":{"gitId":"chrus-chong"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2021-10-11"},{"lineNumber":52,"author":{"gitId":"chrus-chong"},"content":"                    MESSAGE_GROUPADDCONTACTCOMMAND_USAGE));","lastModifiedDate":"2021-10-25"},{"lineNumber":53,"author":{"gitId":"chrus-chong"},"content":"        }","lastModifiedDate":"2021-10-11"},{"lineNumber":54,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":55,"author":{"gitId":"chrus-chong"},"content":"        GroupName groupName \u003d ParserUtil.parseGroupName(argMultimap.getValue(PREFIX_GROUP_NAME).get());","lastModifiedDate":"2021-10-11"},{"lineNumber":56,"author":{"gitId":"chrus-chong"},"content":"        List\u003cName\u003e newMemberNames \u003d ParserUtil.parseMemberNames(argMultimap.getAllValues(PREFIX_NAME));","lastModifiedDate":"2021-10-11"},{"lineNumber":57,"author":{"gitId":"chrus-chong"},"content":"        ArrayList\u003cPerson\u003e newMembers \u003d findNewMembers(newMemberNames);","lastModifiedDate":"2021-10-11"},{"lineNumber":58,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":59,"author":{"gitId":"chrus-chong"},"content":"        boolean isValidCommand \u003d true;","lastModifiedDate":"2021-10-11"},{"lineNumber":60,"author":{"gitId":"chrus-chong"},"content":"        if (groupName.getName().equals(BAD_FORMATTING) || Objects.isNull(newMembers)) {","lastModifiedDate":"2021-10-11"},{"lineNumber":61,"author":{"gitId":"chrus-chong"},"content":"            isValidCommand \u003d false;","lastModifiedDate":"2021-10-11"},{"lineNumber":62,"author":{"gitId":"chrus-chong"},"content":"        }","lastModifiedDate":"2021-10-11"},{"lineNumber":63,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":64,"author":{"gitId":"chrus-chong"},"content":"        return new GroupAddContactCommand(groupName, newMembers, isValidCommand);","lastModifiedDate":"2021-10-20"},{"lineNumber":65,"author":{"gitId":"chrus-chong"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":66,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":67,"author":{"gitId":"chrus-chong"},"content":"    /**","lastModifiedDate":"2021-10-11"},{"lineNumber":68,"author":{"gitId":"chrus-chong"},"content":"     * Returns list of members in the group.","lastModifiedDate":"2021-10-11"},{"lineNumber":69,"author":{"gitId":"chrus-chong"},"content":"     *","lastModifiedDate":"2021-10-11"},{"lineNumber":70,"author":{"gitId":"chrus-chong"},"content":"     * @param newMemberNames List of names representing new members to be added into group.","lastModifiedDate":"2021-10-11"},{"lineNumber":71,"author":{"gitId":"chrus-chong"},"content":"     * @return ArrayList of Person objects representing members to be added to the group","lastModifiedDate":"2021-10-11"},{"lineNumber":72,"author":{"gitId":"chrus-chong"},"content":"     */","lastModifiedDate":"2021-10-11"},{"lineNumber":73,"author":{"gitId":"chrus-chong"},"content":"    public ArrayList\u003cPerson\u003e findNewMembers(List\u003cName\u003e newMemberNames) throws ParseException {","lastModifiedDate":"2021-10-11"},{"lineNumber":74,"author":{"gitId":"chrus-chong"},"content":"        try {","lastModifiedDate":"2021-10-11"},{"lineNumber":75,"author":{"gitId":"chrus-chong"},"content":"            for (Name name : newMemberNames) {","lastModifiedDate":"2021-10-11"},{"lineNumber":76,"author":{"gitId":"chrus-chong"},"content":"                addMemberIfExist(name);","lastModifiedDate":"2021-10-11"},{"lineNumber":77,"author":{"gitId":"chrus-chong"},"content":"            }","lastModifiedDate":"2021-10-11"},{"lineNumber":78,"author":{"gitId":"chrus-chong"},"content":"            if (!newMemberNames.isEmpty() \u0026\u0026 newMembersToAdd.isEmpty()) {","lastModifiedDate":"2021-10-11"},{"lineNumber":79,"author":{"gitId":"chrus-chong"},"content":"                throw new ParseException(MESSAGE_GROUPADDCONTACTCOMMAND_ERROR);","lastModifiedDate":"2021-10-25"},{"lineNumber":80,"author":{"gitId":"chrus-chong"},"content":"            }","lastModifiedDate":"2021-10-11"},{"lineNumber":81,"author":{"gitId":"chrus-chong"},"content":"            return newMembersToAdd;","lastModifiedDate":"2021-10-11"},{"lineNumber":82,"author":{"gitId":"chrus-chong"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2021-10-11"},{"lineNumber":83,"author":{"gitId":"chrus-chong"},"content":"            throw new ParseException(MESSAGE_INVALID_COMMAND_FORMAT);","lastModifiedDate":"2021-10-11"},{"lineNumber":84,"author":{"gitId":"chrus-chong"},"content":"        }","lastModifiedDate":"2021-10-11"},{"lineNumber":85,"author":{"gitId":"chrus-chong"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":86,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":87,"author":{"gitId":"chrus-chong"},"content":"    /**","lastModifiedDate":"2021-10-11"},{"lineNumber":88,"author":{"gitId":"chrus-chong"},"content":"     * Returns boolean object representing if member has been added into newMembersToAdd.","lastModifiedDate":"2021-10-11"},{"lineNumber":89,"author":{"gitId":"chrus-chong"},"content":"     *","lastModifiedDate":"2021-10-11"},{"lineNumber":90,"author":{"gitId":"chrus-chong"},"content":"     * @param memberName Name object representing member whose presence is being checked for.","lastModifiedDate":"2021-10-11"},{"lineNumber":91,"author":{"gitId":"chrus-chong"},"content":"     * @return boolean object representing if member has been added into newMembersToAdd.","lastModifiedDate":"2021-10-11"},{"lineNumber":92,"author":{"gitId":"chrus-chong"},"content":"     * @throws ParseException if the person does not exist in the contact list.","lastModifiedDate":"2021-10-11"},{"lineNumber":93,"author":{"gitId":"chrus-chong"},"content":"     */","lastModifiedDate":"2021-10-11"},{"lineNumber":94,"author":{"gitId":"chrus-chong"},"content":"    public boolean addMemberIfExist(Name memberName) throws ParseException {","lastModifiedDate":"2021-10-11"},{"lineNumber":95,"author":{"gitId":"chrus-chong"},"content":"        boolean added \u003d false;","lastModifiedDate":"2021-10-11"},{"lineNumber":96,"author":{"gitId":"chrus-chong"},"content":"        Person memberFound \u003d findMember(memberName, allMembers);","lastModifiedDate":"2021-10-11"},{"lineNumber":97,"author":{"gitId":"chrus-chong"},"content":"        if (!Objects.isNull(memberFound)) {","lastModifiedDate":"2021-10-11"},{"lineNumber":98,"author":{"gitId":"chrus-chong"},"content":"            newMembersToAdd.add(memberFound);","lastModifiedDate":"2021-10-11"},{"lineNumber":99,"author":{"gitId":"chrus-chong"},"content":"            added \u003d true;","lastModifiedDate":"2021-10-11"},{"lineNumber":100,"author":{"gitId":"chrus-chong"},"content":"        }","lastModifiedDate":"2021-10-11"},{"lineNumber":101,"author":{"gitId":"chrus-chong"},"content":"        if (!added) {","lastModifiedDate":"2021-10-11"},{"lineNumber":102,"author":{"gitId":"chrus-chong"},"content":"            throw new ParseException(MESSAGE_GROUPADDCONTACTCOMMAND_ERROR);","lastModifiedDate":"2021-10-25"},{"lineNumber":103,"author":{"gitId":"chrus-chong"},"content":"        }","lastModifiedDate":"2021-10-11"},{"lineNumber":104,"author":{"gitId":"chrus-chong"},"content":"        return added;","lastModifiedDate":"2021-10-11"},{"lineNumber":105,"author":{"gitId":"chrus-chong"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":106,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":107,"author":{"gitId":"chrus-chong"},"content":"    /**","lastModifiedDate":"2021-10-11"},{"lineNumber":108,"author":{"gitId":"chrus-chong"},"content":"     * Returns person that matches a given Name object if in contact list.","lastModifiedDate":"2021-10-11"},{"lineNumber":109,"author":{"gitId":"chrus-chong"},"content":"     * If person not in contact list, null is returned.","lastModifiedDate":"2021-10-11"},{"lineNumber":110,"author":{"gitId":"chrus-chong"},"content":"     *","lastModifiedDate":"2021-10-11"},{"lineNumber":111,"author":{"gitId":"chrus-chong"},"content":"     * @param memberName Name object representing person that is being searched for in the contact list.","lastModifiedDate":"2021-10-11"},{"lineNumber":112,"author":{"gitId":"chrus-chong"},"content":"     * @param members ObservableList of Person objects representing all contacts in the contact list.","lastModifiedDate":"2021-10-11"},{"lineNumber":113,"author":{"gitId":"chrus-chong"},"content":"     * @return Person object if name matches that of a person from the contact list.","lastModifiedDate":"2021-10-11"},{"lineNumber":114,"author":{"gitId":"chrus-chong"},"content":"     */","lastModifiedDate":"2021-10-11"},{"lineNumber":115,"author":{"gitId":"chrus-chong"},"content":"    public static Person findMember(Name memberName, ObservableList\u003cPerson\u003e members) {","lastModifiedDate":"2021-10-11"},{"lineNumber":116,"author":{"gitId":"chrus-chong"},"content":"        for (Person member : members) {","lastModifiedDate":"2021-10-11"},{"lineNumber":117,"author":{"gitId":"chrus-chong"},"content":"            if (member.getName().equals(memberName)) {","lastModifiedDate":"2021-10-11"},{"lineNumber":118,"author":{"gitId":"chrus-chong"},"content":"                return member;","lastModifiedDate":"2021-10-11"},{"lineNumber":119,"author":{"gitId":"chrus-chong"},"content":"            }","lastModifiedDate":"2021-10-11"},{"lineNumber":120,"author":{"gitId":"chrus-chong"},"content":"        }","lastModifiedDate":"2021-10-11"},{"lineNumber":121,"author":{"gitId":"chrus-chong"},"content":"        return null;","lastModifiedDate":"2021-10-11"},{"lineNumber":122,"author":{"gitId":"chrus-chong"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":123,"author":{"gitId":"chrus-chong"},"content":"}","lastModifiedDate":"2021-10-11"}],"authorContributionMap":{"chrus-chong":123}},{"path":"src/main/java/seedu/awe/logic/parser/GroupAddTagCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"chrus-chong"},"content":"package seedu.awe.logic.parser;","lastModifiedDate":"2021-10-20"},{"lineNumber":2,"author":{"gitId":"chrus-chong"},"content":"import static seedu.awe.commons.core.Messages.MESSAGE_GROUPADDTAGCOMMAND_USAGE;","lastModifiedDate":"2021-10-25"},{"lineNumber":3,"author":{"gitId":"chrus-chong"},"content":"import static seedu.awe.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-10-20"},{"lineNumber":4,"author":{"gitId":"chrus-chong"},"content":"import static seedu.awe.logic.parser.CliSyntax.PREFIX_GROUP_NAME;","lastModifiedDate":"2021-10-20"},{"lineNumber":5,"author":{"gitId":"chrus-chong"},"content":"import static seedu.awe.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2021-10-20"},{"lineNumber":6,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":7,"author":{"gitId":"chrus-chong"},"content":"import java.util.Objects;","lastModifiedDate":"2021-10-20"},{"lineNumber":8,"author":{"gitId":"chrus-chong"},"content":"import java.util.Set;","lastModifiedDate":"2021-10-20"},{"lineNumber":9,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":10,"author":{"gitId":"chrus-chong"},"content":"import seedu.awe.logic.commands.GroupAddTagCommand;","lastModifiedDate":"2021-10-20"},{"lineNumber":11,"author":{"gitId":"chrus-chong"},"content":"import seedu.awe.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-10-20"},{"lineNumber":12,"author":{"gitId":"chrus-chong"},"content":"import seedu.awe.model.group.GroupName;","lastModifiedDate":"2021-10-20"},{"lineNumber":13,"author":{"gitId":"chrus-chong"},"content":"import seedu.awe.model.tag.Tag;","lastModifiedDate":"2021-10-20"},{"lineNumber":14,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":15,"author":{"gitId":"chrus-chong"},"content":"public class GroupAddTagCommandParser implements Parser\u003cGroupAddTagCommand\u003e {","lastModifiedDate":"2021-10-20"},{"lineNumber":16,"author":{"gitId":"chrus-chong"},"content":"    private static final String BAD_FORMATTING \u003d \"\\\"groupaddtag command\\\" is not properly formatted\";","lastModifiedDate":"2021-10-20"},{"lineNumber":17,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":18,"author":{"gitId":"chrus-chong"},"content":"    /**","lastModifiedDate":"2021-10-20"},{"lineNumber":19,"author":{"gitId":"chrus-chong"},"content":"     * Returns GroupAddTagCommand based on user input.","lastModifiedDate":"2021-10-20"},{"lineNumber":20,"author":{"gitId":"chrus-chong"},"content":"     *","lastModifiedDate":"2021-10-20"},{"lineNumber":21,"author":{"gitId":"chrus-chong"},"content":"     * @param args User input into contact list.","lastModifiedDate":"2021-10-20"},{"lineNumber":22,"author":{"gitId":"chrus-chong"},"content":"     * @return GroupAddTagCommand object to represent command to be executed.","lastModifiedDate":"2021-10-20"},{"lineNumber":23,"author":{"gitId":"chrus-chong"},"content":"     * @throws ParseException If user input is incorrectly formatted.","lastModifiedDate":"2021-10-20"},{"lineNumber":24,"author":{"gitId":"chrus-chong"},"content":"     */","lastModifiedDate":"2021-10-20"},{"lineNumber":25,"author":{"gitId":"chrus-chong"},"content":"    @Override","lastModifiedDate":"2021-10-20"},{"lineNumber":26,"author":{"gitId":"chrus-chong"},"content":"    public GroupAddTagCommand parse(String args) throws ParseException {","lastModifiedDate":"2021-10-20"},{"lineNumber":27,"author":{"gitId":"chrus-chong"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2021-10-20"},{"lineNumber":28,"author":{"gitId":"chrus-chong"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_GROUP_NAME, PREFIX_TAG);","lastModifiedDate":"2021-10-20"},{"lineNumber":29,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":30,"author":{"gitId":"chrus-chong"},"content":"        if (!ParserUtil.arePrefixesPresent(argMultimap, PREFIX_GROUP_NAME, PREFIX_TAG)","lastModifiedDate":"2021-10-20"},{"lineNumber":31,"author":{"gitId":"chrus-chong"},"content":"                || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2021-10-20"},{"lineNumber":32,"author":{"gitId":"chrus-chong"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2021-10-20"},{"lineNumber":33,"author":{"gitId":"chrus-chong"},"content":"                    MESSAGE_GROUPADDTAGCOMMAND_USAGE));","lastModifiedDate":"2021-10-25"},{"lineNumber":34,"author":{"gitId":"chrus-chong"},"content":"        }","lastModifiedDate":"2021-10-20"},{"lineNumber":35,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":36,"author":{"gitId":"chrus-chong"},"content":"        GroupName groupName \u003d ParserUtil.parseGroupName(argMultimap.getValue(PREFIX_GROUP_NAME).get());","lastModifiedDate":"2021-10-20"},{"lineNumber":37,"author":{"gitId":"chrus-chong"},"content":"        Set\u003cTag\u003e newTagNames \u003d ParserUtil.parseTags(argMultimap.getAllValues(PREFIX_TAG));","lastModifiedDate":"2021-10-20"},{"lineNumber":38,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":39,"author":{"gitId":"chrus-chong"},"content":"        boolean isValidCommand \u003d true;","lastModifiedDate":"2021-10-20"},{"lineNumber":40,"author":{"gitId":"chrus-chong"},"content":"        if (groupName.getName().equals(BAD_FORMATTING) || Objects.isNull(newTagNames)) {","lastModifiedDate":"2021-10-20"},{"lineNumber":41,"author":{"gitId":"chrus-chong"},"content":"            isValidCommand \u003d false;","lastModifiedDate":"2021-10-20"},{"lineNumber":42,"author":{"gitId":"chrus-chong"},"content":"        }","lastModifiedDate":"2021-10-20"},{"lineNumber":43,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":44,"author":{"gitId":"chrus-chong"},"content":"        return new GroupAddTagCommand(groupName, newTagNames, isValidCommand);","lastModifiedDate":"2021-10-20"},{"lineNumber":45,"author":{"gitId":"chrus-chong"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":46,"author":{"gitId":"chrus-chong"},"content":"}","lastModifiedDate":"2021-10-20"}],"authorContributionMap":{"chrus-chong":46}},{"path":"src/main/java/seedu/awe/logic/parser/GroupEditNameCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"chrus-chong"},"content":"package seedu.awe.logic.parser;","lastModifiedDate":"2021-10-12"},{"lineNumber":2,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":3,"author":{"gitId":"chrus-chong"},"content":"import static seedu.awe.commons.core.Messages.MESSAGE_GROUPEDITNAMECOMMAND_USAGE;","lastModifiedDate":"2021-10-25"},{"lineNumber":4,"author":{"gitId":"chrus-chong"},"content":"import static seedu.awe.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-10-12"},{"lineNumber":5,"author":{"gitId":"chrus-chong"},"content":"import static seedu.awe.logic.parser.CliSyntax.PREFIX_GROUP_NAME;","lastModifiedDate":"2021-10-12"},{"lineNumber":6,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":7,"author":{"gitId":"chrus-chong"},"content":"import java.util.List;","lastModifiedDate":"2021-10-12"},{"lineNumber":8,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":9,"author":{"gitId":"chrus-chong"},"content":"import seedu.awe.logic.commands.GroupEditNameCommand;","lastModifiedDate":"2021-10-12"},{"lineNumber":10,"author":{"gitId":"chrus-chong"},"content":"import seedu.awe.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-10-12"},{"lineNumber":11,"author":{"gitId":"chrus-chong"},"content":"import seedu.awe.model.group.GroupName;","lastModifiedDate":"2021-10-12"},{"lineNumber":12,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":13,"author":{"gitId":"chrus-chong"},"content":"public class GroupEditNameCommandParser implements Parser\u003cGroupEditNameCommand\u003e {","lastModifiedDate":"2021-10-12"},{"lineNumber":14,"author":{"gitId":"chrus-chong"},"content":"    private static final String BAD_FORMATTING \u003d \"\\\"groupeditname command\\\" is not properly formatted\";","lastModifiedDate":"2021-10-12"},{"lineNumber":15,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":16,"author":{"gitId":"chrus-chong"},"content":"    /**","lastModifiedDate":"2021-10-12"},{"lineNumber":17,"author":{"gitId":"chrus-chong"},"content":"     * Returns GroupEditNameCommand based on user input.","lastModifiedDate":"2021-10-12"},{"lineNumber":18,"author":{"gitId":"chrus-chong"},"content":"     *","lastModifiedDate":"2021-10-12"},{"lineNumber":19,"author":{"gitId":"chrus-chong"},"content":"     * @param args User input into contact list.","lastModifiedDate":"2021-10-12"},{"lineNumber":20,"author":{"gitId":"chrus-chong"},"content":"     * @return GroupEditNameCommand object to represent command to be executed.","lastModifiedDate":"2021-10-12"},{"lineNumber":21,"author":{"gitId":"chrus-chong"},"content":"     * @throws ParseException If user input is incorrectly formatted.","lastModifiedDate":"2021-10-12"},{"lineNumber":22,"author":{"gitId":"chrus-chong"},"content":"     */","lastModifiedDate":"2021-10-12"},{"lineNumber":23,"author":{"gitId":"chrus-chong"},"content":"    public GroupEditNameCommand parse(String args) throws ParseException {","lastModifiedDate":"2021-10-12"},{"lineNumber":24,"author":{"gitId":"chrus-chong"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2021-10-12"},{"lineNumber":25,"author":{"gitId":"chrus-chong"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_GROUP_NAME);","lastModifiedDate":"2021-10-12"},{"lineNumber":26,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":27,"author":{"gitId":"chrus-chong"},"content":"        if (!ParserUtil.arePrefixesPresent(argMultimap, PREFIX_GROUP_NAME)","lastModifiedDate":"2021-10-12"},{"lineNumber":28,"author":{"gitId":"chrus-chong"},"content":"                || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2021-10-12"},{"lineNumber":29,"author":{"gitId":"chrus-chong"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2021-10-12"},{"lineNumber":30,"author":{"gitId":"chrus-chong"},"content":"                    MESSAGE_GROUPEDITNAMECOMMAND_USAGE));","lastModifiedDate":"2021-10-25"},{"lineNumber":31,"author":{"gitId":"chrus-chong"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":32,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":33,"author":{"gitId":"chrus-chong"},"content":"        List\u003cGroupName\u003e groupNamesList \u003d ParserUtil.parseGroupNames(argMultimap.getAllValues(PREFIX_GROUP_NAME));","lastModifiedDate":"2021-10-12"},{"lineNumber":34,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":35,"author":{"gitId":"chrus-chong"},"content":"        GroupName oldGroupName;","lastModifiedDate":"2021-10-12"},{"lineNumber":36,"author":{"gitId":"chrus-chong"},"content":"        GroupName newGroupName;","lastModifiedDate":"2021-10-12"},{"lineNumber":37,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":38,"author":{"gitId":"chrus-chong"},"content":"        if (groupNamesList.size() \u003e 2) {","lastModifiedDate":"2021-10-12"},{"lineNumber":39,"author":{"gitId":"chrus-chong"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2021-10-12"},{"lineNumber":40,"author":{"gitId":"chrus-chong"},"content":"                    MESSAGE_GROUPEDITNAMECOMMAND_USAGE));","lastModifiedDate":"2021-10-25"},{"lineNumber":41,"author":{"gitId":"chrus-chong"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":42,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":43,"author":{"gitId":"chrus-chong"},"content":"        try {","lastModifiedDate":"2021-10-12"},{"lineNumber":44,"author":{"gitId":"chrus-chong"},"content":"            oldGroupName \u003d groupNamesList.get(0);","lastModifiedDate":"2021-10-12"},{"lineNumber":45,"author":{"gitId":"chrus-chong"},"content":"            newGroupName \u003d groupNamesList.get(1);","lastModifiedDate":"2021-10-12"},{"lineNumber":46,"author":{"gitId":"chrus-chong"},"content":"        } catch (IndexOutOfBoundsException exception) {","lastModifiedDate":"2021-10-12"},{"lineNumber":47,"author":{"gitId":"chrus-chong"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2021-10-12"},{"lineNumber":48,"author":{"gitId":"chrus-chong"},"content":"                    MESSAGE_GROUPEDITNAMECOMMAND_USAGE));","lastModifiedDate":"2021-10-25"},{"lineNumber":49,"author":{"gitId":"chrus-chong"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":50,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":51,"author":{"gitId":"chrus-chong"},"content":"        boolean isValidCommand \u003d true;","lastModifiedDate":"2021-10-12"},{"lineNumber":52,"author":{"gitId":"chrus-chong"},"content":"        if (newGroupName.getName().equals(BAD_FORMATTING)) {","lastModifiedDate":"2021-10-12"},{"lineNumber":53,"author":{"gitId":"chrus-chong"},"content":"            isValidCommand \u003d false;","lastModifiedDate":"2021-10-12"},{"lineNumber":54,"author":{"gitId":"chrus-chong"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":55,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":56,"author":{"gitId":"chrus-chong"},"content":"        return new GroupEditNameCommand(oldGroupName, newGroupName, isValidCommand);","lastModifiedDate":"2021-10-12"},{"lineNumber":57,"author":{"gitId":"chrus-chong"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":58,"author":{"gitId":"chrus-chong"},"content":"}","lastModifiedDate":"2021-10-12"}],"authorContributionMap":{"chrus-chong":58}},{"path":"src/main/java/seedu/awe/logic/parser/GroupRemoveContactCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"chrus-chong"},"content":"package seedu.awe.logic.parser;","lastModifiedDate":"2021-10-11"},{"lineNumber":2,"author":{"gitId":"chrus-chong"},"content":"import static seedu.awe.commons.core.Messages.MESSAGE_GROUPREMOVECONTACT_ERROR;","lastModifiedDate":"2021-10-25"},{"lineNumber":3,"author":{"gitId":"chrus-chong"},"content":"import static seedu.awe.commons.core.Messages.MESSAGE_GROUPREMOVECONTACT_USAGE;","lastModifiedDate":"2021-10-25"},{"lineNumber":4,"author":{"gitId":"chrus-chong"},"content":"import static seedu.awe.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-10-11"},{"lineNumber":5,"author":{"gitId":"chrus-chong"},"content":"import static seedu.awe.logic.parser.CliSyntax.PREFIX_GROUP_NAME;","lastModifiedDate":"2021-10-11"},{"lineNumber":6,"author":{"gitId":"chrus-chong"},"content":"import static seedu.awe.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2021-10-11"},{"lineNumber":7,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":8,"author":{"gitId":"chrus-chong"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-11"},{"lineNumber":9,"author":{"gitId":"chrus-chong"},"content":"import java.util.List;","lastModifiedDate":"2021-10-11"},{"lineNumber":10,"author":{"gitId":"chrus-chong"},"content":"import java.util.Objects;","lastModifiedDate":"2021-10-11"},{"lineNumber":11,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":12,"author":{"gitId":"chrus-chong"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-10-11"},{"lineNumber":13,"author":{"gitId":"chrus-chong"},"content":"import seedu.awe.logic.commands.GroupRemoveContactCommand;","lastModifiedDate":"2021-10-20"},{"lineNumber":14,"author":{"gitId":"chrus-chong"},"content":"import seedu.awe.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-10-11"},{"lineNumber":15,"author":{"gitId":"chrus-chong"},"content":"import seedu.awe.model.Model;","lastModifiedDate":"2021-10-11"},{"lineNumber":16,"author":{"gitId":"chrus-chong"},"content":"import seedu.awe.model.ReadOnlyAddressBook;","lastModifiedDate":"2021-10-11"},{"lineNumber":17,"author":{"gitId":"chrus-chong"},"content":"import seedu.awe.model.group.GroupName;","lastModifiedDate":"2021-10-11"},{"lineNumber":18,"author":{"gitId":"chrus-chong"},"content":"import seedu.awe.model.person.Name;","lastModifiedDate":"2021-10-11"},{"lineNumber":19,"author":{"gitId":"chrus-chong"},"content":"import seedu.awe.model.person.Person;","lastModifiedDate":"2021-10-11"},{"lineNumber":20,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":21,"author":{"gitId":"chrus-chong"},"content":"public class GroupRemoveContactCommandParser implements Parser\u003cGroupRemoveContactCommand\u003e {","lastModifiedDate":"2021-10-20"},{"lineNumber":22,"author":{"gitId":"chrus-chong"},"content":"    private static final String BAD_FORMATTING \u003d \"\\\"groupremovecontact command\\\" is not properly formatted\";","lastModifiedDate":"2021-10-20"},{"lineNumber":23,"author":{"gitId":"chrus-chong"},"content":"    private ObservableList\u003cPerson\u003e allMembers;","lastModifiedDate":"2021-10-11"},{"lineNumber":24,"author":{"gitId":"chrus-chong"},"content":"    private final ArrayList\u003cPerson\u003e membersToBeRemoved;","lastModifiedDate":"2021-10-11"},{"lineNumber":25,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":26,"author":{"gitId":"chrus-chong"},"content":"    /**","lastModifiedDate":"2021-10-11"},{"lineNumber":27,"author":{"gitId":"chrus-chong"},"content":"     * Creates new GroupRemoveContactCommandParser object.","lastModifiedDate":"2021-10-20"},{"lineNumber":28,"author":{"gitId":"chrus-chong"},"content":"     *","lastModifiedDate":"2021-10-11"},{"lineNumber":29,"author":{"gitId":"chrus-chong"},"content":"     * @param model Model object passed into constructor to provide list of contacts.","lastModifiedDate":"2021-10-11"},{"lineNumber":30,"author":{"gitId":"chrus-chong"},"content":"     */","lastModifiedDate":"2021-10-11"},{"lineNumber":31,"author":{"gitId":"chrus-chong"},"content":"    public GroupRemoveContactCommandParser(Model model) {","lastModifiedDate":"2021-10-20"},{"lineNumber":32,"author":{"gitId":"chrus-chong"},"content":"        ReadOnlyAddressBook addressBook \u003d model.getAddressBook();","lastModifiedDate":"2021-10-11"},{"lineNumber":33,"author":{"gitId":"chrus-chong"},"content":"        this.allMembers \u003d addressBook.getPersonList();","lastModifiedDate":"2021-10-11"},{"lineNumber":34,"author":{"gitId":"chrus-chong"},"content":"        this.membersToBeRemoved \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-11"},{"lineNumber":35,"author":{"gitId":"chrus-chong"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":36,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":37,"author":{"gitId":"chrus-chong"},"content":"    /**","lastModifiedDate":"2021-10-11"},{"lineNumber":38,"author":{"gitId":"chrus-chong"},"content":"     * Returns GroupRemoveContactCommand based on user input.","lastModifiedDate":"2021-10-20"},{"lineNumber":39,"author":{"gitId":"chrus-chong"},"content":"     *","lastModifiedDate":"2021-10-11"},{"lineNumber":40,"author":{"gitId":"chrus-chong"},"content":"     * @param args User input into contact list.","lastModifiedDate":"2021-10-12"},{"lineNumber":41,"author":{"gitId":"chrus-chong"},"content":"     * @return GroupRemoveContactCommand object to represent command to be executed.","lastModifiedDate":"2021-10-20"},{"lineNumber":42,"author":{"gitId":"chrus-chong"},"content":"     * @throws ParseException If user input is incorrectly formatted.","lastModifiedDate":"2021-10-11"},{"lineNumber":43,"author":{"gitId":"chrus-chong"},"content":"     */","lastModifiedDate":"2021-10-11"},{"lineNumber":44,"author":{"gitId":"chrus-chong"},"content":"    public GroupRemoveContactCommand parse(String args) throws ParseException {","lastModifiedDate":"2021-10-20"},{"lineNumber":45,"author":{"gitId":"chrus-chong"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2021-10-11"},{"lineNumber":46,"author":{"gitId":"chrus-chong"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_GROUP_NAME, PREFIX_NAME);","lastModifiedDate":"2021-10-11"},{"lineNumber":47,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":48,"author":{"gitId":"chrus-chong"},"content":"        if (!ParserUtil.arePrefixesPresent(argMultimap, PREFIX_GROUP_NAME, PREFIX_NAME)","lastModifiedDate":"2021-10-11"},{"lineNumber":49,"author":{"gitId":"chrus-chong"},"content":"                || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2021-10-11"},{"lineNumber":50,"author":{"gitId":"chrus-chong"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2021-10-11"},{"lineNumber":51,"author":{"gitId":"chrus-chong"},"content":"                    MESSAGE_GROUPREMOVECONTACT_USAGE));","lastModifiedDate":"2021-10-25"},{"lineNumber":52,"author":{"gitId":"chrus-chong"},"content":"        }","lastModifiedDate":"2021-10-11"},{"lineNumber":53,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":54,"author":{"gitId":"chrus-chong"},"content":"        GroupName groupName \u003d ParserUtil.parseGroupName(argMultimap.getValue(PREFIX_GROUP_NAME).get());","lastModifiedDate":"2021-10-11"},{"lineNumber":55,"author":{"gitId":"chrus-chong"},"content":"        List\u003cName\u003e membersToBeRemovedNames \u003d ParserUtil.parseMemberNames(argMultimap.getAllValues(PREFIX_NAME));","lastModifiedDate":"2021-10-11"},{"lineNumber":56,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":57,"author":{"gitId":"chrus-chong"},"content":"        ArrayList\u003cPerson\u003e membersToBeRemoved \u003d findMembersToBeRemoved(membersToBeRemovedNames);","lastModifiedDate":"2021-10-11"},{"lineNumber":58,"author":{"gitId":"chrus-chong"},"content":"        boolean isValidCommand \u003d true;","lastModifiedDate":"2021-10-11"},{"lineNumber":59,"author":{"gitId":"chrus-chong"},"content":"        if (groupName.getName().equals(BAD_FORMATTING) || Objects.isNull(membersToBeRemoved)) {","lastModifiedDate":"2021-10-11"},{"lineNumber":60,"author":{"gitId":"chrus-chong"},"content":"            isValidCommand \u003d false;","lastModifiedDate":"2021-10-11"},{"lineNumber":61,"author":{"gitId":"chrus-chong"},"content":"        }","lastModifiedDate":"2021-10-11"},{"lineNumber":62,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":63,"author":{"gitId":"chrus-chong"},"content":"        return new GroupRemoveContactCommand(groupName, membersToBeRemoved, isValidCommand);","lastModifiedDate":"2021-10-20"},{"lineNumber":64,"author":{"gitId":"chrus-chong"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":65,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":66,"author":{"gitId":"chrus-chong"},"content":"    /**","lastModifiedDate":"2021-10-11"},{"lineNumber":67,"author":{"gitId":"chrus-chong"},"content":"     * Returns list of members in the group.","lastModifiedDate":"2021-10-11"},{"lineNumber":68,"author":{"gitId":"chrus-chong"},"content":"     *","lastModifiedDate":"2021-10-11"},{"lineNumber":69,"author":{"gitId":"chrus-chong"},"content":"     * @param membersToBeRemovedNames List of names representing members to be removed from group.","lastModifiedDate":"2021-10-11"},{"lineNumber":70,"author":{"gitId":"chrus-chong"},"content":"     * @return ArrayList of Person objects representing members to be added to the group","lastModifiedDate":"2021-10-11"},{"lineNumber":71,"author":{"gitId":"chrus-chong"},"content":"     */","lastModifiedDate":"2021-10-11"},{"lineNumber":72,"author":{"gitId":"chrus-chong"},"content":"    public ArrayList\u003cPerson\u003e findMembersToBeRemoved(List\u003cName\u003e membersToBeRemovedNames) throws ParseException {","lastModifiedDate":"2021-10-11"},{"lineNumber":73,"author":{"gitId":"chrus-chong"},"content":"        try {","lastModifiedDate":"2021-10-11"},{"lineNumber":74,"author":{"gitId":"chrus-chong"},"content":"            for (Name name : membersToBeRemovedNames) {","lastModifiedDate":"2021-10-11"},{"lineNumber":75,"author":{"gitId":"chrus-chong"},"content":"                addMemberToRemoveList(name);","lastModifiedDate":"2021-10-11"},{"lineNumber":76,"author":{"gitId":"chrus-chong"},"content":"            }","lastModifiedDate":"2021-10-11"},{"lineNumber":77,"author":{"gitId":"chrus-chong"},"content":"            if (!membersToBeRemovedNames.isEmpty() \u0026\u0026 membersToBeRemovedNames.isEmpty()) {","lastModifiedDate":"2021-10-11"},{"lineNumber":78,"author":{"gitId":"chrus-chong"},"content":"                throw new ParseException(MESSAGE_GROUPREMOVECONTACT_ERROR);","lastModifiedDate":"2021-10-25"},{"lineNumber":79,"author":{"gitId":"chrus-chong"},"content":"            }","lastModifiedDate":"2021-10-11"},{"lineNumber":80,"author":{"gitId":"chrus-chong"},"content":"            return membersToBeRemoved;","lastModifiedDate":"2021-10-11"},{"lineNumber":81,"author":{"gitId":"chrus-chong"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2021-10-11"},{"lineNumber":82,"author":{"gitId":"chrus-chong"},"content":"            throw new ParseException(MESSAGE_INVALID_COMMAND_FORMAT);","lastModifiedDate":"2021-10-11"},{"lineNumber":83,"author":{"gitId":"chrus-chong"},"content":"        }","lastModifiedDate":"2021-10-11"},{"lineNumber":84,"author":{"gitId":"chrus-chong"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":85,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":86,"author":{"gitId":"chrus-chong"},"content":"    /**","lastModifiedDate":"2021-10-11"},{"lineNumber":87,"author":{"gitId":"chrus-chong"},"content":"     * Returns boolean object representing if member has been added into membersToBeRemoved.","lastModifiedDate":"2021-10-12"},{"lineNumber":88,"author":{"gitId":"chrus-chong"},"content":"     *","lastModifiedDate":"2021-10-11"},{"lineNumber":89,"author":{"gitId":"chrus-chong"},"content":"     * @param memberName Name object representing member whose presence is being checked for.","lastModifiedDate":"2021-10-11"},{"lineNumber":90,"author":{"gitId":"chrus-chong"},"content":"     * @return boolean object representing if member has been added into membersToBeRemoved.","lastModifiedDate":"2021-10-12"},{"lineNumber":91,"author":{"gitId":"chrus-chong"},"content":"     * @throws ParseException if the person does not exist in the contact list.","lastModifiedDate":"2021-10-11"},{"lineNumber":92,"author":{"gitId":"chrus-chong"},"content":"     */","lastModifiedDate":"2021-10-11"},{"lineNumber":93,"author":{"gitId":"chrus-chong"},"content":"    public boolean addMemberToRemoveList(Name memberName) throws ParseException {","lastModifiedDate":"2021-10-11"},{"lineNumber":94,"author":{"gitId":"chrus-chong"},"content":"        boolean added \u003d false;","lastModifiedDate":"2021-10-11"},{"lineNumber":95,"author":{"gitId":"chrus-chong"},"content":"        Person memberFound \u003d findMember(memberName, allMembers);","lastModifiedDate":"2021-10-11"},{"lineNumber":96,"author":{"gitId":"chrus-chong"},"content":"        if (!Objects.isNull(memberFound)) {","lastModifiedDate":"2021-10-11"},{"lineNumber":97,"author":{"gitId":"chrus-chong"},"content":"            membersToBeRemoved.add(memberFound);","lastModifiedDate":"2021-10-11"},{"lineNumber":98,"author":{"gitId":"chrus-chong"},"content":"            added \u003d true;","lastModifiedDate":"2021-10-11"},{"lineNumber":99,"author":{"gitId":"chrus-chong"},"content":"        }","lastModifiedDate":"2021-10-11"},{"lineNumber":100,"author":{"gitId":"chrus-chong"},"content":"        if (!added) {","lastModifiedDate":"2021-10-11"},{"lineNumber":101,"author":{"gitId":"chrus-chong"},"content":"            throw new ParseException(MESSAGE_GROUPREMOVECONTACT_ERROR);","lastModifiedDate":"2021-10-25"},{"lineNumber":102,"author":{"gitId":"chrus-chong"},"content":"        }","lastModifiedDate":"2021-10-11"},{"lineNumber":103,"author":{"gitId":"chrus-chong"},"content":"        return added;","lastModifiedDate":"2021-10-11"},{"lineNumber":104,"author":{"gitId":"chrus-chong"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":105,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":106,"author":{"gitId":"chrus-chong"},"content":"    /**","lastModifiedDate":"2021-10-11"},{"lineNumber":107,"author":{"gitId":"chrus-chong"},"content":"     * Returns person that matches a given Name object if in contact list.","lastModifiedDate":"2021-10-11"},{"lineNumber":108,"author":{"gitId":"chrus-chong"},"content":"     * If person not in contact list, null is returned.","lastModifiedDate":"2021-10-11"},{"lineNumber":109,"author":{"gitId":"chrus-chong"},"content":"     *","lastModifiedDate":"2021-10-11"},{"lineNumber":110,"author":{"gitId":"chrus-chong"},"content":"     * @param memberName Name object representing person that is being searched for in the contact list.","lastModifiedDate":"2021-10-11"},{"lineNumber":111,"author":{"gitId":"chrus-chong"},"content":"     * @param members ObservableList of Person objects representing all contacts in the contact list.","lastModifiedDate":"2021-10-11"},{"lineNumber":112,"author":{"gitId":"chrus-chong"},"content":"     * @return Person object if name matches that of a person from the contact list.","lastModifiedDate":"2021-10-11"},{"lineNumber":113,"author":{"gitId":"chrus-chong"},"content":"     */","lastModifiedDate":"2021-10-11"},{"lineNumber":114,"author":{"gitId":"chrus-chong"},"content":"    public static Person findMember(Name memberName, ObservableList\u003cPerson\u003e members) {","lastModifiedDate":"2021-10-11"},{"lineNumber":115,"author":{"gitId":"chrus-chong"},"content":"        for (Person member : members) {","lastModifiedDate":"2021-10-11"},{"lineNumber":116,"author":{"gitId":"chrus-chong"},"content":"            if (member.getName().equals(memberName)) {","lastModifiedDate":"2021-10-11"},{"lineNumber":117,"author":{"gitId":"chrus-chong"},"content":"                return member;","lastModifiedDate":"2021-10-11"},{"lineNumber":118,"author":{"gitId":"chrus-chong"},"content":"            }","lastModifiedDate":"2021-10-11"},{"lineNumber":119,"author":{"gitId":"chrus-chong"},"content":"        }","lastModifiedDate":"2021-10-11"},{"lineNumber":120,"author":{"gitId":"chrus-chong"},"content":"        return null;","lastModifiedDate":"2021-10-11"},{"lineNumber":121,"author":{"gitId":"chrus-chong"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":122,"author":{"gitId":"chrus-chong"},"content":"}","lastModifiedDate":"2021-10-11"}],"authorContributionMap":{"chrus-chong":122}},{"path":"src/main/java/seedu/awe/logic/parser/GroupRemoveTagCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"chrus-chong"},"content":"package seedu.awe.logic.parser;","lastModifiedDate":"2021-10-20"},{"lineNumber":2,"author":{"gitId":"chrus-chong"},"content":"import static seedu.awe.commons.core.Messages.MESSAGE_GROUPREMOVETAG_USAGE;","lastModifiedDate":"2021-10-25"},{"lineNumber":3,"author":{"gitId":"chrus-chong"},"content":"import static seedu.awe.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-10-20"},{"lineNumber":4,"author":{"gitId":"chrus-chong"},"content":"import static seedu.awe.logic.parser.CliSyntax.PREFIX_GROUP_NAME;","lastModifiedDate":"2021-10-20"},{"lineNumber":5,"author":{"gitId":"chrus-chong"},"content":"import static seedu.awe.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2021-10-20"},{"lineNumber":6,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":7,"author":{"gitId":"chrus-chong"},"content":"import java.util.Objects;","lastModifiedDate":"2021-10-20"},{"lineNumber":8,"author":{"gitId":"chrus-chong"},"content":"import java.util.Set;","lastModifiedDate":"2021-10-20"},{"lineNumber":9,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":10,"author":{"gitId":"chrus-chong"},"content":"import seedu.awe.logic.commands.GroupRemoveTagCommand;","lastModifiedDate":"2021-10-20"},{"lineNumber":11,"author":{"gitId":"chrus-chong"},"content":"import seedu.awe.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-10-20"},{"lineNumber":12,"author":{"gitId":"chrus-chong"},"content":"import seedu.awe.model.group.GroupName;","lastModifiedDate":"2021-10-20"},{"lineNumber":13,"author":{"gitId":"chrus-chong"},"content":"import seedu.awe.model.tag.Tag;","lastModifiedDate":"2021-10-20"},{"lineNumber":14,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":15,"author":{"gitId":"chrus-chong"},"content":"public class GroupRemoveTagCommandParser implements Parser\u003cGroupRemoveTagCommand\u003e {","lastModifiedDate":"2021-10-20"},{"lineNumber":16,"author":{"gitId":"chrus-chong"},"content":"    private static final String BAD_FORMATTING \u003d \"\\\"groupremovetag command\\\" is not properly formatted\";","lastModifiedDate":"2021-10-20"},{"lineNumber":17,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":18,"author":{"gitId":"chrus-chong"},"content":"    /**","lastModifiedDate":"2021-10-20"},{"lineNumber":19,"author":{"gitId":"chrus-chong"},"content":"     * Returns GroupRemoveTagCommand based on user input.","lastModifiedDate":"2021-10-20"},{"lineNumber":20,"author":{"gitId":"chrus-chong"},"content":"     *","lastModifiedDate":"2021-10-20"},{"lineNumber":21,"author":{"gitId":"chrus-chong"},"content":"     * @param args User input into contact list.","lastModifiedDate":"2021-10-20"},{"lineNumber":22,"author":{"gitId":"chrus-chong"},"content":"     * @return GroupRemoveTagCommand object to represent command to be executed.","lastModifiedDate":"2021-10-20"},{"lineNumber":23,"author":{"gitId":"chrus-chong"},"content":"     * @throws ParseException If user input is incorrectly formatted.","lastModifiedDate":"2021-10-20"},{"lineNumber":24,"author":{"gitId":"chrus-chong"},"content":"     */","lastModifiedDate":"2021-10-20"},{"lineNumber":25,"author":{"gitId":"chrus-chong"},"content":"    @Override","lastModifiedDate":"2021-10-20"},{"lineNumber":26,"author":{"gitId":"chrus-chong"},"content":"    public GroupRemoveTagCommand parse(String args) throws ParseException {","lastModifiedDate":"2021-10-20"},{"lineNumber":27,"author":{"gitId":"chrus-chong"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2021-10-20"},{"lineNumber":28,"author":{"gitId":"chrus-chong"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_GROUP_NAME, PREFIX_TAG);","lastModifiedDate":"2021-10-20"},{"lineNumber":29,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":30,"author":{"gitId":"chrus-chong"},"content":"        if (!ParserUtil.arePrefixesPresent(argMultimap, PREFIX_GROUP_NAME, PREFIX_TAG)","lastModifiedDate":"2021-10-20"},{"lineNumber":31,"author":{"gitId":"chrus-chong"},"content":"                || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2021-10-20"},{"lineNumber":32,"author":{"gitId":"chrus-chong"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2021-10-20"},{"lineNumber":33,"author":{"gitId":"chrus-chong"},"content":"                    MESSAGE_GROUPREMOVETAG_USAGE));","lastModifiedDate":"2021-10-25"},{"lineNumber":34,"author":{"gitId":"chrus-chong"},"content":"        }","lastModifiedDate":"2021-10-20"},{"lineNumber":35,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":36,"author":{"gitId":"chrus-chong"},"content":"        GroupName groupName \u003d ParserUtil.parseGroupName(argMultimap.getValue(PREFIX_GROUP_NAME).get());","lastModifiedDate":"2021-10-20"},{"lineNumber":37,"author":{"gitId":"chrus-chong"},"content":"        Set\u003cTag\u003e tagsToBeRemoved \u003d ParserUtil.parseTags(argMultimap.getAllValues(PREFIX_TAG));","lastModifiedDate":"2021-10-20"},{"lineNumber":38,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":39,"author":{"gitId":"chrus-chong"},"content":"        boolean isValidCommand \u003d true;","lastModifiedDate":"2021-10-20"},{"lineNumber":40,"author":{"gitId":"chrus-chong"},"content":"        if (groupName.getName().equals(BAD_FORMATTING) || Objects.isNull(tagsToBeRemoved)) {","lastModifiedDate":"2021-10-20"},{"lineNumber":41,"author":{"gitId":"chrus-chong"},"content":"            isValidCommand \u003d false;","lastModifiedDate":"2021-10-20"},{"lineNumber":42,"author":{"gitId":"chrus-chong"},"content":"        }","lastModifiedDate":"2021-10-20"},{"lineNumber":43,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":44,"author":{"gitId":"chrus-chong"},"content":"        return new GroupRemoveTagCommand(groupName, tagsToBeRemoved, isValidCommand);","lastModifiedDate":"2021-10-20"},{"lineNumber":45,"author":{"gitId":"chrus-chong"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":46,"author":{"gitId":"chrus-chong"},"content":"}","lastModifiedDate":"2021-10-20"}],"authorContributionMap":{"chrus-chong":46}},{"path":"src/main/java/seedu/awe/logic/parser/ListExpensesCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Jingwencloud"},"content":"package seedu.awe.logic.parser;","lastModifiedDate":"2021-10-07"},{"lineNumber":2,"author":{"gitId":"Jingwencloud"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":3,"author":{"gitId":"Jingwencloud"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-07"},{"lineNumber":4,"author":{"gitId":"Jingwencloud"},"content":"import static seedu.awe.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-10-07"},{"lineNumber":5,"author":{"gitId":"chrus-chong"},"content":"import static seedu.awe.commons.core.Messages.MESSAGE_LISTEXPENSESCOMMAND_USAGE;","lastModifiedDate":"2021-10-25"},{"lineNumber":6,"author":{"gitId":"Jingwencloud"},"content":"import static seedu.awe.logic.parser.CliSyntax.PREFIX_GROUP_NAME;","lastModifiedDate":"2021-10-07"},{"lineNumber":7,"author":{"gitId":"Jingwencloud"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":8,"author":{"gitId":"Jingwencloud"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2021-10-07"},{"lineNumber":9,"author":{"gitId":"Jingwencloud"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":10,"author":{"gitId":"Jingwencloud"},"content":"import seedu.awe.commons.exceptions.IllegalValueException;","lastModifiedDate":"2021-10-07"},{"lineNumber":11,"author":{"gitId":"Jingwencloud"},"content":"import seedu.awe.logic.commands.ListExpensesCommand;","lastModifiedDate":"2021-10-07"},{"lineNumber":12,"author":{"gitId":"Jingwencloud"},"content":"import seedu.awe.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-10-07"},{"lineNumber":13,"author":{"gitId":"Jingwencloud"},"content":"import seedu.awe.model.group.GroupName;","lastModifiedDate":"2021-10-07"},{"lineNumber":14,"author":{"gitId":"Jingwencloud"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":15,"author":{"gitId":"Jingwencloud"},"content":"/**","lastModifiedDate":"2021-10-07"},{"lineNumber":16,"author":{"gitId":"Jingwencloud"},"content":" * Parses input arguments and creates a new ListExpensesCommand object","lastModifiedDate":"2021-10-07"},{"lineNumber":17,"author":{"gitId":"Jingwencloud"},"content":" */","lastModifiedDate":"2021-10-07"},{"lineNumber":18,"author":{"gitId":"Jingwencloud"},"content":"public class ListExpensesCommandParser implements Parser\u003cListExpensesCommand\u003e {","lastModifiedDate":"2021-10-07"},{"lineNumber":19,"author":{"gitId":"Jingwencloud"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":20,"author":{"gitId":"Jingwencloud"},"content":"    /**","lastModifiedDate":"2021-10-07"},{"lineNumber":21,"author":{"gitId":"Jingwencloud"},"content":"     * Parses the given {@code String} of arguments in the context of the ListExpensesCommand","lastModifiedDate":"2021-10-07"},{"lineNumber":22,"author":{"gitId":"Jingwencloud"},"content":"     * and returns a ListExpensesCommand object for execution.","lastModifiedDate":"2021-10-07"},{"lineNumber":23,"author":{"gitId":"Jingwencloud"},"content":"     *","lastModifiedDate":"2021-10-07"},{"lineNumber":24,"author":{"gitId":"Jingwencloud"},"content":"     * @param args user input","lastModifiedDate":"2021-10-07"},{"lineNumber":25,"author":{"gitId":"Jingwencloud"},"content":"     * @return ListExpensesCommand object to represent command to be executed.","lastModifiedDate":"2021-10-07"},{"lineNumber":26,"author":{"gitId":"Jingwencloud"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2021-10-07"},{"lineNumber":27,"author":{"gitId":"Jingwencloud"},"content":"     */","lastModifiedDate":"2021-10-07"},{"lineNumber":28,"author":{"gitId":"Jingwencloud"},"content":"    public ListExpensesCommand parse(String args) throws ParseException {","lastModifiedDate":"2021-10-07"},{"lineNumber":29,"author":{"gitId":"Jingwencloud"},"content":"        requireNonNull(args);","lastModifiedDate":"2021-10-07"},{"lineNumber":30,"author":{"gitId":"Jingwencloud"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(args,","lastModifiedDate":"2021-10-07"},{"lineNumber":31,"author":{"gitId":"Jingwencloud"},"content":"                PREFIX_GROUP_NAME);","lastModifiedDate":"2021-10-07"},{"lineNumber":32,"author":{"gitId":"Jingwencloud"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":33,"author":{"gitId":"Jingwencloud"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_GROUP_NAME)","lastModifiedDate":"2021-10-07"},{"lineNumber":34,"author":{"gitId":"Jingwencloud"},"content":"                || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2021-10-07"},{"lineNumber":35,"author":{"gitId":"chrus-chong"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, MESSAGE_LISTEXPENSESCOMMAND_USAGE));","lastModifiedDate":"2021-10-25"},{"lineNumber":36,"author":{"gitId":"Jingwencloud"},"content":"        }","lastModifiedDate":"2021-10-07"},{"lineNumber":37,"author":{"gitId":"Jingwencloud"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":38,"author":{"gitId":"Jingwencloud"},"content":"        try {","lastModifiedDate":"2021-10-07"},{"lineNumber":39,"author":{"gitId":"Jingwencloud"},"content":"            GroupName groupName \u003d ParserUtil.parseGroupName((argMultimap.getValue(PREFIX_GROUP_NAME)).get());","lastModifiedDate":"2021-10-07"},{"lineNumber":40,"author":{"gitId":"Jingwencloud"},"content":"            return new ListExpensesCommand(groupName);","lastModifiedDate":"2021-10-07"},{"lineNumber":41,"author":{"gitId":"Jingwencloud"},"content":"        } catch (IllegalValueException ive) {","lastModifiedDate":"2021-10-07"},{"lineNumber":42,"author":{"gitId":"Jingwencloud"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2021-10-07"},{"lineNumber":43,"author":{"gitId":"chrus-chong"},"content":"                    MESSAGE_LISTEXPENSESCOMMAND_USAGE), ive);","lastModifiedDate":"2021-10-25"},{"lineNumber":44,"author":{"gitId":"Jingwencloud"},"content":"        }","lastModifiedDate":"2021-10-07"},{"lineNumber":45,"author":{"gitId":"Jingwencloud"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":46,"author":{"gitId":"Jingwencloud"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":47,"author":{"gitId":"Jingwencloud"},"content":"    /**","lastModifiedDate":"2021-10-07"},{"lineNumber":48,"author":{"gitId":"Jingwencloud"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2021-10-07"},{"lineNumber":49,"author":{"gitId":"Jingwencloud"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2021-10-07"},{"lineNumber":50,"author":{"gitId":"Jingwencloud"},"content":"     */","lastModifiedDate":"2021-10-07"},{"lineNumber":51,"author":{"gitId":"Jingwencloud"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2021-10-07"},{"lineNumber":52,"author":{"gitId":"Jingwencloud"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2021-10-07"},{"lineNumber":53,"author":{"gitId":"Jingwencloud"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":54,"author":{"gitId":"Jingwencloud"},"content":"}","lastModifiedDate":"2021-10-07"}],"authorContributionMap":{"Jingwencloud":51,"chrus-chong":3}},{"path":"src/main/java/seedu/awe/logic/parser/ListTransactionSummaryCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"marcuspeh"},"content":"package seedu.awe.logic.parser;","lastModifiedDate":"2021-10-18"},{"lineNumber":2,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":3,"author":{"gitId":"marcuspeh"},"content":"import static seedu.awe.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-10-18"},{"lineNumber":4,"author":{"gitId":"chrus-chong"},"content":"import static seedu.awe.commons.core.Messages.MESSAGE_LISTTRANSACTIONSUMMARYCOMMAND_USAGE;","lastModifiedDate":"2021-10-25"},{"lineNumber":5,"author":{"gitId":"marcuspeh"},"content":"import static seedu.awe.logic.parser.CliSyntax.PREFIX_GROUP_NAME;","lastModifiedDate":"2021-10-18"},{"lineNumber":6,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":7,"author":{"gitId":"marcuspeh"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-18"},{"lineNumber":8,"author":{"gitId":"marcuspeh"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2021-10-18"},{"lineNumber":9,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":10,"author":{"gitId":"marcuspeh"},"content":"import seedu.awe.logic.commands.ListTransactionSummaryCommand;","lastModifiedDate":"2021-10-18"},{"lineNumber":11,"author":{"gitId":"marcuspeh"},"content":"import seedu.awe.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-10-18"},{"lineNumber":12,"author":{"gitId":"marcuspeh"},"content":"import seedu.awe.model.group.Group;","lastModifiedDate":"2021-10-18"},{"lineNumber":13,"author":{"gitId":"marcuspeh"},"content":"import seedu.awe.model.group.GroupName;","lastModifiedDate":"2021-10-18"},{"lineNumber":14,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":15,"author":{"gitId":"marcuspeh"},"content":"public class ListTransactionSummaryCommandParser implements Parser\u003cListTransactionSummaryCommand\u003e {","lastModifiedDate":"2021-10-18"},{"lineNumber":16,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":17,"author":{"gitId":"marcuspeh"},"content":"    @Override","lastModifiedDate":"2021-10-18"},{"lineNumber":18,"author":{"gitId":"marcuspeh"},"content":"    public ListTransactionSummaryCommand parse(String args) throws ParseException {","lastModifiedDate":"2021-10-18"},{"lineNumber":19,"author":{"gitId":"marcuspeh"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2021-10-18"},{"lineNumber":20,"author":{"gitId":"marcuspeh"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_GROUP_NAME);","lastModifiedDate":"2021-10-18"},{"lineNumber":21,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":22,"author":{"gitId":"marcuspeh"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_GROUP_NAME)","lastModifiedDate":"2021-10-18"},{"lineNumber":23,"author":{"gitId":"marcuspeh"},"content":"                || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2021-10-18"},{"lineNumber":24,"author":{"gitId":"marcuspeh"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2021-10-18"},{"lineNumber":25,"author":{"gitId":"chrus-chong"},"content":"                    MESSAGE_LISTTRANSACTIONSUMMARYCOMMAND_USAGE));","lastModifiedDate":"2021-10-25"},{"lineNumber":26,"author":{"gitId":"marcuspeh"},"content":"        }","lastModifiedDate":"2021-10-18"},{"lineNumber":27,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":28,"author":{"gitId":"marcuspeh"},"content":"        GroupName groupName \u003d ParserUtil.parseGroupName(argMultimap.getValue(PREFIX_GROUP_NAME).get());","lastModifiedDate":"2021-10-18"},{"lineNumber":29,"author":{"gitId":"marcuspeh"},"content":"        Group group \u003d new Group(groupName, new ArrayList\u003c\u003e());","lastModifiedDate":"2021-10-18"},{"lineNumber":30,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":31,"author":{"gitId":"marcuspeh"},"content":"        return new ListTransactionSummaryCommand(group);","lastModifiedDate":"2021-10-18"},{"lineNumber":32,"author":{"gitId":"marcuspeh"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":33,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":34,"author":{"gitId":"marcuspeh"},"content":"    /**","lastModifiedDate":"2021-10-18"},{"lineNumber":35,"author":{"gitId":"marcuspeh"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2021-10-18"},{"lineNumber":36,"author":{"gitId":"marcuspeh"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2021-10-18"},{"lineNumber":37,"author":{"gitId":"marcuspeh"},"content":"     */","lastModifiedDate":"2021-10-18"},{"lineNumber":38,"author":{"gitId":"marcuspeh"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2021-10-18"},{"lineNumber":39,"author":{"gitId":"marcuspeh"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2021-10-18"},{"lineNumber":40,"author":{"gitId":"marcuspeh"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":41,"author":{"gitId":"marcuspeh"},"content":"}","lastModifiedDate":"2021-10-18"}],"authorContributionMap":{"marcuspeh":39,"chrus-chong":2}},{"path":"src/main/java/seedu/awe/logic/parser/Parser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ramapriyan912001"},"content":"package seedu.awe.logic.parser;","lastModifiedDate":"2021-10-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":3,"author":{"gitId":"ramapriyan912001"},"content":"import seedu.awe.logic.commands.Command;","lastModifiedDate":"2021-10-05"},{"lineNumber":4,"author":{"gitId":"ramapriyan912001"},"content":"import seedu.awe.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-10-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-07-06"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Represents a Parser that is able to parse user input into a {@code Command} of type {@code T}.","lastModifiedDate":"2017-07-06"},{"lineNumber":8,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-07-06"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public interface Parser\u003cT extends Command\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-06"},{"lineNumber":12,"author":{"gitId":"-"},"content":"     * Parses {@code userInput} into a command and returns it.","lastModifiedDate":"2017-07-06"},{"lineNumber":13,"author":{"gitId":"-"},"content":"     * @throws ParseException if {@code userInput} does not conform the expected format","lastModifiedDate":"2017-07-06"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-06"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    T parse(String userInput) throws ParseException;","lastModifiedDate":"2021-10-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-07-06"}],"authorContributionMap":{"ramapriyan912001":3,"-":13}},{"path":"src/main/java/seedu/awe/logic/parser/ParserUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ramapriyan912001"},"content":"package seedu.awe.logic.parser;","lastModifiedDate":"2021-10-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"chrus-chong"},"content":"import static seedu.awe.commons.core.Messages.MESSAGE_CREATEGROUPCOMMAND_EMPTY_GROUP;","lastModifiedDate":"2021-10-25"},{"lineNumber":5,"author":{"gitId":"chrus-chong"},"content":"import static seedu.awe.commons.core.Messages.MESSAGE_CREATEGROUPCOMMAND_INVALID_NAMES;","lastModifiedDate":"2021-10-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":7,"author":{"gitId":"ramapriyan912001"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2017-02-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-02-11"},{"lineNumber":10,"author":{"gitId":"ramapriyan912001"},"content":"import java.util.List;","lastModifiedDate":"2021-10-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-02-11"},{"lineNumber":12,"author":{"gitId":"chrus-chong"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2021-10-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":14,"author":{"gitId":"ramapriyan912001"},"content":"import seedu.awe.commons.core.index.Index;","lastModifiedDate":"2021-10-05"},{"lineNumber":15,"author":{"gitId":"ramapriyan912001"},"content":"import seedu.awe.commons.util.StringUtil;","lastModifiedDate":"2021-10-05"},{"lineNumber":16,"author":{"gitId":"ramapriyan912001"},"content":"import seedu.awe.logic.parser.exceptions.EmptyGroupException;","lastModifiedDate":"2021-10-09"},{"lineNumber":17,"author":{"gitId":"ramapriyan912001"},"content":"import seedu.awe.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-10-05"},{"lineNumber":18,"author":{"gitId":"kheekheekhee"},"content":"import seedu.awe.model.expense.Cost;","lastModifiedDate":"2021-10-06"},{"lineNumber":19,"author":{"gitId":"kheekheekhee"},"content":"import seedu.awe.model.expense.Description;","lastModifiedDate":"2021-10-06"},{"lineNumber":20,"author":{"gitId":"ramapriyan912001"},"content":"import seedu.awe.model.group.GroupName;","lastModifiedDate":"2021-10-05"},{"lineNumber":21,"author":{"gitId":"ramapriyan912001"},"content":"import seedu.awe.model.person.Name;","lastModifiedDate":"2021-10-05"},{"lineNumber":22,"author":{"gitId":"ramapriyan912001"},"content":"import seedu.awe.model.person.Phone;","lastModifiedDate":"2021-10-05"},{"lineNumber":23,"author":{"gitId":"ramapriyan912001"},"content":"import seedu.awe.model.tag.Tag;","lastModifiedDate":"2021-10-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11"},{"lineNumber":26,"author":{"gitId":"-"},"content":" * Contains utility methods used for parsing strings in the various *Parser classes.","lastModifiedDate":"2017-07-18"},{"lineNumber":27,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11"},{"lineNumber":28,"author":{"gitId":"-"},"content":"public class ParserUtil {","lastModifiedDate":"2017-02-11"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_INDEX \u003d \"Index is not a non-zero unsigned integer.\";","lastModifiedDate":"2017-06-02"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-11"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Parses {@code oneBasedIndex} into an {@code Index} and returns it. Leading and trailing whitespaces will be","lastModifiedDate":"2017-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * trimmed.","lastModifiedDate":"2017-05-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * @throws ParseException if the specified index is invalid (not non-zero unsigned integer).","lastModifiedDate":"2018-07-10"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-11"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static Index parseIndex(String oneBasedIndex) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        String trimmedIndex \u003d oneBasedIndex.trim();","lastModifiedDate":"2017-05-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        if (!StringUtil.isNonZeroUnsignedInteger(trimmedIndex)) {","lastModifiedDate":"2017-06-02"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            throw new ParseException(MESSAGE_INVALID_INDEX);","lastModifiedDate":"2018-07-10"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-02-11"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        return Index.fromOneBased(Integer.parseInt(trimmedIndex));","lastModifiedDate":"2017-05-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-11"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-29"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     * Parses a {@code String name} into a {@code Name}.","lastModifiedDate":"2017-05-29"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-29"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-29"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code name} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-29"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public static Name parseName(String name) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        requireNonNull(name);","lastModifiedDate":"2017-05-29"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        String trimmedName \u003d name.trim();","lastModifiedDate":"2017-05-29"},{"lineNumber":54,"author":{"gitId":"ramapriyan912001"},"content":"        if (!Name.isValidGroupName(trimmedName)) {","lastModifiedDate":"2021-10-05"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            throw new ParseException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        return new Name(trimmedName);","lastModifiedDate":"2017-05-29"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-29"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-29"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     * Parses a {@code String phone} into a {@code Phone}.","lastModifiedDate":"2017-05-30"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code phone} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public static Phone parsePhone(String phone) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        requireNonNull(phone);","lastModifiedDate":"2017-05-30"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        String trimmedPhone \u003d phone.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        if (!Phone.isValidPhone(trimmedPhone)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":70,"author":{"gitId":"-"},"content":"            throw new ParseException(Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        return new Phone(trimmedPhone);","lastModifiedDate":"2017-05-30"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":75,"author":{"gitId":"ramapriyan912001"},"content":"    /**","lastModifiedDate":"2021-09-26"},{"lineNumber":76,"author":{"gitId":"ramapriyan912001"},"content":"     * Parses a {@code String groupName} into an {@code Group}.","lastModifiedDate":"2021-09-26"},{"lineNumber":77,"author":{"gitId":"ramapriyan912001"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2021-09-26"},{"lineNumber":78,"author":{"gitId":"ramapriyan912001"},"content":"     *","lastModifiedDate":"2021-09-26"},{"lineNumber":79,"author":{"gitId":"Jingwencloud"},"content":"     * @throws ParseException if the given {@code groupName} is invalid.","lastModifiedDate":"2021-10-07"},{"lineNumber":80,"author":{"gitId":"ramapriyan912001"},"content":"     */","lastModifiedDate":"2021-09-26"},{"lineNumber":81,"author":{"gitId":"ramapriyan912001"},"content":"    public static GroupName parseGroupName(String groupName) throws ParseException {","lastModifiedDate":"2021-09-26"},{"lineNumber":82,"author":{"gitId":"ramapriyan912001"},"content":"        requireNonNull(groupName);","lastModifiedDate":"2021-09-26"},{"lineNumber":83,"author":{"gitId":"ramapriyan912001"},"content":"        String trimmedGroupName \u003d groupName.trim();","lastModifiedDate":"2021-09-26"},{"lineNumber":84,"author":{"gitId":"ramapriyan912001"},"content":"        if (!GroupName.isValidGroupName(trimmedGroupName)) {","lastModifiedDate":"2021-10-05"},{"lineNumber":85,"author":{"gitId":"ramapriyan912001"},"content":"            throw new ParseException(GroupName.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-07"},{"lineNumber":86,"author":{"gitId":"ramapriyan912001"},"content":"        }","lastModifiedDate":"2021-09-26"},{"lineNumber":87,"author":{"gitId":"ramapriyan912001"},"content":"        return new GroupName(trimmedGroupName);","lastModifiedDate":"2021-09-26"},{"lineNumber":88,"author":{"gitId":"ramapriyan912001"},"content":"    }","lastModifiedDate":"2021-09-26"},{"lineNumber":89,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":90,"author":{"gitId":"chrus-chong"},"content":"    /**","lastModifiedDate":"2021-10-12"},{"lineNumber":91,"author":{"gitId":"chrus-chong"},"content":"     * Parses {@code Collection\u003cString\u003e groupNames} into a {@code List\u003cGroupName\u003e}.","lastModifiedDate":"2021-10-12"},{"lineNumber":92,"author":{"gitId":"chrus-chong"},"content":"     */","lastModifiedDate":"2021-10-12"},{"lineNumber":93,"author":{"gitId":"chrus-chong"},"content":"    public static List\u003cGroupName\u003e parseGroupNames(Collection\u003cString\u003e groupNames) throws ParseException {","lastModifiedDate":"2021-10-12"},{"lineNumber":94,"author":{"gitId":"chrus-chong"},"content":"        requireNonNull(groupNames);","lastModifiedDate":"2021-10-12"},{"lineNumber":95,"author":{"gitId":"chrus-chong"},"content":"        final List\u003cGroupName\u003e groupNamesList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-12"},{"lineNumber":96,"author":{"gitId":"chrus-chong"},"content":"        for (String groupName : groupNames) {","lastModifiedDate":"2021-10-12"},{"lineNumber":97,"author":{"gitId":"chrus-chong"},"content":"            groupNamesList.add(parseGroupName(groupName));","lastModifiedDate":"2021-10-12"},{"lineNumber":98,"author":{"gitId":"chrus-chong"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":99,"author":{"gitId":"chrus-chong"},"content":"        return groupNamesList;","lastModifiedDate":"2021-10-12"},{"lineNumber":100,"author":{"gitId":"chrus-chong"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":101,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     * Parses a {@code String tag} into a {@code Tag}.","lastModifiedDate":"2017-05-30"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code tag} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":107,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    public static Tag parseTag(String tag) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        requireNonNull(tag);","lastModifiedDate":"2017-05-30"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        String trimmedTag \u003d tag.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        if (!Tag.isValidTagName(trimmedTag)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":112,"author":{"gitId":"-"},"content":"            throw new ParseException(Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        return new Tag(trimmedTag);","lastModifiedDate":"2017-05-30"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-11"},{"lineNumber":118,"author":{"gitId":"-"},"content":"     * Parses {@code Collection\u003cString\u003e tags} into a {@code Set\u003cTag\u003e}.","lastModifiedDate":"2017-03-07"},{"lineNumber":119,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-11"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    public static Set\u003cTag\u003e parseTags(Collection\u003cString\u003e tags) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        requireNonNull(tags);","lastModifiedDate":"2017-05-15"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        final Set\u003cTag\u003e tagSet \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2017-02-11"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        for (String tagName : tags) {","lastModifiedDate":"2017-02-11"},{"lineNumber":124,"author":{"gitId":"-"},"content":"            tagSet.add(parseTag(tagName));","lastModifiedDate":"2017-05-30"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-02-11"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        return tagSet;","lastModifiedDate":"2017-03-07"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-11"},{"lineNumber":128,"author":{"gitId":"kheekheekhee"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":129,"author":{"gitId":"ramapriyan912001"},"content":"    /**","lastModifiedDate":"2021-10-09"},{"lineNumber":130,"author":{"gitId":"ramapriyan912001"},"content":"     * Parses {@code Collection\u003cString\u003e names} into a {@code List\u003cName\u003e}.","lastModifiedDate":"2021-10-09"},{"lineNumber":131,"author":{"gitId":"kheekheekhee"},"content":"     * @param names Collection of strings that represent names.","lastModifiedDate":"2021-10-12"},{"lineNumber":132,"author":{"gitId":"ramapriyan912001"},"content":"     * @return List of names","lastModifiedDate":"2021-10-09"},{"lineNumber":133,"author":{"gitId":"ramapriyan912001"},"content":"     */","lastModifiedDate":"2021-10-09"},{"lineNumber":134,"author":{"gitId":"marcuspeh"},"content":"    public static List\u003cName\u003e parseMemberNames(Collection\u003cString\u003e names) throws EmptyGroupException {","lastModifiedDate":"2021-10-20"},{"lineNumber":135,"author":{"gitId":"ramapriyan912001"},"content":"        requireNonNull(names);","lastModifiedDate":"2021-10-09"},{"lineNumber":136,"author":{"gitId":"ramapriyan912001"},"content":"        final Set\u003cName\u003e memberNameSet \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2021-10-09"},{"lineNumber":137,"author":{"gitId":"ramapriyan912001"},"content":"        final List\u003cName\u003e memberNameList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-09"},{"lineNumber":138,"author":{"gitId":"ramapriyan912001"},"content":"        boolean isValid \u003d true;","lastModifiedDate":"2021-10-09"},{"lineNumber":139,"author":{"gitId":"ramapriyan912001"},"content":"        int invalidCount \u003d 0;","lastModifiedDate":"2021-10-09"},{"lineNumber":140,"author":{"gitId":"ramapriyan912001"},"content":"        for (String personName : names) {","lastModifiedDate":"2021-10-09"},{"lineNumber":141,"author":{"gitId":"ramapriyan912001"},"content":"            try {","lastModifiedDate":"2021-10-09"},{"lineNumber":142,"author":{"gitId":"ramapriyan912001"},"content":"                new Name(personName);","lastModifiedDate":"2021-10-09"},{"lineNumber":143,"author":{"gitId":"ramapriyan912001"},"content":"            } catch (IllegalArgumentException err) {","lastModifiedDate":"2021-10-09"},{"lineNumber":144,"author":{"gitId":"ramapriyan912001"},"content":"                invalidCount++;","lastModifiedDate":"2021-10-09"},{"lineNumber":145,"author":{"gitId":"ramapriyan912001"},"content":"                isValid \u003d false;","lastModifiedDate":"2021-10-09"},{"lineNumber":146,"author":{"gitId":"ramapriyan912001"},"content":"            }","lastModifiedDate":"2021-10-09"},{"lineNumber":147,"author":{"gitId":"ramapriyan912001"},"content":"            if (isValid) {","lastModifiedDate":"2021-10-09"},{"lineNumber":148,"author":{"gitId":"ramapriyan912001"},"content":"                memberNameSet.add(new Name(personName));","lastModifiedDate":"2021-10-09"},{"lineNumber":149,"author":{"gitId":"ramapriyan912001"},"content":"            }","lastModifiedDate":"2021-10-09"},{"lineNumber":150,"author":{"gitId":"ramapriyan912001"},"content":"            isValid \u003d true;","lastModifiedDate":"2021-10-09"},{"lineNumber":151,"author":{"gitId":"ramapriyan912001"},"content":"        }","lastModifiedDate":"2021-10-09"},{"lineNumber":152,"author":{"gitId":"ramapriyan912001"},"content":"        if (invalidCount \u003d\u003d names.size()) {","lastModifiedDate":"2021-10-09"},{"lineNumber":153,"author":{"gitId":"chrus-chong"},"content":"            throw new EmptyGroupException(","lastModifiedDate":"2021-10-25"},{"lineNumber":154,"author":{"gitId":"chrus-chong"},"content":"                    String.format(MESSAGE_CREATEGROUPCOMMAND_EMPTY_GROUP,","lastModifiedDate":"2021-10-25"},{"lineNumber":155,"author":{"gitId":"chrus-chong"},"content":"                            MESSAGE_CREATEGROUPCOMMAND_INVALID_NAMES,","lastModifiedDate":"2021-10-25"},{"lineNumber":156,"author":{"gitId":"chrus-chong"},"content":"                            MESSAGE_CREATEGROUPCOMMAND_INVALID_NAMES));","lastModifiedDate":"2021-10-25"},{"lineNumber":157,"author":{"gitId":"ramapriyan912001"},"content":"        }","lastModifiedDate":"2021-10-09"},{"lineNumber":158,"author":{"gitId":"ramapriyan912001"},"content":"        memberNameList.addAll(memberNameSet);","lastModifiedDate":"2021-10-09"},{"lineNumber":159,"author":{"gitId":"ramapriyan912001"},"content":"        return memberNameList;","lastModifiedDate":"2021-10-09"},{"lineNumber":160,"author":{"gitId":"ramapriyan912001"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":161,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":162,"author":{"gitId":"kheekheekhee"},"content":"    /**","lastModifiedDate":"2021-10-11"},{"lineNumber":163,"author":{"gitId":"kheekheekhee"},"content":"     * Parses {@code Collection\u003cString\u003e names} into a {@code List\u003cName\u003e}.","lastModifiedDate":"2021-10-11"},{"lineNumber":164,"author":{"gitId":"kheekheekhee"},"content":"     */","lastModifiedDate":"2021-10-11"},{"lineNumber":165,"author":{"gitId":"kheekheekhee"},"content":"    public static List\u003cName\u003e parseNames(Collection\u003cString\u003e names) throws ParseException {","lastModifiedDate":"2021-10-11"},{"lineNumber":166,"author":{"gitId":"kheekheekhee"},"content":"        requireNonNull(names);","lastModifiedDate":"2021-10-11"},{"lineNumber":167,"author":{"gitId":"kheekheekhee"},"content":"        final ArrayList\u003cName\u003e nameList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-11"},{"lineNumber":168,"author":{"gitId":"kheekheekhee"},"content":"        for (String name : names) {","lastModifiedDate":"2021-10-11"},{"lineNumber":169,"author":{"gitId":"kheekheekhee"},"content":"            nameList.add(parseName(name));","lastModifiedDate":"2021-10-11"},{"lineNumber":170,"author":{"gitId":"kheekheekhee"},"content":"        }","lastModifiedDate":"2021-10-11"},{"lineNumber":171,"author":{"gitId":"kheekheekhee"},"content":"        return nameList;","lastModifiedDate":"2021-10-11"},{"lineNumber":172,"author":{"gitId":"kheekheekhee"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":173,"author":{"gitId":"kheekheekhee"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":174,"author":{"gitId":"kheekheekhee"},"content":"    /**","lastModifiedDate":"2021-10-06"},{"lineNumber":175,"author":{"gitId":"kheekheekhee"},"content":"     * Parses a {@code String cost} into a {@code Cost}.","lastModifiedDate":"2021-10-06"},{"lineNumber":176,"author":{"gitId":"kheekheekhee"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2021-10-06"},{"lineNumber":177,"author":{"gitId":"kheekheekhee"},"content":"     *","lastModifiedDate":"2021-10-06"},{"lineNumber":178,"author":{"gitId":"kheekheekhee"},"content":"     * @throws ParseException if the given {@code email} is invalid.","lastModifiedDate":"2021-10-06"},{"lineNumber":179,"author":{"gitId":"kheekheekhee"},"content":"     */","lastModifiedDate":"2021-10-06"},{"lineNumber":180,"author":{"gitId":"kheekheekhee"},"content":"    public static Cost parseCost(String cost) throws ParseException {","lastModifiedDate":"2021-10-06"},{"lineNumber":181,"author":{"gitId":"kheekheekhee"},"content":"        requireNonNull(cost);","lastModifiedDate":"2021-10-06"},{"lineNumber":182,"author":{"gitId":"kheekheekhee"},"content":"        String trimmedCost \u003d cost.trim();","lastModifiedDate":"2021-10-06"},{"lineNumber":183,"author":{"gitId":"kheekheekhee"},"content":"        if (!Cost.isValidCost(trimmedCost)) {","lastModifiedDate":"2021-10-06"},{"lineNumber":184,"author":{"gitId":"kheekheekhee"},"content":"            throw new ParseException(Cost.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-11"},{"lineNumber":185,"author":{"gitId":"kheekheekhee"},"content":"        }","lastModifiedDate":"2021-10-06"},{"lineNumber":186,"author":{"gitId":"kheekheekhee"},"content":"        return new Cost(trimmedCost);","lastModifiedDate":"2021-10-06"},{"lineNumber":187,"author":{"gitId":"kheekheekhee"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":188,"author":{"gitId":"kheekheekhee"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":189,"author":{"gitId":"kheekheekhee"},"content":"    /**","lastModifiedDate":"2021-10-11"},{"lineNumber":190,"author":{"gitId":"kheekheekhee"},"content":"     * Parses {@code Collection\u003cString\u003e costs} into a {@code List\u003cCost\u003e}.","lastModifiedDate":"2021-10-11"},{"lineNumber":191,"author":{"gitId":"kheekheekhee"},"content":"     */","lastModifiedDate":"2021-10-11"},{"lineNumber":192,"author":{"gitId":"kheekheekhee"},"content":"    public static List\u003cCost\u003e parseCosts(Collection\u003cString\u003e costs) throws ParseException {","lastModifiedDate":"2021-10-11"},{"lineNumber":193,"author":{"gitId":"kheekheekhee"},"content":"        requireNonNull(costs);","lastModifiedDate":"2021-10-11"},{"lineNumber":194,"author":{"gitId":"kheekheekhee"},"content":"        final ArrayList\u003cCost\u003e costList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-11"},{"lineNumber":195,"author":{"gitId":"kheekheekhee"},"content":"        for (String cost : costs) {","lastModifiedDate":"2021-10-11"},{"lineNumber":196,"author":{"gitId":"kheekheekhee"},"content":"            costList.add(parseCost(cost));","lastModifiedDate":"2021-10-11"},{"lineNumber":197,"author":{"gitId":"kheekheekhee"},"content":"        }","lastModifiedDate":"2021-10-11"},{"lineNumber":198,"author":{"gitId":"kheekheekhee"},"content":"        return costList;","lastModifiedDate":"2021-10-11"},{"lineNumber":199,"author":{"gitId":"kheekheekhee"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":200,"author":{"gitId":"kheekheekhee"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":201,"author":{"gitId":"kheekheekhee"},"content":"    /**","lastModifiedDate":"2021-10-06"},{"lineNumber":202,"author":{"gitId":"kheekheekhee"},"content":"     * Parses a {@code String description} into a {@code Description}.","lastModifiedDate":"2021-10-06"},{"lineNumber":203,"author":{"gitId":"kheekheekhee"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2021-10-06"},{"lineNumber":204,"author":{"gitId":"kheekheekhee"},"content":"     *","lastModifiedDate":"2021-10-06"},{"lineNumber":205,"author":{"gitId":"kheekheekhee"},"content":"     * @throws ParseException if the given {@code email} is invalid.","lastModifiedDate":"2021-10-06"},{"lineNumber":206,"author":{"gitId":"kheekheekhee"},"content":"     */","lastModifiedDate":"2021-10-06"},{"lineNumber":207,"author":{"gitId":"kheekheekhee"},"content":"    public static Description parseDescription(String description) throws ParseException {","lastModifiedDate":"2021-10-06"},{"lineNumber":208,"author":{"gitId":"kheekheekhee"},"content":"        requireNonNull(description);","lastModifiedDate":"2021-10-06"},{"lineNumber":209,"author":{"gitId":"kheekheekhee"},"content":"        String trimmedDescription \u003d description.trim();","lastModifiedDate":"2021-10-06"},{"lineNumber":210,"author":{"gitId":"kheekheekhee"},"content":"        if (!Description.isValidDescription(trimmedDescription)) {","lastModifiedDate":"2021-10-06"},{"lineNumber":211,"author":{"gitId":"kheekheekhee"},"content":"            throw new ParseException(Description.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-11"},{"lineNumber":212,"author":{"gitId":"kheekheekhee"},"content":"        }","lastModifiedDate":"2021-10-06"},{"lineNumber":213,"author":{"gitId":"kheekheekhee"},"content":"        return new Description(trimmedDescription);","lastModifiedDate":"2021-10-06"},{"lineNumber":214,"author":{"gitId":"kheekheekhee"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":215,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":216,"author":{"gitId":"chrus-chong"},"content":"    /**","lastModifiedDate":"2021-10-11"},{"lineNumber":217,"author":{"gitId":"chrus-chong"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2021-10-11"},{"lineNumber":218,"author":{"gitId":"chrus-chong"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2021-10-11"},{"lineNumber":219,"author":{"gitId":"chrus-chong"},"content":"     */","lastModifiedDate":"2021-10-11"},{"lineNumber":220,"author":{"gitId":"chrus-chong"},"content":"    public static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2021-10-11"},{"lineNumber":221,"author":{"gitId":"chrus-chong"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2021-10-11"},{"lineNumber":222,"author":{"gitId":"chrus-chong"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":223,"author":{"gitId":"kheekheekhee"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":224,"author":{"gitId":"kheekheekhee"},"content":"    /**","lastModifiedDate":"2021-10-11"},{"lineNumber":225,"author":{"gitId":"kheekheekhee"},"content":"     * Parses a collection of {@code String name} into a list of {@code Name}.","lastModifiedDate":"2021-10-11"},{"lineNumber":226,"author":{"gitId":"kheekheekhee"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2021-10-11"},{"lineNumber":227,"author":{"gitId":"kheekheekhee"},"content":"     *","lastModifiedDate":"2021-10-11"},{"lineNumber":228,"author":{"gitId":"kheekheekhee"},"content":"     * @throws ParseException if the given {@code name} is invalid.","lastModifiedDate":"2021-10-11"},{"lineNumber":229,"author":{"gitId":"kheekheekhee"},"content":"     */","lastModifiedDate":"2021-10-11"},{"lineNumber":230,"author":{"gitId":"kheekheekhee"},"content":"    public static List\u003cName\u003e parseExcluded(Collection\u003cString\u003e toExclude) throws ParseException {","lastModifiedDate":"2021-10-11"},{"lineNumber":231,"author":{"gitId":"kheekheekhee"},"content":"        requireNonNull(toExclude);","lastModifiedDate":"2021-10-11"},{"lineNumber":232,"author":{"gitId":"kheekheekhee"},"content":"        final ArrayList\u003cName\u003e excludedList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-11"},{"lineNumber":233,"author":{"gitId":"kheekheekhee"},"content":"        for (String excludedName : toExclude) {","lastModifiedDate":"2021-10-11"},{"lineNumber":234,"author":{"gitId":"kheekheekhee"},"content":"            excludedList.add(parseName(excludedName));","lastModifiedDate":"2021-10-11"},{"lineNumber":235,"author":{"gitId":"kheekheekhee"},"content":"        }","lastModifiedDate":"2021-10-11"},{"lineNumber":236,"author":{"gitId":"kheekheekhee"},"content":"        return excludedList;","lastModifiedDate":"2021-10-11"},{"lineNumber":237,"author":{"gitId":"kheekheekhee"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":238,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-11"}],"authorContributionMap":{"Jingwencloud":1,"marcuspeh":1,"chrus-chong":27,"kheekheekhee":72,"ramapriyan912001":53,"-":84}},{"path":"src/main/java/seedu/awe/logic/parser/Prefix.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ramapriyan912001"},"content":"package seedu.awe.logic.parser;","lastModifiedDate":"2021-10-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-03-11"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * A prefix that marks the beginning of an argument in an arguments string.","lastModifiedDate":"2017-03-11"},{"lineNumber":5,"author":{"gitId":"-"},"content":" * E.g. \u0027t/\u0027 in \u0027add James t/ friend\u0027.","lastModifiedDate":"2017-03-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-03-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"public class Prefix {","lastModifiedDate":"2017-03-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    private final String prefix;","lastModifiedDate":"2017-03-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public Prefix(String prefix) {","lastModifiedDate":"2017-03-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"        this.prefix \u003d prefix;","lastModifiedDate":"2017-03-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public String getPrefix() {","lastModifiedDate":"2017-03-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        return prefix;","lastModifiedDate":"2017-03-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2017-05-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        return getPrefix();","lastModifiedDate":"2017-05-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-03-11"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2017-03-11"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        return prefix \u003d\u003d null ? 0 : prefix.hashCode();","lastModifiedDate":"2017-03-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-03-11"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2017-03-11"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        if (!(obj instanceof Prefix)) {","lastModifiedDate":"2017-03-11"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-03-11"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-11"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        if (obj \u003d\u003d this) {","lastModifiedDate":"2017-03-11"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-03-11"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-11"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        Prefix otherPrefix \u003d (Prefix) obj;","lastModifiedDate":"2017-03-11"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        return otherPrefix.getPrefix().equals(getPrefix());","lastModifiedDate":"2017-03-11"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":39,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-11"}],"authorContributionMap":{"ramapriyan912001":1,"-":38}},{"path":"src/main/java/seedu/awe/logic/parser/exceptions/EmptyGroupException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ramapriyan912001"},"content":"package seedu.awe.logic.parser.exceptions;","lastModifiedDate":"2021-10-05"},{"lineNumber":2,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":3,"author":{"gitId":"ramapriyan912001"},"content":"public class EmptyGroupException extends RuntimeException {","lastModifiedDate":"2021-10-09"},{"lineNumber":4,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":5,"author":{"gitId":"ramapriyan912001"},"content":"    public EmptyGroupException(String message) {","lastModifiedDate":"2021-10-03"},{"lineNumber":6,"author":{"gitId":"ramapriyan912001"},"content":"        super(message);","lastModifiedDate":"2021-10-03"},{"lineNumber":7,"author":{"gitId":"ramapriyan912001"},"content":"    }","lastModifiedDate":"2021-10-03"},{"lineNumber":8,"author":{"gitId":"ramapriyan912001"},"content":"}","lastModifiedDate":"2021-10-03"}],"authorContributionMap":{"ramapriyan912001":8}},{"path":"src/main/java/seedu/awe/logic/parser/exceptions/ParseException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ramapriyan912001"},"content":"package seedu.awe.logic.parser.exceptions;","lastModifiedDate":"2021-10-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":3,"author":{"gitId":"ramapriyan912001"},"content":"import seedu.awe.commons.exceptions.IllegalValueException;","lastModifiedDate":"2021-10-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-03-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Represents a parse error encountered by a parser.","lastModifiedDate":"2017-03-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-03-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class ParseException extends IllegalValueException {","lastModifiedDate":"2017-03-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public ParseException(String message) {","lastModifiedDate":"2017-03-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"        super(message);","lastModifiedDate":"2017-03-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public ParseException(String message, Throwable cause) {","lastModifiedDate":"2017-03-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        super(message, cause);","lastModifiedDate":"2017-03-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-11"}],"authorContributionMap":{"ramapriyan912001":2,"-":15}},{"path":"src/main/java/seedu/awe/model/AddressBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ramapriyan912001"},"content":"package seedu.awe.model;","lastModifiedDate":"2021-10-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"marcuspeh"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-18"},{"lineNumber":6,"author":{"gitId":"marcuspeh"},"content":"import java.util.HashMap;","lastModifiedDate":"2021-10-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"marcuspeh"},"content":"import java.util.Map;","lastModifiedDate":"2021-10-18"},{"lineNumber":9,"author":{"gitId":"Jingwencloud"},"content":"import java.util.Optional;","lastModifiedDate":"2021-10-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-01-19"},{"lineNumber":12,"author":{"gitId":"marcuspeh"},"content":"import seedu.awe.model.expense.Cost;","lastModifiedDate":"2021-10-18"},{"lineNumber":13,"author":{"gitId":"kheekheekhee"},"content":"import seedu.awe.model.expense.Expense;","lastModifiedDate":"2021-10-06"},{"lineNumber":14,"author":{"gitId":"kheekheekhee"},"content":"import seedu.awe.model.expense.ExpenseList;","lastModifiedDate":"2021-10-12"},{"lineNumber":15,"author":{"gitId":"ramapriyan912001"},"content":"import seedu.awe.model.group.Group;","lastModifiedDate":"2021-10-05"},{"lineNumber":16,"author":{"gitId":"ramapriyan912001"},"content":"import seedu.awe.model.group.GroupName;","lastModifiedDate":"2021-10-05"},{"lineNumber":17,"author":{"gitId":"ramapriyan912001"},"content":"import seedu.awe.model.group.UniqueGroupList;","lastModifiedDate":"2021-10-05"},{"lineNumber":18,"author":{"gitId":"ramapriyan912001"},"content":"import seedu.awe.model.payment.Payment;","lastModifiedDate":"2021-10-17"},{"lineNumber":19,"author":{"gitId":"ramapriyan912001"},"content":"import seedu.awe.model.payment.PaymentList;","lastModifiedDate":"2021-10-17"},{"lineNumber":20,"author":{"gitId":"ramapriyan912001"},"content":"import seedu.awe.model.person.Person;","lastModifiedDate":"2021-10-05"},{"lineNumber":21,"author":{"gitId":"ramapriyan912001"},"content":"import seedu.awe.model.person.UniquePersonList;","lastModifiedDate":"2021-10-05"},{"lineNumber":22,"author":{"gitId":"marcuspeh"},"content":"import seedu.awe.model.transactionsummary.TransactionSummary;","lastModifiedDate":"2021-10-18"},{"lineNumber":23,"author":{"gitId":"marcuspeh"},"content":"import seedu.awe.model.transactionsummary.TransactionSummaryList;","lastModifiedDate":"2021-10-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"ramapriyan912001"},"content":" * Wraps all data at the awe-book level","lastModifiedDate":"2021-10-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":" * Duplicates are not allowed (by .isSamePerson comparison)","lastModifiedDate":"2018-04-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"public class AddressBook implements ReadOnlyAddressBook {","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private final UniquePersonList persons;","lastModifiedDate":"2016-08-26"},{"lineNumber":32,"author":{"gitId":"Jingwencloud"},"content":"    private final UniqueGroupList groups;","lastModifiedDate":"2021-10-07"},{"lineNumber":33,"author":{"gitId":"kheekheekhee"},"content":"    private final ExpenseList expenses;","lastModifiedDate":"2021-10-12"},{"lineNumber":34,"author":{"gitId":"ramapriyan912001"},"content":"    private final PaymentList payments;","lastModifiedDate":"2021-10-17"},{"lineNumber":35,"author":{"gitId":"marcuspeh"},"content":"    private final TransactionSummaryList transactionSummary;","lastModifiedDate":"2021-10-18"},{"lineNumber":36,"author":{"gitId":"Jingwencloud"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2016-10-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     * The \u0027unusual\u0027 code block below is a non-static initialization block, sometimes used to avoid duplication","lastModifiedDate":"2019-05-11"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * between constructors. See https://docs.oracle.com/javase/tutorial/java/javaOO/initial.html","lastModifiedDate":"2016-10-19"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-19"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * Note that non-static init blocks are not recommended to use. There are other ways to avoid duplication","lastModifiedDate":"2016-10-19"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     *   among constructors.","lastModifiedDate":"2016-10-19"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-19"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    {","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        persons \u003d new UniquePersonList();","lastModifiedDate":"2016-08-26"},{"lineNumber":46,"author":{"gitId":"ramapriyan912001"},"content":"        groups \u003d new UniqueGroupList();","lastModifiedDate":"2021-09-26"},{"lineNumber":47,"author":{"gitId":"kheekheekhee"},"content":"        expenses \u003d new ExpenseList();","lastModifiedDate":"2021-10-12"},{"lineNumber":48,"author":{"gitId":"ramapriyan912001"},"content":"        payments \u003d new PaymentList();","lastModifiedDate":"2021-10-17"},{"lineNumber":49,"author":{"gitId":"marcuspeh"},"content":"        transactionSummary \u003d new TransactionSummaryList();","lastModifiedDate":"2021-10-18"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public AddressBook() {}","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * Creates an AddressBook using the Persons in the {@code toBeCopied}","lastModifiedDate":"2018-03-29"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public AddressBook(ReadOnlyAddressBook toBeCopied) {","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        this();","lastModifiedDate":"2016-12-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        resetData(toBeCopied);","lastModifiedDate":"2016-12-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    //// list overwrite operations","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     * Replaces the contents of the person list with {@code persons}.","lastModifiedDate":"2018-08-07"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     * {@code persons} must not contain duplicate persons.","lastModifiedDate":"2018-08-07"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public void setPersons(List\u003cPerson\u003e persons) {","lastModifiedDate":"2018-08-07"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        this.persons.setPersons(persons);","lastModifiedDate":"2016-10-19"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"ramapriyan912001"},"content":"    /**","lastModifiedDate":"2021-09-26"},{"lineNumber":73,"author":{"gitId":"ramapriyan912001"},"content":"     * Replaces the contents of the person list with {@code persons}.","lastModifiedDate":"2021-09-26"},{"lineNumber":74,"author":{"gitId":"ramapriyan912001"},"content":"     * {@code persons} must not contain duplicate persons.","lastModifiedDate":"2021-09-26"},{"lineNumber":75,"author":{"gitId":"ramapriyan912001"},"content":"     */","lastModifiedDate":"2021-09-26"},{"lineNumber":76,"author":{"gitId":"ramapriyan912001"},"content":"    public void setGroups(List\u003cGroup\u003e groups) {","lastModifiedDate":"2021-09-26"},{"lineNumber":77,"author":{"gitId":"ramapriyan912001"},"content":"        this.groups.setGroups(groups);","lastModifiedDate":"2021-09-26"},{"lineNumber":78,"author":{"gitId":"ramapriyan912001"},"content":"    }","lastModifiedDate":"2021-09-26"},{"lineNumber":79,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":80,"author":{"gitId":"kheekheekhee"},"content":"    public void setGroup(Group group, Group newGroup) {","lastModifiedDate":"2021-10-07"},{"lineNumber":81,"author":{"gitId":"kheekheekhee"},"content":"        groups.setGroup(group, newGroup);","lastModifiedDate":"2021-10-06"},{"lineNumber":82,"author":{"gitId":"kheekheekhee"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":83,"author":{"gitId":"kheekheekhee"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":84,"author":{"gitId":"Jingwencloud"},"content":"    /**","lastModifiedDate":"2021-10-07"},{"lineNumber":85,"author":{"gitId":"Jingwencloud"},"content":"     * Replaces the contents of the expenses list with the given group\u0027s","lastModifiedDate":"2021-10-07"},{"lineNumber":86,"author":{"gitId":"Jingwencloud"},"content":"     * expenses.","lastModifiedDate":"2021-10-07"},{"lineNumber":87,"author":{"gitId":"Jingwencloud"},"content":"     *","lastModifiedDate":"2021-10-07"},{"lineNumber":88,"author":{"gitId":"kheekheekhee"},"content":"     * @param group Group that contains all new expenses.","lastModifiedDate":"2021-10-12"},{"lineNumber":89,"author":{"gitId":"Jingwencloud"},"content":"     */","lastModifiedDate":"2021-10-07"},{"lineNumber":90,"author":{"gitId":"Jingwencloud"},"content":"    public void setExpenses(Group group) {","lastModifiedDate":"2021-10-07"},{"lineNumber":91,"author":{"gitId":"Jingwencloud"},"content":"        expenses.clear();","lastModifiedDate":"2021-10-08"},{"lineNumber":92,"author":{"gitId":"Jingwencloud"},"content":"        expenses.addAll(group.getExpenses());","lastModifiedDate":"2021-10-07"},{"lineNumber":93,"author":{"gitId":"Jingwencloud"},"content":"        expenses.setGroup(group);","lastModifiedDate":"2021-10-13"},{"lineNumber":94,"author":{"gitId":"Jingwencloud"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":95,"author":{"gitId":"Jingwencloud"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":96,"author":{"gitId":"Jingwencloud"},"content":"    public ObservableList\u003cExpense\u003e getExpenseList() {","lastModifiedDate":"2021-10-07"},{"lineNumber":97,"author":{"gitId":"kheekheekhee"},"content":"        return expenses.asUnmodifiableObservableList();","lastModifiedDate":"2021-10-12"},{"lineNumber":98,"author":{"gitId":"Jingwencloud"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":99,"author":{"gitId":"Jingwencloud"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":100,"author":{"gitId":"ramapriyan912001"},"content":"    @Override","lastModifiedDate":"2021-10-25"},{"lineNumber":101,"author":{"gitId":"ramapriyan912001"},"content":"    public Optional\u003cGroup\u003e getGroupFromExpenseList() {","lastModifiedDate":"2021-10-25"},{"lineNumber":102,"author":{"gitId":"ramapriyan912001"},"content":"        return expenses.getGroup();","lastModifiedDate":"2021-10-25"},{"lineNumber":103,"author":{"gitId":"ramapriyan912001"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":104,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":105,"author":{"gitId":"ramapriyan912001"},"content":"    @Override","lastModifiedDate":"2021-10-17"},{"lineNumber":106,"author":{"gitId":"ramapriyan912001"},"content":"    public ObservableList\u003cPayment\u003e getPaymentList() {","lastModifiedDate":"2021-10-17"},{"lineNumber":107,"author":{"gitId":"ramapriyan912001"},"content":"        return payments.asUnmodifiableObservableList();","lastModifiedDate":"2021-10-17"},{"lineNumber":108,"author":{"gitId":"ramapriyan912001"},"content":"    }","lastModifiedDate":"2021-10-17"},{"lineNumber":109,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":110,"author":{"gitId":"Jingwencloud"},"content":"    public UniqueGroupList getGroups() {","lastModifiedDate":"2021-10-07"},{"lineNumber":111,"author":{"gitId":"Jingwencloud"},"content":"        return this.groups;","lastModifiedDate":"2021-10-07"},{"lineNumber":112,"author":{"gitId":"Jingwencloud"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":113,"author":{"gitId":"Jingwencloud"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":114,"author":{"gitId":"Jingwencloud"},"content":"    public UniquePersonList getPersons() {","lastModifiedDate":"2021-10-07"},{"lineNumber":115,"author":{"gitId":"Jingwencloud"},"content":"        return this.persons;","lastModifiedDate":"2021-10-07"},{"lineNumber":116,"author":{"gitId":"kheekheekhee"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":117,"author":{"gitId":"kheekheekhee"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":118,"author":{"gitId":"Jingwencloud"},"content":"    public ObservableList\u003cTransactionSummary\u003e getTransactionSummaryList() {","lastModifiedDate":"2021-10-21"},{"lineNumber":119,"author":{"gitId":"Jingwencloud"},"content":"        return this.transactionSummary.asUnmodifiableObservableList();","lastModifiedDate":"2021-10-21"},{"lineNumber":120,"author":{"gitId":"Jingwencloud"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":121,"author":{"gitId":"Jingwencloud"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":123,"author":{"gitId":"-"},"content":"     * Resets the existing data of this {@code AddressBook} with {@code newData}.","lastModifiedDate":"2017-08-16"},{"lineNumber":124,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    public void resetData(ReadOnlyAddressBook newData) {","lastModifiedDate":"2016-08-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        requireNonNull(newData);","lastModifiedDate":"2017-05-15"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-20"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        setPersons(newData.getPersonList());","lastModifiedDate":"2018-03-29"},{"lineNumber":129,"author":{"gitId":"ramapriyan912001"},"content":"        setGroups(newData.getGroupList());","lastModifiedDate":"2021-09-26"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    //// person-level operations","lastModifiedDate":"2016-08-08"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":135,"author":{"gitId":"ramapriyan912001"},"content":"     * Returns true if a person with the same identity as {@code person} exists in the awe book.","lastModifiedDate":"2021-10-05"},{"lineNumber":136,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-06"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        requireNonNull(person);","lastModifiedDate":"2018-08-06"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        return persons.contains(person);","lastModifiedDate":"2018-08-06"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":143,"author":{"gitId":"ramapriyan912001"},"content":"     * Adds a person to the awe book.","lastModifiedDate":"2021-10-05"},{"lineNumber":144,"author":{"gitId":"ramapriyan912001"},"content":"     * The person must not already exist in the awe book.","lastModifiedDate":"2021-10-05"},{"lineNumber":145,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    public void addPerson(Person p) {","lastModifiedDate":"2018-08-07"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        persons.add(p);","lastModifiedDate":"2018-03-29"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":151,"author":{"gitId":"-"},"content":"     * Replaces the given person {@code target} in the list with {@code editedPerson}.","lastModifiedDate":"2018-01-10"},{"lineNumber":152,"author":{"gitId":"ramapriyan912001"},"content":"     * {@code target} must exist in the awe book.","lastModifiedDate":"2021-10-05"},{"lineNumber":153,"author":{"gitId":"ramapriyan912001"},"content":"     * The person identity of {@code editedPerson} must not be the same as another existing person in the awe book.","lastModifiedDate":"2021-10-05"},{"lineNumber":154,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":155,"author":{"gitId":"-"},"content":"    public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-17"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        requireNonNull(editedPerson);","lastModifiedDate":"2018-01-10"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        persons.setPerson(target, editedPerson);","lastModifiedDate":"2018-03-29"},{"lineNumber":159,"author":{"gitId":"marcuspeh"},"content":"        groups.updatePerson(target, editedPerson);","lastModifiedDate":"2021-10-10"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":163,"author":{"gitId":"-"},"content":"     * Removes {@code key} from this {@code AddressBook}.","lastModifiedDate":"2017-08-16"},{"lineNumber":164,"author":{"gitId":"ramapriyan912001"},"content":"     * {@code key} must exist in the awe book.","lastModifiedDate":"2021-10-05"},{"lineNumber":165,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    public void removePerson(Person key) {","lastModifiedDate":"2018-08-07"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        persons.remove(key);","lastModifiedDate":"2018-02-28"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":170,"author":{"gitId":"-"},"content":"    //// util methods","lastModifiedDate":"2016-08-08"},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":173,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-08"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        return persons.asUnmodifiableObservableList().size() + \" persons\";","lastModifiedDate":"2018-04-05"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        // TODO: refine later","lastModifiedDate":"2016-08-08"},{"lineNumber":176,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":178,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e getPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":180,"author":{"gitId":"-"},"content":"        return persons.asUnmodifiableObservableList();","lastModifiedDate":"2018-04-05"},{"lineNumber":181,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-01"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-01"},{"lineNumber":183,"author":{"gitId":"ramapriyan912001"},"content":"    /**","lastModifiedDate":"2021-10-03"},{"lineNumber":184,"author":{"gitId":"ramapriyan912001"},"content":"     * Adds group to unique group list.","lastModifiedDate":"2021-10-03"},{"lineNumber":185,"author":{"gitId":"ramapriyan912001"},"content":"     * @param group new Group object to be added.","lastModifiedDate":"2021-10-03"},{"lineNumber":186,"author":{"gitId":"ramapriyan912001"},"content":"     */","lastModifiedDate":"2021-10-03"},{"lineNumber":187,"author":{"gitId":"ramapriyan912001"},"content":"    public void addGroup(Group group) {","lastModifiedDate":"2021-10-07"},{"lineNumber":188,"author":{"gitId":"ramapriyan912001"},"content":"        groups.add(group);","lastModifiedDate":"2021-09-26"},{"lineNumber":189,"author":{"gitId":"ramapriyan912001"},"content":"    }","lastModifiedDate":"2021-09-26"},{"lineNumber":190,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":191,"author":{"gitId":"ramapriyan912001"},"content":"    /**","lastModifiedDate":"2021-10-03"},{"lineNumber":192,"author":{"gitId":"ramapriyan912001"},"content":"     * Removes group from unique group list.","lastModifiedDate":"2021-10-03"},{"lineNumber":193,"author":{"gitId":"ramapriyan912001"},"content":"     * @param group new Group object to be removed.","lastModifiedDate":"2021-10-03"},{"lineNumber":194,"author":{"gitId":"ramapriyan912001"},"content":"     */","lastModifiedDate":"2021-10-03"},{"lineNumber":195,"author":{"gitId":"ramapriyan912001"},"content":"    public void removeGroup(Group group) {","lastModifiedDate":"2021-09-26"},{"lineNumber":196,"author":{"gitId":"ramapriyan912001"},"content":"        groups.remove(group);","lastModifiedDate":"2021-09-26"},{"lineNumber":197,"author":{"gitId":"ramapriyan912001"},"content":"    }","lastModifiedDate":"2021-09-26"},{"lineNumber":198,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":199,"author":{"gitId":"ramapriyan912001"},"content":"    /**","lastModifiedDate":"2021-09-26"},{"lineNumber":200,"author":{"gitId":"ramapriyan912001"},"content":"     * Checks that group is present based on group name.","lastModifiedDate":"2021-09-26"},{"lineNumber":201,"author":{"gitId":"ramapriyan912001"},"content":"     * @param group Group object","lastModifiedDate":"2021-09-26"},{"lineNumber":202,"author":{"gitId":"ramapriyan912001"},"content":"     * @return boolean","lastModifiedDate":"2021-09-26"},{"lineNumber":203,"author":{"gitId":"ramapriyan912001"},"content":"     */","lastModifiedDate":"2021-09-26"},{"lineNumber":204,"author":{"gitId":"ramapriyan912001"},"content":"    public boolean hasGroup(Group group) {","lastModifiedDate":"2021-09-26"},{"lineNumber":205,"author":{"gitId":"ramapriyan912001"},"content":"        requireNonNull(group);","lastModifiedDate":"2021-09-26"},{"lineNumber":206,"author":{"gitId":"ramapriyan912001"},"content":"        return groups.contains(group);","lastModifiedDate":"2021-09-26"},{"lineNumber":207,"author":{"gitId":"ramapriyan912001"},"content":"    }","lastModifiedDate":"2021-09-26"},{"lineNumber":208,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":209,"author":{"gitId":"ramapriyan912001"},"content":"    @Override","lastModifiedDate":"2021-09-26"},{"lineNumber":210,"author":{"gitId":"ramapriyan912001"},"content":"    public ObservableList\u003cGroup\u003e getGroupList() {","lastModifiedDate":"2021-09-26"},{"lineNumber":211,"author":{"gitId":"ramapriyan912001"},"content":"        return groups.asUnmodifiableObservableList();","lastModifiedDate":"2021-09-26"},{"lineNumber":212,"author":{"gitId":"ramapriyan912001"},"content":"    }","lastModifiedDate":"2021-09-26"},{"lineNumber":213,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":214,"author":{"gitId":"ramapriyan912001"},"content":"    @Override","lastModifiedDate":"2021-10-04"},{"lineNumber":215,"author":{"gitId":"ramapriyan912001"},"content":"    public Group getGroupByName(GroupName groupName) {","lastModifiedDate":"2021-10-04"},{"lineNumber":216,"author":{"gitId":"ramapriyan912001"},"content":"        requireNonNull(groupName);","lastModifiedDate":"2021-10-04"},{"lineNumber":217,"author":{"gitId":"ramapriyan912001"},"content":"        return groups.getGroupByName(groupName);","lastModifiedDate":"2021-10-04"},{"lineNumber":218,"author":{"gitId":"ramapriyan912001"},"content":"    }","lastModifiedDate":"2021-10-04"},{"lineNumber":219,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":220,"author":{"gitId":"ramapriyan912001"},"content":"    @Override","lastModifiedDate":"2021-10-21"},{"lineNumber":221,"author":{"gitId":"ramapriyan912001"},"content":"    public void setPayments(List\u003cPayment\u003e payments) {","lastModifiedDate":"2021-10-21"},{"lineNumber":222,"author":{"gitId":"ramapriyan912001"},"content":"        this.payments.clear();","lastModifiedDate":"2021-10-21"},{"lineNumber":223,"author":{"gitId":"ramapriyan912001"},"content":"        this.payments.addAll(payments);","lastModifiedDate":"2021-10-21"},{"lineNumber":224,"author":{"gitId":"ramapriyan912001"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":225,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":226,"author":{"gitId":"Jingwencloud"},"content":"    /**","lastModifiedDate":"2021-10-13"},{"lineNumber":227,"author":{"gitId":"Jingwencloud"},"content":"     * Checks if the current expense list in address book","lastModifiedDate":"2021-10-13"},{"lineNumber":228,"author":{"gitId":"Jingwencloud"},"content":"     * belongs to the specified group.","lastModifiedDate":"2021-10-13"},{"lineNumber":229,"author":{"gitId":"Jingwencloud"},"content":"     *","lastModifiedDate":"2021-10-13"},{"lineNumber":230,"author":{"gitId":"Jingwencloud"},"content":"     * @param group The group to check if the expense list belongs to.","lastModifiedDate":"2021-10-13"},{"lineNumber":231,"author":{"gitId":"Jingwencloud"},"content":"     * @return true if the expense list belongs to the group.","lastModifiedDate":"2021-10-13"},{"lineNumber":232,"author":{"gitId":"Jingwencloud"},"content":"     */","lastModifiedDate":"2021-10-13"},{"lineNumber":233,"author":{"gitId":"Jingwencloud"},"content":"    public boolean isCurrentExpenseList(Group group) {","lastModifiedDate":"2021-10-13"},{"lineNumber":234,"author":{"gitId":"Jingwencloud"},"content":"        Optional\u003cGroup\u003e current \u003d expenses.getGroup();","lastModifiedDate":"2021-10-13"},{"lineNumber":235,"author":{"gitId":"Jingwencloud"},"content":"        boolean isCurrentGroup \u003d current.isPresent() \u0026\u0026 current.get().equals(group);","lastModifiedDate":"2021-10-13"},{"lineNumber":236,"author":{"gitId":"Jingwencloud"},"content":"        return isCurrentGroup;","lastModifiedDate":"2021-10-13"},{"lineNumber":237,"author":{"gitId":"Jingwencloud"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":238,"author":{"gitId":"Jingwencloud"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":239,"author":{"gitId":"marcuspeh"},"content":"    public void setTransactionSummary(HashMap\u003cPerson, Cost\u003e summary) {","lastModifiedDate":"2021-10-18"},{"lineNumber":240,"author":{"gitId":"marcuspeh"},"content":"        List\u003cTransactionSummary\u003e toSet \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-18"},{"lineNumber":241,"author":{"gitId":"marcuspeh"},"content":"        for (Map.Entry\u003cPerson, Cost\u003e e: summary.entrySet()) {","lastModifiedDate":"2021-10-18"},{"lineNumber":242,"author":{"gitId":"marcuspeh"},"content":"            toSet.add(new TransactionSummary(e.getKey(), e.getValue()));","lastModifiedDate":"2021-10-18"},{"lineNumber":243,"author":{"gitId":"marcuspeh"},"content":"        }","lastModifiedDate":"2021-10-18"},{"lineNumber":244,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":245,"author":{"gitId":"marcuspeh"},"content":"        this.transactionSummary.set(toSet);","lastModifiedDate":"2021-10-18"},{"lineNumber":246,"author":{"gitId":"marcuspeh"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":247,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":248,"author":{"gitId":"Jingwencloud"},"content":"    /**","lastModifiedDate":"2021-10-13"},{"lineNumber":249,"author":{"gitId":"Jingwencloud"},"content":"     * Adds expense to the current expense list if it belongs to the","lastModifiedDate":"2021-10-13"},{"lineNumber":250,"author":{"gitId":"Jingwencloud"},"content":"     * specified group.","lastModifiedDate":"2021-10-13"},{"lineNumber":251,"author":{"gitId":"Jingwencloud"},"content":"     *","lastModifiedDate":"2021-10-13"},{"lineNumber":252,"author":{"gitId":"Jingwencloud"},"content":"     * @param expense The expense to add.","lastModifiedDate":"2021-10-13"},{"lineNumber":253,"author":{"gitId":"Jingwencloud"},"content":"     * @param group The group which the expense belongs to.","lastModifiedDate":"2021-10-13"},{"lineNumber":254,"author":{"gitId":"Jingwencloud"},"content":"     */","lastModifiedDate":"2021-10-13"},{"lineNumber":255,"author":{"gitId":"Jingwencloud"},"content":"    public void addExpense(Expense expense, Group group) {","lastModifiedDate":"2021-10-13"},{"lineNumber":256,"author":{"gitId":"Jingwencloud"},"content":"        boolean isCurrentGroup \u003d isCurrentExpenseList(group);","lastModifiedDate":"2021-10-13"},{"lineNumber":257,"author":{"gitId":"Jingwencloud"},"content":"        if (isCurrentGroup) {","lastModifiedDate":"2021-10-13"},{"lineNumber":258,"author":{"gitId":"Jingwencloud"},"content":"            expenses.add(expense);","lastModifiedDate":"2021-10-13"},{"lineNumber":259,"author":{"gitId":"Jingwencloud"},"content":"        }","lastModifiedDate":"2021-10-13"},{"lineNumber":260,"author":{"gitId":"Jingwencloud"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":261,"author":{"gitId":"Jingwencloud"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":262,"author":{"gitId":"Jingwencloud"},"content":"    /**","lastModifiedDate":"2021-10-13"},{"lineNumber":263,"author":{"gitId":"Jingwencloud"},"content":"     * Deletes the specified expense in the current list if it belongs to the","lastModifiedDate":"2021-10-13"},{"lineNumber":264,"author":{"gitId":"Jingwencloud"},"content":"     * specified group.","lastModifiedDate":"2021-10-13"},{"lineNumber":265,"author":{"gitId":"Jingwencloud"},"content":"     *","lastModifiedDate":"2021-10-13"},{"lineNumber":266,"author":{"gitId":"Jingwencloud"},"content":"     * @param expense The expense to remove.","lastModifiedDate":"2021-10-13"},{"lineNumber":267,"author":{"gitId":"Jingwencloud"},"content":"     * @param group The group which the expense belongs to.","lastModifiedDate":"2021-10-13"},{"lineNumber":268,"author":{"gitId":"Jingwencloud"},"content":"     */","lastModifiedDate":"2021-10-13"},{"lineNumber":269,"author":{"gitId":"Jingwencloud"},"content":"    public void deleteExpense(Expense expense, Group group) {","lastModifiedDate":"2021-10-13"},{"lineNumber":270,"author":{"gitId":"Jingwencloud"},"content":"        boolean isCurrentGroup \u003d isCurrentExpenseList(group);","lastModifiedDate":"2021-10-13"},{"lineNumber":271,"author":{"gitId":"Jingwencloud"},"content":"        if (isCurrentGroup) {","lastModifiedDate":"2021-10-13"},{"lineNumber":272,"author":{"gitId":"Jingwencloud"},"content":"            expenses.remove(expense);","lastModifiedDate":"2021-10-13"},{"lineNumber":273,"author":{"gitId":"Jingwencloud"},"content":"        }","lastModifiedDate":"2021-10-13"},{"lineNumber":274,"author":{"gitId":"Jingwencloud"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":275,"author":{"gitId":"Jingwencloud"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":276,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":277,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-21"},{"lineNumber":278,"author":{"gitId":"marcuspeh"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2021-10-05"},{"lineNumber":279,"author":{"gitId":"marcuspeh"},"content":"            return true;","lastModifiedDate":"2021-10-05"},{"lineNumber":280,"author":{"gitId":"marcuspeh"},"content":"        }","lastModifiedDate":"2021-10-05"},{"lineNumber":281,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":282,"author":{"gitId":"marcuspeh"},"content":"        if (!(other instanceof AddressBook)) { // instanceof handles nulls","lastModifiedDate":"2021-10-05"},{"lineNumber":283,"author":{"gitId":"marcuspeh"},"content":"            return false;","lastModifiedDate":"2021-10-05"},{"lineNumber":284,"author":{"gitId":"marcuspeh"},"content":"        }","lastModifiedDate":"2021-10-05"},{"lineNumber":285,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":286,"author":{"gitId":"marcuspeh"},"content":"        AddressBook toBeChecked \u003d (AddressBook) other;","lastModifiedDate":"2021-10-05"},{"lineNumber":287,"author":{"gitId":"marcuspeh"},"content":"        return persons.equals(toBeChecked.persons)","lastModifiedDate":"2021-10-05"},{"lineNumber":288,"author":{"gitId":"marcuspeh"},"content":"                \u0026\u0026 groups.equals(toBeChecked.groups);","lastModifiedDate":"2021-10-05"},{"lineNumber":289,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":290,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":291,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":292,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-21"},{"lineNumber":293,"author":{"gitId":"-"},"content":"        return persons.hashCode();","lastModifiedDate":"2018-03-29"},{"lineNumber":294,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":295,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"marcuspeh":29,"Jingwencloud":68,"kheekheekhee":12,"ramapriyan912001":80,"-":106}},{"path":"src/main/java/seedu/awe/model/Model.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ramapriyan912001"},"content":"package seedu.awe.model;","lastModifiedDate":"2021-10-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"marcuspeh"},"content":"import java.util.HashMap;","lastModifiedDate":"2021-10-18"},{"lineNumber":5,"author":{"gitId":"ramapriyan912001"},"content":"import java.util.List;","lastModifiedDate":"2021-10-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":9,"author":{"gitId":"ramapriyan912001"},"content":"import seedu.awe.commons.core.GuiSettings;","lastModifiedDate":"2021-10-05"},{"lineNumber":10,"author":{"gitId":"ramapriyan912001"},"content":"import seedu.awe.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-10-25"},{"lineNumber":11,"author":{"gitId":"marcuspeh"},"content":"import seedu.awe.model.expense.Cost;","lastModifiedDate":"2021-10-18"},{"lineNumber":12,"author":{"gitId":"kheekheekhee"},"content":"import seedu.awe.model.expense.Expense;","lastModifiedDate":"2021-10-06"},{"lineNumber":13,"author":{"gitId":"ramapriyan912001"},"content":"import seedu.awe.model.group.Group;","lastModifiedDate":"2021-10-05"},{"lineNumber":14,"author":{"gitId":"ramapriyan912001"},"content":"import seedu.awe.model.group.GroupName;","lastModifiedDate":"2021-10-05"},{"lineNumber":15,"author":{"gitId":"ramapriyan912001"},"content":"import seedu.awe.model.payment.Payment;","lastModifiedDate":"2021-10-21"},{"lineNumber":16,"author":{"gitId":"ramapriyan912001"},"content":"import seedu.awe.model.person.Person;","lastModifiedDate":"2021-10-05"},{"lineNumber":17,"author":{"gitId":"Jingwencloud"},"content":"import seedu.awe.model.transactionsummary.TransactionSummary;","lastModifiedDate":"2021-10-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":" * The API of the Model component.","lastModifiedDate":"2016-09-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"public interface Model {","lastModifiedDate":"2016-09-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /** {@code Predicate} that always evaluate to true */","lastModifiedDate":"2017-08-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    Predicate\u003cPerson\u003e PREDICATE_SHOW_ALL_PERSONS \u003d unused -\u003e true;","lastModifiedDate":"2018-01-10"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":26,"author":{"gitId":"ramapriyan912001"},"content":"    /** {@code Predicate} that always evaluate to true */","lastModifiedDate":"2021-10-09"},{"lineNumber":27,"author":{"gitId":"ramapriyan912001"},"content":"    Predicate\u003cGroup\u003e PREDICATE_SHOW_ALL_GROUPS \u003d unused -\u003e true;","lastModifiedDate":"2021-10-09"},{"lineNumber":28,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":29,"author":{"gitId":"Jingwencloud"},"content":"    /** {@code Predicate} that always evaluate to true */","lastModifiedDate":"2021-10-14"},{"lineNumber":30,"author":{"gitId":"Jingwencloud"},"content":"    Predicate\u003cExpense\u003e PREDICATE_SHOW_ALL_EXPENSES \u003d unused -\u003e true;","lastModifiedDate":"2021-10-14"},{"lineNumber":31,"author":{"gitId":"Jingwencloud"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Replaces user prefs data with the data in {@code userPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    void setUserPrefs(ReadOnlyUserPrefs userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     * Returns the user prefs.","lastModifiedDate":"2018-11-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    ReadOnlyUserPrefs getUserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * Sets the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    void setGuiSettings(GuiSettings guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"ramapriyan912001"},"content":"     * Returns the user prefs\u0027 awe book file path.","lastModifiedDate":"2021-10-05"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    Path getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":58,"author":{"gitId":"ramapriyan912001"},"content":"     * Sets the user prefs\u0027 awe book file path.","lastModifiedDate":"2021-10-05"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    void setAddressBookFilePath(Path addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":63,"author":{"gitId":"ramapriyan912001"},"content":"     * Replaces awe book data with the data in {@code addressBook}.","lastModifiedDate":"2021-10-05"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    void setAddressBook(ReadOnlyAddressBook addressBook);","lastModifiedDate":"2018-11-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":67,"author":{"gitId":"ramapriyan912001"},"content":"    /** Returns the AddressBook. */","lastModifiedDate":"2021-10-25"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    ReadOnlyAddressBook getAddressBook();","lastModifiedDate":"2016-09-25"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":70,"author":{"gitId":"ramapriyan912001"},"content":"    /** Returns the group of the ExpenseList in AddressBook. */","lastModifiedDate":"2021-10-25"},{"lineNumber":71,"author":{"gitId":"ramapriyan912001"},"content":"    Group getActiveGroupFromAddressBook() throws CommandException;","lastModifiedDate":"2021-10-25"},{"lineNumber":72,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":74,"author":{"gitId":"ramapriyan912001"},"content":"     * Returns true if a person with the same identity as {@code person} exists in the awe book.","lastModifiedDate":"2021-10-05"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    boolean hasPerson(Person person);","lastModifiedDate":"2018-08-06"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * Deletes the given person.","lastModifiedDate":"2018-08-07"},{"lineNumber":80,"author":{"gitId":"ramapriyan912001"},"content":"     * The person must exist in the awe book.","lastModifiedDate":"2021-10-05"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    void deletePerson(Person target);","lastModifiedDate":"2018-08-07"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     * Adds the given person.","lastModifiedDate":"2018-08-07"},{"lineNumber":86,"author":{"gitId":"ramapriyan912001"},"content":"     * {@code person} must not already exist in the awe book.","lastModifiedDate":"2021-10-05"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    void addPerson(Person person);","lastModifiedDate":"2018-08-07"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     * Replaces the given person {@code target} with {@code editedPerson}.","lastModifiedDate":"2017-06-07"},{"lineNumber":92,"author":{"gitId":"chrus-chong"},"content":"     * {@code target} must exist in the awe contact list.","lastModifiedDate":"2021-10-19"},{"lineNumber":93,"author":{"gitId":"ramapriyan912001"},"content":"     * The person identity of {@code editedPerson} must not be the same as another existing person in the awe book.","lastModifiedDate":"2021-10-05"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    void setPerson(Person target, Person editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":97,"author":{"gitId":"marcuspeh"},"content":"    /** Replaces the transactionsummary list with a new list */","lastModifiedDate":"2021-10-18"},{"lineNumber":98,"author":{"gitId":"marcuspeh"},"content":"    void setTransactionSummary(HashMap\u003cPerson, Cost\u003e summary);","lastModifiedDate":"2021-10-18"},{"lineNumber":99,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":100,"author":{"gitId":"Jingwencloud"},"content":"    ObservableList\u003cTransactionSummary\u003e getTransactionSummary();","lastModifiedDate":"2021-10-21"},{"lineNumber":101,"author":{"gitId":"Jingwencloud"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":102,"author":{"gitId":"chrus-chong"},"content":"    /**","lastModifiedDate":"2021-10-19"},{"lineNumber":103,"author":{"gitId":"chrus-chong"},"content":"     * Replaces Person objects with updated Person objects within the {@code group}.","lastModifiedDate":"2021-10-19"},{"lineNumber":104,"author":{"gitId":"chrus-chong"},"content":"     * {@code group} must exist in the awe group list.","lastModifiedDate":"2021-10-19"},{"lineNumber":105,"author":{"gitId":"chrus-chong"},"content":"     *","lastModifiedDate":"2021-10-19"},{"lineNumber":106,"author":{"gitId":"chrus-chong"},"content":"     * @param group Group object containing members to be updated.","lastModifiedDate":"2021-10-19"},{"lineNumber":107,"author":{"gitId":"chrus-chong"},"content":"     */","lastModifiedDate":"2021-10-19"},{"lineNumber":108,"author":{"gitId":"chrus-chong"},"content":"    void setAllMembersOfGroup(Group group);","lastModifiedDate":"2021-10-19"},{"lineNumber":109,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":110,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    /** Returns an unmodifiable view of the filtered person list */","lastModifiedDate":"2017-09-01"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    ObservableList\u003cPerson\u003e getFilteredPersonList();","lastModifiedDate":"2018-01-10"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-05"},{"lineNumber":115,"author":{"gitId":"-"},"content":"     * Updates the filter of the filtered person list to filter by the given {@code predicate}.","lastModifiedDate":"2017-08-05"},{"lineNumber":116,"author":{"gitId":"-"},"content":"     * @throws NullPointerException if {@code predicate} is null.","lastModifiedDate":"2017-08-05"},{"lineNumber":117,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-05"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate);","lastModifiedDate":"2018-01-10"},{"lineNumber":119,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":120,"author":{"gitId":"chrus-chong"},"content":"    /**","lastModifiedDate":"2021-10-02"},{"lineNumber":121,"author":{"gitId":"chrus-chong"},"content":"     * Adds the given group.","lastModifiedDate":"2021-10-02"},{"lineNumber":122,"author":{"gitId":"ramapriyan912001"},"content":"     * {@code Group} must not already exist in the awe book.","lastModifiedDate":"2021-10-05"},{"lineNumber":123,"author":{"gitId":"chrus-chong"},"content":"     */","lastModifiedDate":"2021-10-02"},{"lineNumber":124,"author":{"gitId":"ramapriyan912001"},"content":"    void addGroup(Group person);","lastModifiedDate":"2021-10-07"},{"lineNumber":125,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":126,"author":{"gitId":"marcuspeh"},"content":"    /**","lastModifiedDate":"2021-10-04"},{"lineNumber":127,"author":{"gitId":"marcuspeh"},"content":"     * Deletes group based on groupName.","lastModifiedDate":"2021-10-04"},{"lineNumber":128,"author":{"gitId":"ramapriyan912001"},"content":"     * {@code Group} must be unique in the awe book.","lastModifiedDate":"2021-10-05"},{"lineNumber":129,"author":{"gitId":"marcuspeh"},"content":"     */","lastModifiedDate":"2021-10-04"},{"lineNumber":130,"author":{"gitId":"ramapriyan912001"},"content":"    void deleteGroup(Group group);","lastModifiedDate":"2021-09-26"},{"lineNumber":131,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":132,"author":{"gitId":"marcuspeh"},"content":"    /** Returns boolean representing if a given group is in the model. */","lastModifiedDate":"2021-10-04"},{"lineNumber":133,"author":{"gitId":"ramapriyan912001"},"content":"    boolean hasGroup(Group group);","lastModifiedDate":"2021-09-26"},{"lineNumber":134,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":135,"author":{"gitId":"ramapriyan912001"},"content":"    void setPayments(List\u003cPayment\u003e payments);","lastModifiedDate":"2021-10-21"},{"lineNumber":136,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":137,"author":{"gitId":"marcuspeh"},"content":"    /**","lastModifiedDate":"2021-10-04"},{"lineNumber":138,"author":{"gitId":"marcuspeh"},"content":"     * Returns an unmodifiable view of the list of {@code Group} backed by the internal list of","lastModifiedDate":"2021-10-04"},{"lineNumber":139,"author":{"gitId":"marcuspeh"},"content":"     * {@code versionedAddressBook}","lastModifiedDate":"2021-10-04"},{"lineNumber":140,"author":{"gitId":"marcuspeh"},"content":"     */","lastModifiedDate":"2021-10-04"},{"lineNumber":141,"author":{"gitId":"marcuspeh"},"content":"    ObservableList\u003cGroup\u003e getFilteredGroupList();","lastModifiedDate":"2021-10-04"},{"lineNumber":142,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":143,"author":{"gitId":"ramapriyan912001"},"content":"    Group getGroupByName(GroupName groupName);","lastModifiedDate":"2021-10-04"},{"lineNumber":144,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":145,"author":{"gitId":"kheekheekhee"},"content":"    /**","lastModifiedDate":"2021-10-06"},{"lineNumber":146,"author":{"gitId":"kheekheekhee"},"content":"     * Replaces the target group with the newGroup.","lastModifiedDate":"2021-10-06"},{"lineNumber":147,"author":{"gitId":"kheekheekhee"},"content":"     *","lastModifiedDate":"2021-10-06"},{"lineNumber":148,"author":{"gitId":"kheekheekhee"},"content":"     * @param group Target group.","lastModifiedDate":"2021-10-06"},{"lineNumber":149,"author":{"gitId":"kheekheekhee"},"content":"     * @param newGroup to replace the target group.","lastModifiedDate":"2021-10-06"},{"lineNumber":150,"author":{"gitId":"kheekheekhee"},"content":"     */","lastModifiedDate":"2021-10-06"},{"lineNumber":151,"author":{"gitId":"kheekheekhee"},"content":"    void setGroup(Group group, Group newGroup);","lastModifiedDate":"2021-10-07"},{"lineNumber":152,"author":{"gitId":"kheekheekhee"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":153,"author":{"gitId":"marcuspeh"},"content":"    /**","lastModifiedDate":"2021-10-10"},{"lineNumber":154,"author":{"gitId":"marcuspeh"},"content":"     * Updates the filter of the filtered group list to filter by the given {@code predicate}.","lastModifiedDate":"2021-10-10"},{"lineNumber":155,"author":{"gitId":"marcuspeh"},"content":"     * @throws NullPointerException if {@code predicate} is null.","lastModifiedDate":"2021-10-10"},{"lineNumber":156,"author":{"gitId":"marcuspeh"},"content":"     */","lastModifiedDate":"2021-10-10"},{"lineNumber":157,"author":{"gitId":"marcuspeh"},"content":"    void updateFilteredGroupList(Predicate\u003cGroup\u003e predicate);","lastModifiedDate":"2021-10-10"},{"lineNumber":158,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":159,"author":{"gitId":"kheekheekhee"},"content":"    /**","lastModifiedDate":"2021-10-06"},{"lineNumber":160,"author":{"gitId":"Jingwencloud"},"content":"     * Returns all expenses in the input group.","lastModifiedDate":"2021-10-07"},{"lineNumber":161,"author":{"gitId":"kheekheekhee"},"content":"     *","lastModifiedDate":"2021-10-06"},{"lineNumber":162,"author":{"gitId":"kheekheekhee"},"content":"     * @return A list of all expenses in the specified group.","lastModifiedDate":"2021-10-06"},{"lineNumber":163,"author":{"gitId":"kheekheekhee"},"content":"     */","lastModifiedDate":"2021-10-06"},{"lineNumber":164,"author":{"gitId":"Jingwencloud"},"content":"    ObservableList\u003cExpense\u003e getExpenses();","lastModifiedDate":"2021-10-07"},{"lineNumber":165,"author":{"gitId":"Jingwencloud"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":166,"author":{"gitId":"Jingwencloud"},"content":"    void setExpenses(Group group);","lastModifiedDate":"2021-10-07"},{"lineNumber":167,"author":{"gitId":"Jingwencloud"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":168,"author":{"gitId":"Jingwencloud"},"content":"    boolean isCurrentExpenseList(Group group);","lastModifiedDate":"2021-10-21"},{"lineNumber":169,"author":{"gitId":"Jingwencloud"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":170,"author":{"gitId":"ramapriyan912001"},"content":"    Expense getExpense(int index);","lastModifiedDate":"2021-10-27"},{"lineNumber":171,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":172,"author":{"gitId":"Jingwencloud"},"content":"    /**","lastModifiedDate":"2021-10-12"},{"lineNumber":173,"author":{"gitId":"Jingwencloud"},"content":"     * Updates the filter of the filtered expense list to filter by the given {@code predicate}.","lastModifiedDate":"2021-10-12"},{"lineNumber":174,"author":{"gitId":"Jingwencloud"},"content":"     *","lastModifiedDate":"2021-10-12"},{"lineNumber":175,"author":{"gitId":"Jingwencloud"},"content":"     * @param predicate The predicate to filter the list.","lastModifiedDate":"2021-10-12"},{"lineNumber":176,"author":{"gitId":"Jingwencloud"},"content":"     * @throws NullPointerException if {@code predicate} is null.","lastModifiedDate":"2021-10-12"},{"lineNumber":177,"author":{"gitId":"Jingwencloud"},"content":"     */","lastModifiedDate":"2021-10-12"},{"lineNumber":178,"author":{"gitId":"Jingwencloud"},"content":"    void updateFilteredExpenseList(Predicate\u003cExpense\u003e predicate);","lastModifiedDate":"2021-10-12"},{"lineNumber":179,"author":{"gitId":"Jingwencloud"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":180,"author":{"gitId":"Jingwencloud"},"content":"    void addExpense(Expense expense, Group group);","lastModifiedDate":"2021-10-13"},{"lineNumber":181,"author":{"gitId":"Jingwencloud"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":182,"author":{"gitId":"Jingwencloud"},"content":"    /**","lastModifiedDate":"2021-10-13"},{"lineNumber":183,"author":{"gitId":"Jingwencloud"},"content":"     * Deletes expense if the current expense list in address","lastModifiedDate":"2021-10-13"},{"lineNumber":184,"author":{"gitId":"Jingwencloud"},"content":"     * book belongs to the specified group.","lastModifiedDate":"2021-10-13"},{"lineNumber":185,"author":{"gitId":"Jingwencloud"},"content":"     */","lastModifiedDate":"2021-10-13"},{"lineNumber":186,"author":{"gitId":"Jingwencloud"},"content":"    void deleteExpense(Expense expense, Group group);","lastModifiedDate":"2021-10-13"},{"lineNumber":187,"author":{"gitId":"Jingwencloud"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":188,"author":{"gitId":"ramapriyan912001"},"content":"    ObservableList\u003cPayment\u003e getPayments();","lastModifiedDate":"2021-10-21"},{"lineNumber":189,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"marcuspeh":24,"Jingwencloud":29,"kheekheekhee":13,"chrus-chong":13,"ramapriyan912001":35,"-":75}},{"path":"src/main/java/seedu/awe/model/ModelManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ramapriyan912001"},"content":"package seedu.awe.model;","lastModifiedDate":"2021-10-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-08-05"},{"lineNumber":4,"author":{"gitId":"ramapriyan912001"},"content":"import static seedu.awe.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2021-10-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"ramapriyan912001"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-30"},{"lineNumber":8,"author":{"gitId":"marcuspeh"},"content":"import java.util.HashMap;","lastModifiedDate":"2021-10-18"},{"lineNumber":9,"author":{"gitId":"ramapriyan912001"},"content":"import java.util.List;","lastModifiedDate":"2021-10-21"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import javafx.collections.transformation.FilteredList;","lastModifiedDate":"2016-08-26"},{"lineNumber":15,"author":{"gitId":"ramapriyan912001"},"content":"import seedu.awe.commons.core.GuiSettings;","lastModifiedDate":"2021-10-05"},{"lineNumber":16,"author":{"gitId":"ramapriyan912001"},"content":"import seedu.awe.commons.core.LogsCenter;","lastModifiedDate":"2021-10-05"},{"lineNumber":17,"author":{"gitId":"ramapriyan912001"},"content":"import seedu.awe.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-10-25"},{"lineNumber":18,"author":{"gitId":"marcuspeh"},"content":"import seedu.awe.model.expense.Cost;","lastModifiedDate":"2021-10-18"},{"lineNumber":19,"author":{"gitId":"kheekheekhee"},"content":"import seedu.awe.model.expense.Expense;","lastModifiedDate":"2021-10-06"},{"lineNumber":20,"author":{"gitId":"ramapriyan912001"},"content":"import seedu.awe.model.group.Group;","lastModifiedDate":"2021-10-05"},{"lineNumber":21,"author":{"gitId":"ramapriyan912001"},"content":"import seedu.awe.model.group.GroupName;","lastModifiedDate":"2021-10-05"},{"lineNumber":22,"author":{"gitId":"ramapriyan912001"},"content":"import seedu.awe.model.payment.Payment;","lastModifiedDate":"2021-10-21"},{"lineNumber":23,"author":{"gitId":"ramapriyan912001"},"content":"import seedu.awe.model.person.Person;","lastModifiedDate":"2021-10-05"},{"lineNumber":24,"author":{"gitId":"Jingwencloud"},"content":"import seedu.awe.model.transactionsummary.TransactionSummary;","lastModifiedDate":"2021-10-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"ramapriyan912001"},"content":" * Represents the in-memory model of the awe book data.","lastModifiedDate":"2021-10-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"public class ModelManager implements Model {","lastModifiedDate":"2018-12-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(ModelManager.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private final AddressBook addressBook;","lastModifiedDate":"2019-01-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private final UserPrefs userPrefs;","lastModifiedDate":"2018-12-06"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private final FilteredList\u003cPerson\u003e filteredPersons;","lastModifiedDate":"2018-01-10"},{"lineNumber":35,"author":{"gitId":"marcuspeh"},"content":"    private final FilteredList\u003cGroup\u003e filteredGroups;","lastModifiedDate":"2021-10-04"},{"lineNumber":36,"author":{"gitId":"Jingwencloud"},"content":"    private final FilteredList\u003cExpense\u003e filteredExpenses;","lastModifiedDate":"2021-10-21"},{"lineNumber":37,"author":{"gitId":"Jingwencloud"},"content":"    private final FilteredList\u003cTransactionSummary\u003e transactionSummary;","lastModifiedDate":"2021-10-21"},{"lineNumber":38,"author":{"gitId":"ramapriyan912001"},"content":"    private final FilteredList\u003cPayment\u003e payments;","lastModifiedDate":"2021-10-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * Initializes a ModelManager with the given addressBook and userPrefs.","lastModifiedDate":"2016-12-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public ModelManager(ReadOnlyAddressBook addressBook, ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        super();","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        requireAllNonNull(addressBook, userPrefs);","lastModifiedDate":"2017-05-19"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":47,"author":{"gitId":"ramapriyan912001"},"content":"        logger.fine(\"Initializing with awe book: \" + addressBook + \" and user prefs \" + userPrefs);","lastModifiedDate":"2021-10-05"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        this.addressBook \u003d new AddressBook(addressBook);","lastModifiedDate":"2019-01-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        this.userPrefs \u003d new UserPrefs(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        filteredPersons \u003d new FilteredList\u003c\u003e(this.addressBook.getPersonList());","lastModifiedDate":"2019-01-25"},{"lineNumber":52,"author":{"gitId":"marcuspeh"},"content":"        filteredGroups \u003d new FilteredList\u003c\u003e(this.addressBook.getGroupList());","lastModifiedDate":"2021-10-04"},{"lineNumber":53,"author":{"gitId":"Jingwencloud"},"content":"        filteredExpenses \u003d new FilteredList\u003c\u003e(this.addressBook.getExpenseList());","lastModifiedDate":"2021-10-21"},{"lineNumber":54,"author":{"gitId":"Jingwencloud"},"content":"        transactionSummary \u003d new FilteredList\u003c\u003e(this.addressBook.getTransactionSummaryList());","lastModifiedDate":"2021-10-21"},{"lineNumber":55,"author":{"gitId":"ramapriyan912001"},"content":"        payments \u003d new FilteredList\u003c\u003e(this.addressBook.getPaymentList());","lastModifiedDate":"2021-10-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public ModelManager() {","lastModifiedDate":"2016-09-22"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        this(new AddressBook(), new UserPrefs());","lastModifiedDate":"2016-09-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d UserPrefs \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2018-11-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        requireNonNull(userPrefs);","lastModifiedDate":"2018-11-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        this.userPrefs.resetData(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2018-11-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        return userPrefs;","lastModifiedDate":"2018-11-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        return userPrefs.getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        requireNonNull(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        return userPrefs.getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2018-11-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        requireNonNull(addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        userPrefs.setAddressBookFilePath(addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d AddressBook \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2018-11-27"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    public void setAddressBook(ReadOnlyAddressBook addressBook) {","lastModifiedDate":"2018-11-27"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        this.addressBook.resetData(addressBook);","lastModifiedDate":"2019-01-25"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2016-09-21"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        return addressBook;","lastModifiedDate":"2019-01-25"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":109,"author":{"gitId":"ramapriyan912001"},"content":"    @Override","lastModifiedDate":"2021-10-25"},{"lineNumber":110,"author":{"gitId":"ramapriyan912001"},"content":"    public Group getActiveGroupFromAddressBook() throws CommandException {","lastModifiedDate":"2021-10-25"},{"lineNumber":111,"author":{"gitId":"ramapriyan912001"},"content":"        return addressBook.getGroupFromExpenseList().orElseThrow(() -\u003e","lastModifiedDate":"2021-10-25"},{"lineNumber":112,"author":{"gitId":"ramapriyan912001"},"content":"                new CommandException(\"Sorry! The operation could not be completed!\"));","lastModifiedDate":"2021-10-25"},{"lineNumber":113,"author":{"gitId":"ramapriyan912001"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":114,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":115,"author":{"gitId":"marcuspeh"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Person \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2021-10-04"},{"lineNumber":116,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-08-06"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-15"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        requireNonNull(person);","lastModifiedDate":"2018-08-06"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        return addressBook.hasPerson(person);","lastModifiedDate":"2019-01-25"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    public void deletePerson(Person target) {","lastModifiedDate":"2018-08-15"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        addressBook.removePerson(target);","lastModifiedDate":"2019-01-25"},{"lineNumber":126,"author":{"gitId":"ramapriyan912001"},"content":"        deletePersonFromGroups(target);","lastModifiedDate":"2021-10-31"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    public void addPerson(Person person) {","lastModifiedDate":"2018-08-15"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        addressBook.addPerson(person);","lastModifiedDate":"2019-01-25"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2017-08-05"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-26"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-26"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-13"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-17"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        requireAllNonNull(target, editedPerson);","lastModifiedDate":"2017-06-07"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        addressBook.setPerson(target, editedPerson);","lastModifiedDate":"2019-01-25"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-13"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":142,"author":{"gitId":"chrus-chong"},"content":"    @Override","lastModifiedDate":"2021-10-19"},{"lineNumber":143,"author":{"gitId":"chrus-chong"},"content":"    public void setAllMembersOfGroup(Group group) {","lastModifiedDate":"2021-10-19"},{"lineNumber":144,"author":{"gitId":"chrus-chong"},"content":"        requireNonNull(group);","lastModifiedDate":"2021-10-19"},{"lineNumber":145,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":146,"author":{"gitId":"chrus-chong"},"content":"        for (Person member : group.getMembers()) {","lastModifiedDate":"2021-10-19"},{"lineNumber":147,"author":{"gitId":"chrus-chong"},"content":"            addressBook.setPerson(member, member);","lastModifiedDate":"2021-10-19"},{"lineNumber":148,"author":{"gitId":"chrus-chong"},"content":"        }","lastModifiedDate":"2021-10-19"},{"lineNumber":149,"author":{"gitId":"chrus-chong"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":150,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Filtered Person List Accessors \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2016-10-12"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-19"},{"lineNumber":154,"author":{"gitId":"-"},"content":"     * Returns an unmodifiable view of the list of {@code Person} backed by the internal list of","lastModifiedDate":"2018-01-10"},{"lineNumber":155,"author":{"gitId":"-"},"content":"     * {@code versionedAddressBook}","lastModifiedDate":"2018-06-11"},{"lineNumber":156,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-19"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":158,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        return filteredPersons;","lastModifiedDate":"2018-12-09"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":163,"author":{"gitId":"-"},"content":"    public void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate) {","lastModifiedDate":"2018-01-10"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        requireNonNull(predicate);","lastModifiedDate":"2017-08-05"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        filteredPersons.setPredicate(predicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":167,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-10-02"},{"lineNumber":168,"author":{"gitId":"marcuspeh"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Groups \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2021-10-04"},{"lineNumber":169,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":170,"author":{"gitId":"chrus-chong"},"content":"    /**","lastModifiedDate":"2021-10-02"},{"lineNumber":171,"author":{"gitId":"chrus-chong"},"content":"     * Adds group into addressbook.","lastModifiedDate":"2021-10-03"},{"lineNumber":172,"author":{"gitId":"chrus-chong"},"content":"     * Assumption is that group name is unique.","lastModifiedDate":"2021-10-02"},{"lineNumber":173,"author":{"gitId":"chrus-chong"},"content":"     *","lastModifiedDate":"2021-10-03"},{"lineNumber":174,"author":{"gitId":"chrus-chong"},"content":"     * @param group Group object representing members going on a trip.","lastModifiedDate":"2021-10-02"},{"lineNumber":175,"author":{"gitId":"chrus-chong"},"content":"     */","lastModifiedDate":"2021-10-02"},{"lineNumber":176,"author":{"gitId":"chrus-chong"},"content":"    @Override","lastModifiedDate":"2021-10-02"},{"lineNumber":177,"author":{"gitId":"ramapriyan912001"},"content":"    public void addGroup(Group group) {","lastModifiedDate":"2021-10-07"},{"lineNumber":178,"author":{"gitId":"chrus-chong"},"content":"        addressBook.addGroup(group);","lastModifiedDate":"2021-10-02"},{"lineNumber":179,"author":{"gitId":"ramapriyan912001"},"content":"        updateFilteredGroupList(PREDICATE_SHOW_ALL_GROUPS);","lastModifiedDate":"2021-10-09"},{"lineNumber":180,"author":{"gitId":"chrus-chong"},"content":"    }","lastModifiedDate":"2021-10-02"},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":182,"author":{"gitId":"ramapriyan912001"},"content":"    /**","lastModifiedDate":"2021-09-26"},{"lineNumber":183,"author":{"gitId":"ramapriyan912001"},"content":"     * Deletes group based on groupName.","lastModifiedDate":"2021-09-26"},{"lineNumber":184,"author":{"gitId":"ramapriyan912001"},"content":"     * Assumption is that group name is unique.","lastModifiedDate":"2021-09-26"},{"lineNumber":185,"author":{"gitId":"chrus-chong"},"content":"     *","lastModifiedDate":"2021-10-03"},{"lineNumber":186,"author":{"gitId":"chrus-chong"},"content":"     * @param group Group object representing members going on a trip.","lastModifiedDate":"2021-10-03"},{"lineNumber":187,"author":{"gitId":"ramapriyan912001"},"content":"     */","lastModifiedDate":"2021-09-26"},{"lineNumber":188,"author":{"gitId":"ramapriyan912001"},"content":"    @Override","lastModifiedDate":"2021-09-26"},{"lineNumber":189,"author":{"gitId":"ramapriyan912001"},"content":"    public void deleteGroup(Group group) {","lastModifiedDate":"2021-09-26"},{"lineNumber":190,"author":{"gitId":"ramapriyan912001"},"content":"        addressBook.removeGroup(group);","lastModifiedDate":"2021-09-26"},{"lineNumber":191,"author":{"gitId":"ramapriyan912001"},"content":"    }","lastModifiedDate":"2021-09-26"},{"lineNumber":192,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":193,"author":{"gitId":"ramapriyan912001"},"content":"    /**","lastModifiedDate":"2021-09-26"},{"lineNumber":194,"author":{"gitId":"chrus-chong"},"content":"     * Returns boolean representing if a given group is in the model.","lastModifiedDate":"2021-10-03"},{"lineNumber":195,"author":{"gitId":"chrus-chong"},"content":"     *","lastModifiedDate":"2021-10-03"},{"lineNumber":196,"author":{"gitId":"chrus-chong"},"content":"     * @param group Group object representing members going on a trip.","lastModifiedDate":"2021-10-03"},{"lineNumber":197,"author":{"gitId":"chrus-chong"},"content":"     * @return boolean object representing if a given group is in the model.","lastModifiedDate":"2021-10-03"},{"lineNumber":198,"author":{"gitId":"ramapriyan912001"},"content":"     */","lastModifiedDate":"2021-09-26"},{"lineNumber":199,"author":{"gitId":"ramapriyan912001"},"content":"    @Override","lastModifiedDate":"2021-09-26"},{"lineNumber":200,"author":{"gitId":"ramapriyan912001"},"content":"    public boolean hasGroup(Group group) {","lastModifiedDate":"2021-09-26"},{"lineNumber":201,"author":{"gitId":"ramapriyan912001"},"content":"        requireNonNull(group);","lastModifiedDate":"2021-09-26"},{"lineNumber":202,"author":{"gitId":"ramapriyan912001"},"content":"        return addressBook.hasGroup(group);","lastModifiedDate":"2021-09-26"},{"lineNumber":203,"author":{"gitId":"ramapriyan912001"},"content":"    }","lastModifiedDate":"2021-09-26"},{"lineNumber":204,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":205,"author":{"gitId":"kheekheekhee"},"content":"    @Override","lastModifiedDate":"2021-10-06"},{"lineNumber":206,"author":{"gitId":"kheekheekhee"},"content":"    public void setGroup(Group group, Group newGroup) {","lastModifiedDate":"2021-10-07"},{"lineNumber":207,"author":{"gitId":"kheekheekhee"},"content":"        requireNonNull(group);","lastModifiedDate":"2021-10-06"},{"lineNumber":208,"author":{"gitId":"kheekheekhee"},"content":"        addressBook.setGroup(group, newGroup);","lastModifiedDate":"2021-10-06"},{"lineNumber":209,"author":{"gitId":"ramapriyan912001"},"content":"        updateFilteredGroupList(PREDICATE_SHOW_ALL_GROUPS);","lastModifiedDate":"2021-10-09"},{"lineNumber":210,"author":{"gitId":"kheekheekhee"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":211,"author":{"gitId":"marcuspeh"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d TransactionSummary List Accessors \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2021-10-18"},{"lineNumber":212,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":213,"author":{"gitId":"marcuspeh"},"content":"    @Override","lastModifiedDate":"2021-10-18"},{"lineNumber":214,"author":{"gitId":"marcuspeh"},"content":"    public void setTransactionSummary(HashMap\u003cPerson, Cost\u003e summary) {","lastModifiedDate":"2021-10-18"},{"lineNumber":215,"author":{"gitId":"marcuspeh"},"content":"        requireNonNull(summary);","lastModifiedDate":"2021-10-18"},{"lineNumber":216,"author":{"gitId":"marcuspeh"},"content":"        addressBook.setTransactionSummary(summary);","lastModifiedDate":"2021-10-18"},{"lineNumber":217,"author":{"gitId":"marcuspeh"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":218,"author":{"gitId":"kheekheekhee"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":219,"author":{"gitId":"Jingwencloud"},"content":"    @Override","lastModifiedDate":"2021-10-21"},{"lineNumber":220,"author":{"gitId":"Jingwencloud"},"content":"    public ObservableList\u003cTransactionSummary\u003e getTransactionSummary() {","lastModifiedDate":"2021-10-21"},{"lineNumber":221,"author":{"gitId":"Jingwencloud"},"content":"        return transactionSummary;","lastModifiedDate":"2021-10-21"},{"lineNumber":222,"author":{"gitId":"Jingwencloud"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":223,"author":{"gitId":"Jingwencloud"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":224,"author":{"gitId":"ramapriyan912001"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Payment List Accessors \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2021-10-21"},{"lineNumber":225,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":226,"author":{"gitId":"ramapriyan912001"},"content":"    @Override","lastModifiedDate":"2021-10-21"},{"lineNumber":227,"author":{"gitId":"ramapriyan912001"},"content":"    public ObservableList\u003cPayment\u003e getPayments() {","lastModifiedDate":"2021-10-21"},{"lineNumber":228,"author":{"gitId":"ramapriyan912001"},"content":"        return payments;","lastModifiedDate":"2021-10-21"},{"lineNumber":229,"author":{"gitId":"ramapriyan912001"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":230,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":231,"author":{"gitId":"ramapriyan912001"},"content":"    private void deletePersonFromGroups(Person person) {","lastModifiedDate":"2021-10-31"},{"lineNumber":232,"author":{"gitId":"ramapriyan912001"},"content":"        List\u003cGroup\u003e groupList \u003d getGroupsOfPerson(person);","lastModifiedDate":"2021-10-31"},{"lineNumber":233,"author":{"gitId":"ramapriyan912001"},"content":"        for (int j \u003d 0; j \u003c groupList.size(); j++) {","lastModifiedDate":"2021-10-30"},{"lineNumber":234,"author":{"gitId":"ramapriyan912001"},"content":"            Group group \u003d groupList.get(j);","lastModifiedDate":"2021-10-30"},{"lineNumber":235,"author":{"gitId":"ramapriyan912001"},"content":"            Group newGroup \u003d group.removeMember(person);","lastModifiedDate":"2021-10-30"},{"lineNumber":236,"author":{"gitId":"ramapriyan912001"},"content":"            if (newGroup.getMembers().isEmpty()) {","lastModifiedDate":"2021-10-30"},{"lineNumber":237,"author":{"gitId":"ramapriyan912001"},"content":"                deleteGroup(group);","lastModifiedDate":"2021-10-30"},{"lineNumber":238,"author":{"gitId":"ramapriyan912001"},"content":"            } else {","lastModifiedDate":"2021-10-30"},{"lineNumber":239,"author":{"gitId":"ramapriyan912001"},"content":"                setGroup(group, newGroup);","lastModifiedDate":"2021-10-30"},{"lineNumber":240,"author":{"gitId":"ramapriyan912001"},"content":"            }","lastModifiedDate":"2021-10-30"},{"lineNumber":241,"author":{"gitId":"ramapriyan912001"},"content":"        }","lastModifiedDate":"2021-10-30"},{"lineNumber":242,"author":{"gitId":"ramapriyan912001"},"content":"    }","lastModifiedDate":"2021-10-30"},{"lineNumber":243,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":244,"author":{"gitId":"ramapriyan912001"},"content":"    private List\u003cGroup\u003e getGroupsOfPerson(Person person) {","lastModifiedDate":"2021-10-31"},{"lineNumber":245,"author":{"gitId":"ramapriyan912001"},"content":"        List\u003cGroup\u003e groupList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-31"},{"lineNumber":246,"author":{"gitId":"ramapriyan912001"},"content":"        List\u003cGroup\u003e groups \u003d addressBook.getGroupList();","lastModifiedDate":"2021-10-31"},{"lineNumber":247,"author":{"gitId":"ramapriyan912001"},"content":"        for (int i \u003d 0; i \u003c groups.size(); i++) {","lastModifiedDate":"2021-10-31"},{"lineNumber":248,"author":{"gitId":"ramapriyan912001"},"content":"            Group group \u003d groups.get(i);","lastModifiedDate":"2021-10-31"},{"lineNumber":249,"author":{"gitId":"ramapriyan912001"},"content":"            if (group.isPartOfGroup(person)) {","lastModifiedDate":"2021-10-31"},{"lineNumber":250,"author":{"gitId":"ramapriyan912001"},"content":"                groupList.add(group);","lastModifiedDate":"2021-10-31"},{"lineNumber":251,"author":{"gitId":"ramapriyan912001"},"content":"            }","lastModifiedDate":"2021-10-31"},{"lineNumber":252,"author":{"gitId":"ramapriyan912001"},"content":"        }","lastModifiedDate":"2021-10-31"},{"lineNumber":253,"author":{"gitId":"ramapriyan912001"},"content":"        return groupList;","lastModifiedDate":"2021-10-31"},{"lineNumber":254,"author":{"gitId":"ramapriyan912001"},"content":"    }","lastModifiedDate":"2021-10-31"},{"lineNumber":255,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":256,"author":{"gitId":"ramapriyan912001"},"content":"    @Override","lastModifiedDate":"2021-10-21"},{"lineNumber":257,"author":{"gitId":"ramapriyan912001"},"content":"    public void setPayments(List\u003cPayment\u003e payments) {","lastModifiedDate":"2021-10-21"},{"lineNumber":258,"author":{"gitId":"ramapriyan912001"},"content":"        requireNonNull(payments);","lastModifiedDate":"2021-10-21"},{"lineNumber":259,"author":{"gitId":"ramapriyan912001"},"content":"        addressBook.setPayments(payments);","lastModifiedDate":"2021-10-21"},{"lineNumber":260,"author":{"gitId":"ramapriyan912001"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":261,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":262,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":263,"author":{"gitId":"marcuspeh"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Filtered Group List Accessors \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2021-10-04"},{"lineNumber":264,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":265,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":266,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":267,"author":{"gitId":"marcuspeh"},"content":"    /**","lastModifiedDate":"2021-10-04"},{"lineNumber":268,"author":{"gitId":"marcuspeh"},"content":"     * Returns an unmodifiable view of the list of {@code Group} backed by the internal list of","lastModifiedDate":"2021-10-04"},{"lineNumber":269,"author":{"gitId":"marcuspeh"},"content":"     * {@code versionedAddressBook}","lastModifiedDate":"2021-10-04"},{"lineNumber":270,"author":{"gitId":"marcuspeh"},"content":"     */","lastModifiedDate":"2021-10-04"},{"lineNumber":271,"author":{"gitId":"marcuspeh"},"content":"    @Override","lastModifiedDate":"2021-10-04"},{"lineNumber":272,"author":{"gitId":"marcuspeh"},"content":"    public ObservableList\u003cGroup\u003e getFilteredGroupList() {","lastModifiedDate":"2021-10-04"},{"lineNumber":273,"author":{"gitId":"marcuspeh"},"content":"        return filteredGroups;","lastModifiedDate":"2021-10-04"},{"lineNumber":274,"author":{"gitId":"marcuspeh"},"content":"    }","lastModifiedDate":"2021-10-04"},{"lineNumber":275,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":276,"author":{"gitId":"marcuspeh"},"content":"    @Override","lastModifiedDate":"2021-10-04"},{"lineNumber":277,"author":{"gitId":"marcuspeh"},"content":"    public void updateFilteredGroupList(Predicate\u003cGroup\u003e predicate) {","lastModifiedDate":"2021-10-04"},{"lineNumber":278,"author":{"gitId":"marcuspeh"},"content":"        requireNonNull(predicate);","lastModifiedDate":"2021-10-04"},{"lineNumber":279,"author":{"gitId":"marcuspeh"},"content":"        filteredGroups.setPredicate(predicate);","lastModifiedDate":"2021-10-04"},{"lineNumber":280,"author":{"gitId":"marcuspeh"},"content":"    }","lastModifiedDate":"2021-10-04"},{"lineNumber":281,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":282,"author":{"gitId":"ramapriyan912001"},"content":"    @Override","lastModifiedDate":"2021-10-04"},{"lineNumber":283,"author":{"gitId":"ramapriyan912001"},"content":"    public Group getGroupByName(GroupName groupName) {","lastModifiedDate":"2021-10-04"},{"lineNumber":284,"author":{"gitId":"ramapriyan912001"},"content":"        requireNonNull(groupName);","lastModifiedDate":"2021-10-04"},{"lineNumber":285,"author":{"gitId":"ramapriyan912001"},"content":"        return addressBook.getGroupByName(groupName);","lastModifiedDate":"2021-10-04"},{"lineNumber":286,"author":{"gitId":"ramapriyan912001"},"content":"    }","lastModifiedDate":"2021-10-04"},{"lineNumber":287,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":288,"author":{"gitId":"Jingwencloud"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Expenses List Accessors \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2021-10-12"},{"lineNumber":289,"author":{"gitId":"Jingwencloud"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":290,"author":{"gitId":"Jingwencloud"},"content":"    /**","lastModifiedDate":"2021-10-13"},{"lineNumber":291,"author":{"gitId":"Jingwencloud"},"content":"     * Adds expense into expense list in address book, if","lastModifiedDate":"2021-10-13"},{"lineNumber":292,"author":{"gitId":"Jingwencloud"},"content":"     * the current list of expenses belongs to the","lastModifiedDate":"2021-10-13"},{"lineNumber":293,"author":{"gitId":"Jingwencloud"},"content":"     * specified group.","lastModifiedDate":"2021-10-13"},{"lineNumber":294,"author":{"gitId":"Jingwencloud"},"content":"     *","lastModifiedDate":"2021-10-13"},{"lineNumber":295,"author":{"gitId":"Jingwencloud"},"content":"     * @param expense The expense to add.","lastModifiedDate":"2021-10-13"},{"lineNumber":296,"author":{"gitId":"Jingwencloud"},"content":"     * @param group The group which the expense belongs to.","lastModifiedDate":"2021-10-13"},{"lineNumber":297,"author":{"gitId":"Jingwencloud"},"content":"     */","lastModifiedDate":"2021-10-13"},{"lineNumber":298,"author":{"gitId":"Jingwencloud"},"content":"    @Override","lastModifiedDate":"2021-10-13"},{"lineNumber":299,"author":{"gitId":"Jingwencloud"},"content":"    public void addExpense(Expense expense, Group group) {","lastModifiedDate":"2021-10-13"},{"lineNumber":300,"author":{"gitId":"Jingwencloud"},"content":"        addressBook.addExpense(expense, group);","lastModifiedDate":"2021-10-13"},{"lineNumber":301,"author":{"gitId":"Jingwencloud"},"content":"        updateFilteredExpenseList(PREDICATE_SHOW_ALL_EXPENSES);","lastModifiedDate":"2021-10-14"},{"lineNumber":302,"author":{"gitId":"Jingwencloud"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":303,"author":{"gitId":"Jingwencloud"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":304,"author":{"gitId":"Jingwencloud"},"content":"    /**","lastModifiedDate":"2021-10-13"},{"lineNumber":305,"author":{"gitId":"Jingwencloud"},"content":"     * Deletes expense from the expense list in address book, if","lastModifiedDate":"2021-10-13"},{"lineNumber":306,"author":{"gitId":"Jingwencloud"},"content":"     * the current list of expenses belongs to the specified","lastModifiedDate":"2021-10-13"},{"lineNumber":307,"author":{"gitId":"Jingwencloud"},"content":"     * group.","lastModifiedDate":"2021-10-13"},{"lineNumber":308,"author":{"gitId":"Jingwencloud"},"content":"     *","lastModifiedDate":"2021-10-13"},{"lineNumber":309,"author":{"gitId":"Jingwencloud"},"content":"     * @param expense The expense to delete","lastModifiedDate":"2021-10-13"},{"lineNumber":310,"author":{"gitId":"Jingwencloud"},"content":"     */","lastModifiedDate":"2021-10-13"},{"lineNumber":311,"author":{"gitId":"Jingwencloud"},"content":"    @Override","lastModifiedDate":"2021-10-13"},{"lineNumber":312,"author":{"gitId":"Jingwencloud"},"content":"    public void deleteExpense(Expense expense, Group group) {","lastModifiedDate":"2021-10-13"},{"lineNumber":313,"author":{"gitId":"Jingwencloud"},"content":"        addressBook.deleteExpense(expense, group);","lastModifiedDate":"2021-10-13"},{"lineNumber":314,"author":{"gitId":"Jingwencloud"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":315,"author":{"gitId":"Jingwencloud"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":316,"author":{"gitId":"Jingwencloud"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Filtered Expense List Accessors \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2021-10-13"},{"lineNumber":317,"author":{"gitId":"Jingwencloud"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":318,"author":{"gitId":"Jingwencloud"},"content":"    /** Checks if the current expense list belongs to the","lastModifiedDate":"2021-10-21"},{"lineNumber":319,"author":{"gitId":"Jingwencloud"},"content":"     * specified group.","lastModifiedDate":"2021-10-21"},{"lineNumber":320,"author":{"gitId":"Jingwencloud"},"content":"     *","lastModifiedDate":"2021-10-21"},{"lineNumber":321,"author":{"gitId":"Jingwencloud"},"content":"     * @return true if expense list belongs to the group.","lastModifiedDate":"2021-10-21"},{"lineNumber":322,"author":{"gitId":"Jingwencloud"},"content":"     */","lastModifiedDate":"2021-10-21"},{"lineNumber":323,"author":{"gitId":"Jingwencloud"},"content":"    @Override","lastModifiedDate":"2021-10-21"},{"lineNumber":324,"author":{"gitId":"Jingwencloud"},"content":"    public boolean isCurrentExpenseList(Group group) {","lastModifiedDate":"2021-10-21"},{"lineNumber":325,"author":{"gitId":"Jingwencloud"},"content":"        return addressBook.isCurrentExpenseList(group);","lastModifiedDate":"2021-10-21"},{"lineNumber":326,"author":{"gitId":"Jingwencloud"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":327,"author":{"gitId":"Jingwencloud"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":328,"author":{"gitId":"Jingwencloud"},"content":"    /**","lastModifiedDate":"2021-10-06"},{"lineNumber":329,"author":{"gitId":"Jingwencloud"},"content":"     * Returns the current list of expenses.","lastModifiedDate":"2021-10-07"},{"lineNumber":330,"author":{"gitId":"Jingwencloud"},"content":"     *","lastModifiedDate":"2021-10-07"},{"lineNumber":331,"author":{"gitId":"Jingwencloud"},"content":"     * @return expenseslist The list of expenses.","lastModifiedDate":"2021-10-07"},{"lineNumber":332,"author":{"gitId":"Jingwencloud"},"content":"     */","lastModifiedDate":"2021-10-06"},{"lineNumber":333,"author":{"gitId":"Jingwencloud"},"content":"    @Override","lastModifiedDate":"2021-10-06"},{"lineNumber":334,"author":{"gitId":"Jingwencloud"},"content":"    public ObservableList\u003cExpense\u003e getExpenses() {","lastModifiedDate":"2021-10-07"},{"lineNumber":335,"author":{"gitId":"Jingwencloud"},"content":"        return filteredExpenses;","lastModifiedDate":"2021-10-21"},{"lineNumber":336,"author":{"gitId":"Jingwencloud"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":337,"author":{"gitId":"Jingwencloud"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":338,"author":{"gitId":"ramapriyan912001"},"content":"    @Override","lastModifiedDate":"2021-10-27"},{"lineNumber":339,"author":{"gitId":"ramapriyan912001"},"content":"    public Expense getExpense(int index) {","lastModifiedDate":"2021-10-27"},{"lineNumber":340,"author":{"gitId":"ramapriyan912001"},"content":"        return filteredExpenses.get(index);","lastModifiedDate":"2021-10-27"},{"lineNumber":341,"author":{"gitId":"ramapriyan912001"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":342,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":343,"author":{"gitId":"Jingwencloud"},"content":"    @Override","lastModifiedDate":"2021-10-12"},{"lineNumber":344,"author":{"gitId":"Jingwencloud"},"content":"    public void updateFilteredExpenseList(Predicate\u003cExpense\u003e predicate) {","lastModifiedDate":"2021-10-12"},{"lineNumber":345,"author":{"gitId":"Jingwencloud"},"content":"        requireNonNull(predicate);","lastModifiedDate":"2021-10-12"},{"lineNumber":346,"author":{"gitId":"Jingwencloud"},"content":"        filteredExpenses.setPredicate(predicate);","lastModifiedDate":"2021-10-21"},{"lineNumber":347,"author":{"gitId":"Jingwencloud"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":348,"author":{"gitId":"Jingwencloud"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":349,"author":{"gitId":"Jingwencloud"},"content":"    @Override","lastModifiedDate":"2021-10-06"},{"lineNumber":350,"author":{"gitId":"Jingwencloud"},"content":"    public void setExpenses(Group group) {","lastModifiedDate":"2021-10-07"},{"lineNumber":351,"author":{"gitId":"Jingwencloud"},"content":"        addressBook.setExpenses(group);","lastModifiedDate":"2021-10-07"},{"lineNumber":352,"author":{"gitId":"Jingwencloud"},"content":"        updateFilteredExpenseList(PREDICATE_SHOW_ALL_EXPENSES);","lastModifiedDate":"2021-10-14"},{"lineNumber":353,"author":{"gitId":"Jingwencloud"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":354,"author":{"gitId":"Jingwencloud"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":355,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-31"},{"lineNumber":356,"author":{"gitId":"-"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2017-05-31"},{"lineNumber":357,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2017-05-31"},{"lineNumber":358,"author":{"gitId":"-"},"content":"        if (obj \u003d\u003d this) {","lastModifiedDate":"2017-05-31"},{"lineNumber":359,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-05-31"},{"lineNumber":360,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-31"},{"lineNumber":361,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":362,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-05-31"},{"lineNumber":363,"author":{"gitId":"-"},"content":"        if (!(obj instanceof ModelManager)) {","lastModifiedDate":"2017-05-31"},{"lineNumber":364,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-05-31"},{"lineNumber":365,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-31"},{"lineNumber":366,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":367,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2017-05-31"},{"lineNumber":368,"author":{"gitId":"-"},"content":"        ModelManager other \u003d (ModelManager) obj;","lastModifiedDate":"2017-05-31"},{"lineNumber":369,"author":{"gitId":"-"},"content":"        return addressBook.equals(other.addressBook)","lastModifiedDate":"2019-01-25"},{"lineNumber":370,"author":{"gitId":"-"},"content":"                \u0026\u0026 userPrefs.equals(other.userPrefs)","lastModifiedDate":"2018-11-27"},{"lineNumber":371,"author":{"gitId":"ramapriyan912001"},"content":"                \u0026\u0026 filteredPersons.equals(other.filteredPersons)","lastModifiedDate":"2021-10-07"},{"lineNumber":372,"author":{"gitId":"ramapriyan912001"},"content":"                \u0026\u0026 filteredGroups.equals(other.filteredGroups);","lastModifiedDate":"2021-10-07"},{"lineNumber":373,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31"},{"lineNumber":374,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":375,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"marcuspeh":32,"Jingwencloud":72,"kheekheekhee":7,"chrus-chong":25,"ramapriyan912001":96,"-":143}},{"path":"src/main/java/seedu/awe/model/ReadOnlyAddressBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ramapriyan912001"},"content":"package seedu.awe.model;","lastModifiedDate":"2021-10-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"ramapriyan912001"},"content":"import java.util.List;","lastModifiedDate":"2021-10-21"},{"lineNumber":4,"author":{"gitId":"ramapriyan912001"},"content":"import java.util.Optional;","lastModifiedDate":"2021-10-25"},{"lineNumber":5,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"ramapriyan912001"},"content":"import seedu.awe.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-10-25"},{"lineNumber":8,"author":{"gitId":"Jingwencloud"},"content":"import seedu.awe.model.expense.Expense;","lastModifiedDate":"2021-10-06"},{"lineNumber":9,"author":{"gitId":"ramapriyan912001"},"content":"import seedu.awe.model.group.Group;","lastModifiedDate":"2021-10-05"},{"lineNumber":10,"author":{"gitId":"ramapriyan912001"},"content":"import seedu.awe.model.group.GroupName;","lastModifiedDate":"2021-10-05"},{"lineNumber":11,"author":{"gitId":"ramapriyan912001"},"content":"import seedu.awe.model.payment.Payment;","lastModifiedDate":"2021-10-17"},{"lineNumber":12,"author":{"gitId":"ramapriyan912001"},"content":"import seedu.awe.model.person.Person;","lastModifiedDate":"2021-10-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"ramapriyan912001"},"content":" * Unmodifiable view of an awe book","lastModifiedDate":"2021-10-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public interface ReadOnlyAddressBook {","lastModifiedDate":"2019-01-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * Returns an unmodifiable view of the persons list.","lastModifiedDate":"2016-12-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * This list will not contain any duplicate persons.","lastModifiedDate":"2016-12-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    ObservableList\u003cPerson\u003e getPersonList();","lastModifiedDate":"2018-01-10"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"ramapriyan912001"},"content":"    ObservableList\u003cGroup\u003e getGroupList();","lastModifiedDate":"2021-09-26"},{"lineNumber":26,"author":{"gitId":"Jingwencloud"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":27,"author":{"gitId":"Jingwencloud"},"content":"    /**","lastModifiedDate":"2021-10-07"},{"lineNumber":28,"author":{"gitId":"Jingwencloud"},"content":"     * Returns an unmodifiable view of the expenses list.","lastModifiedDate":"2021-10-07"},{"lineNumber":29,"author":{"gitId":"Jingwencloud"},"content":"     */","lastModifiedDate":"2021-10-07"},{"lineNumber":30,"author":{"gitId":"Jingwencloud"},"content":"    ObservableList\u003cExpense\u003e getExpenseList();","lastModifiedDate":"2021-10-06"},{"lineNumber":31,"author":{"gitId":"Jingwencloud"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":32,"author":{"gitId":"ramapriyan912001"},"content":"    /**","lastModifiedDate":"2021-10-25"},{"lineNumber":33,"author":{"gitId":"ramapriyan912001"},"content":"     * Get group from ExpenseList.","lastModifiedDate":"2021-10-25"},{"lineNumber":34,"author":{"gitId":"ramapriyan912001"},"content":"     */","lastModifiedDate":"2021-10-25"},{"lineNumber":35,"author":{"gitId":"ramapriyan912001"},"content":"    Optional\u003cGroup\u003e getGroupFromExpenseList() throws CommandException;","lastModifiedDate":"2021-10-25"},{"lineNumber":36,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":37,"author":{"gitId":"ramapriyan912001"},"content":"    /**","lastModifiedDate":"2021-10-17"},{"lineNumber":38,"author":{"gitId":"ramapriyan912001"},"content":"     * Returns an unmodifiable view of the payments list.","lastModifiedDate":"2021-10-17"},{"lineNumber":39,"author":{"gitId":"ramapriyan912001"},"content":"     */","lastModifiedDate":"2021-10-17"},{"lineNumber":40,"author":{"gitId":"ramapriyan912001"},"content":"    ObservableList\u003cPayment\u003e getPaymentList();","lastModifiedDate":"2021-10-17"},{"lineNumber":41,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":42,"author":{"gitId":"ramapriyan912001"},"content":"    Group getGroupByName(GroupName groupName);","lastModifiedDate":"2021-10-04"},{"lineNumber":43,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":44,"author":{"gitId":"ramapriyan912001"},"content":"    void setPayments(List\u003cPayment\u003e payments);","lastModifiedDate":"2021-10-21"},{"lineNumber":45,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"Jingwencloud":7,"ramapriyan912001":24,"-":14}},{"path":"src/main/java/seedu/awe/model/ReadOnlyUserPrefs.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ramapriyan912001"},"content":"package seedu.awe.model;","lastModifiedDate":"2021-10-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"ramapriyan912001"},"content":"import seedu.awe.commons.core.GuiSettings;","lastModifiedDate":"2021-10-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-11-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Unmodifiable view of user prefs.","lastModifiedDate":"2018-11-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-11-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public interface ReadOnlyUserPrefs {","lastModifiedDate":"2018-11-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    Path getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-11-27"}],"authorContributionMap":{"ramapriyan912001":2,"-":14}},{"path":"src/main/java/seedu/awe/model/UserPrefs.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ramapriyan912001"},"content":"package seedu.awe.model;","lastModifiedDate":"2021-10-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2016-09-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":9,"author":{"gitId":"ramapriyan912001"},"content":"import seedu.awe.commons.core.GuiSettings;","lastModifiedDate":"2021-10-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Represents User\u0027s preferences.","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class UserPrefs implements ReadOnlyUserPrefs {","lastModifiedDate":"2018-11-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private GuiSettings guiSettings \u003d new GuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":17,"author":{"gitId":"ramapriyan912001"},"content":"    private Path addressBookFilePath \u003d Paths.get(\"data\" , \"awe.json\");","lastModifiedDate":"2021-10-31"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-06"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * Creates a {@code UserPrefs} with default values.","lastModifiedDate":"2018-12-06"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-06"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public UserPrefs() {}","lastModifiedDate":"2018-12-06"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * Creates a {@code UserPrefs} with the prefs in {@code userPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public UserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        this();","lastModifiedDate":"2018-12-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        resetData(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-06"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Resets the existing data of this {@code UserPrefs} with {@code newUserPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-06"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public void resetData(ReadOnlyUserPrefs newUserPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        requireNonNull(newUserPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        setGuiSettings(newUserPrefs.getGuiSettings());","lastModifiedDate":"2018-12-06"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        setAddressBookFilePath(newUserPrefs.getAddressBookFilePath());","lastModifiedDate":"2018-12-06"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-06"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        return guiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        requireNonNull(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        this.guiSettings \u003d guiSettings;","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        return addressBookFilePath;","lastModifiedDate":"2017-02-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2018-04-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        requireNonNull(addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        this.addressBookFilePath \u003d addressBookFilePath;","lastModifiedDate":"2017-02-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2016-09-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2016-09-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        if (!(other instanceof UserPrefs)) { //this handles null as well.","lastModifiedDate":"2016-09-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2016-09-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        UserPrefs o \u003d (UserPrefs) other;","lastModifiedDate":"2016-09-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        return guiSettings.equals(o.guiSettings)","lastModifiedDate":"2018-11-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"                \u0026\u0026 addressBookFilePath.equals(o.addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        return Objects.hash(guiSettings, addressBookFilePath);","lastModifiedDate":"2018-08-09"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-09-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2017-02-25"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        sb.append(\"Gui Settings : \" + guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        sb.append(\"\\nLocal data file location : \" + addressBookFilePath);","lastModifiedDate":"2017-02-25"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2017-02-25"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":87,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"ramapriyan912001":3,"-":84}},{"path":"src/main/java/seedu/awe/model/expense/Cost.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kheekheekhee"},"content":"package seedu.awe.model.expense;","lastModifiedDate":"2021-10-06"},{"lineNumber":2,"author":{"gitId":"kheekheekhee"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":3,"author":{"gitId":"kheekheekhee"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-06"},{"lineNumber":4,"author":{"gitId":"kheekheekhee"},"content":"import static seedu.awe.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2021-10-06"},{"lineNumber":5,"author":{"gitId":"kheekheekhee"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":6,"author":{"gitId":"kheekheekhee"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":7,"author":{"gitId":"kheekheekhee"},"content":"public class Cost {","lastModifiedDate":"2021-10-06"},{"lineNumber":8,"author":{"gitId":"kheekheekhee"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":9,"author":{"gitId":"kheekheekhee"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2021-10-06"},{"lineNumber":10,"author":{"gitId":"kheekheekhee"},"content":"            \"Cost should only contain numeric characters without spaces up to only 2 decimal places, \"","lastModifiedDate":"2021-10-06"},{"lineNumber":11,"author":{"gitId":"kheekheekhee"},"content":"                    + \"and it should not be blank\";","lastModifiedDate":"2021-10-06"},{"lineNumber":12,"author":{"gitId":"kheekheekhee"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":13,"author":{"gitId":"kheekheekhee"},"content":"    /*","lastModifiedDate":"2021-10-06"},{"lineNumber":14,"author":{"gitId":"kheekheekhee"},"content":"     * The first character of the address must not be a whitespace,","lastModifiedDate":"2021-10-06"},{"lineNumber":15,"author":{"gitId":"kheekheekhee"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2021-10-06"},{"lineNumber":16,"author":{"gitId":"kheekheekhee"},"content":"     */","lastModifiedDate":"2021-10-06"},{"lineNumber":17,"author":{"gitId":"kheekheekhee"},"content":"    public static final String VALIDATION_REGEX \u003d \"([0-9]+)(\\\\.*)([0-9]*)\";","lastModifiedDate":"2021-10-06"},{"lineNumber":18,"author":{"gitId":"kheekheekhee"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":19,"author":{"gitId":"Jingwencloud"},"content":"    public final Double cost;","lastModifiedDate":"2021-10-07"},{"lineNumber":20,"author":{"gitId":"kheekheekhee"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":21,"author":{"gitId":"kheekheekhee"},"content":"    /**","lastModifiedDate":"2021-10-06"},{"lineNumber":22,"author":{"gitId":"kheekheekhee"},"content":"     * Constructs a {@code Cost}.","lastModifiedDate":"2021-10-06"},{"lineNumber":23,"author":{"gitId":"kheekheekhee"},"content":"     *","lastModifiedDate":"2021-10-06"},{"lineNumber":24,"author":{"gitId":"kheekheekhee"},"content":"     * @param cost A valid cost.","lastModifiedDate":"2021-10-06"},{"lineNumber":25,"author":{"gitId":"kheekheekhee"},"content":"     */","lastModifiedDate":"2021-10-06"},{"lineNumber":26,"author":{"gitId":"kheekheekhee"},"content":"    public Cost(String cost) {","lastModifiedDate":"2021-10-06"},{"lineNumber":27,"author":{"gitId":"kheekheekhee"},"content":"        requireNonNull(cost);","lastModifiedDate":"2021-10-06"},{"lineNumber":28,"author":{"gitId":"kheekheekhee"},"content":"        checkArgument(isValidCost(cost), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-06"},{"lineNumber":29,"author":{"gitId":"Jingwencloud"},"content":"        this.cost \u003d Double.parseDouble(cost);","lastModifiedDate":"2021-10-07"},{"lineNumber":30,"author":{"gitId":"kheekheekhee"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":31,"author":{"gitId":"kheekheekhee"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":32,"author":{"gitId":"ramapriyan912001"},"content":"    /**","lastModifiedDate":"2021-10-17"},{"lineNumber":33,"author":{"gitId":"ramapriyan912001"},"content":"     * Constructs a {@code Cost}.","lastModifiedDate":"2021-10-17"},{"lineNumber":34,"author":{"gitId":"ramapriyan912001"},"content":"     *","lastModifiedDate":"2021-10-17"},{"lineNumber":35,"author":{"gitId":"ramapriyan912001"},"content":"     * @param cost A valid cost of type double.","lastModifiedDate":"2021-10-17"},{"lineNumber":36,"author":{"gitId":"ramapriyan912001"},"content":"     */","lastModifiedDate":"2021-10-17"},{"lineNumber":37,"author":{"gitId":"ramapriyan912001"},"content":"    public Cost(double cost) {","lastModifiedDate":"2021-10-17"},{"lineNumber":38,"author":{"gitId":"ramapriyan912001"},"content":"        String costDoubleToString \u003d String.valueOf(cost);","lastModifiedDate":"2021-10-17"},{"lineNumber":39,"author":{"gitId":"ramapriyan912001"},"content":"        checkArgument(isValidCost(costDoubleToString), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-17"},{"lineNumber":40,"author":{"gitId":"ramapriyan912001"},"content":"        this.cost \u003d cost;","lastModifiedDate":"2021-10-17"},{"lineNumber":41,"author":{"gitId":"ramapriyan912001"},"content":"    }","lastModifiedDate":"2021-10-17"},{"lineNumber":42,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":43,"author":{"gitId":"ramapriyan912001"},"content":"    public Double getCost() {","lastModifiedDate":"2021-10-17"},{"lineNumber":44,"author":{"gitId":"ramapriyan912001"},"content":"        return cost;","lastModifiedDate":"2021-10-17"},{"lineNumber":45,"author":{"gitId":"ramapriyan912001"},"content":"    }","lastModifiedDate":"2021-10-17"},{"lineNumber":46,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":47,"author":{"gitId":"kheekheekhee"},"content":"    /**","lastModifiedDate":"2021-10-11"},{"lineNumber":48,"author":{"gitId":"kheekheekhee"},"content":"     * Sums two costs.","lastModifiedDate":"2021-10-11"},{"lineNumber":49,"author":{"gitId":"kheekheekhee"},"content":"     *","lastModifiedDate":"2021-10-11"},{"lineNumber":50,"author":{"gitId":"kheekheekhee"},"content":"     * @param c The other cost.","lastModifiedDate":"2021-10-11"},{"lineNumber":51,"author":{"gitId":"kheekheekhee"},"content":"     * @return The sum of the two costs.","lastModifiedDate":"2021-10-11"},{"lineNumber":52,"author":{"gitId":"kheekheekhee"},"content":"     */","lastModifiedDate":"2021-10-11"},{"lineNumber":53,"author":{"gitId":"kheekheekhee"},"content":"    public Cost add(Cost c) {","lastModifiedDate":"2021-10-11"},{"lineNumber":54,"author":{"gitId":"kheekheekhee"},"content":"        double result \u003d cost + c.cost;","lastModifiedDate":"2021-10-11"},{"lineNumber":55,"author":{"gitId":"kheekheekhee"},"content":"        if (result \u003c 0) {","lastModifiedDate":"2021-10-11"},{"lineNumber":56,"author":{"gitId":"kheekheekhee"},"content":"            result \u003d 0;","lastModifiedDate":"2021-10-11"},{"lineNumber":57,"author":{"gitId":"kheekheekhee"},"content":"        }","lastModifiedDate":"2021-10-11"},{"lineNumber":58,"author":{"gitId":"ramapriyan912001"},"content":"        return new Cost(result);","lastModifiedDate":"2021-10-20"},{"lineNumber":59,"author":{"gitId":"kheekheekhee"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":60,"author":{"gitId":"kheekheekhee"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":61,"author":{"gitId":"kheekheekhee"},"content":"    /**","lastModifiedDate":"2021-10-11"},{"lineNumber":62,"author":{"gitId":"kheekheekhee"},"content":"     * Subtracts two costs.","lastModifiedDate":"2021-10-11"},{"lineNumber":63,"author":{"gitId":"kheekheekhee"},"content":"     *","lastModifiedDate":"2021-10-11"},{"lineNumber":64,"author":{"gitId":"kheekheekhee"},"content":"     * @param c The other cost.","lastModifiedDate":"2021-10-11"},{"lineNumber":65,"author":{"gitId":"kheekheekhee"},"content":"     * @return Result of the subtraction of the two costs.","lastModifiedDate":"2021-10-11"},{"lineNumber":66,"author":{"gitId":"kheekheekhee"},"content":"     */","lastModifiedDate":"2021-10-11"},{"lineNumber":67,"author":{"gitId":"kheekheekhee"},"content":"    public Cost subtract(Cost c) {","lastModifiedDate":"2021-10-11"},{"lineNumber":68,"author":{"gitId":"kheekheekhee"},"content":"        double result \u003d cost - c.cost;","lastModifiedDate":"2021-10-11"},{"lineNumber":69,"author":{"gitId":"kheekheekhee"},"content":"        if (result \u003c 0) {","lastModifiedDate":"2021-10-11"},{"lineNumber":70,"author":{"gitId":"kheekheekhee"},"content":"            result \u003d 0;","lastModifiedDate":"2021-10-11"},{"lineNumber":71,"author":{"gitId":"kheekheekhee"},"content":"        }","lastModifiedDate":"2021-10-11"},{"lineNumber":72,"author":{"gitId":"ramapriyan912001"},"content":"        return new Cost(result);","lastModifiedDate":"2021-10-20"},{"lineNumber":73,"author":{"gitId":"kheekheekhee"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":74,"author":{"gitId":"kheekheekhee"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":75,"author":{"gitId":"kheekheekhee"},"content":"    /**","lastModifiedDate":"2021-10-18"},{"lineNumber":76,"author":{"gitId":"kheekheekhee"},"content":"     * Multiplies the cost by the inputted value c.","lastModifiedDate":"2021-10-18"},{"lineNumber":77,"author":{"gitId":"kheekheekhee"},"content":"     *","lastModifiedDate":"2021-10-18"},{"lineNumber":78,"author":{"gitId":"kheekheekhee"},"content":"     * @param c Value to multiply the cost by.","lastModifiedDate":"2021-10-18"},{"lineNumber":79,"author":{"gitId":"kheekheekhee"},"content":"     * @return Result of the multiplication.","lastModifiedDate":"2021-10-18"},{"lineNumber":80,"author":{"gitId":"kheekheekhee"},"content":"     */","lastModifiedDate":"2021-10-18"},{"lineNumber":81,"author":{"gitId":"kheekheekhee"},"content":"    public Cost multiply(double c) {","lastModifiedDate":"2021-10-18"},{"lineNumber":82,"author":{"gitId":"kheekheekhee"},"content":"        double result \u003d cost * c;","lastModifiedDate":"2021-10-18"},{"lineNumber":83,"author":{"gitId":"kheekheekhee"},"content":"        if (result \u003c 0) {","lastModifiedDate":"2021-10-18"},{"lineNumber":84,"author":{"gitId":"kheekheekhee"},"content":"            result \u003d 0;","lastModifiedDate":"2021-10-18"},{"lineNumber":85,"author":{"gitId":"kheekheekhee"},"content":"        }","lastModifiedDate":"2021-10-18"},{"lineNumber":86,"author":{"gitId":"ramapriyan912001"},"content":"        return new Cost(result);","lastModifiedDate":"2021-10-20"},{"lineNumber":87,"author":{"gitId":"kheekheekhee"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":88,"author":{"gitId":"kheekheekhee"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":89,"author":{"gitId":"kheekheekhee"},"content":"    /**","lastModifiedDate":"2021-10-18"},{"lineNumber":90,"author":{"gitId":"kheekheekhee"},"content":"     * Divides the cost by the inputted value c.","lastModifiedDate":"2021-10-18"},{"lineNumber":91,"author":{"gitId":"kheekheekhee"},"content":"     *","lastModifiedDate":"2021-10-18"},{"lineNumber":92,"author":{"gitId":"kheekheekhee"},"content":"     * @param c Value to divide the cost by.","lastModifiedDate":"2021-10-18"},{"lineNumber":93,"author":{"gitId":"kheekheekhee"},"content":"     * @return Result of the division.","lastModifiedDate":"2021-10-18"},{"lineNumber":94,"author":{"gitId":"kheekheekhee"},"content":"     */","lastModifiedDate":"2021-10-18"},{"lineNumber":95,"author":{"gitId":"kheekheekhee"},"content":"    public Cost divide(double c) {","lastModifiedDate":"2021-10-18"},{"lineNumber":96,"author":{"gitId":"kheekheekhee"},"content":"        double result \u003d cost / c;","lastModifiedDate":"2021-10-18"},{"lineNumber":97,"author":{"gitId":"kheekheekhee"},"content":"        if (result \u003c 0) {","lastModifiedDate":"2021-10-18"},{"lineNumber":98,"author":{"gitId":"kheekheekhee"},"content":"            result \u003d 0;","lastModifiedDate":"2021-10-18"},{"lineNumber":99,"author":{"gitId":"kheekheekhee"},"content":"        }","lastModifiedDate":"2021-10-18"},{"lineNumber":100,"author":{"gitId":"ramapriyan912001"},"content":"        return new Cost(result);","lastModifiedDate":"2021-10-20"},{"lineNumber":101,"author":{"gitId":"kheekheekhee"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":102,"author":{"gitId":"kheekheekhee"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":103,"author":{"gitId":"kheekheekhee"},"content":"    /**","lastModifiedDate":"2021-10-06"},{"lineNumber":104,"author":{"gitId":"kheekheekhee"},"content":"     * Returns true if a given string is a valid cost.","lastModifiedDate":"2021-10-06"},{"lineNumber":105,"author":{"gitId":"kheekheekhee"},"content":"     */","lastModifiedDate":"2021-10-06"},{"lineNumber":106,"author":{"gitId":"kheekheekhee"},"content":"    public static boolean isValidCost(String test) {","lastModifiedDate":"2021-10-06"},{"lineNumber":107,"author":{"gitId":"kheekheekhee"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2021-10-06"},{"lineNumber":108,"author":{"gitId":"kheekheekhee"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":109,"author":{"gitId":"kheekheekhee"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":110,"author":{"gitId":"kheekheekhee"},"content":"    @Override","lastModifiedDate":"2021-10-06"},{"lineNumber":111,"author":{"gitId":"kheekheekhee"},"content":"    public String toString() {","lastModifiedDate":"2021-10-06"},{"lineNumber":112,"author":{"gitId":"kheekheekhee"},"content":"        return String.format(\"%.2f\", cost);","lastModifiedDate":"2021-10-06"},{"lineNumber":113,"author":{"gitId":"kheekheekhee"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":114,"author":{"gitId":"kheekheekhee"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":115,"author":{"gitId":"kheekheekhee"},"content":"    @Override","lastModifiedDate":"2021-10-06"},{"lineNumber":116,"author":{"gitId":"kheekheekhee"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-06"},{"lineNumber":117,"author":{"gitId":"kheekheekhee"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-10-06"},{"lineNumber":118,"author":{"gitId":"kheekheekhee"},"content":"                || (other instanceof Cost // instanceof handles nulls","lastModifiedDate":"2021-10-06"},{"lineNumber":119,"author":{"gitId":"ramapriyan912001"},"content":"                \u0026\u0026 Math.abs(cost - ((Cost) other).getCost()) \u003c 0.01);","lastModifiedDate":"2021-10-29"},{"lineNumber":120,"author":{"gitId":"kheekheekhee"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":121,"author":{"gitId":"kheekheekhee"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":122,"author":{"gitId":"kheekheekhee"},"content":"    @Override","lastModifiedDate":"2021-10-06"},{"lineNumber":123,"author":{"gitId":"kheekheekhee"},"content":"    public int hashCode() {","lastModifiedDate":"2021-10-06"},{"lineNumber":124,"author":{"gitId":"kheekheekhee"},"content":"        return cost.hashCode();","lastModifiedDate":"2021-10-06"},{"lineNumber":125,"author":{"gitId":"kheekheekhee"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":126,"author":{"gitId":"kheekheekhee"},"content":"}","lastModifiedDate":"2021-10-06"}],"authorContributionMap":{"Jingwencloud":2,"kheekheekhee":104,"ramapriyan912001":20}},{"path":"src/main/java/seedu/awe/model/expense/Description.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kheekheekhee"},"content":"package seedu.awe.model.expense;","lastModifiedDate":"2021-10-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-06"},{"lineNumber":4,"author":{"gitId":"kheekheekhee"},"content":"import static seedu.awe.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2021-10-06"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":6,"author":{"gitId":"kheekheekhee"},"content":"public class Description {","lastModifiedDate":"2021-10-06"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2021-10-06"},{"lineNumber":8,"author":{"gitId":"-"},"content":"            \"Names should only contain alphanumeric characters and spaces, and it should not be blank\";","lastModifiedDate":"2021-10-06"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2021-10-06"},{"lineNumber":11,"author":{"gitId":"-"},"content":"     * The first character of the address must not be a whitespace,","lastModifiedDate":"2021-10-06"},{"lineNumber":12,"author":{"gitId":"-"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2021-10-06"},{"lineNumber":13,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-10-06"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d \"[\\\\p{Alnum}][\\\\p{Alnum} ]*\";","lastModifiedDate":"2021-10-06"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":16,"author":{"gitId":"ramapriyan912001"},"content":"    private final String fullDescription;","lastModifiedDate":"2021-10-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-10-06"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * Constructs a {@code Name}.","lastModifiedDate":"2021-10-06"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2021-10-06"},{"lineNumber":21,"author":{"gitId":"kheekheekhee"},"content":"     * @param description A valid name.","lastModifiedDate":"2021-10-06"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-10-06"},{"lineNumber":23,"author":{"gitId":"kheekheekhee"},"content":"    public Description(String description) {","lastModifiedDate":"2021-10-06"},{"lineNumber":24,"author":{"gitId":"kheekheekhee"},"content":"        requireNonNull(description);","lastModifiedDate":"2021-10-06"},{"lineNumber":25,"author":{"gitId":"kheekheekhee"},"content":"        checkArgument(isValidDescription(description), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-06"},{"lineNumber":26,"author":{"gitId":"kheekheekhee"},"content":"        fullDescription \u003d description;","lastModifiedDate":"2021-10-06"},{"lineNumber":27,"author":{"gitId":"kheekheekhee"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":28,"author":{"gitId":"kheekheekhee"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":29,"author":{"gitId":"ramapriyan912001"},"content":"    public String getFullDescription() {","lastModifiedDate":"2021-10-09"},{"lineNumber":30,"author":{"gitId":"ramapriyan912001"},"content":"        return fullDescription;","lastModifiedDate":"2021-10-09"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-10-06"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Returns true if a given string is a valid name.","lastModifiedDate":"2021-10-06"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-10-06"},{"lineNumber":36,"author":{"gitId":"kheekheekhee"},"content":"    public static boolean isValidDescription(String test) {","lastModifiedDate":"2021-10-06"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2021-10-06"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2021-10-06"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2021-10-06"},{"lineNumber":43,"author":{"gitId":"kheekheekhee"},"content":"        return fullDescription;","lastModifiedDate":"2021-10-06"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2021-10-06"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-06"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-10-06"},{"lineNumber":49,"author":{"gitId":"kheekheekhee"},"content":"                || (other instanceof Description // instanceof handles nulls","lastModifiedDate":"2021-10-06"},{"lineNumber":50,"author":{"gitId":"kheekheekhee"},"content":"                \u0026\u0026 fullDescription.equals(((Description) other).fullDescription)); // state check","lastModifiedDate":"2021-10-06"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2021-10-06"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2021-10-06"},{"lineNumber":55,"author":{"gitId":"kheekheekhee"},"content":"        return fullDescription.hashCode();","lastModifiedDate":"2021-10-06"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":57,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-10-06"}],"authorContributionMap":{"kheekheekhee":15,"ramapriyan912001":3,"-":39}},{"path":"src/main/java/seedu/awe/model/expense/DescriptionContainsKeywordsPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Jingwencloud"},"content":"package seedu.awe.model.expense;","lastModifiedDate":"2021-10-12"},{"lineNumber":2,"author":{"gitId":"Jingwencloud"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":3,"author":{"gitId":"Jingwencloud"},"content":"import java.util.List;","lastModifiedDate":"2021-10-12"},{"lineNumber":4,"author":{"gitId":"Jingwencloud"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2021-10-12"},{"lineNumber":5,"author":{"gitId":"Jingwencloud"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":6,"author":{"gitId":"Jingwencloud"},"content":"import seedu.awe.commons.util.StringUtil;","lastModifiedDate":"2021-10-12"},{"lineNumber":7,"author":{"gitId":"Jingwencloud"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":8,"author":{"gitId":"Jingwencloud"},"content":"/**","lastModifiedDate":"2021-10-12"},{"lineNumber":9,"author":{"gitId":"Jingwencloud"},"content":" * Tests that an {@code Expense}\u0027s {@code Description} matches any of the keywords given.","lastModifiedDate":"2021-10-12"},{"lineNumber":10,"author":{"gitId":"Jingwencloud"},"content":" */","lastModifiedDate":"2021-10-12"},{"lineNumber":11,"author":{"gitId":"Jingwencloud"},"content":"public class DescriptionContainsKeywordsPredicate implements Predicate\u003cExpense\u003e {","lastModifiedDate":"2021-10-12"},{"lineNumber":12,"author":{"gitId":"Jingwencloud"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":13,"author":{"gitId":"Jingwencloud"},"content":"    private final List\u003cString\u003e keywords;","lastModifiedDate":"2021-10-12"},{"lineNumber":14,"author":{"gitId":"Jingwencloud"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":15,"author":{"gitId":"Jingwencloud"},"content":"    /**","lastModifiedDate":"2021-10-12"},{"lineNumber":16,"author":{"gitId":"Jingwencloud"},"content":"     * A public constructor to initialise the list of keywords","lastModifiedDate":"2021-10-12"},{"lineNumber":17,"author":{"gitId":"Jingwencloud"},"content":"     * to the given one.","lastModifiedDate":"2021-10-12"},{"lineNumber":18,"author":{"gitId":"Jingwencloud"},"content":"     *","lastModifiedDate":"2021-10-12"},{"lineNumber":19,"author":{"gitId":"Jingwencloud"},"content":"     * @param keywords The list of keywords.","lastModifiedDate":"2021-10-12"},{"lineNumber":20,"author":{"gitId":"Jingwencloud"},"content":"     */","lastModifiedDate":"2021-10-12"},{"lineNumber":21,"author":{"gitId":"Jingwencloud"},"content":"    public DescriptionContainsKeywordsPredicate(List\u003cString\u003e keywords) {","lastModifiedDate":"2021-10-12"},{"lineNumber":22,"author":{"gitId":"Jingwencloud"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":23,"author":{"gitId":"Jingwencloud"},"content":"        this.keywords \u003d keywords;","lastModifiedDate":"2021-10-12"},{"lineNumber":24,"author":{"gitId":"Jingwencloud"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":25,"author":{"gitId":"Jingwencloud"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":26,"author":{"gitId":"Jingwencloud"},"content":"    @Override","lastModifiedDate":"2021-10-12"},{"lineNumber":27,"author":{"gitId":"Jingwencloud"},"content":"    public boolean test(Expense expense) {","lastModifiedDate":"2021-10-12"},{"lineNumber":28,"author":{"gitId":"Jingwencloud"},"content":"        return keywords.stream()","lastModifiedDate":"2021-10-12"},{"lineNumber":29,"author":{"gitId":"Jingwencloud"},"content":"                .anyMatch(keyword -\u003e StringUtil.containsWordIgnoreCase(expense.getDescription().toString(), keyword));","lastModifiedDate":"2021-10-12"},{"lineNumber":30,"author":{"gitId":"Jingwencloud"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":31,"author":{"gitId":"Jingwencloud"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":32,"author":{"gitId":"Jingwencloud"},"content":"    @Override","lastModifiedDate":"2021-10-12"},{"lineNumber":33,"author":{"gitId":"Jingwencloud"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-12"},{"lineNumber":34,"author":{"gitId":"Jingwencloud"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2021-10-12"},{"lineNumber":35,"author":{"gitId":"Jingwencloud"},"content":"            return true;","lastModifiedDate":"2021-10-12"},{"lineNumber":36,"author":{"gitId":"Jingwencloud"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":37,"author":{"gitId":"Jingwencloud"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":38,"author":{"gitId":"Jingwencloud"},"content":"        if (!(other instanceof DescriptionContainsKeywordsPredicate)) { // instanceof handles nulls","lastModifiedDate":"2021-10-12"},{"lineNumber":39,"author":{"gitId":"Jingwencloud"},"content":"            return false;","lastModifiedDate":"2021-10-12"},{"lineNumber":40,"author":{"gitId":"Jingwencloud"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":41,"author":{"gitId":"Jingwencloud"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":42,"author":{"gitId":"Jingwencloud"},"content":"        return keywords.equals(((DescriptionContainsKeywordsPredicate) other).keywords); // state check","lastModifiedDate":"2021-10-12"},{"lineNumber":43,"author":{"gitId":"Jingwencloud"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":44,"author":{"gitId":"Jingwencloud"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":45,"author":{"gitId":"Jingwencloud"},"content":"}","lastModifiedDate":"2021-10-12"},{"lineNumber":46,"author":{"gitId":"Jingwencloud"},"content":"","lastModifiedDate":"2021-10-12"}],"authorContributionMap":{"Jingwencloud":46}},{"path":"src/main/java/seedu/awe/model/expense/Expense.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kheekheekhee"},"content":"package seedu.awe.model.expense;","lastModifiedDate":"2021-10-06"},{"lineNumber":2,"author":{"gitId":"kheekheekhee"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":3,"author":{"gitId":"marcuspeh"},"content":"import static seedu.awe.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2021-10-10"},{"lineNumber":4,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":5,"author":{"gitId":"kheekheekhee"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-11"},{"lineNumber":6,"author":{"gitId":"ramapriyan912001"},"content":"import java.util.HashMap;","lastModifiedDate":"2021-10-20"},{"lineNumber":7,"author":{"gitId":"kheekheekhee"},"content":"import java.util.List;","lastModifiedDate":"2021-10-11"},{"lineNumber":8,"author":{"gitId":"ramapriyan912001"},"content":"import java.util.Map;","lastModifiedDate":"2021-10-20"},{"lineNumber":9,"author":{"gitId":"kheekheekhee"},"content":"import java.util.Objects;","lastModifiedDate":"2021-10-06"},{"lineNumber":10,"author":{"gitId":"marcuspeh"},"content":"import java.util.Optional;","lastModifiedDate":"2021-10-10"},{"lineNumber":11,"author":{"gitId":"kheekheekhee"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":12,"author":{"gitId":"kheekheekhee"},"content":"import seedu.awe.model.person.Person;","lastModifiedDate":"2021-10-06"},{"lineNumber":13,"author":{"gitId":"kheekheekhee"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":14,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":15,"author":{"gitId":"kheekheekhee"},"content":"public class Expense {","lastModifiedDate":"2021-10-06"},{"lineNumber":16,"author":{"gitId":"kheekheekhee"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":17,"author":{"gitId":"kheekheekhee"},"content":"    // identity fields","lastModifiedDate":"2021-10-06"},{"lineNumber":18,"author":{"gitId":"kheekheekhee"},"content":"    private final Person payer;","lastModifiedDate":"2021-10-06"},{"lineNumber":19,"author":{"gitId":"kheekheekhee"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":20,"author":{"gitId":"kheekheekhee"},"content":"    // data fields","lastModifiedDate":"2021-10-06"},{"lineNumber":21,"author":{"gitId":"kheekheekhee"},"content":"    private final Cost cost;","lastModifiedDate":"2021-10-06"},{"lineNumber":22,"author":{"gitId":"kheekheekhee"},"content":"    private final Description description;","lastModifiedDate":"2021-10-06"},{"lineNumber":23,"author":{"gitId":"kheekheekhee"},"content":"    private final List\u003cPerson\u003e included;","lastModifiedDate":"2021-10-17"},{"lineNumber":24,"author":{"gitId":"ramapriyan912001"},"content":"    private final Map\u003cPerson, Cost\u003e individualExpenses;","lastModifiedDate":"2021-10-20"},{"lineNumber":25,"author":{"gitId":"kheekheekhee"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":26,"author":{"gitId":"marcuspeh"},"content":"    // data processed fields","lastModifiedDate":"2021-10-25"},{"lineNumber":27,"author":{"gitId":"marcuspeh"},"content":"    private final Map\u003cPerson, Cost\u003e splitExpenses;","lastModifiedDate":"2021-10-25"},{"lineNumber":28,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":29,"author":{"gitId":"kheekheekhee"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":30,"author":{"gitId":"kheekheekhee"},"content":"    /**","lastModifiedDate":"2021-10-11"},{"lineNumber":31,"author":{"gitId":"kheekheekhee"},"content":"     * Constructs an {@code Expense}.","lastModifiedDate":"2021-10-11"},{"lineNumber":32,"author":{"gitId":"kheekheekhee"},"content":"     *","lastModifiedDate":"2021-10-11"},{"lineNumber":33,"author":{"gitId":"kheekheekhee"},"content":"     * @param payer of expense.","lastModifiedDate":"2021-10-11"},{"lineNumber":34,"author":{"gitId":"kheekheekhee"},"content":"     * @param cost of expense.","lastModifiedDate":"2021-10-11"},{"lineNumber":35,"author":{"gitId":"kheekheekhee"},"content":"     * @param description of expense.","lastModifiedDate":"2021-10-11"},{"lineNumber":36,"author":{"gitId":"kheekheekhee"},"content":"     * @param included Persons to be included into paying the expense.","lastModifiedDate":"2021-10-17"},{"lineNumber":37,"author":{"gitId":"kheekheekhee"},"content":"     */","lastModifiedDate":"2021-10-11"},{"lineNumber":38,"author":{"gitId":"kheekheekhee"},"content":"    public Expense(Person payer, Cost cost, Description description, List\u003cPerson\u003e included) {","lastModifiedDate":"2021-10-17"},{"lineNumber":39,"author":{"gitId":"marcuspeh"},"content":"        this(payer, cost, description, included, new HashMap\u003c\u003e());","lastModifiedDate":"2021-10-25"},{"lineNumber":40,"author":{"gitId":"ramapriyan912001"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":41,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":42,"author":{"gitId":"ramapriyan912001"},"content":"    /**","lastModifiedDate":"2021-10-20"},{"lineNumber":43,"author":{"gitId":"ramapriyan912001"},"content":"     * Constructs an {@code Expense}.","lastModifiedDate":"2021-10-20"},{"lineNumber":44,"author":{"gitId":"marcuspeh"},"content":"     *","lastModifiedDate":"2021-10-25"},{"lineNumber":45,"author":{"gitId":"ramapriyan912001"},"content":"     * @param payer of expense.","lastModifiedDate":"2021-10-20"},{"lineNumber":46,"author":{"gitId":"ramapriyan912001"},"content":"     * @param cost of expense.","lastModifiedDate":"2021-10-20"},{"lineNumber":47,"author":{"gitId":"ramapriyan912001"},"content":"     * @param description of expense.","lastModifiedDate":"2021-10-20"},{"lineNumber":48,"author":{"gitId":"ramapriyan912001"},"content":"     * @param included Persons to be included into paying the expense.","lastModifiedDate":"2021-10-20"},{"lineNumber":49,"author":{"gitId":"ramapriyan912001"},"content":"     * @param individualExpenses Expense of each included person.","lastModifiedDate":"2021-10-20"},{"lineNumber":50,"author":{"gitId":"ramapriyan912001"},"content":"     */","lastModifiedDate":"2021-10-20"},{"lineNumber":51,"author":{"gitId":"ramapriyan912001"},"content":"    public Expense(Person payer, Cost cost, Description description, List\u003cPerson\u003e included,","lastModifiedDate":"2021-10-20"},{"lineNumber":52,"author":{"gitId":"ramapriyan912001"},"content":"                   Map\u003cPerson, Cost\u003e individualExpenses) {","lastModifiedDate":"2021-10-20"},{"lineNumber":53,"author":{"gitId":"ramapriyan912001"},"content":"        this.payer \u003d payer;","lastModifiedDate":"2021-10-20"},{"lineNumber":54,"author":{"gitId":"ramapriyan912001"},"content":"        this.cost \u003d cost;","lastModifiedDate":"2021-10-20"},{"lineNumber":55,"author":{"gitId":"ramapriyan912001"},"content":"        this.description \u003d description;","lastModifiedDate":"2021-10-20"},{"lineNumber":56,"author":{"gitId":"ramapriyan912001"},"content":"        this.included \u003d included;","lastModifiedDate":"2021-10-20"},{"lineNumber":57,"author":{"gitId":"ramapriyan912001"},"content":"        this.individualExpenses \u003d individualExpenses;","lastModifiedDate":"2021-10-20"},{"lineNumber":58,"author":{"gitId":"marcuspeh"},"content":"        this.splitExpenses \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2021-10-25"},{"lineNumber":59,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":60,"author":{"gitId":"marcuspeh"},"content":"        calculateSplitExpense();","lastModifiedDate":"2021-10-25"},{"lineNumber":61,"author":{"gitId":"ramapriyan912001"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":62,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":63,"author":{"gitId":"marcuspeh"},"content":"    /**","lastModifiedDate":"2021-10-25"},{"lineNumber":64,"author":{"gitId":"marcuspeh"},"content":"     * Calculates the amount each person has to pay for this expense.","lastModifiedDate":"2021-10-25"},{"lineNumber":65,"author":{"gitId":"marcuspeh"},"content":"     */","lastModifiedDate":"2021-10-25"},{"lineNumber":66,"author":{"gitId":"marcuspeh"},"content":"    public void calculateSplitExpense() {","lastModifiedDate":"2021-10-25"},{"lineNumber":67,"author":{"gitId":"marcuspeh"},"content":"        double toSplitAmount \u003d cost.getCost();","lastModifiedDate":"2021-10-25"},{"lineNumber":68,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":69,"author":{"gitId":"marcuspeh"},"content":"        for (Map.Entry\u003cPerson, Cost\u003e entry : individualExpenses.entrySet()) {","lastModifiedDate":"2021-10-25"},{"lineNumber":70,"author":{"gitId":"marcuspeh"},"content":"            splitExpenses.put(entry.getKey(), entry.getValue());","lastModifiedDate":"2021-10-25"},{"lineNumber":71,"author":{"gitId":"marcuspeh"},"content":"            toSplitAmount -\u003d entry.getValue().getCost();","lastModifiedDate":"2021-10-25"},{"lineNumber":72,"author":{"gitId":"marcuspeh"},"content":"        }","lastModifiedDate":"2021-10-25"},{"lineNumber":73,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":74,"author":{"gitId":"marcuspeh"},"content":"        toSplitAmount \u003d toSplitAmount / (included.size() - individualExpenses.size());","lastModifiedDate":"2021-10-25"},{"lineNumber":75,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":76,"author":{"gitId":"marcuspeh"},"content":"        for (Person person: included) {","lastModifiedDate":"2021-10-25"},{"lineNumber":77,"author":{"gitId":"marcuspeh"},"content":"            splitExpenses.putIfAbsent(person, new Cost(toSplitAmount));","lastModifiedDate":"2021-10-25"},{"lineNumber":78,"author":{"gitId":"marcuspeh"},"content":"        }","lastModifiedDate":"2021-10-25"},{"lineNumber":79,"author":{"gitId":"kheekheekhee"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":80,"author":{"gitId":"kheekheekhee"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":81,"author":{"gitId":"marcuspeh"},"content":"    public Map\u003cPerson, Cost\u003e getSplitExpenses() {","lastModifiedDate":"2021-10-25"},{"lineNumber":82,"author":{"gitId":"marcuspeh"},"content":"        return splitExpenses;","lastModifiedDate":"2021-10-25"},{"lineNumber":83,"author":{"gitId":"kheekheekhee"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":84,"author":{"gitId":"kheekheekhee"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":85,"author":{"gitId":"kheekheekhee"},"content":"    public Person getPayer() {","lastModifiedDate":"2021-10-06"},{"lineNumber":86,"author":{"gitId":"kheekheekhee"},"content":"        return payer;","lastModifiedDate":"2021-10-06"},{"lineNumber":87,"author":{"gitId":"kheekheekhee"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":88,"author":{"gitId":"kheekheekhee"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":89,"author":{"gitId":"kheekheekhee"},"content":"    public Cost getCost() {","lastModifiedDate":"2021-10-06"},{"lineNumber":90,"author":{"gitId":"kheekheekhee"},"content":"        return cost;","lastModifiedDate":"2021-10-06"},{"lineNumber":91,"author":{"gitId":"kheekheekhee"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":92,"author":{"gitId":"kheekheekhee"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":93,"author":{"gitId":"kheekheekhee"},"content":"    public Description getDescription() {","lastModifiedDate":"2021-10-06"},{"lineNumber":94,"author":{"gitId":"kheekheekhee"},"content":"        return description;","lastModifiedDate":"2021-10-06"},{"lineNumber":95,"author":{"gitId":"kheekheekhee"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":96,"author":{"gitId":"kheekheekhee"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":97,"author":{"gitId":"kheekheekhee"},"content":"    public List\u003cPerson\u003e getIncluded() {","lastModifiedDate":"2021-10-17"},{"lineNumber":98,"author":{"gitId":"kheekheekhee"},"content":"        return included;","lastModifiedDate":"2021-10-17"},{"lineNumber":99,"author":{"gitId":"kheekheekhee"},"content":"    }","lastModifiedDate":"2021-10-17"},{"lineNumber":100,"author":{"gitId":"kheekheekhee"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":101,"author":{"gitId":"ramapriyan912001"},"content":"    public Map\u003cPerson, Cost\u003e getIndividualExpenses() {","lastModifiedDate":"2021-10-20"},{"lineNumber":102,"author":{"gitId":"ramapriyan912001"},"content":"        return individualExpenses;","lastModifiedDate":"2021-10-20"},{"lineNumber":103,"author":{"gitId":"ramapriyan912001"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":104,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":105,"author":{"gitId":"marcuspeh"},"content":"    /**","lastModifiedDate":"2021-10-10"},{"lineNumber":106,"author":{"gitId":"marcuspeh"},"content":"     * Replaces the payee {@code target} with {@code editedPerson}.","lastModifiedDate":"2021-10-10"},{"lineNumber":107,"author":{"gitId":"marcuspeh"},"content":"     */","lastModifiedDate":"2021-10-10"},{"lineNumber":108,"author":{"gitId":"marcuspeh"},"content":"    public Optional\u003cExpense\u003e updatePerson(Person target, Person editedPerson) {","lastModifiedDate":"2021-10-10"},{"lineNumber":109,"author":{"gitId":"marcuspeh"},"content":"        requireAllNonNull(target, editedPerson);","lastModifiedDate":"2021-10-10"},{"lineNumber":110,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":111,"author":{"gitId":"marcuspeh"},"content":"        Person payer \u003d this.payer;","lastModifiedDate":"2021-10-25"},{"lineNumber":112,"author":{"gitId":"marcuspeh"},"content":"        List\u003cPerson\u003e included \u003d new ArrayList\u003c\u003e(this.included);","lastModifiedDate":"2021-10-25"},{"lineNumber":113,"author":{"gitId":"marcuspeh"},"content":"        Map\u003cPerson, Cost\u003e individualExpenses \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2021-10-27"},{"lineNumber":114,"author":{"gitId":"marcuspeh"},"content":"        individualExpenses.putAll(this.individualExpenses);","lastModifiedDate":"2021-10-27"},{"lineNumber":115,"author":{"gitId":"marcuspeh"},"content":"        boolean isModified \u003d false;","lastModifiedDate":"2021-10-25"},{"lineNumber":116,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":117,"author":{"gitId":"marcuspeh"},"content":"        if (payer.equals(target)) {","lastModifiedDate":"2021-10-10"},{"lineNumber":118,"author":{"gitId":"marcuspeh"},"content":"            payer \u003d editedPerson;","lastModifiedDate":"2021-10-25"},{"lineNumber":119,"author":{"gitId":"marcuspeh"},"content":"            isModified \u003d true;","lastModifiedDate":"2021-10-25"},{"lineNumber":120,"author":{"gitId":"marcuspeh"},"content":"        }","lastModifiedDate":"2021-10-25"},{"lineNumber":121,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":122,"author":{"gitId":"marcuspeh"},"content":"        if (included.contains(target)) {","lastModifiedDate":"2021-10-25"},{"lineNumber":123,"author":{"gitId":"marcuspeh"},"content":"            included.set(included.indexOf(target), editedPerson);","lastModifiedDate":"2021-10-25"},{"lineNumber":124,"author":{"gitId":"marcuspeh"},"content":"            isModified \u003d true;","lastModifiedDate":"2021-10-25"},{"lineNumber":125,"author":{"gitId":"marcuspeh"},"content":"        }","lastModifiedDate":"2021-10-25"},{"lineNumber":126,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":127,"author":{"gitId":"marcuspeh"},"content":"        Cost toAddBack \u003d individualExpenses.remove(target);","lastModifiedDate":"2021-10-25"},{"lineNumber":128,"author":{"gitId":"marcuspeh"},"content":"        if (!Objects.isNull(toAddBack)) {","lastModifiedDate":"2021-10-25"},{"lineNumber":129,"author":{"gitId":"marcuspeh"},"content":"            individualExpenses.put(editedPerson, toAddBack);","lastModifiedDate":"2021-10-25"},{"lineNumber":130,"author":{"gitId":"marcuspeh"},"content":"            isModified \u003d true;","lastModifiedDate":"2021-10-25"},{"lineNumber":131,"author":{"gitId":"marcuspeh"},"content":"        }","lastModifiedDate":"2021-10-10"},{"lineNumber":132,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":133,"author":{"gitId":"marcuspeh"},"content":"        return isModified","lastModifiedDate":"2021-10-25"},{"lineNumber":134,"author":{"gitId":"marcuspeh"},"content":"                ? Optional.ofNullable(new Expense(payer, cost, description, included, individualExpenses))","lastModifiedDate":"2021-10-25"},{"lineNumber":135,"author":{"gitId":"marcuspeh"},"content":"                : Optional.empty();","lastModifiedDate":"2021-10-25"},{"lineNumber":136,"author":{"gitId":"marcuspeh"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":137,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":138,"author":{"gitId":"kheekheekhee"},"content":"    @Override","lastModifiedDate":"2021-10-06"},{"lineNumber":139,"author":{"gitId":"kheekheekhee"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-06"},{"lineNumber":140,"author":{"gitId":"kheekheekhee"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2021-10-06"},{"lineNumber":141,"author":{"gitId":"kheekheekhee"},"content":"            return true;","lastModifiedDate":"2021-10-06"},{"lineNumber":142,"author":{"gitId":"kheekheekhee"},"content":"        }","lastModifiedDate":"2021-10-06"},{"lineNumber":143,"author":{"gitId":"kheekheekhee"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":144,"author":{"gitId":"kheekheekhee"},"content":"        if (!(other instanceof Expense)) {","lastModifiedDate":"2021-10-06"},{"lineNumber":145,"author":{"gitId":"kheekheekhee"},"content":"            return false;","lastModifiedDate":"2021-10-06"},{"lineNumber":146,"author":{"gitId":"kheekheekhee"},"content":"        }","lastModifiedDate":"2021-10-06"},{"lineNumber":147,"author":{"gitId":"kheekheekhee"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":148,"author":{"gitId":"kheekheekhee"},"content":"        Expense otherExpense \u003d (Expense) other;","lastModifiedDate":"2021-10-06"},{"lineNumber":149,"author":{"gitId":"kheekheekhee"},"content":"        return otherExpense.getPayer().equals(getPayer())","lastModifiedDate":"2021-10-06"},{"lineNumber":150,"author":{"gitId":"kheekheekhee"},"content":"                \u0026\u0026 otherExpense.getCost().equals(getCost())","lastModifiedDate":"2021-10-06"},{"lineNumber":151,"author":{"gitId":"kheekheekhee"},"content":"                \u0026\u0026 otherExpense.getDescription().equals(getDescription());","lastModifiedDate":"2021-10-06"},{"lineNumber":152,"author":{"gitId":"kheekheekhee"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":153,"author":{"gitId":"kheekheekhee"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":154,"author":{"gitId":"kheekheekhee"},"content":"    @Override","lastModifiedDate":"2021-10-06"},{"lineNumber":155,"author":{"gitId":"kheekheekhee"},"content":"    public int hashCode() {","lastModifiedDate":"2021-10-06"},{"lineNumber":156,"author":{"gitId":"kheekheekhee"},"content":"        return Objects.hash(payer, cost, description);","lastModifiedDate":"2021-10-06"},{"lineNumber":157,"author":{"gitId":"kheekheekhee"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":158,"author":{"gitId":"kheekheekhee"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":159,"author":{"gitId":"kheekheekhee"},"content":"    @Override","lastModifiedDate":"2021-10-06"},{"lineNumber":160,"author":{"gitId":"kheekheekhee"},"content":"    public String toString() {","lastModifiedDate":"2021-10-06"},{"lineNumber":161,"author":{"gitId":"kheekheekhee"},"content":"        final StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2021-10-06"},{"lineNumber":162,"author":{"gitId":"kheekheekhee"},"content":"        builder.append(getPayer())","lastModifiedDate":"2021-10-06"},{"lineNumber":163,"author":{"gitId":"kheekheekhee"},"content":"                .append(\" paid \")","lastModifiedDate":"2021-10-06"},{"lineNumber":164,"author":{"gitId":"kheekheekhee"},"content":"                .append(getCost())","lastModifiedDate":"2021-10-06"},{"lineNumber":165,"author":{"gitId":"kheekheekhee"},"content":"                .append(\" for \")","lastModifiedDate":"2021-10-06"},{"lineNumber":166,"author":{"gitId":"kheekheekhee"},"content":"                .append(getDescription())","lastModifiedDate":"2021-10-06"},{"lineNumber":167,"author":{"gitId":"kheekheekhee"},"content":"                .append(\".\");","lastModifiedDate":"2021-10-06"},{"lineNumber":168,"author":{"gitId":"kheekheekhee"},"content":"        return builder.toString();","lastModifiedDate":"2021-10-06"},{"lineNumber":169,"author":{"gitId":"kheekheekhee"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":170,"author":{"gitId":"kheekheekhee"},"content":"}","lastModifiedDate":"2021-10-06"}],"authorContributionMap":{"marcuspeh":63,"kheekheekhee":81,"ramapriyan912001":26}},{"path":"src/main/java/seedu/awe/model/expense/ExpenseList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kheekheekhee"},"content":"package seedu.awe.model.expense;","lastModifiedDate":"2021-10-12"},{"lineNumber":2,"author":{"gitId":"kheekheekhee"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":3,"author":{"gitId":"kheekheekhee"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-12"},{"lineNumber":4,"author":{"gitId":"kheekheekhee"},"content":"import static seedu.awe.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2021-10-12"},{"lineNumber":5,"author":{"gitId":"kheekheekhee"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":6,"author":{"gitId":"kheekheekhee"},"content":"import java.util.Iterator;","lastModifiedDate":"2021-10-12"},{"lineNumber":7,"author":{"gitId":"kheekheekhee"},"content":"import java.util.List;","lastModifiedDate":"2021-10-12"},{"lineNumber":8,"author":{"gitId":"Jingwencloud"},"content":"import java.util.Optional;","lastModifiedDate":"2021-10-13"},{"lineNumber":9,"author":{"gitId":"kheekheekhee"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":10,"author":{"gitId":"kheekheekhee"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2021-10-12"},{"lineNumber":11,"author":{"gitId":"kheekheekhee"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-10-12"},{"lineNumber":12,"author":{"gitId":"kheekheekhee"},"content":"import seedu.awe.model.expense.exceptions.ExpenseNotFoundException;","lastModifiedDate":"2021-10-12"},{"lineNumber":13,"author":{"gitId":"Jingwencloud"},"content":"import seedu.awe.model.group.Group;","lastModifiedDate":"2021-10-13"},{"lineNumber":14,"author":{"gitId":"kheekheekhee"},"content":"import seedu.awe.model.person.exceptions.DuplicatePersonException;","lastModifiedDate":"2021-10-12"},{"lineNumber":15,"author":{"gitId":"kheekheekhee"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":16,"author":{"gitId":"kheekheekhee"},"content":"public class ExpenseList implements Iterable\u003cExpense\u003e {","lastModifiedDate":"2021-10-12"},{"lineNumber":17,"author":{"gitId":"kheekheekhee"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":18,"author":{"gitId":"kheekheekhee"},"content":"    private final ObservableList\u003cExpense\u003e internalList \u003d FXCollections.observableArrayList();","lastModifiedDate":"2021-10-12"},{"lineNumber":19,"author":{"gitId":"kheekheekhee"},"content":"    private final ObservableList\u003cExpense\u003e internalUnmodifiableList \u003d","lastModifiedDate":"2021-10-12"},{"lineNumber":20,"author":{"gitId":"kheekheekhee"},"content":"            FXCollections.unmodifiableObservableList(internalList);","lastModifiedDate":"2021-10-12"},{"lineNumber":21,"author":{"gitId":"Jingwencloud"},"content":"    private Optional\u003cGroup\u003e group;","lastModifiedDate":"2021-10-13"},{"lineNumber":22,"author":{"gitId":"Jingwencloud"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":23,"author":{"gitId":"Jingwencloud"},"content":"    public ExpenseList() {","lastModifiedDate":"2021-10-13"},{"lineNumber":24,"author":{"gitId":"Jingwencloud"},"content":"        group \u003d Optional.empty();","lastModifiedDate":"2021-10-13"},{"lineNumber":25,"author":{"gitId":"Jingwencloud"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":26,"author":{"gitId":"Jingwencloud"},"content":"    public ExpenseList(Group group) {","lastModifiedDate":"2021-10-13"},{"lineNumber":27,"author":{"gitId":"Jingwencloud"},"content":"        this.group \u003d Optional.of(group);","lastModifiedDate":"2021-10-13"},{"lineNumber":28,"author":{"gitId":"Jingwencloud"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":29,"author":{"gitId":"Jingwencloud"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":30,"author":{"gitId":"Jingwencloud"},"content":"    public void setGroup(Group group) {","lastModifiedDate":"2021-10-13"},{"lineNumber":31,"author":{"gitId":"Jingwencloud"},"content":"        this.group \u003d Optional.of(group);","lastModifiedDate":"2021-10-13"},{"lineNumber":32,"author":{"gitId":"Jingwencloud"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":33,"author":{"gitId":"Jingwencloud"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":34,"author":{"gitId":"Jingwencloud"},"content":"    public Optional\u003cGroup\u003e getGroup() {","lastModifiedDate":"2021-10-13"},{"lineNumber":35,"author":{"gitId":"Jingwencloud"},"content":"        return group;","lastModifiedDate":"2021-10-13"},{"lineNumber":36,"author":{"gitId":"Jingwencloud"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":37,"author":{"gitId":"kheekheekhee"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":38,"author":{"gitId":"kheekheekhee"},"content":"    /**","lastModifiedDate":"2021-10-12"},{"lineNumber":39,"author":{"gitId":"kheekheekhee"},"content":"     * Returns true if the list contains an equivalent expense as the given argument.","lastModifiedDate":"2021-10-12"},{"lineNumber":40,"author":{"gitId":"kheekheekhee"},"content":"     */","lastModifiedDate":"2021-10-12"},{"lineNumber":41,"author":{"gitId":"kheekheekhee"},"content":"    public boolean contains(Expense toCheck) {","lastModifiedDate":"2021-10-12"},{"lineNumber":42,"author":{"gitId":"kheekheekhee"},"content":"        requireNonNull(toCheck);","lastModifiedDate":"2021-10-12"},{"lineNumber":43,"author":{"gitId":"kheekheekhee"},"content":"        return internalList.stream().anyMatch(toCheck::equals);","lastModifiedDate":"2021-10-12"},{"lineNumber":44,"author":{"gitId":"kheekheekhee"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":45,"author":{"gitId":"kheekheekhee"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":46,"author":{"gitId":"kheekheekhee"},"content":"    /**","lastModifiedDate":"2021-10-12"},{"lineNumber":47,"author":{"gitId":"kheekheekhee"},"content":"     * Clears the entire list of expenses.","lastModifiedDate":"2021-10-12"},{"lineNumber":48,"author":{"gitId":"kheekheekhee"},"content":"     */","lastModifiedDate":"2021-10-12"},{"lineNumber":49,"author":{"gitId":"kheekheekhee"},"content":"    public void clear() {","lastModifiedDate":"2021-10-12"},{"lineNumber":50,"author":{"gitId":"kheekheekhee"},"content":"        internalList.clear();","lastModifiedDate":"2021-10-12"},{"lineNumber":51,"author":{"gitId":"kheekheekhee"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":52,"author":{"gitId":"kheekheekhee"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":53,"author":{"gitId":"kheekheekhee"},"content":"    /**","lastModifiedDate":"2021-10-12"},{"lineNumber":54,"author":{"gitId":"kheekheekhee"},"content":"     * Adds all expenses from the given list to the list of expenses.","lastModifiedDate":"2021-10-12"},{"lineNumber":55,"author":{"gitId":"kheekheekhee"},"content":"     *","lastModifiedDate":"2021-10-12"},{"lineNumber":56,"author":{"gitId":"kheekheekhee"},"content":"     * @param expenses List of expenses to add.","lastModifiedDate":"2021-10-12"},{"lineNumber":57,"author":{"gitId":"kheekheekhee"},"content":"     */","lastModifiedDate":"2021-10-12"},{"lineNumber":58,"author":{"gitId":"kheekheekhee"},"content":"    public void addAll(List\u003cExpense\u003e expenses) {","lastModifiedDate":"2021-10-12"},{"lineNumber":59,"author":{"gitId":"kheekheekhee"},"content":"        internalList.addAll(expenses);","lastModifiedDate":"2021-10-12"},{"lineNumber":60,"author":{"gitId":"kheekheekhee"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":61,"author":{"gitId":"kheekheekhee"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":62,"author":{"gitId":"kheekheekhee"},"content":"    /**","lastModifiedDate":"2021-10-12"},{"lineNumber":63,"author":{"gitId":"kheekheekhee"},"content":"     * Adds an expense to the list.","lastModifiedDate":"2021-10-12"},{"lineNumber":64,"author":{"gitId":"kheekheekhee"},"content":"     */","lastModifiedDate":"2021-10-12"},{"lineNumber":65,"author":{"gitId":"kheekheekhee"},"content":"    public void add(Expense toAdd) {","lastModifiedDate":"2021-10-12"},{"lineNumber":66,"author":{"gitId":"kheekheekhee"},"content":"        requireNonNull(toAdd);","lastModifiedDate":"2021-10-12"},{"lineNumber":67,"author":{"gitId":"kheekheekhee"},"content":"        internalList.add(toAdd);","lastModifiedDate":"2021-10-12"},{"lineNumber":68,"author":{"gitId":"kheekheekhee"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":69,"author":{"gitId":"kheekheekhee"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":70,"author":{"gitId":"kheekheekhee"},"content":"    /**","lastModifiedDate":"2021-10-12"},{"lineNumber":71,"author":{"gitId":"kheekheekhee"},"content":"     * Replaces the expense {@code target} in the list with {@code editedExpense}.","lastModifiedDate":"2021-10-12"},{"lineNumber":72,"author":{"gitId":"kheekheekhee"},"content":"     * {@code target} must exist in the list.","lastModifiedDate":"2021-10-12"},{"lineNumber":73,"author":{"gitId":"kheekheekhee"},"content":"     */","lastModifiedDate":"2021-10-12"},{"lineNumber":74,"author":{"gitId":"kheekheekhee"},"content":"    public void setExpense(Expense target, Expense editedExpense) {","lastModifiedDate":"2021-10-12"},{"lineNumber":75,"author":{"gitId":"kheekheekhee"},"content":"        requireAllNonNull(target, editedExpense);","lastModifiedDate":"2021-10-12"},{"lineNumber":76,"author":{"gitId":"kheekheekhee"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":77,"author":{"gitId":"kheekheekhee"},"content":"        int index \u003d internalList.indexOf(target);","lastModifiedDate":"2021-10-12"},{"lineNumber":78,"author":{"gitId":"kheekheekhee"},"content":"        if (index \u003d\u003d -1) {","lastModifiedDate":"2021-10-12"},{"lineNumber":79,"author":{"gitId":"kheekheekhee"},"content":"            throw new ExpenseNotFoundException();","lastModifiedDate":"2021-10-12"},{"lineNumber":80,"author":{"gitId":"kheekheekhee"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":81,"author":{"gitId":"kheekheekhee"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":82,"author":{"gitId":"kheekheekhee"},"content":"        if (!target.equals(editedExpense) \u0026\u0026 contains(editedExpense)) {","lastModifiedDate":"2021-10-12"},{"lineNumber":83,"author":{"gitId":"kheekheekhee"},"content":"            throw new DuplicatePersonException();","lastModifiedDate":"2021-10-12"},{"lineNumber":84,"author":{"gitId":"kheekheekhee"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":85,"author":{"gitId":"kheekheekhee"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":86,"author":{"gitId":"kheekheekhee"},"content":"        internalList.set(index, editedExpense);","lastModifiedDate":"2021-10-12"},{"lineNumber":87,"author":{"gitId":"kheekheekhee"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":88,"author":{"gitId":"kheekheekhee"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":89,"author":{"gitId":"kheekheekhee"},"content":"    /**","lastModifiedDate":"2021-10-12"},{"lineNumber":90,"author":{"gitId":"kheekheekhee"},"content":"     * Removes the equivalent expense from the list.","lastModifiedDate":"2021-10-12"},{"lineNumber":91,"author":{"gitId":"kheekheekhee"},"content":"     * The person must exist in the list.","lastModifiedDate":"2021-10-12"},{"lineNumber":92,"author":{"gitId":"kheekheekhee"},"content":"     */","lastModifiedDate":"2021-10-12"},{"lineNumber":93,"author":{"gitId":"kheekheekhee"},"content":"    public void remove(Expense toRemove) {","lastModifiedDate":"2021-10-12"},{"lineNumber":94,"author":{"gitId":"kheekheekhee"},"content":"        requireNonNull(toRemove);","lastModifiedDate":"2021-10-12"},{"lineNumber":95,"author":{"gitId":"kheekheekhee"},"content":"        if (!internalList.remove(toRemove)) {","lastModifiedDate":"2021-10-12"},{"lineNumber":96,"author":{"gitId":"kheekheekhee"},"content":"            throw new ExpenseNotFoundException();","lastModifiedDate":"2021-10-12"},{"lineNumber":97,"author":{"gitId":"kheekheekhee"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":98,"author":{"gitId":"kheekheekhee"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":99,"author":{"gitId":"kheekheekhee"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":100,"author":{"gitId":"kheekheekhee"},"content":"    public void setExpenses(ExpenseList replacement) {","lastModifiedDate":"2021-10-12"},{"lineNumber":101,"author":{"gitId":"kheekheekhee"},"content":"        requireNonNull(replacement);","lastModifiedDate":"2021-10-12"},{"lineNumber":102,"author":{"gitId":"kheekheekhee"},"content":"        internalList.setAll(replacement.internalList);","lastModifiedDate":"2021-10-12"},{"lineNumber":103,"author":{"gitId":"kheekheekhee"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":104,"author":{"gitId":"kheekheekhee"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":105,"author":{"gitId":"kheekheekhee"},"content":"    /**","lastModifiedDate":"2021-10-12"},{"lineNumber":106,"author":{"gitId":"kheekheekhee"},"content":"     * Replaces the contents of this list with {@code expenses}.","lastModifiedDate":"2021-10-12"},{"lineNumber":107,"author":{"gitId":"kheekheekhee"},"content":"     */","lastModifiedDate":"2021-10-12"},{"lineNumber":108,"author":{"gitId":"kheekheekhee"},"content":"    public void setExpenses(List\u003cExpense\u003e expenses) {","lastModifiedDate":"2021-10-12"},{"lineNumber":109,"author":{"gitId":"kheekheekhee"},"content":"        requireAllNonNull(expenses);","lastModifiedDate":"2021-10-12"},{"lineNumber":110,"author":{"gitId":"kheekheekhee"},"content":"        internalList.setAll(expenses);","lastModifiedDate":"2021-10-12"},{"lineNumber":111,"author":{"gitId":"kheekheekhee"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":112,"author":{"gitId":"kheekheekhee"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":113,"author":{"gitId":"kheekheekhee"},"content":"    /**","lastModifiedDate":"2021-10-12"},{"lineNumber":114,"author":{"gitId":"kheekheekhee"},"content":"     * Returns the backing list as an unmodifiable {@code ObservableList}.","lastModifiedDate":"2021-10-12"},{"lineNumber":115,"author":{"gitId":"kheekheekhee"},"content":"     */","lastModifiedDate":"2021-10-12"},{"lineNumber":116,"author":{"gitId":"kheekheekhee"},"content":"    public ObservableList\u003cExpense\u003e asUnmodifiableObservableList() {","lastModifiedDate":"2021-10-12"},{"lineNumber":117,"author":{"gitId":"kheekheekhee"},"content":"        return internalUnmodifiableList;","lastModifiedDate":"2021-10-12"},{"lineNumber":118,"author":{"gitId":"kheekheekhee"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":119,"author":{"gitId":"kheekheekhee"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":120,"author":{"gitId":"kheekheekhee"},"content":"    @Override","lastModifiedDate":"2021-10-12"},{"lineNumber":121,"author":{"gitId":"kheekheekhee"},"content":"    public Iterator\u003cExpense\u003e iterator() {","lastModifiedDate":"2021-10-12"},{"lineNumber":122,"author":{"gitId":"kheekheekhee"},"content":"        return internalList.iterator();","lastModifiedDate":"2021-10-12"},{"lineNumber":123,"author":{"gitId":"kheekheekhee"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":124,"author":{"gitId":"kheekheekhee"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":125,"author":{"gitId":"kheekheekhee"},"content":"    @Override","lastModifiedDate":"2021-10-12"},{"lineNumber":126,"author":{"gitId":"kheekheekhee"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-12"},{"lineNumber":127,"author":{"gitId":"kheekheekhee"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2021-10-12"},{"lineNumber":128,"author":{"gitId":"kheekheekhee"},"content":"            return true;","lastModifiedDate":"2021-10-12"},{"lineNumber":129,"author":{"gitId":"kheekheekhee"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":130,"author":{"gitId":"kheekheekhee"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":131,"author":{"gitId":"kheekheekhee"},"content":"        if (!(other instanceof ExpenseList)) { // instanceof handles nulls","lastModifiedDate":"2021-10-12"},{"lineNumber":132,"author":{"gitId":"kheekheekhee"},"content":"            return false;","lastModifiedDate":"2021-10-12"},{"lineNumber":133,"author":{"gitId":"kheekheekhee"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":134,"author":{"gitId":"kheekheekhee"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":135,"author":{"gitId":"kheekheekhee"},"content":"        return internalList.equals(((ExpenseList) other).internalList);","lastModifiedDate":"2021-10-12"},{"lineNumber":136,"author":{"gitId":"kheekheekhee"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":137,"author":{"gitId":"kheekheekhee"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":138,"author":{"gitId":"kheekheekhee"},"content":"    @Override","lastModifiedDate":"2021-10-12"},{"lineNumber":139,"author":{"gitId":"kheekheekhee"},"content":"    public int hashCode() {","lastModifiedDate":"2021-10-12"},{"lineNumber":140,"author":{"gitId":"kheekheekhee"},"content":"        return internalList.hashCode();","lastModifiedDate":"2021-10-12"},{"lineNumber":141,"author":{"gitId":"kheekheekhee"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":142,"author":{"gitId":"kheekheekhee"},"content":"}","lastModifiedDate":"2021-10-12"}],"authorContributionMap":{"Jingwencloud":18,"kheekheekhee":124}},{"path":"src/main/java/seedu/awe/model/expense/IndividualAmount.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ramapriyan912001"},"content":"package seedu.awe.model.expense;","lastModifiedDate":"2021-10-20"},{"lineNumber":2,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":3,"author":{"gitId":"ramapriyan912001"},"content":"import static seedu.awe.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2021-10-20"},{"lineNumber":4,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":5,"author":{"gitId":"ramapriyan912001"},"content":"import seedu.awe.model.person.Person;","lastModifiedDate":"2021-10-20"},{"lineNumber":6,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":7,"author":{"gitId":"ramapriyan912001"},"content":"public class IndividualAmount {","lastModifiedDate":"2021-10-20"},{"lineNumber":8,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":9,"author":{"gitId":"ramapriyan912001"},"content":"    private Person person;","lastModifiedDate":"2021-10-20"},{"lineNumber":10,"author":{"gitId":"ramapriyan912001"},"content":"    private Double expenditure;","lastModifiedDate":"2021-10-20"},{"lineNumber":11,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":12,"author":{"gitId":"ramapriyan912001"},"content":"    /**","lastModifiedDate":"2021-10-20"},{"lineNumber":13,"author":{"gitId":"ramapriyan912001"},"content":"     * Intermediate class to store expense maps in json format","lastModifiedDate":"2021-10-20"},{"lineNumber":14,"author":{"gitId":"ramapriyan912001"},"content":"     * @param person person to whom expenditure is attached.","lastModifiedDate":"2021-10-20"},{"lineNumber":15,"author":{"gitId":"ramapriyan912001"},"content":"     * @param expenditure expenditure attached to person.","lastModifiedDate":"2021-10-20"},{"lineNumber":16,"author":{"gitId":"ramapriyan912001"},"content":"     */","lastModifiedDate":"2021-10-20"},{"lineNumber":17,"author":{"gitId":"ramapriyan912001"},"content":"    public IndividualAmount(Person person, double expenditure) {","lastModifiedDate":"2021-10-27"},{"lineNumber":18,"author":{"gitId":"ramapriyan912001"},"content":"        requireAllNonNull(person, expenditure);","lastModifiedDate":"2021-10-20"},{"lineNumber":19,"author":{"gitId":"ramapriyan912001"},"content":"        this.person \u003d person;","lastModifiedDate":"2021-10-20"},{"lineNumber":20,"author":{"gitId":"ramapriyan912001"},"content":"        this.expenditure \u003d expenditure;","lastModifiedDate":"2021-10-20"},{"lineNumber":21,"author":{"gitId":"ramapriyan912001"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":22,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":23,"author":{"gitId":"ramapriyan912001"},"content":"    public Person getPerson() {","lastModifiedDate":"2021-10-20"},{"lineNumber":24,"author":{"gitId":"ramapriyan912001"},"content":"        return person;","lastModifiedDate":"2021-10-20"},{"lineNumber":25,"author":{"gitId":"ramapriyan912001"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":26,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":27,"author":{"gitId":"ramapriyan912001"},"content":"    public Double getExpenditure() {","lastModifiedDate":"2021-10-20"},{"lineNumber":28,"author":{"gitId":"ramapriyan912001"},"content":"        return expenditure;","lastModifiedDate":"2021-10-20"},{"lineNumber":29,"author":{"gitId":"ramapriyan912001"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":30,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":31,"author":{"gitId":"ramapriyan912001"},"content":"    @Override","lastModifiedDate":"2021-10-27"},{"lineNumber":32,"author":{"gitId":"ramapriyan912001"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-27"},{"lineNumber":33,"author":{"gitId":"ramapriyan912001"},"content":"        if (this \u003d\u003d other) {","lastModifiedDate":"2021-10-27"},{"lineNumber":34,"author":{"gitId":"ramapriyan912001"},"content":"            return true;","lastModifiedDate":"2021-10-27"},{"lineNumber":35,"author":{"gitId":"ramapriyan912001"},"content":"        } else if (!(other instanceof IndividualAmount)) {","lastModifiedDate":"2021-10-27"},{"lineNumber":36,"author":{"gitId":"ramapriyan912001"},"content":"            return false;","lastModifiedDate":"2021-10-27"},{"lineNumber":37,"author":{"gitId":"ramapriyan912001"},"content":"        }","lastModifiedDate":"2021-10-27"},{"lineNumber":38,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":39,"author":{"gitId":"ramapriyan912001"},"content":"        IndividualAmount individualAmount \u003d (IndividualAmount) other;","lastModifiedDate":"2021-10-27"},{"lineNumber":40,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":41,"author":{"gitId":"ramapriyan912001"},"content":"        boolean isEqualExpenditure \u003d this.expenditure.equals(individualAmount.getExpenditure());","lastModifiedDate":"2021-10-27"},{"lineNumber":42,"author":{"gitId":"ramapriyan912001"},"content":"        boolean isSamePerson \u003d this.person.equals(individualAmount.getPerson());","lastModifiedDate":"2021-10-27"},{"lineNumber":43,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":44,"author":{"gitId":"ramapriyan912001"},"content":"        return isEqualExpenditure \u0026\u0026 isSamePerson;","lastModifiedDate":"2021-10-27"},{"lineNumber":45,"author":{"gitId":"ramapriyan912001"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":46,"author":{"gitId":"ramapriyan912001"},"content":"}","lastModifiedDate":"2021-10-20"}],"authorContributionMap":{"ramapriyan912001":46}},{"path":"src/main/java/seedu/awe/model/expense/exceptions/ExpenseNotFoundException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kheekheekhee"},"content":"package seedu.awe.model.expense.exceptions;","lastModifiedDate":"2021-10-12"},{"lineNumber":2,"author":{"gitId":"kheekheekhee"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":3,"author":{"gitId":"kheekheekhee"},"content":"/**","lastModifiedDate":"2021-10-12"},{"lineNumber":4,"author":{"gitId":"kheekheekhee"},"content":" * Signals that the operation is unable to find the specified expense.","lastModifiedDate":"2021-10-12"},{"lineNumber":5,"author":{"gitId":"kheekheekhee"},"content":" */","lastModifiedDate":"2021-10-12"},{"lineNumber":6,"author":{"gitId":"kheekheekhee"},"content":"public class ExpenseNotFoundException extends RuntimeException {","lastModifiedDate":"2021-10-12"},{"lineNumber":7,"author":{"gitId":"kheekheekhee"},"content":"}","lastModifiedDate":"2021-10-12"}],"authorContributionMap":{"kheekheekhee":7}},{"path":"src/main/java/seedu/awe/model/group/Group.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ramapriyan912001"},"content":"package seedu.awe.model.group;","lastModifiedDate":"2021-10-05"},{"lineNumber":2,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":3,"author":{"gitId":"marcuspeh"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-27"},{"lineNumber":4,"author":{"gitId":"marcuspeh"},"content":"import static seedu.awe.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2021-10-10"},{"lineNumber":5,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":6,"author":{"gitId":"chrus-chong"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-09-18"},{"lineNumber":7,"author":{"gitId":"ramapriyan912001"},"content":"import java.util.Collections;","lastModifiedDate":"2021-10-05"},{"lineNumber":8,"author":{"gitId":"kheekheekhee"},"content":"import java.util.HashMap;","lastModifiedDate":"2021-10-17"},{"lineNumber":9,"author":{"gitId":"chrus-chong"},"content":"import java.util.HashSet;","lastModifiedDate":"2021-09-24"},{"lineNumber":10,"author":{"gitId":"ramapriyan912001"},"content":"import java.util.Map;","lastModifiedDate":"2021-10-20"},{"lineNumber":11,"author":{"gitId":"marcuspeh"},"content":"import java.util.Optional;","lastModifiedDate":"2021-10-10"},{"lineNumber":12,"author":{"gitId":"chrus-chong"},"content":"import java.util.Set;","lastModifiedDate":"2021-09-24"},{"lineNumber":13,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":14,"author":{"gitId":"kheekheekhee"},"content":"import seedu.awe.model.expense.Cost;","lastModifiedDate":"2021-10-17"},{"lineNumber":15,"author":{"gitId":"kheekheekhee"},"content":"import seedu.awe.model.expense.Expense;","lastModifiedDate":"2021-10-06"},{"lineNumber":16,"author":{"gitId":"ramapriyan912001"},"content":"import seedu.awe.model.person.Person;","lastModifiedDate":"2021-10-05"},{"lineNumber":17,"author":{"gitId":"marcuspeh"},"content":"import seedu.awe.model.person.exceptions.DuplicatePersonException;","lastModifiedDate":"2021-10-27"},{"lineNumber":18,"author":{"gitId":"ramapriyan912001"},"content":"import seedu.awe.model.tag.Tag;","lastModifiedDate":"2021-10-05"},{"lineNumber":19,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":20,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":21,"author":{"gitId":"chrus-chong"},"content":"public class Group {","lastModifiedDate":"2021-09-18"},{"lineNumber":22,"author":{"gitId":"ramapriyan912001"},"content":"    //TODO: WRITE MESSAGE CONSTRAINTS MESSAGE","lastModifiedDate":"2021-09-26"},{"lineNumber":23,"author":{"gitId":"ramapriyan912001"},"content":"    private final GroupName groupName;","lastModifiedDate":"2021-10-07"},{"lineNumber":24,"author":{"gitId":"marcuspeh"},"content":"    private final ArrayList\u003cPerson\u003e members;","lastModifiedDate":"2021-10-27"},{"lineNumber":25,"author":{"gitId":"chrus-chong"},"content":"    private final Set\u003cTag\u003e tags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2021-09-24"},{"lineNumber":26,"author":{"gitId":"kheekheekhee"},"content":"    private final ArrayList\u003cExpense\u003e expenses \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-06"},{"lineNumber":27,"author":{"gitId":"kheekheekhee"},"content":"    private final HashMap\u003cPerson, Cost\u003e paidByPayers \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2021-10-17"},{"lineNumber":28,"author":{"gitId":"marcuspeh"},"content":"    private final HashMap\u003cPerson, Cost\u003e splitExpenses \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2021-10-25"},{"lineNumber":29,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":30,"author":{"gitId":"chrus-chong"},"content":"    /**","lastModifiedDate":"2021-09-18"},{"lineNumber":31,"author":{"gitId":"chrus-chong"},"content":"     * Creates new Group object.","lastModifiedDate":"2021-09-18"},{"lineNumber":32,"author":{"gitId":"chrus-chong"},"content":"     *","lastModifiedDate":"2021-09-18"},{"lineNumber":33,"author":{"gitId":"ramapriyan912001"},"content":"     * @param groupName String object representing name of the group.","lastModifiedDate":"2021-09-26"},{"lineNumber":34,"author":{"gitId":"chrus-chong"},"content":"     * @param members ArrayList of Person objects representing list of members.","lastModifiedDate":"2021-09-18"},{"lineNumber":35,"author":{"gitId":"chrus-chong"},"content":"     */","lastModifiedDate":"2021-09-18"},{"lineNumber":36,"author":{"gitId":"ramapriyan912001"},"content":"    public Group(GroupName groupName, ArrayList\u003cPerson\u003e members) {","lastModifiedDate":"2021-09-26"},{"lineNumber":37,"author":{"gitId":"ramapriyan912001"},"content":"        this.groupName \u003d groupName;","lastModifiedDate":"2021-09-26"},{"lineNumber":38,"author":{"gitId":"marcuspeh"},"content":"        this.members \u003d new ArrayList\u003c\u003e(members);","lastModifiedDate":"2021-10-27"},{"lineNumber":39,"author":{"gitId":"chrus-chong"},"content":"        for (Person member : members) {","lastModifiedDate":"2021-09-18"},{"lineNumber":40,"author":{"gitId":"ramapriyan912001"},"content":"            paidByPayers.put(member, new Cost(0));","lastModifiedDate":"2021-10-17"},{"lineNumber":41,"author":{"gitId":"marcuspeh"},"content":"            splitExpenses.put(member, new Cost(0));","lastModifiedDate":"2021-10-25"},{"lineNumber":42,"author":{"gitId":"chrus-chong"},"content":"        }","lastModifiedDate":"2021-09-18"},{"lineNumber":43,"author":{"gitId":"chrus-chong"},"content":"    }","lastModifiedDate":"2021-09-18"},{"lineNumber":44,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":45,"author":{"gitId":"chrus-chong"},"content":"    /**","lastModifiedDate":"2021-09-24"},{"lineNumber":46,"author":{"gitId":"chrus-chong"},"content":"     * Creates new Group object with tags.","lastModifiedDate":"2021-09-24"},{"lineNumber":47,"author":{"gitId":"chrus-chong"},"content":"     *","lastModifiedDate":"2021-09-24"},{"lineNumber":48,"author":{"gitId":"ramapriyan912001"},"content":"     * @param groupName String object representing name of the group.","lastModifiedDate":"2021-09-26"},{"lineNumber":49,"author":{"gitId":"chrus-chong"},"content":"     * @param members ArrayList of Person objects representing list of members.","lastModifiedDate":"2021-09-24"},{"lineNumber":50,"author":{"gitId":"chrus-chong"},"content":"     * @param tags Set of Tag objects to describe group.","lastModifiedDate":"2021-09-24"},{"lineNumber":51,"author":{"gitId":"chrus-chong"},"content":"     */","lastModifiedDate":"2021-09-24"},{"lineNumber":52,"author":{"gitId":"ramapriyan912001"},"content":"    public Group(GroupName groupName, ArrayList\u003cPerson\u003e members, Set\u003cTag\u003e tags) {","lastModifiedDate":"2021-09-26"},{"lineNumber":53,"author":{"gitId":"ramapriyan912001"},"content":"        this.groupName \u003d groupName;","lastModifiedDate":"2021-09-26"},{"lineNumber":54,"author":{"gitId":"marcuspeh"},"content":"        this.members \u003d new ArrayList\u003c\u003e(members);","lastModifiedDate":"2021-10-27"},{"lineNumber":55,"author":{"gitId":"chrus-chong"},"content":"        for (Person member : members) {","lastModifiedDate":"2021-09-24"},{"lineNumber":56,"author":{"gitId":"ramapriyan912001"},"content":"            paidByPayers.put(member, new Cost(0));","lastModifiedDate":"2021-10-17"},{"lineNumber":57,"author":{"gitId":"marcuspeh"},"content":"            splitExpenses.put(member, new Cost(0));","lastModifiedDate":"2021-10-25"},{"lineNumber":58,"author":{"gitId":"chrus-chong"},"content":"        }","lastModifiedDate":"2021-09-24"},{"lineNumber":59,"author":{"gitId":"chrus-chong"},"content":"        this.tags.addAll(tags);","lastModifiedDate":"2021-09-24"},{"lineNumber":60,"author":{"gitId":"chrus-chong"},"content":"    }","lastModifiedDate":"2021-09-24"},{"lineNumber":61,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":62,"author":{"gitId":"kheekheekhee"},"content":"    /**","lastModifiedDate":"2021-10-06"},{"lineNumber":63,"author":{"gitId":"kheekheekhee"},"content":"     * Creates new Group object with tags and expenses.","lastModifiedDate":"2021-10-17"},{"lineNumber":64,"author":{"gitId":"kheekheekhee"},"content":"     *","lastModifiedDate":"2021-10-06"},{"lineNumber":65,"author":{"gitId":"kheekheekhee"},"content":"     * @param groupName String object representing name of the group.","lastModifiedDate":"2021-10-06"},{"lineNumber":66,"author":{"gitId":"kheekheekhee"},"content":"     * @param members ArrayList of Person objects representing list of members.","lastModifiedDate":"2021-10-06"},{"lineNumber":67,"author":{"gitId":"kheekheekhee"},"content":"     * @param tags Set of Tag objects to describe group.","lastModifiedDate":"2021-10-06"},{"lineNumber":68,"author":{"gitId":"kheekheekhee"},"content":"     * @param expenses List of expenses in the group.","lastModifiedDate":"2021-10-06"},{"lineNumber":69,"author":{"gitId":"kheekheekhee"},"content":"     */","lastModifiedDate":"2021-10-06"},{"lineNumber":70,"author":{"gitId":"kheekheekhee"},"content":"    public Group(GroupName groupName, ArrayList\u003cPerson\u003e members, Set\u003cTag\u003e tags, ArrayList\u003cExpense\u003e expenses) {","lastModifiedDate":"2021-10-06"},{"lineNumber":71,"author":{"gitId":"marcuspeh"},"content":"        this(groupName, members, tags);","lastModifiedDate":"2021-10-25"},{"lineNumber":72,"author":{"gitId":"kheekheekhee"},"content":"        for (Expense expense : expenses) {","lastModifiedDate":"2021-10-06"},{"lineNumber":73,"author":{"gitId":"kheekheekhee"},"content":"            this.expenses.add(expense);","lastModifiedDate":"2021-10-06"},{"lineNumber":74,"author":{"gitId":"kheekheekhee"},"content":"        }","lastModifiedDate":"2021-10-17"},{"lineNumber":75,"author":{"gitId":"marcuspeh"},"content":"        calculateExpenseHashMap();","lastModifiedDate":"2021-10-25"},{"lineNumber":76,"author":{"gitId":"kheekheekhee"},"content":"    }","lastModifiedDate":"2021-10-17"},{"lineNumber":77,"author":{"gitId":"kheekheekhee"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":78,"author":{"gitId":"kheekheekhee"},"content":"    /**","lastModifiedDate":"2021-10-17"},{"lineNumber":79,"author":{"gitId":"marcuspeh"},"content":"     * Creates new Group object with tags and expenses.","lastModifiedDate":"2021-10-25"},{"lineNumber":80,"author":{"gitId":"kheekheekhee"},"content":"     *","lastModifiedDate":"2021-10-17"},{"lineNumber":81,"author":{"gitId":"kheekheekhee"},"content":"     * @param groupName String object representing name of the group.","lastModifiedDate":"2021-10-17"},{"lineNumber":82,"author":{"gitId":"kheekheekhee"},"content":"     * @param members ArrayList of Person objects representing list of members.","lastModifiedDate":"2021-10-17"},{"lineNumber":83,"author":{"gitId":"kheekheekhee"},"content":"     * @param expenses List of expenses in the group.","lastModifiedDate":"2021-10-17"},{"lineNumber":84,"author":{"gitId":"kheekheekhee"},"content":"     */","lastModifiedDate":"2021-10-17"},{"lineNumber":85,"author":{"gitId":"marcuspeh"},"content":"    public Group(GroupName groupName, ArrayList\u003cPerson\u003e members, ArrayList\u003cExpense\u003e expenses) {","lastModifiedDate":"2021-10-25"},{"lineNumber":86,"author":{"gitId":"marcuspeh"},"content":"        this(groupName, members);","lastModifiedDate":"2021-10-25"},{"lineNumber":87,"author":{"gitId":"kheekheekhee"},"content":"        for (Expense expense : expenses) {","lastModifiedDate":"2021-10-17"},{"lineNumber":88,"author":{"gitId":"kheekheekhee"},"content":"            this.expenses.add(expense);","lastModifiedDate":"2021-10-17"},{"lineNumber":89,"author":{"gitId":"kheekheekhee"},"content":"        }","lastModifiedDate":"2021-10-06"},{"lineNumber":90,"author":{"gitId":"marcuspeh"},"content":"        calculateExpenseHashMap();","lastModifiedDate":"2021-10-25"},{"lineNumber":91,"author":{"gitId":"kheekheekhee"},"content":"    }","lastModifiedDate":"2021-10-17"},{"lineNumber":92,"author":{"gitId":"kheekheekhee"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":93,"author":{"gitId":"ramapriyan912001"},"content":"    /**","lastModifiedDate":"2021-10-20"},{"lineNumber":94,"author":{"gitId":"ramapriyan912001"},"content":"     * Creates new Group object with tags, expenses and paidByPayees hashmap.","lastModifiedDate":"2021-10-20"},{"lineNumber":95,"author":{"gitId":"ramapriyan912001"},"content":"     *","lastModifiedDate":"2021-10-20"},{"lineNumber":96,"author":{"gitId":"ramapriyan912001"},"content":"     * @param groupName String object representing name of the group.","lastModifiedDate":"2021-10-20"},{"lineNumber":97,"author":{"gitId":"ramapriyan912001"},"content":"     * @param members ArrayList of Person objects representing list of members.","lastModifiedDate":"2021-10-20"},{"lineNumber":98,"author":{"gitId":"ramapriyan912001"},"content":"     * @param tags Set of Tag objects to describe group.","lastModifiedDate":"2021-10-20"},{"lineNumber":99,"author":{"gitId":"marcuspeh"},"content":"     * @param expenses List of expenses in the group.","lastModifiedDate":"2021-10-25"},{"lineNumber":100,"author":{"gitId":"ramapriyan912001"},"content":"     * @param paidByPayers Maps people to their amounts paid","lastModifiedDate":"2021-10-20"},{"lineNumber":101,"author":{"gitId":"marcuspeh"},"content":"     * @param splitExpenses Maps people to their expenses incurred.","lastModifiedDate":"2021-10-25"},{"lineNumber":102,"author":{"gitId":"ramapriyan912001"},"content":"     */","lastModifiedDate":"2021-10-20"},{"lineNumber":103,"author":{"gitId":"marcuspeh"},"content":"    public Group(GroupName groupName, ArrayList\u003cPerson\u003e members, Set\u003cTag\u003e tags, ArrayList\u003cExpense\u003e expenses,","lastModifiedDate":"2021-10-25"},{"lineNumber":104,"author":{"gitId":"marcuspeh"},"content":"                 Map\u003cPerson, Cost\u003e paidByPayers, Map\u003cPerson, Cost\u003e splitExpenses) {","lastModifiedDate":"2021-10-25"},{"lineNumber":105,"author":{"gitId":"marcuspeh"},"content":"        this(groupName, members, tags, expenses);","lastModifiedDate":"2021-10-25"},{"lineNumber":106,"author":{"gitId":"ramapriyan912001"},"content":"        this.paidByPayers.putAll(paidByPayers);","lastModifiedDate":"2021-10-20"},{"lineNumber":107,"author":{"gitId":"marcuspeh"},"content":"        this.splitExpenses.putAll(splitExpenses);","lastModifiedDate":"2021-10-25"},{"lineNumber":108,"author":{"gitId":"marcuspeh"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":109,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":110,"author":{"gitId":"marcuspeh"},"content":"    private void calculateExpenseHashMap() {","lastModifiedDate":"2021-10-25"},{"lineNumber":111,"author":{"gitId":"marcuspeh"},"content":"        for (Expense expense : expenses) {","lastModifiedDate":"2021-10-25"},{"lineNumber":112,"author":{"gitId":"marcuspeh"},"content":"            Person payer \u003d expense.getPayer();","lastModifiedDate":"2021-10-25"},{"lineNumber":113,"author":{"gitId":"marcuspeh"},"content":"            Cost cost \u003d expense.getCost();","lastModifiedDate":"2021-10-25"},{"lineNumber":114,"author":{"gitId":"marcuspeh"},"content":"            paidByPayers.merge(payer, cost, (original, toAdd) -\u003e original.add(toAdd));","lastModifiedDate":"2021-10-25"},{"lineNumber":115,"author":{"gitId":"marcuspeh"},"content":"            for (Map.Entry\u003cPerson, Cost\u003e entry: expense.getSplitExpenses().entrySet()) {","lastModifiedDate":"2021-10-25"},{"lineNumber":116,"author":{"gitId":"marcuspeh"},"content":"                splitExpenses.merge(entry.getKey(), entry.getValue(), (original, toAdd) -\u003e original.add(toAdd));","lastModifiedDate":"2021-10-25"},{"lineNumber":117,"author":{"gitId":"marcuspeh"},"content":"            }","lastModifiedDate":"2021-10-25"},{"lineNumber":118,"author":{"gitId":"marcuspeh"},"content":"        }","lastModifiedDate":"2021-10-25"},{"lineNumber":119,"author":{"gitId":"ramapriyan912001"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":120,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":121,"author":{"gitId":"chrus-chong"},"content":"    /**","lastModifiedDate":"2021-09-18"},{"lineNumber":122,"author":{"gitId":"chrus-chong"},"content":"     * Adds member to Group.","lastModifiedDate":"2021-09-18"},{"lineNumber":123,"author":{"gitId":"chrus-chong"},"content":"     *","lastModifiedDate":"2021-09-18"},{"lineNumber":124,"author":{"gitId":"chrus-chong"},"content":"     * @param member Person object representing member to be added to group.","lastModifiedDate":"2021-09-18"},{"lineNumber":125,"author":{"gitId":"chrus-chong"},"content":"     */","lastModifiedDate":"2021-09-18"},{"lineNumber":126,"author":{"gitId":"marcuspeh"},"content":"    public Group addMember(Person member) throws DuplicatePersonException {","lastModifiedDate":"2021-10-27"},{"lineNumber":127,"author":{"gitId":"marcuspeh"},"content":"        if (this.members.contains(member)) {","lastModifiedDate":"2021-10-27"},{"lineNumber":128,"author":{"gitId":"marcuspeh"},"content":"            throw new DuplicatePersonException();","lastModifiedDate":"2021-10-27"},{"lineNumber":129,"author":{"gitId":"marcuspeh"},"content":"        }","lastModifiedDate":"2021-10-27"},{"lineNumber":130,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":131,"author":{"gitId":"marcuspeh"},"content":"        ArrayList\u003cPerson\u003e members \u003d new ArrayList\u003c\u003e(this.members);","lastModifiedDate":"2021-10-27"},{"lineNumber":132,"author":{"gitId":"marcuspeh"},"content":"        members.add(member);","lastModifiedDate":"2021-10-27"},{"lineNumber":133,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":134,"author":{"gitId":"marcuspeh"},"content":"        Map\u003cPerson, Cost\u003e paidByPayer \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2021-10-27"},{"lineNumber":135,"author":{"gitId":"marcuspeh"},"content":"        paidByPayer.putAll(this.paidByPayers);","lastModifiedDate":"2021-10-27"},{"lineNumber":136,"author":{"gitId":"ramapriyan912001"},"content":"        paidByPayers.put(member, new Cost(0));","lastModifiedDate":"2021-10-17"},{"lineNumber":137,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":138,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":139,"author":{"gitId":"marcuspeh"},"content":"        Map\u003cPerson, Cost\u003e splitExpenses \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2021-10-27"},{"lineNumber":140,"author":{"gitId":"marcuspeh"},"content":"        splitExpenses.putAll(this.splitExpenses);","lastModifiedDate":"2021-10-27"},{"lineNumber":141,"author":{"gitId":"marcuspeh"},"content":"        splitExpenses.put(member, new Cost(0));","lastModifiedDate":"2021-10-25"},{"lineNumber":142,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":143,"author":{"gitId":"marcuspeh"},"content":"        return new Group(groupName, members, tags, expenses, paidByPayers, splitExpenses);","lastModifiedDate":"2021-10-27"},{"lineNumber":144,"author":{"gitId":"marcuspeh"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":145,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":146,"author":{"gitId":"marcuspeh"},"content":"    /**","lastModifiedDate":"2021-10-27"},{"lineNumber":147,"author":{"gitId":"marcuspeh"},"content":"     * Add tags to the group and return a new group with the added tags.","lastModifiedDate":"2021-10-27"},{"lineNumber":148,"author":{"gitId":"marcuspeh"},"content":"     *","lastModifiedDate":"2021-10-27"},{"lineNumber":149,"author":{"gitId":"marcuspeh"},"content":"     * @param tag Tags to be added.","lastModifiedDate":"2021-10-27"},{"lineNumber":150,"author":{"gitId":"marcuspeh"},"content":"     * @return Updated group","lastModifiedDate":"2021-10-27"},{"lineNumber":151,"author":{"gitId":"marcuspeh"},"content":"     */","lastModifiedDate":"2021-10-27"},{"lineNumber":152,"author":{"gitId":"marcuspeh"},"content":"    public Group addTag(Set\u003cTag\u003e tag) {","lastModifiedDate":"2021-10-27"},{"lineNumber":153,"author":{"gitId":"marcuspeh"},"content":"        Set\u003cTag\u003e tags \u003d new HashSet\u003c\u003e(this.tags);","lastModifiedDate":"2021-10-27"},{"lineNumber":154,"author":{"gitId":"marcuspeh"},"content":"        tags.addAll(tag);","lastModifiedDate":"2021-10-27"},{"lineNumber":155,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":156,"author":{"gitId":"marcuspeh"},"content":"        return new Group(groupName, members, tags, expenses, paidByPayers, splitExpenses);","lastModifiedDate":"2021-10-27"},{"lineNumber":157,"author":{"gitId":"marcuspeh"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":158,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":159,"author":{"gitId":"marcuspeh"},"content":"    /**","lastModifiedDate":"2021-10-27"},{"lineNumber":160,"author":{"gitId":"marcuspeh"},"content":"     * Remove tag from the group and return a new group without the tag.","lastModifiedDate":"2021-10-27"},{"lineNumber":161,"author":{"gitId":"marcuspeh"},"content":"     *","lastModifiedDate":"2021-10-27"},{"lineNumber":162,"author":{"gitId":"marcuspeh"},"content":"     * @param tag Tag to be removed.","lastModifiedDate":"2021-10-27"},{"lineNumber":163,"author":{"gitId":"marcuspeh"},"content":"     * @return Update group without the tag.","lastModifiedDate":"2021-10-27"},{"lineNumber":164,"author":{"gitId":"marcuspeh"},"content":"     */","lastModifiedDate":"2021-10-27"},{"lineNumber":165,"author":{"gitId":"marcuspeh"},"content":"    public Group removeTag(Tag tag) {","lastModifiedDate":"2021-10-27"},{"lineNumber":166,"author":{"gitId":"marcuspeh"},"content":"        requireNonNull(tag);","lastModifiedDate":"2021-10-27"},{"lineNumber":167,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":168,"author":{"gitId":"marcuspeh"},"content":"        Set\u003cTag\u003e tags \u003d new HashSet\u003c\u003e(this.tags);","lastModifiedDate":"2021-10-27"},{"lineNumber":169,"author":{"gitId":"marcuspeh"},"content":"        tags.remove(tag);","lastModifiedDate":"2021-10-27"},{"lineNumber":170,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":171,"author":{"gitId":"marcuspeh"},"content":"        return new Group(groupName, members, tags, expenses, paidByPayers, splitExpenses);","lastModifiedDate":"2021-10-27"},{"lineNumber":172,"author":{"gitId":"marcuspeh"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":173,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":174,"author":{"gitId":"marcuspeh"},"content":"    /**","lastModifiedDate":"2021-10-27"},{"lineNumber":175,"author":{"gitId":"marcuspeh"},"content":"     * Edits the group name.","lastModifiedDate":"2021-10-27"},{"lineNumber":176,"author":{"gitId":"marcuspeh"},"content":"     *","lastModifiedDate":"2021-10-27"},{"lineNumber":177,"author":{"gitId":"marcuspeh"},"content":"     * @param groupName GroupName to be set.","lastModifiedDate":"2021-10-27"},{"lineNumber":178,"author":{"gitId":"marcuspeh"},"content":"     * @return Return new Group with groupName updated.","lastModifiedDate":"2021-10-27"},{"lineNumber":179,"author":{"gitId":"marcuspeh"},"content":"     */","lastModifiedDate":"2021-10-27"},{"lineNumber":180,"author":{"gitId":"marcuspeh"},"content":"    public Group editName(GroupName groupName) {","lastModifiedDate":"2021-10-27"},{"lineNumber":181,"author":{"gitId":"marcuspeh"},"content":"        requireNonNull(groupName);","lastModifiedDate":"2021-10-27"},{"lineNumber":182,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":183,"author":{"gitId":"marcuspeh"},"content":"        return new Group(groupName, members, tags, expenses, paidByPayers, splitExpenses);","lastModifiedDate":"2021-10-27"},{"lineNumber":184,"author":{"gitId":"chrus-chong"},"content":"    }","lastModifiedDate":"2021-09-18"},{"lineNumber":185,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":186,"author":{"gitId":"chrus-chong"},"content":"    /**","lastModifiedDate":"2021-09-18"},{"lineNumber":187,"author":{"gitId":"chrus-chong"},"content":"     * Removes member from Group.","lastModifiedDate":"2021-09-18"},{"lineNumber":188,"author":{"gitId":"chrus-chong"},"content":"     *","lastModifiedDate":"2021-09-18"},{"lineNumber":189,"author":{"gitId":"chrus-chong"},"content":"     * @param member Person object representing member to be removed from group.","lastModifiedDate":"2021-09-18"},{"lineNumber":190,"author":{"gitId":"marcuspeh"},"content":"     * @return Group with member removed.","lastModifiedDate":"2021-10-27"},{"lineNumber":191,"author":{"gitId":"chrus-chong"},"content":"     */","lastModifiedDate":"2021-09-18"},{"lineNumber":192,"author":{"gitId":"marcuspeh"},"content":"    public Group removeMember(Person member) {","lastModifiedDate":"2021-10-27"},{"lineNumber":193,"author":{"gitId":"marcuspeh"},"content":"        requireNonNull(member);","lastModifiedDate":"2021-10-27"},{"lineNumber":194,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":195,"author":{"gitId":"marcuspeh"},"content":"        ArrayList\u003cPerson\u003e members \u003d new ArrayList\u003c\u003e(this.members);","lastModifiedDate":"2021-10-27"},{"lineNumber":196,"author":{"gitId":"marcuspeh"},"content":"        members.remove(member);","lastModifiedDate":"2021-10-27"},{"lineNumber":197,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":198,"author":{"gitId":"marcuspeh"},"content":"        return new Group(groupName, members, tags, expenses, paidByPayers, splitExpenses);","lastModifiedDate":"2021-10-27"},{"lineNumber":199,"author":{"gitId":"chrus-chong"},"content":"    }","lastModifiedDate":"2021-09-18"},{"lineNumber":200,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":201,"author":{"gitId":"ramapriyan912001"},"content":"    public GroupName getGroupName() {","lastModifiedDate":"2021-09-26"},{"lineNumber":202,"author":{"gitId":"ramapriyan912001"},"content":"        return groupName;","lastModifiedDate":"2021-09-26"},{"lineNumber":203,"author":{"gitId":"chrus-chong"},"content":"    }","lastModifiedDate":"2021-09-18"},{"lineNumber":204,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":205,"author":{"gitId":"chrus-chong"},"content":"    public ArrayList\u003cPerson\u003e getMembers() {","lastModifiedDate":"2021-09-24"},{"lineNumber":206,"author":{"gitId":"chrus-chong"},"content":"        return members;","lastModifiedDate":"2021-09-24"},{"lineNumber":207,"author":{"gitId":"chrus-chong"},"content":"    }","lastModifiedDate":"2021-09-24"},{"lineNumber":208,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":209,"author":{"gitId":"marcuspeh"},"content":"    public HashMap\u003cPerson, Cost\u003e getSplitExpenses() {","lastModifiedDate":"2021-10-25"},{"lineNumber":210,"author":{"gitId":"marcuspeh"},"content":"        return splitExpenses;","lastModifiedDate":"2021-10-25"},{"lineNumber":211,"author":{"gitId":"ramapriyan912001"},"content":"    }","lastModifiedDate":"2021-10-17"},{"lineNumber":212,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":213,"author":{"gitId":"ramapriyan912001"},"content":"    public HashMap\u003cPerson, Cost\u003e getPaidByPayers() {","lastModifiedDate":"2021-10-17"},{"lineNumber":214,"author":{"gitId":"ramapriyan912001"},"content":"        return paidByPayers;","lastModifiedDate":"2021-10-17"},{"lineNumber":215,"author":{"gitId":"ramapriyan912001"},"content":"    }","lastModifiedDate":"2021-10-17"},{"lineNumber":216,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":217,"author":{"gitId":"kheekheekhee"},"content":"    /**","lastModifiedDate":"2021-10-06"},{"lineNumber":218,"author":{"gitId":"kheekheekhee"},"content":"     * Checks if a person is part of the group.","lastModifiedDate":"2021-10-06"},{"lineNumber":219,"author":{"gitId":"kheekheekhee"},"content":"     *","lastModifiedDate":"2021-10-06"},{"lineNumber":220,"author":{"gitId":"kheekheekhee"},"content":"     * @param person to check if is part of the group.","lastModifiedDate":"2021-10-06"},{"lineNumber":221,"author":{"gitId":"kheekheekhee"},"content":"     * @return Whether the person is part of the group.","lastModifiedDate":"2021-10-06"},{"lineNumber":222,"author":{"gitId":"kheekheekhee"},"content":"     */","lastModifiedDate":"2021-10-06"},{"lineNumber":223,"author":{"gitId":"kheekheekhee"},"content":"    public boolean isPartOfGroup(Person person) {","lastModifiedDate":"2021-10-06"},{"lineNumber":224,"author":{"gitId":"kheekheekhee"},"content":"        for (Person member : members) {","lastModifiedDate":"2021-10-06"},{"lineNumber":225,"author":{"gitId":"kheekheekhee"},"content":"            if (member.equals(person)) {","lastModifiedDate":"2021-10-06"},{"lineNumber":226,"author":{"gitId":"kheekheekhee"},"content":"                return true;","lastModifiedDate":"2021-10-06"},{"lineNumber":227,"author":{"gitId":"kheekheekhee"},"content":"            }","lastModifiedDate":"2021-10-06"},{"lineNumber":228,"author":{"gitId":"kheekheekhee"},"content":"        }","lastModifiedDate":"2021-10-06"},{"lineNumber":229,"author":{"gitId":"kheekheekhee"},"content":"        return false;","lastModifiedDate":"2021-10-06"},{"lineNumber":230,"author":{"gitId":"kheekheekhee"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":231,"author":{"gitId":"kheekheekhee"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":232,"author":{"gitId":"ramapriyan912001"},"content":"    /**","lastModifiedDate":"2021-10-05"},{"lineNumber":233,"author":{"gitId":"ramapriyan912001"},"content":"     * Returns an immutable tag set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2021-10-05"},{"lineNumber":234,"author":{"gitId":"ramapriyan912001"},"content":"     * if modification is attempted.","lastModifiedDate":"2021-10-05"},{"lineNumber":235,"author":{"gitId":"ramapriyan912001"},"content":"     */","lastModifiedDate":"2021-10-05"},{"lineNumber":236,"author":{"gitId":"chrus-chong"},"content":"    public Set\u003cTag\u003e getTags() {","lastModifiedDate":"2021-09-24"},{"lineNumber":237,"author":{"gitId":"ramapriyan912001"},"content":"        return Collections.unmodifiableSet(tags);","lastModifiedDate":"2021-10-05"},{"lineNumber":238,"author":{"gitId":"ramapriyan912001"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":239,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":240,"author":{"gitId":"kheekheekhee"},"content":"    public ArrayList\u003cExpense\u003e getExpenses() {","lastModifiedDate":"2021-10-06"},{"lineNumber":241,"author":{"gitId":"kheekheekhee"},"content":"        return expenses;","lastModifiedDate":"2021-10-06"},{"lineNumber":242,"author":{"gitId":"kheekheekhee"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":243,"author":{"gitId":"kheekheekhee"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":244,"author":{"gitId":"ramapriyan912001"},"content":"    /**","lastModifiedDate":"2021-10-05"},{"lineNumber":245,"author":{"gitId":"ramapriyan912001"},"content":"     * Checks for group equality","lastModifiedDate":"2021-10-05"},{"lineNumber":246,"author":{"gitId":"ramapriyan912001"},"content":"     * @param otherGroup group to be compared","lastModifiedDate":"2021-10-05"},{"lineNumber":247,"author":{"gitId":"ramapriyan912001"},"content":"     * @return Boolean value for equality","lastModifiedDate":"2021-10-05"},{"lineNumber":248,"author":{"gitId":"ramapriyan912001"},"content":"     */","lastModifiedDate":"2021-10-05"},{"lineNumber":249,"author":{"gitId":"ramapriyan912001"},"content":"    public boolean isSameGroup(Group otherGroup) {","lastModifiedDate":"2021-10-05"},{"lineNumber":250,"author":{"gitId":"ramapriyan912001"},"content":"        if (this \u003d\u003d otherGroup) {","lastModifiedDate":"2021-10-05"},{"lineNumber":251,"author":{"gitId":"ramapriyan912001"},"content":"            return true;","lastModifiedDate":"2021-10-05"},{"lineNumber":252,"author":{"gitId":"ramapriyan912001"},"content":"        }","lastModifiedDate":"2021-10-05"},{"lineNumber":253,"author":{"gitId":"ramapriyan912001"},"content":"        return otherGroup !\u003d null","lastModifiedDate":"2021-10-05"},{"lineNumber":254,"author":{"gitId":"ramapriyan912001"},"content":"               \u0026\u0026 this.groupName.equals(otherGroup.getGroupName());","lastModifiedDate":"2021-10-05"},{"lineNumber":255,"author":{"gitId":"chrus-chong"},"content":"    }","lastModifiedDate":"2021-09-24"},{"lineNumber":256,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":257,"author":{"gitId":"ramapriyan912001"},"content":"    @Override","lastModifiedDate":"2021-10-05"},{"lineNumber":258,"author":{"gitId":"ramapriyan912001"},"content":"    public boolean equals (Object otherGroup) {","lastModifiedDate":"2021-10-05"},{"lineNumber":259,"author":{"gitId":"ramapriyan912001"},"content":"        if (this \u003d\u003d otherGroup) {","lastModifiedDate":"2021-10-05"},{"lineNumber":260,"author":{"gitId":"ramapriyan912001"},"content":"            return true;","lastModifiedDate":"2021-10-05"},{"lineNumber":261,"author":{"gitId":"ramapriyan912001"},"content":"        } else if (otherGroup \u003d\u003d null) {","lastModifiedDate":"2021-10-05"},{"lineNumber":262,"author":{"gitId":"ramapriyan912001"},"content":"            return false;","lastModifiedDate":"2021-10-05"},{"lineNumber":263,"author":{"gitId":"ramapriyan912001"},"content":"        } else if (otherGroup instanceof Group) {","lastModifiedDate":"2021-10-05"},{"lineNumber":264,"author":{"gitId":"ramapriyan912001"},"content":"            return this.isSameGroup((Group) otherGroup);","lastModifiedDate":"2021-10-05"},{"lineNumber":265,"author":{"gitId":"ramapriyan912001"},"content":"        } else {","lastModifiedDate":"2021-10-05"},{"lineNumber":266,"author":{"gitId":"ramapriyan912001"},"content":"            return false;","lastModifiedDate":"2021-10-05"},{"lineNumber":267,"author":{"gitId":"ramapriyan912001"},"content":"        }","lastModifiedDate":"2021-10-05"},{"lineNumber":268,"author":{"gitId":"ramapriyan912001"},"content":"    }","lastModifiedDate":"2021-09-26"},{"lineNumber":269,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":270,"author":{"gitId":"kheekheekhee"},"content":"    /**","lastModifiedDate":"2021-10-06"},{"lineNumber":271,"author":{"gitId":"kheekheekhee"},"content":"     * Adds an expense into the group.","lastModifiedDate":"2021-10-06"},{"lineNumber":272,"author":{"gitId":"kheekheekhee"},"content":"     *","lastModifiedDate":"2021-10-06"},{"lineNumber":273,"author":{"gitId":"kheekheekhee"},"content":"     * @param expense to be added to the group.","lastModifiedDate":"2021-10-06"},{"lineNumber":274,"author":{"gitId":"kheekheekhee"},"content":"     * @return A new group with the expense added to it.","lastModifiedDate":"2021-10-06"},{"lineNumber":275,"author":{"gitId":"kheekheekhee"},"content":"     */","lastModifiedDate":"2021-10-06"},{"lineNumber":276,"author":{"gitId":"kheekheekhee"},"content":"    public Group addExpense(Expense expense) {","lastModifiedDate":"2021-10-06"},{"lineNumber":277,"author":{"gitId":"kheekheekhee"},"content":"        ArrayList\u003cExpense\u003e newExpenses \u003d new ArrayList\u003c\u003e(expenses);","lastModifiedDate":"2021-10-06"},{"lineNumber":278,"author":{"gitId":"kheekheekhee"},"content":"        newExpenses.add(expense);","lastModifiedDate":"2021-10-06"},{"lineNumber":279,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":280,"author":{"gitId":"ramapriyan912001"},"content":"        Person payer \u003d expense.getPayer();","lastModifiedDate":"2021-10-20"},{"lineNumber":281,"author":{"gitId":"marcuspeh"},"content":"        Cost payerPaidAmount \u003d expense.getCost();","lastModifiedDate":"2021-10-25"},{"lineNumber":282,"author":{"gitId":"ramapriyan912001"},"content":"        paidByPayers.computeIfPresent(payer, (key, val) -\u003e val.add(payerPaidAmount));","lastModifiedDate":"2021-10-25"},{"lineNumber":283,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":284,"author":{"gitId":"marcuspeh"},"content":"        Map\u003cPerson, Cost\u003e individualExpenses \u003d expense.getSplitExpenses();","lastModifiedDate":"2021-10-25"},{"lineNumber":285,"author":{"gitId":"ramapriyan912001"},"content":"        for (Map.Entry\u003cPerson, Cost\u003e entry : individualExpenses.entrySet()) {","lastModifiedDate":"2021-10-20"},{"lineNumber":286,"author":{"gitId":"ramapriyan912001"},"content":"            Person payee \u003d entry.getKey();","lastModifiedDate":"2021-10-20"},{"lineNumber":287,"author":{"gitId":"marcuspeh"},"content":"            Cost payeeExpense \u003d entry.getValue();","lastModifiedDate":"2021-10-25"},{"lineNumber":288,"author":{"gitId":"ramapriyan912001"},"content":"            splitExpenses.computeIfPresent(payee, (key, val) -\u003e val.add(payeeExpense));","lastModifiedDate":"2021-10-25"},{"lineNumber":289,"author":{"gitId":"kheekheekhee"},"content":"        }","lastModifiedDate":"2021-10-19"},{"lineNumber":290,"author":{"gitId":"marcuspeh"},"content":"        return new Group(groupName, members, tags, newExpenses, paidByPayers, splitExpenses);","lastModifiedDate":"2021-10-25"},{"lineNumber":291,"author":{"gitId":"kheekheekhee"},"content":"    }","lastModifiedDate":"2021-10-17"},{"lineNumber":292,"author":{"gitId":"kheekheekhee"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":293,"author":{"gitId":"ramapriyan912001"},"content":"    /**","lastModifiedDate":"2021-10-09"},{"lineNumber":294,"author":{"gitId":"ramapriyan912001"},"content":"     * Removes an expense from the group.","lastModifiedDate":"2021-10-09"},{"lineNumber":295,"author":{"gitId":"ramapriyan912001"},"content":"     *","lastModifiedDate":"2021-10-09"},{"lineNumber":296,"author":{"gitId":"ramapriyan912001"},"content":"     * @param expense to be removed from the group.","lastModifiedDate":"2021-10-09"},{"lineNumber":297,"author":{"gitId":"ramapriyan912001"},"content":"     * @return A new group with the expense removed from it.","lastModifiedDate":"2021-10-09"},{"lineNumber":298,"author":{"gitId":"ramapriyan912001"},"content":"     */","lastModifiedDate":"2021-10-09"},{"lineNumber":299,"author":{"gitId":"ramapriyan912001"},"content":"    public Group deleteExpense(Expense expense) {","lastModifiedDate":"2021-10-09"},{"lineNumber":300,"author":{"gitId":"ramapriyan912001"},"content":"        ArrayList\u003cExpense\u003e newExpenses \u003d new ArrayList\u003c\u003e(expenses);","lastModifiedDate":"2021-10-09"},{"lineNumber":301,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":302,"author":{"gitId":"marcuspeh"},"content":"        Map\u003cPerson, Cost\u003e splitExpenses \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2021-10-25"},{"lineNumber":303,"author":{"gitId":"marcuspeh"},"content":"        splitExpenses.putAll(this.splitExpenses);","lastModifiedDate":"2021-10-25"},{"lineNumber":304,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":305,"author":{"gitId":"marcuspeh"},"content":"        Map\u003cPerson, Cost\u003e paidByPayers \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2021-10-25"},{"lineNumber":306,"author":{"gitId":"marcuspeh"},"content":"        paidByPayers.putAll(this.paidByPayers);","lastModifiedDate":"2021-10-25"},{"lineNumber":307,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":308,"author":{"gitId":"ramapriyan912001"},"content":"        newExpenses.remove(expense);","lastModifiedDate":"2021-10-09"},{"lineNumber":309,"author":{"gitId":"marcuspeh"},"content":"        paidByPayers.computeIfPresent(expense.getPayer(), (key, val) -\u003e val.subtract(expense.getCost()));","lastModifiedDate":"2021-10-25"},{"lineNumber":310,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":311,"author":{"gitId":"marcuspeh"},"content":"        Map\u003cPerson, Cost\u003e individualExpenses \u003d expense.getSplitExpenses();","lastModifiedDate":"2021-10-25"},{"lineNumber":312,"author":{"gitId":"ramapriyan912001"},"content":"        for (Map.Entry\u003cPerson, Cost\u003e entry : individualExpenses.entrySet()) {","lastModifiedDate":"2021-10-20"},{"lineNumber":313,"author":{"gitId":"marcuspeh"},"content":"            splitExpenses.computeIfPresent(entry.getKey(), (key, val) -\u003e val.subtract(entry.getValue()));","lastModifiedDate":"2021-10-25"},{"lineNumber":314,"author":{"gitId":"ramapriyan912001"},"content":"        }","lastModifiedDate":"2021-10-20"},{"lineNumber":315,"author":{"gitId":"marcuspeh"},"content":"        return new Group(groupName, members, tags, newExpenses, paidByPayers, splitExpenses);","lastModifiedDate":"2021-10-25"},{"lineNumber":316,"author":{"gitId":"ramapriyan912001"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":317,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":318,"author":{"gitId":"marcuspeh"},"content":"    /**","lastModifiedDate":"2021-10-10"},{"lineNumber":319,"author":{"gitId":"marcuspeh"},"content":"     * Replaces the person {@code target} with {@code editedPerson}.","lastModifiedDate":"2021-10-10"},{"lineNumber":320,"author":{"gitId":"ramapriyan912001"},"content":"     * @param target Person to edit","lastModifiedDate":"2021-10-10"},{"lineNumber":321,"author":{"gitId":"ramapriyan912001"},"content":"     * @param editedPerson Person with updated details","lastModifiedDate":"2021-10-10"},{"lineNumber":322,"author":{"gitId":"ramapriyan912001"},"content":"     * @return Group with new person","lastModifiedDate":"2021-10-10"},{"lineNumber":323,"author":{"gitId":"marcuspeh"},"content":"     */","lastModifiedDate":"2021-10-10"},{"lineNumber":324,"author":{"gitId":"marcuspeh"},"content":"    public Optional\u003cGroup\u003e updatePerson(Person target, Person editedPerson) {","lastModifiedDate":"2021-10-10"},{"lineNumber":325,"author":{"gitId":"marcuspeh"},"content":"        requireAllNonNull(target, editedPerson);","lastModifiedDate":"2021-10-10"},{"lineNumber":326,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":327,"author":{"gitId":"marcuspeh"},"content":"        boolean isUpdated \u003d false;","lastModifiedDate":"2021-10-10"},{"lineNumber":328,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":329,"author":{"gitId":"marcuspeh"},"content":"        ArrayList\u003cPerson\u003e updatedMembers \u003d members;","lastModifiedDate":"2021-10-10"},{"lineNumber":330,"author":{"gitId":"marcuspeh"},"content":"        int index \u003d members.indexOf(target);","lastModifiedDate":"2021-10-10"},{"lineNumber":331,"author":{"gitId":"marcuspeh"},"content":"        if (index !\u003d -1) {","lastModifiedDate":"2021-10-10"},{"lineNumber":332,"author":{"gitId":"marcuspeh"},"content":"            updatedMembers.set(index, editedPerson);","lastModifiedDate":"2021-10-10"},{"lineNumber":333,"author":{"gitId":"marcuspeh"},"content":"            isUpdated \u003d true;","lastModifiedDate":"2021-10-10"},{"lineNumber":334,"author":{"gitId":"marcuspeh"},"content":"        }","lastModifiedDate":"2021-10-10"},{"lineNumber":335,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":336,"author":{"gitId":"marcuspeh"},"content":"        Optional\u003cArrayList\u003cExpense\u003e\u003e updatedExpensesOptional \u003d updateExpense(target, editedPerson);","lastModifiedDate":"2021-10-10"},{"lineNumber":337,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":338,"author":{"gitId":"marcuspeh"},"content":"        if (updatedExpensesOptional.isPresent()) {","lastModifiedDate":"2021-10-10"},{"lineNumber":339,"author":{"gitId":"marcuspeh"},"content":"            isUpdated \u003d true;","lastModifiedDate":"2021-10-10"},{"lineNumber":340,"author":{"gitId":"marcuspeh"},"content":"        }","lastModifiedDate":"2021-10-10"},{"lineNumber":341,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":342,"author":{"gitId":"marcuspeh"},"content":"        if (isUpdated) {","lastModifiedDate":"2021-10-10"},{"lineNumber":343,"author":{"gitId":"marcuspeh"},"content":"            ArrayList\u003cExpense\u003e updatedExpense \u003d updatedExpensesOptional.orElse(expenses);","lastModifiedDate":"2021-10-10"},{"lineNumber":344,"author":{"gitId":"marcuspeh"},"content":"            return Optional.of(new Group(groupName, updatedMembers, tags, updatedExpense));","lastModifiedDate":"2021-10-10"},{"lineNumber":345,"author":{"gitId":"marcuspeh"},"content":"        } else {","lastModifiedDate":"2021-10-10"},{"lineNumber":346,"author":{"gitId":"marcuspeh"},"content":"            return Optional.empty();","lastModifiedDate":"2021-10-25"},{"lineNumber":347,"author":{"gitId":"marcuspeh"},"content":"        }","lastModifiedDate":"2021-10-10"},{"lineNumber":348,"author":{"gitId":"marcuspeh"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":349,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":350,"author":{"gitId":"marcuspeh"},"content":"    /**","lastModifiedDate":"2021-10-10"},{"lineNumber":351,"author":{"gitId":"marcuspeh"},"content":"     * Replaces the person {@code target} with {@code editedPerson}.","lastModifiedDate":"2021-10-10"},{"lineNumber":352,"author":{"gitId":"marcuspeh"},"content":"     * Only called by {@code updatePerson}.","lastModifiedDate":"2021-10-10"},{"lineNumber":353,"author":{"gitId":"marcuspeh"},"content":"     */","lastModifiedDate":"2021-10-10"},{"lineNumber":354,"author":{"gitId":"marcuspeh"},"content":"    private Optional\u003cArrayList\u003cExpense\u003e\u003e updateExpense(Person target, Person editedPerson) {","lastModifiedDate":"2021-10-10"},{"lineNumber":355,"author":{"gitId":"marcuspeh"},"content":"        requireAllNonNull(target, editedPerson);","lastModifiedDate":"2021-10-10"},{"lineNumber":356,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":357,"author":{"gitId":"marcuspeh"},"content":"        ArrayList\u003cExpense\u003e updatedExpenses \u003d new ArrayList\u003c\u003e(expenses);","lastModifiedDate":"2021-10-10"},{"lineNumber":358,"author":{"gitId":"marcuspeh"},"content":"        boolean isUpdated \u003d false;","lastModifiedDate":"2021-10-10"},{"lineNumber":359,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":360,"author":{"gitId":"marcuspeh"},"content":"        for (int i \u003d 0; i \u003c updatedExpenses.size(); i++) {","lastModifiedDate":"2021-10-10"},{"lineNumber":361,"author":{"gitId":"marcuspeh"},"content":"            Expense expense \u003d updatedExpenses.get(i);","lastModifiedDate":"2021-10-10"},{"lineNumber":362,"author":{"gitId":"marcuspeh"},"content":"            Optional\u003cExpense\u003e updatedExpense \u003d expense.updatePerson(target, editedPerson);","lastModifiedDate":"2021-10-10"},{"lineNumber":363,"author":{"gitId":"marcuspeh"},"content":"            if (updatedExpense.isPresent()) {","lastModifiedDate":"2021-10-10"},{"lineNumber":364,"author":{"gitId":"marcuspeh"},"content":"                updatedExpenses.set(i, updatedExpense.get());","lastModifiedDate":"2021-10-10"},{"lineNumber":365,"author":{"gitId":"marcuspeh"},"content":"                isUpdated \u003d true;","lastModifiedDate":"2021-10-10"},{"lineNumber":366,"author":{"gitId":"marcuspeh"},"content":"            }","lastModifiedDate":"2021-10-10"},{"lineNumber":367,"author":{"gitId":"marcuspeh"},"content":"        }","lastModifiedDate":"2021-10-10"},{"lineNumber":368,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":369,"author":{"gitId":"marcuspeh"},"content":"        if (!isUpdated) {","lastModifiedDate":"2021-10-10"},{"lineNumber":370,"author":{"gitId":"marcuspeh"},"content":"            updatedExpenses \u003d null;","lastModifiedDate":"2021-10-10"},{"lineNumber":371,"author":{"gitId":"marcuspeh"},"content":"        }","lastModifiedDate":"2021-10-10"},{"lineNumber":372,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":373,"author":{"gitId":"marcuspeh"},"content":"        return Optional.ofNullable(updatedExpenses);","lastModifiedDate":"2021-10-10"},{"lineNumber":374,"author":{"gitId":"marcuspeh"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":375,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":376,"author":{"gitId":"ramapriyan912001"},"content":"    @Override","lastModifiedDate":"2021-09-26"},{"lineNumber":377,"author":{"gitId":"ramapriyan912001"},"content":"    public String toString() {","lastModifiedDate":"2021-09-26"},{"lineNumber":378,"author":{"gitId":"ramapriyan912001"},"content":"        //TODO: TO BE IMPROVED TO POSSIBLY LIST ALL MEMBERS NAMES","lastModifiedDate":"2021-09-26"},{"lineNumber":379,"author":{"gitId":"ramapriyan912001"},"content":"        return String.format(\"Group %s with %d members\", this.groupName, this.members.size());","lastModifiedDate":"2021-09-26"},{"lineNumber":380,"author":{"gitId":"chrus-chong"},"content":"    }","lastModifiedDate":"2021-09-24"},{"lineNumber":381,"author":{"gitId":"chrus-chong"},"content":"}","lastModifiedDate":"2021-09-18"}],"authorContributionMap":{"marcuspeh":175,"chrus-chong":54,"kheekheekhee":61,"ramapriyan912001":91}},{"path":"src/main/java/seedu/awe/model/group/GroupContainsKeywordsPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"marcuspeh"},"content":"package seedu.awe.model.group;","lastModifiedDate":"2021-10-10"},{"lineNumber":2,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":3,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":4,"author":{"gitId":"marcuspeh"},"content":"import java.util.List;","lastModifiedDate":"2021-10-10"},{"lineNumber":5,"author":{"gitId":"marcuspeh"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2021-10-10"},{"lineNumber":6,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":7,"author":{"gitId":"marcuspeh"},"content":"import seedu.awe.commons.util.StringUtil;","lastModifiedDate":"2021-10-10"},{"lineNumber":8,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":9,"author":{"gitId":"marcuspeh"},"content":"/**","lastModifiedDate":"2021-10-10"},{"lineNumber":10,"author":{"gitId":"marcuspeh"},"content":" * Tests that a {@code Person}\u0027s {@code Name} matches any of the keywords given.","lastModifiedDate":"2021-10-10"},{"lineNumber":11,"author":{"gitId":"marcuspeh"},"content":" */","lastModifiedDate":"2021-10-10"},{"lineNumber":12,"author":{"gitId":"marcuspeh"},"content":"public class GroupContainsKeywordsPredicate implements Predicate\u003cGroup\u003e {","lastModifiedDate":"2021-10-10"},{"lineNumber":13,"author":{"gitId":"marcuspeh"},"content":"    private final List\u003cString\u003e keywords;","lastModifiedDate":"2021-10-10"},{"lineNumber":14,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":15,"author":{"gitId":"marcuspeh"},"content":"    public GroupContainsKeywordsPredicate(List\u003cString\u003e keywords) {","lastModifiedDate":"2021-10-10"},{"lineNumber":16,"author":{"gitId":"marcuspeh"},"content":"        this.keywords \u003d keywords;","lastModifiedDate":"2021-10-10"},{"lineNumber":17,"author":{"gitId":"marcuspeh"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":18,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":19,"author":{"gitId":"marcuspeh"},"content":"    @Override","lastModifiedDate":"2021-10-10"},{"lineNumber":20,"author":{"gitId":"marcuspeh"},"content":"    public boolean test(Group group) {","lastModifiedDate":"2021-10-10"},{"lineNumber":21,"author":{"gitId":"marcuspeh"},"content":"        return keywords.stream()","lastModifiedDate":"2021-10-10"},{"lineNumber":22,"author":{"gitId":"marcuspeh"},"content":"                .anyMatch(keyword -\u003e StringUtil.containsWordIgnoreCase(group.getGroupName().getName(), keyword));","lastModifiedDate":"2021-10-10"},{"lineNumber":23,"author":{"gitId":"marcuspeh"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":24,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":25,"author":{"gitId":"marcuspeh"},"content":"    @Override","lastModifiedDate":"2021-10-10"},{"lineNumber":26,"author":{"gitId":"marcuspeh"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-10"},{"lineNumber":27,"author":{"gitId":"marcuspeh"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2021-10-10"},{"lineNumber":28,"author":{"gitId":"marcuspeh"},"content":"            return true;","lastModifiedDate":"2021-10-10"},{"lineNumber":29,"author":{"gitId":"marcuspeh"},"content":"        }","lastModifiedDate":"2021-10-10"},{"lineNumber":30,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":31,"author":{"gitId":"marcuspeh"},"content":"        if (!(other instanceof GroupContainsKeywordsPredicate)) { // instanceof handles nulls","lastModifiedDate":"2021-10-10"},{"lineNumber":32,"author":{"gitId":"marcuspeh"},"content":"            return false;","lastModifiedDate":"2021-10-10"},{"lineNumber":33,"author":{"gitId":"marcuspeh"},"content":"        }","lastModifiedDate":"2021-10-10"},{"lineNumber":34,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":35,"author":{"gitId":"marcuspeh"},"content":"        return keywords.equals(((GroupContainsKeywordsPredicate) other).keywords); // state check","lastModifiedDate":"2021-10-10"},{"lineNumber":36,"author":{"gitId":"marcuspeh"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":37,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":38,"author":{"gitId":"marcuspeh"},"content":"}","lastModifiedDate":"2021-10-10"}],"authorContributionMap":{"marcuspeh":38}},{"path":"src/main/java/seedu/awe/model/group/GroupName.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ramapriyan912001"},"content":"package seedu.awe.model.group;","lastModifiedDate":"2021-10-05"},{"lineNumber":2,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":3,"author":{"gitId":"ramapriyan912001"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-09-26"},{"lineNumber":4,"author":{"gitId":"ramapriyan912001"},"content":"import static seedu.awe.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2021-10-05"},{"lineNumber":5,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":6,"author":{"gitId":"ramapriyan912001"},"content":"public class GroupName {","lastModifiedDate":"2021-09-26"},{"lineNumber":7,"author":{"gitId":"ramapriyan912001"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2021-09-26"},{"lineNumber":8,"author":{"gitId":"marcuspeh"},"content":"            \"Group Names should be 50 characters or lesser, only contain alphanumeric characters \"","lastModifiedDate":"2021-11-01"},{"lineNumber":9,"author":{"gitId":"marcuspeh"},"content":"                    + \"and spaces, and it should not be blank\";","lastModifiedDate":"2021-11-01"},{"lineNumber":10,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":11,"author":{"gitId":"ramapriyan912001"},"content":"    /*","lastModifiedDate":"2021-09-26"},{"lineNumber":12,"author":{"gitId":"ramapriyan912001"},"content":"     * The first character of the awe must not be a whitespace,","lastModifiedDate":"2021-10-05"},{"lineNumber":13,"author":{"gitId":"ramapriyan912001"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2021-09-26"},{"lineNumber":14,"author":{"gitId":"ramapriyan912001"},"content":"     */","lastModifiedDate":"2021-09-26"},{"lineNumber":15,"author":{"gitId":"ramapriyan912001"},"content":"    public static final String VALIDATION_REGEX \u003d \"[\\\\p{Alnum}][\\\\p{Alnum} ]*\";","lastModifiedDate":"2021-09-26"},{"lineNumber":16,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":17,"author":{"gitId":"marcuspeh"},"content":"    public static final int MAX_LENGTH \u003d 50;","lastModifiedDate":"2021-11-01"},{"lineNumber":18,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":19,"author":{"gitId":"ramapriyan912001"},"content":"    private final String name;","lastModifiedDate":"2021-10-05"},{"lineNumber":20,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":21,"author":{"gitId":"ramapriyan912001"},"content":"    /**","lastModifiedDate":"2021-09-26"},{"lineNumber":22,"author":{"gitId":"ramapriyan912001"},"content":"     * Constructs a {@code Name}.","lastModifiedDate":"2021-09-26"},{"lineNumber":23,"author":{"gitId":"ramapriyan912001"},"content":"     *","lastModifiedDate":"2021-09-26"},{"lineNumber":24,"author":{"gitId":"ramapriyan912001"},"content":"     * @param name A valid name.","lastModifiedDate":"2021-09-26"},{"lineNumber":25,"author":{"gitId":"ramapriyan912001"},"content":"     */","lastModifiedDate":"2021-09-26"},{"lineNumber":26,"author":{"gitId":"ramapriyan912001"},"content":"    public GroupName(String name) {","lastModifiedDate":"2021-09-26"},{"lineNumber":27,"author":{"gitId":"ramapriyan912001"},"content":"        requireNonNull(name);","lastModifiedDate":"2021-09-26"},{"lineNumber":28,"author":{"gitId":"ramapriyan912001"},"content":"        checkArgument(isValidGroupName(name), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-05"},{"lineNumber":29,"author":{"gitId":"marcuspeh"},"content":"        checkArgument(name.length() \u003c\u003d MAX_LENGTH, MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-11-01"},{"lineNumber":30,"author":{"gitId":"ramapriyan912001"},"content":"        this.name \u003d name;","lastModifiedDate":"2021-09-26"},{"lineNumber":31,"author":{"gitId":"ramapriyan912001"},"content":"    }","lastModifiedDate":"2021-09-26"},{"lineNumber":32,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":33,"author":{"gitId":"ramapriyan912001"},"content":"    /**","lastModifiedDate":"2021-09-26"},{"lineNumber":34,"author":{"gitId":"ramapriyan912001"},"content":"     * Returns true if a given string is a valid name.","lastModifiedDate":"2021-09-26"},{"lineNumber":35,"author":{"gitId":"ramapriyan912001"},"content":"     */","lastModifiedDate":"2021-09-26"},{"lineNumber":36,"author":{"gitId":"ramapriyan912001"},"content":"    public static boolean isValidGroupName(String test) {","lastModifiedDate":"2021-10-05"},{"lineNumber":37,"author":{"gitId":"marcuspeh"},"content":"        return test.matches(VALIDATION_REGEX) \u0026\u0026 test.length() \u003c\u003d MAX_LENGTH;","lastModifiedDate":"2021-11-01"},{"lineNumber":38,"author":{"gitId":"ramapriyan912001"},"content":"    }","lastModifiedDate":"2021-09-26"},{"lineNumber":39,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":40,"author":{"gitId":"ramapriyan912001"},"content":"    /**","lastModifiedDate":"2021-10-05"},{"lineNumber":41,"author":{"gitId":"ramapriyan912001"},"content":"     * Name getter","lastModifiedDate":"2021-10-05"},{"lineNumber":42,"author":{"gitId":"ramapriyan912001"},"content":"     * @return String name","lastModifiedDate":"2021-10-05"},{"lineNumber":43,"author":{"gitId":"ramapriyan912001"},"content":"     */","lastModifiedDate":"2021-10-05"},{"lineNumber":44,"author":{"gitId":"ramapriyan912001"},"content":"    public String getName() {","lastModifiedDate":"2021-10-05"},{"lineNumber":45,"author":{"gitId":"ramapriyan912001"},"content":"        return name;","lastModifiedDate":"2021-10-05"},{"lineNumber":46,"author":{"gitId":"ramapriyan912001"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":47,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":48,"author":{"gitId":"ramapriyan912001"},"content":"    @Override","lastModifiedDate":"2021-09-26"},{"lineNumber":49,"author":{"gitId":"ramapriyan912001"},"content":"    public String toString() {","lastModifiedDate":"2021-09-26"},{"lineNumber":50,"author":{"gitId":"ramapriyan912001"},"content":"        return name;","lastModifiedDate":"2021-09-26"},{"lineNumber":51,"author":{"gitId":"ramapriyan912001"},"content":"    }","lastModifiedDate":"2021-09-26"},{"lineNumber":52,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":53,"author":{"gitId":"ramapriyan912001"},"content":"    @Override","lastModifiedDate":"2021-09-26"},{"lineNumber":54,"author":{"gitId":"ramapriyan912001"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-09-26"},{"lineNumber":55,"author":{"gitId":"marcuspeh"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2021-10-05"},{"lineNumber":56,"author":{"gitId":"marcuspeh"},"content":"            return true;","lastModifiedDate":"2021-10-05"},{"lineNumber":57,"author":{"gitId":"marcuspeh"},"content":"        }","lastModifiedDate":"2021-10-05"},{"lineNumber":58,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":59,"author":{"gitId":"marcuspeh"},"content":"        if (!(other instanceof GroupName)) { // instanceof handles nulls","lastModifiedDate":"2021-10-05"},{"lineNumber":60,"author":{"gitId":"marcuspeh"},"content":"            return false;","lastModifiedDate":"2021-10-05"},{"lineNumber":61,"author":{"gitId":"marcuspeh"},"content":"        }","lastModifiedDate":"2021-10-05"},{"lineNumber":62,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":63,"author":{"gitId":"marcuspeh"},"content":"        return name.equals(((GroupName) other).name); // state check","lastModifiedDate":"2021-10-05"},{"lineNumber":64,"author":{"gitId":"ramapriyan912001"},"content":"    }","lastModifiedDate":"2021-09-26"},{"lineNumber":65,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":66,"author":{"gitId":"ramapriyan912001"},"content":"    @Override","lastModifiedDate":"2021-09-26"},{"lineNumber":67,"author":{"gitId":"ramapriyan912001"},"content":"    public int hashCode() {","lastModifiedDate":"2021-09-26"},{"lineNumber":68,"author":{"gitId":"ramapriyan912001"},"content":"        return name.hashCode();","lastModifiedDate":"2021-09-26"},{"lineNumber":69,"author":{"gitId":"ramapriyan912001"},"content":"    }","lastModifiedDate":"2021-09-26"},{"lineNumber":70,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":71,"author":{"gitId":"ramapriyan912001"},"content":"}","lastModifiedDate":"2021-09-26"}],"authorContributionMap":{"marcuspeh":15,"ramapriyan912001":56}},{"path":"src/main/java/seedu/awe/model/group/UniqueGroupList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ramapriyan912001"},"content":"package seedu.awe.model.group;","lastModifiedDate":"2021-10-05"},{"lineNumber":2,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":3,"author":{"gitId":"ramapriyan912001"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-09-26"},{"lineNumber":4,"author":{"gitId":"ramapriyan912001"},"content":"import static seedu.awe.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2021-10-05"},{"lineNumber":5,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":6,"author":{"gitId":"ramapriyan912001"},"content":"import java.util.Iterator;","lastModifiedDate":"2021-09-26"},{"lineNumber":7,"author":{"gitId":"ramapriyan912001"},"content":"import java.util.List;","lastModifiedDate":"2021-09-26"},{"lineNumber":8,"author":{"gitId":"marcuspeh"},"content":"import java.util.Optional;","lastModifiedDate":"2021-10-10"},{"lineNumber":9,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":10,"author":{"gitId":"ramapriyan912001"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2021-09-26"},{"lineNumber":11,"author":{"gitId":"ramapriyan912001"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-09-26"},{"lineNumber":12,"author":{"gitId":"ramapriyan912001"},"content":"import seedu.awe.model.group.exceptions.DuplicateGroupException;","lastModifiedDate":"2021-10-05"},{"lineNumber":13,"author":{"gitId":"ramapriyan912001"},"content":"import seedu.awe.model.group.exceptions.GroupNotFoundException;","lastModifiedDate":"2021-10-05"},{"lineNumber":14,"author":{"gitId":"marcuspeh"},"content":"import seedu.awe.model.person.Person;","lastModifiedDate":"2021-10-10"},{"lineNumber":15,"author":{"gitId":"ramapriyan912001"},"content":"import seedu.awe.model.person.exceptions.DuplicatePersonException;","lastModifiedDate":"2021-10-05"},{"lineNumber":16,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":17,"author":{"gitId":"ramapriyan912001"},"content":"/**","lastModifiedDate":"2021-09-26"},{"lineNumber":18,"author":{"gitId":"ramapriyan912001"},"content":" * A list of groups that enforces uniqueness between its elements and does not allow nulls.","lastModifiedDate":"2021-10-04"},{"lineNumber":19,"author":{"gitId":"ramapriyan912001"},"content":" * A group is considered unique by comparing using {@code Group#isSameGroup(Group)}. As such, adding and updating of","lastModifiedDate":"2021-10-04"},{"lineNumber":20,"author":{"gitId":"ramapriyan912001"},"content":" * groups uses Group#isSameGroup(Group) for equality so as to ensure that the group being added or updated is","lastModifiedDate":"2021-10-04"},{"lineNumber":21,"author":{"gitId":"ramapriyan912001"},"content":" * unique in terms of identity in the UniqueGroupList. However, the removal of a group uses Group#equals(Object) so","lastModifiedDate":"2021-10-04"},{"lineNumber":22,"author":{"gitId":"ramapriyan912001"},"content":" * as to ensure that the group with exactly the same fields will be removed.","lastModifiedDate":"2021-10-04"},{"lineNumber":23,"author":{"gitId":"ramapriyan912001"},"content":" *","lastModifiedDate":"2021-09-26"},{"lineNumber":24,"author":{"gitId":"ramapriyan912001"},"content":" * Supports a minimal set of list operations.","lastModifiedDate":"2021-09-26"},{"lineNumber":25,"author":{"gitId":"ramapriyan912001"},"content":" *","lastModifiedDate":"2021-09-26"},{"lineNumber":26,"author":{"gitId":"ramapriyan912001"},"content":" * @see Group#isSameGroup(Group)","lastModifiedDate":"2021-10-04"},{"lineNumber":27,"author":{"gitId":"ramapriyan912001"},"content":" */","lastModifiedDate":"2021-09-26"},{"lineNumber":28,"author":{"gitId":"ramapriyan912001"},"content":"public class UniqueGroupList implements Iterable\u003cGroup\u003e {","lastModifiedDate":"2021-09-26"},{"lineNumber":29,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":30,"author":{"gitId":"ramapriyan912001"},"content":"    private final ObservableList\u003cGroup\u003e internalList \u003d FXCollections.observableArrayList();","lastModifiedDate":"2021-09-26"},{"lineNumber":31,"author":{"gitId":"ramapriyan912001"},"content":"    private final ObservableList\u003cGroup\u003e internalUnmodifiableList \u003d","lastModifiedDate":"2021-09-26"},{"lineNumber":32,"author":{"gitId":"ramapriyan912001"},"content":"            FXCollections.unmodifiableObservableList(internalList);","lastModifiedDate":"2021-09-26"},{"lineNumber":33,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":34,"author":{"gitId":"ramapriyan912001"},"content":"    /**","lastModifiedDate":"2021-09-26"},{"lineNumber":35,"author":{"gitId":"ramapriyan912001"},"content":"     * Returns true if the list contains an equivalent group as the given argument.","lastModifiedDate":"2021-10-04"},{"lineNumber":36,"author":{"gitId":"ramapriyan912001"},"content":"     */","lastModifiedDate":"2021-09-26"},{"lineNumber":37,"author":{"gitId":"ramapriyan912001"},"content":"    public boolean contains(Group toCheck) {","lastModifiedDate":"2021-09-26"},{"lineNumber":38,"author":{"gitId":"ramapriyan912001"},"content":"        requireNonNull(toCheck);","lastModifiedDate":"2021-09-26"},{"lineNumber":39,"author":{"gitId":"ramapriyan912001"},"content":"        return internalList.stream().anyMatch(toCheck::isSameGroup);","lastModifiedDate":"2021-09-26"},{"lineNumber":40,"author":{"gitId":"ramapriyan912001"},"content":"    }","lastModifiedDate":"2021-09-26"},{"lineNumber":41,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":42,"author":{"gitId":"ramapriyan912001"},"content":"    /**","lastModifiedDate":"2021-09-26"},{"lineNumber":43,"author":{"gitId":"ramapriyan912001"},"content":"     * Adds a group to the list.","lastModifiedDate":"2021-10-04"},{"lineNumber":44,"author":{"gitId":"ramapriyan912001"},"content":"     * The group must not already exist in the list.","lastModifiedDate":"2021-10-04"},{"lineNumber":45,"author":{"gitId":"ramapriyan912001"},"content":"     */","lastModifiedDate":"2021-09-26"},{"lineNumber":46,"author":{"gitId":"ramapriyan912001"},"content":"    public void add(Group toAdd) {","lastModifiedDate":"2021-10-07"},{"lineNumber":47,"author":{"gitId":"ramapriyan912001"},"content":"        requireNonNull(toAdd);","lastModifiedDate":"2021-09-26"},{"lineNumber":48,"author":{"gitId":"ramapriyan912001"},"content":"        if (contains(toAdd)) {","lastModifiedDate":"2021-09-26"},{"lineNumber":49,"author":{"gitId":"ramapriyan912001"},"content":"            throw new DuplicateGroupException();","lastModifiedDate":"2021-10-04"},{"lineNumber":50,"author":{"gitId":"ramapriyan912001"},"content":"        }","lastModifiedDate":"2021-09-26"},{"lineNumber":51,"author":{"gitId":"ramapriyan912001"},"content":"        internalList.add(toAdd);","lastModifiedDate":"2021-09-26"},{"lineNumber":52,"author":{"gitId":"ramapriyan912001"},"content":"    }","lastModifiedDate":"2021-09-26"},{"lineNumber":53,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":54,"author":{"gitId":"ramapriyan912001"},"content":"    /**","lastModifiedDate":"2021-09-26"},{"lineNumber":55,"author":{"gitId":"ramapriyan912001"},"content":"     * Replaces the group {@code target} in the list with {@code editedGroup}.","lastModifiedDate":"2021-09-26"},{"lineNumber":56,"author":{"gitId":"ramapriyan912001"},"content":"     * {@code target} must exist in the list.","lastModifiedDate":"2021-09-26"},{"lineNumber":57,"author":{"gitId":"ramapriyan912001"},"content":"     * The group identity of {@code editedGroup} must not be the same as another existing group in the list.","lastModifiedDate":"2021-09-26"},{"lineNumber":58,"author":{"gitId":"ramapriyan912001"},"content":"     */","lastModifiedDate":"2021-09-26"},{"lineNumber":59,"author":{"gitId":"ramapriyan912001"},"content":"    public void setGroup(Group target, Group editedGroup) {","lastModifiedDate":"2021-10-07"},{"lineNumber":60,"author":{"gitId":"ramapriyan912001"},"content":"        requireAllNonNull(target, editedGroup);","lastModifiedDate":"2021-09-26"},{"lineNumber":61,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":62,"author":{"gitId":"ramapriyan912001"},"content":"        int index \u003d internalList.indexOf(target);","lastModifiedDate":"2021-09-26"},{"lineNumber":63,"author":{"gitId":"ramapriyan912001"},"content":"        if (index \u003d\u003d -1) {","lastModifiedDate":"2021-09-26"},{"lineNumber":64,"author":{"gitId":"ramapriyan912001"},"content":"            throw new GroupNotFoundException();","lastModifiedDate":"2021-09-26"},{"lineNumber":65,"author":{"gitId":"ramapriyan912001"},"content":"        }","lastModifiedDate":"2021-09-26"},{"lineNumber":66,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":67,"author":{"gitId":"ramapriyan912001"},"content":"        if (!target.isSameGroup(editedGroup) \u0026\u0026 contains(editedGroup)) {","lastModifiedDate":"2021-09-26"},{"lineNumber":68,"author":{"gitId":"ramapriyan912001"},"content":"            throw new DuplicateGroupException();","lastModifiedDate":"2021-09-26"},{"lineNumber":69,"author":{"gitId":"ramapriyan912001"},"content":"        }","lastModifiedDate":"2021-09-26"},{"lineNumber":70,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":71,"author":{"gitId":"ramapriyan912001"},"content":"        internalList.set(index, editedGroup);","lastModifiedDate":"2021-09-26"},{"lineNumber":72,"author":{"gitId":"ramapriyan912001"},"content":"    }","lastModifiedDate":"2021-09-26"},{"lineNumber":73,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":74,"author":{"gitId":"ramapriyan912001"},"content":"    /**","lastModifiedDate":"2021-09-26"},{"lineNumber":75,"author":{"gitId":"ramapriyan912001"},"content":"     * Removes the equivalent group from the list.","lastModifiedDate":"2021-09-26"},{"lineNumber":76,"author":{"gitId":"ramapriyan912001"},"content":"     * The group must exist in the list.","lastModifiedDate":"2021-09-26"},{"lineNumber":77,"author":{"gitId":"ramapriyan912001"},"content":"     */","lastModifiedDate":"2021-09-26"},{"lineNumber":78,"author":{"gitId":"ramapriyan912001"},"content":"    public void remove(Group toRemove) {","lastModifiedDate":"2021-09-26"},{"lineNumber":79,"author":{"gitId":"ramapriyan912001"},"content":"        requireNonNull(toRemove);","lastModifiedDate":"2021-09-26"},{"lineNumber":80,"author":{"gitId":"marcuspeh"},"content":"        boolean isGroupFound \u003d false;","lastModifiedDate":"2021-10-05"},{"lineNumber":81,"author":{"gitId":"ramapriyan912001"},"content":"        Group groupToDelete \u003d null;","lastModifiedDate":"2021-09-26"},{"lineNumber":82,"author":{"gitId":"ramapriyan912001"},"content":"        for (int i \u003d 0; i \u003c internalList.size(); i++) {","lastModifiedDate":"2021-09-26"},{"lineNumber":83,"author":{"gitId":"ramapriyan912001"},"content":"            Group group \u003d internalList.get(i);","lastModifiedDate":"2021-09-26"},{"lineNumber":84,"author":{"gitId":"ramapriyan912001"},"content":"            if (group.isSameGroup(toRemove)) {","lastModifiedDate":"2021-09-26"},{"lineNumber":85,"author":{"gitId":"marcuspeh"},"content":"                isGroupFound \u003d true;","lastModifiedDate":"2021-10-05"},{"lineNumber":86,"author":{"gitId":"ramapriyan912001"},"content":"                groupToDelete \u003d group;","lastModifiedDate":"2021-09-26"},{"lineNumber":87,"author":{"gitId":"ramapriyan912001"},"content":"                break;","lastModifiedDate":"2021-09-26"},{"lineNumber":88,"author":{"gitId":"ramapriyan912001"},"content":"            }","lastModifiedDate":"2021-09-26"},{"lineNumber":89,"author":{"gitId":"ramapriyan912001"},"content":"        }","lastModifiedDate":"2021-09-26"},{"lineNumber":90,"author":{"gitId":"marcuspeh"},"content":"        if (!isGroupFound) {","lastModifiedDate":"2021-10-05"},{"lineNumber":91,"author":{"gitId":"ramapriyan912001"},"content":"            throw new GroupNotFoundException();","lastModifiedDate":"2021-09-26"},{"lineNumber":92,"author":{"gitId":"ramapriyan912001"},"content":"        }","lastModifiedDate":"2021-09-26"},{"lineNumber":93,"author":{"gitId":"ramapriyan912001"},"content":"        internalList.remove(groupToDelete);","lastModifiedDate":"2021-09-26"},{"lineNumber":94,"author":{"gitId":"ramapriyan912001"},"content":"    }","lastModifiedDate":"2021-09-26"},{"lineNumber":95,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":96,"author":{"gitId":"marcuspeh"},"content":"    /**","lastModifiedDate":"2021-10-10"},{"lineNumber":97,"author":{"gitId":"marcuspeh"},"content":"     * Replaces the person {@code target} in groups with {@code editedPerson}.","lastModifiedDate":"2021-10-10"},{"lineNumber":98,"author":{"gitId":"marcuspeh"},"content":"     * The person identity of {@code editedPerson} must not be the same as another existing person in the list.","lastModifiedDate":"2021-10-10"},{"lineNumber":99,"author":{"gitId":"marcuspeh"},"content":"     */","lastModifiedDate":"2021-10-10"},{"lineNumber":100,"author":{"gitId":"marcuspeh"},"content":"    public void updatePerson(Person target, Person editedPerson) {","lastModifiedDate":"2021-10-10"},{"lineNumber":101,"author":{"gitId":"marcuspeh"},"content":"        requireAllNonNull(target, editedPerson);","lastModifiedDate":"2021-10-10"},{"lineNumber":102,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":103,"author":{"gitId":"marcuspeh"},"content":"        for (int i \u003d 0; i \u003c internalList.size(); i++) {","lastModifiedDate":"2021-10-10"},{"lineNumber":104,"author":{"gitId":"marcuspeh"},"content":"            Group group \u003d internalList.get(i);","lastModifiedDate":"2021-10-10"},{"lineNumber":105,"author":{"gitId":"marcuspeh"},"content":"            Optional\u003cGroup\u003e updatedPersonGroup \u003d group.updatePerson(target, editedPerson);","lastModifiedDate":"2021-10-10"},{"lineNumber":106,"author":{"gitId":"marcuspeh"},"content":"            if (updatedPersonGroup.isPresent()) {","lastModifiedDate":"2021-10-10"},{"lineNumber":107,"author":{"gitId":"marcuspeh"},"content":"                internalList.set(i, updatedPersonGroup.get());","lastModifiedDate":"2021-10-10"},{"lineNumber":108,"author":{"gitId":"marcuspeh"},"content":"            }","lastModifiedDate":"2021-10-10"},{"lineNumber":109,"author":{"gitId":"marcuspeh"},"content":"        }","lastModifiedDate":"2021-10-10"},{"lineNumber":110,"author":{"gitId":"marcuspeh"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":111,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":112,"author":{"gitId":"marcuspeh"},"content":"    /**","lastModifiedDate":"2021-10-10"},{"lineNumber":113,"author":{"gitId":"marcuspeh"},"content":"     * Replace the contents of this list with a new list.","lastModifiedDate":"2021-10-10"},{"lineNumber":114,"author":{"gitId":"marcuspeh"},"content":"     *","lastModifiedDate":"2021-10-10"},{"lineNumber":115,"author":{"gitId":"marcuspeh"},"content":"     * @param replacement New contents to place in the original list.","lastModifiedDate":"2021-10-10"},{"lineNumber":116,"author":{"gitId":"marcuspeh"},"content":"     */","lastModifiedDate":"2021-10-10"},{"lineNumber":117,"author":{"gitId":"ramapriyan912001"},"content":"    public void setGroups(UniqueGroupList replacement) {","lastModifiedDate":"2021-09-26"},{"lineNumber":118,"author":{"gitId":"ramapriyan912001"},"content":"        requireNonNull(replacement);","lastModifiedDate":"2021-09-26"},{"lineNumber":119,"author":{"gitId":"ramapriyan912001"},"content":"        internalList.setAll(replacement.internalList);","lastModifiedDate":"2021-09-26"},{"lineNumber":120,"author":{"gitId":"ramapriyan912001"},"content":"    }","lastModifiedDate":"2021-09-26"},{"lineNumber":121,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":122,"author":{"gitId":"ramapriyan912001"},"content":"    /**","lastModifiedDate":"2021-09-26"},{"lineNumber":123,"author":{"gitId":"ramapriyan912001"},"content":"     * Replaces the contents of this list with {@code groups}.","lastModifiedDate":"2021-10-04"},{"lineNumber":124,"author":{"gitId":"ramapriyan912001"},"content":"     * {@code groups} must not contain duplicate groups.","lastModifiedDate":"2021-10-04"},{"lineNumber":125,"author":{"gitId":"ramapriyan912001"},"content":"     */","lastModifiedDate":"2021-09-26"},{"lineNumber":126,"author":{"gitId":"ramapriyan912001"},"content":"    public void setGroups(List\u003cGroup\u003e groups) {","lastModifiedDate":"2021-09-26"},{"lineNumber":127,"author":{"gitId":"ramapriyan912001"},"content":"        requireAllNonNull(groups);","lastModifiedDate":"2021-09-26"},{"lineNumber":128,"author":{"gitId":"ramapriyan912001"},"content":"        if (!groupsAreUnique(groups)) {","lastModifiedDate":"2021-09-26"},{"lineNumber":129,"author":{"gitId":"ramapriyan912001"},"content":"            throw new DuplicatePersonException();","lastModifiedDate":"2021-09-26"},{"lineNumber":130,"author":{"gitId":"ramapriyan912001"},"content":"        }","lastModifiedDate":"2021-09-26"},{"lineNumber":131,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":132,"author":{"gitId":"ramapriyan912001"},"content":"        internalList.setAll(groups);","lastModifiedDate":"2021-09-26"},{"lineNumber":133,"author":{"gitId":"ramapriyan912001"},"content":"    }","lastModifiedDate":"2021-09-26"},{"lineNumber":134,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":135,"author":{"gitId":"ramapriyan912001"},"content":"    /**","lastModifiedDate":"2021-09-26"},{"lineNumber":136,"author":{"gitId":"ramapriyan912001"},"content":"     * Returns the backing list as an unmodifiable {@code ObservableList}.","lastModifiedDate":"2021-09-26"},{"lineNumber":137,"author":{"gitId":"ramapriyan912001"},"content":"     */","lastModifiedDate":"2021-09-26"},{"lineNumber":138,"author":{"gitId":"ramapriyan912001"},"content":"    public ObservableList\u003cGroup\u003e asUnmodifiableObservableList() {","lastModifiedDate":"2021-09-26"},{"lineNumber":139,"author":{"gitId":"ramapriyan912001"},"content":"        return internalUnmodifiableList;","lastModifiedDate":"2021-09-26"},{"lineNumber":140,"author":{"gitId":"ramapriyan912001"},"content":"    }","lastModifiedDate":"2021-09-26"},{"lineNumber":141,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":142,"author":{"gitId":"ramapriyan912001"},"content":"    @Override","lastModifiedDate":"2021-09-26"},{"lineNumber":143,"author":{"gitId":"ramapriyan912001"},"content":"    public Iterator\u003cGroup\u003e iterator() {","lastModifiedDate":"2021-09-26"},{"lineNumber":144,"author":{"gitId":"ramapriyan912001"},"content":"        return internalList.iterator();","lastModifiedDate":"2021-09-26"},{"lineNumber":145,"author":{"gitId":"ramapriyan912001"},"content":"    }","lastModifiedDate":"2021-09-26"},{"lineNumber":146,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":147,"author":{"gitId":"ramapriyan912001"},"content":"    @Override","lastModifiedDate":"2021-09-26"},{"lineNumber":148,"author":{"gitId":"ramapriyan912001"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-09-26"},{"lineNumber":149,"author":{"gitId":"marcuspeh"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2021-10-05"},{"lineNumber":150,"author":{"gitId":"marcuspeh"},"content":"            return true;","lastModifiedDate":"2021-10-05"},{"lineNumber":151,"author":{"gitId":"marcuspeh"},"content":"        }","lastModifiedDate":"2021-10-05"},{"lineNumber":152,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":153,"author":{"gitId":"marcuspeh"},"content":"        if (!(other instanceof UniqueGroupList)) { // instanceof handles nulls","lastModifiedDate":"2021-10-05"},{"lineNumber":154,"author":{"gitId":"marcuspeh"},"content":"            return false;","lastModifiedDate":"2021-10-05"},{"lineNumber":155,"author":{"gitId":"marcuspeh"},"content":"        }","lastModifiedDate":"2021-10-05"},{"lineNumber":156,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":157,"author":{"gitId":"marcuspeh"},"content":"        return internalList.equals(((UniqueGroupList) other).internalList);","lastModifiedDate":"2021-10-05"},{"lineNumber":158,"author":{"gitId":"ramapriyan912001"},"content":"    }","lastModifiedDate":"2021-09-26"},{"lineNumber":159,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":160,"author":{"gitId":"ramapriyan912001"},"content":"    @Override","lastModifiedDate":"2021-09-26"},{"lineNumber":161,"author":{"gitId":"ramapriyan912001"},"content":"    public int hashCode() {","lastModifiedDate":"2021-09-26"},{"lineNumber":162,"author":{"gitId":"ramapriyan912001"},"content":"        return internalList.hashCode();","lastModifiedDate":"2021-09-26"},{"lineNumber":163,"author":{"gitId":"ramapriyan912001"},"content":"    }","lastModifiedDate":"2021-09-26"},{"lineNumber":164,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":165,"author":{"gitId":"ramapriyan912001"},"content":"    /**","lastModifiedDate":"2021-09-26"},{"lineNumber":166,"author":{"gitId":"ramapriyan912001"},"content":"     * Returns true if {@code groups} contains only unique groups.","lastModifiedDate":"2021-10-04"},{"lineNumber":167,"author":{"gitId":"ramapriyan912001"},"content":"     */","lastModifiedDate":"2021-09-26"},{"lineNumber":168,"author":{"gitId":"ramapriyan912001"},"content":"    private boolean groupsAreUnique(List\u003cGroup\u003e groups) {","lastModifiedDate":"2021-09-26"},{"lineNumber":169,"author":{"gitId":"ramapriyan912001"},"content":"        for (int i \u003d 0; i \u003c groups.size() - 1; i++) {","lastModifiedDate":"2021-09-26"},{"lineNumber":170,"author":{"gitId":"ramapriyan912001"},"content":"            for (int j \u003d i + 1; j \u003c groups.size(); j++) {","lastModifiedDate":"2021-09-26"},{"lineNumber":171,"author":{"gitId":"ramapriyan912001"},"content":"                if (groups.get(i).isSameGroup(groups.get(j))) {","lastModifiedDate":"2021-09-26"},{"lineNumber":172,"author":{"gitId":"ramapriyan912001"},"content":"                    return false;","lastModifiedDate":"2021-09-26"},{"lineNumber":173,"author":{"gitId":"ramapriyan912001"},"content":"                }","lastModifiedDate":"2021-09-26"},{"lineNumber":174,"author":{"gitId":"ramapriyan912001"},"content":"            }","lastModifiedDate":"2021-09-26"},{"lineNumber":175,"author":{"gitId":"ramapriyan912001"},"content":"        }","lastModifiedDate":"2021-09-26"},{"lineNumber":176,"author":{"gitId":"ramapriyan912001"},"content":"        return true;","lastModifiedDate":"2021-09-26"},{"lineNumber":177,"author":{"gitId":"ramapriyan912001"},"content":"    }","lastModifiedDate":"2021-09-26"},{"lineNumber":178,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":179,"author":{"gitId":"ramapriyan912001"},"content":"    /**","lastModifiedDate":"2021-10-04"},{"lineNumber":180,"author":{"gitId":"ramapriyan912001"},"content":"     * Get group object from internal list by group name.","lastModifiedDate":"2021-10-04"},{"lineNumber":181,"author":{"gitId":"ramapriyan912001"},"content":"     * @param groupName name of group to find from list.","lastModifiedDate":"2021-10-04"},{"lineNumber":182,"author":{"gitId":"ramapriyan912001"},"content":"     * @return group object from internal list.","lastModifiedDate":"2021-10-04"},{"lineNumber":183,"author":{"gitId":"ramapriyan912001"},"content":"     */","lastModifiedDate":"2021-10-04"},{"lineNumber":184,"author":{"gitId":"ramapriyan912001"},"content":"    public Group getGroupByName(GroupName groupName) {","lastModifiedDate":"2021-10-04"},{"lineNumber":185,"author":{"gitId":"ramapriyan912001"},"content":"        requireNonNull(groupName);","lastModifiedDate":"2021-10-04"},{"lineNumber":186,"author":{"gitId":"ramapriyan912001"},"content":"        for (int i \u003d 0; i \u003c internalList.size(); i++) {","lastModifiedDate":"2021-10-04"},{"lineNumber":187,"author":{"gitId":"ramapriyan912001"},"content":"            Group group \u003d internalList.get(i);","lastModifiedDate":"2021-10-04"},{"lineNumber":188,"author":{"gitId":"ramapriyan912001"},"content":"            if (group.getGroupName().equals(groupName)) {","lastModifiedDate":"2021-10-04"},{"lineNumber":189,"author":{"gitId":"ramapriyan912001"},"content":"                return group;","lastModifiedDate":"2021-10-04"},{"lineNumber":190,"author":{"gitId":"ramapriyan912001"},"content":"            }","lastModifiedDate":"2021-10-04"},{"lineNumber":191,"author":{"gitId":"ramapriyan912001"},"content":"        }","lastModifiedDate":"2021-10-04"},{"lineNumber":192,"author":{"gitId":"chrus-chong"},"content":"        return null;","lastModifiedDate":"2021-10-12"},{"lineNumber":193,"author":{"gitId":"ramapriyan912001"},"content":"    }","lastModifiedDate":"2021-10-04"},{"lineNumber":194,"author":{"gitId":"ramapriyan912001"},"content":"}","lastModifiedDate":"2021-09-26"}],"authorContributionMap":{"marcuspeh":35,"chrus-chong":1,"ramapriyan912001":158}},{"path":"src/main/java/seedu/awe/model/group/exceptions/DuplicateGroupException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ramapriyan912001"},"content":"package seedu.awe.model.group.exceptions;","lastModifiedDate":"2021-10-05"},{"lineNumber":2,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":3,"author":{"gitId":"ramapriyan912001"},"content":"public class DuplicateGroupException extends RuntimeException {","lastModifiedDate":"2021-10-07"},{"lineNumber":4,"author":{"gitId":"ramapriyan912001"},"content":"    public DuplicateGroupException() {","lastModifiedDate":"2021-10-04"},{"lineNumber":5,"author":{"gitId":"ramapriyan912001"},"content":"        super(\"Operation would result in duplicate groups\");","lastModifiedDate":"2021-10-04"},{"lineNumber":6,"author":{"gitId":"ramapriyan912001"},"content":"    }","lastModifiedDate":"2021-10-04"},{"lineNumber":7,"author":{"gitId":"ramapriyan912001"},"content":"}","lastModifiedDate":"2021-09-26"}],"authorContributionMap":{"ramapriyan912001":7}},{"path":"src/main/java/seedu/awe/model/group/exceptions/GroupNotFoundException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ramapriyan912001"},"content":"package seedu.awe.model.group.exceptions;","lastModifiedDate":"2021-10-05"},{"lineNumber":2,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":3,"author":{"gitId":"kheekheekhee"},"content":"/**","lastModifiedDate":"2021-10-12"},{"lineNumber":4,"author":{"gitId":"kheekheekhee"},"content":" * Signals that the operation is unable to find the specified group.","lastModifiedDate":"2021-10-12"},{"lineNumber":5,"author":{"gitId":"kheekheekhee"},"content":" */","lastModifiedDate":"2021-10-12"},{"lineNumber":6,"author":{"gitId":"ramapriyan912001"},"content":"public class GroupNotFoundException extends RuntimeException {","lastModifiedDate":"2021-09-26"},{"lineNumber":7,"author":{"gitId":"ramapriyan912001"},"content":"}","lastModifiedDate":"2021-09-26"}],"authorContributionMap":{"kheekheekhee":3,"ramapriyan912001":4}},{"path":"src/main/java/seedu/awe/model/payment/Payment.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ramapriyan912001"},"content":"package seedu.awe.model.payment;","lastModifiedDate":"2021-10-17"},{"lineNumber":2,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":3,"author":{"gitId":"ramapriyan912001"},"content":"import static seedu.awe.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2021-10-27"},{"lineNumber":4,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":5,"author":{"gitId":"ramapriyan912001"},"content":"import java.util.Objects;","lastModifiedDate":"2021-10-17"},{"lineNumber":6,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":7,"author":{"gitId":"ramapriyan912001"},"content":"import seedu.awe.model.expense.Cost;","lastModifiedDate":"2021-10-17"},{"lineNumber":8,"author":{"gitId":"ramapriyan912001"},"content":"import seedu.awe.model.person.Person;","lastModifiedDate":"2021-10-17"},{"lineNumber":9,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":10,"author":{"gitId":"ramapriyan912001"},"content":"public class Payment implements Comparable\u003cPayment\u003e {","lastModifiedDate":"2021-10-17"},{"lineNumber":11,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":12,"author":{"gitId":"ramapriyan912001"},"content":"    private Person payer;","lastModifiedDate":"2021-10-17"},{"lineNumber":13,"author":{"gitId":"ramapriyan912001"},"content":"    private Person payee;","lastModifiedDate":"2021-10-17"},{"lineNumber":14,"author":{"gitId":"ramapriyan912001"},"content":"    private Cost cost;","lastModifiedDate":"2021-10-17"},{"lineNumber":15,"author":{"gitId":"ramapriyan912001"},"content":"    /**","lastModifiedDate":"2021-10-17"},{"lineNumber":16,"author":{"gitId":"ramapriyan912001"},"content":"     * Payment object represents transactions to be made to balance expenses.","lastModifiedDate":"2021-10-17"},{"lineNumber":17,"author":{"gitId":"ramapriyan912001"},"content":"     * @param payer person to pay amount","lastModifiedDate":"2021-10-17"},{"lineNumber":18,"author":{"gitId":"ramapriyan912001"},"content":"     * @param payee person to be paid amount","lastModifiedDate":"2021-10-17"},{"lineNumber":19,"author":{"gitId":"ramapriyan912001"},"content":"     * @param cost amount to pay","lastModifiedDate":"2021-10-17"},{"lineNumber":20,"author":{"gitId":"ramapriyan912001"},"content":"     */","lastModifiedDate":"2021-10-17"},{"lineNumber":21,"author":{"gitId":"ramapriyan912001"},"content":"    public Payment(Person payer, Person payee, Cost cost) {","lastModifiedDate":"2021-10-17"},{"lineNumber":22,"author":{"gitId":"ramapriyan912001"},"content":"        requireAllNonNull(payer, payee, cost);","lastModifiedDate":"2021-10-27"},{"lineNumber":23,"author":{"gitId":"ramapriyan912001"},"content":"        this.payer \u003d payer;","lastModifiedDate":"2021-10-17"},{"lineNumber":24,"author":{"gitId":"ramapriyan912001"},"content":"        this.payee \u003d payee;","lastModifiedDate":"2021-10-17"},{"lineNumber":25,"author":{"gitId":"ramapriyan912001"},"content":"        this.cost \u003d cost;","lastModifiedDate":"2021-10-17"},{"lineNumber":26,"author":{"gitId":"ramapriyan912001"},"content":"    }","lastModifiedDate":"2021-10-17"},{"lineNumber":27,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":28,"author":{"gitId":"ramapriyan912001"},"content":"    @Override","lastModifiedDate":"2021-10-17"},{"lineNumber":29,"author":{"gitId":"ramapriyan912001"},"content":"    public String toString() {","lastModifiedDate":"2021-10-17"},{"lineNumber":30,"author":{"gitId":"ramapriyan912001"},"content":"        return String.format(\"%s pays $%.2f to %s.\", payee.getName(), getCost().getCost(), payer.getName());","lastModifiedDate":"2021-10-20"},{"lineNumber":31,"author":{"gitId":"ramapriyan912001"},"content":"    }","lastModifiedDate":"2021-10-17"},{"lineNumber":32,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":33,"author":{"gitId":"ramapriyan912001"},"content":"    public Person getPayer() {","lastModifiedDate":"2021-10-17"},{"lineNumber":34,"author":{"gitId":"ramapriyan912001"},"content":"        return payer;","lastModifiedDate":"2021-10-17"},{"lineNumber":35,"author":{"gitId":"ramapriyan912001"},"content":"    }","lastModifiedDate":"2021-10-17"},{"lineNumber":36,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":37,"author":{"gitId":"ramapriyan912001"},"content":"    public Person getPayee() {","lastModifiedDate":"2021-10-17"},{"lineNumber":38,"author":{"gitId":"ramapriyan912001"},"content":"        return payee;","lastModifiedDate":"2021-10-17"},{"lineNumber":39,"author":{"gitId":"ramapriyan912001"},"content":"    }","lastModifiedDate":"2021-10-17"},{"lineNumber":40,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":41,"author":{"gitId":"ramapriyan912001"},"content":"    public Cost getCost() {","lastModifiedDate":"2021-10-17"},{"lineNumber":42,"author":{"gitId":"ramapriyan912001"},"content":"        return cost;","lastModifiedDate":"2021-10-17"},{"lineNumber":43,"author":{"gitId":"ramapriyan912001"},"content":"    }","lastModifiedDate":"2021-10-17"},{"lineNumber":44,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":45,"author":{"gitId":"ramapriyan912001"},"content":"    @Override","lastModifiedDate":"2021-10-17"},{"lineNumber":46,"author":{"gitId":"ramapriyan912001"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-17"},{"lineNumber":47,"author":{"gitId":"ramapriyan912001"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2021-10-17"},{"lineNumber":48,"author":{"gitId":"ramapriyan912001"},"content":"            return true;","lastModifiedDate":"2021-10-17"},{"lineNumber":49,"author":{"gitId":"ramapriyan912001"},"content":"        }","lastModifiedDate":"2021-10-17"},{"lineNumber":50,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":51,"author":{"gitId":"ramapriyan912001"},"content":"        if (!(other instanceof Payment)) {","lastModifiedDate":"2021-10-17"},{"lineNumber":52,"author":{"gitId":"ramapriyan912001"},"content":"            return false;","lastModifiedDate":"2021-10-17"},{"lineNumber":53,"author":{"gitId":"ramapriyan912001"},"content":"        }","lastModifiedDate":"2021-10-17"},{"lineNumber":54,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":55,"author":{"gitId":"ramapriyan912001"},"content":"        Payment otherExpense \u003d (Payment) other;","lastModifiedDate":"2021-10-17"},{"lineNumber":56,"author":{"gitId":"ramapriyan912001"},"content":"        boolean isSamePayer \u003d otherExpense.getPayer().equals(getPayer());","lastModifiedDate":"2021-10-17"},{"lineNumber":57,"author":{"gitId":"ramapriyan912001"},"content":"        boolean isSamePayee \u003d otherExpense.getPayee().equals(getPayee());","lastModifiedDate":"2021-10-17"},{"lineNumber":58,"author":{"gitId":"ramapriyan912001"},"content":"        boolean isSameCost \u003d otherExpense.getCost().equals(getCost());","lastModifiedDate":"2021-10-17"},{"lineNumber":59,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":60,"author":{"gitId":"marcuspeh"},"content":"        return isSamePayer \u0026\u0026 isSamePayee \u0026\u0026 isSameCost;","lastModifiedDate":"2021-10-17"},{"lineNumber":61,"author":{"gitId":"ramapriyan912001"},"content":"    }","lastModifiedDate":"2021-10-17"},{"lineNumber":62,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":63,"author":{"gitId":"ramapriyan912001"},"content":"    @Override","lastModifiedDate":"2021-10-17"},{"lineNumber":64,"author":{"gitId":"ramapriyan912001"},"content":"    public int hashCode() {","lastModifiedDate":"2021-10-17"},{"lineNumber":65,"author":{"gitId":"marcuspeh"},"content":"        return Objects.hash(payer, payee, cost);","lastModifiedDate":"2021-10-17"},{"lineNumber":66,"author":{"gitId":"ramapriyan912001"},"content":"    }","lastModifiedDate":"2021-10-17"},{"lineNumber":67,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":68,"author":{"gitId":"ramapriyan912001"},"content":"    /**","lastModifiedDate":"2021-10-17"},{"lineNumber":69,"author":{"gitId":"ramapriyan912001"},"content":"     * Sort by payer name then payee name.","lastModifiedDate":"2021-10-17"},{"lineNumber":70,"author":{"gitId":"ramapriyan912001"},"content":"     * @param otherPayment Payment to compare","lastModifiedDate":"2021-10-17"},{"lineNumber":71,"author":{"gitId":"ramapriyan912001"},"content":"     * @return Integer to mark priority","lastModifiedDate":"2021-10-17"},{"lineNumber":72,"author":{"gitId":"ramapriyan912001"},"content":"     */","lastModifiedDate":"2021-10-17"},{"lineNumber":73,"author":{"gitId":"ramapriyan912001"},"content":"    @Override","lastModifiedDate":"2021-10-17"},{"lineNumber":74,"author":{"gitId":"ramapriyan912001"},"content":"    public int compareTo(Payment otherPayment) {","lastModifiedDate":"2021-10-17"},{"lineNumber":75,"author":{"gitId":"ramapriyan912001"},"content":"        String payeeName \u003d this.getPayee().getName().getFullName();","lastModifiedDate":"2021-10-17"},{"lineNumber":76,"author":{"gitId":"ramapriyan912001"},"content":"        String otherPayeeName \u003d otherPayment.getPayee().getName().getFullName();","lastModifiedDate":"2021-10-31"},{"lineNumber":77,"author":{"gitId":"ramapriyan912001"},"content":"        String payerName \u003d this.getPayer().getName().getFullName();","lastModifiedDate":"2021-10-17"},{"lineNumber":78,"author":{"gitId":"ramapriyan912001"},"content":"        String otherPayerName \u003d otherPayment.getPayer().getName().getFullName();","lastModifiedDate":"2021-10-31"},{"lineNumber":79,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":80,"author":{"gitId":"ramapriyan912001"},"content":"        if (payerName.compareTo(otherPayerName) \u003d\u003d -1) {","lastModifiedDate":"2021-10-17"},{"lineNumber":81,"author":{"gitId":"ramapriyan912001"},"content":"            return -1;","lastModifiedDate":"2021-10-17"},{"lineNumber":82,"author":{"gitId":"ramapriyan912001"},"content":"        } else if (payerName.compareTo(otherPayerName) \u003d\u003d 1) {","lastModifiedDate":"2021-10-17"},{"lineNumber":83,"author":{"gitId":"ramapriyan912001"},"content":"            return 1;","lastModifiedDate":"2021-10-17"},{"lineNumber":84,"author":{"gitId":"ramapriyan912001"},"content":"        } else {","lastModifiedDate":"2021-10-17"},{"lineNumber":85,"author":{"gitId":"ramapriyan912001"},"content":"            if (payeeName.compareTo(otherPayeeName) \u003d\u003d -1) {","lastModifiedDate":"2021-10-17"},{"lineNumber":86,"author":{"gitId":"ramapriyan912001"},"content":"                return -1;","lastModifiedDate":"2021-10-17"},{"lineNumber":87,"author":{"gitId":"ramapriyan912001"},"content":"            } else if (payeeName.compareTo(otherPayeeName) \u003d\u003d 1) {","lastModifiedDate":"2021-10-17"},{"lineNumber":88,"author":{"gitId":"ramapriyan912001"},"content":"                return 1;","lastModifiedDate":"2021-10-17"},{"lineNumber":89,"author":{"gitId":"ramapriyan912001"},"content":"            } else {","lastModifiedDate":"2021-10-17"},{"lineNumber":90,"author":{"gitId":"ramapriyan912001"},"content":"                return 0;","lastModifiedDate":"2021-10-17"},{"lineNumber":91,"author":{"gitId":"ramapriyan912001"},"content":"            }","lastModifiedDate":"2021-10-17"},{"lineNumber":92,"author":{"gitId":"ramapriyan912001"},"content":"        }","lastModifiedDate":"2021-10-17"},{"lineNumber":93,"author":{"gitId":"ramapriyan912001"},"content":"    }","lastModifiedDate":"2021-10-17"},{"lineNumber":94,"author":{"gitId":"ramapriyan912001"},"content":"}","lastModifiedDate":"2021-10-17"}],"authorContributionMap":{"marcuspeh":2,"ramapriyan912001":92}},{"path":"src/main/java/seedu/awe/model/payment/PaymentList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ramapriyan912001"},"content":"package seedu.awe.model.payment;","lastModifiedDate":"2021-10-17"},{"lineNumber":2,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":3,"author":{"gitId":"ramapriyan912001"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-17"},{"lineNumber":4,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":5,"author":{"gitId":"ramapriyan912001"},"content":"import java.util.Iterator;","lastModifiedDate":"2021-10-17"},{"lineNumber":6,"author":{"gitId":"ramapriyan912001"},"content":"import java.util.List;","lastModifiedDate":"2021-10-17"},{"lineNumber":7,"author":{"gitId":"ramapriyan912001"},"content":"import java.util.Optional;","lastModifiedDate":"2021-10-17"},{"lineNumber":8,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":9,"author":{"gitId":"ramapriyan912001"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2021-10-17"},{"lineNumber":10,"author":{"gitId":"ramapriyan912001"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-10-17"},{"lineNumber":11,"author":{"gitId":"ramapriyan912001"},"content":"import seedu.awe.model.group.Group;","lastModifiedDate":"2021-10-17"},{"lineNumber":12,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":13,"author":{"gitId":"ramapriyan912001"},"content":"public class PaymentList implements Iterable\u003cPayment\u003e {","lastModifiedDate":"2021-10-17"},{"lineNumber":14,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":15,"author":{"gitId":"ramapriyan912001"},"content":"    private final ObservableList\u003cPayment\u003e internalList \u003d FXCollections.observableArrayList();","lastModifiedDate":"2021-10-17"},{"lineNumber":16,"author":{"gitId":"ramapriyan912001"},"content":"    private final ObservableList\u003cPayment\u003e internalUnmodifiableList \u003d","lastModifiedDate":"2021-10-17"},{"lineNumber":17,"author":{"gitId":"ramapriyan912001"},"content":"            FXCollections.unmodifiableObservableList(internalList);","lastModifiedDate":"2021-10-17"},{"lineNumber":18,"author":{"gitId":"ramapriyan912001"},"content":"    private Optional\u003cGroup\u003e group;","lastModifiedDate":"2021-10-17"},{"lineNumber":19,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":20,"author":{"gitId":"ramapriyan912001"},"content":"    public PaymentList() {","lastModifiedDate":"2021-10-17"},{"lineNumber":21,"author":{"gitId":"ramapriyan912001"},"content":"        group \u003d Optional.empty();","lastModifiedDate":"2021-10-17"},{"lineNumber":22,"author":{"gitId":"ramapriyan912001"},"content":"    }","lastModifiedDate":"2021-10-17"},{"lineNumber":23,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":24,"author":{"gitId":"ramapriyan912001"},"content":"    /**","lastModifiedDate":"2021-10-27"},{"lineNumber":25,"author":{"gitId":"ramapriyan912001"},"content":"     * List of payments.","lastModifiedDate":"2021-10-27"},{"lineNumber":26,"author":{"gitId":"ramapriyan912001"},"content":"     * @param group group from which payments are generated.","lastModifiedDate":"2021-10-27"},{"lineNumber":27,"author":{"gitId":"ramapriyan912001"},"content":"     */","lastModifiedDate":"2021-10-27"},{"lineNumber":28,"author":{"gitId":"ramapriyan912001"},"content":"    public PaymentList(Group group) {","lastModifiedDate":"2021-10-17"},{"lineNumber":29,"author":{"gitId":"ramapriyan912001"},"content":"        requireNonNull(group);","lastModifiedDate":"2021-10-27"},{"lineNumber":30,"author":{"gitId":"ramapriyan912001"},"content":"        this.group \u003d Optional.of(group);","lastModifiedDate":"2021-10-17"},{"lineNumber":31,"author":{"gitId":"ramapriyan912001"},"content":"    }","lastModifiedDate":"2021-10-17"},{"lineNumber":32,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":33,"author":{"gitId":"ramapriyan912001"},"content":"    public void setGroup(Group group) {","lastModifiedDate":"2021-10-17"},{"lineNumber":34,"author":{"gitId":"ramapriyan912001"},"content":"        this.group \u003d Optional.of(group);","lastModifiedDate":"2021-10-17"},{"lineNumber":35,"author":{"gitId":"ramapriyan912001"},"content":"    }","lastModifiedDate":"2021-10-17"},{"lineNumber":36,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":37,"author":{"gitId":"ramapriyan912001"},"content":"    public Optional\u003cGroup\u003e getGroup() {","lastModifiedDate":"2021-10-17"},{"lineNumber":38,"author":{"gitId":"ramapriyan912001"},"content":"        return group;","lastModifiedDate":"2021-10-17"},{"lineNumber":39,"author":{"gitId":"ramapriyan912001"},"content":"    }","lastModifiedDate":"2021-10-17"},{"lineNumber":40,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":41,"author":{"gitId":"ramapriyan912001"},"content":"    /**","lastModifiedDate":"2021-10-17"},{"lineNumber":42,"author":{"gitId":"ramapriyan912001"},"content":"     * Returns true if the list contains an equivalent payment as the given argument.","lastModifiedDate":"2021-10-17"},{"lineNumber":43,"author":{"gitId":"ramapriyan912001"},"content":"     */","lastModifiedDate":"2021-10-17"},{"lineNumber":44,"author":{"gitId":"ramapriyan912001"},"content":"    public boolean contains(Payment toCheck) {","lastModifiedDate":"2021-10-17"},{"lineNumber":45,"author":{"gitId":"ramapriyan912001"},"content":"        requireNonNull(toCheck);","lastModifiedDate":"2021-10-17"},{"lineNumber":46,"author":{"gitId":"ramapriyan912001"},"content":"        return internalList.stream().anyMatch(toCheck::equals);","lastModifiedDate":"2021-10-17"},{"lineNumber":47,"author":{"gitId":"ramapriyan912001"},"content":"    }","lastModifiedDate":"2021-10-17"},{"lineNumber":48,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":49,"author":{"gitId":"ramapriyan912001"},"content":"    /**","lastModifiedDate":"2021-10-17"},{"lineNumber":50,"author":{"gitId":"ramapriyan912001"},"content":"     * Clears the entire list of payments.","lastModifiedDate":"2021-10-17"},{"lineNumber":51,"author":{"gitId":"ramapriyan912001"},"content":"     */","lastModifiedDate":"2021-10-17"},{"lineNumber":52,"author":{"gitId":"ramapriyan912001"},"content":"    public void clear() {","lastModifiedDate":"2021-10-17"},{"lineNumber":53,"author":{"gitId":"ramapriyan912001"},"content":"        internalList.clear();","lastModifiedDate":"2021-10-17"},{"lineNumber":54,"author":{"gitId":"ramapriyan912001"},"content":"    }","lastModifiedDate":"2021-10-17"},{"lineNumber":55,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":56,"author":{"gitId":"ramapriyan912001"},"content":"    /**","lastModifiedDate":"2021-10-17"},{"lineNumber":57,"author":{"gitId":"ramapriyan912001"},"content":"     * Adds all payments from the given list to the list of payments.","lastModifiedDate":"2021-10-17"},{"lineNumber":58,"author":{"gitId":"ramapriyan912001"},"content":"     *","lastModifiedDate":"2021-10-17"},{"lineNumber":59,"author":{"gitId":"ramapriyan912001"},"content":"     * @param payments List of payments to add.","lastModifiedDate":"2021-10-17"},{"lineNumber":60,"author":{"gitId":"ramapriyan912001"},"content":"     */","lastModifiedDate":"2021-10-17"},{"lineNumber":61,"author":{"gitId":"ramapriyan912001"},"content":"    public void addAll(List\u003cPayment\u003e payments) {","lastModifiedDate":"2021-10-17"},{"lineNumber":62,"author":{"gitId":"ramapriyan912001"},"content":"        internalList.addAll(payments);","lastModifiedDate":"2021-10-17"},{"lineNumber":63,"author":{"gitId":"ramapriyan912001"},"content":"    }","lastModifiedDate":"2021-10-17"},{"lineNumber":64,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":65,"author":{"gitId":"ramapriyan912001"},"content":"    /**","lastModifiedDate":"2021-10-17"},{"lineNumber":66,"author":{"gitId":"ramapriyan912001"},"content":"     * Adds an payment to the list.","lastModifiedDate":"2021-10-17"},{"lineNumber":67,"author":{"gitId":"ramapriyan912001"},"content":"     */","lastModifiedDate":"2021-10-17"},{"lineNumber":68,"author":{"gitId":"ramapriyan912001"},"content":"    public void add(Payment toAdd) {","lastModifiedDate":"2021-10-17"},{"lineNumber":69,"author":{"gitId":"ramapriyan912001"},"content":"        requireNonNull(toAdd);","lastModifiedDate":"2021-10-17"},{"lineNumber":70,"author":{"gitId":"ramapriyan912001"},"content":"        internalList.add(toAdd);","lastModifiedDate":"2021-10-17"},{"lineNumber":71,"author":{"gitId":"ramapriyan912001"},"content":"    }","lastModifiedDate":"2021-10-17"},{"lineNumber":72,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":73,"author":{"gitId":"ramapriyan912001"},"content":"    /**","lastModifiedDate":"2021-10-17"},{"lineNumber":74,"author":{"gitId":"ramapriyan912001"},"content":"     * Returns the backing list as an unmodifiable {@code ObservableList}.","lastModifiedDate":"2021-10-17"},{"lineNumber":75,"author":{"gitId":"ramapriyan912001"},"content":"     */","lastModifiedDate":"2021-10-17"},{"lineNumber":76,"author":{"gitId":"ramapriyan912001"},"content":"    public ObservableList\u003cPayment\u003e asUnmodifiableObservableList() {","lastModifiedDate":"2021-10-17"},{"lineNumber":77,"author":{"gitId":"ramapriyan912001"},"content":"        return internalUnmodifiableList;","lastModifiedDate":"2021-10-17"},{"lineNumber":78,"author":{"gitId":"ramapriyan912001"},"content":"    }","lastModifiedDate":"2021-10-17"},{"lineNumber":79,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":80,"author":{"gitId":"ramapriyan912001"},"content":"    @Override","lastModifiedDate":"2021-10-17"},{"lineNumber":81,"author":{"gitId":"ramapriyan912001"},"content":"    public Iterator\u003cPayment\u003e iterator() {","lastModifiedDate":"2021-10-17"},{"lineNumber":82,"author":{"gitId":"ramapriyan912001"},"content":"        return internalList.iterator();","lastModifiedDate":"2021-10-17"},{"lineNumber":83,"author":{"gitId":"ramapriyan912001"},"content":"    }","lastModifiedDate":"2021-10-17"},{"lineNumber":84,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":85,"author":{"gitId":"ramapriyan912001"},"content":"    @Override","lastModifiedDate":"2021-10-17"},{"lineNumber":86,"author":{"gitId":"ramapriyan912001"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-17"},{"lineNumber":87,"author":{"gitId":"ramapriyan912001"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2021-10-17"},{"lineNumber":88,"author":{"gitId":"ramapriyan912001"},"content":"            return true;","lastModifiedDate":"2021-10-17"},{"lineNumber":89,"author":{"gitId":"ramapriyan912001"},"content":"        }","lastModifiedDate":"2021-10-17"},{"lineNumber":90,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":91,"author":{"gitId":"ramapriyan912001"},"content":"        if (!(other instanceof PaymentList)) { // instanceof handles nulls","lastModifiedDate":"2021-10-17"},{"lineNumber":92,"author":{"gitId":"ramapriyan912001"},"content":"            return false;","lastModifiedDate":"2021-10-17"},{"lineNumber":93,"author":{"gitId":"ramapriyan912001"},"content":"        }","lastModifiedDate":"2021-10-17"},{"lineNumber":94,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":95,"author":{"gitId":"ramapriyan912001"},"content":"        return internalList.equals(((PaymentList) other).internalList);","lastModifiedDate":"2021-10-17"},{"lineNumber":96,"author":{"gitId":"ramapriyan912001"},"content":"    }","lastModifiedDate":"2021-10-17"},{"lineNumber":97,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":98,"author":{"gitId":"ramapriyan912001"},"content":"    @Override","lastModifiedDate":"2021-10-17"},{"lineNumber":99,"author":{"gitId":"ramapriyan912001"},"content":"    public int hashCode() {","lastModifiedDate":"2021-10-17"},{"lineNumber":100,"author":{"gitId":"ramapriyan912001"},"content":"        return internalList.hashCode();","lastModifiedDate":"2021-10-17"},{"lineNumber":101,"author":{"gitId":"ramapriyan912001"},"content":"    }","lastModifiedDate":"2021-10-17"},{"lineNumber":102,"author":{"gitId":"ramapriyan912001"},"content":"}","lastModifiedDate":"2021-10-17"}],"authorContributionMap":{"ramapriyan912001":102}},{"path":"src/main/java/seedu/awe/model/person/Name.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ramapriyan912001"},"content":"package seedu.awe.model.person;","lastModifiedDate":"2021-10-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"ramapriyan912001"},"content":"import static seedu.awe.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2021-10-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"ramapriyan912001"},"content":" * Represents a Person\u0027s name in the awe book.","lastModifiedDate":"2021-10-05"},{"lineNumber":8,"author":{"gitId":"ramapriyan912001"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidGroupName(String)}","lastModifiedDate":"2021-10-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Name {","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2018-09-22"},{"lineNumber":13,"author":{"gitId":"marcuspeh"},"content":"            \"Names should be 50 characters or lesser, only contain alphanumeric \"","lastModifiedDate":"2021-11-01"},{"lineNumber":14,"author":{"gitId":"marcuspeh"},"content":"                    + \"characters and spaces, and should not be blank\";","lastModifiedDate":"2021-11-01"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2017-01-16"},{"lineNumber":17,"author":{"gitId":"ramapriyan912001"},"content":"     * The first character of the awe must not be a whitespace,","lastModifiedDate":"2021-10-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2017-01-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-16"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d \"[\\\\p{Alnum}][\\\\p{Alnum} ]*\";","lastModifiedDate":"2018-09-22"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"marcuspeh"},"content":"    public static final int MAX_LENGTH \u003d 50;","lastModifiedDate":"2021-11-01"},{"lineNumber":23,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public final String fullName;","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * Constructs a {@code Name}.","lastModifiedDate":"2017-05-30"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * @param name A valid name.","lastModifiedDate":"2017-05-30"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public Name(String name) {","lastModifiedDate":"2017-05-30"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        requireNonNull(name);","lastModifiedDate":"2017-05-15"},{"lineNumber":33,"author":{"gitId":"ramapriyan912001"},"content":"        checkArgument(isValidGroupName(name), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-05"},{"lineNumber":34,"author":{"gitId":"marcuspeh"},"content":"        checkArgument(name.length() \u003c\u003d MAX_LENGTH, MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-11-01"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        fullName \u003d name;","lastModifiedDate":"2018-08-14"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"ramapriyan912001"},"content":"    /**","lastModifiedDate":"2021-10-17"},{"lineNumber":39,"author":{"gitId":"ramapriyan912001"},"content":"     * Gets the name String of name object.","lastModifiedDate":"2021-10-17"},{"lineNumber":40,"author":{"gitId":"ramapriyan912001"},"content":"     * @return String name","lastModifiedDate":"2021-10-17"},{"lineNumber":41,"author":{"gitId":"ramapriyan912001"},"content":"     */","lastModifiedDate":"2021-10-17"},{"lineNumber":42,"author":{"gitId":"ramapriyan912001"},"content":"    public String getFullName() {","lastModifiedDate":"2021-10-17"},{"lineNumber":43,"author":{"gitId":"ramapriyan912001"},"content":"        return fullName;","lastModifiedDate":"2021-10-17"},{"lineNumber":44,"author":{"gitId":"ramapriyan912001"},"content":"    }","lastModifiedDate":"2021-10-17"},{"lineNumber":45,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     * Returns true if a given string is a valid name.","lastModifiedDate":"2018-04-05"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"ramapriyan912001"},"content":"    public static boolean isValidGroupName(String test) {","lastModifiedDate":"2021-10-05"},{"lineNumber":50,"author":{"gitId":"marcuspeh"},"content":"        return test.matches(VALIDATION_REGEX) \u0026\u0026 test.length() \u003c\u003d MAX_LENGTH;","lastModifiedDate":"2021-11-01"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        return fullName;","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":61,"author":{"gitId":"marcuspeh"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2021-10-05"},{"lineNumber":62,"author":{"gitId":"marcuspeh"},"content":"            return true;","lastModifiedDate":"2021-10-05"},{"lineNumber":63,"author":{"gitId":"marcuspeh"},"content":"        }","lastModifiedDate":"2021-10-05"},{"lineNumber":64,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":65,"author":{"gitId":"marcuspeh"},"content":"        if (!(other instanceof Name)) { // instanceof handles nulls","lastModifiedDate":"2021-10-05"},{"lineNumber":66,"author":{"gitId":"marcuspeh"},"content":"            return false;","lastModifiedDate":"2021-10-05"},{"lineNumber":67,"author":{"gitId":"marcuspeh"},"content":"        }","lastModifiedDate":"2021-10-05"},{"lineNumber":68,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":69,"author":{"gitId":"marcuspeh"},"content":"        return fullName.equals(((Name) other).fullName); // state check","lastModifiedDate":"2021-10-05"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        return fullName.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":77,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"marcuspeh":15,"ramapriyan912001":15,"-":47}},{"path":"src/main/java/seedu/awe/model/person/NameContainsKeywordsPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ramapriyan912001"},"content":"package seedu.awe.model.person;","lastModifiedDate":"2021-10-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-12"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":6,"author":{"gitId":"ramapriyan912001"},"content":"import seedu.awe.commons.util.StringUtil;","lastModifiedDate":"2021-10-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Tests that a {@code Person}\u0027s {@code Name} matches any of the keywords given.","lastModifiedDate":"2018-01-10"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class NameContainsKeywordsPredicate implements Predicate\u003cPerson\u003e {","lastModifiedDate":"2018-01-10"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private final List\u003cString\u003e keywords;","lastModifiedDate":"2017-06-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public NameContainsKeywordsPredicate(List\u003cString\u003e keywords) {","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        this.keywords \u003d keywords;","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public boolean test(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        return keywords.stream()","lastModifiedDate":"2017-06-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"                .anyMatch(keyword -\u003e StringUtil.containsWordIgnoreCase(person.getName().fullName, keyword));","lastModifiedDate":"2017-06-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"marcuspeh"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2021-10-05"},{"lineNumber":27,"author":{"gitId":"marcuspeh"},"content":"            return true;","lastModifiedDate":"2021-10-05"},{"lineNumber":28,"author":{"gitId":"marcuspeh"},"content":"        }","lastModifiedDate":"2021-10-05"},{"lineNumber":29,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":30,"author":{"gitId":"marcuspeh"},"content":"        if (!(other instanceof NameContainsKeywordsPredicate)) { // instanceof handles nulls","lastModifiedDate":"2021-10-05"},{"lineNumber":31,"author":{"gitId":"marcuspeh"},"content":"            return false;","lastModifiedDate":"2021-10-05"},{"lineNumber":32,"author":{"gitId":"marcuspeh"},"content":"        }","lastModifiedDate":"2021-10-05"},{"lineNumber":33,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":34,"author":{"gitId":"marcuspeh"},"content":"        return keywords.equals(((NameContainsKeywordsPredicate) other).keywords); // state check","lastModifiedDate":"2021-10-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"marcuspeh":9,"ramapriyan912001":2,"-":26}},{"path":"src/main/java/seedu/awe/model/person/Person.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ramapriyan912001"},"content":"package seedu.awe.model.person;","lastModifiedDate":"2021-10-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"ramapriyan912001"},"content":"import static seedu.awe.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2021-10-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"chrus-chong"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-09-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-03-07"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-03-26"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"chrus-chong"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-10-03"},{"lineNumber":12,"author":{"gitId":"ramapriyan912001"},"content":"import seedu.awe.model.group.Group;","lastModifiedDate":"2021-10-05"},{"lineNumber":13,"author":{"gitId":"ramapriyan912001"},"content":"import seedu.awe.model.tag.Tag;","lastModifiedDate":"2021-10-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"ramapriyan912001"},"content":" * Represents a Person in the awe book.","lastModifiedDate":"2021-10-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * Guarantees: details are present and not null, field values are validated, immutable.","lastModifiedDate":"2017-12-20"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class Person {","lastModifiedDate":"2018-01-10"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    // Identity fields","lastModifiedDate":"2018-04-19"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private final Name name;","lastModifiedDate":"2017-12-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private final Phone phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    // Data fields","lastModifiedDate":"2018-04-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private final Set\u003cTag\u003e tags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2018-03-26"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Every field must be present and not null.","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":31,"author":{"gitId":"marcuspeh"},"content":"    public Person(Name name, Phone phone, Set\u003cTag\u003e tags) {","lastModifiedDate":"2021-11-01"},{"lineNumber":32,"author":{"gitId":"marcuspeh"},"content":"        requireAllNonNull(name, phone, tags);","lastModifiedDate":"2021-11-01"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        this.name \u003d name;","lastModifiedDate":"2017-12-20"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        this.tags.addAll(tags);","lastModifiedDate":"2018-03-26"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public Name getName() {","lastModifiedDate":"2017-07-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return name;","lastModifiedDate":"2017-12-20"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public Phone getPhone() {","lastModifiedDate":"2017-07-12"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        return phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-18"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-07"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * Returns an immutable tag set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2017-03-07"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     * if modification is attempted.","lastModifiedDate":"2017-03-07"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-07"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public Set\u003cTag\u003e getTags() {","lastModifiedDate":"2017-03-07"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        return Collections.unmodifiableSet(tags);","lastModifiedDate":"2018-03-26"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":55,"author":{"gitId":"chrus-chong"},"content":"    /**","lastModifiedDate":"2021-10-03"},{"lineNumber":56,"author":{"gitId":"chrus-chong"},"content":"     * Returns an ArrayList of groups that the instance of Person belongs to.","lastModifiedDate":"2021-10-03"},{"lineNumber":57,"author":{"gitId":"chrus-chong"},"content":"     *","lastModifiedDate":"2021-10-03"},{"lineNumber":58,"author":{"gitId":"chrus-chong"},"content":"     * @param groups ObservableList of Group objects that exist in the addressbook.","lastModifiedDate":"2021-10-03"},{"lineNumber":59,"author":{"gitId":"chrus-chong"},"content":"     * @return ArrayList of Group objects that the instance of Person belongs to.","lastModifiedDate":"2021-10-03"},{"lineNumber":60,"author":{"gitId":"chrus-chong"},"content":"     */","lastModifiedDate":"2021-10-03"},{"lineNumber":61,"author":{"gitId":"chrus-chong"},"content":"    public ArrayList\u003cGroup\u003e getPersonGroups(ObservableList\u003cGroup\u003e groups) {","lastModifiedDate":"2021-10-03"},{"lineNumber":62,"author":{"gitId":"marcuspeh"},"content":"        ArrayList\u003cGroup\u003e personGroups \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-05"},{"lineNumber":63,"author":{"gitId":"chrus-chong"},"content":"        for (Group group : groups) {","lastModifiedDate":"2021-10-03"},{"lineNumber":64,"author":{"gitId":"chrus-chong"},"content":"            if (group.getMembers().stream().anyMatch(p -\u003e p.getName().equals(this.getName()))) {","lastModifiedDate":"2021-10-03"},{"lineNumber":65,"author":{"gitId":"chrus-chong"},"content":"                personGroups.add(group);","lastModifiedDate":"2021-10-03"},{"lineNumber":66,"author":{"gitId":"chrus-chong"},"content":"            }","lastModifiedDate":"2021-10-03"},{"lineNumber":67,"author":{"gitId":"chrus-chong"},"content":"        }","lastModifiedDate":"2021-10-03"},{"lineNumber":68,"author":{"gitId":"chrus-chong"},"content":"        return personGroups;","lastModifiedDate":"2021-10-03"},{"lineNumber":69,"author":{"gitId":"chrus-chong"},"content":"    }","lastModifiedDate":"2021-10-03"},{"lineNumber":70,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":71,"author":{"gitId":"chrus-chong"},"content":"    /**","lastModifiedDate":"2021-10-03"},{"lineNumber":72,"author":{"gitId":"chrus-chong"},"content":"     * Returns a String representation of group names that the instance of Person belongs to.","lastModifiedDate":"2021-10-03"},{"lineNumber":73,"author":{"gitId":"chrus-chong"},"content":"     *","lastModifiedDate":"2021-10-03"},{"lineNumber":74,"author":{"gitId":"chrus-chong"},"content":"     * @param groups ObservableList of Group objects that exist in the addressbook.","lastModifiedDate":"2021-10-03"},{"lineNumber":75,"author":{"gitId":"chrus-chong"},"content":"     * @return String object representing all groups that the instance of Person belongs to.","lastModifiedDate":"2021-10-03"},{"lineNumber":76,"author":{"gitId":"chrus-chong"},"content":"     */","lastModifiedDate":"2021-10-03"},{"lineNumber":77,"author":{"gitId":"chrus-chong"},"content":"    public String getGroupsName(ObservableList\u003cGroup\u003e groups) {","lastModifiedDate":"2021-10-03"},{"lineNumber":78,"author":{"gitId":"chrus-chong"},"content":"        String result \u003d \"\";","lastModifiedDate":"2021-10-03"},{"lineNumber":79,"author":{"gitId":"chrus-chong"},"content":"        ArrayList\u003cGroup\u003e personGroups \u003d getPersonGroups(groups);","lastModifiedDate":"2021-10-03"},{"lineNumber":80,"author":{"gitId":"marcuspeh"},"content":"        for (int i \u003d 0; i \u003c personGroups.size(); i++) {","lastModifiedDate":"2021-10-17"},{"lineNumber":81,"author":{"gitId":"marcuspeh"},"content":"            Group group \u003d personGroups.get(i);","lastModifiedDate":"2021-10-17"},{"lineNumber":82,"author":{"gitId":"marcuspeh"},"content":"            if (i !\u003d personGroups.size() - 1) {","lastModifiedDate":"2021-10-17"},{"lineNumber":83,"author":{"gitId":"chrus-chong"},"content":"                result \u003d result + group.getGroupName() + \", \";","lastModifiedDate":"2021-10-03"},{"lineNumber":84,"author":{"gitId":"marcuspeh"},"content":"            } else {","lastModifiedDate":"2021-10-17"},{"lineNumber":85,"author":{"gitId":"marcuspeh"},"content":"                result \u003d result + group.getGroupName();","lastModifiedDate":"2021-10-17"},{"lineNumber":86,"author":{"gitId":"marcuspeh"},"content":"            }","lastModifiedDate":"2021-10-17"},{"lineNumber":87,"author":{"gitId":"chrus-chong"},"content":"        }","lastModifiedDate":"2021-10-03"},{"lineNumber":88,"author":{"gitId":"chrus-chong"},"content":"        return result;","lastModifiedDate":"2021-10-03"},{"lineNumber":89,"author":{"gitId":"chrus-chong"},"content":"    }","lastModifiedDate":"2021-10-03"},{"lineNumber":90,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     * Returns true if both persons have the same name.","lastModifiedDate":"2020-12-18"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     * This defines a weaker notion of equality between two persons.","lastModifiedDate":"2018-04-19"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    public boolean isSamePerson(Person otherPerson) {","lastModifiedDate":"2018-04-19"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        if (otherPerson \u003d\u003d this) {","lastModifiedDate":"2018-04-19"},{"lineNumber":97,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-04-19"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        return otherPerson !\u003d null","lastModifiedDate":"2018-04-19"},{"lineNumber":101,"author":{"gitId":"-"},"content":"                \u0026\u0026 otherPerson.getName().equals(getName());","lastModifiedDate":"2020-12-18"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     * Returns true if both persons have the same identity and data fields.","lastModifiedDate":"2018-04-19"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     * This defines a stronger notion of equality between two persons.","lastModifiedDate":"2018-04-19"},{"lineNumber":107,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2018-01-10"},{"lineNumber":111,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-01-10"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-01-10"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-10"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        if (!(other instanceof Person)) {","lastModifiedDate":"2018-01-10"},{"lineNumber":115,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-01-10"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-01-10"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-10"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        Person otherPerson \u003d (Person) other;","lastModifiedDate":"2018-01-10"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        return otherPerson.getName().equals(getName())","lastModifiedDate":"2018-08-14"},{"lineNumber":120,"author":{"gitId":"-"},"content":"                \u0026\u0026 otherPerson.getPhone().equals(getPhone())","lastModifiedDate":"2018-08-14"},{"lineNumber":121,"author":{"gitId":"-"},"content":"                \u0026\u0026 otherPerson.getTags().equals(getTags());","lastModifiedDate":"2018-08-14"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        // use this method for custom fields hashing instead of implementing your own","lastModifiedDate":"2016-08-24"},{"lineNumber":127,"author":{"gitId":"marcuspeh"},"content":"        return Objects.hash(name, phone, tags);","lastModifiedDate":"2021-11-01"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        final StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2018-01-10"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        builder.append(getName())","lastModifiedDate":"2018-01-10"},{"lineNumber":134,"author":{"gitId":"-"},"content":"                .append(\"; Phone: \")","lastModifiedDate":"2020-12-11"},{"lineNumber":135,"author":{"gitId":"marcuspeh"},"content":"                .append(getPhone());","lastModifiedDate":"2021-11-01"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-12-11"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e tags \u003d getTags();","lastModifiedDate":"2020-12-11"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        if (!tags.isEmpty()) {","lastModifiedDate":"2020-12-11"},{"lineNumber":139,"author":{"gitId":"-"},"content":"            builder.append(\"; Tags: \");","lastModifiedDate":"2020-12-11"},{"lineNumber":140,"author":{"gitId":"-"},"content":"            tags.forEach(builder::append);","lastModifiedDate":"2020-12-11"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-12-11"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        return builder.toString();","lastModifiedDate":"2018-01-10"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":145,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"marcuspeh":11,"chrus-chong":31,"ramapriyan912001":5,"-":98}},{"path":"src/main/java/seedu/awe/model/person/Phone.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ramapriyan912001"},"content":"package seedu.awe.model.person;","lastModifiedDate":"2021-10-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"ramapriyan912001"},"content":"import static seedu.awe.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2021-10-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"ramapriyan912001"},"content":" * Represents a Person\u0027s phone number in the awe book.","lastModifiedDate":"2021-10-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidPhone(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Phone {","lastModifiedDate":"2016-09-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2018-09-22"},{"lineNumber":14,"author":{"gitId":"marcuspeh"},"content":"            \"Phone numbers should only contain numbers, and it should be between 3 to 16 digits long\";","lastModifiedDate":"2021-11-01"},{"lineNumber":15,"author":{"gitId":"marcuspeh"},"content":"    public static final String VALIDATION_REGEX \u003d \"\\\\d{3,16}\";","lastModifiedDate":"2021-11-01"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public final String value;","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * Constructs a {@code Phone}.","lastModifiedDate":"2017-05-30"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * @param phone A valid phone number.","lastModifiedDate":"2017-05-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public Phone(String phone) {","lastModifiedDate":"2017-05-30"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        requireNonNull(phone);","lastModifiedDate":"2017-05-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        checkArgument(isValidPhone(phone), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        value \u003d phone;","lastModifiedDate":"2018-08-14"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Returns true if a given string is a valid phone number.","lastModifiedDate":"2018-04-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static boolean isValidPhone(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        return value;","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"marcuspeh"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2021-10-05"},{"lineNumber":44,"author":{"gitId":"marcuspeh"},"content":"            return true;","lastModifiedDate":"2021-10-05"},{"lineNumber":45,"author":{"gitId":"marcuspeh"},"content":"        }","lastModifiedDate":"2021-10-05"},{"lineNumber":46,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":47,"author":{"gitId":"marcuspeh"},"content":"        if (!(other instanceof Phone)) { // instanceof handles nulls","lastModifiedDate":"2021-10-05"},{"lineNumber":48,"author":{"gitId":"marcuspeh"},"content":"            return false;","lastModifiedDate":"2021-10-05"},{"lineNumber":49,"author":{"gitId":"marcuspeh"},"content":"        }","lastModifiedDate":"2021-10-05"},{"lineNumber":50,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":51,"author":{"gitId":"marcuspeh"},"content":"        return value.equals(((Phone) other).value); // state check","lastModifiedDate":"2021-10-05"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        return value.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"marcuspeh":11,"ramapriyan912001":3,"-":45}},{"path":"src/main/java/seedu/awe/model/person/UniquePersonList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ramapriyan912001"},"content":"package seedu.awe.model.person;","lastModifiedDate":"2021-10-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"ramapriyan912001"},"content":"import static seedu.awe.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2021-10-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Iterator;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"ramapriyan912001"},"content":"import seedu.awe.model.person.exceptions.DuplicatePersonException;","lastModifiedDate":"2021-10-05"},{"lineNumber":12,"author":{"gitId":"ramapriyan912001"},"content":"import seedu.awe.model.person.exceptions.PersonNotFoundException;","lastModifiedDate":"2021-10-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * A list of persons that enforces uniqueness between its elements and does not allow nulls.","lastModifiedDate":"2016-09-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * A person is considered unique by comparing using {@code Person#isSamePerson(Person)}. As such, adding and updating of","lastModifiedDate":"2018-04-19"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * persons uses Person#isSamePerson(Person) for equality so as to ensure that the person being added or updated is","lastModifiedDate":"2018-04-19"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * unique in terms of identity in the UniquePersonList. However, the removal of a person uses Person#equals(Object) so","lastModifiedDate":"2018-04-19"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * as to ensure that the person with exactly the same fields will be removed.","lastModifiedDate":"2018-04-19"},{"lineNumber":20,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":" * Supports a minimal set of list operations.","lastModifiedDate":"2016-09-22"},{"lineNumber":22,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":" * @see Person#isSamePerson(Person)","lastModifiedDate":"2018-04-19"},{"lineNumber":24,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"public class UniquePersonList implements Iterable\u003cPerson\u003e {","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private final ObservableList\u003cPerson\u003e internalList \u003d FXCollections.observableArrayList();","lastModifiedDate":"2016-10-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private final ObservableList\u003cPerson\u003e internalUnmodifiableList \u003d","lastModifiedDate":"2018-12-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            FXCollections.unmodifiableObservableList(internalList);","lastModifiedDate":"2018-12-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * Returns true if the list contains an equivalent person as the given argument.","lastModifiedDate":"2016-09-22"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public boolean contains(Person toCheck) {","lastModifiedDate":"2018-01-10"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        requireNonNull(toCheck);","lastModifiedDate":"2017-05-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        return internalList.stream().anyMatch(toCheck::isSamePerson);","lastModifiedDate":"2018-04-19"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * Adds a person to the list.","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * The person must not already exist in the list.","lastModifiedDate":"2018-08-07"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public void add(Person toAdd) {","lastModifiedDate":"2018-08-07"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        requireNonNull(toAdd);","lastModifiedDate":"2017-05-15"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        if (contains(toAdd)) {","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            throw new DuplicatePersonException();","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        internalList.add(toAdd);","lastModifiedDate":"2018-01-10"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * Replaces the person {@code target} in the list with {@code editedPerson}.","lastModifiedDate":"2017-06-07"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * {@code target} must exist in the list.","lastModifiedDate":"2018-08-07"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * The person identity of {@code editedPerson} must not be the same as another existing person in the list.","lastModifiedDate":"2018-08-07"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-07"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        requireAllNonNull(target, editedPerson);","lastModifiedDate":"2018-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        int index \u003d internalList.indexOf(target);","lastModifiedDate":"2017-06-07"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        if (index \u003d\u003d -1) {","lastModifiedDate":"2017-06-07"},{"lineNumber":61,"author":{"gitId":"-"},"content":"            throw new PersonNotFoundException();","lastModifiedDate":"2017-06-07"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-06-07"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-07"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        if (!target.isSamePerson(editedPerson) \u0026\u0026 contains(editedPerson)) {","lastModifiedDate":"2018-04-19"},{"lineNumber":65,"author":{"gitId":"-"},"content":"            throw new DuplicatePersonException();","lastModifiedDate":"2016-12-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        internalList.set(index, editedPerson);","lastModifiedDate":"2018-01-10"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     * Removes the equivalent person from the list.","lastModifiedDate":"2016-08-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     * The person must exist in the list.","lastModifiedDate":"2018-08-07"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public void remove(Person toRemove) {","lastModifiedDate":"2018-08-07"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        requireNonNull(toRemove);","lastModifiedDate":"2017-05-15"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        if (!internalList.remove(toRemove)) {","lastModifiedDate":"2018-02-28"},{"lineNumber":78,"author":{"gitId":"-"},"content":"            throw new PersonNotFoundException();","lastModifiedDate":"2016-08-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public void setPersons(UniquePersonList replacement) {","lastModifiedDate":"2016-10-19"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        requireNonNull(replacement);","lastModifiedDate":"2018-08-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        internalList.setAll(replacement.internalList);","lastModifiedDate":"2018-08-14"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-19"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     * Replaces the contents of this list with {@code persons}.","lastModifiedDate":"2018-08-07"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     * {@code persons} must not contain duplicate persons.","lastModifiedDate":"2018-08-07"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    public void setPersons(List\u003cPerson\u003e persons) {","lastModifiedDate":"2018-08-07"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        requireAllNonNull(persons);","lastModifiedDate":"2018-01-10"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        if (!personsAreUnique(persons)) {","lastModifiedDate":"2018-04-19"},{"lineNumber":94,"author":{"gitId":"-"},"content":"            throw new DuplicatePersonException();","lastModifiedDate":"2018-01-21"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-24"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-21"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        internalList.setAll(persons);","lastModifiedDate":"2018-08-14"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-09-01"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     * Returns the backing list as an unmodifiable {@code ObservableList}.","lastModifiedDate":"2017-09-01"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-09-01"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e asUnmodifiableObservableList() {","lastModifiedDate":"2018-04-05"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        return internalUnmodifiableList;","lastModifiedDate":"2018-12-09"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    public Iterator\u003cPerson\u003e iterator() {","lastModifiedDate":"2016-08-24"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        return internalList.iterator();","lastModifiedDate":"2016-08-24"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-21"},{"lineNumber":114,"author":{"gitId":"marcuspeh"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2021-10-05"},{"lineNumber":115,"author":{"gitId":"marcuspeh"},"content":"            return true;","lastModifiedDate":"2021-10-05"},{"lineNumber":116,"author":{"gitId":"marcuspeh"},"content":"        }","lastModifiedDate":"2021-10-05"},{"lineNumber":117,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":118,"author":{"gitId":"marcuspeh"},"content":"        if (!(other instanceof UniquePersonList)) { // instanceof handles nulls","lastModifiedDate":"2021-10-05"},{"lineNumber":119,"author":{"gitId":"marcuspeh"},"content":"            return false;","lastModifiedDate":"2021-10-05"},{"lineNumber":120,"author":{"gitId":"marcuspeh"},"content":"        }","lastModifiedDate":"2021-10-05"},{"lineNumber":121,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":122,"author":{"gitId":"marcuspeh"},"content":"        return internalList.equals(((UniquePersonList) other).internalList);","lastModifiedDate":"2021-10-05"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-21"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        return internalList.hashCode();","lastModifiedDate":"2016-09-21"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":131,"author":{"gitId":"-"},"content":"     * Returns true if {@code persons} contains only unique persons.","lastModifiedDate":"2018-04-19"},{"lineNumber":132,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    private boolean personsAreUnique(List\u003cPerson\u003e persons) {","lastModifiedDate":"2018-04-19"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        for (int i \u003d 0; i \u003c persons.size() - 1; i++) {","lastModifiedDate":"2018-04-19"},{"lineNumber":135,"author":{"gitId":"-"},"content":"            for (int j \u003d i + 1; j \u003c persons.size(); j++) {","lastModifiedDate":"2018-04-19"},{"lineNumber":136,"author":{"gitId":"-"},"content":"                if (persons.get(i).isSamePerson(persons.get(j))) {","lastModifiedDate":"2018-04-19"},{"lineNumber":137,"author":{"gitId":"-"},"content":"                    return false;","lastModifiedDate":"2018-04-19"},{"lineNumber":138,"author":{"gitId":"-"},"content":"                }","lastModifiedDate":"2018-04-19"},{"lineNumber":139,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-04-19"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        return true;","lastModifiedDate":"2018-04-19"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":143,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"marcuspeh":9,"ramapriyan912001":4,"-":130}},{"path":"src/main/java/seedu/awe/model/person/exceptions/DuplicatePersonException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ramapriyan912001"},"content":"package seedu.awe.model.person.exceptions;","lastModifiedDate":"2021-10-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Signals that the operation will result in duplicate Persons (Persons are considered duplicates if they have the same","lastModifiedDate":"2018-04-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":" * identity).","lastModifiedDate":"2018-04-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-09"},{"lineNumber":7,"author":{"gitId":"-"},"content":"public class DuplicatePersonException extends RuntimeException {","lastModifiedDate":"2018-08-07"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    public DuplicatePersonException() {","lastModifiedDate":"2017-06-09"},{"lineNumber":9,"author":{"gitId":"-"},"content":"        super(\"Operation would result in duplicate persons\");","lastModifiedDate":"2017-06-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-09"}],"authorContributionMap":{"ramapriyan912001":1,"-":10}},{"path":"src/main/java/seedu/awe/model/person/exceptions/PersonNotFoundException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ramapriyan912001"},"content":"package seedu.awe.model.person.exceptions;","lastModifiedDate":"2021-10-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Signals that the operation is unable to find the specified person.","lastModifiedDate":"2017-06-09"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-09"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class PersonNotFoundException extends RuntimeException {}","lastModifiedDate":"2018-08-07"}],"authorContributionMap":{"ramapriyan912001":1,"-":5}},{"path":"src/main/java/seedu/awe/model/tag/Tag.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ramapriyan912001"},"content":"package seedu.awe.model.tag;","lastModifiedDate":"2021-10-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"ramapriyan912001"},"content":"import static seedu.awe.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2021-10-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"ramapriyan912001"},"content":" * Represents a Tag in the awe book.","lastModifiedDate":"2021-10-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Guarantees: immutable; name is valid as declared in {@link #isValidTagName(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class Tag {","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Tags names should be alphanumeric\";","lastModifiedDate":"2018-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d \"\\\\p{Alnum}+\";","lastModifiedDate":"2018-09-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public final String tagName;","lastModifiedDate":"2016-10-19"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * Constructs a {@code Tag}.","lastModifiedDate":"2017-05-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * @param tagName A valid tag name.","lastModifiedDate":"2017-05-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public Tag(String tagName) {","lastModifiedDate":"2017-05-30"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        requireNonNull(tagName);","lastModifiedDate":"2017-05-30"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        checkArgument(isValidTagName(tagName), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        this.tagName \u003d tagName;","lastModifiedDate":"2017-05-30"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Returns true if a given string is a valid tag name.","lastModifiedDate":"2016-09-22"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public static boolean isValidTagName(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"chrus-chong"},"content":"    public String getTagName() {","lastModifiedDate":"2021-10-20"},{"lineNumber":36,"author":{"gitId":"chrus-chong"},"content":"        return tagName;","lastModifiedDate":"2021-10-20"},{"lineNumber":37,"author":{"gitId":"chrus-chong"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":38,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"marcuspeh"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2021-10-05"},{"lineNumber":42,"author":{"gitId":"marcuspeh"},"content":"            return true;","lastModifiedDate":"2021-10-05"},{"lineNumber":43,"author":{"gitId":"marcuspeh"},"content":"        }","lastModifiedDate":"2021-10-05"},{"lineNumber":44,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":45,"author":{"gitId":"marcuspeh"},"content":"        if (!(other instanceof Tag)) { // instanceof handles nulls","lastModifiedDate":"2021-10-05"},{"lineNumber":46,"author":{"gitId":"marcuspeh"},"content":"            return false;","lastModifiedDate":"2021-10-05"},{"lineNumber":47,"author":{"gitId":"marcuspeh"},"content":"        }","lastModifiedDate":"2021-10-05"},{"lineNumber":48,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":49,"author":{"gitId":"marcuspeh"},"content":"        return tagName.equals(((Tag) other).tagName); // state check","lastModifiedDate":"2021-10-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        return tagName.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     * Format state as text for viewing.","lastModifiedDate":"2016-08-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        return \u0027[\u0027 + tagName + \u0027]\u0027;","lastModifiedDate":"2016-08-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"marcuspeh":9,"chrus-chong":4,"ramapriyan912001":3,"-":48}},{"path":"src/main/java/seedu/awe/model/transactionsummary/TransactionSummary.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"marcuspeh"},"content":"package seedu.awe.model.transactionsummary;","lastModifiedDate":"2021-10-17"},{"lineNumber":2,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":3,"author":{"gitId":"marcuspeh"},"content":"import static seedu.awe.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2021-11-01"},{"lineNumber":4,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":5,"author":{"gitId":"marcuspeh"},"content":"import java.util.Objects;","lastModifiedDate":"2021-10-17"},{"lineNumber":6,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":7,"author":{"gitId":"marcuspeh"},"content":"import seedu.awe.model.expense.Cost;","lastModifiedDate":"2021-10-17"},{"lineNumber":8,"author":{"gitId":"marcuspeh"},"content":"import seedu.awe.model.person.Person;","lastModifiedDate":"2021-10-17"},{"lineNumber":9,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":10,"author":{"gitId":"marcuspeh"},"content":"public class TransactionSummary implements Comparable\u003cTransactionSummary\u003e {","lastModifiedDate":"2021-10-17"},{"lineNumber":11,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":12,"author":{"gitId":"marcuspeh"},"content":"    private Person person;","lastModifiedDate":"2021-10-17"},{"lineNumber":13,"author":{"gitId":"marcuspeh"},"content":"    private Cost cost;","lastModifiedDate":"2021-10-17"},{"lineNumber":14,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":15,"author":{"gitId":"marcuspeh"},"content":"    /**","lastModifiedDate":"2021-10-17"},{"lineNumber":16,"author":{"gitId":"marcuspeh"},"content":"     * Payment object represents total transaction.","lastModifiedDate":"2021-10-17"},{"lineNumber":17,"author":{"gitId":"marcuspeh"},"content":"     * @param person person spending the money","lastModifiedDate":"2021-10-18"},{"lineNumber":18,"author":{"gitId":"marcuspeh"},"content":"     * @param cost amount spent","lastModifiedDate":"2021-10-17"},{"lineNumber":19,"author":{"gitId":"marcuspeh"},"content":"     */","lastModifiedDate":"2021-10-17"},{"lineNumber":20,"author":{"gitId":"marcuspeh"},"content":"    public TransactionSummary(Person person, Cost cost) {","lastModifiedDate":"2021-10-17"},{"lineNumber":21,"author":{"gitId":"marcuspeh"},"content":"        requireAllNonNull(person, cost);","lastModifiedDate":"2021-11-01"},{"lineNumber":22,"author":{"gitId":"marcuspeh"},"content":"        this.person \u003d person;","lastModifiedDate":"2021-10-17"},{"lineNumber":23,"author":{"gitId":"marcuspeh"},"content":"        this.cost \u003d cost;","lastModifiedDate":"2021-10-17"},{"lineNumber":24,"author":{"gitId":"marcuspeh"},"content":"    }","lastModifiedDate":"2021-10-17"},{"lineNumber":25,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":26,"author":{"gitId":"marcuspeh"},"content":"    @Override","lastModifiedDate":"2021-10-17"},{"lineNumber":27,"author":{"gitId":"marcuspeh"},"content":"    public String toString() {","lastModifiedDate":"2021-10-17"},{"lineNumber":28,"author":{"gitId":"marcuspeh"},"content":"        return String.format(\"%s spent $%.2f.\", person.getName(), getCost().cost);","lastModifiedDate":"2021-11-01"},{"lineNumber":29,"author":{"gitId":"marcuspeh"},"content":"    }","lastModifiedDate":"2021-10-17"},{"lineNumber":30,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":31,"author":{"gitId":"marcuspeh"},"content":"    public Person getPerson() {","lastModifiedDate":"2021-10-17"},{"lineNumber":32,"author":{"gitId":"marcuspeh"},"content":"        return person;","lastModifiedDate":"2021-10-17"},{"lineNumber":33,"author":{"gitId":"marcuspeh"},"content":"    }","lastModifiedDate":"2021-10-17"},{"lineNumber":34,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":35,"author":{"gitId":"marcuspeh"},"content":"    public Cost getCost() {","lastModifiedDate":"2021-10-17"},{"lineNumber":36,"author":{"gitId":"marcuspeh"},"content":"        return cost;","lastModifiedDate":"2021-10-17"},{"lineNumber":37,"author":{"gitId":"marcuspeh"},"content":"    }","lastModifiedDate":"2021-10-17"},{"lineNumber":38,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":39,"author":{"gitId":"marcuspeh"},"content":"    @Override","lastModifiedDate":"2021-10-17"},{"lineNumber":40,"author":{"gitId":"marcuspeh"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-17"},{"lineNumber":41,"author":{"gitId":"marcuspeh"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2021-10-17"},{"lineNumber":42,"author":{"gitId":"marcuspeh"},"content":"            return true;","lastModifiedDate":"2021-10-17"},{"lineNumber":43,"author":{"gitId":"marcuspeh"},"content":"        }","lastModifiedDate":"2021-10-17"},{"lineNumber":44,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":45,"author":{"gitId":"marcuspeh"},"content":"        if (!(other instanceof TransactionSummary)) {","lastModifiedDate":"2021-10-17"},{"lineNumber":46,"author":{"gitId":"marcuspeh"},"content":"            return false;","lastModifiedDate":"2021-10-17"},{"lineNumber":47,"author":{"gitId":"marcuspeh"},"content":"        }","lastModifiedDate":"2021-10-17"},{"lineNumber":48,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":49,"author":{"gitId":"marcuspeh"},"content":"        TransactionSummary otherExpense \u003d (TransactionSummary) other;","lastModifiedDate":"2021-10-17"},{"lineNumber":50,"author":{"gitId":"marcuspeh"},"content":"        boolean isSamePayer \u003d otherExpense.getPerson().equals(person);","lastModifiedDate":"2021-10-17"},{"lineNumber":51,"author":{"gitId":"marcuspeh"},"content":"        boolean isSameCost \u003d otherExpense.getCost().equals(getCost());","lastModifiedDate":"2021-10-17"},{"lineNumber":52,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":53,"author":{"gitId":"marcuspeh"},"content":"        return isSamePayer \u0026\u0026 isSameCost;","lastModifiedDate":"2021-10-17"},{"lineNumber":54,"author":{"gitId":"marcuspeh"},"content":"    }","lastModifiedDate":"2021-10-17"},{"lineNumber":55,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":56,"author":{"gitId":"marcuspeh"},"content":"    @Override","lastModifiedDate":"2021-10-17"},{"lineNumber":57,"author":{"gitId":"marcuspeh"},"content":"    public int hashCode() {","lastModifiedDate":"2021-10-17"},{"lineNumber":58,"author":{"gitId":"marcuspeh"},"content":"        return Objects.hash(person, cost);","lastModifiedDate":"2021-10-17"},{"lineNumber":59,"author":{"gitId":"marcuspeh"},"content":"    }","lastModifiedDate":"2021-10-17"},{"lineNumber":60,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":61,"author":{"gitId":"marcuspeh"},"content":"    /**","lastModifiedDate":"2021-10-17"},{"lineNumber":62,"author":{"gitId":"marcuspeh"},"content":"     * Sort by person name.","lastModifiedDate":"2021-10-17"},{"lineNumber":63,"author":{"gitId":"marcuspeh"},"content":"     * @param otherTransactionSummary TransactionSummary to compare","lastModifiedDate":"2021-10-17"},{"lineNumber":64,"author":{"gitId":"marcuspeh"},"content":"     * @return Integer to mark priority","lastModifiedDate":"2021-10-17"},{"lineNumber":65,"author":{"gitId":"marcuspeh"},"content":"     */","lastModifiedDate":"2021-10-17"},{"lineNumber":66,"author":{"gitId":"marcuspeh"},"content":"    @Override","lastModifiedDate":"2021-10-17"},{"lineNumber":67,"author":{"gitId":"marcuspeh"},"content":"    public int compareTo(TransactionSummary otherTransactionSummary) {","lastModifiedDate":"2021-10-17"},{"lineNumber":68,"author":{"gitId":"marcuspeh"},"content":"        String personName \u003d this.getPerson().getName().getFullName();","lastModifiedDate":"2021-10-17"},{"lineNumber":69,"author":{"gitId":"marcuspeh"},"content":"        String otherPersonName \u003d this.getPerson().getName().getFullName();","lastModifiedDate":"2021-10-17"},{"lineNumber":70,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":71,"author":{"gitId":"marcuspeh"},"content":"        return personName.compareTo(otherPersonName);","lastModifiedDate":"2021-10-17"},{"lineNumber":72,"author":{"gitId":"marcuspeh"},"content":"    }","lastModifiedDate":"2021-10-17"},{"lineNumber":73,"author":{"gitId":"marcuspeh"},"content":"}","lastModifiedDate":"2021-10-17"}],"authorContributionMap":{"marcuspeh":73}},{"path":"src/main/java/seedu/awe/model/transactionsummary/TransactionSummaryList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"marcuspeh"},"content":"package seedu.awe.model.transactionsummary;","lastModifiedDate":"2021-10-17"},{"lineNumber":2,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":3,"author":{"gitId":"marcuspeh"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-17"},{"lineNumber":4,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":5,"author":{"gitId":"marcuspeh"},"content":"import java.util.Iterator;","lastModifiedDate":"2021-10-17"},{"lineNumber":6,"author":{"gitId":"marcuspeh"},"content":"import java.util.List;","lastModifiedDate":"2021-10-17"},{"lineNumber":7,"author":{"gitId":"marcuspeh"},"content":"import java.util.Optional;","lastModifiedDate":"2021-10-17"},{"lineNumber":8,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":9,"author":{"gitId":"marcuspeh"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2021-10-17"},{"lineNumber":10,"author":{"gitId":"marcuspeh"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-10-17"},{"lineNumber":11,"author":{"gitId":"marcuspeh"},"content":"import seedu.awe.model.group.Group;","lastModifiedDate":"2021-10-17"},{"lineNumber":12,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":13,"author":{"gitId":"marcuspeh"},"content":"public class TransactionSummaryList implements Iterable\u003cTransactionSummary\u003e {","lastModifiedDate":"2021-10-17"},{"lineNumber":14,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":15,"author":{"gitId":"marcuspeh"},"content":"    private final ObservableList\u003cTransactionSummary\u003e internalList \u003d FXCollections.observableArrayList();","lastModifiedDate":"2021-10-17"},{"lineNumber":16,"author":{"gitId":"marcuspeh"},"content":"    private final ObservableList\u003cTransactionSummary\u003e internalUnmodifiableList \u003d","lastModifiedDate":"2021-10-17"},{"lineNumber":17,"author":{"gitId":"marcuspeh"},"content":"            FXCollections.unmodifiableObservableList(internalList);","lastModifiedDate":"2021-10-17"},{"lineNumber":18,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":19,"author":{"gitId":"marcuspeh"},"content":"    private Optional\u003cGroup\u003e group;","lastModifiedDate":"2021-10-17"},{"lineNumber":20,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":21,"author":{"gitId":"marcuspeh"},"content":"    public TransactionSummaryList() {","lastModifiedDate":"2021-10-17"},{"lineNumber":22,"author":{"gitId":"marcuspeh"},"content":"        group \u003d Optional.empty();","lastModifiedDate":"2021-10-17"},{"lineNumber":23,"author":{"gitId":"marcuspeh"},"content":"    }","lastModifiedDate":"2021-10-17"},{"lineNumber":24,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":25,"author":{"gitId":"marcuspeh"},"content":"    public TransactionSummaryList(Group group) {","lastModifiedDate":"2021-10-17"},{"lineNumber":26,"author":{"gitId":"marcuspeh"},"content":"        this.group \u003d Optional.of(group);","lastModifiedDate":"2021-10-17"},{"lineNumber":27,"author":{"gitId":"marcuspeh"},"content":"    }","lastModifiedDate":"2021-10-17"},{"lineNumber":28,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":29,"author":{"gitId":"marcuspeh"},"content":"    public void setGroup(Group group) {","lastModifiedDate":"2021-10-17"},{"lineNumber":30,"author":{"gitId":"marcuspeh"},"content":"        this.group \u003d Optional.of(group);","lastModifiedDate":"2021-10-17"},{"lineNumber":31,"author":{"gitId":"marcuspeh"},"content":"    }","lastModifiedDate":"2021-10-17"},{"lineNumber":32,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":33,"author":{"gitId":"marcuspeh"},"content":"    public Optional\u003cGroup\u003e getGroup() {","lastModifiedDate":"2021-10-17"},{"lineNumber":34,"author":{"gitId":"marcuspeh"},"content":"        return group;","lastModifiedDate":"2021-10-17"},{"lineNumber":35,"author":{"gitId":"marcuspeh"},"content":"    }","lastModifiedDate":"2021-10-17"},{"lineNumber":36,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":37,"author":{"gitId":"marcuspeh"},"content":"    /**","lastModifiedDate":"2021-10-17"},{"lineNumber":38,"author":{"gitId":"marcuspeh"},"content":"     * Returns true if the list contains an equivalent TransactionSummary as the given argument.","lastModifiedDate":"2021-10-17"},{"lineNumber":39,"author":{"gitId":"marcuspeh"},"content":"     */","lastModifiedDate":"2021-10-17"},{"lineNumber":40,"author":{"gitId":"marcuspeh"},"content":"    public boolean contains(TransactionSummary toCheck) {","lastModifiedDate":"2021-10-17"},{"lineNumber":41,"author":{"gitId":"marcuspeh"},"content":"        requireNonNull(toCheck);","lastModifiedDate":"2021-10-17"},{"lineNumber":42,"author":{"gitId":"marcuspeh"},"content":"        return internalList.stream().anyMatch(toCheck::equals);","lastModifiedDate":"2021-10-17"},{"lineNumber":43,"author":{"gitId":"marcuspeh"},"content":"    }","lastModifiedDate":"2021-10-17"},{"lineNumber":44,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":45,"author":{"gitId":"marcuspeh"},"content":"    /**","lastModifiedDate":"2021-10-17"},{"lineNumber":46,"author":{"gitId":"marcuspeh"},"content":"     * Clears the entire list of TransactionSummary.","lastModifiedDate":"2021-10-17"},{"lineNumber":47,"author":{"gitId":"marcuspeh"},"content":"     */","lastModifiedDate":"2021-10-17"},{"lineNumber":48,"author":{"gitId":"marcuspeh"},"content":"    public void clear() {","lastModifiedDate":"2021-10-17"},{"lineNumber":49,"author":{"gitId":"marcuspeh"},"content":"        internalList.clear();","lastModifiedDate":"2021-10-17"},{"lineNumber":50,"author":{"gitId":"marcuspeh"},"content":"    }","lastModifiedDate":"2021-10-17"},{"lineNumber":51,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":52,"author":{"gitId":"marcuspeh"},"content":"    /**","lastModifiedDate":"2021-10-17"},{"lineNumber":53,"author":{"gitId":"marcuspeh"},"content":"     * Set TransactionSummary from the given list to the list of TransactionSummary.","lastModifiedDate":"2021-10-18"},{"lineNumber":54,"author":{"gitId":"marcuspeh"},"content":"     *","lastModifiedDate":"2021-10-17"},{"lineNumber":55,"author":{"gitId":"marcuspeh"},"content":"     * @param transactionSummary List of TransactionSummary to add.","lastModifiedDate":"2021-10-17"},{"lineNumber":56,"author":{"gitId":"marcuspeh"},"content":"     */","lastModifiedDate":"2021-10-17"},{"lineNumber":57,"author":{"gitId":"marcuspeh"},"content":"    public void set(List\u003cTransactionSummary\u003e transactionSummary) {","lastModifiedDate":"2021-10-18"},{"lineNumber":58,"author":{"gitId":"marcuspeh"},"content":"        internalList.clear();","lastModifiedDate":"2021-10-18"},{"lineNumber":59,"author":{"gitId":"marcuspeh"},"content":"        internalList.addAll(transactionSummary);","lastModifiedDate":"2021-10-17"},{"lineNumber":60,"author":{"gitId":"marcuspeh"},"content":"    }","lastModifiedDate":"2021-10-17"},{"lineNumber":61,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":62,"author":{"gitId":"marcuspeh"},"content":"    /**","lastModifiedDate":"2021-10-17"},{"lineNumber":63,"author":{"gitId":"marcuspeh"},"content":"     * Returns the backing list as an unmodifiable {@code ObservableList}.","lastModifiedDate":"2021-10-17"},{"lineNumber":64,"author":{"gitId":"marcuspeh"},"content":"     */","lastModifiedDate":"2021-10-17"},{"lineNumber":65,"author":{"gitId":"marcuspeh"},"content":"    public ObservableList\u003cTransactionSummary\u003e asUnmodifiableObservableList() {","lastModifiedDate":"2021-10-17"},{"lineNumber":66,"author":{"gitId":"marcuspeh"},"content":"        return internalUnmodifiableList;","lastModifiedDate":"2021-10-17"},{"lineNumber":67,"author":{"gitId":"marcuspeh"},"content":"    }","lastModifiedDate":"2021-10-17"},{"lineNumber":68,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":69,"author":{"gitId":"marcuspeh"},"content":"    @Override","lastModifiedDate":"2021-10-17"},{"lineNumber":70,"author":{"gitId":"marcuspeh"},"content":"    public Iterator\u003cTransactionSummary\u003e iterator() {","lastModifiedDate":"2021-10-17"},{"lineNumber":71,"author":{"gitId":"marcuspeh"},"content":"        return internalList.iterator();","lastModifiedDate":"2021-10-17"},{"lineNumber":72,"author":{"gitId":"marcuspeh"},"content":"    }","lastModifiedDate":"2021-10-17"},{"lineNumber":73,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":74,"author":{"gitId":"marcuspeh"},"content":"    @Override","lastModifiedDate":"2021-10-17"},{"lineNumber":75,"author":{"gitId":"marcuspeh"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-17"},{"lineNumber":76,"author":{"gitId":"marcuspeh"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2021-10-17"},{"lineNumber":77,"author":{"gitId":"marcuspeh"},"content":"            return true;","lastModifiedDate":"2021-10-17"},{"lineNumber":78,"author":{"gitId":"marcuspeh"},"content":"        }","lastModifiedDate":"2021-10-17"},{"lineNumber":79,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":80,"author":{"gitId":"marcuspeh"},"content":"        if (!(other instanceof TransactionSummaryList)) { // instanceof handles nulls","lastModifiedDate":"2021-10-17"},{"lineNumber":81,"author":{"gitId":"marcuspeh"},"content":"            return false;","lastModifiedDate":"2021-10-17"},{"lineNumber":82,"author":{"gitId":"marcuspeh"},"content":"        }","lastModifiedDate":"2021-10-17"},{"lineNumber":83,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":84,"author":{"gitId":"marcuspeh"},"content":"        return internalList.equals(((TransactionSummaryList) other).internalList);","lastModifiedDate":"2021-10-17"},{"lineNumber":85,"author":{"gitId":"marcuspeh"},"content":"    }","lastModifiedDate":"2021-10-17"},{"lineNumber":86,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":87,"author":{"gitId":"marcuspeh"},"content":"    @Override","lastModifiedDate":"2021-10-17"},{"lineNumber":88,"author":{"gitId":"marcuspeh"},"content":"    public int hashCode() {","lastModifiedDate":"2021-10-17"},{"lineNumber":89,"author":{"gitId":"marcuspeh"},"content":"        return internalList.hashCode();","lastModifiedDate":"2021-10-17"},{"lineNumber":90,"author":{"gitId":"marcuspeh"},"content":"    }","lastModifiedDate":"2021-10-17"},{"lineNumber":91,"author":{"gitId":"marcuspeh"},"content":"}","lastModifiedDate":"2021-10-17"}],"authorContributionMap":{"marcuspeh":91}},{"path":"src/main/java/seedu/awe/model/util/SampleDataUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ramapriyan912001"},"content":"package seedu.awe.model.util;","lastModifiedDate":"2021-10-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":3,"author":{"gitId":"marcuspeh"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-01-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":8,"author":{"gitId":"ramapriyan912001"},"content":"import seedu.awe.model.AddressBook;","lastModifiedDate":"2021-10-05"},{"lineNumber":9,"author":{"gitId":"ramapriyan912001"},"content":"import seedu.awe.model.ReadOnlyAddressBook;","lastModifiedDate":"2021-10-05"},{"lineNumber":10,"author":{"gitId":"marcuspeh"},"content":"import seedu.awe.model.expense.Cost;","lastModifiedDate":"2021-10-15"},{"lineNumber":11,"author":{"gitId":"marcuspeh"},"content":"import seedu.awe.model.expense.Description;","lastModifiedDate":"2021-10-15"},{"lineNumber":12,"author":{"gitId":"marcuspeh"},"content":"import seedu.awe.model.expense.Expense;","lastModifiedDate":"2021-10-15"},{"lineNumber":13,"author":{"gitId":"marcuspeh"},"content":"import seedu.awe.model.group.Group;","lastModifiedDate":"2021-10-15"},{"lineNumber":14,"author":{"gitId":"marcuspeh"},"content":"import seedu.awe.model.group.GroupName;","lastModifiedDate":"2021-10-15"},{"lineNumber":15,"author":{"gitId":"ramapriyan912001"},"content":"import seedu.awe.model.person.Name;","lastModifiedDate":"2021-10-05"},{"lineNumber":16,"author":{"gitId":"ramapriyan912001"},"content":"import seedu.awe.model.person.Person;","lastModifiedDate":"2021-10-05"},{"lineNumber":17,"author":{"gitId":"ramapriyan912001"},"content":"import seedu.awe.model.person.Phone;","lastModifiedDate":"2021-10-05"},{"lineNumber":18,"author":{"gitId":"ramapriyan912001"},"content":"import seedu.awe.model.tag.Tag;","lastModifiedDate":"2021-10-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":20,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":21,"author":{"gitId":"-"},"content":" * Contains utility methods for populating {@code AddressBook} with sample data.","lastModifiedDate":"2017-08-16"},{"lineNumber":22,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":"public class SampleDataUtil {","lastModifiedDate":"2016-12-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public static Person[] getSamplePersons() {","lastModifiedDate":"2016-12-20"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        return new Person[] {","lastModifiedDate":"2016-12-20"},{"lineNumber":26,"author":{"gitId":"marcuspeh"},"content":"            new Person(new Name(\"Alex Yeoh\"), new Phone(\"87438807\"), getTagSet(\"friends\")),","lastModifiedDate":"2021-11-01"},{"lineNumber":27,"author":{"gitId":"marcuspeh"},"content":"            new Person(new Name(\"Bernice Yu\"), new Phone(\"99272758\"), getTagSet(\"colleagues\", \"friends\")),","lastModifiedDate":"2021-11-01"},{"lineNumber":28,"author":{"gitId":"marcuspeh"},"content":"            new Person(new Name(\"Charlotte Oliveiro\"), new Phone(\"93210283\"), getTagSet(\"neighbours\")),","lastModifiedDate":"2021-11-01"},{"lineNumber":29,"author":{"gitId":"marcuspeh"},"content":"            new Person(new Name(\"David Li\"), new Phone(\"91031282\"), getTagSet(\"family\")),","lastModifiedDate":"2021-11-01"},{"lineNumber":30,"author":{"gitId":"marcuspeh"},"content":"            new Person(new Name(\"Irfan Ibrahim\"), new Phone(\"92492021\"), getTagSet(\"classmates\")),","lastModifiedDate":"2021-11-01"},{"lineNumber":31,"author":{"gitId":"marcuspeh"},"content":"            new Person(new Name(\"Roy Balakrishnan\"), new Phone(\"92624417\"), getTagSet(\"colleagues\"))","lastModifiedDate":"2021-11-01"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        };","lastModifiedDate":"2016-12-20"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-20"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":35,"author":{"gitId":"marcuspeh"},"content":"    public static Expense[] getSampleExpenses() {","lastModifiedDate":"2021-10-15"},{"lineNumber":36,"author":{"gitId":"marcuspeh"},"content":"        Person[] members \u003d getSamplePersons();","lastModifiedDate":"2021-10-15"},{"lineNumber":37,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":38,"author":{"gitId":"marcuspeh"},"content":"        return new Expense[] {","lastModifiedDate":"2021-10-15"},{"lineNumber":39,"author":{"gitId":"marcuspeh"},"content":"            new Expense(members[0], new Cost(\"10\"), new Description(\"Transportation\"), addSampleMembers(0, 3)),","lastModifiedDate":"2021-10-25"},{"lineNumber":40,"author":{"gitId":"marcuspeh"},"content":"            new Expense(members[1], new Cost(\"300\"), new Description(\"Buffet\"), addSampleMembers(0, 3)),","lastModifiedDate":"2021-10-25"},{"lineNumber":41,"author":{"gitId":"marcuspeh"},"content":"            new Expense(members[2], new Cost(\"60\"), new Description(\"Souvenirs\"), addSampleMembers(0, 3)),","lastModifiedDate":"2021-10-25"},{"lineNumber":42,"author":{"gitId":"marcuspeh"},"content":"            new Expense(members[3], new Cost(\"200\"), new Description(\"Entry Tickets\"), addSampleMembers(3, 6)),","lastModifiedDate":"2021-10-25"},{"lineNumber":43,"author":{"gitId":"marcuspeh"},"content":"            new Expense(members[3], new Cost(\"150\"), new Description(\"Lunch\"), addSampleMembers(3, 6)),","lastModifiedDate":"2021-10-25"},{"lineNumber":44,"author":{"gitId":"marcuspeh"},"content":"            new Expense(members[4], new Cost(\"180\"), new Description(\"Supper\"), addSampleMembers(3, 6))","lastModifiedDate":"2021-10-25"},{"lineNumber":45,"author":{"gitId":"marcuspeh"},"content":"        };","lastModifiedDate":"2021-10-15"},{"lineNumber":46,"author":{"gitId":"marcuspeh"},"content":"    }","lastModifiedDate":"2021-10-15"},{"lineNumber":47,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":48,"author":{"gitId":"marcuspeh"},"content":"    public static Group[] getSampleGroups() {","lastModifiedDate":"2021-10-15"},{"lineNumber":49,"author":{"gitId":"marcuspeh"},"content":"        ArrayList\u003cPerson\u003e londonMembers \u003d addSampleMembers(0, 3);","lastModifiedDate":"2021-10-15"},{"lineNumber":50,"author":{"gitId":"marcuspeh"},"content":"        ArrayList\u003cPerson\u003e baliMembers \u003d addSampleMembers(3, 6);","lastModifiedDate":"2021-10-15"},{"lineNumber":51,"author":{"gitId":"marcuspeh"},"content":"        ArrayList\u003cExpense\u003e londonExpenses \u003d addSampleExpenses(0, 3);","lastModifiedDate":"2021-10-15"},{"lineNumber":52,"author":{"gitId":"marcuspeh"},"content":"        ArrayList\u003cExpense\u003e baliExpenses \u003d addSampleExpenses(3, 6);","lastModifiedDate":"2021-10-15"},{"lineNumber":53,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":54,"author":{"gitId":"marcuspeh"},"content":"        return new Group[] {","lastModifiedDate":"2021-10-15"},{"lineNumber":55,"author":{"gitId":"marcuspeh"},"content":"            new Group(new GroupName(\"London\"), londonMembers, getTagSet(\"SchoolTrip\"),","lastModifiedDate":"2021-10-15"},{"lineNumber":56,"author":{"gitId":"marcuspeh"},"content":"                    londonExpenses),","lastModifiedDate":"2021-10-15"},{"lineNumber":57,"author":{"gitId":"marcuspeh"},"content":"            new Group(new GroupName(\"Bali\"), baliMembers, getTagSet(\"3DayTrip\"),","lastModifiedDate":"2021-10-15"},{"lineNumber":58,"author":{"gitId":"marcuspeh"},"content":"                    baliExpenses)","lastModifiedDate":"2021-10-15"},{"lineNumber":59,"author":{"gitId":"marcuspeh"},"content":"        };","lastModifiedDate":"2021-10-15"},{"lineNumber":60,"author":{"gitId":"marcuspeh"},"content":"    }","lastModifiedDate":"2021-10-15"},{"lineNumber":61,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public static ReadOnlyAddressBook getSampleAddressBook() {","lastModifiedDate":"2016-12-20"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        AddressBook sampleAb \u003d new AddressBook();","lastModifiedDate":"2017-04-07"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        for (Person samplePerson : getSamplePersons()) {","lastModifiedDate":"2016-12-20"},{"lineNumber":65,"author":{"gitId":"-"},"content":"            sampleAb.addPerson(samplePerson);","lastModifiedDate":"2017-04-07"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-20"},{"lineNumber":67,"author":{"gitId":"marcuspeh"},"content":"        for (Group sampleGroup : getSampleGroups()) {","lastModifiedDate":"2021-10-15"},{"lineNumber":68,"author":{"gitId":"marcuspeh"},"content":"            sampleAb.addGroup(sampleGroup);","lastModifiedDate":"2021-10-15"},{"lineNumber":69,"author":{"gitId":"marcuspeh"},"content":"        }","lastModifiedDate":"2021-10-15"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        return sampleAb;","lastModifiedDate":"2017-04-07"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-20"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-14"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     * Returns a tag set containing the list of strings given.","lastModifiedDate":"2017-03-14"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-14"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public static Set\u003cTag\u003e getTagSet(String... strings) {","lastModifiedDate":"2017-05-30"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        return Arrays.stream(strings)","lastModifiedDate":"2018-01-21"},{"lineNumber":78,"author":{"gitId":"-"},"content":"                .map(Tag::new)","lastModifiedDate":"2018-01-21"},{"lineNumber":79,"author":{"gitId":"-"},"content":"                .collect(Collectors.toSet());","lastModifiedDate":"2018-01-21"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-14"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":82,"author":{"gitId":"marcuspeh"},"content":"    /**","lastModifiedDate":"2021-10-15"},{"lineNumber":83,"author":{"gitId":"marcuspeh"},"content":"     * Returns a list of members containing the sample persons","lastModifiedDate":"2021-10-15"},{"lineNumber":84,"author":{"gitId":"marcuspeh"},"content":"     * within the given range.","lastModifiedDate":"2021-10-15"},{"lineNumber":85,"author":{"gitId":"marcuspeh"},"content":"     *","lastModifiedDate":"2021-10-15"},{"lineNumber":86,"author":{"gitId":"marcuspeh"},"content":"     * @param start The starting index to add member.","lastModifiedDate":"2021-10-15"},{"lineNumber":87,"author":{"gitId":"marcuspeh"},"content":"     * @param end   The ending index to add member.","lastModifiedDate":"2021-10-15"},{"lineNumber":88,"author":{"gitId":"marcuspeh"},"content":"     * @return List of members.","lastModifiedDate":"2021-10-15"},{"lineNumber":89,"author":{"gitId":"marcuspeh"},"content":"     */","lastModifiedDate":"2021-10-15"},{"lineNumber":90,"author":{"gitId":"marcuspeh"},"content":"    public static ArrayList\u003cPerson\u003e addSampleMembers(int start, int end) {","lastModifiedDate":"2021-10-15"},{"lineNumber":91,"author":{"gitId":"marcuspeh"},"content":"        ArrayList\u003cPerson\u003e members \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-15"},{"lineNumber":92,"author":{"gitId":"marcuspeh"},"content":"        Person[] persons \u003d getSamplePersons();","lastModifiedDate":"2021-10-15"},{"lineNumber":93,"author":{"gitId":"marcuspeh"},"content":"        for (int i \u003d start; i \u003c end; i++) {","lastModifiedDate":"2021-10-15"},{"lineNumber":94,"author":{"gitId":"marcuspeh"},"content":"            members.add(persons[i]);","lastModifiedDate":"2021-10-15"},{"lineNumber":95,"author":{"gitId":"marcuspeh"},"content":"        }","lastModifiedDate":"2021-10-15"},{"lineNumber":96,"author":{"gitId":"marcuspeh"},"content":"        return members;","lastModifiedDate":"2021-10-15"},{"lineNumber":97,"author":{"gitId":"marcuspeh"},"content":"    }","lastModifiedDate":"2021-10-15"},{"lineNumber":98,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":99,"author":{"gitId":"marcuspeh"},"content":"    /**","lastModifiedDate":"2021-10-15"},{"lineNumber":100,"author":{"gitId":"marcuspeh"},"content":"     * Returns a list of expenses containing the sample expenses","lastModifiedDate":"2021-10-15"},{"lineNumber":101,"author":{"gitId":"marcuspeh"},"content":"     * within the given range.","lastModifiedDate":"2021-10-15"},{"lineNumber":102,"author":{"gitId":"marcuspeh"},"content":"     *","lastModifiedDate":"2021-10-15"},{"lineNumber":103,"author":{"gitId":"marcuspeh"},"content":"     * @param start The starting index to add expense.","lastModifiedDate":"2021-10-15"},{"lineNumber":104,"author":{"gitId":"marcuspeh"},"content":"     * @param end   The ending index to add expense.","lastModifiedDate":"2021-10-15"},{"lineNumber":105,"author":{"gitId":"marcuspeh"},"content":"     * @return List of expenses.","lastModifiedDate":"2021-10-15"},{"lineNumber":106,"author":{"gitId":"marcuspeh"},"content":"     */","lastModifiedDate":"2021-10-15"},{"lineNumber":107,"author":{"gitId":"marcuspeh"},"content":"    public static ArrayList\u003cExpense\u003e addSampleExpenses(int start, int end) {","lastModifiedDate":"2021-10-15"},{"lineNumber":108,"author":{"gitId":"marcuspeh"},"content":"        ArrayList\u003cExpense\u003e expenses \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-15"},{"lineNumber":109,"author":{"gitId":"marcuspeh"},"content":"        Expense[] sampleExpenses \u003d getSampleExpenses();","lastModifiedDate":"2021-10-15"},{"lineNumber":110,"author":{"gitId":"marcuspeh"},"content":"        for (int i \u003d start; i \u003c end; i++) {","lastModifiedDate":"2021-10-15"},{"lineNumber":111,"author":{"gitId":"marcuspeh"},"content":"            expenses.add(sampleExpenses[i]);","lastModifiedDate":"2021-10-15"},{"lineNumber":112,"author":{"gitId":"marcuspeh"},"content":"        }","lastModifiedDate":"2021-10-15"},{"lineNumber":113,"author":{"gitId":"marcuspeh"},"content":"        return expenses;","lastModifiedDate":"2021-10-15"},{"lineNumber":114,"author":{"gitId":"marcuspeh"},"content":"    }","lastModifiedDate":"2021-10-15"},{"lineNumber":115,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":116,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-20"}],"authorContributionMap":{"marcuspeh":76,"ramapriyan912001":7,"-":33}},{"path":"src/main/java/seedu/awe/storage/AddressBookStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ramapriyan912001"},"content":"package seedu.awe.storage;","lastModifiedDate":"2021-10-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-09-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2016-09-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":7,"author":{"gitId":"ramapriyan912001"},"content":"import seedu.awe.commons.exceptions.DataConversionException;","lastModifiedDate":"2021-10-05"},{"lineNumber":8,"author":{"gitId":"ramapriyan912001"},"content":"import seedu.awe.model.ReadOnlyAddressBook;","lastModifiedDate":"2021-10-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-24"},{"lineNumber":11,"author":{"gitId":"ramapriyan912001"},"content":" * Represents a storage for {@link seedu.awe.model.AddressBook}.","lastModifiedDate":"2021-10-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public interface AddressBookStorage {","lastModifiedDate":"2016-09-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * Returns the file path of the data file.","lastModifiedDate":"2016-09-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    Path getAddressBookFilePath();","lastModifiedDate":"2018-04-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * Returns AddressBook data as a {@link ReadOnlyAddressBook}.","lastModifiedDate":"2016-09-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     *   Returns {@code Optional.empty()} if storage file is not found.","lastModifiedDate":"2016-09-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * @throws DataConversionException if the data in storage is not in the expected format.","lastModifiedDate":"2016-09-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @throws IOException if there was any problem when reading from the storage.","lastModifiedDate":"2016-09-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    Optional\u003cReadOnlyAddressBook\u003e readAddressBook() throws DataConversionException, IOException;","lastModifiedDate":"2016-09-28"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-01"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * @see #getAddressBookFilePath()","lastModifiedDate":"2016-10-01"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-01"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    Optional\u003cReadOnlyAddressBook\u003e readAddressBook(Path filePath) throws DataConversionException, IOException;","lastModifiedDate":"2018-04-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-01"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Saves the given {@link ReadOnlyAddressBook} to the storage.","lastModifiedDate":"2016-09-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * @param addressBook cannot be null.","lastModifiedDate":"2016-09-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * @throws IOException if there was any problem writing to the file.","lastModifiedDate":"2016-09-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    void saveAddressBook(ReadOnlyAddressBook addressBook) throws IOException;","lastModifiedDate":"2016-09-28"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-01"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * @see #saveAddressBook(ReadOnlyAddressBook)","lastModifiedDate":"2016-10-01"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-01"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    void saveAddressBook(ReadOnlyAddressBook addressBook, Path filePath) throws IOException;","lastModifiedDate":"2018-04-21"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-01"},{"lineNumber":45,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-24"}],"authorContributionMap":{"ramapriyan912001":4,"-":41}},{"path":"src/main/java/seedu/awe/storage/JsonAdaptedExpense.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kheekheekhee"},"content":"package seedu.awe.storage;","lastModifiedDate":"2021-10-06"},{"lineNumber":2,"author":{"gitId":"kheekheekhee"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":3,"author":{"gitId":"kheekheekhee"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-11"},{"lineNumber":4,"author":{"gitId":"kheekheekhee"},"content":"import java.util.List;","lastModifiedDate":"2021-10-11"},{"lineNumber":5,"author":{"gitId":"ramapriyan912001"},"content":"import java.util.Map;","lastModifiedDate":"2021-10-20"},{"lineNumber":6,"author":{"gitId":"kheekheekhee"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2021-10-11"},{"lineNumber":7,"author":{"gitId":"kheekheekhee"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":8,"author":{"gitId":"kheekheekhee"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2021-10-06"},{"lineNumber":9,"author":{"gitId":"kheekheekhee"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2021-10-06"},{"lineNumber":10,"author":{"gitId":"kheekheekhee"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":11,"author":{"gitId":"kheekheekhee"},"content":"import seedu.awe.commons.exceptions.IllegalValueException;","lastModifiedDate":"2021-10-06"},{"lineNumber":12,"author":{"gitId":"kheekheekhee"},"content":"import seedu.awe.model.expense.Cost;","lastModifiedDate":"2021-10-06"},{"lineNumber":13,"author":{"gitId":"kheekheekhee"},"content":"import seedu.awe.model.expense.Description;","lastModifiedDate":"2021-10-06"},{"lineNumber":14,"author":{"gitId":"kheekheekhee"},"content":"import seedu.awe.model.expense.Expense;","lastModifiedDate":"2021-10-06"},{"lineNumber":15,"author":{"gitId":"ramapriyan912001"},"content":"import seedu.awe.model.expense.IndividualAmount;","lastModifiedDate":"2021-10-20"},{"lineNumber":16,"author":{"gitId":"kheekheekhee"},"content":"import seedu.awe.model.person.Person;","lastModifiedDate":"2021-10-06"},{"lineNumber":17,"author":{"gitId":"kheekheekhee"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":18,"author":{"gitId":"kheekheekhee"},"content":"public class JsonAdaptedExpense {","lastModifiedDate":"2021-10-06"},{"lineNumber":19,"author":{"gitId":"kheekheekhee"},"content":"    public static final String MISSING_FIELD_MESSAGE_FORMAT \u003d \"Group\u0027s %s field is missing!\";","lastModifiedDate":"2021-10-06"},{"lineNumber":20,"author":{"gitId":"kheekheekhee"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":21,"author":{"gitId":"kheekheekhee"},"content":"    private final JsonAdaptedPerson payer;","lastModifiedDate":"2021-10-06"},{"lineNumber":22,"author":{"gitId":"kheekheekhee"},"content":"    private final String cost;","lastModifiedDate":"2021-10-06"},{"lineNumber":23,"author":{"gitId":"kheekheekhee"},"content":"    private final String description;","lastModifiedDate":"2021-10-06"},{"lineNumber":24,"author":{"gitId":"kheekheekhee"},"content":"    private final List\u003cJsonAdaptedPerson\u003e included \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-17"},{"lineNumber":25,"author":{"gitId":"ramapriyan912001"},"content":"    private final List\u003cJsonAdaptedIndividualAmount\u003e individualExpenses \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-20"},{"lineNumber":26,"author":{"gitId":"kheekheekhee"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":27,"author":{"gitId":"kheekheekhee"},"content":"    /**","lastModifiedDate":"2021-10-06"},{"lineNumber":28,"author":{"gitId":"kheekheekhee"},"content":"     * Constructs a {@code JsonAdaptedExpense} with the given group details.","lastModifiedDate":"2021-10-06"},{"lineNumber":29,"author":{"gitId":"kheekheekhee"},"content":"     */","lastModifiedDate":"2021-10-06"},{"lineNumber":30,"author":{"gitId":"kheekheekhee"},"content":"    @JsonCreator","lastModifiedDate":"2021-10-06"},{"lineNumber":31,"author":{"gitId":"kheekheekhee"},"content":"    public JsonAdaptedExpense(@JsonProperty(\"payer\") JsonAdaptedPerson payer,","lastModifiedDate":"2021-10-06"},{"lineNumber":32,"author":{"gitId":"kheekheekhee"},"content":"                              @JsonProperty(\"cost\") String cost,","lastModifiedDate":"2021-10-06"},{"lineNumber":33,"author":{"gitId":"kheekheekhee"},"content":"                              @JsonProperty(\"description\") String description,","lastModifiedDate":"2021-10-11"},{"lineNumber":34,"author":{"gitId":"ramapriyan912001"},"content":"                              @JsonProperty(\"included\") List\u003cJsonAdaptedPerson\u003e included,","lastModifiedDate":"2021-10-20"},{"lineNumber":35,"author":{"gitId":"ramapriyan912001"},"content":"                              @JsonProperty(\"individualExpenses\")","lastModifiedDate":"2021-10-20"},{"lineNumber":36,"author":{"gitId":"ramapriyan912001"},"content":"                                          List\u003cJsonAdaptedIndividualAmount\u003e individualExpenses) {","lastModifiedDate":"2021-10-20"},{"lineNumber":37,"author":{"gitId":"kheekheekhee"},"content":"        this.payer \u003d payer;","lastModifiedDate":"2021-10-06"},{"lineNumber":38,"author":{"gitId":"kheekheekhee"},"content":"        this.cost \u003d cost;","lastModifiedDate":"2021-10-06"},{"lineNumber":39,"author":{"gitId":"kheekheekhee"},"content":"        this.description \u003d description;","lastModifiedDate":"2021-10-06"},{"lineNumber":40,"author":{"gitId":"kheekheekhee"},"content":"        this.included.addAll(included);","lastModifiedDate":"2021-10-17"},{"lineNumber":41,"author":{"gitId":"ramapriyan912001"},"content":"        if (individualExpenses !\u003d null) {","lastModifiedDate":"2021-10-20"},{"lineNumber":42,"author":{"gitId":"ramapriyan912001"},"content":"            this.individualExpenses.addAll(individualExpenses);","lastModifiedDate":"2021-10-20"},{"lineNumber":43,"author":{"gitId":"ramapriyan912001"},"content":"        }","lastModifiedDate":"2021-10-20"},{"lineNumber":44,"author":{"gitId":"kheekheekhee"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":45,"author":{"gitId":"kheekheekhee"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":46,"author":{"gitId":"kheekheekhee"},"content":"    /**","lastModifiedDate":"2021-10-06"},{"lineNumber":47,"author":{"gitId":"kheekheekhee"},"content":"     * Converts a given {@code Expense} into this class for Jackson use.","lastModifiedDate":"2021-10-06"},{"lineNumber":48,"author":{"gitId":"kheekheekhee"},"content":"     */","lastModifiedDate":"2021-10-06"},{"lineNumber":49,"author":{"gitId":"kheekheekhee"},"content":"    public JsonAdaptedExpense(Expense source) {","lastModifiedDate":"2021-10-06"},{"lineNumber":50,"author":{"gitId":"kheekheekhee"},"content":"        payer \u003d new JsonAdaptedPerson(source.getPayer());","lastModifiedDate":"2021-10-06"},{"lineNumber":51,"author":{"gitId":"ramapriyan912001"},"content":"        cost \u003d String.valueOf(source.getCost().getCost());","lastModifiedDate":"2021-10-20"},{"lineNumber":52,"author":{"gitId":"kheekheekhee"},"content":"        description \u003d source.getDescription().toString();","lastModifiedDate":"2021-10-06"},{"lineNumber":53,"author":{"gitId":"kheekheekhee"},"content":"        included.addAll(source.getIncluded()","lastModifiedDate":"2021-10-17"},{"lineNumber":54,"author":{"gitId":"kheekheekhee"},"content":"                .stream()","lastModifiedDate":"2021-10-11"},{"lineNumber":55,"author":{"gitId":"kheekheekhee"},"content":"                .map(JsonAdaptedPerson::new)","lastModifiedDate":"2021-10-11"},{"lineNumber":56,"author":{"gitId":"kheekheekhee"},"content":"                .collect(Collectors.toList()));","lastModifiedDate":"2021-10-11"},{"lineNumber":57,"author":{"gitId":"ramapriyan912001"},"content":"        Map\u003cPerson, Cost\u003e individualExpenses \u003d source","lastModifiedDate":"2021-10-20"},{"lineNumber":58,"author":{"gitId":"ramapriyan912001"},"content":"                .getIndividualExpenses();","lastModifiedDate":"2021-10-20"},{"lineNumber":59,"author":{"gitId":"ramapriyan912001"},"content":"        List\u003cIndividualAmount\u003e individualAmounts \u003d StorageUtil","lastModifiedDate":"2021-10-27"},{"lineNumber":60,"author":{"gitId":"ramapriyan912001"},"content":"                .convertExpenseMapToListOfIndividualAmounts(individualExpenses);","lastModifiedDate":"2021-10-20"},{"lineNumber":61,"author":{"gitId":"ramapriyan912001"},"content":"        this.individualExpenses.addAll(individualAmounts","lastModifiedDate":"2021-10-20"},{"lineNumber":62,"author":{"gitId":"ramapriyan912001"},"content":"                .stream()","lastModifiedDate":"2021-10-20"},{"lineNumber":63,"author":{"gitId":"ramapriyan912001"},"content":"                .map(JsonAdaptedIndividualAmount::new)","lastModifiedDate":"2021-10-20"},{"lineNumber":64,"author":{"gitId":"ramapriyan912001"},"content":"                .collect(Collectors.toList()));","lastModifiedDate":"2021-10-20"},{"lineNumber":65,"author":{"gitId":"kheekheekhee"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":66,"author":{"gitId":"kheekheekhee"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":67,"author":{"gitId":"kheekheekhee"},"content":"    /**","lastModifiedDate":"2021-10-06"},{"lineNumber":68,"author":{"gitId":"kheekheekhee"},"content":"     * Converts this Jackson-friendly adapted person object into the model\u0027s {@code Group} object.","lastModifiedDate":"2021-10-06"},{"lineNumber":69,"author":{"gitId":"kheekheekhee"},"content":"     *","lastModifiedDate":"2021-10-06"},{"lineNumber":70,"author":{"gitId":"kheekheekhee"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted person.","lastModifiedDate":"2021-10-06"},{"lineNumber":71,"author":{"gitId":"kheekheekhee"},"content":"     */","lastModifiedDate":"2021-10-06"},{"lineNumber":72,"author":{"gitId":"kheekheekhee"},"content":"    public Expense toModelType() throws IllegalValueException {","lastModifiedDate":"2021-10-06"},{"lineNumber":73,"author":{"gitId":"kheekheekhee"},"content":"        final Person modelPayer \u003d payer.toModelType();","lastModifiedDate":"2021-10-06"},{"lineNumber":74,"author":{"gitId":"kheekheekhee"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":75,"author":{"gitId":"kheekheekhee"},"content":"        if (cost \u003d\u003d null) {","lastModifiedDate":"2021-10-06"},{"lineNumber":76,"author":{"gitId":"kheekheekhee"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Cost.class.getSimpleName()));","lastModifiedDate":"2021-10-06"},{"lineNumber":77,"author":{"gitId":"kheekheekhee"},"content":"        }","lastModifiedDate":"2021-10-06"},{"lineNumber":78,"author":{"gitId":"kheekheekhee"},"content":"        if (!Cost.isValidCost(cost)) {","lastModifiedDate":"2021-10-06"},{"lineNumber":79,"author":{"gitId":"marcuspeh"},"content":"            throw new IllegalValueException(Cost.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-11-01"},{"lineNumber":80,"author":{"gitId":"kheekheekhee"},"content":"        }","lastModifiedDate":"2021-10-06"},{"lineNumber":81,"author":{"gitId":"kheekheekhee"},"content":"        final Cost modelCost \u003d new Cost(cost);","lastModifiedDate":"2021-10-06"},{"lineNumber":82,"author":{"gitId":"kheekheekhee"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":83,"author":{"gitId":"kheekheekhee"},"content":"        if (description \u003d\u003d null) {","lastModifiedDate":"2021-10-06"},{"lineNumber":84,"author":{"gitId":"kheekheekhee"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT,","lastModifiedDate":"2021-10-06"},{"lineNumber":85,"author":{"gitId":"kheekheekhee"},"content":"                    Description.class.getSimpleName()));","lastModifiedDate":"2021-10-06"},{"lineNumber":86,"author":{"gitId":"kheekheekhee"},"content":"        }","lastModifiedDate":"2021-10-06"},{"lineNumber":87,"author":{"gitId":"kheekheekhee"},"content":"        if (!Description.isValidDescription(description)) {","lastModifiedDate":"2021-10-06"},{"lineNumber":88,"author":{"gitId":"marcuspeh"},"content":"            throw new IllegalValueException(Description.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-11-01"},{"lineNumber":89,"author":{"gitId":"kheekheekhee"},"content":"        }","lastModifiedDate":"2021-10-06"},{"lineNumber":90,"author":{"gitId":"kheekheekhee"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":91,"author":{"gitId":"kheekheekhee"},"content":"        final ArrayList\u003cPerson\u003e modelIncluded \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-17"},{"lineNumber":92,"author":{"gitId":"kheekheekhee"},"content":"        for (JsonAdaptedPerson includedPerson : included) {","lastModifiedDate":"2021-10-17"},{"lineNumber":93,"author":{"gitId":"kheekheekhee"},"content":"            modelIncluded.add(includedPerson.toModelType());","lastModifiedDate":"2021-10-17"},{"lineNumber":94,"author":{"gitId":"kheekheekhee"},"content":"        }","lastModifiedDate":"2021-10-11"},{"lineNumber":95,"author":{"gitId":"kheekheekhee"},"content":"        final Description modelDescription \u003d new Description(description);","lastModifiedDate":"2021-10-06"},{"lineNumber":96,"author":{"gitId":"kheekheekhee"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":97,"author":{"gitId":"ramapriyan912001"},"content":"        Map\u003cPerson, Cost\u003e individualExpenses \u003d StorageUtil","lastModifiedDate":"2021-10-27"},{"lineNumber":98,"author":{"gitId":"ramapriyan912001"},"content":"                .convertListOfJsonAdaptedIndividualAmountsToExpenseMap(this.individualExpenses);","lastModifiedDate":"2021-10-20"},{"lineNumber":99,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":100,"author":{"gitId":"ramapriyan912001"},"content":"        return new Expense(modelPayer, modelCost, modelDescription, modelIncluded, individualExpenses);","lastModifiedDate":"2021-10-20"},{"lineNumber":101,"author":{"gitId":"kheekheekhee"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":102,"author":{"gitId":"kheekheekhee"},"content":"}","lastModifiedDate":"2021-10-06"}],"authorContributionMap":{"marcuspeh":2,"kheekheekhee":78,"ramapriyan912001":22}},{"path":"src/main/java/seedu/awe/storage/JsonAdaptedGroup.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ramapriyan912001"},"content":"package seedu.awe.storage;","lastModifiedDate":"2021-10-05"},{"lineNumber":2,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":3,"author":{"gitId":"ramapriyan912001"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-09-26"},{"lineNumber":4,"author":{"gitId":"ramapriyan912001"},"content":"import java.util.HashSet;","lastModifiedDate":"2021-10-05"},{"lineNumber":5,"author":{"gitId":"ramapriyan912001"},"content":"import java.util.List;","lastModifiedDate":"2021-09-26"},{"lineNumber":6,"author":{"gitId":"ramapriyan912001"},"content":"import java.util.Set;","lastModifiedDate":"2021-10-05"},{"lineNumber":7,"author":{"gitId":"ramapriyan912001"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2021-09-26"},{"lineNumber":8,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":9,"author":{"gitId":"ramapriyan912001"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2021-09-26"},{"lineNumber":10,"author":{"gitId":"ramapriyan912001"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2021-09-26"},{"lineNumber":11,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":12,"author":{"gitId":"ramapriyan912001"},"content":"import seedu.awe.commons.exceptions.IllegalValueException;","lastModifiedDate":"2021-10-05"},{"lineNumber":13,"author":{"gitId":"kheekheekhee"},"content":"import seedu.awe.model.expense.Expense;","lastModifiedDate":"2021-10-06"},{"lineNumber":14,"author":{"gitId":"ramapriyan912001"},"content":"import seedu.awe.model.group.Group;","lastModifiedDate":"2021-10-05"},{"lineNumber":15,"author":{"gitId":"ramapriyan912001"},"content":"import seedu.awe.model.group.GroupName;","lastModifiedDate":"2021-10-05"},{"lineNumber":16,"author":{"gitId":"ramapriyan912001"},"content":"import seedu.awe.model.person.Person;","lastModifiedDate":"2021-10-05"},{"lineNumber":17,"author":{"gitId":"ramapriyan912001"},"content":"import seedu.awe.model.tag.Tag;","lastModifiedDate":"2021-10-05"},{"lineNumber":18,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":19,"author":{"gitId":"ramapriyan912001"},"content":"public class JsonAdaptedGroup {","lastModifiedDate":"2021-09-26"},{"lineNumber":20,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":21,"author":{"gitId":"ramapriyan912001"},"content":"    public static final String MISSING_FIELD_MESSAGE_FORMAT \u003d \"Group\u0027s %s field is missing!\";","lastModifiedDate":"2021-09-26"},{"lineNumber":22,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":23,"author":{"gitId":"ramapriyan912001"},"content":"    private final String groupName;","lastModifiedDate":"2021-09-26"},{"lineNumber":24,"author":{"gitId":"ramapriyan912001"},"content":"    private final List\u003cJsonAdaptedPerson\u003e members \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-09-26"},{"lineNumber":25,"author":{"gitId":"ramapriyan912001"},"content":"    private final List\u003cJsonAdaptedTag\u003e tags \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-05"},{"lineNumber":26,"author":{"gitId":"kheekheekhee"},"content":"    private final List\u003cJsonAdaptedExpense\u003e expenses \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-06"},{"lineNumber":27,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":28,"author":{"gitId":"ramapriyan912001"},"content":"    /**","lastModifiedDate":"2021-10-05"},{"lineNumber":29,"author":{"gitId":"ramapriyan912001"},"content":"     * Constructs a {@code JsonAdaptedGroup} with the given group details.","lastModifiedDate":"2021-10-05"},{"lineNumber":30,"author":{"gitId":"ramapriyan912001"},"content":"     */","lastModifiedDate":"2021-10-05"},{"lineNumber":31,"author":{"gitId":"ramapriyan912001"},"content":"    @JsonCreator","lastModifiedDate":"2021-10-05"},{"lineNumber":32,"author":{"gitId":"ramapriyan912001"},"content":"    public JsonAdaptedGroup(@JsonProperty(\"name\") String groupName,","lastModifiedDate":"2021-10-05"},{"lineNumber":33,"author":{"gitId":"ramapriyan912001"},"content":"                            @JsonProperty(\"members\") List\u003cJsonAdaptedPerson\u003e members,","lastModifiedDate":"2021-10-05"},{"lineNumber":34,"author":{"gitId":"kheekheekhee"},"content":"                            @JsonProperty(\"tags\") List\u003cJsonAdaptedTag\u003e tags,","lastModifiedDate":"2021-10-06"},{"lineNumber":35,"author":{"gitId":"ramapriyan912001"},"content":"                            @JsonProperty(\"expenses\") List\u003cJsonAdaptedExpense\u003e expenses) {","lastModifiedDate":"2021-10-20"},{"lineNumber":36,"author":{"gitId":"ramapriyan912001"},"content":"        this.groupName \u003d groupName;","lastModifiedDate":"2021-10-05"},{"lineNumber":37,"author":{"gitId":"ramapriyan912001"},"content":"        if (members !\u003d null) {","lastModifiedDate":"2021-10-05"},{"lineNumber":38,"author":{"gitId":"ramapriyan912001"},"content":"            this.members.addAll(members);","lastModifiedDate":"2021-10-05"},{"lineNumber":39,"author":{"gitId":"ramapriyan912001"},"content":"        }","lastModifiedDate":"2021-10-05"},{"lineNumber":40,"author":{"gitId":"ramapriyan912001"},"content":"        if (tags !\u003d null) {","lastModifiedDate":"2021-10-05"},{"lineNumber":41,"author":{"gitId":"ramapriyan912001"},"content":"            this.tags.addAll(tags);","lastModifiedDate":"2021-10-05"},{"lineNumber":42,"author":{"gitId":"ramapriyan912001"},"content":"        }","lastModifiedDate":"2021-10-05"},{"lineNumber":43,"author":{"gitId":"kheekheekhee"},"content":"        if (expenses !\u003d null) {","lastModifiedDate":"2021-10-06"},{"lineNumber":44,"author":{"gitId":"kheekheekhee"},"content":"            this.expenses.addAll(expenses);","lastModifiedDate":"2021-10-06"},{"lineNumber":45,"author":{"gitId":"kheekheekhee"},"content":"        }","lastModifiedDate":"2021-10-06"},{"lineNumber":46,"author":{"gitId":"ramapriyan912001"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":47,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":48,"author":{"gitId":"ramapriyan912001"},"content":"    /**","lastModifiedDate":"2021-09-26"},{"lineNumber":49,"author":{"gitId":"ramapriyan912001"},"content":"     * Converts a given {@code Group} into this class for Jackson use.","lastModifiedDate":"2021-10-03"},{"lineNumber":50,"author":{"gitId":"ramapriyan912001"},"content":"     */","lastModifiedDate":"2021-09-26"},{"lineNumber":51,"author":{"gitId":"ramapriyan912001"},"content":"    public JsonAdaptedGroup(Group source) {","lastModifiedDate":"2021-09-26"},{"lineNumber":52,"author":{"gitId":"ramapriyan912001"},"content":"        groupName \u003d source.getGroupName().getName();","lastModifiedDate":"2021-10-05"},{"lineNumber":53,"author":{"gitId":"ramapriyan912001"},"content":"        members.addAll(source.getMembers().stream()","lastModifiedDate":"2021-09-26"},{"lineNumber":54,"author":{"gitId":"ramapriyan912001"},"content":"                .map(JsonAdaptedPerson::new)","lastModifiedDate":"2021-09-26"},{"lineNumber":55,"author":{"gitId":"ramapriyan912001"},"content":"                .collect(Collectors.toList()));","lastModifiedDate":"2021-09-26"},{"lineNumber":56,"author":{"gitId":"kheekheekhee"},"content":"        tags.addAll(source.getTags()","lastModifiedDate":"2021-10-06"},{"lineNumber":57,"author":{"gitId":"kheekheekhee"},"content":"                .stream()","lastModifiedDate":"2021-10-06"},{"lineNumber":58,"author":{"gitId":"kheekheekhee"},"content":"                .map(JsonAdaptedTag::new)","lastModifiedDate":"2021-10-06"},{"lineNumber":59,"author":{"gitId":"kheekheekhee"},"content":"                .collect(Collectors.toList()));","lastModifiedDate":"2021-10-06"},{"lineNumber":60,"author":{"gitId":"kheekheekhee"},"content":"        expenses.addAll(source.getExpenses()","lastModifiedDate":"2021-10-06"},{"lineNumber":61,"author":{"gitId":"kheekheekhee"},"content":"                .stream()","lastModifiedDate":"2021-10-06"},{"lineNumber":62,"author":{"gitId":"kheekheekhee"},"content":"                .map(JsonAdaptedExpense::new)","lastModifiedDate":"2021-10-06"},{"lineNumber":63,"author":{"gitId":"kheekheekhee"},"content":"                .collect(Collectors.toList()));","lastModifiedDate":"2021-10-06"},{"lineNumber":64,"author":{"gitId":"ramapriyan912001"},"content":"    }","lastModifiedDate":"2021-09-26"},{"lineNumber":65,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":66,"author":{"gitId":"ramapriyan912001"},"content":"    /**","lastModifiedDate":"2021-09-26"},{"lineNumber":67,"author":{"gitId":"ramapriyan912001"},"content":"     * Converts this Jackson-friendly adapted person object into the model\u0027s {@code Group} object.","lastModifiedDate":"2021-10-03"},{"lineNumber":68,"author":{"gitId":"ramapriyan912001"},"content":"     *","lastModifiedDate":"2021-09-26"},{"lineNumber":69,"author":{"gitId":"ramapriyan912001"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted person.","lastModifiedDate":"2021-09-26"},{"lineNumber":70,"author":{"gitId":"ramapriyan912001"},"content":"     */","lastModifiedDate":"2021-09-26"},{"lineNumber":71,"author":{"gitId":"ramapriyan912001"},"content":"    public Group toModelType() throws IllegalValueException {","lastModifiedDate":"2021-09-26"},{"lineNumber":72,"author":{"gitId":"ramapriyan912001"},"content":"        final ArrayList\u003cPerson\u003e modelMembers \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-09-26"},{"lineNumber":73,"author":{"gitId":"ramapriyan912001"},"content":"        for (JsonAdaptedPerson member : members) {","lastModifiedDate":"2021-09-26"},{"lineNumber":74,"author":{"gitId":"ramapriyan912001"},"content":"            modelMembers.add(member.toModelType());","lastModifiedDate":"2021-09-26"},{"lineNumber":75,"author":{"gitId":"ramapriyan912001"},"content":"        }","lastModifiedDate":"2021-09-26"},{"lineNumber":76,"author":{"gitId":"ramapriyan912001"},"content":"        final List\u003cTag\u003e groupTags \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-05"},{"lineNumber":77,"author":{"gitId":"ramapriyan912001"},"content":"        for (JsonAdaptedTag tag : tags) {","lastModifiedDate":"2021-10-05"},{"lineNumber":78,"author":{"gitId":"ramapriyan912001"},"content":"            groupTags.add(tag.toModelType());","lastModifiedDate":"2021-10-05"},{"lineNumber":79,"author":{"gitId":"ramapriyan912001"},"content":"        }","lastModifiedDate":"2021-10-05"},{"lineNumber":80,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":81,"author":{"gitId":"kheekheekhee"},"content":"        final ArrayList\u003cExpense\u003e modelExpenses \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-06"},{"lineNumber":82,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":83,"author":{"gitId":"ramapriyan912001"},"content":"        modelExpenses.addAll(StorageUtil.convertAdaptedExpensesToExpenses(expenses));","lastModifiedDate":"2021-10-28"},{"lineNumber":84,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":85,"author":{"gitId":"ramapriyan912001"},"content":"        if (groupName \u003d\u003d null) {","lastModifiedDate":"2021-09-26"},{"lineNumber":86,"author":{"gitId":"ramapriyan912001"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT,","lastModifiedDate":"2021-10-05"},{"lineNumber":87,"author":{"gitId":"ramapriyan912001"},"content":"                    GroupName.class.getSimpleName()));","lastModifiedDate":"2021-10-05"},{"lineNumber":88,"author":{"gitId":"ramapriyan912001"},"content":"        }","lastModifiedDate":"2021-09-26"},{"lineNumber":89,"author":{"gitId":"ramapriyan912001"},"content":"        if (!GroupName.isValidGroupName(groupName)) {","lastModifiedDate":"2021-10-05"},{"lineNumber":90,"author":{"gitId":"ramapriyan912001"},"content":"            throw new IllegalValueException(GroupName.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-05"},{"lineNumber":91,"author":{"gitId":"ramapriyan912001"},"content":"        }","lastModifiedDate":"2021-09-26"},{"lineNumber":92,"author":{"gitId":"ramapriyan912001"},"content":"        final GroupName modelName \u003d new GroupName(groupName);","lastModifiedDate":"2021-09-26"},{"lineNumber":93,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":94,"author":{"gitId":"ramapriyan912001"},"content":"        final Set\u003cTag\u003e modelTags \u003d new HashSet\u003c\u003e(groupTags);","lastModifiedDate":"2021-10-05"},{"lineNumber":95,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":96,"author":{"gitId":"marcuspeh"},"content":"        Group group \u003d new Group(modelName, modelMembers, modelTags, modelExpenses);","lastModifiedDate":"2021-10-25"},{"lineNumber":97,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":98,"author":{"gitId":"marcuspeh"},"content":"        return group;","lastModifiedDate":"2021-10-25"},{"lineNumber":99,"author":{"gitId":"ramapriyan912001"},"content":"    }","lastModifiedDate":"2021-09-26"},{"lineNumber":100,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":101,"author":{"gitId":"ramapriyan912001"},"content":"}","lastModifiedDate":"2021-09-26"}],"authorContributionMap":{"marcuspeh":2,"kheekheekhee":15,"ramapriyan912001":84}},{"path":"src/main/java/seedu/awe/storage/JsonAdaptedIndividualAmount.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ramapriyan912001"},"content":"package seedu.awe.storage;","lastModifiedDate":"2021-10-20"},{"lineNumber":2,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":3,"author":{"gitId":"ramapriyan912001"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2021-10-20"},{"lineNumber":4,"author":{"gitId":"ramapriyan912001"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2021-10-20"},{"lineNumber":5,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":6,"author":{"gitId":"ramapriyan912001"},"content":"import seedu.awe.commons.exceptions.IllegalValueException;","lastModifiedDate":"2021-10-20"},{"lineNumber":7,"author":{"gitId":"ramapriyan912001"},"content":"import seedu.awe.model.expense.IndividualAmount;","lastModifiedDate":"2021-10-20"},{"lineNumber":8,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":9,"author":{"gitId":"ramapriyan912001"},"content":"public class JsonAdaptedIndividualAmount {","lastModifiedDate":"2021-10-27"},{"lineNumber":10,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":11,"author":{"gitId":"ramapriyan912001"},"content":"    private JsonAdaptedPerson person;","lastModifiedDate":"2021-10-20"},{"lineNumber":12,"author":{"gitId":"ramapriyan912001"},"content":"    private String expenditure;","lastModifiedDate":"2021-10-20"},{"lineNumber":13,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":14,"author":{"gitId":"ramapriyan912001"},"content":"    /**","lastModifiedDate":"2021-10-20"},{"lineNumber":15,"author":{"gitId":"ramapriyan912001"},"content":"     * Constructs a {@code JsonAdaptedIndividualAmount} with the given individual expenditure/payment","lastModifiedDate":"2021-10-20"},{"lineNumber":16,"author":{"gitId":"ramapriyan912001"},"content":"     * details.","lastModifiedDate":"2021-10-20"},{"lineNumber":17,"author":{"gitId":"ramapriyan912001"},"content":"     */","lastModifiedDate":"2021-10-20"},{"lineNumber":18,"author":{"gitId":"ramapriyan912001"},"content":"    @JsonCreator","lastModifiedDate":"2021-10-20"},{"lineNumber":19,"author":{"gitId":"ramapriyan912001"},"content":"    public JsonAdaptedIndividualAmount (@JsonProperty(\"person\") JsonAdaptedPerson jsonAdaptedPerson,","lastModifiedDate":"2021-10-20"},{"lineNumber":20,"author":{"gitId":"ramapriyan912001"},"content":"                              @JsonProperty(\"expenditure\") String expenditure) {","lastModifiedDate":"2021-10-20"},{"lineNumber":21,"author":{"gitId":"ramapriyan912001"},"content":"        this.person \u003d jsonAdaptedPerson;","lastModifiedDate":"2021-10-20"},{"lineNumber":22,"author":{"gitId":"ramapriyan912001"},"content":"        this.expenditure \u003d expenditure;","lastModifiedDate":"2021-10-20"},{"lineNumber":23,"author":{"gitId":"ramapriyan912001"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":24,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":25,"author":{"gitId":"ramapriyan912001"},"content":"    /**","lastModifiedDate":"2021-10-20"},{"lineNumber":26,"author":{"gitId":"ramapriyan912001"},"content":"     * Converts individual amount object to jsonadapted individual amount object.","lastModifiedDate":"2021-10-20"},{"lineNumber":27,"author":{"gitId":"ramapriyan912001"},"content":"     * @param source IndividualAmount object to convert into jsonadapted form.","lastModifiedDate":"2021-10-20"},{"lineNumber":28,"author":{"gitId":"ramapriyan912001"},"content":"     */","lastModifiedDate":"2021-10-20"},{"lineNumber":29,"author":{"gitId":"ramapriyan912001"},"content":"    public JsonAdaptedIndividualAmount(IndividualAmount source) {","lastModifiedDate":"2021-10-20"},{"lineNumber":30,"author":{"gitId":"ramapriyan912001"},"content":"        this.person \u003d new JsonAdaptedPerson(source.getPerson());","lastModifiedDate":"2021-10-20"},{"lineNumber":31,"author":{"gitId":"ramapriyan912001"},"content":"        this.expenditure \u003d String.valueOf(source.getExpenditure());","lastModifiedDate":"2021-10-20"},{"lineNumber":32,"author":{"gitId":"ramapriyan912001"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":33,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":34,"author":{"gitId":"ramapriyan912001"},"content":"    public IndividualAmount toModelType() throws IllegalValueException {","lastModifiedDate":"2021-10-20"},{"lineNumber":35,"author":{"gitId":"ramapriyan912001"},"content":"        return new IndividualAmount(person.toModelType(), Double.parseDouble(expenditure));","lastModifiedDate":"2021-10-20"},{"lineNumber":36,"author":{"gitId":"ramapriyan912001"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":37,"author":{"gitId":"ramapriyan912001"},"content":"}","lastModifiedDate":"2021-10-20"}],"authorContributionMap":{"ramapriyan912001":37}},{"path":"src/main/java/seedu/awe/storage/JsonAdaptedPerson.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ramapriyan912001"},"content":"package seedu.awe.storage;","lastModifiedDate":"2021-10-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"ramapriyan912001"},"content":"import seedu.awe.commons.exceptions.IllegalValueException;","lastModifiedDate":"2021-10-05"},{"lineNumber":13,"author":{"gitId":"ramapriyan912001"},"content":"import seedu.awe.model.person.Name;","lastModifiedDate":"2021-10-05"},{"lineNumber":14,"author":{"gitId":"ramapriyan912001"},"content":"import seedu.awe.model.person.Person;","lastModifiedDate":"2021-10-05"},{"lineNumber":15,"author":{"gitId":"ramapriyan912001"},"content":"import seedu.awe.model.person.Phone;","lastModifiedDate":"2021-10-05"},{"lineNumber":16,"author":{"gitId":"ramapriyan912001"},"content":"import seedu.awe.model.tag.Tag;","lastModifiedDate":"2021-10-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * Jackson-friendly version of {@link Person}.","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"class JsonAdaptedPerson {","lastModifiedDate":"2018-12-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public static final String MISSING_FIELD_MESSAGE_FORMAT \u003d \"Person\u0027s %s field is missing!\";","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private final String name;","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private final String phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private final List\u003cJsonAdaptedTag\u003e tagged \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Constructs a {@code JsonAdaptedPerson} with the given person details.","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public JsonAdaptedPerson(@JsonProperty(\"name\") String name, @JsonProperty(\"phone\") String phone,","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            @JsonProperty(\"tagged\") List\u003cJsonAdaptedTag\u003e tagged) {","lastModifiedDate":"2021-10-03"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        this.name \u003d name;","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        if (tagged !\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            this.tagged.addAll(tagged);","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * Converts a given {@code Person} into this class for Jackson use.","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public JsonAdaptedPerson(Person source) {","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        name \u003d source.getName().fullName;","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        phone \u003d source.getPhone().value;","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        tagged.addAll(source.getTags().stream()","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"                .map(JsonAdaptedTag::new)","lastModifiedDate":"2018-08-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"                .collect(Collectors.toList()));","lastModifiedDate":"2018-08-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * Converts this Jackson-friendly adapted person object into the model\u0027s {@code Person} object.","lastModifiedDate":"2018-08-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted person.","lastModifiedDate":"2018-08-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public Person toModelType() throws IllegalValueException {","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        final List\u003cTag\u003e personTags \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2018-08-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        for (JsonAdaptedTag tag : tagged) {","lastModifiedDate":"2018-08-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"            personTags.add(tag.toModelType());","lastModifiedDate":"2018-08-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        if (name \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":66,"author":{"gitId":"ramapriyan912001"},"content":"        if (!Name.isValidGroupName(name)) {","lastModifiedDate":"2021-10-05"},{"lineNumber":67,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        final Name modelName \u003d new Name(name);","lastModifiedDate":"2018-08-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        if (phone \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Phone.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        if (!Phone.isValidPhone(phone)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        final Phone modelPhone \u003d new Phone(phone);","lastModifiedDate":"2018-08-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        final Set\u003cTag\u003e modelTags \u003d new HashSet\u003c\u003e(personTags);","lastModifiedDate":"2018-08-13"},{"lineNumber":80,"author":{"gitId":"marcuspeh"},"content":"        return new Person(modelName, modelPhone, modelTags);","lastModifiedDate":"2021-11-01"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"marcuspeh":1,"ramapriyan912001":7,"-":74}},{"path":"src/main/java/seedu/awe/storage/JsonAdaptedTag.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ramapriyan912001"},"content":"package seedu.awe.storage;","lastModifiedDate":"2021-10-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonValue;","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"ramapriyan912001"},"content":"import seedu.awe.commons.exceptions.IllegalValueException;","lastModifiedDate":"2021-10-05"},{"lineNumber":7,"author":{"gitId":"ramapriyan912001"},"content":"import seedu.awe.model.tag.Tag;","lastModifiedDate":"2021-10-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Jackson-friendly version of {@link Tag}.","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"class JsonAdaptedTag {","lastModifiedDate":"2018-12-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private final String tagName;","lastModifiedDate":"2018-08-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * Constructs a {@code JsonAdaptedTag} with the given {@code tagName}.","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public JsonAdaptedTag(String tagName) {","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        this.tagName \u003d tagName;","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * Converts a given {@code Tag} into this class for Jackson use.","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public JsonAdaptedTag(Tag source) {","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        tagName \u003d source.tagName;","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @JsonValue","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public String getTagName() {","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return tagName;","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * Converts this Jackson-friendly adapted tag object into the model\u0027s {@code Tag} object.","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted tag.","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public Tag toModelType() throws IllegalValueException {","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        if (!Tag.isValidTagName(tagName)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        return new Tag(tagName);","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"ramapriyan912001":3,"-":45}},{"path":"src/main/java/seedu/awe/storage/JsonAddressBookStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ramapriyan912001"},"content":"package seedu.awe.storage;","lastModifiedDate":"2021-10-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"ramapriyan912001"},"content":"import seedu.awe.commons.core.LogsCenter;","lastModifiedDate":"2021-10-05"},{"lineNumber":11,"author":{"gitId":"ramapriyan912001"},"content":"import seedu.awe.commons.exceptions.DataConversionException;","lastModifiedDate":"2021-10-05"},{"lineNumber":12,"author":{"gitId":"ramapriyan912001"},"content":"import seedu.awe.commons.exceptions.IllegalValueException;","lastModifiedDate":"2021-10-05"},{"lineNumber":13,"author":{"gitId":"ramapriyan912001"},"content":"import seedu.awe.commons.util.FileUtil;","lastModifiedDate":"2021-10-05"},{"lineNumber":14,"author":{"gitId":"ramapriyan912001"},"content":"import seedu.awe.commons.util.JsonUtil;","lastModifiedDate":"2021-10-05"},{"lineNumber":15,"author":{"gitId":"ramapriyan912001"},"content":"import seedu.awe.model.ReadOnlyAddressBook;","lastModifiedDate":"2021-10-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * A class to access AddressBook data stored as a json file on the hard disk.","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class JsonAddressBookStorage implements AddressBookStorage {","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(JsonAddressBookStorage.class);","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private Path filePath;","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public JsonAddressBookStorage(Path filePath) {","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        return filePath;","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public Optional\u003cReadOnlyAddressBook\u003e readAddressBook() throws DataConversionException {","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        return readAddressBook(filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * Similar to {@link #readAddressBook()}.","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * @param filePath location of the data. Cannot be null.","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * @throws DataConversionException if the file is not in the correct format.","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public Optional\u003cReadOnlyAddressBook\u003e readAddressBook(Path filePath) throws DataConversionException {","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        Optional\u003cJsonSerializableAddressBook\u003e jsonAddressBook \u003d JsonUtil.readJsonFile(","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"                filePath, JsonSerializableAddressBook.class);","lastModifiedDate":"2018-08-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        if (!jsonAddressBook.isPresent()) {","lastModifiedDate":"2018-08-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            return Optional.empty();","lastModifiedDate":"2018-08-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-08-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            return Optional.of(jsonAddressBook.get().toModelType());","lastModifiedDate":"2018-08-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        } catch (IllegalValueException ive) {","lastModifiedDate":"2018-08-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"            logger.info(\"Illegal values found in \" + filePath + \": \" + ive.getMessage());","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"            throw new DataConversionException(ive);","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-08-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public void saveAddressBook(ReadOnlyAddressBook addressBook) throws IOException {","lastModifiedDate":"2018-08-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        saveAddressBook(addressBook, filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     * Similar to {@link #saveAddressBook(ReadOnlyAddressBook)}.","lastModifiedDate":"2018-08-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     * @param filePath location of the data. Cannot be null.","lastModifiedDate":"2018-08-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public void saveAddressBook(ReadOnlyAddressBook addressBook, Path filePath) throws IOException {","lastModifiedDate":"2018-08-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        requireNonNull(addressBook);","lastModifiedDate":"2018-08-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        FileUtil.createIfMissing(filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        JsonUtil.saveJsonFile(new JsonSerializableAddressBook(addressBook), filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"ramapriyan912001":7,"-":73}},{"path":"src/main/java/seedu/awe/storage/JsonSerializableAddressBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ramapriyan912001"},"content":"package seedu.awe.storage;","lastModifiedDate":"2021-10-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonRootName;","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"ramapriyan912001"},"content":"import seedu.awe.commons.exceptions.IllegalValueException;","lastModifiedDate":"2021-10-05"},{"lineNumber":12,"author":{"gitId":"ramapriyan912001"},"content":"import seedu.awe.model.AddressBook;","lastModifiedDate":"2021-10-05"},{"lineNumber":13,"author":{"gitId":"ramapriyan912001"},"content":"import seedu.awe.model.ReadOnlyAddressBook;","lastModifiedDate":"2021-10-05"},{"lineNumber":14,"author":{"gitId":"ramapriyan912001"},"content":"import seedu.awe.model.group.Group;","lastModifiedDate":"2021-10-05"},{"lineNumber":15,"author":{"gitId":"ramapriyan912001"},"content":"import seedu.awe.model.person.Person;","lastModifiedDate":"2021-10-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * An Immutable AddressBook that is serializable to JSON format.","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"@JsonRootName(value \u003d \"addressbook\")","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"class JsonSerializableAddressBook {","lastModifiedDate":"2018-12-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DUPLICATE_PERSON \u003d \"Persons list contains duplicate person(s).\";","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"ramapriyan912001"},"content":"    public static final String MESSAGE_DUPLICATE_GROUP \u003d \"Groups list contains duplicate group(s).\";","lastModifiedDate":"2021-09-26"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private final List\u003cJsonAdaptedPerson\u003e persons \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"ramapriyan912001"},"content":"    private final List\u003cJsonAdaptedGroup\u003e groups \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-09-26"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Constructs a {@code JsonSerializableAddressBook} with the given persons.","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"ramapriyan912001"},"content":"    public JsonSerializableAddressBook(@JsonProperty(\"persons\") List\u003cJsonAdaptedPerson\u003e persons,","lastModifiedDate":"2021-09-26"},{"lineNumber":34,"author":{"gitId":"ramapriyan912001"},"content":"                                       @JsonProperty(\"groups\") List\u003cJsonAdaptedGroup\u003e groups) {","lastModifiedDate":"2021-09-26"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        this.persons.addAll(persons);","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"ramapriyan912001"},"content":"        this.groups.addAll(groups);","lastModifiedDate":"2021-09-26"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * Converts a given {@code ReadOnlyAddressBook} into this class for Jackson use.","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * @param source future changes to this will not affect the created {@code JsonSerializableAddressBook}.","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public JsonSerializableAddressBook(ReadOnlyAddressBook source) {","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        persons.addAll(source.getPersonList().stream().map(JsonAdaptedPerson::new).collect(Collectors.toList()));","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"ramapriyan912001"},"content":"        groups.addAll(source.getGroupList().stream().map(JsonAdaptedGroup::new).collect(Collectors.toList()));","lastModifiedDate":"2021-09-26"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":50,"author":{"gitId":"ramapriyan912001"},"content":"     * Converts this awe book into the model\u0027s {@code AddressBook} object.","lastModifiedDate":"2021-10-05"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * @throws IllegalValueException if there were any data constraints violated.","lastModifiedDate":"2018-08-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public AddressBook toModelType() throws IllegalValueException {","lastModifiedDate":"2018-08-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        AddressBook addressBook \u003d new AddressBook();","lastModifiedDate":"2018-08-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        for (JsonAdaptedPerson jsonAdaptedPerson : persons) {","lastModifiedDate":"2018-08-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"            Person person \u003d jsonAdaptedPerson.toModelType();","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"            if (addressBook.hasPerson(person)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"                throw new IllegalValueException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2018-08-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-08-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"            addressBook.addPerson(person);","lastModifiedDate":"2018-08-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":63,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":64,"author":{"gitId":"ramapriyan912001"},"content":"        for (JsonAdaptedGroup jsonAdaptedGroup : groups) {","lastModifiedDate":"2021-09-26"},{"lineNumber":65,"author":{"gitId":"ramapriyan912001"},"content":"            Group group \u003d jsonAdaptedGroup.toModelType();","lastModifiedDate":"2021-09-26"},{"lineNumber":66,"author":{"gitId":"ramapriyan912001"},"content":"            if (addressBook.hasGroup(group)) {","lastModifiedDate":"2021-09-26"},{"lineNumber":67,"author":{"gitId":"ramapriyan912001"},"content":"                throw new IllegalValueException(MESSAGE_DUPLICATE_GROUP);","lastModifiedDate":"2021-09-26"},{"lineNumber":68,"author":{"gitId":"ramapriyan912001"},"content":"            }","lastModifiedDate":"2021-09-26"},{"lineNumber":69,"author":{"gitId":"ramapriyan912001"},"content":"            addressBook.addGroup(group);","lastModifiedDate":"2021-09-26"},{"lineNumber":70,"author":{"gitId":"ramapriyan912001"},"content":"        }","lastModifiedDate":"2021-09-26"},{"lineNumber":71,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        return addressBook;","lastModifiedDate":"2018-08-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"ramapriyan912001":22,"-":53}},{"path":"src/main/java/seedu/awe/storage/JsonUserPrefsStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ramapriyan912001"},"content":"package seedu.awe.storage;","lastModifiedDate":"2021-10-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"ramapriyan912001"},"content":"import seedu.awe.commons.exceptions.DataConversionException;","lastModifiedDate":"2021-10-05"},{"lineNumber":8,"author":{"gitId":"ramapriyan912001"},"content":"import seedu.awe.commons.util.JsonUtil;","lastModifiedDate":"2021-10-05"},{"lineNumber":9,"author":{"gitId":"ramapriyan912001"},"content":"import seedu.awe.model.ReadOnlyUserPrefs;","lastModifiedDate":"2021-10-05"},{"lineNumber":10,"author":{"gitId":"ramapriyan912001"},"content":"import seedu.awe.model.UserPrefs;","lastModifiedDate":"2021-10-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * A class to access UserPrefs stored in the hard disk as a json file","lastModifiedDate":"2016-09-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class JsonUserPrefsStorage implements UserPrefsStorage {","lastModifiedDate":"2016-10-01"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private Path filePath;","lastModifiedDate":"2018-04-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public JsonUserPrefsStorage(Path filePath) {","lastModifiedDate":"2018-04-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2016-09-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-02-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public Path getUserPrefsFilePath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        return filePath;","lastModifiedDate":"2017-02-15"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-15"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public Optional\u003cUserPrefs\u003e readUserPrefs() throws DataConversionException {","lastModifiedDate":"2018-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        return readUserPrefs(filePath);","lastModifiedDate":"2016-09-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Similar to {@link #readUserPrefs()}","lastModifiedDate":"2016-09-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * @param prefsFilePath location of the data. Cannot be null.","lastModifiedDate":"2016-09-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * @throws DataConversionException if the file format is not as expected.","lastModifiedDate":"2016-09-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public Optional\u003cUserPrefs\u003e readUserPrefs(Path prefsFilePath) throws DataConversionException {","lastModifiedDate":"2018-04-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return JsonUtil.readJsonFile(prefsFilePath, UserPrefs.class);","lastModifiedDate":"2016-10-07"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-10-07"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public void saveUserPrefs(ReadOnlyUserPrefs userPrefs) throws IOException {","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        JsonUtil.saveJsonFile(userPrefs, filePath);","lastModifiedDate":"2016-10-07"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-24"}],"authorContributionMap":{"ramapriyan912001":5,"-":42}},{"path":"src/main/java/seedu/awe/storage/Storage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ramapriyan912001"},"content":"package seedu.awe.storage;","lastModifiedDate":"2021-10-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"ramapriyan912001"},"content":"import seedu.awe.commons.exceptions.DataConversionException;","lastModifiedDate":"2021-10-05"},{"lineNumber":8,"author":{"gitId":"ramapriyan912001"},"content":"import seedu.awe.model.ReadOnlyAddressBook;","lastModifiedDate":"2021-10-05"},{"lineNumber":9,"author":{"gitId":"ramapriyan912001"},"content":"import seedu.awe.model.ReadOnlyUserPrefs;","lastModifiedDate":"2021-10-05"},{"lineNumber":10,"author":{"gitId":"ramapriyan912001"},"content":"import seedu.awe.model.UserPrefs;","lastModifiedDate":"2021-10-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * API of the Storage component","lastModifiedDate":"2016-09-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public interface Storage extends AddressBookStorage, UserPrefsStorage {","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    Optional\u003cUserPrefs\u003e readUserPrefs() throws DataConversionException, IOException;","lastModifiedDate":"2016-09-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    void saveUserPrefs(ReadOnlyUserPrefs userPrefs) throws IOException;","lastModifiedDate":"2018-11-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    Path getAddressBookFilePath();","lastModifiedDate":"2018-04-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    Optional\u003cReadOnlyAddressBook\u003e readAddressBook() throws DataConversionException, IOException;","lastModifiedDate":"2016-10-01"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    void saveAddressBook(ReadOnlyAddressBook addressBook) throws IOException;","lastModifiedDate":"2016-09-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-26"},{"lineNumber":32,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"ramapriyan912001":5,"-":27}},{"path":"src/main/java/seedu/awe/storage/StorageManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ramapriyan912001"},"content":"package seedu.awe.storage;","lastModifiedDate":"2021-10-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"ramapriyan912001"},"content":"import seedu.awe.commons.core.LogsCenter;","lastModifiedDate":"2021-10-05"},{"lineNumber":9,"author":{"gitId":"ramapriyan912001"},"content":"import seedu.awe.commons.exceptions.DataConversionException;","lastModifiedDate":"2021-10-05"},{"lineNumber":10,"author":{"gitId":"ramapriyan912001"},"content":"import seedu.awe.model.ReadOnlyAddressBook;","lastModifiedDate":"2021-10-05"},{"lineNumber":11,"author":{"gitId":"ramapriyan912001"},"content":"import seedu.awe.model.ReadOnlyUserPrefs;","lastModifiedDate":"2021-10-05"},{"lineNumber":12,"author":{"gitId":"ramapriyan912001"},"content":"import seedu.awe.model.UserPrefs;","lastModifiedDate":"2021-10-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * Manages storage of AddressBook data in local storage.","lastModifiedDate":"2016-09-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public class StorageManager implements Storage {","lastModifiedDate":"2018-12-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(StorageManager.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private AddressBookStorage addressBookStorage;","lastModifiedDate":"2016-10-01"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private UserPrefsStorage userPrefsStorage;","lastModifiedDate":"2016-10-01"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Creates a {@code StorageManager} with the given {@code AddressBookStorage} and {@code UserPrefStorage}.","lastModifiedDate":"2020-05-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public StorageManager(AddressBookStorage addressBookStorage, UserPrefsStorage userPrefsStorage) {","lastModifiedDate":"2016-10-01"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        super();","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        this.addressBookStorage \u003d addressBookStorage;","lastModifiedDate":"2016-10-01"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        this.userPrefsStorage \u003d userPrefsStorage;","lastModifiedDate":"2016-10-01"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-01"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d UserPrefs methods \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2016-09-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-02-15"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public Path getUserPrefsFilePath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        return userPrefsStorage.getUserPrefsFilePath();","lastModifiedDate":"2017-02-15"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-15"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-15"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public Optional\u003cUserPrefs\u003e readUserPrefs() throws DataConversionException, IOException {","lastModifiedDate":"2016-09-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        return userPrefsStorage.readUserPrefs();","lastModifiedDate":"2016-10-01"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public void saveUserPrefs(ReadOnlyUserPrefs userPrefs) throws IOException {","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        userPrefsStorage.saveUserPrefs(userPrefs);","lastModifiedDate":"2016-10-01"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d AddressBook methods \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2016-09-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        return addressBookStorage.getAddressBookFilePath();","lastModifiedDate":"2016-09-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public Optional\u003cReadOnlyAddressBook\u003e readAddressBook() throws DataConversionException, IOException {","lastModifiedDate":"2016-10-01"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        return readAddressBook(addressBookStorage.getAddressBookFilePath());","lastModifiedDate":"2016-10-01"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-10-01"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public Optional\u003cReadOnlyAddressBook\u003e readAddressBook(Path filePath) throws DataConversionException, IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        logger.fine(\"Attempting to read data from file: \" + filePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        return addressBookStorage.readAddressBook(filePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public void saveAddressBook(ReadOnlyAddressBook addressBook) throws IOException {","lastModifiedDate":"2016-09-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        saveAddressBook(addressBook, addressBookStorage.getAddressBookFilePath());","lastModifiedDate":"2016-10-01"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-01"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-10-01"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public void saveAddressBook(ReadOnlyAddressBook addressBook, Path filePath) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        logger.fine(\"Attempting to write to data file: \" + filePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        addressBookStorage.saveAddressBook(addressBook, filePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"ramapriyan912001":6,"-":73}},{"path":"src/main/java/seedu/awe/storage/StorageUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ramapriyan912001"},"content":"package seedu.awe.storage;","lastModifiedDate":"2021-10-20"},{"lineNumber":2,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":3,"author":{"gitId":"ramapriyan912001"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-27"},{"lineNumber":4,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":5,"author":{"gitId":"ramapriyan912001"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-20"},{"lineNumber":6,"author":{"gitId":"ramapriyan912001"},"content":"import java.util.HashMap;","lastModifiedDate":"2021-10-20"},{"lineNumber":7,"author":{"gitId":"ramapriyan912001"},"content":"import java.util.List;","lastModifiedDate":"2021-10-20"},{"lineNumber":8,"author":{"gitId":"ramapriyan912001"},"content":"import java.util.Map;","lastModifiedDate":"2021-10-20"},{"lineNumber":9,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":10,"author":{"gitId":"ramapriyan912001"},"content":"import seedu.awe.commons.exceptions.IllegalValueException;","lastModifiedDate":"2021-10-20"},{"lineNumber":11,"author":{"gitId":"ramapriyan912001"},"content":"import seedu.awe.model.expense.Cost;","lastModifiedDate":"2021-10-20"},{"lineNumber":12,"author":{"gitId":"ramapriyan912001"},"content":"import seedu.awe.model.expense.Expense;","lastModifiedDate":"2021-10-20"},{"lineNumber":13,"author":{"gitId":"ramapriyan912001"},"content":"import seedu.awe.model.expense.IndividualAmount;","lastModifiedDate":"2021-10-20"},{"lineNumber":14,"author":{"gitId":"ramapriyan912001"},"content":"import seedu.awe.model.person.Person;","lastModifiedDate":"2021-10-20"},{"lineNumber":15,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":16,"author":{"gitId":"ramapriyan912001"},"content":"public class StorageUtil {","lastModifiedDate":"2021-10-27"},{"lineNumber":17,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":18,"author":{"gitId":"ramapriyan912001"},"content":"    /**","lastModifiedDate":"2021-10-20"},{"lineNumber":19,"author":{"gitId":"ramapriyan912001"},"content":"     * Convert a map of expenses between people and costs to a list of jsonAdaptedIndividualAmounts","lastModifiedDate":"2021-10-20"},{"lineNumber":20,"author":{"gitId":"ramapriyan912001"},"content":"     * @param expenseMap","lastModifiedDate":"2021-10-20"},{"lineNumber":21,"author":{"gitId":"ramapriyan912001"},"content":"     * @return","lastModifiedDate":"2021-10-20"},{"lineNumber":22,"author":{"gitId":"ramapriyan912001"},"content":"     */","lastModifiedDate":"2021-10-20"},{"lineNumber":23,"author":{"gitId":"ramapriyan912001"},"content":"    public static List\u003cIndividualAmount\u003e convertExpenseMapToListOfIndividualAmounts(Map\u003cPerson, Cost\u003e expenseMap) {","lastModifiedDate":"2021-10-20"},{"lineNumber":24,"author":{"gitId":"ramapriyan912001"},"content":"        requireNonNull(expenseMap);","lastModifiedDate":"2021-10-27"},{"lineNumber":25,"author":{"gitId":"ramapriyan912001"},"content":"        List\u003cIndividualAmount\u003e individualAmounts \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-20"},{"lineNumber":26,"author":{"gitId":"ramapriyan912001"},"content":"        for (Person person : expenseMap.keySet()) {","lastModifiedDate":"2021-10-20"},{"lineNumber":27,"author":{"gitId":"ramapriyan912001"},"content":"            IndividualAmount individualAmount \u003d new IndividualAmount(person,","lastModifiedDate":"2021-10-20"},{"lineNumber":28,"author":{"gitId":"ramapriyan912001"},"content":"                    expenseMap.get(person).getCost());","lastModifiedDate":"2021-10-20"},{"lineNumber":29,"author":{"gitId":"ramapriyan912001"},"content":"            individualAmounts.add(individualAmount);","lastModifiedDate":"2021-10-20"},{"lineNumber":30,"author":{"gitId":"ramapriyan912001"},"content":"        }","lastModifiedDate":"2021-10-20"},{"lineNumber":31,"author":{"gitId":"ramapriyan912001"},"content":"        return individualAmounts;","lastModifiedDate":"2021-10-20"},{"lineNumber":32,"author":{"gitId":"ramapriyan912001"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":33,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":34,"author":{"gitId":"ramapriyan912001"},"content":"    /**","lastModifiedDate":"2021-10-20"},{"lineNumber":35,"author":{"gitId":"ramapriyan912001"},"content":"     * Convert list of jsonAdaptedIndividualAmounts to a map of expenses between people and costs.","lastModifiedDate":"2021-10-20"},{"lineNumber":36,"author":{"gitId":"ramapriyan912001"},"content":"     * @param jsonAdaptedIndividualAmounts JsonAdaptedIndividualAmount object","lastModifiedDate":"2021-10-20"},{"lineNumber":37,"author":{"gitId":"ramapriyan912001"},"content":"     * @return Map of Persons to Costs.","lastModifiedDate":"2021-10-20"},{"lineNumber":38,"author":{"gitId":"ramapriyan912001"},"content":"     * @throws IllegalValueException","lastModifiedDate":"2021-10-20"},{"lineNumber":39,"author":{"gitId":"ramapriyan912001"},"content":"     */","lastModifiedDate":"2021-10-20"},{"lineNumber":40,"author":{"gitId":"ramapriyan912001"},"content":"    public static Map\u003cPerson, Cost\u003e convertListOfJsonAdaptedIndividualAmountsToExpenseMap(","lastModifiedDate":"2021-10-20"},{"lineNumber":41,"author":{"gitId":"ramapriyan912001"},"content":"            List\u003cJsonAdaptedIndividualAmount\u003e jsonAdaptedIndividualAmounts) throws IllegalValueException {","lastModifiedDate":"2021-10-20"},{"lineNumber":42,"author":{"gitId":"ramapriyan912001"},"content":"        requireNonNull(jsonAdaptedIndividualAmounts);","lastModifiedDate":"2021-10-27"},{"lineNumber":43,"author":{"gitId":"ramapriyan912001"},"content":"        Map\u003cPerson, Cost\u003e expenseMap \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2021-10-20"},{"lineNumber":44,"author":{"gitId":"ramapriyan912001"},"content":"        for (JsonAdaptedIndividualAmount jsonAdaptedIndividualAmount : jsonAdaptedIndividualAmounts) {","lastModifiedDate":"2021-10-20"},{"lineNumber":45,"author":{"gitId":"ramapriyan912001"},"content":"            IndividualAmount individualAmount \u003d jsonAdaptedIndividualAmount.toModelType();","lastModifiedDate":"2021-10-20"},{"lineNumber":46,"author":{"gitId":"ramapriyan912001"},"content":"            Person person \u003d individualAmount.getPerson();","lastModifiedDate":"2021-10-20"},{"lineNumber":47,"author":{"gitId":"ramapriyan912001"},"content":"            Cost cost \u003d new Cost(individualAmount.getExpenditure());","lastModifiedDate":"2021-10-20"},{"lineNumber":48,"author":{"gitId":"ramapriyan912001"},"content":"            expenseMap.put(person, cost);","lastModifiedDate":"2021-10-20"},{"lineNumber":49,"author":{"gitId":"ramapriyan912001"},"content":"        }","lastModifiedDate":"2021-10-20"},{"lineNumber":50,"author":{"gitId":"ramapriyan912001"},"content":"        return expenseMap;","lastModifiedDate":"2021-10-20"},{"lineNumber":51,"author":{"gitId":"ramapriyan912001"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":52,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":53,"author":{"gitId":"ramapriyan912001"},"content":"    /**","lastModifiedDate":"2021-10-20"},{"lineNumber":54,"author":{"gitId":"ramapriyan912001"},"content":"     * Converts list of adaptedExpenses to expenses","lastModifiedDate":"2021-10-20"},{"lineNumber":55,"author":{"gitId":"ramapriyan912001"},"content":"     * @param adaptedExpenses list of jsonAdaptedExpenses","lastModifiedDate":"2021-10-20"},{"lineNumber":56,"author":{"gitId":"ramapriyan912001"},"content":"     * @return list of expenses","lastModifiedDate":"2021-10-20"},{"lineNumber":57,"author":{"gitId":"ramapriyan912001"},"content":"     * @throws IllegalValueException","lastModifiedDate":"2021-10-20"},{"lineNumber":58,"author":{"gitId":"ramapriyan912001"},"content":"     */","lastModifiedDate":"2021-10-20"},{"lineNumber":59,"author":{"gitId":"ramapriyan912001"},"content":"    public static List\u003cExpense\u003e convertAdaptedExpensesToExpenses(","lastModifiedDate":"2021-10-20"},{"lineNumber":60,"author":{"gitId":"ramapriyan912001"},"content":"            List\u003cJsonAdaptedExpense\u003e adaptedExpenses","lastModifiedDate":"2021-10-20"},{"lineNumber":61,"author":{"gitId":"ramapriyan912001"},"content":"    ) throws IllegalValueException {","lastModifiedDate":"2021-10-20"},{"lineNumber":62,"author":{"gitId":"ramapriyan912001"},"content":"        requireNonNull(adaptedExpenses);","lastModifiedDate":"2021-10-27"},{"lineNumber":63,"author":{"gitId":"ramapriyan912001"},"content":"        List\u003cExpense\u003e expenses \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-20"},{"lineNumber":64,"author":{"gitId":"ramapriyan912001"},"content":"        for (JsonAdaptedExpense expense : adaptedExpenses) {","lastModifiedDate":"2021-10-20"},{"lineNumber":65,"author":{"gitId":"ramapriyan912001"},"content":"            expenses.add(expense.toModelType());","lastModifiedDate":"2021-10-20"},{"lineNumber":66,"author":{"gitId":"ramapriyan912001"},"content":"        }","lastModifiedDate":"2021-10-20"},{"lineNumber":67,"author":{"gitId":"ramapriyan912001"},"content":"        return expenses;","lastModifiedDate":"2021-10-20"},{"lineNumber":68,"author":{"gitId":"ramapriyan912001"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":69,"author":{"gitId":"ramapriyan912001"},"content":"}","lastModifiedDate":"2021-10-20"}],"authorContributionMap":{"ramapriyan912001":69}},{"path":"src/main/java/seedu/awe/storage/UserPrefsStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ramapriyan912001"},"content":"package seedu.awe.storage;","lastModifiedDate":"2021-10-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-09-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2016-09-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":7,"author":{"gitId":"ramapriyan912001"},"content":"import seedu.awe.commons.exceptions.DataConversionException;","lastModifiedDate":"2021-10-05"},{"lineNumber":8,"author":{"gitId":"ramapriyan912001"},"content":"import seedu.awe.model.ReadOnlyUserPrefs;","lastModifiedDate":"2021-10-05"},{"lineNumber":9,"author":{"gitId":"ramapriyan912001"},"content":"import seedu.awe.model.UserPrefs;","lastModifiedDate":"2021-10-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-24"},{"lineNumber":12,"author":{"gitId":"ramapriyan912001"},"content":" * Represents a storage for {@link seedu.awe.model.UserPrefs}.","lastModifiedDate":"2021-10-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public interface UserPrefsStorage {","lastModifiedDate":"2016-09-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * Returns the file path of the UserPrefs data file.","lastModifiedDate":"2017-02-15"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-15"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    Path getUserPrefsFilePath();","lastModifiedDate":"2018-04-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-15"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * Returns UserPrefs data from storage.","lastModifiedDate":"2016-09-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     *   Returns {@code Optional.empty()} if storage file is not found.","lastModifiedDate":"2016-09-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @throws DataConversionException if the data in storage is not in the expected format.","lastModifiedDate":"2016-09-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * @throws IOException if there was any problem when reading from the storage.","lastModifiedDate":"2016-09-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    Optional\u003cUserPrefs\u003e readUserPrefs() throws DataConversionException, IOException;","lastModifiedDate":"2016-09-28"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-24"},{"lineNumber":30,"author":{"gitId":"ramapriyan912001"},"content":"     * Saves the given {@link seedu.awe.model.ReadOnlyUserPrefs} to the storage.","lastModifiedDate":"2021-10-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * @param userPrefs cannot be null.","lastModifiedDate":"2016-09-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * @throws IOException if there was any problem writing to the file.","lastModifiedDate":"2016-09-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    void saveUserPrefs(ReadOnlyUserPrefs userPrefs) throws IOException;","lastModifiedDate":"2018-11-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":36,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-24"}],"authorContributionMap":{"ramapriyan912001":6,"-":30}},{"path":"src/main/java/seedu/awe/ui/CommandBox.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ramapriyan912001"},"content":"package seedu.awe.ui;","lastModifiedDate":"2021-10-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-03-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-09-14"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2016-09-14"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":7,"author":{"gitId":"ramapriyan912001"},"content":"import seedu.awe.logic.commands.CommandResult;","lastModifiedDate":"2021-10-05"},{"lineNumber":8,"author":{"gitId":"ramapriyan912001"},"content":"import seedu.awe.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-10-05"},{"lineNumber":9,"author":{"gitId":"marcuspeh"},"content":"import seedu.awe.logic.parser.exceptions.EmptyGroupException;","lastModifiedDate":"2021-10-20"},{"lineNumber":10,"author":{"gitId":"ramapriyan912001"},"content":"import seedu.awe.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-10-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * The UI component that is responsible for receiving user command inputs.","lastModifiedDate":"2017-08-16"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class CommandBox extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public static final String ERROR_STYLE_CLASS \u003d \"error\";","lastModifiedDate":"2017-02-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"CommandBox.fxml\";","lastModifiedDate":"2017-04-01"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private final CommandExecutor commandExecutor;","lastModifiedDate":"2018-12-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-14"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private TextField commandTextField;","lastModifiedDate":"2016-09-14"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * Creates a {@code CommandBox} with the given {@code CommandExecutor}.","lastModifiedDate":"2020-05-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public CommandBox(CommandExecutor commandExecutor) {","lastModifiedDate":"2019-01-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2016-12-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        this.commandExecutor \u003d commandExecutor;","lastModifiedDate":"2018-12-09"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // calls #setStyleToDefault() whenever there is a change to the text of the command box.","lastModifiedDate":"2017-06-28"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        commandTextField.textProperty().addListener((unused1, unused2, unused3) -\u003e setStyleToDefault());","lastModifiedDate":"2017-06-28"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-14"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * Handles the Enter button pressed event.","lastModifiedDate":"2017-08-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-14"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    private void handleCommandEntered() {","lastModifiedDate":"2018-04-01"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        String commandText \u003d commandTextField.getText();","lastModifiedDate":"2020-12-04"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        if (commandText.equals(\"\")) {","lastModifiedDate":"2020-12-04"},{"lineNumber":42,"author":{"gitId":"-"},"content":"            return;","lastModifiedDate":"2020-12-04"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-12-04"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-12-04"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-02-05"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            commandExecutor.execute(commandText);","lastModifiedDate":"2020-12-04"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            commandTextField.setText(\"\");","lastModifiedDate":"2016-09-14"},{"lineNumber":48,"author":{"gitId":"marcuspeh"},"content":"        } catch (CommandException | ParseException | EmptyGroupException e) {","lastModifiedDate":"2021-10-20"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            setStyleToIndicateCommandFailure();","lastModifiedDate":"2017-02-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-14"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-28"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-28"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * Sets the command box style to use the default style.","lastModifiedDate":"2017-06-28"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-28"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    private void setStyleToDefault() {","lastModifiedDate":"2017-06-28"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        commandTextField.getStyleClass().remove(ERROR_STYLE_CLASS);","lastModifiedDate":"2017-02-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-28"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-28"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     * Sets the command box style to indicate a failed command.","lastModifiedDate":"2017-02-05"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-28"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    private void setStyleToIndicateCommandFailure() {","lastModifiedDate":"2017-02-05"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        ObservableList\u003cString\u003e styleClass \u003d commandTextField.getStyleClass();","lastModifiedDate":"2017-03-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        if (styleClass.contains(ERROR_STYLE_CLASS)) {","lastModifiedDate":"2017-03-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"            return;","lastModifiedDate":"2017-03-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        styleClass.add(ERROR_STYLE_CLASS);","lastModifiedDate":"2017-03-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-14"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     * Represents a function that can execute commands.","lastModifiedDate":"2018-12-09"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @FunctionalInterface","lastModifiedDate":"2018-12-09"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public interface CommandExecutor {","lastModifiedDate":"2018-12-09"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-12-09"},{"lineNumber":79,"author":{"gitId":"-"},"content":"         * Executes the command and returns the result.","lastModifiedDate":"2018-12-09"},{"lineNumber":80,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2018-12-09"},{"lineNumber":81,"author":{"gitId":"ramapriyan912001"},"content":"         * @see seedu.awe.logic.Logic#execute(String)","lastModifiedDate":"2021-10-05"},{"lineNumber":82,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-12-09"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        CommandResult execute(String commandText) throws CommandException, ParseException;","lastModifiedDate":"2018-12-09"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":86,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-14"}],"authorContributionMap":{"marcuspeh":2,"ramapriyan912001":5,"-":79}},{"path":"src/main/java/seedu/awe/ui/ContactViewButton.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ramapriyan912001"},"content":"package seedu.awe.ui;","lastModifiedDate":"2021-10-05"},{"lineNumber":2,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":3,"author":{"gitId":"marcuspeh"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2021-09-29"},{"lineNumber":4,"author":{"gitId":"marcuspeh"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2021-09-29"},{"lineNumber":5,"author":{"gitId":"marcuspeh"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2021-09-29"},{"lineNumber":6,"author":{"gitId":"marcuspeh"},"content":"import seedu.awe.ui.listener.ContactButtonListener;","lastModifiedDate":"2021-10-22"},{"lineNumber":7,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":8,"author":{"gitId":"marcuspeh"},"content":"/**","lastModifiedDate":"2021-09-29"},{"lineNumber":9,"author":{"gitId":"marcuspeh"},"content":" * A button to toggle the view to PersonPanel.","lastModifiedDate":"2021-09-29"},{"lineNumber":10,"author":{"gitId":"marcuspeh"},"content":" */","lastModifiedDate":"2021-09-29"},{"lineNumber":11,"author":{"gitId":"marcuspeh"},"content":"public class ContactViewButton extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2021-10-22"},{"lineNumber":12,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":13,"author":{"gitId":"marcuspeh"},"content":"    private static final String FXML \u003d \"PersonViewButton.fxml\";","lastModifiedDate":"2021-09-29"},{"lineNumber":14,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":15,"author":{"gitId":"marcuspeh"},"content":"    @FXML","lastModifiedDate":"2021-09-29"},{"lineNumber":16,"author":{"gitId":"marcuspeh"},"content":"    private Button personViewButton;","lastModifiedDate":"2021-09-29"},{"lineNumber":17,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":18,"author":{"gitId":"marcuspeh"},"content":"    /**","lastModifiedDate":"2021-09-29"},{"lineNumber":19,"author":{"gitId":"marcuspeh"},"content":"     * Constructor for PersonViewButton.","lastModifiedDate":"2021-09-29"},{"lineNumber":20,"author":{"gitId":"marcuspeh"},"content":"     *","lastModifiedDate":"2021-09-29"},{"lineNumber":21,"author":{"gitId":"marcuspeh"},"content":"     * @param viewPanel viewPanel to set onclick action","lastModifiedDate":"2021-09-29"},{"lineNumber":22,"author":{"gitId":"marcuspeh"},"content":"     */","lastModifiedDate":"2021-09-29"},{"lineNumber":23,"author":{"gitId":"marcuspeh"},"content":"    public ContactViewButton(ViewPanel viewPanel) {","lastModifiedDate":"2021-10-22"},{"lineNumber":24,"author":{"gitId":"marcuspeh"},"content":"        super(FXML);","lastModifiedDate":"2021-09-29"},{"lineNumber":25,"author":{"gitId":"marcuspeh"},"content":"        personViewButton.setOnAction(new ContactButtonListener(viewPanel));","lastModifiedDate":"2021-10-22"},{"lineNumber":26,"author":{"gitId":"marcuspeh"},"content":"    }","lastModifiedDate":"2021-09-29"},{"lineNumber":27,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":28,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":29,"author":{"gitId":"marcuspeh"},"content":"}","lastModifiedDate":"2021-09-29"}],"authorContributionMap":{"marcuspeh":28,"ramapriyan912001":1}},{"path":"src/main/java/seedu/awe/ui/GroupViewButton.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ramapriyan912001"},"content":"package seedu.awe.ui;","lastModifiedDate":"2021-10-05"},{"lineNumber":2,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":3,"author":{"gitId":"marcuspeh"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2021-09-29"},{"lineNumber":4,"author":{"gitId":"marcuspeh"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2021-09-29"},{"lineNumber":5,"author":{"gitId":"marcuspeh"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2021-09-29"},{"lineNumber":6,"author":{"gitId":"ramapriyan912001"},"content":"import seedu.awe.ui.listener.GroupButtonListener;","lastModifiedDate":"2021-10-05"},{"lineNumber":7,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":8,"author":{"gitId":"marcuspeh"},"content":"/**","lastModifiedDate":"2021-09-29"},{"lineNumber":9,"author":{"gitId":"marcuspeh"},"content":" * A button to toggle the view to GroupPanel.","lastModifiedDate":"2021-09-29"},{"lineNumber":10,"author":{"gitId":"marcuspeh"},"content":" */","lastModifiedDate":"2021-09-29"},{"lineNumber":11,"author":{"gitId":"marcuspeh"},"content":"public class GroupViewButton extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2021-09-29"},{"lineNumber":12,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":13,"author":{"gitId":"marcuspeh"},"content":"    private static final String FXML \u003d \"GroupViewButton.fxml\";","lastModifiedDate":"2021-09-29"},{"lineNumber":14,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":15,"author":{"gitId":"marcuspeh"},"content":"    @FXML","lastModifiedDate":"2021-09-29"},{"lineNumber":16,"author":{"gitId":"marcuspeh"},"content":"    private Button groupViewButton;","lastModifiedDate":"2021-09-29"},{"lineNumber":17,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":18,"author":{"gitId":"marcuspeh"},"content":"    /**","lastModifiedDate":"2021-09-29"},{"lineNumber":19,"author":{"gitId":"marcuspeh"},"content":"     * Constructor for GroupViewButton.","lastModifiedDate":"2021-09-29"},{"lineNumber":20,"author":{"gitId":"marcuspeh"},"content":"     *","lastModifiedDate":"2021-09-29"},{"lineNumber":21,"author":{"gitId":"marcuspeh"},"content":"     * @param viewPanel viewPanel to set onclick action","lastModifiedDate":"2021-09-29"},{"lineNumber":22,"author":{"gitId":"marcuspeh"},"content":"     */","lastModifiedDate":"2021-09-29"},{"lineNumber":23,"author":{"gitId":"marcuspeh"},"content":"    public GroupViewButton(ViewPanel viewPanel) {","lastModifiedDate":"2021-09-29"},{"lineNumber":24,"author":{"gitId":"marcuspeh"},"content":"        super(FXML);","lastModifiedDate":"2021-09-29"},{"lineNumber":25,"author":{"gitId":"marcuspeh"},"content":"        groupViewButton.setOnAction(new GroupButtonListener(viewPanel));","lastModifiedDate":"2021-09-29"},{"lineNumber":26,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":27,"author":{"gitId":"marcuspeh"},"content":"    }","lastModifiedDate":"2021-09-29"},{"lineNumber":28,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":29,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":30,"author":{"gitId":"marcuspeh"},"content":"}","lastModifiedDate":"2021-09-29"}],"authorContributionMap":{"marcuspeh":28,"ramapriyan912001":2}},{"path":"src/main/java/seedu/awe/ui/HelpWindow.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ramapriyan912001"},"content":"package seedu.awe.ui;","lastModifiedDate":"2021-10-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-12-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2019-08-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2019-08-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.input.Clipboard;","lastModifiedDate":"2019-08-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.input.ClipboardContent;","lastModifiedDate":"2019-08-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":11,"author":{"gitId":"ramapriyan912001"},"content":"import seedu.awe.commons.core.LogsCenter;","lastModifiedDate":"2021-10-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Controller for a help page","lastModifiedDate":"2016-08-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class HelpWindow extends UiPart\u003cStage\u003e {","lastModifiedDate":"2017-12-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":18,"author":{"gitId":"marcuspeh"},"content":"    public static final String USERGUIDE_URL \u003d \"https://ay2122s1-cs2103t-f13-1.github.io/tp/UserGuide.html\";","lastModifiedDate":"2021-09-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public static final String HELP_MESSAGE \u003d \"Refer to the user guide: \" + USERGUIDE_URL;","lastModifiedDate":"2019-08-19"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(HelpWindow.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"HelpWindow.fxml\";","lastModifiedDate":"2016-09-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-12-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private Button copyButton;","lastModifiedDate":"2019-08-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-08-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2019-08-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private Label helpMessage;","lastModifiedDate":"2019-08-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-12-01"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Creates a new HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-12-01"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * @param root Stage to use as the root of the HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-12-01"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public HelpWindow(Stage root) {","lastModifiedDate":"2017-12-01"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        super(FXML, root);","lastModifiedDate":"2017-12-01"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        helpMessage.setText(HELP_MESSAGE);","lastModifiedDate":"2019-08-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-12-01"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * Creates a new HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-12-01"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public HelpWindow() {","lastModifiedDate":"2017-12-01"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        this(new Stage());","lastModifiedDate":"2017-12-01"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-01"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-01"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * Shows the help window.","lastModifiedDate":"2017-08-16"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     * @throws IllegalStateException","lastModifiedDate":"2017-08-16"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     * \u003cul\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     *     \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     *         if this method is called on a thread other than the JavaFX Application Thread.","lastModifiedDate":"2017-08-16"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     *     \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     *     \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     *         if this method is called during animation or layout processing.","lastModifiedDate":"2017-08-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     *     \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     *     \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     *         if this method is called on the primary stage.","lastModifiedDate":"2017-08-16"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     *     \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     *     \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     *         if {@code dialogStage} is already showing.","lastModifiedDate":"2017-08-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     *     \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * \u003c/ul\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public void show() {","lastModifiedDate":"2016-08-18"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        logger.fine(\"Showing help page about the application.\");","lastModifiedDate":"2016-12-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        getRoot().show();","lastModifiedDate":"2018-02-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        getRoot().centerOnScreen();","lastModifiedDate":"2019-08-19"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-15"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     * Returns true if the help window is currently being shown.","lastModifiedDate":"2018-03-15"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-15"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public boolean isShowing() {","lastModifiedDate":"2018-03-15"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        return getRoot().isShowing();","lastModifiedDate":"2018-03-15"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-15"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * Hides the help window.","lastModifiedDate":"2018-12-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public void hide() {","lastModifiedDate":"2018-12-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        getRoot().hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-15"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * Focuses on the help window.","lastModifiedDate":"2018-03-15"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-15"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    public void focus() {","lastModifiedDate":"2018-03-15"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        getRoot().requestFocus();","lastModifiedDate":"2018-03-15"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-15"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-08-19"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2019-08-19"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     * Copies the URL to the user guide to the clipboard.","lastModifiedDate":"2019-08-19"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2019-08-19"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2019-08-19"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    private void copyUrl() {","lastModifiedDate":"2019-08-19"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        final Clipboard clipboard \u003d Clipboard.getSystemClipboard();","lastModifiedDate":"2019-08-19"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        final ClipboardContent url \u003d new ClipboardContent();","lastModifiedDate":"2019-08-19"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        url.putString(USERGUIDE_URL);","lastModifiedDate":"2019-08-19"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        clipboard.setContent(url);","lastModifiedDate":"2019-08-19"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-08-19"},{"lineNumber":102,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"marcuspeh":1,"ramapriyan912001":2,"-":99}},{"path":"src/main/java/seedu/awe/ui/LogoDisplay.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kheekheekhee"},"content":"package seedu.awe.ui;","lastModifiedDate":"2021-10-25"},{"lineNumber":2,"author":{"gitId":"kheekheekhee"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":3,"author":{"gitId":"kheekheekhee"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2021-10-25"},{"lineNumber":4,"author":{"gitId":"kheekheekhee"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2021-10-25"},{"lineNumber":5,"author":{"gitId":"kheekheekhee"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2021-10-25"},{"lineNumber":6,"author":{"gitId":"kheekheekhee"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2021-10-25"},{"lineNumber":7,"author":{"gitId":"kheekheekhee"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":8,"author":{"gitId":"kheekheekhee"},"content":"/**","lastModifiedDate":"2021-10-26"},{"lineNumber":9,"author":{"gitId":"kheekheekhee"},"content":" * The logo of AWE to be displayed in the MainWindow.","lastModifiedDate":"2021-10-26"},{"lineNumber":10,"author":{"gitId":"kheekheekhee"},"content":" */","lastModifiedDate":"2021-10-26"},{"lineNumber":11,"author":{"gitId":"kheekheekhee"},"content":"public class LogoDisplay extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2021-10-25"},{"lineNumber":12,"author":{"gitId":"kheekheekhee"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":13,"author":{"gitId":"kheekheekhee"},"content":"    private static final String FXML \u003d \"LogoDisplay.fxml\";","lastModifiedDate":"2021-10-25"},{"lineNumber":14,"author":{"gitId":"kheekheekhee"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":15,"author":{"gitId":"kheekheekhee"},"content":"    @FXML","lastModifiedDate":"2021-10-25"},{"lineNumber":16,"author":{"gitId":"kheekheekhee"},"content":"    private ImageView logoDisplay;","lastModifiedDate":"2021-10-25"},{"lineNumber":17,"author":{"gitId":"kheekheekhee"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":18,"author":{"gitId":"kheekheekhee"},"content":"    /**","lastModifiedDate":"2021-10-26"},{"lineNumber":19,"author":{"gitId":"kheekheekhee"},"content":"     * Constructor for LogoDisplay.","lastModifiedDate":"2021-10-26"},{"lineNumber":20,"author":{"gitId":"kheekheekhee"},"content":"     * @param url The location of the logo to be displayed.","lastModifiedDate":"2021-10-26"},{"lineNumber":21,"author":{"gitId":"kheekheekhee"},"content":"     */","lastModifiedDate":"2021-10-26"},{"lineNumber":22,"author":{"gitId":"kheekheekhee"},"content":"    public LogoDisplay(String url) {","lastModifiedDate":"2021-10-25"},{"lineNumber":23,"author":{"gitId":"kheekheekhee"},"content":"        super(FXML);","lastModifiedDate":"2021-10-25"},{"lineNumber":24,"author":{"gitId":"kheekheekhee"},"content":"        Image image \u003d new Image(url);","lastModifiedDate":"2021-10-25"},{"lineNumber":25,"author":{"gitId":"kheekheekhee"},"content":"        logoDisplay.setImage(image);","lastModifiedDate":"2021-10-25"},{"lineNumber":26,"author":{"gitId":"kheekheekhee"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":27,"author":{"gitId":"kheekheekhee"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":28,"author":{"gitId":"kheekheekhee"},"content":"}","lastModifiedDate":"2021-10-25"}],"authorContributionMap":{"kheekheekhee":28}},{"path":"src/main/java/seedu/awe/ui/MainWindow.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ramapriyan912001"},"content":"package seedu.awe.ui;","lastModifiedDate":"2021-10-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-06-16"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.event.ActionEvent;","lastModifiedDate":"2016-12-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-08-26"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.MenuItem;","lastModifiedDate":"2016-08-26"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.control.TextInputControl;","lastModifiedDate":"2016-12-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.input.KeyCombination;","lastModifiedDate":"2016-08-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.scene.input.KeyEvent;","lastModifiedDate":"2016-12-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.scene.layout.StackPane;","lastModifiedDate":"2017-05-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":13,"author":{"gitId":"ramapriyan912001"},"content":"import seedu.awe.commons.core.GuiSettings;","lastModifiedDate":"2021-10-05"},{"lineNumber":14,"author":{"gitId":"ramapriyan912001"},"content":"import seedu.awe.commons.core.LogsCenter;","lastModifiedDate":"2021-10-05"},{"lineNumber":15,"author":{"gitId":"ramapriyan912001"},"content":"import seedu.awe.logic.Logic;","lastModifiedDate":"2021-10-05"},{"lineNumber":16,"author":{"gitId":"ramapriyan912001"},"content":"import seedu.awe.logic.commands.CommandResult;","lastModifiedDate":"2021-10-05"},{"lineNumber":17,"author":{"gitId":"ramapriyan912001"},"content":"import seedu.awe.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-10-05"},{"lineNumber":18,"author":{"gitId":"marcuspeh"},"content":"import seedu.awe.logic.parser.exceptions.EmptyGroupException;","lastModifiedDate":"2021-10-20"},{"lineNumber":19,"author":{"gitId":"ramapriyan912001"},"content":"import seedu.awe.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-10-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":21,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * The Main Window. Provides the basic application layout containing","lastModifiedDate":"2016-08-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":" * a menu bar and space where other JavaFX elements can be placed.","lastModifiedDate":"2016-08-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":25,"author":{"gitId":"-"},"content":"public class MainWindow extends UiPart\u003cStage\u003e {","lastModifiedDate":"2017-11-29"},{"lineNumber":26,"author":{"gitId":"marcuspeh"},"content":"    private static UiView viewEnum \u003d UiView.CONTACT_PAGE;","lastModifiedDate":"2021-10-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"MainWindow.fxml\";","lastModifiedDate":"2016-08-18"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":30,"author":{"gitId":"kheekheekhee"},"content":"    private static final String url \u003d \"images/awelogo.png\";","lastModifiedDate":"2021-10-25"},{"lineNumber":31,"author":{"gitId":"kheekheekhee"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(getClass());","lastModifiedDate":"2018-08-14"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":34,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private Stage primaryStage;","lastModifiedDate":"2016-12-02"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    // Independent Ui parts residing in this Ui container","lastModifiedDate":"2016-08-18"},{"lineNumber":39,"author":{"gitId":"kheekheekhee"},"content":"    private LogoDisplay logoDisplay;","lastModifiedDate":"2021-10-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    private ResultDisplay resultDisplay;","lastModifiedDate":"2018-12-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    private HelpWindow helpWindow;","lastModifiedDate":"2018-03-15"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":43,"author":{"gitId":"marcuspeh"},"content":"    // Panels for toggling","lastModifiedDate":"2021-09-24"},{"lineNumber":44,"author":{"gitId":"marcuspeh"},"content":"    private ViewPanel viewPanel;","lastModifiedDate":"2021-09-29"},{"lineNumber":45,"author":{"gitId":"marcuspeh"},"content":"    private NavigationButtonPanel navigationButtonPanel;","lastModifiedDate":"2021-09-29"},{"lineNumber":46,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    private StackPane commandBoxPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    private MenuItem helpMenuItem;","lastModifiedDate":"2016-08-18"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":54,"author":{"gitId":"marcuspeh"},"content":"    private StackPane listPanelPlaceholder;","lastModifiedDate":"2021-09-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    private StackPane resultDisplayPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    private StackPane statusbarPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":62,"author":{"gitId":"marcuspeh"},"content":"    @FXML","lastModifiedDate":"2021-09-29"},{"lineNumber":63,"author":{"gitId":"marcuspeh"},"content":"    private StackPane viewPanelPlaceholder;","lastModifiedDate":"2021-09-29"},{"lineNumber":64,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":65,"author":{"gitId":"marcuspeh"},"content":"    @FXML","lastModifiedDate":"2021-09-29"},{"lineNumber":66,"author":{"gitId":"marcuspeh"},"content":"    private StackPane navigationButtonPlaceholder;","lastModifiedDate":"2021-09-29"},{"lineNumber":67,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":68,"author":{"gitId":"kheekheekhee"},"content":"    @FXML","lastModifiedDate":"2021-10-25"},{"lineNumber":69,"author":{"gitId":"kheekheekhee"},"content":"    private StackPane logoDisplayPlaceholder;","lastModifiedDate":"2021-10-25"},{"lineNumber":70,"author":{"gitId":"kheekheekhee"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":71,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     * Creates a {@code MainWindow} with the given {@code Stage} and {@code Logic}.","lastModifiedDate":"2020-05-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public MainWindow(Stage primaryStage, Logic logic) {","lastModifiedDate":"2018-12-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        super(FXML, primaryStage);","lastModifiedDate":"2017-11-29"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        // Set dependencies","lastModifiedDate":"2016-09-21"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        this.primaryStage \u003d primaryStage;","lastModifiedDate":"2016-12-02"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        this.logic \u003d logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        // Configure the UI","lastModifiedDate":"2016-09-21"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        setWindowDefaultSize(logic.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        setAccelerators();","lastModifiedDate":"2016-09-21"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        helpWindow \u003d new HelpWindow();","lastModifiedDate":"2018-03-15"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    public Stage getPrimaryStage() {","lastModifiedDate":"2016-12-24"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        return primaryStage;","lastModifiedDate":"2016-12-24"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    private void setAccelerators() {","lastModifiedDate":"2016-09-21"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        setAccelerator(helpMenuItem, KeyCombination.valueOf(\"F1\"));","lastModifiedDate":"2016-12-18"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-18"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":98,"author":{"gitId":"marcuspeh"},"content":"    public static UiView getViewEnum() {","lastModifiedDate":"2021-10-23"},{"lineNumber":99,"author":{"gitId":"marcuspeh"},"content":"        return viewEnum;","lastModifiedDate":"2021-10-23"},{"lineNumber":100,"author":{"gitId":"marcuspeh"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":101,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":102,"author":{"gitId":"Jingwencloud"},"content":"    public static void setViewEnum(UiView uiView) {","lastModifiedDate":"2021-10-28"},{"lineNumber":103,"author":{"gitId":"Jingwencloud"},"content":"        viewEnum \u003d uiView;","lastModifiedDate":"2021-10-28"},{"lineNumber":104,"author":{"gitId":"Jingwencloud"},"content":"    }","lastModifiedDate":"2021-10-28"},{"lineNumber":105,"author":{"gitId":"Jingwencloud"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-18"},{"lineNumber":107,"author":{"gitId":"-"},"content":"     * Sets the accelerator of a MenuItem.","lastModifiedDate":"2016-12-18"},{"lineNumber":108,"author":{"gitId":"-"},"content":"     * @param keyCombination the KeyCombination value of the accelerator","lastModifiedDate":"2016-12-18"},{"lineNumber":109,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-18"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    private void setAccelerator(MenuItem menuItem, KeyCombination keyCombination) {","lastModifiedDate":"2016-12-18"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        menuItem.setAccelerator(keyCombination);","lastModifiedDate":"2016-12-18"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2016-12-18"},{"lineNumber":114,"author":{"gitId":"-"},"content":"         * TODO: the code below can be removed once the bug reported here","lastModifiedDate":"2016-12-18"},{"lineNumber":115,"author":{"gitId":"-"},"content":"         * https://bugs.openjdk.java.net/browse/JDK-8131666","lastModifiedDate":"2016-12-18"},{"lineNumber":116,"author":{"gitId":"-"},"content":"         * is fixed in later version of SDK.","lastModifiedDate":"2016-12-18"},{"lineNumber":117,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2016-12-18"},{"lineNumber":118,"author":{"gitId":"-"},"content":"         * According to the bug report, TextInputControl (TextField, TextArea) will","lastModifiedDate":"2016-12-18"},{"lineNumber":119,"author":{"gitId":"-"},"content":"         * consume function-key events. Because CommandBox contains a TextField, and","lastModifiedDate":"2016-12-18"},{"lineNumber":120,"author":{"gitId":"-"},"content":"         * ResultDisplay contains a TextArea, thus some accelerators (e.g F1) will","lastModifiedDate":"2016-12-18"},{"lineNumber":121,"author":{"gitId":"-"},"content":"         * not work when the focus is in them because the key event is consumed by","lastModifiedDate":"2016-12-18"},{"lineNumber":122,"author":{"gitId":"-"},"content":"         * the TextInputControl(s).","lastModifiedDate":"2016-12-18"},{"lineNumber":123,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2016-12-18"},{"lineNumber":124,"author":{"gitId":"-"},"content":"         * For now, we add following event filter to capture such key events and open","lastModifiedDate":"2016-12-18"},{"lineNumber":125,"author":{"gitId":"-"},"content":"         * help window purposely so to support accelerators even when focus is","lastModifiedDate":"2016-12-18"},{"lineNumber":126,"author":{"gitId":"-"},"content":"         * in CommandBox or ResultDisplay.","lastModifiedDate":"2016-12-18"},{"lineNumber":127,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-12-18"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        getRoot().addEventFilter(KeyEvent.KEY_PRESSED, event -\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":129,"author":{"gitId":"-"},"content":"            if (event.getTarget() instanceof TextInputControl \u0026\u0026 keyCombination.match(event)) {","lastModifiedDate":"2016-12-18"},{"lineNumber":130,"author":{"gitId":"-"},"content":"                menuItem.getOnAction().handle(new ActionEvent());","lastModifiedDate":"2016-12-18"},{"lineNumber":131,"author":{"gitId":"-"},"content":"                event.consume();","lastModifiedDate":"2016-12-18"},{"lineNumber":132,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-12-18"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        });","lastModifiedDate":"2016-12-18"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":137,"author":{"gitId":"-"},"content":"     * Fills up all the placeholders of this window.","lastModifiedDate":"2017-08-16"},{"lineNumber":138,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    void fillInnerParts() {","lastModifiedDate":"2016-09-21"},{"lineNumber":140,"author":{"gitId":"marcuspeh"},"content":"        viewPanel \u003d new ViewPanel(logic);","lastModifiedDate":"2021-09-29"},{"lineNumber":141,"author":{"gitId":"marcuspeh"},"content":"        viewPanelPlaceholder.getChildren().add(viewPanel.getRoot());","lastModifiedDate":"2021-09-29"},{"lineNumber":142,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":143,"author":{"gitId":"kheekheekhee"},"content":"        logoDisplay \u003d new LogoDisplay(url);","lastModifiedDate":"2021-10-25"},{"lineNumber":144,"author":{"gitId":"kheekheekhee"},"content":"        logoDisplayPlaceholder.getChildren().add(logoDisplay.getRoot());","lastModifiedDate":"2021-10-25"},{"lineNumber":145,"author":{"gitId":"kheekheekhee"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":146,"author":{"gitId":"marcuspeh"},"content":"        navigationButtonPanel \u003d new NavigationButtonPanel(viewPanel);","lastModifiedDate":"2021-09-29"},{"lineNumber":147,"author":{"gitId":"marcuspeh"},"content":"        navigationButtonPlaceholder.getChildren().add(navigationButtonPanel.getRoot());","lastModifiedDate":"2021-09-29"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        resultDisplay \u003d new ResultDisplay();","lastModifiedDate":"2018-12-09"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        resultDisplayPlaceholder.getChildren().add(resultDisplay.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        StatusBarFooter statusBarFooter \u003d new StatusBarFooter(logic.getAddressBookFilePath());","lastModifiedDate":"2019-01-25"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        statusbarPlaceholder.getChildren().add(statusBarFooter.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        CommandBox commandBox \u003d new CommandBox(this::executeCommand);","lastModifiedDate":"2019-01-25"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        commandBoxPlaceholder.getChildren().add(commandBox.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-18"},{"lineNumber":160,"author":{"gitId":"-"},"content":"     * Sets the default size based on {@code guiSettings}.","lastModifiedDate":"2018-11-27"},{"lineNumber":161,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    private void setWindowDefaultSize(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        primaryStage.setHeight(guiSettings.getWindowHeight());","lastModifiedDate":"2018-11-27"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        primaryStage.setWidth(guiSettings.getWindowWidth());","lastModifiedDate":"2018-11-27"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        if (guiSettings.getWindowCoordinates() !\u003d null) {","lastModifiedDate":"2018-11-27"},{"lineNumber":166,"author":{"gitId":"-"},"content":"            primaryStage.setX(guiSettings.getWindowCoordinates().getX());","lastModifiedDate":"2018-11-27"},{"lineNumber":167,"author":{"gitId":"-"},"content":"            primaryStage.setY(guiSettings.getWindowCoordinates().getY());","lastModifiedDate":"2018-11-27"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-18"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":171,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":172,"author":{"gitId":"-"},"content":"     * Opens the help window or focuses on it if it\u0027s already opened.","lastModifiedDate":"2018-03-15"},{"lineNumber":173,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    public void handleHelp() {","lastModifiedDate":"2016-08-31"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        if (!helpWindow.isShowing()) {","lastModifiedDate":"2018-03-15"},{"lineNumber":177,"author":{"gitId":"-"},"content":"            helpWindow.show();","lastModifiedDate":"2016-08-18"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        } else {","lastModifiedDate":"2018-03-15"},{"lineNumber":179,"author":{"gitId":"-"},"content":"            helpWindow.focus();","lastModifiedDate":"2018-03-15"},{"lineNumber":180,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-03-15"},{"lineNumber":181,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":183,"author":{"gitId":"Jingwencloud"},"content":"    void show(boolean isDataError) {","lastModifiedDate":"2021-10-26"},{"lineNumber":184,"author":{"gitId":"-"},"content":"        primaryStage.show();","lastModifiedDate":"2016-08-18"},{"lineNumber":185,"author":{"gitId":"Jingwencloud"},"content":"        if (isDataError) {","lastModifiedDate":"2021-10-26"},{"lineNumber":186,"author":{"gitId":"Jingwencloud"},"content":"            helpWindow.show();","lastModifiedDate":"2021-10-26"},{"lineNumber":187,"author":{"gitId":"Jingwencloud"},"content":"        }","lastModifiedDate":"2021-10-26"},{"lineNumber":188,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":190,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-18"},{"lineNumber":191,"author":{"gitId":"-"},"content":"     * Closes the application.","lastModifiedDate":"2016-08-18"},{"lineNumber":192,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18"},{"lineNumber":193,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":194,"author":{"gitId":"-"},"content":"    private void handleExit() {","lastModifiedDate":"2016-08-18"},{"lineNumber":195,"author":{"gitId":"-"},"content":"        GuiSettings guiSettings \u003d new GuiSettings(primaryStage.getWidth(), primaryStage.getHeight(),","lastModifiedDate":"2018-12-08"},{"lineNumber":196,"author":{"gitId":"-"},"content":"                (int) primaryStage.getX(), (int) primaryStage.getY());","lastModifiedDate":"2018-12-08"},{"lineNumber":197,"author":{"gitId":"-"},"content":"        logic.setGuiSettings(guiSettings);","lastModifiedDate":"2018-12-08"},{"lineNumber":198,"author":{"gitId":"-"},"content":"        helpWindow.hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":199,"author":{"gitId":"-"},"content":"        primaryStage.hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":200,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":201,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-25"},{"lineNumber":202,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":203,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2018-12-09"},{"lineNumber":204,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-12-09"},{"lineNumber":205,"author":{"gitId":"ramapriyan912001"},"content":"     * @see seedu.awe.logic.Logic#execute(String)","lastModifiedDate":"2021-10-05"},{"lineNumber":206,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":207,"author":{"gitId":"-"},"content":"    private CommandResult executeCommand(String commandText) throws CommandException, ParseException {","lastModifiedDate":"2018-12-09"},{"lineNumber":208,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-12-09"},{"lineNumber":209,"author":{"gitId":"-"},"content":"            CommandResult commandResult \u003d logic.execute(commandText);","lastModifiedDate":"2018-12-09"},{"lineNumber":210,"author":{"gitId":"-"},"content":"            logger.info(\"Result: \" + commandResult.getFeedbackToUser());","lastModifiedDate":"2018-12-09"},{"lineNumber":211,"author":{"gitId":"-"},"content":"            resultDisplay.setFeedbackToUser(commandResult.getFeedbackToUser());","lastModifiedDate":"2018-12-09"},{"lineNumber":212,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":213,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":214,"author":{"gitId":"-"},"content":"            if (commandResult.isShowHelp()) {","lastModifiedDate":"2018-12-09"},{"lineNumber":215,"author":{"gitId":"-"},"content":"                handleHelp();","lastModifiedDate":"2018-12-09"},{"lineNumber":216,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-12-09"},{"lineNumber":217,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":218,"author":{"gitId":"-"},"content":"            if (commandResult.isExit()) {","lastModifiedDate":"2018-12-09"},{"lineNumber":219,"author":{"gitId":"-"},"content":"                handleExit();","lastModifiedDate":"2018-12-09"},{"lineNumber":220,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-12-09"},{"lineNumber":221,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":222,"author":{"gitId":"marcuspeh"},"content":"            if (commandResult.isShowContacts()) {","lastModifiedDate":"2021-09-30"},{"lineNumber":223,"author":{"gitId":"marcuspeh"},"content":"                viewEnum \u003d UiView.CONTACT_PAGE;","lastModifiedDate":"2021-10-23"},{"lineNumber":224,"author":{"gitId":"marcuspeh"},"content":"                viewPanel.toggleView(viewEnum);","lastModifiedDate":"2021-10-23"},{"lineNumber":225,"author":{"gitId":"marcuspeh"},"content":"            }","lastModifiedDate":"2021-09-30"},{"lineNumber":226,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":227,"author":{"gitId":"marcuspeh"},"content":"            if (commandResult.isShowGroups()) {","lastModifiedDate":"2021-09-30"},{"lineNumber":228,"author":{"gitId":"marcuspeh"},"content":"                viewEnum \u003d UiView.GROUP_PAGE;","lastModifiedDate":"2021-10-23"},{"lineNumber":229,"author":{"gitId":"marcuspeh"},"content":"                viewPanel.toggleView(viewEnum);","lastModifiedDate":"2021-10-23"},{"lineNumber":230,"author":{"gitId":"marcuspeh"},"content":"            }","lastModifiedDate":"2021-09-30"},{"lineNumber":231,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":232,"author":{"gitId":"Jingwencloud"},"content":"            if (commandResult.isShowExpenses()) {","lastModifiedDate":"2021-10-06"},{"lineNumber":233,"author":{"gitId":"marcuspeh"},"content":"                viewEnum \u003d UiView.EXPENSE_PAGE;","lastModifiedDate":"2021-10-23"},{"lineNumber":234,"author":{"gitId":"marcuspeh"},"content":"                viewPanel.toggleView(viewEnum);","lastModifiedDate":"2021-10-23"},{"lineNumber":235,"author":{"gitId":"Jingwencloud"},"content":"            }","lastModifiedDate":"2021-10-06"},{"lineNumber":236,"author":{"gitId":"Jingwencloud"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":237,"author":{"gitId":"Jingwencloud"},"content":"            if (commandResult.isShowTransactionSummary()) {","lastModifiedDate":"2021-10-21"},{"lineNumber":238,"author":{"gitId":"marcuspeh"},"content":"                viewEnum \u003d UiView.TRANSACTION_SUMMARY;","lastModifiedDate":"2021-10-23"},{"lineNumber":239,"author":{"gitId":"marcuspeh"},"content":"                viewPanel.toggleView(viewEnum);","lastModifiedDate":"2021-10-23"},{"lineNumber":240,"author":{"gitId":"Jingwencloud"},"content":"            }","lastModifiedDate":"2021-10-21"},{"lineNumber":241,"author":{"gitId":"Jingwencloud"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":242,"author":{"gitId":"ramapriyan912001"},"content":"            if (commandResult.isShowPaymentsCommand()) {","lastModifiedDate":"2021-10-21"},{"lineNumber":243,"author":{"gitId":"marcuspeh"},"content":"                viewEnum \u003d UiView.PAYMENT_PAGE;","lastModifiedDate":"2021-10-23"},{"lineNumber":244,"author":{"gitId":"marcuspeh"},"content":"                viewPanel.toggleView(viewEnum);","lastModifiedDate":"2021-10-23"},{"lineNumber":245,"author":{"gitId":"ramapriyan912001"},"content":"            }","lastModifiedDate":"2021-10-21"},{"lineNumber":246,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":247,"author":{"gitId":"-"},"content":"            return commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":248,"author":{"gitId":"marcuspeh"},"content":"        } catch (CommandException | ParseException | EmptyGroupException e) {","lastModifiedDate":"2021-10-20"},{"lineNumber":249,"author":{"gitId":"-"},"content":"            logger.info(\"Invalid command: \" + commandText);","lastModifiedDate":"2018-12-09"},{"lineNumber":250,"author":{"gitId":"-"},"content":"            resultDisplay.setFeedbackToUser(e.getMessage());","lastModifiedDate":"2018-12-09"},{"lineNumber":251,"author":{"gitId":"-"},"content":"            throw e;","lastModifiedDate":"2018-12-09"},{"lineNumber":252,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":253,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":254,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"marcuspeh":42,"Jingwencloud":14,"kheekheekhee":9,"ramapriyan912001":11,"-":178}},{"path":"src/main/java/seedu/awe/ui/NavigationButtonPanel.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ramapriyan912001"},"content":"package seedu.awe.ui;","lastModifiedDate":"2021-10-05"},{"lineNumber":2,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":3,"author":{"gitId":"marcuspeh"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2021-09-29"},{"lineNumber":4,"author":{"gitId":"marcuspeh"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2021-09-29"},{"lineNumber":5,"author":{"gitId":"marcuspeh"},"content":"import javafx.scene.layout.StackPane;","lastModifiedDate":"2021-09-29"},{"lineNumber":6,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":7,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":8,"author":{"gitId":"marcuspeh"},"content":"/**","lastModifiedDate":"2021-09-29"},{"lineNumber":9,"author":{"gitId":"marcuspeh"},"content":" * The Main Window. Provides the basic application layout containing","lastModifiedDate":"2021-09-29"},{"lineNumber":10,"author":{"gitId":"marcuspeh"},"content":" * a menu bar and space where other JavaFX elements can be placed.","lastModifiedDate":"2021-09-29"},{"lineNumber":11,"author":{"gitId":"marcuspeh"},"content":" */","lastModifiedDate":"2021-09-29"},{"lineNumber":12,"author":{"gitId":"marcuspeh"},"content":"public class NavigationButtonPanel extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2021-09-29"},{"lineNumber":13,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":14,"author":{"gitId":"marcuspeh"},"content":"    private static final String FXML \u003d \"NavigationButtonPanel.fxml\";","lastModifiedDate":"2021-09-29"},{"lineNumber":15,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":16,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":17,"author":{"gitId":"marcuspeh"},"content":"    // Buttons for toggling","lastModifiedDate":"2021-09-29"},{"lineNumber":18,"author":{"gitId":"marcuspeh"},"content":"    private GroupViewButton groupViewButton;","lastModifiedDate":"2021-09-29"},{"lineNumber":19,"author":{"gitId":"marcuspeh"},"content":"    private ContactViewButton contactViewButton;","lastModifiedDate":"2021-10-22"},{"lineNumber":20,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":21,"author":{"gitId":"marcuspeh"},"content":"    @FXML","lastModifiedDate":"2021-09-29"},{"lineNumber":22,"author":{"gitId":"marcuspeh"},"content":"    private StackPane personButtonPlaceholder;","lastModifiedDate":"2021-09-29"},{"lineNumber":23,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":24,"author":{"gitId":"marcuspeh"},"content":"    @FXML","lastModifiedDate":"2021-09-29"},{"lineNumber":25,"author":{"gitId":"marcuspeh"},"content":"    private StackPane groupButtonPlaceholder;","lastModifiedDate":"2021-09-29"},{"lineNumber":26,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":27,"author":{"gitId":"marcuspeh"},"content":"    /**","lastModifiedDate":"2021-09-29"},{"lineNumber":28,"author":{"gitId":"marcuspeh"},"content":"     * Constructor for NavigationButtonPanel.","lastModifiedDate":"2021-09-29"},{"lineNumber":29,"author":{"gitId":"marcuspeh"},"content":"     *","lastModifiedDate":"2021-09-29"},{"lineNumber":30,"author":{"gitId":"marcuspeh"},"content":"     * @param viewPanel To pass to buttons to allow them to toggle panel on click.","lastModifiedDate":"2021-09-29"},{"lineNumber":31,"author":{"gitId":"marcuspeh"},"content":"     */","lastModifiedDate":"2021-09-29"},{"lineNumber":32,"author":{"gitId":"marcuspeh"},"content":"    public NavigationButtonPanel(ViewPanel viewPanel) {","lastModifiedDate":"2021-09-29"},{"lineNumber":33,"author":{"gitId":"marcuspeh"},"content":"        super(FXML);","lastModifiedDate":"2021-09-29"},{"lineNumber":34,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":35,"author":{"gitId":"marcuspeh"},"content":"        fillInnerParts(viewPanel);","lastModifiedDate":"2021-09-29"},{"lineNumber":36,"author":{"gitId":"marcuspeh"},"content":"    }","lastModifiedDate":"2021-09-29"},{"lineNumber":37,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":38,"author":{"gitId":"marcuspeh"},"content":"    void fillInnerParts(ViewPanel viewPanel) {","lastModifiedDate":"2021-09-29"},{"lineNumber":39,"author":{"gitId":"marcuspeh"},"content":"        groupViewButton \u003d new GroupViewButton(viewPanel);","lastModifiedDate":"2021-09-29"},{"lineNumber":40,"author":{"gitId":"marcuspeh"},"content":"        groupButtonPlaceholder.getChildren().add(groupViewButton.getRoot());","lastModifiedDate":"2021-09-29"},{"lineNumber":41,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":42,"author":{"gitId":"marcuspeh"},"content":"        contactViewButton \u003d new ContactViewButton(viewPanel);","lastModifiedDate":"2021-10-22"},{"lineNumber":43,"author":{"gitId":"marcuspeh"},"content":"        personButtonPlaceholder.getChildren().add(contactViewButton.getRoot());","lastModifiedDate":"2021-10-22"},{"lineNumber":44,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":45,"author":{"gitId":"marcuspeh"},"content":"    }","lastModifiedDate":"2021-09-29"},{"lineNumber":46,"author":{"gitId":"marcuspeh"},"content":"}","lastModifiedDate":"2021-09-29"}],"authorContributionMap":{"marcuspeh":45,"ramapriyan912001":1}},{"path":"src/main/java/seedu/awe/ui/ResultDisplay.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ramapriyan912001"},"content":"package seedu.awe.ui;","lastModifiedDate":"2021-10-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-12-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.TextArea;","lastModifiedDate":"2016-09-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * A ui for the status bar that is displayed at the header of the application.","lastModifiedDate":"2016-09-28"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class ResultDisplay extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"ResultDisplay.fxml\";","lastModifiedDate":"2016-09-14"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-10-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private TextArea resultDisplay;","lastModifiedDate":"2016-10-15"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-15"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public ResultDisplay() {","lastModifiedDate":"2017-06-14"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2016-12-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public void setFeedbackToUser(String feedbackToUser) {","lastModifiedDate":"2018-12-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        requireNonNull(feedbackToUser);","lastModifiedDate":"2018-12-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        resultDisplay.setText(feedbackToUser);","lastModifiedDate":"2018-12-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"ramapriyan912001":1,"-":27}},{"path":"src/main/java/seedu/awe/ui/StatusBarFooter.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ramapriyan912001"},"content":"package seedu.awe.ui;","lastModifiedDate":"2021-10-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2018-12-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * A ui for the status bar that is displayed at the footer of the application.","lastModifiedDate":"2016-09-28"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class StatusBarFooter extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-14"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"StatusBarFooter.fxml\";","lastModifiedDate":"2017-04-01"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-12-10"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private Label saveLocationStatus;","lastModifiedDate":"2018-12-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * Creates a {@code StatusBarFooter} with the given {@code Path}.","lastModifiedDate":"2020-05-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public StatusBarFooter(Path saveLocation) {","lastModifiedDate":"2019-01-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2017-04-01"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        saveLocationStatus.setText(Paths.get(\".\").resolve(saveLocation).toString());","lastModifiedDate":"2018-12-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-04-01"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":28,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"ramapriyan912001":1,"-":27}},{"path":"src/main/java/seedu/awe/ui/Ui.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Jingwencloud"},"content":"package seedu.awe.ui;","lastModifiedDate":"2021-10-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-09-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * API of UI component","lastModifiedDate":"2016-09-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public interface Ui {","lastModifiedDate":"2016-09-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    /** Starts the UI (and the App).  */","lastModifiedDate":"2016-09-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    void start(Stage primaryStage);","lastModifiedDate":"2016-09-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"Jingwencloud"},"content":"    /** Sets the boolean indicating if there was an error reading from storage. */","lastModifiedDate":"2021-10-26"},{"lineNumber":14,"author":{"gitId":"Jingwencloud"},"content":"    void setIsDataError(boolean isDataError);","lastModifiedDate":"2021-10-26"},{"lineNumber":15,"author":{"gitId":"Jingwencloud"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"Jingwencloud":4,"-":12}},{"path":"src/main/java/seedu/awe/ui/UiManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ramapriyan912001"},"content":"package seedu.awe.ui;","lastModifiedDate":"2021-10-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.application.Platform;","lastModifiedDate":"2016-08-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.Alert;","lastModifiedDate":"2016-08-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.Alert.AlertType;","lastModifiedDate":"2016-08-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2016-08-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":10,"author":{"gitId":"ramapriyan912001"},"content":"import seedu.awe.MainApp;","lastModifiedDate":"2021-10-05"},{"lineNumber":11,"author":{"gitId":"ramapriyan912001"},"content":"import seedu.awe.commons.core.LogsCenter;","lastModifiedDate":"2021-10-05"},{"lineNumber":12,"author":{"gitId":"ramapriyan912001"},"content":"import seedu.awe.commons.util.StringUtil;","lastModifiedDate":"2021-10-05"},{"lineNumber":13,"author":{"gitId":"ramapriyan912001"},"content":"import seedu.awe.logic.Logic;","lastModifiedDate":"2021-10-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * The manager of the UI component.","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class UiManager implements Ui {","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public static final String ALERT_DIALOG_PANE_FIELD_ID \u003d \"alertDialogPane\";","lastModifiedDate":"2017-04-01"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(UiManager.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":23,"author":{"gitId":"kheekheekhee"},"content":"    private static final String ICON_APPLICATION \u003d \"/images/awe_logo_32.png\";","lastModifiedDate":"2021-10-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private MainWindow mainWindow;","lastModifiedDate":"2016-08-18"},{"lineNumber":27,"author":{"gitId":"Jingwencloud"},"content":"    private boolean isDataError;","lastModifiedDate":"2021-10-26"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Creates a {@code UiManager} with the given {@code Logic}.","lastModifiedDate":"2020-05-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public UiManager(Logic logic) {","lastModifiedDate":"2018-12-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        super();","lastModifiedDate":"2016-08-18"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        this.logic \u003d logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":37,"author":{"gitId":"Jingwencloud"},"content":"    @Override","lastModifiedDate":"2021-10-26"},{"lineNumber":38,"author":{"gitId":"Jingwencloud"},"content":"    public void setIsDataError(boolean isDataError) {","lastModifiedDate":"2021-10-26"},{"lineNumber":39,"author":{"gitId":"Jingwencloud"},"content":"        this.isDataError \u003d isDataError;","lastModifiedDate":"2021-10-26"},{"lineNumber":40,"author":{"gitId":"Jingwencloud"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":41,"author":{"gitId":"Jingwencloud"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public void start(Stage primaryStage) {","lastModifiedDate":"2016-09-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        logger.info(\"Starting UI...\");","lastModifiedDate":"2016-09-21"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        //Set the application icon.","lastModifiedDate":"2016-08-18"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        primaryStage.getIcons().add(getImage(ICON_APPLICATION));","lastModifiedDate":"2016-08-18"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-08-18"},{"lineNumber":50,"author":{"gitId":"-"},"content":"            mainWindow \u003d new MainWindow(primaryStage, logic);","lastModifiedDate":"2018-12-08"},{"lineNumber":51,"author":{"gitId":"Jingwencloud"},"content":"            mainWindow.show(isDataError);","lastModifiedDate":"2021-10-26"},{"lineNumber":52,"author":{"gitId":"-"},"content":"            mainWindow.fillInnerParts();","lastModifiedDate":"2016-08-18"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        } catch (Throwable e) {","lastModifiedDate":"2016-08-18"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            logger.severe(StringUtil.getDetails(e));","lastModifiedDate":"2016-09-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"            showFatalErrorDialogAndShutdown(\"Fatal error during initializing\", e);","lastModifiedDate":"2016-08-18"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-18"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    private Image getImage(String imagePath) {","lastModifiedDate":"2016-08-18"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        return new Image(MainApp.class.getResourceAsStream(imagePath));","lastModifiedDate":"2016-08-18"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    void showAlertDialogAndWait(Alert.AlertType type, String title, String headerText, String contentText) {","lastModifiedDate":"2016-09-21"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        showAlertDialogAndWait(mainWindow.getPrimaryStage(), type, title, headerText, contentText);","lastModifiedDate":"2016-08-18"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     * Shows an alert dialog on {@code owner} with the given parameters.","lastModifiedDate":"2017-08-16"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     * This method only returns after the user has closed the alert dialog.","lastModifiedDate":"2017-08-16"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    private static void showAlertDialogAndWait(Stage owner, AlertType type, String title, String headerText,","lastModifiedDate":"2016-09-21"},{"lineNumber":73,"author":{"gitId":"-"},"content":"                                               String contentText) {","lastModifiedDate":"2016-08-18"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        final Alert alert \u003d new Alert(type);","lastModifiedDate":"2016-08-18"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        alert.getDialogPane().getStylesheets().add(\"view/DarkTheme.css\");","lastModifiedDate":"2016-08-20"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        alert.initOwner(owner);","lastModifiedDate":"2016-08-18"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        alert.setTitle(title);","lastModifiedDate":"2016-08-18"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        alert.setHeaderText(headerText);","lastModifiedDate":"2016-08-18"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        alert.setContentText(contentText);","lastModifiedDate":"2016-08-18"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        alert.getDialogPane().setId(ALERT_DIALOG_PANE_FIELD_ID);","lastModifiedDate":"2016-10-12"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        alert.showAndWait();","lastModifiedDate":"2016-08-18"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     * Shows an error alert dialog with {@code title} and error message, {@code e},","lastModifiedDate":"2017-08-16"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * and exits the application after the user has closed the alert dialog.","lastModifiedDate":"2017-08-16"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    private void showFatalErrorDialogAndShutdown(String title, Throwable e) {","lastModifiedDate":"2016-09-21"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        logger.severe(title + \" \" + e.getMessage() + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-21"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        showAlertDialogAndWait(Alert.AlertType.ERROR, title, e.getMessage(), e.toString());","lastModifiedDate":"2016-08-18"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        Platform.exit();","lastModifiedDate":"2016-08-18"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        System.exit(1);","lastModifiedDate":"2016-08-18"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-25"},{"lineNumber":95,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"Jingwencloud":7,"kheekheekhee":1,"ramapriyan912001":5,"-":82}},{"path":"src/main/java/seedu/awe/ui/UiPart.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ramapriyan912001"},"content":"package seedu.awe.ui;","lastModifiedDate":"2021-10-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-12-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.net.URL;","lastModifiedDate":"2016-12-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2016-12-21"},{"lineNumber":9,"author":{"gitId":"ramapriyan912001"},"content":"import seedu.awe.MainApp;","lastModifiedDate":"2021-10-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Represents a distinct part of the UI. e.g. Windows, dialogs, panels, status bars, etc.","lastModifiedDate":"2016-12-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * It contains a scene graph with a root node of type {@code T}.","lastModifiedDate":"2016-12-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-12-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public abstract class UiPart\u003cT\u003e {","lastModifiedDate":"2016-12-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    /** Resource folder where FXML files are stored. */","lastModifiedDate":"2016-12-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public static final String FXML_FILE_FOLDER \u003d \"/view/\";","lastModifiedDate":"2016-12-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private final FXMLLoader fxmlLoader \u003d new FXMLLoader();","lastModifiedDate":"2017-11-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Constructs a UiPart with the specified FXML file URL.","lastModifiedDate":"2016-12-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * The FXML file must not specify the {@code fx:controller} attribute.","lastModifiedDate":"2016-12-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public UiPart(URL fxmlFileUrl) {","lastModifiedDate":"2016-12-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        loadFxmlFile(fxmlFileUrl, null);","lastModifiedDate":"2017-11-29"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Constructs a UiPart using the specified FXML file within {@link #FXML_FILE_FOLDER}.","lastModifiedDate":"2016-12-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * @see #UiPart(URL)","lastModifiedDate":"2016-12-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public UiPart(String fxmlFileName) {","lastModifiedDate":"2016-12-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        this(getFxmlFileUrl(fxmlFileName));","lastModifiedDate":"2017-11-29"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-11-29"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-11-29"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * Constructs a UiPart with the specified FXML file URL and root object.","lastModifiedDate":"2017-11-29"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * The FXML file must not specify the {@code fx:controller} attribute.","lastModifiedDate":"2017-11-29"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-11-29"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public UiPart(URL fxmlFileUrl, T root) {","lastModifiedDate":"2017-11-29"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        loadFxmlFile(fxmlFileUrl, root);","lastModifiedDate":"2017-11-29"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-11-29"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-11-29"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     * Constructs a UiPart with the specified FXML file within {@link #FXML_FILE_FOLDER} and root object.","lastModifiedDate":"2017-11-29"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * @see #UiPart(URL, T)","lastModifiedDate":"2017-11-29"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-11-29"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public UiPart(String fxmlFileName, T root) {","lastModifiedDate":"2017-11-29"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        this(getFxmlFileUrl(fxmlFileName), root);","lastModifiedDate":"2017-11-29"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * Returns the root object of the scene graph of this UiPart.","lastModifiedDate":"2016-12-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public T getRoot() {","lastModifiedDate":"2016-12-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        return fxmlLoader.getRoot();","lastModifiedDate":"2016-12-21"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-11-29"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * Loads the object hierarchy from a FXML document.","lastModifiedDate":"2017-11-29"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * @param location Location of the FXML document.","lastModifiedDate":"2017-11-29"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * @param root Specifies the root of the object hierarchy.","lastModifiedDate":"2017-11-29"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-11-29"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    private void loadFxmlFile(URL location, T root) {","lastModifiedDate":"2017-11-29"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        requireNonNull(location);","lastModifiedDate":"2017-11-29"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        fxmlLoader.setLocation(location);","lastModifiedDate":"2017-11-29"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        fxmlLoader.setController(this);","lastModifiedDate":"2017-11-29"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        fxmlLoader.setRoot(root);","lastModifiedDate":"2017-11-29"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-11-29"},{"lineNumber":72,"author":{"gitId":"-"},"content":"            fxmlLoader.load();","lastModifiedDate":"2017-11-29"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2017-11-29"},{"lineNumber":74,"author":{"gitId":"-"},"content":"            throw new AssertionError(e);","lastModifiedDate":"2017-11-29"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-11-29"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-11-29"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-11-29"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * Returns the FXML file URL for the specified FXML file name within {@link #FXML_FILE_FOLDER}.","lastModifiedDate":"2017-11-29"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-11-29"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    private static URL getFxmlFileUrl(String fxmlFileName) {","lastModifiedDate":"2017-11-29"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        requireNonNull(fxmlFileName);","lastModifiedDate":"2017-11-29"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        String fxmlFileNameWithFolder \u003d FXML_FILE_FOLDER + fxmlFileName;","lastModifiedDate":"2017-11-29"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        URL fxmlFileUrl \u003d MainApp.class.getResource(fxmlFileNameWithFolder);","lastModifiedDate":"2017-11-29"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        return requireNonNull(fxmlFileUrl);","lastModifiedDate":"2017-11-29"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-11-29"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":88,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"ramapriyan912001":2,"-":86}},{"path":"src/main/java/seedu/awe/ui/UiView.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ramapriyan912001"},"content":"package seedu.awe.ui;","lastModifiedDate":"2021-10-05"},{"lineNumber":2,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":3,"author":{"gitId":"marcuspeh"},"content":"public enum UiView {","lastModifiedDate":"2021-09-24"},{"lineNumber":4,"author":{"gitId":"marcuspeh"},"content":"    CONTACT_PAGE, GROUP_PAGE, EXPENSE_PAGE, TRANSACTION_SUMMARY, PAYMENT_PAGE;","lastModifiedDate":"2021-10-22"},{"lineNumber":5,"author":{"gitId":"marcuspeh"},"content":"}","lastModifiedDate":"2021-09-24"}],"authorContributionMap":{"marcuspeh":4,"ramapriyan912001":1}},{"path":"src/main/java/seedu/awe/ui/ViewPanel.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ramapriyan912001"},"content":"package seedu.awe.ui;","lastModifiedDate":"2021-10-05"},{"lineNumber":2,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":3,"author":{"gitId":"marcuspeh"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2021-10-18"},{"lineNumber":4,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":5,"author":{"gitId":"marcuspeh"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2021-09-29"},{"lineNumber":6,"author":{"gitId":"marcuspeh"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2021-09-29"},{"lineNumber":7,"author":{"gitId":"marcuspeh"},"content":"import javafx.scene.layout.StackPane;","lastModifiedDate":"2021-09-29"},{"lineNumber":8,"author":{"gitId":"marcuspeh"},"content":"import seedu.awe.commons.core.LogsCenter;","lastModifiedDate":"2021-10-18"},{"lineNumber":9,"author":{"gitId":"ramapriyan912001"},"content":"import seedu.awe.logic.Logic;","lastModifiedDate":"2021-10-05"},{"lineNumber":10,"author":{"gitId":"Jingwencloud"},"content":"import seedu.awe.ui.expense.ExpenseListPanel;","lastModifiedDate":"2021-10-06"},{"lineNumber":11,"author":{"gitId":"ramapriyan912001"},"content":"import seedu.awe.ui.group.GroupListPanel;","lastModifiedDate":"2021-10-05"},{"lineNumber":12,"author":{"gitId":"ramapriyan912001"},"content":"import seedu.awe.ui.payment.PaymentListPanel;","lastModifiedDate":"2021-10-21"},{"lineNumber":13,"author":{"gitId":"marcuspeh"},"content":"import seedu.awe.ui.person.ContactListPanel;","lastModifiedDate":"2021-10-22"},{"lineNumber":14,"author":{"gitId":"Jingwencloud"},"content":"import seedu.awe.ui.transactionsummary.TransactionSummaryListPanel;","lastModifiedDate":"2021-10-21"},{"lineNumber":15,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":16,"author":{"gitId":"Jingwencloud"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":17,"author":{"gitId":"marcuspeh"},"content":"/**","lastModifiedDate":"2021-09-29"},{"lineNumber":18,"author":{"gitId":"marcuspeh"},"content":" * The View Window. Handles the displaying of individual viewPanel.","lastModifiedDate":"2021-09-29"},{"lineNumber":19,"author":{"gitId":"marcuspeh"},"content":" */","lastModifiedDate":"2021-09-29"},{"lineNumber":20,"author":{"gitId":"marcuspeh"},"content":"public class ViewPanel extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2021-09-29"},{"lineNumber":21,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":22,"author":{"gitId":"marcuspeh"},"content":"    private static final String FXML \u003d \"ViewPanel.fxml\";","lastModifiedDate":"2021-09-29"},{"lineNumber":23,"author":{"gitId":"marcuspeh"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(ViewPanel.class);","lastModifiedDate":"2021-10-18"},{"lineNumber":24,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":25,"author":{"gitId":"marcuspeh"},"content":"    private Logic logic;","lastModifiedDate":"2021-09-29"},{"lineNumber":26,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":27,"author":{"gitId":"marcuspeh"},"content":"    // Panels for toggling","lastModifiedDate":"2021-09-29"},{"lineNumber":28,"author":{"gitId":"marcuspeh"},"content":"    private ContactListPanel contactListPanel;","lastModifiedDate":"2021-10-22"},{"lineNumber":29,"author":{"gitId":"marcuspeh"},"content":"    private GroupListPanel groupListPanel;","lastModifiedDate":"2021-09-29"},{"lineNumber":30,"author":{"gitId":"Jingwencloud"},"content":"    private ExpenseListPanel expenseListPanel;","lastModifiedDate":"2021-10-06"},{"lineNumber":31,"author":{"gitId":"Jingwencloud"},"content":"    private TransactionSummaryListPanel transactionSummaryListPanel;","lastModifiedDate":"2021-10-21"},{"lineNumber":32,"author":{"gitId":"ramapriyan912001"},"content":"    private PaymentListPanel paymentListPanel;","lastModifiedDate":"2021-10-21"},{"lineNumber":33,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":34,"author":{"gitId":"marcuspeh"},"content":"    @FXML","lastModifiedDate":"2021-09-29"},{"lineNumber":35,"author":{"gitId":"marcuspeh"},"content":"    private StackPane viewListPlaceholder;","lastModifiedDate":"2021-09-29"},{"lineNumber":36,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":37,"author":{"gitId":"marcuspeh"},"content":"    /**","lastModifiedDate":"2021-09-29"},{"lineNumber":38,"author":{"gitId":"marcuspeh"},"content":"     * Constructor for ViewPanel","lastModifiedDate":"2021-09-29"},{"lineNumber":39,"author":{"gitId":"marcuspeh"},"content":"     *","lastModifiedDate":"2021-09-29"},{"lineNumber":40,"author":{"gitId":"marcuspeh"},"content":"     * @param logic To get the respective list for ListPanel to render.","lastModifiedDate":"2021-09-29"},{"lineNumber":41,"author":{"gitId":"marcuspeh"},"content":"     */","lastModifiedDate":"2021-09-29"},{"lineNumber":42,"author":{"gitId":"marcuspeh"},"content":"    public ViewPanel(Logic logic) {","lastModifiedDate":"2021-09-29"},{"lineNumber":43,"author":{"gitId":"marcuspeh"},"content":"        super(FXML);","lastModifiedDate":"2021-09-29"},{"lineNumber":44,"author":{"gitId":"marcuspeh"},"content":"        this.logic \u003d logic;","lastModifiedDate":"2021-09-29"},{"lineNumber":45,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":46,"author":{"gitId":"marcuspeh"},"content":"        fillInnerParts();","lastModifiedDate":"2021-09-29"},{"lineNumber":47,"author":{"gitId":"marcuspeh"},"content":"    }","lastModifiedDate":"2021-09-29"},{"lineNumber":48,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":49,"author":{"gitId":"Jingwencloud"},"content":"    /**","lastModifiedDate":"2021-10-07"},{"lineNumber":50,"author":{"gitId":"Jingwencloud"},"content":"     * Fills up all the placeholders of this window.","lastModifiedDate":"2021-10-07"},{"lineNumber":51,"author":{"gitId":"Jingwencloud"},"content":"     */","lastModifiedDate":"2021-10-07"},{"lineNumber":52,"author":{"gitId":"Jingwencloud"},"content":"    public void fillInnerParts() {","lastModifiedDate":"2021-10-07"},{"lineNumber":53,"author":{"gitId":"marcuspeh"},"content":"        logger.info(\"Setting up view panels...\");","lastModifiedDate":"2021-10-18"},{"lineNumber":54,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":55,"author":{"gitId":"marcuspeh"},"content":"        contactListPanel \u003d new ContactListPanel(logic.getFilteredPersonList(), logic.getAddressBook());","lastModifiedDate":"2021-10-22"},{"lineNumber":56,"author":{"gitId":"marcuspeh"},"content":"        groupListPanel \u003d new GroupListPanel(logic.getFilteredGroupList());","lastModifiedDate":"2021-10-04"},{"lineNumber":57,"author":{"gitId":"Jingwencloud"},"content":"        expenseListPanel \u003d new ExpenseListPanel(logic.getExpenses());","lastModifiedDate":"2021-10-07"},{"lineNumber":58,"author":{"gitId":"Jingwencloud"},"content":"        transactionSummaryListPanel \u003d new TransactionSummaryListPanel(logic.getTransactionSummary());","lastModifiedDate":"2021-10-21"},{"lineNumber":59,"author":{"gitId":"ramapriyan912001"},"content":"        paymentListPanel \u003d new PaymentListPanel(logic.getPayments());","lastModifiedDate":"2021-10-21"},{"lineNumber":60,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":61,"author":{"gitId":"marcuspeh"},"content":"        toggleView(UiView.CONTACT_PAGE);","lastModifiedDate":"2021-10-22"},{"lineNumber":62,"author":{"gitId":"marcuspeh"},"content":"    }","lastModifiedDate":"2021-09-29"},{"lineNumber":63,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":64,"author":{"gitId":"marcuspeh"},"content":"    /**","lastModifiedDate":"2021-09-29"},{"lineNumber":65,"author":{"gitId":"ramapriyan912001"},"content":"     * Switches different view for AddressBook, GroupsPage, ExpensesPage, TransactionSummary, and PaymentsPage.","lastModifiedDate":"2021-10-21"},{"lineNumber":66,"author":{"gitId":"marcuspeh"},"content":"     *","lastModifiedDate":"2021-09-29"},{"lineNumber":67,"author":{"gitId":"marcuspeh"},"content":"     * @param uiView Page to be changed","lastModifiedDate":"2021-09-29"},{"lineNumber":68,"author":{"gitId":"marcuspeh"},"content":"     */","lastModifiedDate":"2021-09-29"},{"lineNumber":69,"author":{"gitId":"marcuspeh"},"content":"    public void toggleView(UiView uiView) {","lastModifiedDate":"2021-09-29"},{"lineNumber":70,"author":{"gitId":"marcuspeh"},"content":"        viewListPlaceholder.getChildren().clear();","lastModifiedDate":"2021-09-29"},{"lineNumber":71,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":72,"author":{"gitId":"marcuspeh"},"content":"        if (uiView \u003d\u003d UiView.CONTACT_PAGE) {","lastModifiedDate":"2021-10-22"},{"lineNumber":73,"author":{"gitId":"marcuspeh"},"content":"            viewListPlaceholder.getChildren().add(contactListPanel.getRoot());","lastModifiedDate":"2021-10-22"},{"lineNumber":74,"author":{"gitId":"marcuspeh"},"content":"        } else if (uiView \u003d\u003d UiView.GROUP_PAGE) {","lastModifiedDate":"2021-09-29"},{"lineNumber":75,"author":{"gitId":"marcuspeh"},"content":"            viewListPlaceholder.getChildren().add(groupListPanel.getRoot());","lastModifiedDate":"2021-09-29"},{"lineNumber":76,"author":{"gitId":"Jingwencloud"},"content":"        } else if (uiView \u003d\u003d UiView.EXPENSE_PAGE) {","lastModifiedDate":"2021-10-06"},{"lineNumber":77,"author":{"gitId":"Jingwencloud"},"content":"            viewListPlaceholder.getChildren().add(expenseListPanel.getRoot());","lastModifiedDate":"2021-10-06"},{"lineNumber":78,"author":{"gitId":"Jingwencloud"},"content":"        } else if (uiView \u003d\u003d UiView.TRANSACTION_SUMMARY) {","lastModifiedDate":"2021-10-21"},{"lineNumber":79,"author":{"gitId":"Jingwencloud"},"content":"            viewListPlaceholder.getChildren().add(transactionSummaryListPanel.getRoot());","lastModifiedDate":"2021-10-21"},{"lineNumber":80,"author":{"gitId":"ramapriyan912001"},"content":"        } else if (uiView \u003d\u003d UiView.PAYMENT_PAGE) {","lastModifiedDate":"2021-10-21"},{"lineNumber":81,"author":{"gitId":"ramapriyan912001"},"content":"            viewListPlaceholder.getChildren().add(paymentListPanel.getRoot());","lastModifiedDate":"2021-10-21"},{"lineNumber":82,"author":{"gitId":"marcuspeh"},"content":"        } else {","lastModifiedDate":"2021-09-29"},{"lineNumber":83,"author":{"gitId":"marcuspeh"},"content":"            logger.warning(\"Toggle tab not found\");","lastModifiedDate":"2021-10-18"},{"lineNumber":84,"author":{"gitId":"marcuspeh"},"content":"            throw new AssertionError(\"Toggle tab not found\");","lastModifiedDate":"2021-09-29"},{"lineNumber":85,"author":{"gitId":"marcuspeh"},"content":"        }","lastModifiedDate":"2021-09-29"},{"lineNumber":86,"author":{"gitId":"marcuspeh"},"content":"    }","lastModifiedDate":"2021-09-29"},{"lineNumber":87,"author":{"gitId":"marcuspeh"},"content":"}","lastModifiedDate":"2021-09-29"}],"authorContributionMap":{"marcuspeh":63,"Jingwencloud":15,"ramapriyan912001":9}},{"path":"src/main/java/seedu/awe/ui/expense/ExpenseCard.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Jingwencloud"},"content":"package seedu.awe.ui.expense;","lastModifiedDate":"2021-10-06"},{"lineNumber":2,"author":{"gitId":"Jingwencloud"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":3,"author":{"gitId":"Jingwencloud"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2021-10-06"},{"lineNumber":4,"author":{"gitId":"Jingwencloud"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2021-10-06"},{"lineNumber":5,"author":{"gitId":"Jingwencloud"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2021-10-06"},{"lineNumber":6,"author":{"gitId":"Jingwencloud"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2021-10-06"},{"lineNumber":7,"author":{"gitId":"Jingwencloud"},"content":"import seedu.awe.model.expense.Expense;","lastModifiedDate":"2021-10-06"},{"lineNumber":8,"author":{"gitId":"Jingwencloud"},"content":"import seedu.awe.ui.UiPart;","lastModifiedDate":"2021-10-06"},{"lineNumber":9,"author":{"gitId":"Jingwencloud"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":10,"author":{"gitId":"Jingwencloud"},"content":"/**","lastModifiedDate":"2021-10-06"},{"lineNumber":11,"author":{"gitId":"Jingwencloud"},"content":" * A UI component that displays information of an {@code Expense}.","lastModifiedDate":"2021-10-07"},{"lineNumber":12,"author":{"gitId":"Jingwencloud"},"content":" */","lastModifiedDate":"2021-10-06"},{"lineNumber":13,"author":{"gitId":"Jingwencloud"},"content":"public class ExpenseCard extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2021-10-06"},{"lineNumber":14,"author":{"gitId":"Jingwencloud"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":15,"author":{"gitId":"Jingwencloud"},"content":"    private static final String FXML \u003d \"ExpenseListCard.fxml\";","lastModifiedDate":"2021-10-06"},{"lineNumber":16,"author":{"gitId":"Jingwencloud"},"content":"    private static final String EXPENSE_COST \u003d \"Cost: $\";","lastModifiedDate":"2021-10-08"},{"lineNumber":17,"author":{"gitId":"Jingwencloud"},"content":"    private static final String EXPENSE_PAYER \u003d \"Payer: \";","lastModifiedDate":"2021-10-08"},{"lineNumber":18,"author":{"gitId":"Jingwencloud"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":19,"author":{"gitId":"Jingwencloud"},"content":"    /**","lastModifiedDate":"2021-10-06"},{"lineNumber":20,"author":{"gitId":"Jingwencloud"},"content":"     * Note: Certain keywords such as \"location\" and \"resources\" are reserved keywords in JavaFX.","lastModifiedDate":"2021-10-06"},{"lineNumber":21,"author":{"gitId":"Jingwencloud"},"content":"     * As a consequence, UI elements\u0027 variable names cannot be set to such keywords","lastModifiedDate":"2021-10-06"},{"lineNumber":22,"author":{"gitId":"Jingwencloud"},"content":"     * or an exception will be thrown by JavaFX during runtime.","lastModifiedDate":"2021-10-06"},{"lineNumber":23,"author":{"gitId":"Jingwencloud"},"content":"     *","lastModifiedDate":"2021-10-06"},{"lineNumber":24,"author":{"gitId":"Jingwencloud"},"content":"     * @see \u003ca href\u003d\"https://github.com/se-edu/addressbook-level4/issues/336\"\u003eThe issue on AddressBook level 4\u003c/a\u003e","lastModifiedDate":"2021-10-06"},{"lineNumber":25,"author":{"gitId":"Jingwencloud"},"content":"     */","lastModifiedDate":"2021-10-06"},{"lineNumber":26,"author":{"gitId":"Jingwencloud"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":27,"author":{"gitId":"Jingwencloud"},"content":"    public final Expense expense;","lastModifiedDate":"2021-10-06"},{"lineNumber":28,"author":{"gitId":"Jingwencloud"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":29,"author":{"gitId":"Jingwencloud"},"content":"    @FXML","lastModifiedDate":"2021-10-06"},{"lineNumber":30,"author":{"gitId":"Jingwencloud"},"content":"    private HBox cardPane;","lastModifiedDate":"2021-10-06"},{"lineNumber":31,"author":{"gitId":"Jingwencloud"},"content":"    @FXML","lastModifiedDate":"2021-10-06"},{"lineNumber":32,"author":{"gitId":"Jingwencloud"},"content":"    private Label description;","lastModifiedDate":"2021-10-06"},{"lineNumber":33,"author":{"gitId":"Jingwencloud"},"content":"    @FXML","lastModifiedDate":"2021-10-06"},{"lineNumber":34,"author":{"gitId":"Jingwencloud"},"content":"    private Label id;","lastModifiedDate":"2021-10-06"},{"lineNumber":35,"author":{"gitId":"Jingwencloud"},"content":"    @FXML","lastModifiedDate":"2021-10-06"},{"lineNumber":36,"author":{"gitId":"Jingwencloud"},"content":"    private Label cost;","lastModifiedDate":"2021-10-06"},{"lineNumber":37,"author":{"gitId":"Jingwencloud"},"content":"    @FXML","lastModifiedDate":"2021-10-06"},{"lineNumber":38,"author":{"gitId":"Jingwencloud"},"content":"    private Label payer;","lastModifiedDate":"2021-10-06"},{"lineNumber":39,"author":{"gitId":"Jingwencloud"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":40,"author":{"gitId":"Jingwencloud"},"content":"    /**","lastModifiedDate":"2021-10-06"},{"lineNumber":41,"author":{"gitId":"Jingwencloud"},"content":"     * Creates an {@code ExpenseCard} with the given {@code Expense} and index to display.","lastModifiedDate":"2021-10-07"},{"lineNumber":42,"author":{"gitId":"Jingwencloud"},"content":"     */","lastModifiedDate":"2021-10-06"},{"lineNumber":43,"author":{"gitId":"Jingwencloud"},"content":"    public ExpenseCard(Expense expense, int displayedIndex) {","lastModifiedDate":"2021-10-06"},{"lineNumber":44,"author":{"gitId":"Jingwencloud"},"content":"        super(FXML);","lastModifiedDate":"2021-10-06"},{"lineNumber":45,"author":{"gitId":"Jingwencloud"},"content":"        this.expense \u003d expense;","lastModifiedDate":"2021-10-06"},{"lineNumber":46,"author":{"gitId":"Jingwencloud"},"content":"        id.setText(displayedIndex + \".\");","lastModifiedDate":"2021-10-06"},{"lineNumber":47,"author":{"gitId":"Jingwencloud"},"content":"        description.setText(expense.getDescription().toString());","lastModifiedDate":"2021-10-06"},{"lineNumber":48,"author":{"gitId":"Jingwencloud"},"content":"        cost.setText(EXPENSE_COST + expense.getCost().toString());","lastModifiedDate":"2021-10-08"},{"lineNumber":49,"author":{"gitId":"Jingwencloud"},"content":"        payer.setText(EXPENSE_PAYER + expense.getPayer().getName().toString());","lastModifiedDate":"2021-10-08"},{"lineNumber":50,"author":{"gitId":"Jingwencloud"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":51,"author":{"gitId":"Jingwencloud"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":52,"author":{"gitId":"Jingwencloud"},"content":"    @Override","lastModifiedDate":"2021-10-06"},{"lineNumber":53,"author":{"gitId":"Jingwencloud"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-06"},{"lineNumber":54,"author":{"gitId":"Jingwencloud"},"content":"        // short circuit if same object","lastModifiedDate":"2021-10-06"},{"lineNumber":55,"author":{"gitId":"Jingwencloud"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2021-10-06"},{"lineNumber":56,"author":{"gitId":"Jingwencloud"},"content":"            return true;","lastModifiedDate":"2021-10-06"},{"lineNumber":57,"author":{"gitId":"Jingwencloud"},"content":"        }","lastModifiedDate":"2021-10-06"},{"lineNumber":58,"author":{"gitId":"Jingwencloud"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":59,"author":{"gitId":"Jingwencloud"},"content":"        // instanceof handles nulls","lastModifiedDate":"2021-10-06"},{"lineNumber":60,"author":{"gitId":"Jingwencloud"},"content":"        if (!(other instanceof ExpenseCard)) {","lastModifiedDate":"2021-10-06"},{"lineNumber":61,"author":{"gitId":"Jingwencloud"},"content":"            return false;","lastModifiedDate":"2021-10-06"},{"lineNumber":62,"author":{"gitId":"Jingwencloud"},"content":"        }","lastModifiedDate":"2021-10-06"},{"lineNumber":63,"author":{"gitId":"Jingwencloud"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":64,"author":{"gitId":"Jingwencloud"},"content":"        // state check","lastModifiedDate":"2021-10-06"},{"lineNumber":65,"author":{"gitId":"Jingwencloud"},"content":"        ExpenseCard card \u003d (ExpenseCard) other;","lastModifiedDate":"2021-10-06"},{"lineNumber":66,"author":{"gitId":"Jingwencloud"},"content":"        return id.getText().equals(card.id.getText())","lastModifiedDate":"2021-10-06"},{"lineNumber":67,"author":{"gitId":"Jingwencloud"},"content":"                \u0026\u0026 expense.equals(card.expense);","lastModifiedDate":"2021-10-06"},{"lineNumber":68,"author":{"gitId":"Jingwencloud"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":69,"author":{"gitId":"Jingwencloud"},"content":"}","lastModifiedDate":"2021-10-06"}],"authorContributionMap":{"Jingwencloud":69}},{"path":"src/main/java/seedu/awe/ui/expense/ExpenseListPanel.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Jingwencloud"},"content":"package seedu.awe.ui.expense;","lastModifiedDate":"2021-10-06"},{"lineNumber":2,"author":{"gitId":"Jingwencloud"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":3,"author":{"gitId":"Jingwencloud"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2021-10-06"},{"lineNumber":4,"author":{"gitId":"Jingwencloud"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":5,"author":{"gitId":"Jingwencloud"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-10-06"},{"lineNumber":6,"author":{"gitId":"Jingwencloud"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2021-10-06"},{"lineNumber":7,"author":{"gitId":"Jingwencloud"},"content":"import javafx.scene.control.ListCell;","lastModifiedDate":"2021-10-06"},{"lineNumber":8,"author":{"gitId":"Jingwencloud"},"content":"import javafx.scene.control.ListView;","lastModifiedDate":"2021-10-06"},{"lineNumber":9,"author":{"gitId":"Jingwencloud"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2021-10-06"},{"lineNumber":10,"author":{"gitId":"Jingwencloud"},"content":"import seedu.awe.commons.core.LogsCenter;","lastModifiedDate":"2021-10-06"},{"lineNumber":11,"author":{"gitId":"Jingwencloud"},"content":"import seedu.awe.model.expense.Expense;","lastModifiedDate":"2021-10-06"},{"lineNumber":12,"author":{"gitId":"Jingwencloud"},"content":"import seedu.awe.ui.UiPart;","lastModifiedDate":"2021-10-06"},{"lineNumber":13,"author":{"gitId":"Jingwencloud"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":14,"author":{"gitId":"Jingwencloud"},"content":"/**","lastModifiedDate":"2021-10-06"},{"lineNumber":15,"author":{"gitId":"Jingwencloud"},"content":" * Panel containing the list of expenses.","lastModifiedDate":"2021-10-07"},{"lineNumber":16,"author":{"gitId":"Jingwencloud"},"content":" */","lastModifiedDate":"2021-10-06"},{"lineNumber":17,"author":{"gitId":"Jingwencloud"},"content":"public class ExpenseListPanel extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2021-10-06"},{"lineNumber":18,"author":{"gitId":"Jingwencloud"},"content":"    private static final String FXML \u003d \"ExpenseListPanel.fxml\";","lastModifiedDate":"2021-10-06"},{"lineNumber":19,"author":{"gitId":"Jingwencloud"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(ExpenseListPanel.class);","lastModifiedDate":"2021-10-06"},{"lineNumber":20,"author":{"gitId":"Jingwencloud"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":21,"author":{"gitId":"Jingwencloud"},"content":"    @FXML","lastModifiedDate":"2021-10-06"},{"lineNumber":22,"author":{"gitId":"Jingwencloud"},"content":"    private ListView\u003cExpense\u003e expenseListView;","lastModifiedDate":"2021-10-06"},{"lineNumber":23,"author":{"gitId":"Jingwencloud"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":24,"author":{"gitId":"Jingwencloud"},"content":"    /**","lastModifiedDate":"2021-10-06"},{"lineNumber":25,"author":{"gitId":"Jingwencloud"},"content":"     * Creates an {@code ExpenseListPanel} with the given {@code ObservableList}.","lastModifiedDate":"2021-10-07"},{"lineNumber":26,"author":{"gitId":"Jingwencloud"},"content":"     */","lastModifiedDate":"2021-10-06"},{"lineNumber":27,"author":{"gitId":"Jingwencloud"},"content":"    public ExpenseListPanel(ObservableList\u003cExpense\u003e expenseList) {","lastModifiedDate":"2021-10-06"},{"lineNumber":28,"author":{"gitId":"Jingwencloud"},"content":"        super(FXML);","lastModifiedDate":"2021-10-06"},{"lineNumber":29,"author":{"gitId":"Jingwencloud"},"content":"        expenseListView.setItems(expenseList);","lastModifiedDate":"2021-10-06"},{"lineNumber":30,"author":{"gitId":"Jingwencloud"},"content":"        expenseListView.setCellFactory(listView -\u003e new ExpenseListViewCell());","lastModifiedDate":"2021-10-06"},{"lineNumber":31,"author":{"gitId":"Jingwencloud"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":32,"author":{"gitId":"Jingwencloud"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":33,"author":{"gitId":"Jingwencloud"},"content":"    /**","lastModifiedDate":"2021-10-06"},{"lineNumber":34,"author":{"gitId":"Jingwencloud"},"content":"     * Custom {@code ExpenseListCell} that displays the graphics of an {@code Expense} using an {@code ExpenseCard}.","lastModifiedDate":"2021-10-07"},{"lineNumber":35,"author":{"gitId":"Jingwencloud"},"content":"     */","lastModifiedDate":"2021-10-06"},{"lineNumber":36,"author":{"gitId":"Jingwencloud"},"content":"    class ExpenseListViewCell extends ListCell\u003cExpense\u003e {","lastModifiedDate":"2021-10-06"},{"lineNumber":37,"author":{"gitId":"Jingwencloud"},"content":"        @Override","lastModifiedDate":"2021-10-06"},{"lineNumber":38,"author":{"gitId":"Jingwencloud"},"content":"        protected void updateItem(Expense expense, boolean empty) {","lastModifiedDate":"2021-10-06"},{"lineNumber":39,"author":{"gitId":"Jingwencloud"},"content":"            super.updateItem(expense, empty);","lastModifiedDate":"2021-10-06"},{"lineNumber":40,"author":{"gitId":"Jingwencloud"},"content":"            if (empty || expense \u003d\u003d null) {","lastModifiedDate":"2021-10-06"},{"lineNumber":41,"author":{"gitId":"Jingwencloud"},"content":"                setGraphic(null);","lastModifiedDate":"2021-10-06"},{"lineNumber":42,"author":{"gitId":"Jingwencloud"},"content":"                setText(null);","lastModifiedDate":"2021-10-06"},{"lineNumber":43,"author":{"gitId":"Jingwencloud"},"content":"            } else {","lastModifiedDate":"2021-10-06"},{"lineNumber":44,"author":{"gitId":"Jingwencloud"},"content":"                setGraphic(new ExpenseCard(expense, getIndex() + 1).getRoot());","lastModifiedDate":"2021-10-06"},{"lineNumber":45,"author":{"gitId":"Jingwencloud"},"content":"            }","lastModifiedDate":"2021-10-06"},{"lineNumber":46,"author":{"gitId":"Jingwencloud"},"content":"        }","lastModifiedDate":"2021-10-06"},{"lineNumber":47,"author":{"gitId":"Jingwencloud"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":48,"author":{"gitId":"Jingwencloud"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":49,"author":{"gitId":"Jingwencloud"},"content":"}","lastModifiedDate":"2021-10-06"}],"authorContributionMap":{"Jingwencloud":49}},{"path":"src/main/java/seedu/awe/ui/group/GroupCard.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ramapriyan912001"},"content":"package seedu.awe.ui.group;","lastModifiedDate":"2021-10-05"},{"lineNumber":2,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":3,"author":{"gitId":"marcuspeh"},"content":"import static java.util.stream.Collectors.joining;","lastModifiedDate":"2021-09-24"},{"lineNumber":4,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":5,"author":{"gitId":"marcuspeh"},"content":"import java.util.Comparator;","lastModifiedDate":"2021-09-24"},{"lineNumber":6,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":7,"author":{"gitId":"marcuspeh"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2021-09-24"},{"lineNumber":8,"author":{"gitId":"marcuspeh"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2021-09-24"},{"lineNumber":9,"author":{"gitId":"marcuspeh"},"content":"import javafx.scene.layout.FlowPane;","lastModifiedDate":"2021-09-24"},{"lineNumber":10,"author":{"gitId":"marcuspeh"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2021-09-24"},{"lineNumber":11,"author":{"gitId":"marcuspeh"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2021-09-24"},{"lineNumber":12,"author":{"gitId":"ramapriyan912001"},"content":"import seedu.awe.model.group.Group;","lastModifiedDate":"2021-10-05"},{"lineNumber":13,"author":{"gitId":"ramapriyan912001"},"content":"import seedu.awe.model.person.Name;","lastModifiedDate":"2021-10-05"},{"lineNumber":14,"author":{"gitId":"ramapriyan912001"},"content":"import seedu.awe.model.person.Person;","lastModifiedDate":"2021-10-05"},{"lineNumber":15,"author":{"gitId":"ramapriyan912001"},"content":"import seedu.awe.ui.UiPart;","lastModifiedDate":"2021-10-05"},{"lineNumber":16,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":17,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":18,"author":{"gitId":"marcuspeh"},"content":"/**","lastModifiedDate":"2021-09-24"},{"lineNumber":19,"author":{"gitId":"marcuspeh"},"content":" * An UI component that displays information of a {@code Group}.","lastModifiedDate":"2021-10-05"},{"lineNumber":20,"author":{"gitId":"marcuspeh"},"content":" */","lastModifiedDate":"2021-09-24"},{"lineNumber":21,"author":{"gitId":"marcuspeh"},"content":"public class GroupCard extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2021-09-24"},{"lineNumber":22,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":23,"author":{"gitId":"marcuspeh"},"content":"    private static final String FXML \u003d \"GroupListCard.fxml\";","lastModifiedDate":"2021-09-24"},{"lineNumber":24,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":25,"author":{"gitId":"marcuspeh"},"content":"    /**","lastModifiedDate":"2021-09-24"},{"lineNumber":26,"author":{"gitId":"marcuspeh"},"content":"     * Note: Certain keywords such as \"location\" and \"resources\" are reserved keywords in JavaFX.","lastModifiedDate":"2021-09-24"},{"lineNumber":27,"author":{"gitId":"marcuspeh"},"content":"     * As a consequence, UI elements\u0027 variable names cannot be set to such keywords","lastModifiedDate":"2021-09-24"},{"lineNumber":28,"author":{"gitId":"marcuspeh"},"content":"     * or an exception will be thrown by JavaFX during runtime.","lastModifiedDate":"2021-09-24"},{"lineNumber":29,"author":{"gitId":"marcuspeh"},"content":"     *","lastModifiedDate":"2021-09-24"},{"lineNumber":30,"author":{"gitId":"marcuspeh"},"content":"     * @see \u003ca href\u003d\"https://github.com/se-edu/addressbook-level4/issues/336\"\u003eThe issue on AddressBook level 4\u003c/a\u003e","lastModifiedDate":"2021-09-24"},{"lineNumber":31,"author":{"gitId":"marcuspeh"},"content":"     */","lastModifiedDate":"2021-09-24"},{"lineNumber":32,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":33,"author":{"gitId":"marcuspeh"},"content":"    public final Group group;","lastModifiedDate":"2021-09-24"},{"lineNumber":34,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":35,"author":{"gitId":"marcuspeh"},"content":"    @FXML","lastModifiedDate":"2021-09-24"},{"lineNumber":36,"author":{"gitId":"marcuspeh"},"content":"    private HBox cardPane;","lastModifiedDate":"2021-09-24"},{"lineNumber":37,"author":{"gitId":"marcuspeh"},"content":"    @FXML","lastModifiedDate":"2021-09-24"},{"lineNumber":38,"author":{"gitId":"marcuspeh"},"content":"    private Label groupName;","lastModifiedDate":"2021-09-24"},{"lineNumber":39,"author":{"gitId":"marcuspeh"},"content":"    @FXML","lastModifiedDate":"2021-09-24"},{"lineNumber":40,"author":{"gitId":"marcuspeh"},"content":"    private Label id;","lastModifiedDate":"2021-09-24"},{"lineNumber":41,"author":{"gitId":"marcuspeh"},"content":"    @FXML","lastModifiedDate":"2021-09-24"},{"lineNumber":42,"author":{"gitId":"marcuspeh"},"content":"    private Label members;","lastModifiedDate":"2021-09-24"},{"lineNumber":43,"author":{"gitId":"marcuspeh"},"content":"    @FXML","lastModifiedDate":"2021-09-24"},{"lineNumber":44,"author":{"gitId":"marcuspeh"},"content":"    private FlowPane tags;","lastModifiedDate":"2021-09-24"},{"lineNumber":45,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":46,"author":{"gitId":"marcuspeh"},"content":"    /**","lastModifiedDate":"2021-09-24"},{"lineNumber":47,"author":{"gitId":"marcuspeh"},"content":"     * Creates a {@code GroupCode} with the given {@code Group} and index to display.","lastModifiedDate":"2021-09-24"},{"lineNumber":48,"author":{"gitId":"marcuspeh"},"content":"     */","lastModifiedDate":"2021-09-24"},{"lineNumber":49,"author":{"gitId":"marcuspeh"},"content":"    public GroupCard(Group group, int displayedIndex) {","lastModifiedDate":"2021-09-24"},{"lineNumber":50,"author":{"gitId":"marcuspeh"},"content":"        super(FXML);","lastModifiedDate":"2021-09-24"},{"lineNumber":51,"author":{"gitId":"marcuspeh"},"content":"        this.group \u003d group;","lastModifiedDate":"2021-09-24"},{"lineNumber":52,"author":{"gitId":"marcuspeh"},"content":"        id.setText(displayedIndex + \". \");","lastModifiedDate":"2021-09-24"},{"lineNumber":53,"author":{"gitId":"marcuspeh"},"content":"        groupName.setText(group.getGroupName().toString());","lastModifiedDate":"2021-10-04"},{"lineNumber":54,"author":{"gitId":"marcuspeh"},"content":"        members.setText(group.getMembers().stream()","lastModifiedDate":"2021-09-24"},{"lineNumber":55,"author":{"gitId":"marcuspeh"},"content":"                .map(Person::getName)","lastModifiedDate":"2021-09-24"},{"lineNumber":56,"author":{"gitId":"marcuspeh"},"content":"                .map(Name::toString)","lastModifiedDate":"2021-09-24"},{"lineNumber":57,"author":{"gitId":"marcuspeh"},"content":"                .collect(joining(\", \")));","lastModifiedDate":"2021-09-24"},{"lineNumber":58,"author":{"gitId":"marcuspeh"},"content":"        group.getTags().stream()","lastModifiedDate":"2021-09-24"},{"lineNumber":59,"author":{"gitId":"marcuspeh"},"content":"                .sorted(Comparator.comparing(tag -\u003e tag.tagName))","lastModifiedDate":"2021-09-24"},{"lineNumber":60,"author":{"gitId":"marcuspeh"},"content":"                .forEach(tag -\u003e tags.getChildren().add(new Label(tag.tagName)));","lastModifiedDate":"2021-09-24"},{"lineNumber":61,"author":{"gitId":"marcuspeh"},"content":"    }","lastModifiedDate":"2021-09-24"},{"lineNumber":62,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":63,"author":{"gitId":"marcuspeh"},"content":"    @Override","lastModifiedDate":"2021-09-24"},{"lineNumber":64,"author":{"gitId":"marcuspeh"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-09-24"},{"lineNumber":65,"author":{"gitId":"marcuspeh"},"content":"        // short circuit if same object","lastModifiedDate":"2021-09-24"},{"lineNumber":66,"author":{"gitId":"marcuspeh"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2021-09-24"},{"lineNumber":67,"author":{"gitId":"marcuspeh"},"content":"            return true;","lastModifiedDate":"2021-09-24"},{"lineNumber":68,"author":{"gitId":"marcuspeh"},"content":"        }","lastModifiedDate":"2021-09-24"},{"lineNumber":69,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":70,"author":{"gitId":"marcuspeh"},"content":"        // instanceof handles nulls","lastModifiedDate":"2021-09-24"},{"lineNumber":71,"author":{"gitId":"marcuspeh"},"content":"        if (!(other instanceof GroupCard)) {","lastModifiedDate":"2021-09-24"},{"lineNumber":72,"author":{"gitId":"marcuspeh"},"content":"            return false;","lastModifiedDate":"2021-09-24"},{"lineNumber":73,"author":{"gitId":"marcuspeh"},"content":"        }","lastModifiedDate":"2021-09-24"},{"lineNumber":74,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":75,"author":{"gitId":"marcuspeh"},"content":"        // state check","lastModifiedDate":"2021-09-24"},{"lineNumber":76,"author":{"gitId":"marcuspeh"},"content":"        GroupCard card \u003d (GroupCard) other;","lastModifiedDate":"2021-09-24"},{"lineNumber":77,"author":{"gitId":"marcuspeh"},"content":"        return id.getText().equals(card.id.getText())","lastModifiedDate":"2021-09-24"},{"lineNumber":78,"author":{"gitId":"marcuspeh"},"content":"                \u0026\u0026 group.equals(card.group);","lastModifiedDate":"2021-09-24"},{"lineNumber":79,"author":{"gitId":"marcuspeh"},"content":"    }","lastModifiedDate":"2021-09-24"},{"lineNumber":80,"author":{"gitId":"marcuspeh"},"content":"}","lastModifiedDate":"2021-09-24"}],"authorContributionMap":{"marcuspeh":75,"ramapriyan912001":5}},{"path":"src/main/java/seedu/awe/ui/group/GroupListPanel.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ramapriyan912001"},"content":"package seedu.awe.ui.group;","lastModifiedDate":"2021-10-05"},{"lineNumber":2,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":3,"author":{"gitId":"marcuspeh"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2021-09-24"},{"lineNumber":4,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":5,"author":{"gitId":"marcuspeh"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-09-24"},{"lineNumber":6,"author":{"gitId":"marcuspeh"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2021-09-24"},{"lineNumber":7,"author":{"gitId":"marcuspeh"},"content":"import javafx.scene.control.ListCell;","lastModifiedDate":"2021-09-24"},{"lineNumber":8,"author":{"gitId":"marcuspeh"},"content":"import javafx.scene.control.ListView;","lastModifiedDate":"2021-09-24"},{"lineNumber":9,"author":{"gitId":"marcuspeh"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2021-09-24"},{"lineNumber":10,"author":{"gitId":"ramapriyan912001"},"content":"import seedu.awe.commons.core.LogsCenter;","lastModifiedDate":"2021-10-05"},{"lineNumber":11,"author":{"gitId":"ramapriyan912001"},"content":"import seedu.awe.model.group.Group;","lastModifiedDate":"2021-10-05"},{"lineNumber":12,"author":{"gitId":"ramapriyan912001"},"content":"import seedu.awe.ui.UiPart;","lastModifiedDate":"2021-10-05"},{"lineNumber":13,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":14,"author":{"gitId":"marcuspeh"},"content":"/**","lastModifiedDate":"2021-09-24"},{"lineNumber":15,"author":{"gitId":"marcuspeh"},"content":" * Panel containing the list of group.","lastModifiedDate":"2021-09-24"},{"lineNumber":16,"author":{"gitId":"marcuspeh"},"content":" */","lastModifiedDate":"2021-09-24"},{"lineNumber":17,"author":{"gitId":"marcuspeh"},"content":"public class GroupListPanel extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2021-09-24"},{"lineNumber":18,"author":{"gitId":"marcuspeh"},"content":"    private static final String FXML \u003d \"GroupListPanel.fxml\";","lastModifiedDate":"2021-09-24"},{"lineNumber":19,"author":{"gitId":"marcuspeh"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(GroupListPanel.class);","lastModifiedDate":"2021-09-24"},{"lineNumber":20,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":21,"author":{"gitId":"marcuspeh"},"content":"    @FXML","lastModifiedDate":"2021-09-24"},{"lineNumber":22,"author":{"gitId":"marcuspeh"},"content":"    private ListView\u003cGroup\u003e groupListView;","lastModifiedDate":"2021-09-24"},{"lineNumber":23,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":24,"author":{"gitId":"marcuspeh"},"content":"    /**","lastModifiedDate":"2021-09-24"},{"lineNumber":25,"author":{"gitId":"marcuspeh"},"content":"     * Creates a {@code GroupListPanel} with the given {@code ObservableList}.","lastModifiedDate":"2021-10-05"},{"lineNumber":26,"author":{"gitId":"marcuspeh"},"content":"     */","lastModifiedDate":"2021-09-24"},{"lineNumber":27,"author":{"gitId":"marcuspeh"},"content":"    public GroupListPanel(ObservableList\u003cGroup\u003e groupList) {","lastModifiedDate":"2021-09-24"},{"lineNumber":28,"author":{"gitId":"marcuspeh"},"content":"        super(FXML);","lastModifiedDate":"2021-09-24"},{"lineNumber":29,"author":{"gitId":"marcuspeh"},"content":"        groupListView.setItems(groupList);","lastModifiedDate":"2021-09-24"},{"lineNumber":30,"author":{"gitId":"marcuspeh"},"content":"        groupListView.setCellFactory(listView -\u003e new GroupListViewCell());","lastModifiedDate":"2021-09-24"},{"lineNumber":31,"author":{"gitId":"marcuspeh"},"content":"    }","lastModifiedDate":"2021-09-24"},{"lineNumber":32,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":33,"author":{"gitId":"marcuspeh"},"content":"    /**","lastModifiedDate":"2021-09-24"},{"lineNumber":34,"author":{"gitId":"marcuspeh"},"content":"     * Custom {@code ListCell} that displays the graphics of a {@code Group} using a {@code GroupCard}.","lastModifiedDate":"2021-09-24"},{"lineNumber":35,"author":{"gitId":"marcuspeh"},"content":"     */","lastModifiedDate":"2021-09-24"},{"lineNumber":36,"author":{"gitId":"marcuspeh"},"content":"    class GroupListViewCell extends ListCell\u003cGroup\u003e {","lastModifiedDate":"2021-09-24"},{"lineNumber":37,"author":{"gitId":"marcuspeh"},"content":"        @Override","lastModifiedDate":"2021-09-24"},{"lineNumber":38,"author":{"gitId":"marcuspeh"},"content":"        protected void updateItem(Group group, boolean empty) {","lastModifiedDate":"2021-09-24"},{"lineNumber":39,"author":{"gitId":"marcuspeh"},"content":"            super.updateItem(group, empty);","lastModifiedDate":"2021-09-24"},{"lineNumber":40,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":41,"author":{"gitId":"marcuspeh"},"content":"            if (empty || group \u003d\u003d null) {","lastModifiedDate":"2021-09-24"},{"lineNumber":42,"author":{"gitId":"marcuspeh"},"content":"                setGraphic(null);","lastModifiedDate":"2021-09-24"},{"lineNumber":43,"author":{"gitId":"marcuspeh"},"content":"                setText(null);","lastModifiedDate":"2021-09-24"},{"lineNumber":44,"author":{"gitId":"marcuspeh"},"content":"            } else {","lastModifiedDate":"2021-09-24"},{"lineNumber":45,"author":{"gitId":"marcuspeh"},"content":"                setGraphic(new GroupCard(group, getIndex() + 1).getRoot());","lastModifiedDate":"2021-09-24"},{"lineNumber":46,"author":{"gitId":"marcuspeh"},"content":"            }","lastModifiedDate":"2021-09-24"},{"lineNumber":47,"author":{"gitId":"marcuspeh"},"content":"        }","lastModifiedDate":"2021-09-24"},{"lineNumber":48,"author":{"gitId":"marcuspeh"},"content":"    }","lastModifiedDate":"2021-09-24"},{"lineNumber":49,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":50,"author":{"gitId":"marcuspeh"},"content":"}","lastModifiedDate":"2021-09-24"}],"authorContributionMap":{"marcuspeh":46,"ramapriyan912001":4}},{"path":"src/main/java/seedu/awe/ui/listener/ContactButtonListener.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ramapriyan912001"},"content":"package seedu.awe.ui.listener;","lastModifiedDate":"2021-10-05"},{"lineNumber":2,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":3,"author":{"gitId":"marcuspeh"},"content":"import javafx.event.ActionEvent;","lastModifiedDate":"2021-09-29"},{"lineNumber":4,"author":{"gitId":"marcuspeh"},"content":"import javafx.event.EventHandler;","lastModifiedDate":"2021-09-29"},{"lineNumber":5,"author":{"gitId":"ramapriyan912001"},"content":"import seedu.awe.ui.UiView;","lastModifiedDate":"2021-10-05"},{"lineNumber":6,"author":{"gitId":"ramapriyan912001"},"content":"import seedu.awe.ui.ViewPanel;","lastModifiedDate":"2021-10-05"},{"lineNumber":7,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":8,"author":{"gitId":"marcuspeh"},"content":"public class ContactButtonListener implements EventHandler\u003cActionEvent\u003e {","lastModifiedDate":"2021-10-22"},{"lineNumber":9,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":10,"author":{"gitId":"marcuspeh"},"content":"    private ViewPanel viewPanel;","lastModifiedDate":"2021-09-29"},{"lineNumber":11,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":12,"author":{"gitId":"marcuspeh"},"content":"    public ContactButtonListener(ViewPanel viewPanel) {","lastModifiedDate":"2021-10-22"},{"lineNumber":13,"author":{"gitId":"marcuspeh"},"content":"        this.viewPanel \u003d viewPanel;","lastModifiedDate":"2021-09-29"},{"lineNumber":14,"author":{"gitId":"marcuspeh"},"content":"    }","lastModifiedDate":"2021-09-29"},{"lineNumber":15,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":16,"author":{"gitId":"marcuspeh"},"content":"    /**","lastModifiedDate":"2021-09-29"},{"lineNumber":17,"author":{"gitId":"marcuspeh"},"content":"     * Invoked when a specific event of the type for which this handler is","lastModifiedDate":"2021-09-29"},{"lineNumber":18,"author":{"gitId":"marcuspeh"},"content":"     * registered happens.","lastModifiedDate":"2021-09-29"},{"lineNumber":19,"author":{"gitId":"marcuspeh"},"content":"     *","lastModifiedDate":"2021-09-29"},{"lineNumber":20,"author":{"gitId":"marcuspeh"},"content":"     * @param event the event which occurred","lastModifiedDate":"2021-09-29"},{"lineNumber":21,"author":{"gitId":"marcuspeh"},"content":"     */","lastModifiedDate":"2021-09-29"},{"lineNumber":22,"author":{"gitId":"marcuspeh"},"content":"    @Override","lastModifiedDate":"2021-09-29"},{"lineNumber":23,"author":{"gitId":"marcuspeh"},"content":"    public void handle(ActionEvent event) {","lastModifiedDate":"2021-09-29"},{"lineNumber":24,"author":{"gitId":"marcuspeh"},"content":"        viewPanel.toggleView(UiView.CONTACT_PAGE);","lastModifiedDate":"2021-10-22"},{"lineNumber":25,"author":{"gitId":"marcuspeh"},"content":"    }","lastModifiedDate":"2021-09-29"},{"lineNumber":26,"author":{"gitId":"marcuspeh"},"content":"}","lastModifiedDate":"2021-09-29"}],"authorContributionMap":{"marcuspeh":23,"ramapriyan912001":3}},{"path":"src/main/java/seedu/awe/ui/listener/GroupButtonListener.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ramapriyan912001"},"content":"package seedu.awe.ui.listener;","lastModifiedDate":"2021-10-05"},{"lineNumber":2,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":3,"author":{"gitId":"marcuspeh"},"content":"import javafx.event.ActionEvent;","lastModifiedDate":"2021-09-29"},{"lineNumber":4,"author":{"gitId":"marcuspeh"},"content":"import javafx.event.EventHandler;","lastModifiedDate":"2021-09-29"},{"lineNumber":5,"author":{"gitId":"ramapriyan912001"},"content":"import seedu.awe.ui.UiView;","lastModifiedDate":"2021-10-05"},{"lineNumber":6,"author":{"gitId":"ramapriyan912001"},"content":"import seedu.awe.ui.ViewPanel;","lastModifiedDate":"2021-10-05"},{"lineNumber":7,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":8,"author":{"gitId":"marcuspeh"},"content":"public class GroupButtonListener implements EventHandler\u003cActionEvent\u003e {","lastModifiedDate":"2021-09-29"},{"lineNumber":9,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":10,"author":{"gitId":"marcuspeh"},"content":"    private ViewPanel viewPanel;","lastModifiedDate":"2021-09-29"},{"lineNumber":11,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":12,"author":{"gitId":"marcuspeh"},"content":"    public GroupButtonListener(ViewPanel viewPanel) {","lastModifiedDate":"2021-09-29"},{"lineNumber":13,"author":{"gitId":"marcuspeh"},"content":"        this.viewPanel \u003d viewPanel;","lastModifiedDate":"2021-09-29"},{"lineNumber":14,"author":{"gitId":"marcuspeh"},"content":"    }","lastModifiedDate":"2021-09-29"},{"lineNumber":15,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":16,"author":{"gitId":"marcuspeh"},"content":"    /**","lastModifiedDate":"2021-09-29"},{"lineNumber":17,"author":{"gitId":"marcuspeh"},"content":"     * Invoked when a specific event of the type for which this handler is","lastModifiedDate":"2021-09-29"},{"lineNumber":18,"author":{"gitId":"marcuspeh"},"content":"     * registered happens.","lastModifiedDate":"2021-09-29"},{"lineNumber":19,"author":{"gitId":"marcuspeh"},"content":"     *","lastModifiedDate":"2021-09-29"},{"lineNumber":20,"author":{"gitId":"marcuspeh"},"content":"     * @param event the event which occurred","lastModifiedDate":"2021-09-29"},{"lineNumber":21,"author":{"gitId":"marcuspeh"},"content":"     */","lastModifiedDate":"2021-09-29"},{"lineNumber":22,"author":{"gitId":"marcuspeh"},"content":"    @Override","lastModifiedDate":"2021-09-29"},{"lineNumber":23,"author":{"gitId":"marcuspeh"},"content":"    public void handle(ActionEvent event) {","lastModifiedDate":"2021-09-29"},{"lineNumber":24,"author":{"gitId":"marcuspeh"},"content":"        viewPanel.toggleView(UiView.GROUP_PAGE);","lastModifiedDate":"2021-09-29"},{"lineNumber":25,"author":{"gitId":"marcuspeh"},"content":"    }","lastModifiedDate":"2021-09-29"},{"lineNumber":26,"author":{"gitId":"marcuspeh"},"content":"}","lastModifiedDate":"2021-09-29"}],"authorContributionMap":{"marcuspeh":23,"ramapriyan912001":3}},{"path":"src/main/java/seedu/awe/ui/payment/PaymentCard.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ramapriyan912001"},"content":"package seedu.awe.ui.payment;","lastModifiedDate":"2021-10-21"},{"lineNumber":2,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":3,"author":{"gitId":"ramapriyan912001"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2021-10-21"},{"lineNumber":4,"author":{"gitId":"ramapriyan912001"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2021-10-21"},{"lineNumber":5,"author":{"gitId":"ramapriyan912001"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2021-10-21"},{"lineNumber":6,"author":{"gitId":"ramapriyan912001"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2021-10-21"},{"lineNumber":7,"author":{"gitId":"ramapriyan912001"},"content":"import seedu.awe.model.payment.Payment;","lastModifiedDate":"2021-10-21"},{"lineNumber":8,"author":{"gitId":"ramapriyan912001"},"content":"import seedu.awe.ui.UiPart;","lastModifiedDate":"2021-10-21"},{"lineNumber":9,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":10,"author":{"gitId":"ramapriyan912001"},"content":"public class PaymentCard extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2021-10-21"},{"lineNumber":11,"author":{"gitId":"ramapriyan912001"},"content":"    private static final String FXML \u003d \"PaymentListCard.fxml\";","lastModifiedDate":"2021-10-21"},{"lineNumber":12,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":13,"author":{"gitId":"ramapriyan912001"},"content":"    /**","lastModifiedDate":"2021-10-21"},{"lineNumber":14,"author":{"gitId":"ramapriyan912001"},"content":"     * Note: Certain keywords such as \"location\" and \"resources\" are reserved keywords in JavaFX.","lastModifiedDate":"2021-10-21"},{"lineNumber":15,"author":{"gitId":"ramapriyan912001"},"content":"     * As a consequence, UI elements\u0027 variable names cannot be set to such keywords","lastModifiedDate":"2021-10-21"},{"lineNumber":16,"author":{"gitId":"ramapriyan912001"},"content":"     * or an exception will be thrown by JavaFX during runtime.","lastModifiedDate":"2021-10-21"},{"lineNumber":17,"author":{"gitId":"ramapriyan912001"},"content":"     *","lastModifiedDate":"2021-10-21"},{"lineNumber":18,"author":{"gitId":"ramapriyan912001"},"content":"     * @see \u003ca href\u003d\"https://github.com/se-edu/addressbook-level4/issues/336\"\u003eThe issue on AddressBook level 4\u003c/a\u003e","lastModifiedDate":"2021-10-21"},{"lineNumber":19,"author":{"gitId":"ramapriyan912001"},"content":"     */","lastModifiedDate":"2021-10-21"},{"lineNumber":20,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":21,"author":{"gitId":"ramapriyan912001"},"content":"    public final Payment payment;","lastModifiedDate":"2021-10-21"},{"lineNumber":22,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":23,"author":{"gitId":"ramapriyan912001"},"content":"    @javafx.fxml.FXML","lastModifiedDate":"2021-10-21"},{"lineNumber":24,"author":{"gitId":"ramapriyan912001"},"content":"    private HBox cardPane;","lastModifiedDate":"2021-10-21"},{"lineNumber":25,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":26,"author":{"gitId":"ramapriyan912001"},"content":"    @FXML","lastModifiedDate":"2021-10-21"},{"lineNumber":27,"author":{"gitId":"ramapriyan912001"},"content":"    private Label id;","lastModifiedDate":"2021-10-21"},{"lineNumber":28,"author":{"gitId":"ramapriyan912001"},"content":"    @FXML","lastModifiedDate":"2021-10-21"},{"lineNumber":29,"author":{"gitId":"ramapriyan912001"},"content":"    private Label paymentText;","lastModifiedDate":"2021-10-21"},{"lineNumber":30,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":31,"author":{"gitId":"ramapriyan912001"},"content":"    /**","lastModifiedDate":"2021-10-21"},{"lineNumber":32,"author":{"gitId":"ramapriyan912001"},"content":"     * Creates an {@code Payment} with the given {@code Payment} and index to display.","lastModifiedDate":"2021-10-21"},{"lineNumber":33,"author":{"gitId":"ramapriyan912001"},"content":"     */","lastModifiedDate":"2021-10-21"},{"lineNumber":34,"author":{"gitId":"ramapriyan912001"},"content":"    public PaymentCard(Payment payment, int displayedIndex) {","lastModifiedDate":"2021-10-21"},{"lineNumber":35,"author":{"gitId":"ramapriyan912001"},"content":"        super(FXML);","lastModifiedDate":"2021-10-21"},{"lineNumber":36,"author":{"gitId":"ramapriyan912001"},"content":"        this.payment \u003d payment;","lastModifiedDate":"2021-10-21"},{"lineNumber":37,"author":{"gitId":"ramapriyan912001"},"content":"        id.setText(displayedIndex + \".\");","lastModifiedDate":"2021-10-21"},{"lineNumber":38,"author":{"gitId":"ramapriyan912001"},"content":"        paymentText.setText(payment.toString());","lastModifiedDate":"2021-10-21"},{"lineNumber":39,"author":{"gitId":"ramapriyan912001"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":40,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":41,"author":{"gitId":"ramapriyan912001"},"content":"    @Override","lastModifiedDate":"2021-10-21"},{"lineNumber":42,"author":{"gitId":"ramapriyan912001"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-21"},{"lineNumber":43,"author":{"gitId":"ramapriyan912001"},"content":"        // short circuit if same object","lastModifiedDate":"2021-10-21"},{"lineNumber":44,"author":{"gitId":"ramapriyan912001"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2021-10-21"},{"lineNumber":45,"author":{"gitId":"ramapriyan912001"},"content":"            return true;","lastModifiedDate":"2021-10-21"},{"lineNumber":46,"author":{"gitId":"ramapriyan912001"},"content":"        }","lastModifiedDate":"2021-10-21"},{"lineNumber":47,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":48,"author":{"gitId":"ramapriyan912001"},"content":"        // instanceof handles nulls","lastModifiedDate":"2021-10-21"},{"lineNumber":49,"author":{"gitId":"ramapriyan912001"},"content":"        if (!(other instanceof PaymentCard)) {","lastModifiedDate":"2021-10-21"},{"lineNumber":50,"author":{"gitId":"ramapriyan912001"},"content":"            return false;","lastModifiedDate":"2021-10-21"},{"lineNumber":51,"author":{"gitId":"ramapriyan912001"},"content":"        }","lastModifiedDate":"2021-10-21"},{"lineNumber":52,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":53,"author":{"gitId":"ramapriyan912001"},"content":"        // state check","lastModifiedDate":"2021-10-21"},{"lineNumber":54,"author":{"gitId":"ramapriyan912001"},"content":"        PaymentCard card \u003d (PaymentCard) other;","lastModifiedDate":"2021-10-21"},{"lineNumber":55,"author":{"gitId":"ramapriyan912001"},"content":"        return id.getText().equals(card.id.getText())","lastModifiedDate":"2021-10-21"},{"lineNumber":56,"author":{"gitId":"ramapriyan912001"},"content":"                \u0026\u0026 payment.equals(card.payment);","lastModifiedDate":"2021-10-21"},{"lineNumber":57,"author":{"gitId":"ramapriyan912001"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":58,"author":{"gitId":"ramapriyan912001"},"content":"}","lastModifiedDate":"2021-10-21"}],"authorContributionMap":{"ramapriyan912001":58}},{"path":"src/main/java/seedu/awe/ui/payment/PaymentListPanel.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ramapriyan912001"},"content":"package seedu.awe.ui.payment;","lastModifiedDate":"2021-10-21"},{"lineNumber":2,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":3,"author":{"gitId":"ramapriyan912001"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2021-10-21"},{"lineNumber":4,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":5,"author":{"gitId":"ramapriyan912001"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-10-21"},{"lineNumber":6,"author":{"gitId":"ramapriyan912001"},"content":"import javafx.scene.control.ListCell;","lastModifiedDate":"2021-10-21"},{"lineNumber":7,"author":{"gitId":"ramapriyan912001"},"content":"import javafx.scene.control.ListView;","lastModifiedDate":"2021-10-21"},{"lineNumber":8,"author":{"gitId":"ramapriyan912001"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2021-10-21"},{"lineNumber":9,"author":{"gitId":"ramapriyan912001"},"content":"import seedu.awe.commons.core.LogsCenter;","lastModifiedDate":"2021-10-21"},{"lineNumber":10,"author":{"gitId":"ramapriyan912001"},"content":"import seedu.awe.model.payment.Payment;","lastModifiedDate":"2021-10-21"},{"lineNumber":11,"author":{"gitId":"ramapriyan912001"},"content":"import seedu.awe.ui.UiPart;","lastModifiedDate":"2021-10-21"},{"lineNumber":12,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":13,"author":{"gitId":"ramapriyan912001"},"content":"public class PaymentListPanel extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2021-10-21"},{"lineNumber":14,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":15,"author":{"gitId":"ramapriyan912001"},"content":"    private static final String FXML \u003d \"PaymentListPanel.fxml\";","lastModifiedDate":"2021-10-21"},{"lineNumber":16,"author":{"gitId":"ramapriyan912001"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(PaymentListPanel.class);","lastModifiedDate":"2021-10-21"},{"lineNumber":17,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":18,"author":{"gitId":"ramapriyan912001"},"content":"    @javafx.fxml.FXML","lastModifiedDate":"2021-10-21"},{"lineNumber":19,"author":{"gitId":"ramapriyan912001"},"content":"    private ListView\u003cPayment\u003e paymentListView;","lastModifiedDate":"2021-10-21"},{"lineNumber":20,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":21,"author":{"gitId":"ramapriyan912001"},"content":"    /**","lastModifiedDate":"2021-10-21"},{"lineNumber":22,"author":{"gitId":"ramapriyan912001"},"content":"     * Creates an {@code PaymentListPanel} with the given {@code ObservableList}.","lastModifiedDate":"2021-10-21"},{"lineNumber":23,"author":{"gitId":"ramapriyan912001"},"content":"     */","lastModifiedDate":"2021-10-21"},{"lineNumber":24,"author":{"gitId":"ramapriyan912001"},"content":"    public PaymentListPanel(ObservableList\u003cPayment\u003e paymentList) {","lastModifiedDate":"2021-10-21"},{"lineNumber":25,"author":{"gitId":"ramapriyan912001"},"content":"        super(FXML);","lastModifiedDate":"2021-10-21"},{"lineNumber":26,"author":{"gitId":"ramapriyan912001"},"content":"        paymentListView.setItems(paymentList);","lastModifiedDate":"2021-10-21"},{"lineNumber":27,"author":{"gitId":"ramapriyan912001"},"content":"        paymentListView.setCellFactory(listView -\u003e new PaymentListPanel.PaymentListViewCell());","lastModifiedDate":"2021-10-21"},{"lineNumber":28,"author":{"gitId":"ramapriyan912001"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":29,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":30,"author":{"gitId":"ramapriyan912001"},"content":"    /**","lastModifiedDate":"2021-10-21"},{"lineNumber":31,"author":{"gitId":"ramapriyan912001"},"content":"     * Custom {@code PaymentListCell} that displays the graphics of","lastModifiedDate":"2021-10-21"},{"lineNumber":32,"author":{"gitId":"ramapriyan912001"},"content":"     * a {@code Payment} using a {@code PaymentCard}.","lastModifiedDate":"2021-10-21"},{"lineNumber":33,"author":{"gitId":"ramapriyan912001"},"content":"     */","lastModifiedDate":"2021-10-21"},{"lineNumber":34,"author":{"gitId":"ramapriyan912001"},"content":"    class PaymentListViewCell extends ListCell\u003cPayment\u003e {","lastModifiedDate":"2021-10-21"},{"lineNumber":35,"author":{"gitId":"ramapriyan912001"},"content":"        @Override","lastModifiedDate":"2021-10-21"},{"lineNumber":36,"author":{"gitId":"ramapriyan912001"},"content":"        protected void updateItem(Payment payment, boolean empty) {","lastModifiedDate":"2021-10-21"},{"lineNumber":37,"author":{"gitId":"ramapriyan912001"},"content":"            super.updateItem(payment, empty);","lastModifiedDate":"2021-10-21"},{"lineNumber":38,"author":{"gitId":"ramapriyan912001"},"content":"            if (empty || payment \u003d\u003d null) {","lastModifiedDate":"2021-10-21"},{"lineNumber":39,"author":{"gitId":"ramapriyan912001"},"content":"                setGraphic(null);","lastModifiedDate":"2021-10-21"},{"lineNumber":40,"author":{"gitId":"ramapriyan912001"},"content":"                setText(null);","lastModifiedDate":"2021-10-21"},{"lineNumber":41,"author":{"gitId":"ramapriyan912001"},"content":"            } else {","lastModifiedDate":"2021-10-21"},{"lineNumber":42,"author":{"gitId":"ramapriyan912001"},"content":"                setGraphic(new PaymentCard(payment, getIndex() + 1).getRoot());","lastModifiedDate":"2021-10-21"},{"lineNumber":43,"author":{"gitId":"ramapriyan912001"},"content":"            }","lastModifiedDate":"2021-10-21"},{"lineNumber":44,"author":{"gitId":"ramapriyan912001"},"content":"        }","lastModifiedDate":"2021-10-21"},{"lineNumber":45,"author":{"gitId":"ramapriyan912001"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":46,"author":{"gitId":"ramapriyan912001"},"content":"}","lastModifiedDate":"2021-10-21"}],"authorContributionMap":{"ramapriyan912001":46}},{"path":"src/main/java/seedu/awe/ui/person/ContactCard.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ramapriyan912001"},"content":"package seedu.awe.ui.person;","lastModifiedDate":"2021-10-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Comparator;","lastModifiedDate":"2019-01-02"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-01-02"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-09-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2016-09-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.layout.FlowPane;","lastModifiedDate":"2016-12-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2016-09-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":10,"author":{"gitId":"ramapriyan912001"},"content":"import seedu.awe.model.ReadOnlyAddressBook;","lastModifiedDate":"2021-10-05"},{"lineNumber":11,"author":{"gitId":"ramapriyan912001"},"content":"import seedu.awe.model.person.Person;","lastModifiedDate":"2021-10-05"},{"lineNumber":12,"author":{"gitId":"ramapriyan912001"},"content":"import seedu.awe.ui.UiPart;","lastModifiedDate":"2021-10-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":15,"author":{"gitId":"chrus-chong"},"content":" * A UI component that displays information of a {@code Person}.","lastModifiedDate":"2021-10-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":17,"author":{"gitId":"marcuspeh"},"content":"public class ContactCard extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2021-10-22"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"PersonListCard.fxml\";","lastModifiedDate":"2016-09-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * Note: Certain keywords such as \"location\" and \"resources\" are reserved keywords in JavaFX.","lastModifiedDate":"2017-03-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * As a consequence, UI elements\u0027 variable names cannot be set to such keywords","lastModifiedDate":"2017-03-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * or an exception will be thrown by JavaFX during runtime.","lastModifiedDate":"2017-03-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * @see \u003ca href\u003d\"https://github.com/se-edu/addressbook-level4/issues/336\"\u003eThe issue on AddressBook level 4\u003c/a\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public final Person person;","lastModifiedDate":"2018-01-10"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private HBox cardPane;","lastModifiedDate":"2016-09-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private Label name;","lastModifiedDate":"2016-09-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private Label id;","lastModifiedDate":"2016-09-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private Label phone;","lastModifiedDate":"2016-09-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":40,"author":{"gitId":"chrus-chong"},"content":"    private Label groups;","lastModifiedDate":"2021-09-18"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2021-09-18"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    private FlowPane tags;","lastModifiedDate":"2016-12-18"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * Creates a {@code PersonCode} with the given {@code Person} and index to display.","lastModifiedDate":"2020-05-27"},{"lineNumber":46,"author":{"gitId":"chrus-chong"},"content":"     *","lastModifiedDate":"2021-10-03"},{"lineNumber":47,"author":{"gitId":"chrus-chong"},"content":"     * Introduce addressbook here so that personCard can display group membership of each person without adding Group","lastModifiedDate":"2021-10-03"},{"lineNumber":48,"author":{"gitId":"chrus-chong"},"content":"     * as an attribute of Person class. Doing so prevents circular dependencies.","lastModifiedDate":"2021-10-03"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":50,"author":{"gitId":"marcuspeh"},"content":"    public ContactCard(Person person, int displayedIndex, ReadOnlyAddressBook addressBook) {","lastModifiedDate":"2021-10-22"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2016-12-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        this.person \u003d person;","lastModifiedDate":"2017-07-12"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        id.setText(displayedIndex + \". \");","lastModifiedDate":"2016-09-21"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        name.setText(person.getName().fullName);","lastModifiedDate":"2017-12-20"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        phone.setText(person.getPhone().value);","lastModifiedDate":"2017-12-20"},{"lineNumber":56,"author":{"gitId":"chrus-chong"},"content":"        groups.setText(person.getGroupsName(addressBook.getGroupList()));","lastModifiedDate":"2021-10-03"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        person.getTags().stream()","lastModifiedDate":"2019-01-02"},{"lineNumber":58,"author":{"gitId":"-"},"content":"                .sorted(Comparator.comparing(tag -\u003e tag.tagName))","lastModifiedDate":"2019-01-02"},{"lineNumber":59,"author":{"gitId":"-"},"content":"                .forEach(tag -\u003e tags.getChildren().add(new Label(tag.tagName)));","lastModifiedDate":"2019-01-02"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-18"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-14"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-07-14"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-07-14"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2017-07-14"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2017-07-14"},{"lineNumber":66,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-07-14"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-07-14"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-14"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-07-14"},{"lineNumber":70,"author":{"gitId":"marcuspeh"},"content":"        if (!(other instanceof ContactCard)) {","lastModifiedDate":"2021-10-22"},{"lineNumber":71,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-07-14"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-07-14"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-14"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2017-07-14"},{"lineNumber":75,"author":{"gitId":"marcuspeh"},"content":"        ContactCard card \u003d (ContactCard) other;","lastModifiedDate":"2021-10-22"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        return id.getText().equals(card.id.getText())","lastModifiedDate":"2017-07-14"},{"lineNumber":77,"author":{"gitId":"-"},"content":"                \u0026\u0026 person.equals(card.person);","lastModifiedDate":"2017-07-14"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-14"},{"lineNumber":79,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"marcuspeh":4,"chrus-chong":6,"ramapriyan912001":4,"-":65}},{"path":"src/main/java/seedu/awe/ui/person/ContactListPanel.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ramapriyan912001"},"content":"package seedu.awe.ui.person;","lastModifiedDate":"2021-10-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-08-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-08-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.ListCell;","lastModifiedDate":"2016-09-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.control.ListView;","lastModifiedDate":"2016-08-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":10,"author":{"gitId":"ramapriyan912001"},"content":"import seedu.awe.commons.core.LogsCenter;","lastModifiedDate":"2021-10-05"},{"lineNumber":11,"author":{"gitId":"ramapriyan912001"},"content":"import seedu.awe.model.ReadOnlyAddressBook;","lastModifiedDate":"2021-10-05"},{"lineNumber":12,"author":{"gitId":"ramapriyan912001"},"content":"import seedu.awe.model.person.Person;","lastModifiedDate":"2021-10-05"},{"lineNumber":13,"author":{"gitId":"ramapriyan912001"},"content":"import seedu.awe.ui.UiPart;","lastModifiedDate":"2021-10-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * Panel containing the list of persons.","lastModifiedDate":"2016-09-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":18,"author":{"gitId":"marcuspeh"},"content":"public class ContactListPanel extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2021-10-22"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"PersonListPanel.fxml\";","lastModifiedDate":"2016-09-14"},{"lineNumber":20,"author":{"gitId":"marcuspeh"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(ContactListPanel.class);","lastModifiedDate":"2021-10-22"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private ListView\u003cPerson\u003e personListView;","lastModifiedDate":"2018-02-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * Creates a {@code PersonListPanel} with the given {@code ObservableList}.","lastModifiedDate":"2020-05-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":28,"author":{"gitId":"marcuspeh"},"content":"    public ContactListPanel(ObservableList\u003cPerson\u003e personList, ReadOnlyAddressBook addressBook) {","lastModifiedDate":"2021-10-22"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2016-12-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        personListView.setItems(personList);","lastModifiedDate":"2018-02-08"},{"lineNumber":31,"author":{"gitId":"chrus-chong"},"content":"        personListView.setCellFactory(listView -\u003e new PersonListViewCell(addressBook));","lastModifiedDate":"2021-10-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Custom {@code ListCell} that displays the graphics of a {@code Person} using a {@code PersonCard}.","lastModifiedDate":"2018-02-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    class PersonListViewCell extends ListCell\u003cPerson\u003e {","lastModifiedDate":"2018-02-08"},{"lineNumber":38,"author":{"gitId":"chrus-chong"},"content":"        private final ReadOnlyAddressBook addressBook;","lastModifiedDate":"2021-10-03"},{"lineNumber":39,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":40,"author":{"gitId":"chrus-chong"},"content":"        public PersonListViewCell(ReadOnlyAddressBook addressBook) {","lastModifiedDate":"2021-10-03"},{"lineNumber":41,"author":{"gitId":"chrus-chong"},"content":"            this.addressBook \u003d addressBook;","lastModifiedDate":"2021-10-03"},{"lineNumber":42,"author":{"gitId":"chrus-chong"},"content":"        }","lastModifiedDate":"2021-10-03"},{"lineNumber":43,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":45,"author":{"gitId":"marcuspeh"},"content":"        protected void updateItem(Person person, boolean isEmpty) {","lastModifiedDate":"2021-10-05"},{"lineNumber":46,"author":{"gitId":"marcuspeh"},"content":"            super.updateItem(person, isEmpty);","lastModifiedDate":"2021-10-05"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":48,"author":{"gitId":"marcuspeh"},"content":"            if (isEmpty || person \u003d\u003d null) {","lastModifiedDate":"2021-10-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"                setGraphic(null);","lastModifiedDate":"2016-09-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"                setText(null);","lastModifiedDate":"2016-09-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            } else {","lastModifiedDate":"2016-09-21"},{"lineNumber":52,"author":{"gitId":"marcuspeh"},"content":"                setGraphic(new ContactCard(person, getIndex() + 1, this.addressBook).getRoot());","lastModifiedDate":"2021-10-22"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-09-21"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"marcuspeh":7,"chrus-chong":7,"ramapriyan912001":5,"-":38}},{"path":"src/main/java/seedu/awe/ui/transactionsummary/TransactionSummaryCard.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Jingwencloud"},"content":"package seedu.awe.ui.transactionsummary;","lastModifiedDate":"2021-10-21"},{"lineNumber":2,"author":{"gitId":"Jingwencloud"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":3,"author":{"gitId":"Jingwencloud"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2021-10-21"},{"lineNumber":4,"author":{"gitId":"Jingwencloud"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2021-10-21"},{"lineNumber":5,"author":{"gitId":"Jingwencloud"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2021-10-21"},{"lineNumber":6,"author":{"gitId":"Jingwencloud"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2021-10-21"},{"lineNumber":7,"author":{"gitId":"Jingwencloud"},"content":"import seedu.awe.model.transactionsummary.TransactionSummary;","lastModifiedDate":"2021-10-21"},{"lineNumber":8,"author":{"gitId":"Jingwencloud"},"content":"import seedu.awe.ui.UiPart;","lastModifiedDate":"2021-10-21"},{"lineNumber":9,"author":{"gitId":"Jingwencloud"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":10,"author":{"gitId":"Jingwencloud"},"content":"public class TransactionSummaryCard extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2021-10-21"},{"lineNumber":11,"author":{"gitId":"Jingwencloud"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":12,"author":{"gitId":"Jingwencloud"},"content":"    private static final String FXML \u003d \"TransactionSummaryListCard.fxml\";","lastModifiedDate":"2021-10-21"},{"lineNumber":13,"author":{"gitId":"Jingwencloud"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":14,"author":{"gitId":"Jingwencloud"},"content":"    /**","lastModifiedDate":"2021-10-21"},{"lineNumber":15,"author":{"gitId":"Jingwencloud"},"content":"     * Note: Certain keywords such as \"location\" and \"resources\" are reserved keywords in JavaFX.","lastModifiedDate":"2021-10-21"},{"lineNumber":16,"author":{"gitId":"Jingwencloud"},"content":"     * As a consequence, UI elements\u0027 variable names cannot be set to such keywords","lastModifiedDate":"2021-10-21"},{"lineNumber":17,"author":{"gitId":"Jingwencloud"},"content":"     * or an exception will be thrown by JavaFX during runtime.","lastModifiedDate":"2021-10-21"},{"lineNumber":18,"author":{"gitId":"Jingwencloud"},"content":"     *","lastModifiedDate":"2021-10-21"},{"lineNumber":19,"author":{"gitId":"Jingwencloud"},"content":"     * @see \u003ca href\u003d\"https://github.com/se-edu/addressbook-level4/issues/336\"\u003eThe issue on AddressBook level 4\u003c/a\u003e","lastModifiedDate":"2021-10-21"},{"lineNumber":20,"author":{"gitId":"Jingwencloud"},"content":"     */","lastModifiedDate":"2021-10-21"},{"lineNumber":21,"author":{"gitId":"Jingwencloud"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":22,"author":{"gitId":"Jingwencloud"},"content":"    public final TransactionSummary transactionSummary;","lastModifiedDate":"2021-10-21"},{"lineNumber":23,"author":{"gitId":"Jingwencloud"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":24,"author":{"gitId":"Jingwencloud"},"content":"    @javafx.fxml.FXML","lastModifiedDate":"2021-10-21"},{"lineNumber":25,"author":{"gitId":"Jingwencloud"},"content":"    private HBox cardPane;","lastModifiedDate":"2021-10-21"},{"lineNumber":26,"author":{"gitId":"Jingwencloud"},"content":"    @FXML","lastModifiedDate":"2021-10-21"},{"lineNumber":27,"author":{"gitId":"Jingwencloud"},"content":"    private Label payer;","lastModifiedDate":"2021-10-21"},{"lineNumber":28,"author":{"gitId":"Jingwencloud"},"content":"    @FXML","lastModifiedDate":"2021-10-21"},{"lineNumber":29,"author":{"gitId":"Jingwencloud"},"content":"    private Label id;","lastModifiedDate":"2021-10-21"},{"lineNumber":30,"author":{"gitId":"Jingwencloud"},"content":"    @FXML","lastModifiedDate":"2021-10-21"},{"lineNumber":31,"author":{"gitId":"Jingwencloud"},"content":"    private Label cost;","lastModifiedDate":"2021-10-21"},{"lineNumber":32,"author":{"gitId":"Jingwencloud"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":33,"author":{"gitId":"Jingwencloud"},"content":"    /**","lastModifiedDate":"2021-10-21"},{"lineNumber":34,"author":{"gitId":"Jingwencloud"},"content":"     * Creates an {@code TransactionSummaryCard} with the given {@code TransactionSummary} and index to display.","lastModifiedDate":"2021-10-21"},{"lineNumber":35,"author":{"gitId":"Jingwencloud"},"content":"     */","lastModifiedDate":"2021-10-21"},{"lineNumber":36,"author":{"gitId":"Jingwencloud"},"content":"    public TransactionSummaryCard(TransactionSummary transactionSummary, int displayedIndex) {","lastModifiedDate":"2021-10-21"},{"lineNumber":37,"author":{"gitId":"Jingwencloud"},"content":"        super(FXML);","lastModifiedDate":"2021-10-21"},{"lineNumber":38,"author":{"gitId":"Jingwencloud"},"content":"        this.transactionSummary \u003d transactionSummary;","lastModifiedDate":"2021-10-21"},{"lineNumber":39,"author":{"gitId":"Jingwencloud"},"content":"        id.setText(displayedIndex + \".\");","lastModifiedDate":"2021-10-21"},{"lineNumber":40,"author":{"gitId":"Jingwencloud"},"content":"        payer.setText(transactionSummary.getPerson().getName().toString());","lastModifiedDate":"2021-10-21"},{"lineNumber":41,"author":{"gitId":"Jingwencloud"},"content":"        cost.setText(transactionSummary.getCost().toString());","lastModifiedDate":"2021-10-21"},{"lineNumber":42,"author":{"gitId":"Jingwencloud"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":43,"author":{"gitId":"Jingwencloud"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":44,"author":{"gitId":"Jingwencloud"},"content":"    @Override","lastModifiedDate":"2021-10-21"},{"lineNumber":45,"author":{"gitId":"Jingwencloud"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-21"},{"lineNumber":46,"author":{"gitId":"Jingwencloud"},"content":"        // short circuit if same object","lastModifiedDate":"2021-10-21"},{"lineNumber":47,"author":{"gitId":"Jingwencloud"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2021-10-21"},{"lineNumber":48,"author":{"gitId":"Jingwencloud"},"content":"            return true;","lastModifiedDate":"2021-10-21"},{"lineNumber":49,"author":{"gitId":"Jingwencloud"},"content":"        }","lastModifiedDate":"2021-10-21"},{"lineNumber":50,"author":{"gitId":"Jingwencloud"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":51,"author":{"gitId":"Jingwencloud"},"content":"        // instanceof handles nulls","lastModifiedDate":"2021-10-21"},{"lineNumber":52,"author":{"gitId":"ramapriyan912001"},"content":"        if (!(other instanceof TransactionSummaryCard)) {","lastModifiedDate":"2021-10-21"},{"lineNumber":53,"author":{"gitId":"Jingwencloud"},"content":"            return false;","lastModifiedDate":"2021-10-21"},{"lineNumber":54,"author":{"gitId":"Jingwencloud"},"content":"        }","lastModifiedDate":"2021-10-21"},{"lineNumber":55,"author":{"gitId":"Jingwencloud"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":56,"author":{"gitId":"Jingwencloud"},"content":"        // state check","lastModifiedDate":"2021-10-21"},{"lineNumber":57,"author":{"gitId":"Jingwencloud"},"content":"        TransactionSummaryCard card \u003d (TransactionSummaryCard) other;","lastModifiedDate":"2021-10-21"},{"lineNumber":58,"author":{"gitId":"Jingwencloud"},"content":"        return id.getText().equals(card.id.getText())","lastModifiedDate":"2021-10-21"},{"lineNumber":59,"author":{"gitId":"Jingwencloud"},"content":"                   \u0026\u0026 transactionSummary.equals(card.transactionSummary);","lastModifiedDate":"2021-10-21"},{"lineNumber":60,"author":{"gitId":"Jingwencloud"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":61,"author":{"gitId":"Jingwencloud"},"content":"}","lastModifiedDate":"2021-10-21"}],"authorContributionMap":{"Jingwencloud":60,"ramapriyan912001":1}},{"path":"src/main/java/seedu/awe/ui/transactionsummary/TransactionSummaryListPanel.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Jingwencloud"},"content":"package seedu.awe.ui.transactionsummary;","lastModifiedDate":"2021-10-21"},{"lineNumber":2,"author":{"gitId":"Jingwencloud"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":3,"author":{"gitId":"Jingwencloud"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2021-10-21"},{"lineNumber":4,"author":{"gitId":"Jingwencloud"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":5,"author":{"gitId":"Jingwencloud"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-10-21"},{"lineNumber":6,"author":{"gitId":"Jingwencloud"},"content":"import javafx.scene.control.ListCell;","lastModifiedDate":"2021-10-21"},{"lineNumber":7,"author":{"gitId":"Jingwencloud"},"content":"import javafx.scene.control.ListView;","lastModifiedDate":"2021-10-21"},{"lineNumber":8,"author":{"gitId":"Jingwencloud"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2021-10-21"},{"lineNumber":9,"author":{"gitId":"Jingwencloud"},"content":"import seedu.awe.commons.core.LogsCenter;","lastModifiedDate":"2021-10-21"},{"lineNumber":10,"author":{"gitId":"Jingwencloud"},"content":"import seedu.awe.model.transactionsummary.TransactionSummary;","lastModifiedDate":"2021-10-21"},{"lineNumber":11,"author":{"gitId":"Jingwencloud"},"content":"import seedu.awe.ui.UiPart;","lastModifiedDate":"2021-10-21"},{"lineNumber":12,"author":{"gitId":"Jingwencloud"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":13,"author":{"gitId":"Jingwencloud"},"content":"public class TransactionSummaryListPanel extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2021-10-21"},{"lineNumber":14,"author":{"gitId":"Jingwencloud"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":15,"author":{"gitId":"Jingwencloud"},"content":"    private static final String FXML \u003d \"TransactionSummaryListPanel.fxml\";","lastModifiedDate":"2021-10-21"},{"lineNumber":16,"author":{"gitId":"Jingwencloud"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(TransactionSummaryListPanel.class);","lastModifiedDate":"2021-10-21"},{"lineNumber":17,"author":{"gitId":"Jingwencloud"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":18,"author":{"gitId":"Jingwencloud"},"content":"    @javafx.fxml.FXML","lastModifiedDate":"2021-10-21"},{"lineNumber":19,"author":{"gitId":"Jingwencloud"},"content":"    private ListView\u003cTransactionSummary\u003e transactionSummaryListView;","lastModifiedDate":"2021-10-21"},{"lineNumber":20,"author":{"gitId":"Jingwencloud"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":21,"author":{"gitId":"Jingwencloud"},"content":"    /**","lastModifiedDate":"2021-10-21"},{"lineNumber":22,"author":{"gitId":"Jingwencloud"},"content":"     * Creates an {@code TransactionSummaryListPanel} with the given {@code ObservableList}.","lastModifiedDate":"2021-10-21"},{"lineNumber":23,"author":{"gitId":"Jingwencloud"},"content":"     */","lastModifiedDate":"2021-10-21"},{"lineNumber":24,"author":{"gitId":"Jingwencloud"},"content":"    public TransactionSummaryListPanel(ObservableList\u003cTransactionSummary\u003e transactionSummaryList) {","lastModifiedDate":"2021-10-21"},{"lineNumber":25,"author":{"gitId":"Jingwencloud"},"content":"        super(FXML);","lastModifiedDate":"2021-10-21"},{"lineNumber":26,"author":{"gitId":"Jingwencloud"},"content":"        transactionSummaryListView.setItems(transactionSummaryList);","lastModifiedDate":"2021-10-21"},{"lineNumber":27,"author":{"gitId":"Jingwencloud"},"content":"        transactionSummaryListView.setCellFactory(listView -\u003e new TransactionSummaryListViewCell());","lastModifiedDate":"2021-10-21"},{"lineNumber":28,"author":{"gitId":"Jingwencloud"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":29,"author":{"gitId":"Jingwencloud"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":30,"author":{"gitId":"Jingwencloud"},"content":"    /**","lastModifiedDate":"2021-10-21"},{"lineNumber":31,"author":{"gitId":"Jingwencloud"},"content":"     * Custom {@code TransactionSummaryListCell} that displays the graphics of","lastModifiedDate":"2021-10-21"},{"lineNumber":32,"author":{"gitId":"Jingwencloud"},"content":"     * a {@code Transaction} using a {@code TransactionSummaryCard}.","lastModifiedDate":"2021-10-21"},{"lineNumber":33,"author":{"gitId":"Jingwencloud"},"content":"     */","lastModifiedDate":"2021-10-21"},{"lineNumber":34,"author":{"gitId":"Jingwencloud"},"content":"    class TransactionSummaryListViewCell extends ListCell\u003cTransactionSummary\u003e {","lastModifiedDate":"2021-10-21"},{"lineNumber":35,"author":{"gitId":"Jingwencloud"},"content":"        @Override","lastModifiedDate":"2021-10-21"},{"lineNumber":36,"author":{"gitId":"Jingwencloud"},"content":"        protected void updateItem(TransactionSummary transactionSummary, boolean empty) {","lastModifiedDate":"2021-10-21"},{"lineNumber":37,"author":{"gitId":"Jingwencloud"},"content":"            super.updateItem(transactionSummary, empty);","lastModifiedDate":"2021-10-21"},{"lineNumber":38,"author":{"gitId":"Jingwencloud"},"content":"            if (empty || transactionSummary \u003d\u003d null) {","lastModifiedDate":"2021-10-21"},{"lineNumber":39,"author":{"gitId":"Jingwencloud"},"content":"                setGraphic(null);","lastModifiedDate":"2021-10-21"},{"lineNumber":40,"author":{"gitId":"Jingwencloud"},"content":"                setText(null);","lastModifiedDate":"2021-10-21"},{"lineNumber":41,"author":{"gitId":"Jingwencloud"},"content":"            } else {","lastModifiedDate":"2021-10-21"},{"lineNumber":42,"author":{"gitId":"Jingwencloud"},"content":"                setGraphic(new TransactionSummaryCard(transactionSummary, getIndex() + 1).getRoot());","lastModifiedDate":"2021-10-21"},{"lineNumber":43,"author":{"gitId":"Jingwencloud"},"content":"            }","lastModifiedDate":"2021-10-21"},{"lineNumber":44,"author":{"gitId":"Jingwencloud"},"content":"        }","lastModifiedDate":"2021-10-21"},{"lineNumber":45,"author":{"gitId":"Jingwencloud"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":46,"author":{"gitId":"Jingwencloud"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":47,"author":{"gitId":"Jingwencloud"},"content":"}","lastModifiedDate":"2021-10-21"}],"authorContributionMap":{"Jingwencloud":47}},{"path":"src/main/resources/view/CommandBox.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.StackPane?\u003e","lastModifiedDate":"2017-06-22"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":6,"author":{"gitId":"marcuspeh"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2021-10-31"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003cStackPane styleClass\u003d\"stack-pane\" xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2018-04-01"},{"lineNumber":8,"author":{"gitId":"marcuspeh"},"content":"  \u003cpadding\u003e","lastModifiedDate":"2021-10-31"},{"lineNumber":9,"author":{"gitId":"marcuspeh"},"content":"    \u003cInsets top\u003d\"0\" right\u003d\"10\" bottom\u003d\"10\" left\u003d\"0\" /\u003e","lastModifiedDate":"2021-10-31"},{"lineNumber":10,"author":{"gitId":"marcuspeh"},"content":"  \u003c/padding\u003e","lastModifiedDate":"2021-10-31"},{"lineNumber":11,"author":{"gitId":"-"},"content":"  \u003cTextField fx:id\u003d\"commandTextField\" onAction\u003d\"#handleCommandEntered\" promptText\u003d\"Enter command here...\"/\u003e","lastModifiedDate":"2019-01-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"\u003c/StackPane\u003e","lastModifiedDate":"2017-06-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"}],"authorContributionMap":{"marcuspeh":4,"-":9}},{"path":"src/main/resources/view/DarkTheme.css","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":".background {","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"marcuspeh"},"content":"    -fx-background-color: derive(#F0F3FC, 20%);","lastModifiedDate":"2021-10-26"},{"lineNumber":3,"author":{"gitId":"marcuspeh"},"content":"    background-color: #F0F3FC; /* Used in the default.html file */","lastModifiedDate":"2021-10-26"},{"lineNumber":4,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":".label {","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Open Sans Semibold\";","lastModifiedDate":"2021-08-28"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    -fx-text-fill: #555555;","lastModifiedDate":"2016-08-15"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    -fx-opacity: 0.9;","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":".label-bright {","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Open Sans Semibold\";","lastModifiedDate":"2021-08-28"},{"lineNumber":16,"author":{"gitId":"marcuspeh"},"content":"    -fx-text-fill: #343434;","lastModifiedDate":"2021-10-26"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":".label-header {","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    -fx-font-size: 32pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Open Sans Light\";","lastModifiedDate":"2021-08-28"},{"lineNumber":23,"author":{"gitId":"marcuspeh"},"content":"    -fx-text-fill: #343434;","lastModifiedDate":"2021-10-26"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":".text-field {","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    -fx-font-size: 12pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Open Sans Semibold\";","lastModifiedDate":"2021-08-28"},{"lineNumber":30,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":".tab-pane {","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"marcuspeh"},"content":".tab-pane .tab {","lastModifiedDate":"2021-09-29"},{"lineNumber":37,"author":{"gitId":"marcuspeh"},"content":"    -fx-padding: 1 2 1 2;","lastModifiedDate":"2021-09-29"},{"lineNumber":38,"author":{"gitId":"marcuspeh"},"content":"}","lastModifiedDate":"2021-09-29"},{"lineNumber":39,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":40,"author":{"gitId":"-"},"content":".tab-pane .tab-header-area {","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    -fx-min-height: 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    -fx-max-height: 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"marcuspeh"},"content":".tab-pane .tab-header-area .tab-header-background {","lastModifiedDate":"2021-09-29"},{"lineNumber":47,"author":{"gitId":"marcuspeh"},"content":"     -fx-opacity: 0;","lastModifiedDate":"2021-09-29"},{"lineNumber":48,"author":{"gitId":"marcuspeh"},"content":" }","lastModifiedDate":"2021-09-29"},{"lineNumber":49,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":50,"author":{"gitId":"-"},"content":".table-view {","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"marcuspeh"},"content":"    -fx-base: #F0F3FC;","lastModifiedDate":"2021-10-26"},{"lineNumber":52,"author":{"gitId":"marcuspeh"},"content":"    -fx-control-inner-background: #F0F3FC;","lastModifiedDate":"2021-10-26"},{"lineNumber":53,"author":{"gitId":"marcuspeh"},"content":"    -fx-background-color: #F0F3FC;","lastModifiedDate":"2021-10-26"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    -fx-table-cell-border-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    -fx-table-header-border-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    -fx-padding: 5;","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":".table-view .column-header-background {","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":".table-view .column-header, .table-view .filler {","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    -fx-size: 35;","lastModifiedDate":"2016-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    -fx-border-width: 0 0 1 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    -fx-border-color:","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        transparent","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        transparent","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        derive(-fx-base, 80%)","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    -fx-border-insets: 0 10 1 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":".table-view .column-header .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    -fx-font-size: 20pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Open Sans Light\";","lastModifiedDate":"2021-08-28"},{"lineNumber":78,"author":{"gitId":"marcuspeh"},"content":"    -fx-text-fill: #343434;","lastModifiedDate":"2021-10-26"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    -fx-alignment: center-left;","lastModifiedDate":"2016-08-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":".table-view:focused .table-row-cell:filled:focused:selected {","lastModifiedDate":"2016-08-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    -fx-background-color: -fx-focus-color;","lastModifiedDate":"2016-08-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":87,"author":{"gitId":"-"},"content":".split-pane:horizontal .split-pane-divider {","lastModifiedDate":"2016-08-08"},{"lineNumber":88,"author":{"gitId":"marcuspeh"},"content":"    -fx-background-color: derive(#F0F3FC, 20%);","lastModifiedDate":"2021-10-26"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    -fx-border-color: transparent transparent transparent #4d4d4d;","lastModifiedDate":"2017-03-02"},{"lineNumber":90,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":92,"author":{"gitId":"-"},"content":".split-pane {","lastModifiedDate":"2016-08-15"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    -fx-border-radius: 1;","lastModifiedDate":"2016-08-15"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2016-08-15"},{"lineNumber":95,"author":{"gitId":"marcuspeh"},"content":"    -fx-background-color: derive(#F0F3FC, 20%);","lastModifiedDate":"2021-10-26"},{"lineNumber":96,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":".list-view {","lastModifiedDate":"2017-03-02"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    -fx-background-insets: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":100,"author":{"gitId":"marcuspeh"},"content":"    -fx-padding: 0 10 0 0;","lastModifiedDate":"2021-10-26"},{"lineNumber":101,"author":{"gitId":"marcuspeh"},"content":"    -fx-background-color: derive(#F0F3FC, 20%);","lastModifiedDate":"2021-10-26"},{"lineNumber":102,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":104,"author":{"gitId":"-"},"content":".list-cell {","lastModifiedDate":"2016-08-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    -fx-label-padding: 0 0 0 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    -fx-graphic-text-gap : 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":108,"author":{"gitId":"marcuspeh"},"content":"    -fx-padding: 5 0 5 0;","lastModifiedDate":"2021-10-26"},{"lineNumber":109,"author":{"gitId":"marcuspeh"},"content":"    -fx-border-insets: 5 0 5 0;","lastModifiedDate":"2021-10-26"},{"lineNumber":110,"author":{"gitId":"marcuspeh"},"content":"    -fx-background-insets: 5 0 5 0;","lastModifiedDate":"2021-10-26"},{"lineNumber":111,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":113,"author":{"gitId":"-"},"content":".list-cell:filled:even {","lastModifiedDate":"2017-03-02"},{"lineNumber":114,"author":{"gitId":"marcuspeh"},"content":"    -fx-background-color: #D2CBCB;","lastModifiedDate":"2021-10-26"},{"lineNumber":115,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":117,"author":{"gitId":"-"},"content":".list-cell:filled:odd {","lastModifiedDate":"2017-03-02"},{"lineNumber":118,"author":{"gitId":"marcuspeh"},"content":"    -fx-background-color: #DED6D6;","lastModifiedDate":"2021-10-26"},{"lineNumber":119,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":121,"author":{"gitId":"-"},"content":".list-cell:filled:selected {","lastModifiedDate":"2017-03-02"},{"lineNumber":122,"author":{"gitId":"marcuspeh"},"content":"    -fx-background-color: #B3D0FD;","lastModifiedDate":"2021-10-26"},{"lineNumber":123,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":125,"author":{"gitId":"-"},"content":".list-cell:filled:selected #cardPane {","lastModifiedDate":"2017-03-02"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    -fx-border-color: #3e7b91;","lastModifiedDate":"2017-03-02"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2017-03-02"},{"lineNumber":128,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":130,"author":{"gitId":"-"},"content":".list-cell .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":131,"author":{"gitId":"marcuspeh"},"content":"    -fx-text-fill: #343434;","lastModifiedDate":"2021-10-26"},{"lineNumber":132,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":134,"author":{"gitId":"-"},"content":".cell_big_label {","lastModifiedDate":"2016-08-08"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Open Sans Semibold\";","lastModifiedDate":"2021-08-28"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    -fx-font-size: 16px;","lastModifiedDate":"2016-08-08"},{"lineNumber":137,"author":{"gitId":"marcuspeh"},"content":"    -fx-text-fill: #F0F3FC;","lastModifiedDate":"2021-10-26"},{"lineNumber":138,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":140,"author":{"gitId":"-"},"content":".cell_small_label {","lastModifiedDate":"2016-08-08"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Open Sans Regular\";","lastModifiedDate":"2021-08-28"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    -fx-font-size: 13px;","lastModifiedDate":"2017-03-02"},{"lineNumber":143,"author":{"gitId":"marcuspeh"},"content":"    -fx-text-fill: #F0F3FC;","lastModifiedDate":"2021-10-26"},{"lineNumber":144,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":146,"author":{"gitId":"-"},"content":".stack-pane {","lastModifiedDate":"2018-04-01"},{"lineNumber":147,"author":{"gitId":"marcuspeh"},"content":"     -fx-background-color: derive(#F0F3FC, 20%);","lastModifiedDate":"2021-10-26"},{"lineNumber":148,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":150,"author":{"gitId":"-"},"content":".pane-with-border {","lastModifiedDate":"2017-05-15"},{"lineNumber":151,"author":{"gitId":"marcuspeh"},"content":"     -fx-background-color: derive(#F0F3FC, 20%);","lastModifiedDate":"2021-10-26"},{"lineNumber":152,"author":{"gitId":"marcuspeh"},"content":"     -fx-border-color: derive(#F0F3FC, 10%);","lastModifiedDate":"2021-10-26"},{"lineNumber":153,"author":{"gitId":"-"},"content":"     -fx-border-top-width: 1px;","lastModifiedDate":"2017-05-09"},{"lineNumber":154,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-09"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":156,"author":{"gitId":"-"},"content":".status-bar {","lastModifiedDate":"2016-08-08"},{"lineNumber":157,"author":{"gitId":"marcuspeh"},"content":"    -fx-background-color: #F0F3FC;","lastModifiedDate":"2021-10-26"},{"lineNumber":158,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-14"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":160,"author":{"gitId":"-"},"content":".result-display {","lastModifiedDate":"2016-09-14"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2017-03-02"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Open Sans Light\";","lastModifiedDate":"2021-08-28"},{"lineNumber":163,"author":{"gitId":"-"},"content":"    -fx-font-size: 13pt;","lastModifiedDate":"2017-03-02"},{"lineNumber":164,"author":{"gitId":"marcuspeh"},"content":"    -fx-text-fill: #343434;","lastModifiedDate":"2021-10-26"},{"lineNumber":165,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-14"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":167,"author":{"gitId":"-"},"content":".result-display .label {","lastModifiedDate":"2016-09-14"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    -fx-text-fill: black !important;","lastModifiedDate":"2016-09-14"},{"lineNumber":169,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":171,"author":{"gitId":"-"},"content":".status-bar .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Open Sans Light\";","lastModifiedDate":"2021-08-28"},{"lineNumber":173,"author":{"gitId":"marcuspeh"},"content":"    -fx-text-fill: #343434;","lastModifiedDate":"2021-10-26"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    -fx-padding: 4px;","lastModifiedDate":"2018-12-08"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    -fx-pref-height: 30px;","lastModifiedDate":"2018-12-08"},{"lineNumber":176,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":178,"author":{"gitId":"-"},"content":".status-bar-with-border {","lastModifiedDate":"2016-08-08"},{"lineNumber":179,"author":{"gitId":"marcuspeh"},"content":"    -fx-background-color: derive(#F0F3FC, 30%);","lastModifiedDate":"2021-10-26"},{"lineNumber":180,"author":{"gitId":"marcuspeh"},"content":"    -fx-border-color: derive(#F0F3FC, 25%);","lastModifiedDate":"2021-10-26"},{"lineNumber":181,"author":{"gitId":"-"},"content":"    -fx-border-width: 1px;","lastModifiedDate":"2016-08-08"},{"lineNumber":182,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":184,"author":{"gitId":"-"},"content":".status-bar-with-border .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":185,"author":{"gitId":"marcuspeh"},"content":"    -fx-text-fill: #343434;","lastModifiedDate":"2021-10-26"},{"lineNumber":186,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":187,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":188,"author":{"gitId":"-"},"content":".grid-pane {","lastModifiedDate":"2016-08-08"},{"lineNumber":189,"author":{"gitId":"marcuspeh"},"content":"    -fx-background-color: derive(#F0F3FC, 30%);","lastModifiedDate":"2021-10-26"},{"lineNumber":190,"author":{"gitId":"marcuspeh"},"content":"    -fx-border-color: derive(#F0F3FC, 30%);","lastModifiedDate":"2021-10-26"},{"lineNumber":191,"author":{"gitId":"-"},"content":"    -fx-border-width: 1px;","lastModifiedDate":"2016-08-08"},{"lineNumber":192,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":193,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":194,"author":{"gitId":"-"},"content":".grid-pane .stack-pane {","lastModifiedDate":"2018-04-01"},{"lineNumber":195,"author":{"gitId":"marcuspeh"},"content":"    -fx-background-color: derive(#F0F3FC, 30%);","lastModifiedDate":"2021-10-26"},{"lineNumber":196,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":197,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":198,"author":{"gitId":"-"},"content":".context-menu {","lastModifiedDate":"2016-08-08"},{"lineNumber":199,"author":{"gitId":"marcuspeh"},"content":"    -fx-background-color: derive(#F0F3FC, 50%);","lastModifiedDate":"2021-10-26"},{"lineNumber":200,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":201,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":202,"author":{"gitId":"-"},"content":".context-menu .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":203,"author":{"gitId":"marcuspeh"},"content":"    -fx-text-fill: #343434;","lastModifiedDate":"2021-10-26"},{"lineNumber":204,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":205,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":206,"author":{"gitId":"-"},"content":".menu-bar {","lastModifiedDate":"2016-08-08"},{"lineNumber":207,"author":{"gitId":"marcuspeh"},"content":"    -fx-background-color: derive(#C7B9FF, 20%);","lastModifiedDate":"2021-10-26"},{"lineNumber":208,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":209,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":210,"author":{"gitId":"-"},"content":".menu-bar .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":211,"author":{"gitId":"-"},"content":"    -fx-font-size: 14pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":212,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Open Sans Light\";","lastModifiedDate":"2021-08-28"},{"lineNumber":213,"author":{"gitId":"marcuspeh"},"content":"    -fx-text-fill: #454545;","lastModifiedDate":"2021-10-26"},{"lineNumber":214,"author":{"gitId":"-"},"content":"    -fx-opacity: 0.9;","lastModifiedDate":"2016-08-08"},{"lineNumber":215,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":217,"author":{"gitId":"-"},"content":".menu .left-container {","lastModifiedDate":"2016-08-08"},{"lineNumber":218,"author":{"gitId":"-"},"content":"    -fx-background-color: black;","lastModifiedDate":"2016-08-08"},{"lineNumber":219,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":220,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":221,"author":{"gitId":"-"},"content":"/*","lastModifiedDate":"2016-08-08"},{"lineNumber":222,"author":{"gitId":"-"},"content":" * Metro style Push Button","lastModifiedDate":"2016-08-08"},{"lineNumber":223,"author":{"gitId":"-"},"content":" * Author: Pedro Duque Vieira","lastModifiedDate":"2016-08-08"},{"lineNumber":224,"author":{"gitId":"-"},"content":" * http://pixelduke.wordpress.com/2012/10/23/jmetro-windows-8-controls-on-java/","lastModifiedDate":"2016-08-08"},{"lineNumber":225,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":226,"author":{"gitId":"-"},"content":".button {","lastModifiedDate":"2016-08-08"},{"lineNumber":227,"author":{"gitId":"-"},"content":"    -fx-padding: 5 22 5 22;","lastModifiedDate":"2016-08-08"},{"lineNumber":228,"author":{"gitId":"-"},"content":"    -fx-border-color: #e2e2e2;","lastModifiedDate":"2016-08-08"},{"lineNumber":229,"author":{"gitId":"-"},"content":"    -fx-border-width: 2;","lastModifiedDate":"2016-08-08"},{"lineNumber":230,"author":{"gitId":"-"},"content":"    -fx-background-radius: 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":231,"author":{"gitId":"marcuspeh"},"content":"    -fx-background-color: #ada0a6;","lastModifiedDate":"2021-10-26"},{"lineNumber":232,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Open Sans Regular\";","lastModifiedDate":"2021-08-28"},{"lineNumber":233,"author":{"gitId":"-"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":234,"author":{"gitId":"marcuspeh"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2021-10-26"},{"lineNumber":235,"author":{"gitId":"-"},"content":"    -fx-background-insets: 0 0 0 0, 0, 1, 2;","lastModifiedDate":"2016-08-08"},{"lineNumber":236,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":237,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":238,"author":{"gitId":"-"},"content":".button:hover {","lastModifiedDate":"2016-08-08"},{"lineNumber":239,"author":{"gitId":"marcuspeh"},"content":"    -fx-background-color: #B3D0FD;","lastModifiedDate":"2021-10-26"},{"lineNumber":240,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":241,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":242,"author":{"gitId":"-"},"content":".button:pressed, .button:default:hover:pressed {","lastModifiedDate":"2016-08-08"},{"lineNumber":243,"author":{"gitId":"marcuspeh"},"content":"  -fx-background-color: #ada1a6;","lastModifiedDate":"2021-10-26"},{"lineNumber":244,"author":{"gitId":"marcuspeh"},"content":"  -fx-text-fill: white;","lastModifiedDate":"2021-10-26"},{"lineNumber":245,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":246,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":247,"author":{"gitId":"-"},"content":".button:focused {","lastModifiedDate":"2016-08-08"},{"lineNumber":248,"author":{"gitId":"-"},"content":"    -fx-border-color: white, white;","lastModifiedDate":"2016-08-08"},{"lineNumber":249,"author":{"gitId":"-"},"content":"    -fx-border-width: 1, 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":250,"author":{"gitId":"-"},"content":"    -fx-border-style: solid, segments(1, 1);","lastModifiedDate":"2016-08-08"},{"lineNumber":251,"author":{"gitId":"-"},"content":"    -fx-border-radius: 0, 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":252,"author":{"gitId":"-"},"content":"    -fx-border-insets: 1 1 1 1, 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":253,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":254,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":255,"author":{"gitId":"-"},"content":".button:disabled, .button:default:disabled {","lastModifiedDate":"2016-08-08"},{"lineNumber":256,"author":{"gitId":"-"},"content":"    -fx-opacity: 0.4;","lastModifiedDate":"2016-08-08"},{"lineNumber":257,"author":{"gitId":"marcuspeh"},"content":"    -fx-background-color: #ADA1A6;","lastModifiedDate":"2021-10-26"},{"lineNumber":258,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":259,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":260,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":261,"author":{"gitId":"-"},"content":".button:default {","lastModifiedDate":"2016-08-08"},{"lineNumber":262,"author":{"gitId":"-"},"content":"    -fx-background-color: -fx-focus-color;","lastModifiedDate":"2016-08-08"},{"lineNumber":263,"author":{"gitId":"-"},"content":"    -fx-text-fill: #ffffff;","lastModifiedDate":"2016-08-08"},{"lineNumber":264,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":265,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":266,"author":{"gitId":"-"},"content":".button:default:hover {","lastModifiedDate":"2016-08-08"},{"lineNumber":267,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(-fx-focus-color, 30%);","lastModifiedDate":"2016-08-08"},{"lineNumber":268,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":269,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":270,"author":{"gitId":"-"},"content":".dialog-pane {","lastModifiedDate":"2016-08-08"},{"lineNumber":271,"author":{"gitId":"marcuspeh"},"content":"    -fx-background-color: #F0F3FC;","lastModifiedDate":"2021-10-26"},{"lineNumber":272,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":273,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":274,"author":{"gitId":"-"},"content":".dialog-pane \u003e *.button-bar \u003e *.container {","lastModifiedDate":"2016-08-08"},{"lineNumber":275,"author":{"gitId":"marcuspeh"},"content":"    -fx-background-color: #F0F3FC;","lastModifiedDate":"2021-10-26"},{"lineNumber":276,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":277,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":278,"author":{"gitId":"-"},"content":".dialog-pane \u003e *.label.content {","lastModifiedDate":"2016-08-08"},{"lineNumber":279,"author":{"gitId":"-"},"content":"    -fx-font-size: 14px;","lastModifiedDate":"2016-08-08"},{"lineNumber":280,"author":{"gitId":"-"},"content":"    -fx-font-weight: bold;","lastModifiedDate":"2016-08-08"},{"lineNumber":281,"author":{"gitId":"marcuspeh"},"content":"    -fx-text-fill: #343434;","lastModifiedDate":"2021-10-26"},{"lineNumber":282,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":283,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":284,"author":{"gitId":"-"},"content":".dialog-pane:header *.header-panel {","lastModifiedDate":"2016-08-08"},{"lineNumber":285,"author":{"gitId":"marcuspeh"},"content":"    -fx-background-color: derive(#F0F3FC, 25%);","lastModifiedDate":"2021-10-26"},{"lineNumber":286,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":287,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":288,"author":{"gitId":"-"},"content":".dialog-pane:header *.header-panel *.label {","lastModifiedDate":"2016-08-08"},{"lineNumber":289,"author":{"gitId":"-"},"content":"    -fx-font-size: 18px;","lastModifiedDate":"2016-08-08"},{"lineNumber":290,"author":{"gitId":"-"},"content":"    -fx-font-style: italic;","lastModifiedDate":"2016-08-08"},{"lineNumber":291,"author":{"gitId":"marcuspeh"},"content":"    -fx-fill: 343434;","lastModifiedDate":"2021-10-26"},{"lineNumber":292,"author":{"gitId":"marcuspeh"},"content":"    -fx-text-fill: #343434;","lastModifiedDate":"2021-10-26"},{"lineNumber":293,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":294,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":295,"author":{"gitId":"-"},"content":".scroll-bar {","lastModifiedDate":"2017-03-02"},{"lineNumber":296,"author":{"gitId":"marcuspeh"},"content":"    -fx-background-color: #F0F3FC;","lastModifiedDate":"2021-10-26"},{"lineNumber":297,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":298,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":299,"author":{"gitId":"-"},"content":".scroll-bar .thumb {","lastModifiedDate":"2016-08-15"},{"lineNumber":300,"author":{"gitId":"marcuspeh"},"content":"    -fx-background-color: derive(#343434, 30%);","lastModifiedDate":"2021-10-26"},{"lineNumber":301,"author":{"gitId":"-"},"content":"    -fx-background-insets: 3;","lastModifiedDate":"2016-08-15"},{"lineNumber":302,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":303,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":304,"author":{"gitId":"-"},"content":".scroll-bar .increment-button, .scroll-bar .decrement-button {","lastModifiedDate":"2016-08-15"},{"lineNumber":305,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-15"},{"lineNumber":306,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2016-08-15"},{"lineNumber":307,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":308,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":309,"author":{"gitId":"-"},"content":".scroll-bar .increment-arrow, .scroll-bar .decrement-arrow {","lastModifiedDate":"2016-08-15"},{"lineNumber":310,"author":{"gitId":"-"},"content":"    -fx-shape: \" \";","lastModifiedDate":"2016-08-15"},{"lineNumber":311,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"},{"lineNumber":312,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":313,"author":{"gitId":"-"},"content":".scroll-bar:vertical .increment-arrow, .scroll-bar:vertical .decrement-arrow {","lastModifiedDate":"2016-08-18"},{"lineNumber":314,"author":{"gitId":"-"},"content":"    -fx-padding: 1 8 1 8;","lastModifiedDate":"2016-08-15"},{"lineNumber":315,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":316,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":317,"author":{"gitId":"-"},"content":".scroll-bar:horizontal .increment-arrow, .scroll-bar:horizontal .decrement-arrow {","lastModifiedDate":"2016-08-18"},{"lineNumber":318,"author":{"gitId":"-"},"content":"    -fx-padding: 8 1 8 1;","lastModifiedDate":"2016-08-18"},{"lineNumber":319,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"},{"lineNumber":320,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":321,"author":{"gitId":"-"},"content":"#cardPane {","lastModifiedDate":"2016-08-08"},{"lineNumber":322,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":323,"author":{"gitId":"-"},"content":"    -fx-border-width: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":324,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":325,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":326,"author":{"gitId":"-"},"content":"#commandTypeLabel {","lastModifiedDate":"2016-08-08"},{"lineNumber":327,"author":{"gitId":"-"},"content":"    -fx-font-size: 11px;","lastModifiedDate":"2016-08-08"},{"lineNumber":328,"author":{"gitId":"marcuspeh"},"content":"    -fx-text-fill: derive(#343434, 20);","lastModifiedDate":"2021-10-26"},{"lineNumber":329,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":330,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":331,"author":{"gitId":"-"},"content":"#commandTextField {","lastModifiedDate":"2017-03-02"},{"lineNumber":332,"author":{"gitId":"marcuspeh"},"content":"    -fx-background-color: transparent #ADA1A6 transparent #ADA1A6;","lastModifiedDate":"2021-10-26"},{"lineNumber":333,"author":{"gitId":"-"},"content":"    -fx-background-insets: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":334,"author":{"gitId":"marcuspeh"},"content":"    -fx-border-color: #ADA1A6;","lastModifiedDate":"2021-10-26"},{"lineNumber":335,"author":{"gitId":"-"},"content":"    -fx-border-insets: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":336,"author":{"gitId":"-"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2017-03-02"},{"lineNumber":337,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Open Sans Light\";","lastModifiedDate":"2021-08-28"},{"lineNumber":338,"author":{"gitId":"-"},"content":"    -fx-font-size: 13pt;","lastModifiedDate":"2017-03-02"},{"lineNumber":339,"author":{"gitId":"marcuspeh"},"content":"    -fx-text-fill: #343434;","lastModifiedDate":"2021-10-26"},{"lineNumber":340,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":341,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":342,"author":{"gitId":"-"},"content":"#filterField, #personListPanel, #personWebpage {","lastModifiedDate":"2016-08-15"},{"lineNumber":343,"author":{"gitId":"-"},"content":"    -fx-effect: innershadow(gaussian, black, 10, 0, 0, 0);","lastModifiedDate":"2016-08-15"},{"lineNumber":344,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":345,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":346,"author":{"gitId":"-"},"content":"#resultDisplay .content {","lastModifiedDate":"2017-03-02"},{"lineNumber":347,"author":{"gitId":"marcuspeh"},"content":"    -fx-background-color: transparent, #F0F3FC, transparent, #F0F3FC;","lastModifiedDate":"2021-10-26"},{"lineNumber":348,"author":{"gitId":"marcuspeh"},"content":"    -fx-border-color: #ADA1A6;","lastModifiedDate":"2021-10-26"},{"lineNumber":349,"author":{"gitId":"-"},"content":"    -fx-background-radius: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":350,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":351,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":352,"author":{"gitId":"-"},"content":"#tags {","lastModifiedDate":"2016-12-18"},{"lineNumber":353,"author":{"gitId":"-"},"content":"    -fx-hgap: 7;","lastModifiedDate":"2016-12-18"},{"lineNumber":354,"author":{"gitId":"-"},"content":"    -fx-vgap: 3;","lastModifiedDate":"2016-12-18"},{"lineNumber":355,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-18"},{"lineNumber":356,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":357,"author":{"gitId":"-"},"content":"#tags .label {","lastModifiedDate":"2016-12-18"},{"lineNumber":358,"author":{"gitId":"marcuspeh"},"content":"    -fx-text-fill: black;","lastModifiedDate":"2021-10-26"},{"lineNumber":359,"author":{"gitId":"marcuspeh"},"content":"    -fx-background-color: #C7B9FF;","lastModifiedDate":"2021-10-26"},{"lineNumber":360,"author":{"gitId":"-"},"content":"    -fx-padding: 1 3 1 3;","lastModifiedDate":"2016-12-18"},{"lineNumber":361,"author":{"gitId":"-"},"content":"    -fx-border-radius: 2;","lastModifiedDate":"2016-12-18"},{"lineNumber":362,"author":{"gitId":"-"},"content":"    -fx-background-radius: 2;","lastModifiedDate":"2016-12-18"},{"lineNumber":363,"author":{"gitId":"-"},"content":"    -fx-font-size: 11;","lastModifiedDate":"2016-12-18"},{"lineNumber":364,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-18"}],"authorContributionMap":{"marcuspeh":67,"-":297}},{"path":"src/main/resources/view/ExpenseListCard.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Jingwencloud"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2021-10-05"},{"lineNumber":2,"author":{"gitId":"Jingwencloud"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":3,"author":{"gitId":"Jingwencloud"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2021-10-05"},{"lineNumber":4,"author":{"gitId":"Jingwencloud"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2021-10-05"},{"lineNumber":5,"author":{"gitId":"Jingwencloud"},"content":"\u003c?import javafx.scene.layout.ColumnConstraints?\u003e","lastModifiedDate":"2021-10-05"},{"lineNumber":6,"author":{"gitId":"Jingwencloud"},"content":"\u003c?import javafx.scene.layout.GridPane?\u003e","lastModifiedDate":"2021-10-05"},{"lineNumber":7,"author":{"gitId":"Jingwencloud"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2021-10-05"},{"lineNumber":8,"author":{"gitId":"Jingwencloud"},"content":"\u003c?import javafx.scene.layout.Region?\u003e","lastModifiedDate":"2021-10-05"},{"lineNumber":9,"author":{"gitId":"Jingwencloud"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2021-10-05"},{"lineNumber":10,"author":{"gitId":"Jingwencloud"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":11,"author":{"gitId":"Jingwencloud"},"content":"\u003cHBox id\u003d\"cardPane\" fx:id\u003d\"cardPane\" xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2021-10-05"},{"lineNumber":12,"author":{"gitId":"Jingwencloud"},"content":"    \u003cGridPane HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2021-10-05"},{"lineNumber":13,"author":{"gitId":"Jingwencloud"},"content":"        \u003ccolumnConstraints\u003e","lastModifiedDate":"2021-10-05"},{"lineNumber":14,"author":{"gitId":"Jingwencloud"},"content":"            \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10\" prefWidth\u003d\"150\" /\u003e","lastModifiedDate":"2021-10-05"},{"lineNumber":15,"author":{"gitId":"Jingwencloud"},"content":"        \u003c/columnConstraints\u003e","lastModifiedDate":"2021-10-05"},{"lineNumber":16,"author":{"gitId":"Jingwencloud"},"content":"        \u003cVBox alignment\u003d\"CENTER_LEFT\" minHeight\u003d\"105\" GridPane.columnIndex\u003d\"0\"\u003e","lastModifiedDate":"2021-10-05"},{"lineNumber":17,"author":{"gitId":"Jingwencloud"},"content":"            \u003cpadding\u003e","lastModifiedDate":"2021-10-05"},{"lineNumber":18,"author":{"gitId":"Jingwencloud"},"content":"                \u003cInsets top\u003d\"5\" right\u003d\"5\" bottom\u003d\"5\" left\u003d\"15\" /\u003e","lastModifiedDate":"2021-10-05"},{"lineNumber":19,"author":{"gitId":"Jingwencloud"},"content":"            \u003c/padding\u003e","lastModifiedDate":"2021-10-05"},{"lineNumber":20,"author":{"gitId":"Jingwencloud"},"content":"            \u003cHBox spacing\u003d\"5\" alignment\u003d\"CENTER_LEFT\"\u003e","lastModifiedDate":"2021-10-05"},{"lineNumber":21,"author":{"gitId":"Jingwencloud"},"content":"                \u003cLabel fx:id\u003d\"id\" styleClass\u003d\"cell_big_label\"\u003e","lastModifiedDate":"2021-10-05"},{"lineNumber":22,"author":{"gitId":"Jingwencloud"},"content":"                    \u003cminWidth\u003e","lastModifiedDate":"2021-10-05"},{"lineNumber":23,"author":{"gitId":"Jingwencloud"},"content":"                        \u003c!-- Ensures that the label text is never truncated --\u003e","lastModifiedDate":"2021-10-05"},{"lineNumber":24,"author":{"gitId":"Jingwencloud"},"content":"                        \u003cRegion fx:constant\u003d\"USE_PREF_SIZE\" /\u003e","lastModifiedDate":"2021-10-05"},{"lineNumber":25,"author":{"gitId":"Jingwencloud"},"content":"                    \u003c/minWidth\u003e","lastModifiedDate":"2021-10-05"},{"lineNumber":26,"author":{"gitId":"Jingwencloud"},"content":"                \u003c/Label\u003e","lastModifiedDate":"2021-10-05"},{"lineNumber":27,"author":{"gitId":"Jingwencloud"},"content":"                \u003cLabel fx:id\u003d\"description\" text\u003d\"\\$first\" styleClass\u003d\"cell_big_label\" /\u003e","lastModifiedDate":"2021-10-07"},{"lineNumber":28,"author":{"gitId":"Jingwencloud"},"content":"            \u003c/HBox\u003e","lastModifiedDate":"2021-10-05"},{"lineNumber":29,"author":{"gitId":"Jingwencloud"},"content":"            \u003cLabel fx:id\u003d\"cost\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$cost\" /\u003e","lastModifiedDate":"2021-10-07"},{"lineNumber":30,"author":{"gitId":"Jingwencloud"},"content":"            \u003cLabel fx:id\u003d\"payer\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$payer\" /\u003e","lastModifiedDate":"2021-10-05"},{"lineNumber":31,"author":{"gitId":"Jingwencloud"},"content":"        \u003c/VBox\u003e","lastModifiedDate":"2021-10-05"},{"lineNumber":32,"author":{"gitId":"Jingwencloud"},"content":"    \u003c/GridPane\u003e","lastModifiedDate":"2021-10-05"},{"lineNumber":33,"author":{"gitId":"Jingwencloud"},"content":"\u003c/HBox\u003e","lastModifiedDate":"2021-10-05"},{"lineNumber":34,"author":{"gitId":"Jingwencloud"},"content":"","lastModifiedDate":"2021-10-07"}],"authorContributionMap":{"Jingwencloud":34}},{"path":"src/main/resources/view/ExpenseListPanel.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Jingwencloud"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2021-10-05"},{"lineNumber":2,"author":{"gitId":"Jingwencloud"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":3,"author":{"gitId":"Jingwencloud"},"content":"\u003c?import javafx.scene.control.ListView?\u003e","lastModifiedDate":"2021-10-05"},{"lineNumber":4,"author":{"gitId":"Jingwencloud"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2021-10-05"},{"lineNumber":5,"author":{"gitId":"Jingwencloud"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":6,"author":{"gitId":"Jingwencloud"},"content":"\u003cVBox xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2021-10-05"},{"lineNumber":7,"author":{"gitId":"Jingwencloud"},"content":"    \u003cListView fx:id\u003d\"expenseListView\" VBox.vgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2021-10-05"},{"lineNumber":8,"author":{"gitId":"Jingwencloud"},"content":"\u003c/VBox\u003e","lastModifiedDate":"2021-10-05"}],"authorContributionMap":{"Jingwencloud":8}},{"path":"src/main/resources/view/Extensions.css","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":".error {","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    -fx-text-fill: #d06651 !important; /* The error class should always override the default text-fill style */","lastModifiedDate":"2017-03-02"},{"lineNumber":4,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":".list-cell:empty {","lastModifiedDate":"2017-02-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    /* Empty cells will not have alternating colours */","lastModifiedDate":"2017-02-23"},{"lineNumber":8,"author":{"gitId":"marcuspeh"},"content":"    -fx-background: #F0F3FC;","lastModifiedDate":"2021-10-26"},{"lineNumber":9,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":".tag-selector {","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    -fx-border-color: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    -fx-border-radius: 3;","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    -fx-background-radius: 3;","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":".tooltip-text {","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"marcuspeh":1,"-":19}},{"path":"src/main/resources/view/GroupListCard.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"marcuspeh"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2021-09-24"},{"lineNumber":2,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":3,"author":{"gitId":"marcuspeh"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2021-09-24"},{"lineNumber":4,"author":{"gitId":"marcuspeh"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2021-09-24"},{"lineNumber":5,"author":{"gitId":"marcuspeh"},"content":"\u003c?import javafx.scene.layout.ColumnConstraints?\u003e","lastModifiedDate":"2021-09-24"},{"lineNumber":6,"author":{"gitId":"marcuspeh"},"content":"\u003c?import javafx.scene.layout.FlowPane?\u003e","lastModifiedDate":"2021-09-24"},{"lineNumber":7,"author":{"gitId":"marcuspeh"},"content":"\u003c?import javafx.scene.layout.GridPane?\u003e","lastModifiedDate":"2021-09-24"},{"lineNumber":8,"author":{"gitId":"marcuspeh"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2021-09-24"},{"lineNumber":9,"author":{"gitId":"marcuspeh"},"content":"\u003c?import javafx.scene.layout.Region?\u003e","lastModifiedDate":"2021-09-24"},{"lineNumber":10,"author":{"gitId":"marcuspeh"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2021-09-24"},{"lineNumber":11,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":12,"author":{"gitId":"marcuspeh"},"content":"\u003cHBox id\u003d\"cardPane\" fx:id\u003d\"cardPane\" xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2021-09-24"},{"lineNumber":13,"author":{"gitId":"marcuspeh"},"content":"  \u003cGridPane HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2021-09-24"},{"lineNumber":14,"author":{"gitId":"marcuspeh"},"content":"    \u003ccolumnConstraints\u003e","lastModifiedDate":"2021-09-24"},{"lineNumber":15,"author":{"gitId":"marcuspeh"},"content":"      \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10\" prefWidth\u003d\"150\" /\u003e","lastModifiedDate":"2021-09-24"},{"lineNumber":16,"author":{"gitId":"marcuspeh"},"content":"    \u003c/columnConstraints\u003e","lastModifiedDate":"2021-09-24"},{"lineNumber":17,"author":{"gitId":"marcuspeh"},"content":"    \u003cVBox alignment\u003d\"CENTER_LEFT\" minHeight\u003d\"105\" GridPane.columnIndex\u003d\"0\"\u003e","lastModifiedDate":"2021-09-24"},{"lineNumber":18,"author":{"gitId":"marcuspeh"},"content":"      \u003cpadding\u003e","lastModifiedDate":"2021-09-24"},{"lineNumber":19,"author":{"gitId":"marcuspeh"},"content":"        \u003cInsets top\u003d\"5\" right\u003d\"5\" bottom\u003d\"5\" left\u003d\"15\" /\u003e","lastModifiedDate":"2021-09-24"},{"lineNumber":20,"author":{"gitId":"marcuspeh"},"content":"      \u003c/padding\u003e","lastModifiedDate":"2021-09-24"},{"lineNumber":21,"author":{"gitId":"marcuspeh"},"content":"      \u003cHBox spacing\u003d\"5\" alignment\u003d\"CENTER_LEFT\"\u003e","lastModifiedDate":"2021-09-24"},{"lineNumber":22,"author":{"gitId":"marcuspeh"},"content":"        \u003cLabel fx:id\u003d\"id\" styleClass\u003d\"cell_big_label\"\u003e","lastModifiedDate":"2021-09-24"},{"lineNumber":23,"author":{"gitId":"marcuspeh"},"content":"          \u003cminWidth\u003e","lastModifiedDate":"2021-09-24"},{"lineNumber":24,"author":{"gitId":"marcuspeh"},"content":"            \u003c!-- Ensures that the label text is never truncated --\u003e","lastModifiedDate":"2021-09-24"},{"lineNumber":25,"author":{"gitId":"marcuspeh"},"content":"            \u003cRegion fx:constant\u003d\"USE_PREF_SIZE\" /\u003e","lastModifiedDate":"2021-09-24"},{"lineNumber":26,"author":{"gitId":"marcuspeh"},"content":"          \u003c/minWidth\u003e","lastModifiedDate":"2021-09-24"},{"lineNumber":27,"author":{"gitId":"marcuspeh"},"content":"        \u003c/Label\u003e","lastModifiedDate":"2021-09-24"},{"lineNumber":28,"author":{"gitId":"marcuspeh"},"content":"        \u003cLabel fx:id\u003d\"groupName\" text\u003d\"\\$first\" styleClass\u003d\"cell_big_label\" /\u003e","lastModifiedDate":"2021-09-24"},{"lineNumber":29,"author":{"gitId":"marcuspeh"},"content":"      \u003c/HBox\u003e","lastModifiedDate":"2021-09-24"},{"lineNumber":30,"author":{"gitId":"marcuspeh"},"content":"      \u003cFlowPane fx:id\u003d\"tags\" /\u003e","lastModifiedDate":"2021-09-24"},{"lineNumber":31,"author":{"gitId":"marcuspeh"},"content":"      \u003cLabel fx:id\u003d\"members\"  styleClass\u003d\"cell_small_label\" text\u003d\"\\$members\" wrapText\u003d\"true\"/\u003e","lastModifiedDate":"2021-10-30"},{"lineNumber":32,"author":{"gitId":"marcuspeh"},"content":"    \u003c/VBox\u003e","lastModifiedDate":"2021-09-24"},{"lineNumber":33,"author":{"gitId":"marcuspeh"},"content":"  \u003c/GridPane\u003e","lastModifiedDate":"2021-09-24"},{"lineNumber":34,"author":{"gitId":"marcuspeh"},"content":"\u003c/HBox\u003e","lastModifiedDate":"2021-09-24"}],"authorContributionMap":{"marcuspeh":34}},{"path":"src/main/resources/view/GroupListPanel.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"marcuspeh"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2021-09-24"},{"lineNumber":2,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":3,"author":{"gitId":"marcuspeh"},"content":"\u003c?import javafx.scene.control.ListView?\u003e","lastModifiedDate":"2021-09-24"},{"lineNumber":4,"author":{"gitId":"marcuspeh"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2021-09-24"},{"lineNumber":5,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":6,"author":{"gitId":"marcuspeh"},"content":"\u003cVBox xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2021-09-24"},{"lineNumber":7,"author":{"gitId":"marcuspeh"},"content":"  \u003cListView fx:id\u003d\"groupListView\" VBox.vgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2021-09-24"},{"lineNumber":8,"author":{"gitId":"marcuspeh"},"content":"\u003c/VBox\u003e","lastModifiedDate":"2021-09-24"}],"authorContributionMap":{"marcuspeh":8}},{"path":"src/main/resources/view/GroupViewButton.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"marcuspeh"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2021-09-29"},{"lineNumber":2,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":3,"author":{"gitId":"marcuspeh"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2021-09-29"},{"lineNumber":4,"author":{"gitId":"marcuspeh"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2021-09-29"},{"lineNumber":5,"author":{"gitId":"marcuspeh"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2021-09-29"},{"lineNumber":6,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":7,"author":{"gitId":"marcuspeh"},"content":"\u003cHBox xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2021-09-30"},{"lineNumber":8,"author":{"gitId":"marcuspeh"},"content":"   \u003cpadding\u003e","lastModifiedDate":"2021-09-29"},{"lineNumber":9,"author":{"gitId":"marcuspeh"},"content":"      \u003cInsets bottom\u003d\"5.0\" left\u003d\"0.0\" right\u003d\"0.0\" top\u003d\"5.0\" /\u003e","lastModifiedDate":"2021-09-29"},{"lineNumber":10,"author":{"gitId":"marcuspeh"},"content":"   \u003c/padding\u003e","lastModifiedDate":"2021-09-29"},{"lineNumber":11,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":12,"author":{"gitId":"marcuspeh"},"content":"   \u003cchildren\u003e","lastModifiedDate":"2021-09-29"},{"lineNumber":13,"author":{"gitId":"marcuspeh"},"content":"      \u003cButton fx:id\u003d\"groupViewButton\" minWidth\u003d\"200\" mnemonicParsing\u003d\"false\" maxWidth\u003d\"200\" text\u003d\"Groups\" /\u003e","lastModifiedDate":"2021-09-29"},{"lineNumber":14,"author":{"gitId":"marcuspeh"},"content":"   \u003c/children\u003e","lastModifiedDate":"2021-09-29"},{"lineNumber":15,"author":{"gitId":"marcuspeh"},"content":"\u003c/HBox\u003e","lastModifiedDate":"2021-09-29"}],"authorContributionMap":{"marcuspeh":15}},{"path":"src/main/resources/view/HelpWindow.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-18"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import java.net.URL?\u003e","lastModifiedDate":"2021-08-28"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.Scene?\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.image.Image?\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"\u003c?import javafx.stage.Stage?\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":12,"author":{"gitId":"marcuspeh"},"content":"\u003cfx:root resizable\u003d\"false\" title\u003d\"Help\" type\u003d\"javafx.stage.Stage\" xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2021-09-30"},{"lineNumber":13,"author":{"gitId":"-"},"content":"  \u003cicons\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    \u003cImage url\u003d\"@/images/help_icon.png\" /\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":15,"author":{"gitId":"-"},"content":"  \u003c/icons\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":16,"author":{"gitId":"-"},"content":"  \u003cscene\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    \u003cScene\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":18,"author":{"gitId":"-"},"content":"      \u003cstylesheets\u003e","lastModifiedDate":"2021-08-28"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        \u003cURL value\u003d\"@Fonts.css\" /\u003e","lastModifiedDate":"2021-08-28"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        \u003cURL value\u003d\"@HelpWindow.css\" /\u003e","lastModifiedDate":"2021-08-28"},{"lineNumber":21,"author":{"gitId":"-"},"content":"      \u003c/stylesheets\u003e","lastModifiedDate":"2021-08-28"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-28"},{"lineNumber":23,"author":{"gitId":"-"},"content":"      \u003cHBox alignment\u003d\"CENTER\"\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        \u003cchildren\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":"          \u003cLabel fx:id\u003d\"helpMessage\" text\u003d\"Label\"\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"            \u003cHBox.margin\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"              \u003cInsets right\u003d\"5.0\" /\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            \u003c/HBox.margin\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"          \u003c/Label\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":30,"author":{"gitId":"-"},"content":"          \u003cButton fx:id\u003d\"copyButton\" mnemonicParsing\u003d\"false\" onAction\u003d\"#copyUrl\" text\u003d\"Copy URL\"\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":31,"author":{"gitId":"-"},"content":"            \u003cHBox.margin\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":32,"author":{"gitId":"-"},"content":"              \u003cInsets left\u003d\"5.0\" /\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            \u003c/HBox.margin\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":34,"author":{"gitId":"-"},"content":"          \u003c/Button\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        \u003c/children\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        \u003copaqueInsets\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":37,"author":{"gitId":"-"},"content":"          \u003cInsets bottom\u003d\"10.0\" left\u003d\"5.0\" right\u003d\"10.0\" top\u003d\"5.0\" /\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        \u003c/opaqueInsets\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        \u003cpadding\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":40,"author":{"gitId":"-"},"content":"          \u003cInsets bottom\u003d\"10.0\" left\u003d\"5.0\" right\u003d\"10.0\" top\u003d\"5.0\" /\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        \u003c/padding\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":42,"author":{"gitId":"-"},"content":"      \u003c/HBox\u003e","lastModifiedDate":"2019-08-19"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    \u003c/Scene\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":44,"author":{"gitId":"-"},"content":"  \u003c/scene\u003e","lastModifiedDate":"2017-12-01"},{"lineNumber":45,"author":{"gitId":"-"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2017-12-01"}],"authorContributionMap":{"marcuspeh":1,"-":44}},{"path":"src/main/resources/view/LogoDisplay.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kheekheekhee"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2021-10-25"},{"lineNumber":2,"author":{"gitId":"kheekheekhee"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":3,"author":{"gitId":"kheekheekhee"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2021-10-25"},{"lineNumber":4,"author":{"gitId":"kheekheekhee"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2021-10-25"},{"lineNumber":5,"author":{"gitId":"kheekheekhee"},"content":"\u003c?import javafx.scene.layout.StackPane?\u003e","lastModifiedDate":"2021-10-25"},{"lineNumber":6,"author":{"gitId":"kheekheekhee"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":7,"author":{"gitId":"kheekheekhee"},"content":"\u003cStackPane xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2021-10-25"},{"lineNumber":8,"author":{"gitId":"kheekheekhee"},"content":"    \u003cchildren\u003e","lastModifiedDate":"2021-10-25"},{"lineNumber":9,"author":{"gitId":"kheekheekhee"},"content":"        \u003cImageView fx:id\u003d\"logoDisplay\" fitWidth\u003d\"100.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\"\u003e","lastModifiedDate":"2021-10-25"},{"lineNumber":10,"author":{"gitId":"kheekheekhee"},"content":"         \u003cStackPane.margin\u003e","lastModifiedDate":"2021-10-25"},{"lineNumber":11,"author":{"gitId":"kheekheekhee"},"content":"            \u003cInsets left\u003d\"50.0\" right\u003d\"50.0\" /\u003e","lastModifiedDate":"2021-10-25"},{"lineNumber":12,"author":{"gitId":"kheekheekhee"},"content":"         \u003c/StackPane.margin\u003e\u003c/ImageView\u003e","lastModifiedDate":"2021-10-25"},{"lineNumber":13,"author":{"gitId":"kheekheekhee"},"content":"    \u003c/children\u003e","lastModifiedDate":"2021-10-25"},{"lineNumber":14,"author":{"gitId":"kheekheekhee"},"content":"\u003c/StackPane\u003e","lastModifiedDate":"2021-10-25"}],"authorContributionMap":{"kheekheekhee":14}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import java.net.URL?\u003e","lastModifiedDate":"2016-08-26"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.Scene?\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Menu?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.MenuBar?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.MenuItem?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.image.Image?\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":10,"author":{"gitId":"kheekheekhee"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2021-10-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.StackPane?\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":13,"author":{"gitId":"marcuspeh"},"content":"\u003c?import javafx.stage.Stage?\u003e","lastModifiedDate":"2021-09-29"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":15,"author":{"gitId":"ramapriyan912001"},"content":"\u003cfx:root minHeight\u003d\"500.0\" minWidth\u003d\"740.0\" onCloseRequest\u003d\"#handleExit\" title\u003d\"Around the World in $80\" type\u003d\"javafx.stage.Stage\" xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2021-10-31"},{"lineNumber":16,"author":{"gitId":"-"},"content":"  \u003cicons\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":17,"author":{"gitId":"kheekheekhee"},"content":"    \u003cImage url\u003d\"@/images/awe_logo_32.png\" /\u003e","lastModifiedDate":"2021-10-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"  \u003c/icons\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":19,"author":{"gitId":"-"},"content":"  \u003cscene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    \u003cScene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"      \u003cstylesheets\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        \u003cURL value\u003d\"@Fonts.css\" /\u003e","lastModifiedDate":"2021-08-28"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        \u003cURL value\u003d\"@DarkTheme.css\" /\u003e","lastModifiedDate":"2016-08-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        \u003cURL value\u003d\"@Extensions.css\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"      \u003c/stylesheets\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":27,"author":{"gitId":"marcuspeh"},"content":"      \u003cVBox VBox.vgrow\u003d\"NEVER\"\u003e","lastModifiedDate":"2021-09-29"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        \u003cMenuBar fx:id\u003d\"menuBar\" VBox.vgrow\u003d\"NEVER\"\u003e","lastModifiedDate":"2017-06-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"          \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"File\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            \u003cMenuItem mnemonicParsing\u003d\"false\" onAction\u003d\"#handleExit\" text\u003d\"Exit\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"          \u003c/Menu\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"          \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"Help\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            \u003cMenuItem fx:id\u003d\"helpMenuItem\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleHelp\" text\u003d\"Help\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"          \u003c/Menu\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        \u003c/MenuBar\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":37,"author":{"gitId":"marcuspeh"},"content":"        \u003cHBox HBox.hgrow\u003d\"ALWAYS\" VBox.vgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2021-09-29"},{"lineNumber":38,"author":{"gitId":"kheekheekhee"},"content":"          \u003cVBox fx:id\u003d\"viewPanel\" minWidth\u003d\"240\" prefWidth\u003d\"240\" styleClass\u003d\"pane-with-border\" HBox.hgrow\u003d\"NEVER\" VBox.vgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2021-10-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            \u003cpadding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":40,"author":{"gitId":"marcuspeh"},"content":"              \u003cInsets bottom\u003d\"10\" left\u003d\"10\" right\u003d\"10\" top\u003d\"10\" /\u003e","lastModifiedDate":"2021-09-29"},{"lineNumber":41,"author":{"gitId":"marcuspeh"},"content":"            \u003c/padding\u003e","lastModifiedDate":"2021-09-29"},{"lineNumber":42,"author":{"gitId":"kheekheekhee"},"content":"                  \u003cStackPane fx:id\u003d\"logoDisplayPlaceholder\" prefHeight\u003d\"50.0\" prefWidth\u003d\"200.0\" /\u003e","lastModifiedDate":"2021-10-25"},{"lineNumber":43,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":44,"author":{"gitId":"marcuspeh"},"content":"            \u003cStackPane fx:id\u003d\"navigationButtonPlaceholder\" minHeight\u003d\"100\" prefHeight\u003d\"100\" VBox.vgrow\u003d\"NEVER\"\u003e","lastModifiedDate":"2021-09-29"},{"lineNumber":45,"author":{"gitId":"marcuspeh"},"content":"              \u003cpadding\u003e","lastModifiedDate":"2021-09-29"},{"lineNumber":46,"author":{"gitId":"marcuspeh"},"content":"                \u003cInsets bottom\u003d\"5\" left\u003d\"10\" right\u003d\"10\" top\u003d\"5\" /\u003e","lastModifiedDate":"2021-09-29"},{"lineNumber":47,"author":{"gitId":"-"},"content":"              \u003c/padding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            \u003c/StackPane\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":50,"author":{"gitId":"marcuspeh"},"content":"            \u003cStackPane fx:id\u003d\"resultDisplayPlaceholder\" minHeight\u003d\"100\" VBox.vgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2021-09-29"},{"lineNumber":51,"author":{"gitId":"-"},"content":"              \u003cpadding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":52,"author":{"gitId":"marcuspeh"},"content":"                \u003cInsets bottom\u003d\"5\" left\u003d\"10\" right\u003d\"10\" top\u003d\"5\" /\u003e","lastModifiedDate":"2021-09-29"},{"lineNumber":53,"author":{"gitId":"-"},"content":"              \u003c/padding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":54,"author":{"gitId":"-"},"content":"            \u003c/StackPane\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":56,"author":{"gitId":"marcuspeh"},"content":"          \u003c/VBox\u003e","lastModifiedDate":"2021-09-29"},{"lineNumber":57,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":58,"author":{"gitId":"kheekheekhee"},"content":"          \u003cVBox minWidth\u003d\"500.0\" prefWidth\u003d\"500.0\" styleClass\u003d\"pane-with-border\" HBox.hgrow\u003d\"ALWAYS\" VBox.vgrow\u003d\"NEVER\"\u003e","lastModifiedDate":"2021-10-25"},{"lineNumber":59,"author":{"gitId":"marcuspeh"},"content":"            \u003cStackPane fx:id\u003d\"viewPanelPlaceholder\" VBox.vgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2021-09-29"},{"lineNumber":60,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":61,"author":{"gitId":"marcuspeh"},"content":"            \u003cStackPane fx:id\u003d\"commandBoxPlaceholder\" styleClass\u003d\"pane-with-border\" VBox.vgrow\u003d\"NEVER\"\u003e","lastModifiedDate":"2021-09-29"},{"lineNumber":62,"author":{"gitId":"-"},"content":"              \u003cpadding\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":63,"author":{"gitId":"marcuspeh"},"content":"                \u003cInsets bottom\u003d\"5\" left\u003d\"10\" right\u003d\"10\" top\u003d\"5\" /\u003e","lastModifiedDate":"2021-09-29"},{"lineNumber":64,"author":{"gitId":"-"},"content":"              \u003c/padding\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":65,"author":{"gitId":"marcuspeh"},"content":"            \u003c/StackPane\u003e","lastModifiedDate":"2021-09-29"},{"lineNumber":66,"author":{"gitId":"-"},"content":"          \u003c/VBox\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":67,"author":{"gitId":"marcuspeh"},"content":"        \u003c/HBox\u003e","lastModifiedDate":"2021-09-29"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        \u003cStackPane fx:id\u003d\"statusbarPlaceholder\" VBox.vgrow\u003d\"NEVER\" /\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":70,"author":{"gitId":"-"},"content":"      \u003c/VBox\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    \u003c/Scene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":72,"author":{"gitId":"-"},"content":"  \u003c/scene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":73,"author":{"gitId":"-"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2017-11-29"}],"authorContributionMap":{"marcuspeh":19,"kheekheekhee":5,"ramapriyan912001":1,"-":48}},{"path":"src/main/resources/view/NavigationButtonPanel.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"marcuspeh"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2021-09-29"},{"lineNumber":2,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":3,"author":{"gitId":"marcuspeh"},"content":"\u003c?import java.net.URL?\u003e","lastModifiedDate":"2021-09-29"},{"lineNumber":4,"author":{"gitId":"marcuspeh"},"content":"\u003c?import javafx.scene.layout.StackPane?\u003e","lastModifiedDate":"2021-09-29"},{"lineNumber":5,"author":{"gitId":"marcuspeh"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2021-09-29"},{"lineNumber":6,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":7,"author":{"gitId":"marcuspeh"},"content":"\u003cStackPane xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2021-09-30"},{"lineNumber":8,"author":{"gitId":"marcuspeh"},"content":"   \u003cstylesheets\u003e","lastModifiedDate":"2021-09-29"},{"lineNumber":9,"author":{"gitId":"marcuspeh"},"content":"      \u003cURL value\u003d\"@DarkTheme.css\" /\u003e","lastModifiedDate":"2021-09-29"},{"lineNumber":10,"author":{"gitId":"marcuspeh"},"content":"   \u003c/stylesheets\u003e","lastModifiedDate":"2021-09-29"},{"lineNumber":11,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":12,"author":{"gitId":"marcuspeh"},"content":"   \u003cVBox fx:id\u003d\"personButton\" minWidth\u003d\"200\" prefWidth\u003d\"200\" VBox.vgrow\u003d\"NEVER\"\u003e","lastModifiedDate":"2021-09-29"},{"lineNumber":13,"author":{"gitId":"marcuspeh"},"content":"      \u003cStackPane fx:id\u003d\"personButtonPlaceholder\" VBox.vgrow\u003d\"NEVER\" /\u003e","lastModifiedDate":"2021-09-29"},{"lineNumber":14,"author":{"gitId":"marcuspeh"},"content":"      \u003cStackPane fx:id\u003d\"groupButtonPlaceholder\" VBox.vgrow\u003d\"NEVER\" /\u003e","lastModifiedDate":"2021-09-29"},{"lineNumber":15,"author":{"gitId":"marcuspeh"},"content":"   \u003c/VBox\u003e","lastModifiedDate":"2021-09-29"},{"lineNumber":16,"author":{"gitId":"marcuspeh"},"content":"\u003c/StackPane\u003e","lastModifiedDate":"2021-09-29"}],"authorContributionMap":{"marcuspeh":16}},{"path":"src/main/resources/view/PaymentListCard.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ramapriyan912001"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2021-10-21"},{"lineNumber":2,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":3,"author":{"gitId":"ramapriyan912001"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2021-10-21"},{"lineNumber":4,"author":{"gitId":"ramapriyan912001"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2021-10-21"},{"lineNumber":5,"author":{"gitId":"ramapriyan912001"},"content":"\u003c?import javafx.scene.layout.ColumnConstraints?\u003e","lastModifiedDate":"2021-10-21"},{"lineNumber":6,"author":{"gitId":"ramapriyan912001"},"content":"\u003c?import javafx.scene.layout.GridPane?\u003e","lastModifiedDate":"2021-10-21"},{"lineNumber":7,"author":{"gitId":"ramapriyan912001"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2021-10-21"},{"lineNumber":8,"author":{"gitId":"ramapriyan912001"},"content":"\u003c?import javafx.scene.layout.Region?\u003e","lastModifiedDate":"2021-10-21"},{"lineNumber":9,"author":{"gitId":"ramapriyan912001"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2021-10-21"},{"lineNumber":10,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":11,"author":{"gitId":"ramapriyan912001"},"content":"\u003cHBox id\u003d\"cardPane\" fx:id\u003d\"cardPane\" xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2021-10-21"},{"lineNumber":12,"author":{"gitId":"ramapriyan912001"},"content":"    \u003cGridPane HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2021-10-21"},{"lineNumber":13,"author":{"gitId":"ramapriyan912001"},"content":"        \u003ccolumnConstraints\u003e","lastModifiedDate":"2021-10-21"},{"lineNumber":14,"author":{"gitId":"ramapriyan912001"},"content":"            \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10\" prefWidth\u003d\"150\" /\u003e","lastModifiedDate":"2021-10-21"},{"lineNumber":15,"author":{"gitId":"ramapriyan912001"},"content":"        \u003c/columnConstraints\u003e","lastModifiedDate":"2021-10-21"},{"lineNumber":16,"author":{"gitId":"ramapriyan912001"},"content":"        \u003cVBox alignment\u003d\"CENTER_LEFT\" minHeight\u003d\"105\" GridPane.columnIndex\u003d\"0\"\u003e","lastModifiedDate":"2021-10-21"},{"lineNumber":17,"author":{"gitId":"ramapriyan912001"},"content":"            \u003cpadding\u003e","lastModifiedDate":"2021-10-21"},{"lineNumber":18,"author":{"gitId":"ramapriyan912001"},"content":"                \u003cInsets top\u003d\"5\" right\u003d\"5\" bottom\u003d\"5\" left\u003d\"15\" /\u003e","lastModifiedDate":"2021-10-21"},{"lineNumber":19,"author":{"gitId":"ramapriyan912001"},"content":"            \u003c/padding\u003e","lastModifiedDate":"2021-10-21"},{"lineNumber":20,"author":{"gitId":"ramapriyan912001"},"content":"            \u003cHBox spacing\u003d\"5\" alignment\u003d\"CENTER_LEFT\"\u003e","lastModifiedDate":"2021-10-21"},{"lineNumber":21,"author":{"gitId":"ramapriyan912001"},"content":"                \u003cLabel fx:id\u003d\"id\" styleClass\u003d\"cell_big_label\"\u003e","lastModifiedDate":"2021-10-21"},{"lineNumber":22,"author":{"gitId":"ramapriyan912001"},"content":"                    \u003cminWidth\u003e","lastModifiedDate":"2021-10-21"},{"lineNumber":23,"author":{"gitId":"ramapriyan912001"},"content":"                        \u003c!-- Ensures that the label text is never truncated --\u003e","lastModifiedDate":"2021-10-21"},{"lineNumber":24,"author":{"gitId":"ramapriyan912001"},"content":"                        \u003cRegion fx:constant\u003d\"USE_PREF_SIZE\" /\u003e","lastModifiedDate":"2021-10-21"},{"lineNumber":25,"author":{"gitId":"ramapriyan912001"},"content":"                    \u003c/minWidth\u003e","lastModifiedDate":"2021-10-21"},{"lineNumber":26,"author":{"gitId":"ramapriyan912001"},"content":"                \u003c/Label\u003e","lastModifiedDate":"2021-10-21"},{"lineNumber":27,"author":{"gitId":"ramapriyan912001"},"content":"                \u003cLabel fx:id\u003d\"paymentText\" text\u003d\"\\$first\" styleClass\u003d\"cell_big_label\" /\u003e","lastModifiedDate":"2021-10-21"},{"lineNumber":28,"author":{"gitId":"ramapriyan912001"},"content":"            \u003c/HBox\u003e","lastModifiedDate":"2021-10-21"},{"lineNumber":29,"author":{"gitId":"ramapriyan912001"},"content":"        \u003c/VBox\u003e","lastModifiedDate":"2021-10-21"},{"lineNumber":30,"author":{"gitId":"ramapriyan912001"},"content":"    \u003c/GridPane\u003e","lastModifiedDate":"2021-10-21"},{"lineNumber":31,"author":{"gitId":"ramapriyan912001"},"content":"\u003c/HBox\u003e","lastModifiedDate":"2021-10-21"}],"authorContributionMap":{"ramapriyan912001":31}},{"path":"src/main/resources/view/PaymentListPanel.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"ramapriyan912001"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2021-10-21"},{"lineNumber":2,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":3,"author":{"gitId":"ramapriyan912001"},"content":"\u003c?import javafx.scene.control.ListView?\u003e","lastModifiedDate":"2021-10-21"},{"lineNumber":4,"author":{"gitId":"ramapriyan912001"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2021-10-21"},{"lineNumber":5,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":6,"author":{"gitId":"ramapriyan912001"},"content":"\u003cVBox xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2021-10-21"},{"lineNumber":7,"author":{"gitId":"ramapriyan912001"},"content":"    \u003cListView fx:id\u003d\"paymentListView\" VBox.vgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2021-10-21"},{"lineNumber":8,"author":{"gitId":"ramapriyan912001"},"content":"\u003c/VBox\u003e","lastModifiedDate":"2021-10-21"}],"authorContributionMap":{"ramapriyan912001":8}},{"path":"src/main/resources/view/PersonListCard.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.ColumnConstraints?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.FlowPane?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.GridPane?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.Region?\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":10,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"\u003cHBox id\u003d\"cardPane\" fx:id\u003d\"cardPane\" xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"  \u003cGridPane HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    \u003ccolumnConstraints\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"      \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10\" prefWidth\u003d\"150\" /\u003e","lastModifiedDate":"2017-03-28"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    \u003c/columnConstraints\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    \u003cVBox alignment\u003d\"CENTER_LEFT\" minHeight\u003d\"105\" GridPane.columnIndex\u003d\"0\"\u003e","lastModifiedDate":"2017-03-28"},{"lineNumber":18,"author":{"gitId":"-"},"content":"      \u003cpadding\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        \u003cInsets top\u003d\"5\" right\u003d\"5\" bottom\u003d\"5\" left\u003d\"15\" /\u003e","lastModifiedDate":"2017-03-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"      \u003c/padding\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"      \u003cHBox spacing\u003d\"5\" alignment\u003d\"CENTER_LEFT\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        \u003cLabel fx:id\u003d\"id\" styleClass\u003d\"cell_big_label\"\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"          \u003cminWidth\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"            \u003c!-- Ensures that the label text is never truncated --\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":25,"author":{"gitId":"-"},"content":"            \u003cRegion fx:constant\u003d\"USE_PREF_SIZE\" /\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":26,"author":{"gitId":"-"},"content":"          \u003c/minWidth\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        \u003c/Label\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        \u003cLabel fx:id\u003d\"name\" text\u003d\"\\$first\" styleClass\u003d\"cell_big_label\" /\u003e","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"      \u003c/HBox\u003e","lastModifiedDate":"2016-09-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"      \u003cFlowPane fx:id\u003d\"tags\" /\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":31,"author":{"gitId":"-"},"content":"      \u003cLabel fx:id\u003d\"phone\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$phone\" /\u003e","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"chrus-chong"},"content":"      \u003cLabel fx:id\u003d\"groups\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$groups\" /\u003e","lastModifiedDate":"2021-09-18"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    \u003c/VBox\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"  \u003c/GridPane\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"\u003c/HBox\u003e","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"chrus-chong":1,"-":34}},{"path":"src/main/resources/view/PersonViewButton.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"marcuspeh"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2021-09-29"},{"lineNumber":2,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":3,"author":{"gitId":"marcuspeh"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2021-09-29"},{"lineNumber":4,"author":{"gitId":"marcuspeh"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2021-09-29"},{"lineNumber":5,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":6,"author":{"gitId":"marcuspeh"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2021-09-29"},{"lineNumber":7,"author":{"gitId":"marcuspeh"},"content":"\u003cHBox xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2021-09-29"},{"lineNumber":8,"author":{"gitId":"marcuspeh"},"content":"   \u003cpadding\u003e","lastModifiedDate":"2021-09-29"},{"lineNumber":9,"author":{"gitId":"marcuspeh"},"content":"      \u003cInsets bottom\u003d\"5.0\" left\u003d\"0.0\" right\u003d\"0.0\" top\u003d\"5.0\" /\u003e","lastModifiedDate":"2021-09-29"},{"lineNumber":10,"author":{"gitId":"marcuspeh"},"content":"   \u003c/padding\u003e","lastModifiedDate":"2021-09-29"},{"lineNumber":11,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":12,"author":{"gitId":"marcuspeh"},"content":"   \u003cchildren\u003e","lastModifiedDate":"2021-09-29"},{"lineNumber":13,"author":{"gitId":"marcuspeh"},"content":"      \u003cButton mnemonicParsing\u003d\"false\" fx:id\u003d\"personViewButton\" text\u003d\"Contacts\" minWidth\u003d\"200\" maxWidth\u003d\"200\"/\u003e","lastModifiedDate":"2021-09-29"},{"lineNumber":14,"author":{"gitId":"marcuspeh"},"content":"   \u003c/children\u003e","lastModifiedDate":"2021-09-29"},{"lineNumber":15,"author":{"gitId":"marcuspeh"},"content":"\u003c/HBox\u003e","lastModifiedDate":"2021-09-29"}],"authorContributionMap":{"marcuspeh":15}},{"path":"src/main/resources/view/ResultDisplay.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.TextArea?\u003e","lastModifiedDate":"2016-10-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.StackPane?\u003e","lastModifiedDate":"2017-06-22"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":6,"author":{"gitId":"marcuspeh"},"content":"\u003cStackPane fx:id\u003d\"placeHolder\" styleClass\u003d\"pane-with-border\" xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2021-09-29"},{"lineNumber":7,"author":{"gitId":"marcuspeh"},"content":"  \u003cTextArea fx:id\u003d\"resultDisplay\" editable\u003d\"false\" styleClass\u003d\"result-display\" wrapText\u003d\"true\" /\u003e","lastModifiedDate":"2021-09-29"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c/StackPane\u003e","lastModifiedDate":"2017-06-22"}],"authorContributionMap":{"marcuspeh":2,"-":6}},{"path":"src/main/resources/view/TransactionSummaryListCard.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Jingwencloud"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2021-10-21"},{"lineNumber":2,"author":{"gitId":"Jingwencloud"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":3,"author":{"gitId":"Jingwencloud"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2021-10-21"},{"lineNumber":4,"author":{"gitId":"Jingwencloud"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2021-10-21"},{"lineNumber":5,"author":{"gitId":"Jingwencloud"},"content":"\u003c?import javafx.scene.layout.ColumnConstraints?\u003e","lastModifiedDate":"2021-10-21"},{"lineNumber":6,"author":{"gitId":"Jingwencloud"},"content":"\u003c?import javafx.scene.layout.GridPane?\u003e","lastModifiedDate":"2021-10-21"},{"lineNumber":7,"author":{"gitId":"Jingwencloud"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2021-10-21"},{"lineNumber":8,"author":{"gitId":"Jingwencloud"},"content":"\u003c?import javafx.scene.layout.Region?\u003e","lastModifiedDate":"2021-10-21"},{"lineNumber":9,"author":{"gitId":"Jingwencloud"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2021-10-21"},{"lineNumber":10,"author":{"gitId":"Jingwencloud"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":11,"author":{"gitId":"Jingwencloud"},"content":"\u003cHBox id\u003d\"cardPane\" fx:id\u003d\"cardPane\" xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2021-10-21"},{"lineNumber":12,"author":{"gitId":"Jingwencloud"},"content":"    \u003cGridPane HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2021-10-21"},{"lineNumber":13,"author":{"gitId":"Jingwencloud"},"content":"        \u003ccolumnConstraints\u003e","lastModifiedDate":"2021-10-21"},{"lineNumber":14,"author":{"gitId":"Jingwencloud"},"content":"            \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10\" prefWidth\u003d\"150\" /\u003e","lastModifiedDate":"2021-10-21"},{"lineNumber":15,"author":{"gitId":"Jingwencloud"},"content":"        \u003c/columnConstraints\u003e","lastModifiedDate":"2021-10-21"},{"lineNumber":16,"author":{"gitId":"Jingwencloud"},"content":"        \u003cVBox alignment\u003d\"CENTER_LEFT\" minHeight\u003d\"105\" GridPane.columnIndex\u003d\"0\"\u003e","lastModifiedDate":"2021-10-21"},{"lineNumber":17,"author":{"gitId":"Jingwencloud"},"content":"            \u003cpadding\u003e","lastModifiedDate":"2021-10-21"},{"lineNumber":18,"author":{"gitId":"Jingwencloud"},"content":"                \u003cInsets top\u003d\"5\" right\u003d\"5\" bottom\u003d\"5\" left\u003d\"15\" /\u003e","lastModifiedDate":"2021-10-21"},{"lineNumber":19,"author":{"gitId":"Jingwencloud"},"content":"            \u003c/padding\u003e","lastModifiedDate":"2021-10-21"},{"lineNumber":20,"author":{"gitId":"Jingwencloud"},"content":"            \u003cHBox spacing\u003d\"5\" alignment\u003d\"CENTER_LEFT\"\u003e","lastModifiedDate":"2021-10-21"},{"lineNumber":21,"author":{"gitId":"Jingwencloud"},"content":"                \u003cLabel fx:id\u003d\"id\" styleClass\u003d\"cell_big_label\"\u003e","lastModifiedDate":"2021-10-21"},{"lineNumber":22,"author":{"gitId":"Jingwencloud"},"content":"                    \u003cminWidth\u003e","lastModifiedDate":"2021-10-21"},{"lineNumber":23,"author":{"gitId":"Jingwencloud"},"content":"                        \u003c!-- Ensures that the label text is never truncated --\u003e","lastModifiedDate":"2021-10-21"},{"lineNumber":24,"author":{"gitId":"Jingwencloud"},"content":"                        \u003cRegion fx:constant\u003d\"USE_PREF_SIZE\" /\u003e","lastModifiedDate":"2021-10-21"},{"lineNumber":25,"author":{"gitId":"Jingwencloud"},"content":"                    \u003c/minWidth\u003e","lastModifiedDate":"2021-10-21"},{"lineNumber":26,"author":{"gitId":"Jingwencloud"},"content":"                \u003c/Label\u003e","lastModifiedDate":"2021-10-21"},{"lineNumber":27,"author":{"gitId":"Jingwencloud"},"content":"                \u003cLabel fx:id\u003d\"payer\" text\u003d\"\\$first\" styleClass\u003d\"cell_big_label\" /\u003e","lastModifiedDate":"2021-10-21"},{"lineNumber":28,"author":{"gitId":"Jingwencloud"},"content":"            \u003c/HBox\u003e","lastModifiedDate":"2021-10-21"},{"lineNumber":29,"author":{"gitId":"Jingwencloud"},"content":"            \u003cLabel fx:id\u003d\"cost\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$cost\" /\u003e","lastModifiedDate":"2021-10-21"},{"lineNumber":30,"author":{"gitId":"Jingwencloud"},"content":"        \u003c/VBox\u003e","lastModifiedDate":"2021-10-21"},{"lineNumber":31,"author":{"gitId":"Jingwencloud"},"content":"    \u003c/GridPane\u003e","lastModifiedDate":"2021-10-21"},{"lineNumber":32,"author":{"gitId":"Jingwencloud"},"content":"\u003c/HBox\u003e","lastModifiedDate":"2021-10-21"},{"lineNumber":33,"author":{"gitId":"Jingwencloud"},"content":"","lastModifiedDate":"2021-10-21"}],"authorContributionMap":{"Jingwencloud":33}},{"path":"src/main/resources/view/TransactionSummaryListPanel.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Jingwencloud"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2021-10-21"},{"lineNumber":2,"author":{"gitId":"Jingwencloud"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":3,"author":{"gitId":"Jingwencloud"},"content":"\u003c?import javafx.scene.control.ListView?\u003e","lastModifiedDate":"2021-10-21"},{"lineNumber":4,"author":{"gitId":"Jingwencloud"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2021-10-21"},{"lineNumber":5,"author":{"gitId":"Jingwencloud"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":6,"author":{"gitId":"Jingwencloud"},"content":"\u003cVBox xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2021-10-21"},{"lineNumber":7,"author":{"gitId":"Jingwencloud"},"content":"    \u003cListView fx:id\u003d\"transactionSummaryListView\" VBox.vgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2021-10-21"},{"lineNumber":8,"author":{"gitId":"Jingwencloud"},"content":"\u003c/VBox\u003e","lastModifiedDate":"2021-10-21"}],"authorContributionMap":{"Jingwencloud":8}},{"path":"src/main/resources/view/ViewPanel.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"marcuspeh"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2021-09-29"},{"lineNumber":2,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":3,"author":{"gitId":"marcuspeh"},"content":"\u003c?import javafx.scene.layout.StackPane?\u003e","lastModifiedDate":"2021-09-29"},{"lineNumber":4,"author":{"gitId":"marcuspeh"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2021-09-29"},{"lineNumber":5,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-09-29"},{"lineNumber":6,"author":{"gitId":"marcuspeh"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2021-09-29"},{"lineNumber":7,"author":{"gitId":"marcuspeh"},"content":"\u003c?import java.net.URL?\u003e","lastModifiedDate":"2021-09-29"},{"lineNumber":8,"author":{"gitId":"marcuspeh"},"content":"\u003cStackPane xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2021-09-30"},{"lineNumber":9,"author":{"gitId":"marcuspeh"},"content":"    \u003cstylesheets\u003e","lastModifiedDate":"2021-09-29"},{"lineNumber":10,"author":{"gitId":"marcuspeh"},"content":"        \u003cURL value\u003d\"@DarkTheme.css\" /\u003e","lastModifiedDate":"2021-09-29"},{"lineNumber":11,"author":{"gitId":"marcuspeh"},"content":"    \u003c/stylesheets\u003e","lastModifiedDate":"2021-09-29"},{"lineNumber":12,"author":{"gitId":"marcuspeh"},"content":"    \u003cVBox fx:id\u003d\"viewList\" styleClass\u003d\"pane-with-border\" minWidth\u003d\"340\" prefWidth\u003d\"340\" VBox.vgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2021-09-29"},{"lineNumber":13,"author":{"gitId":"marcuspeh"},"content":"        \u003cpadding\u003e","lastModifiedDate":"2021-09-29"},{"lineNumber":14,"author":{"gitId":"marcuspeh"},"content":"            \u003cInsets top\u003d\"10\" right\u003d\"10\" bottom\u003d\"10\" left\u003d\"10\" /\u003e","lastModifiedDate":"2021-09-29"},{"lineNumber":15,"author":{"gitId":"marcuspeh"},"content":"        \u003c/padding\u003e","lastModifiedDate":"2021-09-29"},{"lineNumber":16,"author":{"gitId":"marcuspeh"},"content":"        \u003cStackPane fx:id\u003d\"viewListPlaceholder\" VBox.vgrow\u003d\"ALWAYS\"/\u003e","lastModifiedDate":"2021-09-29"},{"lineNumber":17,"author":{"gitId":"marcuspeh"},"content":"    \u003c/VBox\u003e","lastModifiedDate":"2021-09-29"},{"lineNumber":18,"author":{"gitId":"marcuspeh"},"content":"\u003c/StackPane \u003e","lastModifiedDate":"2021-09-29"}],"authorContributionMap":{"marcuspeh":18}},{"path":"src/test/data/JsonAddressBookStorageTest/invalidAndValidPersonAwe.json","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"{","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  \"persons\": [ {","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    \"name\": \"Valid Person\",","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"marcuspeh"},"content":"    \"phone\": \"9482424\"","lastModifiedDate":"2021-11-01"},{"lineNumber":5,"author":{"gitId":"-"},"content":"  }, {","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    \"name\": \"Person With Invalid Phone Field\",","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"marcuspeh"},"content":"    \"phone\": \"948asdf2424\"","lastModifiedDate":"2021-11-01"},{"lineNumber":8,"author":{"gitId":"-"},"content":"  } ]","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"marcuspeh":2,"-":7}},{"path":"src/test/data/JsonAddressBookStorageTest/invalidPersonAwe.json","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"{","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  \"persons\": [ {","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    \"name\": \"Person with invalid name field: Ha!ns Mu@ster\",","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"marcuspeh"},"content":"    \"phone\": \"9482424\"","lastModifiedDate":"2021-11-01"},{"lineNumber":5,"author":{"gitId":"-"},"content":"  } ]","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"marcuspeh":1,"-":5}},{"path":"src/test/data/JsonSerializableAweTest/duplicateGroupAwe.json","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"marcuspeh"},"content":"{","lastModifiedDate":"2021-11-01"},{"lineNumber":2,"author":{"gitId":"marcuspeh"},"content":"  \"persons\": [ {","lastModifiedDate":"2021-11-01"},{"lineNumber":3,"author":{"gitId":"marcuspeh"},"content":"    \"name\": \"Alice Pauline\",","lastModifiedDate":"2021-11-01"},{"lineNumber":4,"author":{"gitId":"marcuspeh"},"content":"    \"phone\": \"94351253\",","lastModifiedDate":"2021-11-01"},{"lineNumber":5,"author":{"gitId":"marcuspeh"},"content":"    \"tagged\": [ \"friends\" ]","lastModifiedDate":"2021-11-01"},{"lineNumber":6,"author":{"gitId":"marcuspeh"},"content":"  }],","lastModifiedDate":"2021-11-01"},{"lineNumber":7,"author":{"gitId":"marcuspeh"},"content":"  \"groups\": [","lastModifiedDate":"2021-11-01"},{"lineNumber":8,"author":{"gitId":"marcuspeh"},"content":"    {","lastModifiedDate":"2021-11-01"},{"lineNumber":9,"author":{"gitId":"marcuspeh"},"content":"      \"name\": \"Dubai\",","lastModifiedDate":"2021-11-01"},{"lineNumber":10,"author":{"gitId":"marcuspeh"},"content":"      \"members\": [","lastModifiedDate":"2021-11-01"},{"lineNumber":11,"author":{"gitId":"marcuspeh"},"content":"        {","lastModifiedDate":"2021-11-01"},{"lineNumber":12,"author":{"gitId":"marcuspeh"},"content":"          \"name\": \"Alice Pauline\",","lastModifiedDate":"2021-11-01"},{"lineNumber":13,"author":{"gitId":"marcuspeh"},"content":"          \"phone\": \"94351253\"","lastModifiedDate":"2021-11-01"},{"lineNumber":14,"author":{"gitId":"marcuspeh"},"content":"        }","lastModifiedDate":"2021-11-01"},{"lineNumber":15,"author":{"gitId":"marcuspeh"},"content":"      ]","lastModifiedDate":"2021-11-01"},{"lineNumber":16,"author":{"gitId":"marcuspeh"},"content":"    }, {","lastModifiedDate":"2021-11-01"},{"lineNumber":17,"author":{"gitId":"marcuspeh"},"content":"      \"name\": \"Dubai\",","lastModifiedDate":"2021-11-01"},{"lineNumber":18,"author":{"gitId":"marcuspeh"},"content":"      \"members\": [","lastModifiedDate":"2021-11-01"},{"lineNumber":19,"author":{"gitId":"marcuspeh"},"content":"        {","lastModifiedDate":"2021-11-01"},{"lineNumber":20,"author":{"gitId":"marcuspeh"},"content":"          \"name\": \"Alice Pauline\",","lastModifiedDate":"2021-11-01"},{"lineNumber":21,"author":{"gitId":"marcuspeh"},"content":"          \"phone\": \"94351253\"","lastModifiedDate":"2021-11-01"},{"lineNumber":22,"author":{"gitId":"marcuspeh"},"content":"        }","lastModifiedDate":"2021-11-01"},{"lineNumber":23,"author":{"gitId":"marcuspeh"},"content":"      ]","lastModifiedDate":"2021-11-01"},{"lineNumber":24,"author":{"gitId":"marcuspeh"},"content":"    }","lastModifiedDate":"2021-11-01"},{"lineNumber":25,"author":{"gitId":"marcuspeh"},"content":"  ]","lastModifiedDate":"2021-11-01"},{"lineNumber":26,"author":{"gitId":"marcuspeh"},"content":"}","lastModifiedDate":"2021-11-01"}],"authorContributionMap":{"marcuspeh":26}},{"path":"src/test/data/JsonSerializableAweTest/duplicatePersonAwe.json","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"{","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  \"persons\": [ {","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    \"name\": \"Alice Pauline\",","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    \"phone\": \"94351253\",","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    \"tagged\": [ \"friends\" ]","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"  }, {","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    \"name\": \"Alice Pauline\",","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"marcuspeh"},"content":"    \"phone\": \"94351253\"","lastModifiedDate":"2021-11-01"},{"lineNumber":9,"author":{"gitId":"ramapriyan912001"},"content":"  } ],","lastModifiedDate":"2021-09-26"},{"lineNumber":10,"author":{"gitId":"ramapriyan912001"},"content":"  \"groups\": [","lastModifiedDate":"2021-09-26"},{"lineNumber":11,"author":{"gitId":"ramapriyan912001"},"content":"    {","lastModifiedDate":"2021-09-26"},{"lineNumber":12,"author":{"gitId":"ramapriyan912001"},"content":"      \"name\": \"Dubai\",","lastModifiedDate":"2021-09-26"},{"lineNumber":13,"author":{"gitId":"ramapriyan912001"},"content":"      \"members\": [","lastModifiedDate":"2021-09-26"},{"lineNumber":14,"author":{"gitId":"ramapriyan912001"},"content":"        {","lastModifiedDate":"2021-09-26"},{"lineNumber":15,"author":{"gitId":"ramapriyan912001"},"content":"          \"name\": \"Alice Pauline\",","lastModifiedDate":"2021-09-26"},{"lineNumber":16,"author":{"gitId":"marcuspeh"},"content":"          \"phone\": \"94351253\"","lastModifiedDate":"2021-11-01"},{"lineNumber":17,"author":{"gitId":"ramapriyan912001"},"content":"        },","lastModifiedDate":"2021-09-26"},{"lineNumber":18,"author":{"gitId":"ramapriyan912001"},"content":"        {","lastModifiedDate":"2021-09-26"},{"lineNumber":19,"author":{"gitId":"ramapriyan912001"},"content":"          \"name\": \"Alice Pauline\",","lastModifiedDate":"2021-09-26"},{"lineNumber":20,"author":{"gitId":"marcuspeh"},"content":"          \"phone\": \"94351253\"","lastModifiedDate":"2021-11-01"},{"lineNumber":21,"author":{"gitId":"ramapriyan912001"},"content":"        }","lastModifiedDate":"2021-09-26"},{"lineNumber":22,"author":{"gitId":"ramapriyan912001"},"content":"      ]","lastModifiedDate":"2021-09-26"},{"lineNumber":23,"author":{"gitId":"ramapriyan912001"},"content":"    }","lastModifiedDate":"2021-09-26"},{"lineNumber":24,"author":{"gitId":"ramapriyan912001"},"content":"  ]","lastModifiedDate":"2021-09-26"},{"lineNumber":25,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"marcuspeh":3,"ramapriyan912001":14,"-":8}},{"path":"src/test/data/JsonSerializableAweTest/typicalPersonsAwe.json","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"{","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  \"_comment\": \"AddressBook save file which contains the same Person values as in TypicalPersons#getTypicalAddressBook()\",","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"  \"persons\" : [ {","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    \"name\" : \"Alice Pauline\",","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    \"phone\" : \"94351253\",","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    \"tagged\" : [ \"friends\" ]","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"  }, {","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    \"name\" : \"Benson Meier\",","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    \"phone\" : \"98765432\",","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    \"tagged\" : [ \"owesMoney\", \"friends\" ]","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"  }, {","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    \"name\" : \"Carl Kurz\",","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    \"phone\" : \"95352563\",","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    \"tagged\" : [ ]","lastModifiedDate":"2018-08-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"  }, {","lastModifiedDate":"2018-08-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    \"name\" : \"Daniel Meier\",","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    \"phone\" : \"87652533\",","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    \"tagged\" : [ \"friends\" ]","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"  }, {","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    \"name\" : \"Elle Meyer\",","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    \"phone\" : \"9482224\",","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    \"tagged\" : [ ]","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"  }, {","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    \"name\" : \"Fiona Kunz\",","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    \"phone\" : \"9482427\",","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    \"tagged\" : [ ]","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"  }, {","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    \"name\" : \"George Best\",","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    \"phone\" : \"9482442\",","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    \"tagged\" : [ ]","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"ramapriyan912001"},"content":"  } ],","lastModifiedDate":"2021-09-26"},{"lineNumber":32,"author":{"gitId":"ramapriyan912001"},"content":"  \"groups\": []","lastModifiedDate":"2021-09-26"},{"lineNumber":33,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"ramapriyan912001":2,"-":31}},{"path":"src/test/data/JsonUserPrefsStorageTest/ExtraValuesUserPref.json","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"{","lastModifiedDate":"2016-09-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  \"guiSettings\" : {","lastModifiedDate":"2016-09-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    \"windowWidth\" : 1000.0,","lastModifiedDate":"2016-09-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    \"windowHeight\" : 500.0,","lastModifiedDate":"2016-09-24"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    \"extra\" : \"some value \",","lastModifiedDate":"2016-09-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    \"windowCoordinates\" : {","lastModifiedDate":"2016-09-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"      \"x\" : 300,","lastModifiedDate":"2016-09-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"      \"y\" : 100,","lastModifiedDate":"2016-09-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"      \"z\" : 99","lastModifiedDate":"2016-09-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"  },","lastModifiedDate":"2017-02-25"},{"lineNumber":12,"author":{"gitId":"ramapriyan912001"},"content":"  \"addressBookFilePath\" : \"awe.json\"","lastModifiedDate":"2021-10-31"},{"lineNumber":13,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-24"}],"authorContributionMap":{"ramapriyan912001":1,"-":12}},{"path":"src/test/data/JsonUserPrefsStorageTest/TypicalUserPref.json","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"{","lastModifiedDate":"2016-09-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  \"guiSettings\" : {","lastModifiedDate":"2016-09-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    \"windowWidth\" : 1000.0,","lastModifiedDate":"2016-09-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    \"windowHeight\" : 500.0,","lastModifiedDate":"2016-09-24"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    \"windowCoordinates\" : {","lastModifiedDate":"2016-09-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"      \"x\" : 300,","lastModifiedDate":"2016-09-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"      \"y\" : 100","lastModifiedDate":"2016-09-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"  },","lastModifiedDate":"2017-02-25"},{"lineNumber":10,"author":{"gitId":"ramapriyan912001"},"content":"  \"addressBookFilePath\" : \"awe.json\"","lastModifiedDate":"2021-10-31"},{"lineNumber":11,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-24"}],"authorContributionMap":{"ramapriyan912001":1,"-":10}},{"path":"src/test/java/seedu/awe/AppParametersTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"ramapriyan912001"},"content":"package seedu.awe;","lastModifiedDate":"2021-10-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"marcuspeh"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-11-01"},{"lineNumber":5,"author":{"gitId":"marcuspeh"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-11-01"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2018-04-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.HashMap;","lastModifiedDate":"2018-04-21"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-04-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Map;","lastModifiedDate":"2018-04-21"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import javafx.application.Application;","lastModifiedDate":"2018-04-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public class AppParametersTest {","lastModifiedDate":"2018-04-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private final ParametersStub parametersStub \u003d new ParametersStub();","lastModifiedDate":"2018-04-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private final AppParameters expected \u003d new AppParameters();","lastModifiedDate":"2018-04-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public void parse_validConfigPath_success() {","lastModifiedDate":"2018-04-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        parametersStub.namedParameters.put(\"config\", \"config.json\");","lastModifiedDate":"2018-04-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        expected.setConfigPath(Paths.get(\"config.json\"));","lastModifiedDate":"2018-04-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        assertEquals(expected, AppParameters.parse(parametersStub));","lastModifiedDate":"2018-04-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public void parse_nullConfigPath_success() {","lastModifiedDate":"2018-04-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        parametersStub.namedParameters.put(\"config\", null);","lastModifiedDate":"2018-04-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertEquals(expected, AppParameters.parse(parametersStub));","lastModifiedDate":"2018-04-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public void parse_invalidConfigPath_success() {","lastModifiedDate":"2018-04-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        parametersStub.namedParameters.put(\"config\", \"a\\0\");","lastModifiedDate":"2018-04-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        expected.setConfigPath(null);","lastModifiedDate":"2018-04-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertEquals(expected, AppParameters.parse(parametersStub));","lastModifiedDate":"2018-04-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":42,"author":{"gitId":"marcuspeh"},"content":"    @Test","lastModifiedDate":"2021-11-01"},{"lineNumber":43,"author":{"gitId":"marcuspeh"},"content":"    public void equals() {","lastModifiedDate":"2021-11-01"},{"lineNumber":44,"author":{"gitId":"marcuspeh"},"content":"        // Same object -\u003e true","lastModifiedDate":"2021-11-01"},{"lineNumber":45,"author":{"gitId":"marcuspeh"},"content":"        assertTrue(expected.equals(expected));","lastModifiedDate":"2021-11-01"},{"lineNumber":46,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":47,"author":{"gitId":"marcuspeh"},"content":"        // null object -\u003e false","lastModifiedDate":"2021-11-01"},{"lineNumber":48,"author":{"gitId":"marcuspeh"},"content":"        assertFalse(expected.equals(null));","lastModifiedDate":"2021-11-01"},{"lineNumber":49,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":50,"author":{"gitId":"marcuspeh"},"content":"        // other objects passed in","lastModifiedDate":"2021-11-01"},{"lineNumber":51,"author":{"gitId":"marcuspeh"},"content":"        assertFalse(expected.equals(\"hello\"));","lastModifiedDate":"2021-11-01"},{"lineNumber":52,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":53,"author":{"gitId":"marcuspeh"},"content":"        // Another instance passed in","lastModifiedDate":"2021-11-01"},{"lineNumber":54,"author":{"gitId":"marcuspeh"},"content":"        assertTrue(expected.equals(new AppParameters()));","lastModifiedDate":"2021-11-01"},{"lineNumber":55,"author":{"gitId":"marcuspeh"},"content":"        assertEquals(expected, new AppParameters());","lastModifiedDate":"2021-11-01"},{"lineNumber":56,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":57,"author":{"gitId":"marcuspeh"},"content":"    }","lastModifiedDate":"2021-11-01"},{"lineNumber":58,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    private static class ParametersStub extends Application.Parameters {","lastModifiedDate":"2018-04-21"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        private Map\u003cString, String\u003e namedParameters \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2018-04-21"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-04-21"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        public List\u003cString\u003e getRaw() {","lastModifiedDate":"2018-04-21"},{"lineNumber":64,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"should not be called\");","lastModifiedDate":"2018-04-21"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-04-21"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        public List\u003cString\u003e getUnnamed() {","lastModifiedDate":"2018-04-21"},{"lineNumber":69,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"should not be called\");","lastModifiedDate":"2018-04-21"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-04-21"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        public Map\u003cString, String\u003e getNamed() {","lastModifiedDate":"2018-04-21"},{"lineNumber":74,"author":{"gitId":"-"},"content":"            return Collections.unmodifiableMap(namedParameters);","lastModifiedDate":"2018-04-21"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":77,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-04-21"}],"authorContributionMap":{"marcuspeh":19,"ramapriyan912001":1,"-":57}},{"path":"src/test/java/seedu/awe/commons/core/ConfigTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"ramapriyan912001"},"content":"package seedu.awe.commons.core;","lastModifiedDate":"2021-10-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class ConfigTest {","lastModifiedDate":"2016-09-30"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void toString_defaultObject_stringReturned() {","lastModifiedDate":"2016-09-30"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        String defaultConfigAsString \u003d \"Current log level : INFO\\n\"","lastModifiedDate":"2018-12-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"                + \"Preference file Location : preferences.json\";","lastModifiedDate":"2017-05-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        assertEquals(defaultConfigAsString, new Config().toString());","lastModifiedDate":"2016-09-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public void equalsMethod() {","lastModifiedDate":"2016-09-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        Config defaultConfig \u003d new Config();","lastModifiedDate":"2016-09-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        assertNotNull(defaultConfig);","lastModifiedDate":"2016-10-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertTrue(defaultConfig.equals(defaultConfig));","lastModifiedDate":"2016-09-30"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":27,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-30"}],"authorContributionMap":{"ramapriyan912001":1,"-":26}},{"path":"src/test/java/seedu/awe/commons/core/VersionTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"ramapriyan912001"},"content":"package seedu.awe.commons.core;","lastModifiedDate":"2021-10-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"ramapriyan912001"},"content":"import static seedu.awe.testutil.Assert.assertThrows;","lastModifiedDate":"2021-10-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class VersionTest {","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void versionParsing_acceptableVersionString_parsedVersionCorrectly() {","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        verifyVersionParsedCorrectly(\"V0.0.0ea\", 0, 0, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"        verifyVersionParsedCorrectly(\"V3.10.2\", 3, 10, 2, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        verifyVersionParsedCorrectly(\"V100.100.100ea\", 100, 100, 100, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public void versionParsing_wrongVersionString_throwIllegalArgumentException() {","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e Version.fromString(\"This is not a version string\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void versionConstructor_correctParameter_valueAsExpected() {","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        Version version \u003d new Version(19, 10, 20, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertEquals(19, version.getMajor());","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertEquals(10, version.getMinor());","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertEquals(20, version.getPatch());","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertEquals(true, version.isEarlyAccess());","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public void versionToString_validVersion_correctStringRepresentation() {","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // boundary at 0","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        Version version \u003d new Version(0, 0, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertEquals(\"V0.0.0ea\", version.toString());","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        // normal values","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        version \u003d new Version(4, 10, 5, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertEquals(\"V4.10.5\", version.toString());","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        // big numbers","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        version \u003d new Version(100, 100, 100, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertEquals(\"V100.100.100ea\", version.toString());","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public void versionComparable_validVersion_compareToIsCorrect() {","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        Version one;","lastModifiedDate":"2017-09-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        Version another;","lastModifiedDate":"2017-09-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        // Tests equality","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        one \u003d new Version(0, 0, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 0, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003d\u003d 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        one \u003d new Version(11, 12, 13, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        another \u003d new Version(11, 12, 13, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003d\u003d 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        // Tests different patch","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        one \u003d new Version(0, 0, 5, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 0, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003e 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        // Tests different minor","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        one \u003d new Version(0, 0, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 5, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003c 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        // Tests different major","lastModifiedDate":"2016-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        one \u003d new Version(10, 0, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 0, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003e 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        // Tests high major vs low minor","lastModifiedDate":"2016-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        one \u003d new Version(10, 0, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 1, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003e 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        // Tests high patch vs low minor","lastModifiedDate":"2016-08-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        one \u003d new Version(0, 0, 10, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 1, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003c 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        // Tests same major minor different patch","lastModifiedDate":"2016-08-08"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        one \u003d new Version(2, 15, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        another \u003d new Version(2, 15, 5, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003c 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        // Tests early access vs not early access on same version number","lastModifiedDate":"2016-08-08"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        one \u003d new Version(2, 15, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        another \u003d new Version(2, 15, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003c 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        // Tests early access lower version vs not early access higher version compare by version number first","lastModifiedDate":"2016-08-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        one \u003d new Version(2, 15, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        another \u003d new Version(2, 15, 5, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003c 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        // Tests early access higher version vs not early access lower version compare by version number first","lastModifiedDate":"2016-08-08"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        one \u003d new Version(2, 15, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        another \u003d new Version(2, 15, 5, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003c 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    public void versionComparable_validVersion_hashCodeIsCorrect() {","lastModifiedDate":"2016-08-08"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        Version version \u003d new Version(100, 100, 100, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        assertEquals(100100100, version.hashCode());","lastModifiedDate":"2016-08-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        version \u003d new Version(10, 10, 10, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        assertEquals(1010010010, version.hashCode());","lastModifiedDate":"2016-08-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    public void versionComparable_validVersion_equalIsCorrect() {","lastModifiedDate":"2016-08-08"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        Version one;","lastModifiedDate":"2016-10-16"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        Version another;","lastModifiedDate":"2016-10-16"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        one \u003d new Version(0, 0, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 0, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        assertTrue(one.equals(another));","lastModifiedDate":"2016-08-08"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        one \u003d new Version(100, 191, 275, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        another \u003d new Version(100, 191, 275, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        assertTrue(one.equals(another));","lastModifiedDate":"2016-08-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    private void verifyVersionParsedCorrectly(String versionString,","lastModifiedDate":"2016-08-08"},{"lineNumber":132,"author":{"gitId":"-"},"content":"            int major, int minor, int patch, boolean isEarlyAccess) {","lastModifiedDate":"2016-08-08"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        assertEquals(new Version(major, minor, patch, isEarlyAccess), Version.fromString(versionString));","lastModifiedDate":"2016-08-08"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":135,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"ramapriyan912001":2,"-":133}},{"path":"src/test/java/seedu/awe/commons/core/index/IndexTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"ramapriyan912001"},"content":"package seedu.awe.commons.core.index;","lastModifiedDate":"2021-10-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"ramapriyan912001"},"content":"import static seedu.awe.testutil.Assert.assertThrows;","lastModifiedDate":"2021-10-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class IndexTest {","lastModifiedDate":"2017-05-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public void createOneBasedIndex() {","lastModifiedDate":"2017-05-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"        // invalid index","lastModifiedDate":"2017-05-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        assertThrows(IndexOutOfBoundsException.class, () -\u003e Index.fromOneBased(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        // check equality using the same base","lastModifiedDate":"2017-05-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        assertEquals(1, Index.fromOneBased(1).getOneBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertEquals(5, Index.fromOneBased(5).getOneBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        // convert from one-based index to zero-based index","lastModifiedDate":"2017-05-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        assertEquals(0, Index.fromOneBased(1).getZeroBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertEquals(4, Index.fromOneBased(5).getZeroBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void createZeroBasedIndex() {","lastModifiedDate":"2017-05-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        // invalid index","lastModifiedDate":"2017-05-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertThrows(IndexOutOfBoundsException.class, () -\u003e Index.fromZeroBased(-1));","lastModifiedDate":"2019-03-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // check equality using the same base","lastModifiedDate":"2017-05-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertEquals(0, Index.fromZeroBased(0).getZeroBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertEquals(5, Index.fromZeroBased(5).getZeroBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // convert from zero-based index to one-based index","lastModifiedDate":"2017-05-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertEquals(1, Index.fromZeroBased(0).getOneBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertEquals(6, Index.fromZeroBased(5).getOneBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-05-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        final Index fifthPersonIndex \u003d Index.fromOneBased(5);","lastModifiedDate":"2017-05-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertTrue(fifthPersonIndex.equals(Index.fromOneBased(5)));","lastModifiedDate":"2017-05-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertTrue(fifthPersonIndex.equals(Index.fromZeroBased(4)));","lastModifiedDate":"2017-05-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertTrue(fifthPersonIndex.equals(fifthPersonIndex));","lastModifiedDate":"2017-05-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertFalse(fifthPersonIndex.equals(null));","lastModifiedDate":"2017-05-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        assertFalse(fifthPersonIndex.equals(5.0f));","lastModifiedDate":"2017-05-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        // different index -\u003e returns false","lastModifiedDate":"2017-05-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertFalse(fifthPersonIndex.equals(Index.fromOneBased(1)));","lastModifiedDate":"2017-05-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-24"}],"authorContributionMap":{"ramapriyan912001":2,"-":58}},{"path":"src/test/java/seedu/awe/commons/util/AppUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"ramapriyan912001"},"content":"package seedu.awe.commons.util;","lastModifiedDate":"2021-10-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"ramapriyan912001"},"content":"import static seedu.awe.testutil.Assert.assertThrows;","lastModifiedDate":"2021-10-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class AppUtilTest {","lastModifiedDate":"2016-09-30"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    public void getImage_exitingImage() {","lastModifiedDate":"2016-09-30"},{"lineNumber":12,"author":{"gitId":"kheekheekhee"},"content":"        assertNotNull(AppUtil.getImage(\"/images/awe_logo_32.png\"));","lastModifiedDate":"2021-10-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public void getImage_nullGiven_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e AppUtil.getImage(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-15"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public void checkArgument_true_nothingHappens() {","lastModifiedDate":"2017-05-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        AppUtil.checkArgument(true);","lastModifiedDate":"2017-05-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        AppUtil.checkArgument(true, \"\");","lastModifiedDate":"2017-05-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-15"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void checkArgument_falseWithoutErrorMessage_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e AppUtil.checkArgument(false));","lastModifiedDate":"2019-03-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public void checkArgument_falseWithErrorMessage_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        String errorMessage \u003d \"error message\";","lastModifiedDate":"2017-05-15"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, errorMessage, () -\u003e AppUtil.checkArgument(false, errorMessage));","lastModifiedDate":"2019-03-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-30"}],"authorContributionMap":{"kheekheekhee":1,"ramapriyan912001":2,"-":33}},{"path":"src/test/java/seedu/awe/commons/util/CollectionUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"ramapriyan912001"},"content":"package seedu.awe.commons.util;","lastModifiedDate":"2021-10-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"ramapriyan912001"},"content":"import static seedu.awe.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2021-10-05"},{"lineNumber":6,"author":{"gitId":"ramapriyan912001"},"content":"import static seedu.awe.testutil.Assert.assertThrows;","lastModifiedDate":"2021-10-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2016-12-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2017-01-14"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-01-14"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-12-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class CollectionUtilTest {","lastModifiedDate":"2016-12-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-22"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void requireAllNonNullVarargs() {","lastModifiedDate":"2017-05-19"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        // no arguments","lastModifiedDate":"2017-01-14"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown();","lastModifiedDate":"2017-05-19"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        // any non-empty argument list","lastModifiedDate":"2017-01-14"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(new Object(), new Object());","lastModifiedDate":"2017-05-19"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(\"test\");","lastModifiedDate":"2017-05-19"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(\"\");","lastModifiedDate":"2017-05-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        // argument lists with just one null at the beginning","lastModifiedDate":"2017-01-14"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown((Object) null);","lastModifiedDate":"2017-05-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(null, \"\", new Object());","lastModifiedDate":"2017-05-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(null, new Object(), new Object());","lastModifiedDate":"2017-05-19"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // argument lists with nulls in the middle","lastModifiedDate":"2017-01-14"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(new Object(), null, null, \"test\");","lastModifiedDate":"2017-05-19"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(\"\", null, new Object());","lastModifiedDate":"2017-05-19"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // argument lists with one null as the last argument","lastModifiedDate":"2017-01-14"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(\"\", new Object(), null);","lastModifiedDate":"2017-05-19"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(new Object(), new Object(), null);","lastModifiedDate":"2017-05-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        // null reference","lastModifiedDate":"2017-05-19"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown((Object[]) null);","lastModifiedDate":"2017-05-19"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        // confirms nulls inside lists in the argument list are not considered","lastModifiedDate":"2017-01-14"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        List\u003cObject\u003e containingNull \u003d Arrays.asList((Object) null);","lastModifiedDate":"2017-01-14"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(containingNull, new Object());","lastModifiedDate":"2017-05-19"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-14"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-14"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-01-14"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public void requireAllNonNullCollection() {","lastModifiedDate":"2017-05-19"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        // lists containing nulls in the front","lastModifiedDate":"2017-01-14"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(Arrays.asList((Object) null));","lastModifiedDate":"2017-05-19"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(Arrays.asList(null, new Object(), \"\"));","lastModifiedDate":"2017-05-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-14"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        // lists containing nulls in the middle","lastModifiedDate":"2017-01-14"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(Arrays.asList(\"spam\", null, new Object()));","lastModifiedDate":"2017-05-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(Arrays.asList(\"spam\", null, \"eggs\", null, new Object()));","lastModifiedDate":"2017-05-19"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-14"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        // lists containing nulls at the end","lastModifiedDate":"2017-01-14"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(Arrays.asList(\"spam\", new Object(), null));","lastModifiedDate":"2017-05-19"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(Arrays.asList(new Object(), null));","lastModifiedDate":"2017-05-19"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        // null reference","lastModifiedDate":"2017-05-19"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown((Collection\u003cObject\u003e) null);","lastModifiedDate":"2017-05-19"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-14"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        // empty list","lastModifiedDate":"2017-01-14"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(Collections.emptyList());","lastModifiedDate":"2017-05-19"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-14"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        // list with all non-null elements","lastModifiedDate":"2017-01-14"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(Arrays.asList(new Object(), \"ham\", Integer.valueOf(1)));","lastModifiedDate":"2018-04-01"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(Arrays.asList(new Object()));","lastModifiedDate":"2017-05-19"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-14"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        // confirms nulls inside nested lists are not considered","lastModifiedDate":"2017-01-14"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        List\u003cObject\u003e containingNull \u003d Arrays.asList((Object) null);","lastModifiedDate":"2017-01-14"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(Arrays.asList(containingNull, new Object()));","lastModifiedDate":"2017-05-19"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-22"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-21"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public void isAnyNonNull() {","lastModifiedDate":"2017-06-21"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertFalse(CollectionUtil.isAnyNonNull());","lastModifiedDate":"2017-06-21"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        assertFalse(CollectionUtil.isAnyNonNull((Object) null));","lastModifiedDate":"2017-06-21"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        assertFalse(CollectionUtil.isAnyNonNull((Object[]) null));","lastModifiedDate":"2017-06-21"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assertTrue(CollectionUtil.isAnyNonNull(new Object()));","lastModifiedDate":"2017-06-21"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertTrue(CollectionUtil.isAnyNonNull(new Object(), null));","lastModifiedDate":"2017-06-21"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-21"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-21"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-20"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * Asserts that {@code CollectionUtil#requireAllNonNull(Object...)} throw {@code NullPointerException}","lastModifiedDate":"2017-08-20"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     * if {@code objects} or any element of {@code objects} is null.","lastModifiedDate":"2017-08-20"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-20"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    private void assertNullPointerExceptionThrown(Object... objects) {","lastModifiedDate":"2017-05-19"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e requireAllNonNull(objects));","lastModifiedDate":"2019-03-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-19"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-20"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     * Asserts that {@code CollectionUtil#requireAllNonNull(Collection\u003c?\u003e)} throw {@code NullPointerException}","lastModifiedDate":"2017-08-20"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     * if {@code collection} or any element of {@code collection} is null.","lastModifiedDate":"2017-08-20"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-20"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    private void assertNullPointerExceptionThrown(Collection\u003c?\u003e collection) {","lastModifiedDate":"2017-05-19"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e requireAllNonNull(collection));","lastModifiedDate":"2019-03-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-19"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    private void assertNullPointerExceptionNotThrown(Object... objects) {","lastModifiedDate":"2017-05-19"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        requireAllNonNull(objects);","lastModifiedDate":"2017-05-19"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-19"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    private void assertNullPointerExceptionNotThrown(Collection\u003c?\u003e collection) {","lastModifiedDate":"2017-05-19"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        requireAllNonNull(collection);","lastModifiedDate":"2017-05-19"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-19"},{"lineNumber":108,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-22"}],"authorContributionMap":{"ramapriyan912001":3,"-":105}},{"path":"src/test/java/seedu/awe/commons/util/ConfigUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"ramapriyan912001"},"content":"package seedu.awe.commons.util;","lastModifiedDate":"2021-10-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"ramapriyan912001"},"content":"import static seedu.awe.testutil.Assert.assertThrows;","lastModifiedDate":"2021-10-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-09-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2016-09-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.logging.Level;","lastModifiedDate":"2016-09-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":16,"author":{"gitId":"ramapriyan912001"},"content":"import seedu.awe.commons.core.Config;","lastModifiedDate":"2021-10-05"},{"lineNumber":17,"author":{"gitId":"ramapriyan912001"},"content":"import seedu.awe.commons.exceptions.DataConversionException;","lastModifiedDate":"2021-10-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class ConfigUtilTest {","lastModifiedDate":"2016-09-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"ConfigUtilTest\");","lastModifiedDate":"2018-04-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public Path tempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void read_null_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e read(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public void read_missingFile_emptyResult() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(read(\"NonExistentFile.json\").isPresent());","lastModifiedDate":"2016-09-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void read_notJsonFormat_exceptionThrown() {","lastModifiedDate":"2019-03-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertThrows(DataConversionException.class, () -\u003e read(\"NotJsonFormatConfig.json\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public void read_fileInOrder_successfullyRead() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        Config expected \u003d getTypicalConfig();","lastModifiedDate":"2016-09-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        Config actual \u003d read(\"TypicalConfig.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public void read_valuesMissingFromFile_defaultValuesUsed() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        Config actual \u003d read(\"EmptyConfig.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertEquals(new Config(), actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public void read_extraValuesInFile_extraValuesIgnored() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        Config expected \u003d getTypicalConfig();","lastModifiedDate":"2016-09-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        Config actual \u003d read(\"ExtraValuesConfig.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    private Config getTypicalConfig() {","lastModifiedDate":"2016-09-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        Config config \u003d new Config();","lastModifiedDate":"2016-09-25"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        config.setLogLevel(Level.INFO);","lastModifiedDate":"2016-09-25"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        config.setUserPrefsFilePath(Paths.get(\"preferences.json\"));","lastModifiedDate":"2018-04-12"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        return config;","lastModifiedDate":"2016-09-25"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    private Optional\u003cConfig\u003e read(String configFileInTestDataFolder) throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        Path configFilePath \u003d addToTestDataPathIfNotNull(configFileInTestDataFolder);","lastModifiedDate":"2018-04-21"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        return ConfigUtil.readConfig(configFilePath);","lastModifiedDate":"2016-12-20"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public void save_nullConfig_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e save(null, \"SomeFile.json\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public void save_nullFile_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e save(new Config(), null));","lastModifiedDate":"2019-03-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public void saveConfig_allInOrder_success() throws DataConversionException, IOException {","lastModifiedDate":"2016-09-24"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        Config original \u003d getTypicalConfig();","lastModifiedDate":"2016-09-24"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        Path configFilePath \u003d tempDir.resolve(\"TempConfig.json\");","lastModifiedDate":"2019-04-25"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        //Try writing when the file doesn\u0027t exist","lastModifiedDate":"2016-09-24"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        ConfigUtil.saveConfig(original, configFilePath);","lastModifiedDate":"2016-12-20"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        Config readBack \u003d ConfigUtil.readConfig(configFilePath).get();","lastModifiedDate":"2016-12-20"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertEquals(original, readBack);","lastModifiedDate":"2016-09-24"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        //Try saving when the file exists","lastModifiedDate":"2016-09-24"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        original.setLogLevel(Level.FINE);","lastModifiedDate":"2016-09-25"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        ConfigUtil.saveConfig(original, configFilePath);","lastModifiedDate":"2016-12-20"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        readBack \u003d ConfigUtil.readConfig(configFilePath).get();","lastModifiedDate":"2016-12-20"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        assertEquals(original, readBack);","lastModifiedDate":"2016-09-24"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    private void save(Config config, String configFileInTestDataFolder) throws IOException {","lastModifiedDate":"2016-09-24"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        Path configFilePath \u003d addToTestDataPathIfNotNull(configFileInTestDataFolder);","lastModifiedDate":"2018-04-21"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        ConfigUtil.saveConfig(config, configFilePath);","lastModifiedDate":"2016-12-20"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    private Path addToTestDataPathIfNotNull(String configFileInTestDataFolder) {","lastModifiedDate":"2018-04-21"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        return configFileInTestDataFolder !\u003d null","lastModifiedDate":"2016-09-24"},{"lineNumber":111,"author":{"gitId":"-"},"content":"                                  ? TEST_DATA_FOLDER.resolve(configFileInTestDataFolder)","lastModifiedDate":"2018-04-21"},{"lineNumber":112,"author":{"gitId":"-"},"content":"                                  : null;","lastModifiedDate":"2016-09-24"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":116,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-24"}],"authorContributionMap":{"ramapriyan912001":4,"-":112}},{"path":"src/test/java/seedu/awe/commons/util/FileUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"ramapriyan912001"},"content":"package seedu.awe.commons.util;","lastModifiedDate":"2021-10-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"ramapriyan912001"},"content":"import static seedu.awe.testutil.Assert.assertThrows;","lastModifiedDate":"2021-10-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class FileUtilTest {","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-21"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void isValidPath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        // valid path","lastModifiedDate":"2018-04-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":"        assertTrue(FileUtil.isValidPath(\"valid/file/path\"));","lastModifiedDate":"2018-04-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        // invalid path","lastModifiedDate":"2018-04-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        assertFalse(FileUtil.isValidPath(\"a\\0\"));","lastModifiedDate":"2018-04-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        // null path -\u003e throws NullPointerException","lastModifiedDate":"2018-04-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e FileUtil.isValidPath(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"ramapriyan912001":2,"-":21}},{"path":"src/test/java/seedu/awe/commons/util/JsonUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"ramapriyan912001"},"content":"package seedu.awe.commons.util;","lastModifiedDate":"2021-10-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-10-07"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"ramapriyan912001"},"content":"import seedu.awe.testutil.SerializableTestClass;","lastModifiedDate":"2021-10-05"},{"lineNumber":11,"author":{"gitId":"ramapriyan912001"},"content":"import seedu.awe.testutil.TestUtil;","lastModifiedDate":"2021-10-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Tests JSON Read and Write","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class JsonUtilTest {","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private static final Path SERIALIZATION_FILE \u003d TestUtil.getFilePathInSandboxFolder(\"serialize.json\");","lastModifiedDate":"2018-04-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-07"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public void serializeObjectToJsonFile_noExceptionThrown() throws IOException {","lastModifiedDate":"2016-10-07"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        SerializableTestClass serializableTestClass \u003d new SerializableTestClass();","lastModifiedDate":"2016-10-07"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        serializableTestClass.setTestValues();","lastModifiedDate":"2016-10-07"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        JsonUtil.serializeObjectToJsonFile(SERIALIZATION_FILE, serializableTestClass);","lastModifiedDate":"2016-10-07"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertEquals(FileUtil.readFromFile(SERIALIZATION_FILE), SerializableTestClass.JSON_STRING_REPRESENTATION);","lastModifiedDate":"2016-10-07"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-07"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public void deserializeObjectFromJsonFile_noExceptionThrown() throws IOException {","lastModifiedDate":"2016-10-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        FileUtil.writeToFile(SERIALIZATION_FILE, SerializableTestClass.JSON_STRING_REPRESENTATION);","lastModifiedDate":"2016-10-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        SerializableTestClass serializableTestClass \u003d JsonUtil","lastModifiedDate":"2016-10-07"},{"lineNumber":35,"author":{"gitId":"-"},"content":"                .deserializeObjectFromJsonFile(SERIALIZATION_FILE, SerializableTestClass.class);","lastModifiedDate":"2016-10-07"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertEquals(serializableTestClass.getName(), SerializableTestClass.getNameTestValue());","lastModifiedDate":"2016-10-07"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertEquals(serializableTestClass.getListOfLocalDateTimes(), SerializableTestClass.getListTestValues());","lastModifiedDate":"2016-10-07"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertEquals(serializableTestClass.getMapOfIntegerToString(), SerializableTestClass.getHashMapTestValues());","lastModifiedDate":"2016-10-07"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-07"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    //TODO: @Test jsonUtil_readJsonStringToObjectInstance_correctObject()","lastModifiedDate":"2016-09-28"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    //TODO: @Test jsonUtil_writeThenReadObjectToJson_correctObject()","lastModifiedDate":"2016-09-28"},{"lineNumber":45,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"ramapriyan912001":3,"-":42}},{"path":"src/test/java/seedu/awe/commons/util/StringUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"ramapriyan912001"},"content":"package seedu.awe.commons.util;","lastModifiedDate":"2021-10-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"ramapriyan912001"},"content":"import static seedu.awe.testutil.Assert.assertThrows;","lastModifiedDate":"2021-10-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class StringUtilTest {","lastModifiedDate":"2016-09-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    //---------------- Tests for isNonZeroUnsignedInteger --------------------------------------","lastModifiedDate":"2019-02-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public void isNonZeroUnsignedInteger() {","lastModifiedDate":"2019-02-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        // EP: empty strings","lastModifiedDate":"2016-10-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"\")); // Boundary value","lastModifiedDate":"2017-06-02"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"  \"));","lastModifiedDate":"2017-06-02"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        // EP: not a number","lastModifiedDate":"2016-10-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"a\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"aaa\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        // EP: zero","lastModifiedDate":"2016-10-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"0\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        // EP: zero as prefix","lastModifiedDate":"2017-06-02"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.isNonZeroUnsignedInteger(\"01\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        // EP: signed numbers","lastModifiedDate":"2016-10-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"-1\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"+1\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        // EP: numbers with white space","lastModifiedDate":"2016-10-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\" 10 \")); // Leading/trailing spaces","lastModifiedDate":"2017-06-02"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"1 0\")); // Spaces in the middle","lastModifiedDate":"2017-06-02"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        // EP: number larger than Integer.MAX_VALUE","lastModifiedDate":"2017-06-02"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(Long.toString(Integer.MAX_VALUE + 1)));","lastModifiedDate":"2017-06-02"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        // EP: valid numbers, should return true","lastModifiedDate":"2016-10-12"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.isNonZeroUnsignedInteger(\"1\")); // Boundary value","lastModifiedDate":"2017-06-02"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.isNonZeroUnsignedInteger(\"10\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    //---------------- Tests for containsWordIgnoreCase --------------------------------------","lastModifiedDate":"2016-10-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2016-10-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * Invalid equivalence partitions for word: null, empty, multiple words","lastModifiedDate":"2016-10-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * Invalid equivalence partitions for sentence: null","lastModifiedDate":"2016-10-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * The four test cases below test one invalid input at a time.","lastModifiedDate":"2016-10-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public void containsWordIgnoreCase_nullWord_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e StringUtil.containsWordIgnoreCase(\"typical sentence\", null));","lastModifiedDate":"2019-03-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public void containsWordIgnoreCase_emptyWord_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, \"Word parameter cannot be empty\", ()","lastModifiedDate":"2019-03-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"            -\u003e StringUtil.containsWordIgnoreCase(\"typical sentence\", \"  \"));","lastModifiedDate":"2019-03-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public void containsWordIgnoreCase_multipleWords_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, \"Word parameter should be a single word\", ()","lastModifiedDate":"2019-03-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"            -\u003e StringUtil.containsWordIgnoreCase(\"typical sentence\", \"aaa BBB\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public void containsWordIgnoreCase_nullSentence_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e StringUtil.containsWordIgnoreCase(null, \"abc\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2016-10-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * Valid equivalence partitions for word:","lastModifiedDate":"2016-10-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     *   - any word","lastModifiedDate":"2016-10-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     *   - word containing symbols/numbers","lastModifiedDate":"2016-10-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     *   - word with leading/trailing spaces","lastModifiedDate":"2016-10-13"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-13"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     * Valid equivalence partitions for sentence:","lastModifiedDate":"2016-10-13"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     *   - empty string","lastModifiedDate":"2016-10-13"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     *   - one word","lastModifiedDate":"2016-10-13"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     *   - multiple words","lastModifiedDate":"2016-10-13"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     *   - sentence with extra spaces","lastModifiedDate":"2016-10-13"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-13"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     * Possible scenarios returning true:","lastModifiedDate":"2016-10-13"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     *   - matches first word in sentence","lastModifiedDate":"2016-10-13"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     *   - last word in sentence","lastModifiedDate":"2016-10-13"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     *   - middle word in sentence","lastModifiedDate":"2016-10-13"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     *   - matches multiple words","lastModifiedDate":"2016-10-13"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-13"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     * Possible scenarios returning false:","lastModifiedDate":"2016-10-13"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     *   - query word matches part of a sentence word","lastModifiedDate":"2016-10-13"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     *   - sentence word matches part of the query word","lastModifiedDate":"2016-10-13"},{"lineNumber":100,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-13"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     * The test method below tries to verify all above with a reasonably low number of test cases.","lastModifiedDate":"2016-10-13"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-13"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-13"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    public void containsWordIgnoreCase_validInputs_correctResult() {","lastModifiedDate":"2016-10-13"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        // Empty sentence","lastModifiedDate":"2016-10-13"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.containsWordIgnoreCase(\"\", \"abc\")); // Boundary case","lastModifiedDate":"2016-10-13"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.containsWordIgnoreCase(\"    \", \"123\"));","lastModifiedDate":"2016-10-13"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        // Matches a partial word only","lastModifiedDate":"2016-10-13"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.containsWordIgnoreCase(\"aaa bbb ccc\", \"bb\")); // Sentence word bigger than query word","lastModifiedDate":"2016-10-13"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.containsWordIgnoreCase(\"aaa bbb ccc\", \"bbbb\")); // Query word bigger than sentence word","lastModifiedDate":"2016-10-13"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        // Matches word in the sentence, different upper/lower case letters","lastModifiedDate":"2016-10-13"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"aaa bBb ccc\", \"Bbb\")); // First word (boundary case)","lastModifiedDate":"2016-10-13"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"aaa bBb ccc@1\", \"CCc@1\")); // Last word (boundary case)","lastModifiedDate":"2016-10-13"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"  AAA   bBb   ccc  \", \"aaa\")); // Sentence has extra spaces","lastModifiedDate":"2016-10-13"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"Aaa\", \"aaa\")); // Only one word in sentence (boundary case)","lastModifiedDate":"2016-10-13"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"aaa bbb ccc\", \"  ccc  \")); // Leading/trailing spaces","lastModifiedDate":"2016-10-13"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        // Matches multiple words in sentence","lastModifiedDate":"2016-10-13"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"AAA bBb ccc  bbb\", \"bbB\"));","lastModifiedDate":"2016-10-13"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-13"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    //---------------- Tests for getDetails --------------------------------------","lastModifiedDate":"2016-10-13"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2016-10-13"},{"lineNumber":129,"author":{"gitId":"-"},"content":"     * Equivalence Partitions: null, valid throwable object","lastModifiedDate":"2016-10-13"},{"lineNumber":130,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-13"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    public void getDetails_exceptionGiven() {","lastModifiedDate":"2016-09-30"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.getDetails(new FileNotFoundException(\"file not found\"))","lastModifiedDate":"2019-03-14"},{"lineNumber":135,"author":{"gitId":"-"},"content":"            .contains(\"java.io.FileNotFoundException: file not found\"));","lastModifiedDate":"2019-03-14"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    public void getDetails_nullGiven_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e StringUtil.getDetails(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":143,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-22"}],"authorContributionMap":{"ramapriyan912001":2,"-":141}},{"path":"src/test/java/seedu/awe/logic/LogicManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"ramapriyan912001"},"content":"package seedu.awe.logic;","lastModifiedDate":"2021-10-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"ramapriyan912001"},"content":"import static seedu.awe.commons.core.Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX;","lastModifiedDate":"2021-10-05"},{"lineNumber":5,"author":{"gitId":"chrus-chong"},"content":"import static seedu.awe.commons.core.Messages.MESSAGE_LISTCONTACTSCOMMAND_SUCCESS;","lastModifiedDate":"2021-10-25"},{"lineNumber":6,"author":{"gitId":"ramapriyan912001"},"content":"import static seedu.awe.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2021-10-05"},{"lineNumber":7,"author":{"gitId":"ramapriyan912001"},"content":"import static seedu.awe.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2021-10-05"},{"lineNumber":8,"author":{"gitId":"ramapriyan912001"},"content":"import static seedu.awe.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2021-10-05"},{"lineNumber":9,"author":{"gitId":"ramapriyan912001"},"content":"import static seedu.awe.testutil.Assert.assertThrows;","lastModifiedDate":"2021-10-05"},{"lineNumber":10,"author":{"gitId":"ramapriyan912001"},"content":"import static seedu.awe.testutil.TypicalPersons.AMY;","lastModifiedDate":"2021-10-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-12-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-12-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":19,"author":{"gitId":"marcuspeh"},"content":"import seedu.awe.logic.commands.AddContactCommand;","lastModifiedDate":"2021-10-11"},{"lineNumber":20,"author":{"gitId":"ramapriyan912001"},"content":"import seedu.awe.logic.commands.CommandResult;","lastModifiedDate":"2021-10-05"},{"lineNumber":21,"author":{"gitId":"ramapriyan912001"},"content":"import seedu.awe.logic.commands.ListContactsCommand;","lastModifiedDate":"2021-10-05"},{"lineNumber":22,"author":{"gitId":"ramapriyan912001"},"content":"import seedu.awe.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-10-05"},{"lineNumber":23,"author":{"gitId":"ramapriyan912001"},"content":"import seedu.awe.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-10-05"},{"lineNumber":24,"author":{"gitId":"ramapriyan912001"},"content":"import seedu.awe.model.Model;","lastModifiedDate":"2021-10-05"},{"lineNumber":25,"author":{"gitId":"ramapriyan912001"},"content":"import seedu.awe.model.ModelManager;","lastModifiedDate":"2021-10-05"},{"lineNumber":26,"author":{"gitId":"ramapriyan912001"},"content":"import seedu.awe.model.ReadOnlyAddressBook;","lastModifiedDate":"2021-10-05"},{"lineNumber":27,"author":{"gitId":"ramapriyan912001"},"content":"import seedu.awe.model.UserPrefs;","lastModifiedDate":"2021-10-05"},{"lineNumber":28,"author":{"gitId":"ramapriyan912001"},"content":"import seedu.awe.model.person.Person;","lastModifiedDate":"2021-10-05"},{"lineNumber":29,"author":{"gitId":"ramapriyan912001"},"content":"import seedu.awe.storage.JsonAddressBookStorage;","lastModifiedDate":"2021-10-05"},{"lineNumber":30,"author":{"gitId":"ramapriyan912001"},"content":"import seedu.awe.storage.JsonUserPrefsStorage;","lastModifiedDate":"2021-10-05"},{"lineNumber":31,"author":{"gitId":"ramapriyan912001"},"content":"import seedu.awe.storage.StorageManager;","lastModifiedDate":"2021-10-05"},{"lineNumber":32,"author":{"gitId":"ramapriyan912001"},"content":"import seedu.awe.testutil.PersonBuilder;","lastModifiedDate":"2021-10-05"},{"lineNumber":33,"author":{"gitId":"ramapriyan912001"},"content":"import seedu.awe.ui.MainWindow;","lastModifiedDate":"2021-10-30"},{"lineNumber":34,"author":{"gitId":"ramapriyan912001"},"content":"import seedu.awe.ui.UiView;","lastModifiedDate":"2021-10-30"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"public class LogicManagerTest {","lastModifiedDate":"2016-09-22"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private static final IOException DUMMY_IO_EXCEPTION \u003d new IOException(\"dummy exception\");","lastModifiedDate":"2018-12-09"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public Path temporaryFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager();","lastModifiedDate":"2017-06-20"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2018-12-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2019-04-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        JsonAddressBookStorage addressBookStorage \u003d","lastModifiedDate":"2019-04-25"},{"lineNumber":48,"author":{"gitId":"ramapriyan912001"},"content":"                new JsonAddressBookStorage(temporaryFolder.resolve(\"awe.json\"));","lastModifiedDate":"2021-10-31"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(temporaryFolder.resolve(\"userPrefs.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        StorageManager storage \u003d new StorageManager(addressBookStorage, userPrefsStorage);","lastModifiedDate":"2018-12-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-20"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public void execute_invalidCommandFormat_throwsParseException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        String invalidCommand \u003d \"uicfhmowqewca\";","lastModifiedDate":"2017-06-20"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertParseException(invalidCommand, MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2017-06-20"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-20"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-20"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-14"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public void execute_commandExecutionError_throwsCommandException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":62,"author":{"gitId":"marcuspeh"},"content":"        String deleteCommand \u003d \"deletecontact 9\";","lastModifiedDate":"2021-10-11"},{"lineNumber":63,"author":{"gitId":"ramapriyan912001"},"content":"        MainWindow.setViewEnum(UiView.CONTACT_PAGE);","lastModifiedDate":"2021-10-30"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertCommandException(deleteCommand, MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2017-06-14"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-14"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-19"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public void execute_validCommand_success() throws Exception {","lastModifiedDate":"2019-03-14"},{"lineNumber":69,"author":{"gitId":"marcuspeh"},"content":"        String listCommand \u003d ListContactsCommand.COMMAND_WORD;","lastModifiedDate":"2021-10-03"},{"lineNumber":70,"author":{"gitId":"chrus-chong"},"content":"        assertCommandSuccess(listCommand, MESSAGE_LISTCONTACTSCOMMAND_SUCCESS, model);","lastModifiedDate":"2021-10-25"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-20"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-20"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-12-09"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public void execute_storageThrowsIoException_throwsCommandException() {","lastModifiedDate":"2019-04-25"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        // Setup LogicManager with JsonAddressBookIoExceptionThrowingStub","lastModifiedDate":"2018-12-09"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        JsonAddressBookStorage addressBookStorage \u003d","lastModifiedDate":"2018-12-09"},{"lineNumber":77,"author":{"gitId":"ramapriyan912001"},"content":"                new JsonAddressBookIoExceptionThrowingStub(temporaryFolder.resolve(\"ioExceptionAwe.json\"));","lastModifiedDate":"2021-10-31"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d","lastModifiedDate":"2019-04-25"},{"lineNumber":79,"author":{"gitId":"-"},"content":"                new JsonUserPrefsStorage(temporaryFolder.resolve(\"ioExceptionUserPrefs.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        StorageManager storage \u003d new StorageManager(addressBookStorage, userPrefsStorage);","lastModifiedDate":"2018-12-09"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        // Execute add command","lastModifiedDate":"2018-12-09"},{"lineNumber":84,"author":{"gitId":"marcuspeh"},"content":"        String addCommand \u003d AddContactCommand.COMMAND_WORD + NAME_DESC_AMY + PHONE_DESC_AMY;","lastModifiedDate":"2021-11-01"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        Person expectedPerson \u003d new PersonBuilder(AMY).withTags().build();","lastModifiedDate":"2018-12-09"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        ModelManager expectedModel \u003d new ModelManager();","lastModifiedDate":"2018-12-09"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        expectedModel.addPerson(expectedPerson);","lastModifiedDate":"2018-12-09"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d LogicManager.FILE_OPS_ERROR_MESSAGE + DUMMY_IO_EXCEPTION;","lastModifiedDate":"2018-12-09"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        assertCommandFailure(addCommand, CommandException.class, expectedMessage, expectedModel);","lastModifiedDate":"2019-03-14"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    public void getFilteredPersonList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e logic.getFilteredPersonList().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     * Executes the command and confirms that","lastModifiedDate":"2019-03-14"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     * - no exceptions are thrown \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":100,"author":{"gitId":"-"},"content":"     * - the feedback message is equal to {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     * - the internal model manager state is the same as that in {@code expectedModel} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    private void assertCommandSuccess(String inputCommand, String expectedMessage,","lastModifiedDate":"2019-03-14"},{"lineNumber":105,"author":{"gitId":"-"},"content":"            Model expectedModel) throws CommandException, ParseException {","lastModifiedDate":"2019-03-14"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        CommandResult result \u003d logic.execute(inputCommand);","lastModifiedDate":"2019-03-14"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        assertEquals(expectedMessage, result.getFeedbackToUser());","lastModifiedDate":"2019-03-14"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        assertEquals(expectedModel, model);","lastModifiedDate":"2019-03-14"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":112,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that a ParseException is thrown and that the result message is correct.","lastModifiedDate":"2017-03-11"},{"lineNumber":113,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":114,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    private void assertParseException(String inputCommand, String expectedMessage) {","lastModifiedDate":"2017-03-11"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, ParseException.class, expectedMessage);","lastModifiedDate":"2017-03-11"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-14"},{"lineNumber":120,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that a CommandException is thrown and that the result message is correct.","lastModifiedDate":"2017-06-14"},{"lineNumber":121,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":122,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-14"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    private void assertCommandException(String inputCommand, String expectedMessage) {","lastModifiedDate":"2017-06-14"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, CommandException.class, expectedMessage);","lastModifiedDate":"2017-06-14"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-14"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":128,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that the exception is thrown and that the result message is correct.","lastModifiedDate":"2017-03-11"},{"lineNumber":129,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":130,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    private void assertCommandFailure(String inputCommand, Class\u003c? extends Throwable\u003e expectedException,","lastModifiedDate":"2019-03-14"},{"lineNumber":132,"author":{"gitId":"-"},"content":"            String expectedMessage) {","lastModifiedDate":"2019-03-14"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2017-05-31"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, expectedException, expectedMessage, expectedModel);","lastModifiedDate":"2019-03-14"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-05"},{"lineNumber":138,"author":{"gitId":"-"},"content":"     * Executes the command and confirms that","lastModifiedDate":"2019-03-14"},{"lineNumber":139,"author":{"gitId":"-"},"content":"     * - the {@code expectedException} is thrown \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":140,"author":{"gitId":"-"},"content":"     * - the resulting error message is equal to {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":141,"author":{"gitId":"-"},"content":"     * - the internal model manager state is the same as that in {@code expectedModel} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":142,"author":{"gitId":"-"},"content":"     * @see #assertCommandSuccess(String, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":143,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    private void assertCommandFailure(String inputCommand, Class\u003c? extends Throwable\u003e expectedException,","lastModifiedDate":"2019-03-14"},{"lineNumber":145,"author":{"gitId":"-"},"content":"            String expectedMessage, Model expectedModel) {","lastModifiedDate":"2017-05-31"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        assertThrows(expectedException, expectedMessage, () -\u003e logic.execute(inputCommand));","lastModifiedDate":"2019-03-14"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        assertEquals(expectedModel, model);","lastModifiedDate":"2017-05-31"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-19"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":151,"author":{"gitId":"-"},"content":"     * A stub class to throw an {@code IOException} when the save method is called.","lastModifiedDate":"2018-12-09"},{"lineNumber":152,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    private static class JsonAddressBookIoExceptionThrowingStub extends JsonAddressBookStorage {","lastModifiedDate":"2018-12-09"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        private JsonAddressBookIoExceptionThrowingStub(Path filePath) {","lastModifiedDate":"2018-12-09"},{"lineNumber":155,"author":{"gitId":"-"},"content":"            super(filePath);","lastModifiedDate":"2018-12-09"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-12-09"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        public void saveAddressBook(ReadOnlyAddressBook addressBook, Path filePath) throws IOException {","lastModifiedDate":"2018-12-09"},{"lineNumber":160,"author":{"gitId":"-"},"content":"            throw DUMMY_IO_EXCEPTION;","lastModifiedDate":"2018-12-09"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":163,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"marcuspeh":4,"chrus-chong":2,"ramapriyan912001":25,"-":132}},{"path":"src/test/java/seedu/awe/logic/commands/AddContactCommandIntegrationTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"ramapriyan912001"},"content":"package seedu.awe.logic.commands;","lastModifiedDate":"2021-10-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":3,"author":{"gitId":"chrus-chong"},"content":"import static seedu.awe.commons.core.Messages.MESSAGE_ADDCONTACTCOMMAND_DUPLICATE;","lastModifiedDate":"2021-10-25"},{"lineNumber":4,"author":{"gitId":"chrus-chong"},"content":"import static seedu.awe.commons.core.Messages.MESSAGE_ADDCONTACTCOMMAND_SUCCESS;","lastModifiedDate":"2021-10-25"},{"lineNumber":5,"author":{"gitId":"ramapriyan912001"},"content":"import static seedu.awe.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2021-10-05"},{"lineNumber":6,"author":{"gitId":"ramapriyan912001"},"content":"import static seedu.awe.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2021-10-05"},{"lineNumber":7,"author":{"gitId":"ramapriyan912001"},"content":"import static seedu.awe.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2021-10-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":12,"author":{"gitId":"ramapriyan912001"},"content":"import seedu.awe.model.Model;","lastModifiedDate":"2021-10-05"},{"lineNumber":13,"author":{"gitId":"ramapriyan912001"},"content":"import seedu.awe.model.ModelManager;","lastModifiedDate":"2021-10-05"},{"lineNumber":14,"author":{"gitId":"ramapriyan912001"},"content":"import seedu.awe.model.UserPrefs;","lastModifiedDate":"2021-10-05"},{"lineNumber":15,"author":{"gitId":"ramapriyan912001"},"content":"import seedu.awe.model.person.Person;","lastModifiedDate":"2021-10-05"},{"lineNumber":16,"author":{"gitId":"ramapriyan912001"},"content":"import seedu.awe.testutil.PersonBuilder;","lastModifiedDate":"2021-10-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":18,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-15"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) for {@code AddCommand}.","lastModifiedDate":"2017-06-15"},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-15"},{"lineNumber":21,"author":{"gitId":"marcuspeh"},"content":"public class AddContactCommandIntegrationTest {","lastModifiedDate":"2021-10-11"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private Model model;","lastModifiedDate":"2017-06-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2017-06-15"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2017-07-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public void execute_newPerson_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        Person validPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2017-06-15"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2017-06-15"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        expectedModel.addPerson(validPerson);","lastModifiedDate":"2017-06-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":37,"author":{"gitId":"marcuspeh"},"content":"        CommandResult commandResult \u003d new CommandResult(String.format(MESSAGE_ADDCONTACTCOMMAND_SUCCESS, validPerson),","lastModifiedDate":"2021-11-01"},{"lineNumber":38,"author":{"gitId":"marcuspeh"},"content":"                false, false, false, true, false, false, false);","lastModifiedDate":"2021-11-01"},{"lineNumber":39,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":40,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":41,"author":{"gitId":"marcuspeh"},"content":"        assertCommandSuccess(new AddContactCommand(validPerson), model, commandResult, expectedModel);","lastModifiedDate":"2021-11-01"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public void execute_duplicatePerson_throwsCommandException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        Person personInList \u003d model.getAddressBook().getPersonList().get(0);","lastModifiedDate":"2018-01-10"},{"lineNumber":47,"author":{"gitId":"chrus-chong"},"content":"        assertCommandFailure(new AddContactCommand(personInList), model, MESSAGE_ADDCONTACTCOMMAND_DUPLICATE);","lastModifiedDate":"2021-10-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":50,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-15"}],"authorContributionMap":{"marcuspeh":6,"chrus-chong":3,"ramapriyan912001":9,"-":32}},{"path":"src/test/java/seedu/awe/logic/commands/AddContactCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"ramapriyan912001"},"content":"package seedu.awe.logic.commands;","lastModifiedDate":"2021-10-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-01-10"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":7,"author":{"gitId":"chrus-chong"},"content":"import static seedu.awe.commons.core.Messages.MESSAGE_ADDCONTACTCOMMAND_DUPLICATE;","lastModifiedDate":"2021-10-25"},{"lineNumber":8,"author":{"gitId":"chrus-chong"},"content":"import static seedu.awe.commons.core.Messages.MESSAGE_ADDCONTACTCOMMAND_SUCCESS;","lastModifiedDate":"2021-10-25"},{"lineNumber":9,"author":{"gitId":"ramapriyan912001"},"content":"import static seedu.awe.testutil.Assert.assertThrows;","lastModifiedDate":"2021-10-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-05-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-12"},{"lineNumber":14,"author":{"gitId":"marcuspeh"},"content":"import java.util.HashMap;","lastModifiedDate":"2021-10-18"},{"lineNumber":15,"author":{"gitId":"ramapriyan912001"},"content":"import java.util.List;","lastModifiedDate":"2021-10-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":21,"author":{"gitId":"ramapriyan912001"},"content":"import seedu.awe.commons.core.GuiSettings;","lastModifiedDate":"2021-10-05"},{"lineNumber":22,"author":{"gitId":"ramapriyan912001"},"content":"import seedu.awe.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-10-05"},{"lineNumber":23,"author":{"gitId":"ramapriyan912001"},"content":"import seedu.awe.model.AddressBook;","lastModifiedDate":"2021-10-05"},{"lineNumber":24,"author":{"gitId":"ramapriyan912001"},"content":"import seedu.awe.model.Model;","lastModifiedDate":"2021-10-05"},{"lineNumber":25,"author":{"gitId":"ramapriyan912001"},"content":"import seedu.awe.model.ReadOnlyAddressBook;","lastModifiedDate":"2021-10-05"},{"lineNumber":26,"author":{"gitId":"ramapriyan912001"},"content":"import seedu.awe.model.ReadOnlyUserPrefs;","lastModifiedDate":"2021-10-05"},{"lineNumber":27,"author":{"gitId":"marcuspeh"},"content":"import seedu.awe.model.expense.Cost;","lastModifiedDate":"2021-10-18"},{"lineNumber":28,"author":{"gitId":"kheekheekhee"},"content":"import seedu.awe.model.expense.Expense;","lastModifiedDate":"2021-10-06"},{"lineNumber":29,"author":{"gitId":"ramapriyan912001"},"content":"import seedu.awe.model.group.Group;","lastModifiedDate":"2021-10-05"},{"lineNumber":30,"author":{"gitId":"ramapriyan912001"},"content":"import seedu.awe.model.group.GroupName;","lastModifiedDate":"2021-10-05"},{"lineNumber":31,"author":{"gitId":"kheekheekhee"},"content":"import seedu.awe.model.group.exceptions.DuplicateGroupException;","lastModifiedDate":"2021-10-06"},{"lineNumber":32,"author":{"gitId":"ramapriyan912001"},"content":"import seedu.awe.model.payment.Payment;","lastModifiedDate":"2021-10-21"},{"lineNumber":33,"author":{"gitId":"ramapriyan912001"},"content":"import seedu.awe.model.person.Person;","lastModifiedDate":"2021-10-05"},{"lineNumber":34,"author":{"gitId":"Jingwencloud"},"content":"import seedu.awe.model.transactionsummary.TransactionSummary;","lastModifiedDate":"2021-10-21"},{"lineNumber":35,"author":{"gitId":"ramapriyan912001"},"content":"import seedu.awe.testutil.PersonBuilder;","lastModifiedDate":"2021-10-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":37,"author":{"gitId":"marcuspeh"},"content":"public class AddContactCommandTest {","lastModifiedDate":"2021-10-11"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public void constructor_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":41,"author":{"gitId":"marcuspeh"},"content":"        assertThrows(NullPointerException.class, () -\u003e new AddContactCommand(null));","lastModifiedDate":"2021-10-11"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public void execute_personAcceptedByModel_addSuccessful() throws Exception {","lastModifiedDate":"2017-05-12"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        ModelStubAcceptingPersonAdded modelStub \u003d new ModelStubAcceptingPersonAdded();","lastModifiedDate":"2017-05-12"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        Person validPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2017-05-12"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":49,"author":{"gitId":"marcuspeh"},"content":"        CommandResult commandResult \u003d new AddContactCommand(validPerson).execute(modelStub);","lastModifiedDate":"2021-10-11"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":51,"author":{"gitId":"chrus-chong"},"content":"        assertEquals(String.format(MESSAGE_ADDCONTACTCOMMAND_SUCCESS, validPerson), commandResult.getFeedbackToUser());","lastModifiedDate":"2021-10-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertEquals(Arrays.asList(validPerson), modelStub.personsAdded);","lastModifiedDate":"2017-05-12"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public void execute_duplicatePerson_throwsCommandException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        Person validPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2017-05-12"},{"lineNumber":58,"author":{"gitId":"marcuspeh"},"content":"        AddContactCommand addContactCommand \u003d new AddContactCommand(validPerson);","lastModifiedDate":"2021-10-11"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        ModelStub modelStub \u003d new ModelStubWithPerson(validPerson);","lastModifiedDate":"2018-08-07"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":61,"author":{"gitId":"marcuspeh"},"content":"        assertThrows(CommandException.class,","lastModifiedDate":"2021-10-11"},{"lineNumber":62,"author":{"gitId":"chrus-chong"},"content":"                MESSAGE_ADDCONTACTCOMMAND_DUPLICATE, () -\u003e addContactCommand.execute(modelStub));","lastModifiedDate":"2021-10-25"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-22"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        Person alice \u003d new PersonBuilder().withName(\"Alice\").build();","lastModifiedDate":"2017-06-22"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        Person bob \u003d new PersonBuilder().withName(\"Bob\").build();","lastModifiedDate":"2017-06-22"},{"lineNumber":69,"author":{"gitId":"marcuspeh"},"content":"        AddContactCommand addAliceCommand \u003d new AddContactCommand(alice);","lastModifiedDate":"2021-10-11"},{"lineNumber":70,"author":{"gitId":"marcuspeh"},"content":"        AddContactCommand addBobCommand \u003d new AddContactCommand(bob);","lastModifiedDate":"2021-10-11"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-22"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertTrue(addAliceCommand.equals(addAliceCommand));","lastModifiedDate":"2017-06-22"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-22"},{"lineNumber":76,"author":{"gitId":"marcuspeh"},"content":"        AddContactCommand addAliceCommandCopy \u003d new AddContactCommand(alice);","lastModifiedDate":"2021-10-11"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        assertTrue(addAliceCommand.equals(addAliceCommandCopy));","lastModifiedDate":"2017-06-22"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(1));","lastModifiedDate":"2017-06-22"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(null));","lastModifiedDate":"2017-06-22"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(addBobCommand));","lastModifiedDate":"2017-06-22"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-22"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     * A default model stub that have all of the methods failing.","lastModifiedDate":"2017-05-12"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    private class ModelStub implements Model {","lastModifiedDate":"2017-05-12"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":95,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2018-11-27"},{"lineNumber":100,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":105,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":110,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        public Path getAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":115,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        public void setAddressBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2018-11-27"},{"lineNumber":120,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        public void addPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":125,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        public void setAddressBook(ReadOnlyAddressBook newData) {","lastModifiedDate":"2018-11-27"},{"lineNumber":130,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2017-05-12"},{"lineNumber":135,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":138,"author":{"gitId":"ramapriyan912001"},"content":"        @Override","lastModifiedDate":"2021-10-25"},{"lineNumber":139,"author":{"gitId":"ramapriyan912001"},"content":"        public Group getActiveGroupFromAddressBook() throws CommandException {","lastModifiedDate":"2021-10-25"},{"lineNumber":140,"author":{"gitId":"ramapriyan912001"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-25"},{"lineNumber":141,"author":{"gitId":"ramapriyan912001"},"content":"        }","lastModifiedDate":"2021-10-25"},{"lineNumber":142,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-08-06"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-06"},{"lineNumber":145,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-06"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        public void deletePerson(Person target) {","lastModifiedDate":"2018-08-08"},{"lineNumber":150,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-17"},{"lineNumber":155,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":158,"author":{"gitId":"marcuspeh"},"content":"        @Override","lastModifiedDate":"2021-10-18"},{"lineNumber":159,"author":{"gitId":"marcuspeh"},"content":"        public void setTransactionSummary(HashMap\u003cPerson, Cost\u003e summary) {","lastModifiedDate":"2021-10-18"},{"lineNumber":160,"author":{"gitId":"marcuspeh"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-18"},{"lineNumber":161,"author":{"gitId":"marcuspeh"},"content":"        }","lastModifiedDate":"2021-10-18"},{"lineNumber":162,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":163,"author":{"gitId":"chrus-chong"},"content":"        @Override","lastModifiedDate":"2021-10-19"},{"lineNumber":164,"author":{"gitId":"chrus-chong"},"content":"        public void setAllMembersOfGroup(Group group) {","lastModifiedDate":"2021-10-19"},{"lineNumber":165,"author":{"gitId":"chrus-chong"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-19"},{"lineNumber":166,"author":{"gitId":"chrus-chong"},"content":"        }","lastModifiedDate":"2021-10-19"},{"lineNumber":167,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":170,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        public void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate) {","lastModifiedDate":"2018-01-10"},{"lineNumber":175,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":177,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":178,"author":{"gitId":"ramapriyan912001"},"content":"        @Override","lastModifiedDate":"2021-09-26"},{"lineNumber":179,"author":{"gitId":"ramapriyan912001"},"content":"        public void deleteGroup(Group group) {","lastModifiedDate":"2021-09-26"},{"lineNumber":180,"author":{"gitId":"ramapriyan912001"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-09-26"},{"lineNumber":181,"author":{"gitId":"ramapriyan912001"},"content":"        }","lastModifiedDate":"2021-09-26"},{"lineNumber":182,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":183,"author":{"gitId":"ramapriyan912001"},"content":"        @Override","lastModifiedDate":"2021-09-26"},{"lineNumber":184,"author":{"gitId":"ramapriyan912001"},"content":"        public boolean hasGroup(Group group) {","lastModifiedDate":"2021-09-26"},{"lineNumber":185,"author":{"gitId":"ramapriyan912001"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-09-26"},{"lineNumber":186,"author":{"gitId":"ramapriyan912001"},"content":"        }","lastModifiedDate":"2021-09-26"},{"lineNumber":187,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":188,"author":{"gitId":"ramapriyan912001"},"content":"        @Override","lastModifiedDate":"2021-10-21"},{"lineNumber":189,"author":{"gitId":"ramapriyan912001"},"content":"        public void setPayments(List\u003cPayment\u003e payments) {","lastModifiedDate":"2021-10-21"},{"lineNumber":190,"author":{"gitId":"ramapriyan912001"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-27"},{"lineNumber":191,"author":{"gitId":"ramapriyan912001"},"content":"        }","lastModifiedDate":"2021-10-21"},{"lineNumber":192,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":193,"author":{"gitId":"marcuspeh"},"content":"        /**","lastModifiedDate":"2021-10-04"},{"lineNumber":194,"author":{"gitId":"marcuspeh"},"content":"         * Returns an unmodifiable view of the list of {@code Group} backed by the internal list of","lastModifiedDate":"2021-10-04"},{"lineNumber":195,"author":{"gitId":"marcuspeh"},"content":"         * {@code versionedAddressBook}","lastModifiedDate":"2021-10-04"},{"lineNumber":196,"author":{"gitId":"marcuspeh"},"content":"         */","lastModifiedDate":"2021-10-04"},{"lineNumber":197,"author":{"gitId":"marcuspeh"},"content":"        @Override","lastModifiedDate":"2021-10-04"},{"lineNumber":198,"author":{"gitId":"marcuspeh"},"content":"        public ObservableList\u003cGroup\u003e getFilteredGroupList() {","lastModifiedDate":"2021-10-04"},{"lineNumber":199,"author":{"gitId":"marcuspeh"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-04"},{"lineNumber":200,"author":{"gitId":"marcuspeh"},"content":"        }","lastModifiedDate":"2021-10-04"},{"lineNumber":201,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":202,"author":{"gitId":"marcuspeh"},"content":"        @Override","lastModifiedDate":"2021-10-04"},{"lineNumber":203,"author":{"gitId":"marcuspeh"},"content":"        public void updateFilteredGroupList(Predicate\u003cGroup\u003e predicate) {","lastModifiedDate":"2021-10-04"},{"lineNumber":204,"author":{"gitId":"marcuspeh"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-04"},{"lineNumber":205,"author":{"gitId":"marcuspeh"},"content":"        }","lastModifiedDate":"2021-10-04"},{"lineNumber":206,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":207,"author":{"gitId":"ramapriyan912001"},"content":"        @Override","lastModifiedDate":"2021-10-04"},{"lineNumber":208,"author":{"gitId":"ramapriyan912001"},"content":"        public Group getGroupByName(GroupName groupName) {","lastModifiedDate":"2021-10-04"},{"lineNumber":209,"author":{"gitId":"ramapriyan912001"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-04"},{"lineNumber":210,"author":{"gitId":"ramapriyan912001"},"content":"        }","lastModifiedDate":"2021-10-04"},{"lineNumber":211,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":212,"author":{"gitId":"chrus-chong"},"content":"        @Override","lastModifiedDate":"2021-10-03"},{"lineNumber":213,"author":{"gitId":"chrus-chong"},"content":"        public void addGroup(Group group) {","lastModifiedDate":"2021-10-03"},{"lineNumber":214,"author":{"gitId":"chrus-chong"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-03"},{"lineNumber":215,"author":{"gitId":"chrus-chong"},"content":"        }","lastModifiedDate":"2021-10-03"},{"lineNumber":216,"author":{"gitId":"kheekheekhee"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":217,"author":{"gitId":"kheekheekhee"},"content":"        @Override","lastModifiedDate":"2021-10-06"},{"lineNumber":218,"author":{"gitId":"kheekheekhee"},"content":"        public void setGroup(Group group, Group newGroup) throws DuplicateGroupException {","lastModifiedDate":"2021-10-06"},{"lineNumber":219,"author":{"gitId":"kheekheekhee"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-06"},{"lineNumber":220,"author":{"gitId":"kheekheekhee"},"content":"        }","lastModifiedDate":"2021-10-06"},{"lineNumber":221,"author":{"gitId":"kheekheekhee"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":222,"author":{"gitId":"Jingwencloud"},"content":"        @Override","lastModifiedDate":"2021-10-13"},{"lineNumber":223,"author":{"gitId":"Jingwencloud"},"content":"        public void addExpense(Expense expense, Group group) {","lastModifiedDate":"2021-10-13"},{"lineNumber":224,"author":{"gitId":"Jingwencloud"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-13"},{"lineNumber":225,"author":{"gitId":"Jingwencloud"},"content":"        }","lastModifiedDate":"2021-10-13"},{"lineNumber":226,"author":{"gitId":"Jingwencloud"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":227,"author":{"gitId":"Jingwencloud"},"content":"        @Override","lastModifiedDate":"2021-10-13"},{"lineNumber":228,"author":{"gitId":"Jingwencloud"},"content":"        public void deleteExpense(Expense expense, Group group) {","lastModifiedDate":"2021-10-13"},{"lineNumber":229,"author":{"gitId":"Jingwencloud"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-13"},{"lineNumber":230,"author":{"gitId":"Jingwencloud"},"content":"        }","lastModifiedDate":"2021-10-13"},{"lineNumber":231,"author":{"gitId":"Jingwencloud"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":232,"author":{"gitId":"ramapriyan912001"},"content":"        @Override","lastModifiedDate":"2021-10-21"},{"lineNumber":233,"author":{"gitId":"ramapriyan912001"},"content":"        public ObservableList\u003cPayment\u003e getPayments() {","lastModifiedDate":"2021-10-21"},{"lineNumber":234,"author":{"gitId":"ramapriyan912001"},"content":"            return null;","lastModifiedDate":"2021-10-21"},{"lineNumber":235,"author":{"gitId":"ramapriyan912001"},"content":"        }","lastModifiedDate":"2021-10-21"},{"lineNumber":236,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":237,"author":{"gitId":"kheekheekhee"},"content":"        @Override","lastModifiedDate":"2021-10-06"},{"lineNumber":238,"author":{"gitId":"Jingwencloud"},"content":"        public ObservableList\u003cExpense\u003e getExpenses() {","lastModifiedDate":"2021-10-07"},{"lineNumber":239,"author":{"gitId":"kheekheekhee"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-06"},{"lineNumber":240,"author":{"gitId":"kheekheekhee"},"content":"        }","lastModifiedDate":"2021-10-06"},{"lineNumber":241,"author":{"gitId":"Jingwencloud"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":242,"author":{"gitId":"Jingwencloud"},"content":"        @Override","lastModifiedDate":"2021-10-07"},{"lineNumber":243,"author":{"gitId":"Jingwencloud"},"content":"        public void setExpenses(Group group) {","lastModifiedDate":"2021-10-07"},{"lineNumber":244,"author":{"gitId":"Jingwencloud"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-07"},{"lineNumber":245,"author":{"gitId":"Jingwencloud"},"content":"        }","lastModifiedDate":"2021-10-07"},{"lineNumber":246,"author":{"gitId":"Jingwencloud"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":247,"author":{"gitId":"Jingwencloud"},"content":"        @Override","lastModifiedDate":"2021-10-12"},{"lineNumber":248,"author":{"gitId":"Jingwencloud"},"content":"        public void updateFilteredExpenseList(Predicate\u003cExpense\u003e predicate) {","lastModifiedDate":"2021-10-12"},{"lineNumber":249,"author":{"gitId":"Jingwencloud"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-12"},{"lineNumber":250,"author":{"gitId":"Jingwencloud"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":251,"author":{"gitId":"Jingwencloud"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":252,"author":{"gitId":"Jingwencloud"},"content":"        @Override","lastModifiedDate":"2021-10-21"},{"lineNumber":253,"author":{"gitId":"Jingwencloud"},"content":"        public ObservableList\u003cTransactionSummary\u003e getTransactionSummary() {","lastModifiedDate":"2021-10-21"},{"lineNumber":254,"author":{"gitId":"Jingwencloud"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-21"},{"lineNumber":255,"author":{"gitId":"Jingwencloud"},"content":"        }","lastModifiedDate":"2021-10-21"},{"lineNumber":256,"author":{"gitId":"Jingwencloud"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":257,"author":{"gitId":"Jingwencloud"},"content":"        @Override","lastModifiedDate":"2021-10-22"},{"lineNumber":258,"author":{"gitId":"Jingwencloud"},"content":"        public boolean isCurrentExpenseList(Group group) {","lastModifiedDate":"2021-10-22"},{"lineNumber":259,"author":{"gitId":"Jingwencloud"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-22"},{"lineNumber":260,"author":{"gitId":"Jingwencloud"},"content":"        }","lastModifiedDate":"2021-10-22"},{"lineNumber":261,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":262,"author":{"gitId":"ramapriyan912001"},"content":"        @Override","lastModifiedDate":"2021-10-27"},{"lineNumber":263,"author":{"gitId":"ramapriyan912001"},"content":"        public Expense getExpense(int index) {","lastModifiedDate":"2021-10-27"},{"lineNumber":264,"author":{"gitId":"ramapriyan912001"},"content":"            return null;","lastModifiedDate":"2021-10-27"},{"lineNumber":265,"author":{"gitId":"ramapriyan912001"},"content":"        }","lastModifiedDate":"2021-10-27"},{"lineNumber":266,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":267,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":268,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":269,"author":{"gitId":"-"},"content":"     * A Model stub that contains a single person.","lastModifiedDate":"2018-08-07"},{"lineNumber":270,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":271,"author":{"gitId":"-"},"content":"    private class ModelStubWithPerson extends ModelStub {","lastModifiedDate":"2018-08-07"},{"lineNumber":272,"author":{"gitId":"-"},"content":"        private final Person person;","lastModifiedDate":"2018-08-07"},{"lineNumber":273,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":274,"author":{"gitId":"-"},"content":"        ModelStubWithPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":275,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":276,"author":{"gitId":"-"},"content":"            this.person \u003d person;","lastModifiedDate":"2018-08-07"},{"lineNumber":277,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":278,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":279,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-04"},{"lineNumber":280,"author":{"gitId":"-"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":281,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":282,"author":{"gitId":"-"},"content":"            return this.person.isSamePerson(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":283,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-04"},{"lineNumber":284,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":285,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":286,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":287,"author":{"gitId":"-"},"content":"     * A Model stub that always accept the person being added.","lastModifiedDate":"2017-05-12"},{"lineNumber":288,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":289,"author":{"gitId":"-"},"content":"    private class ModelStubAcceptingPersonAdded extends ModelStub {","lastModifiedDate":"2017-05-12"},{"lineNumber":290,"author":{"gitId":"-"},"content":"        final ArrayList\u003cPerson\u003e personsAdded \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2017-05-12"},{"lineNumber":291,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":292,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-08-07"},{"lineNumber":293,"author":{"gitId":"-"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":294,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":295,"author":{"gitId":"-"},"content":"            return personsAdded.stream().anyMatch(person::isSamePerson);","lastModifiedDate":"2018-08-07"},{"lineNumber":296,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":297,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":298,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":299,"author":{"gitId":"-"},"content":"        public void addPerson(Person person) {","lastModifiedDate":"2018-08-08"},{"lineNumber":300,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-01-10"},{"lineNumber":301,"author":{"gitId":"-"},"content":"            personsAdded.add(person);","lastModifiedDate":"2018-01-10"},{"lineNumber":302,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":303,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":304,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-04"},{"lineNumber":305,"author":{"gitId":"-"},"content":"        public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2017-05-04"},{"lineNumber":306,"author":{"gitId":"-"},"content":"            return new AddressBook();","lastModifiedDate":"2017-05-04"},{"lineNumber":307,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-04"},{"lineNumber":308,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":309,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":310,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-12"}],"authorContributionMap":{"marcuspeh":29,"Jingwencloud":32,"chrus-chong":14,"kheekheekhee":11,"ramapriyan912001":49,"-":175}},{"path":"src/test/java/seedu/awe/logic/commands/AddExpenseCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"kheekheekhee"},"content":"package seedu.awe.logic.commands;","lastModifiedDate":"2021-10-12"},{"lineNumber":2,"author":{"gitId":"kheekheekhee"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":3,"author":{"gitId":"kheekheekhee"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-12"},{"lineNumber":4,"author":{"gitId":"kheekheekhee"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-12"},{"lineNumber":5,"author":{"gitId":"kheekheekhee"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-10-12"},{"lineNumber":6,"author":{"gitId":"kheekheekhee"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-12"},{"lineNumber":7,"author":{"gitId":"marcuspeh"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2021-10-25"},{"lineNumber":8,"author":{"gitId":"chrus-chong"},"content":"import static seedu.awe.commons.core.Messages.MESSAGE_ADDEXPENSECOMMAND_ALL_MEMBERS_EXCLUDED;","lastModifiedDate":"2021-10-25"},{"lineNumber":9,"author":{"gitId":"chrus-chong"},"content":"import static seedu.awe.commons.core.Messages.MESSAGE_ADDEXPENSECOMMAND_COST_ZERO_OR_LESS;","lastModifiedDate":"2021-10-25"},{"lineNumber":10,"author":{"gitId":"chrus-chong"},"content":"import static seedu.awe.commons.core.Messages.MESSAGE_ADDEXPENSECOMMAND_NOT_PART_OF_GROUP;","lastModifiedDate":"2021-10-25"},{"lineNumber":11,"author":{"gitId":"chrus-chong"},"content":"import static seedu.awe.commons.core.Messages.MESSAGE_ADDEXPENSECOMMAND_SUCCESS;","lastModifiedDate":"2021-10-25"},{"lineNumber":12,"author":{"gitId":"kheekheekhee"},"content":"import static seedu.awe.testutil.Assert.assertThrows;","lastModifiedDate":"2021-10-12"},{"lineNumber":13,"author":{"gitId":"Jingwencloud"},"content":"import static seedu.awe.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2021-10-28"},{"lineNumber":14,"author":{"gitId":"Jingwencloud"},"content":"import static seedu.awe.testutil.TypicalPersons.BOB;","lastModifiedDate":"2021-10-28"},{"lineNumber":15,"author":{"gitId":"kheekheekhee"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":16,"author":{"gitId":"kheekheekhee"},"content":"import java.nio.file.Path;","lastModifiedDate":"2021-10-12"},{"lineNumber":17,"author":{"gitId":"kheekheekhee"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-12"},{"lineNumber":18,"author":{"gitId":"kheekheekhee"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-10-12"},{"lineNumber":19,"author":{"gitId":"marcuspeh"},"content":"import java.util.HashMap;","lastModifiedDate":"2021-10-18"},{"lineNumber":20,"author":{"gitId":"ramapriyan912001"},"content":"import java.util.List;","lastModifiedDate":"2021-10-21"},{"lineNumber":21,"author":{"gitId":"kheekheekhee"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2021-10-12"},{"lineNumber":22,"author":{"gitId":"kheekheekhee"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":23,"author":{"gitId":"kheekheekhee"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-12"},{"lineNumber":24,"author":{"gitId":"kheekheekhee"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":25,"author":{"gitId":"kheekheekhee"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-10-12"},{"lineNumber":26,"author":{"gitId":"kheekheekhee"},"content":"import seedu.awe.commons.core.GuiSettings;","lastModifiedDate":"2021-10-12"},{"lineNumber":27,"author":{"gitId":"ramapriyan912001"},"content":"import seedu.awe.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-10-25"},{"lineNumber":28,"author":{"gitId":"kheekheekhee"},"content":"import seedu.awe.model.AddressBook;","lastModifiedDate":"2021-10-12"},{"lineNumber":29,"author":{"gitId":"kheekheekhee"},"content":"import seedu.awe.model.Model;","lastModifiedDate":"2021-10-12"},{"lineNumber":30,"author":{"gitId":"kheekheekhee"},"content":"import seedu.awe.model.ReadOnlyAddressBook;","lastModifiedDate":"2021-10-12"},{"lineNumber":31,"author":{"gitId":"kheekheekhee"},"content":"import seedu.awe.model.ReadOnlyUserPrefs;","lastModifiedDate":"2021-10-12"},{"lineNumber":32,"author":{"gitId":"kheekheekhee"},"content":"import seedu.awe.model.expense.Cost;","lastModifiedDate":"2021-10-12"},{"lineNumber":33,"author":{"gitId":"kheekheekhee"},"content":"import seedu.awe.model.expense.Expense;","lastModifiedDate":"2021-10-12"},{"lineNumber":34,"author":{"gitId":"kheekheekhee"},"content":"import seedu.awe.model.group.Group;","lastModifiedDate":"2021-10-12"},{"lineNumber":35,"author":{"gitId":"kheekheekhee"},"content":"import seedu.awe.model.group.GroupName;","lastModifiedDate":"2021-10-12"},{"lineNumber":36,"author":{"gitId":"kheekheekhee"},"content":"import seedu.awe.model.group.exceptions.DuplicateGroupException;","lastModifiedDate":"2021-10-12"},{"lineNumber":37,"author":{"gitId":"kheekheekhee"},"content":"import seedu.awe.model.group.exceptions.GroupNotFoundException;","lastModifiedDate":"2021-10-12"},{"lineNumber":38,"author":{"gitId":"ramapriyan912001"},"content":"import seedu.awe.model.payment.Payment;","lastModifiedDate":"2021-10-21"},{"lineNumber":39,"author":{"gitId":"kheekheekhee"},"content":"import seedu.awe.model.person.Person;","lastModifiedDate":"2021-10-12"},{"lineNumber":40,"author":{"gitId":"Jingwencloud"},"content":"import seedu.awe.model.transactionsummary.TransactionSummary;","lastModifiedDate":"2021-10-21"},{"lineNumber":41,"author":{"gitId":"kheekheekhee"},"content":"import seedu.awe.testutil.ExpenseBuilder;","lastModifiedDate":"2021-10-12"},{"lineNumber":42,"author":{"gitId":"kheekheekhee"},"content":"import seedu.awe.testutil.GroupBuilder;","lastModifiedDate":"2021-10-12"},{"lineNumber":43,"author":{"gitId":"kheekheekhee"},"content":"import seedu.awe.testutil.PersonBuilder;","lastModifiedDate":"2021-10-12"},{"lineNumber":44,"author":{"gitId":"kheekheekhee"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":45,"author":{"gitId":"kheekheekhee"},"content":"public class AddExpenseCommandTest {","lastModifiedDate":"2021-10-12"},{"lineNumber":46,"author":{"gitId":"marcuspeh"},"content":"    private static final String COMMAND_FAIL_FAILED_MESSAGE \u003d \"Command should result in a command exception\";","lastModifiedDate":"2021-10-25"},{"lineNumber":47,"author":{"gitId":"kheekheekhee"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":48,"author":{"gitId":"kheekheekhee"},"content":"    @Test","lastModifiedDate":"2021-10-12"},{"lineNumber":49,"author":{"gitId":"kheekheekhee"},"content":"    public void constructor_nullExpense_throwsNullPointerException() {","lastModifiedDate":"2021-10-12"},{"lineNumber":50,"author":{"gitId":"kheekheekhee"},"content":"        assertThrows(NullPointerException.class, () -\u003e new AddExpenseCommand(null,","lastModifiedDate":"2021-10-12"},{"lineNumber":51,"author":{"gitId":"marcuspeh"},"content":"                null, null, null, null, null, null));","lastModifiedDate":"2021-10-25"},{"lineNumber":52,"author":{"gitId":"kheekheekhee"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":53,"author":{"gitId":"kheekheekhee"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":54,"author":{"gitId":"kheekheekhee"},"content":"    @Test","lastModifiedDate":"2021-10-12"},{"lineNumber":55,"author":{"gitId":"kheekheekhee"},"content":"    public void execute_expenseAcceptedByModel_addSuccessful() throws Exception {","lastModifiedDate":"2021-10-12"},{"lineNumber":56,"author":{"gitId":"kheekheekhee"},"content":"        ModelStubAcceptingExpenseAdded modelStub \u003d new ModelStubAcceptingExpenseAdded();","lastModifiedDate":"2021-10-12"},{"lineNumber":57,"author":{"gitId":"kheekheekhee"},"content":"        Person validPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2021-10-12"},{"lineNumber":58,"author":{"gitId":"kheekheekhee"},"content":"        Group validGroup \u003d new GroupBuilder().build();","lastModifiedDate":"2021-10-12"},{"lineNumber":59,"author":{"gitId":"kheekheekhee"},"content":"        Expense validExpense \u003d new ExpenseBuilder().build();","lastModifiedDate":"2021-10-12"},{"lineNumber":60,"author":{"gitId":"marcuspeh"},"content":"        validGroup \u003d validGroup.addMember(validPerson);","lastModifiedDate":"2021-10-27"},{"lineNumber":61,"author":{"gitId":"kheekheekhee"},"content":"        modelStub.addGroup(validGroup);","lastModifiedDate":"2021-10-12"},{"lineNumber":62,"author":{"gitId":"kheekheekhee"},"content":"        GroupName groupName \u003d validGroup.getGroupName();","lastModifiedDate":"2021-10-12"},{"lineNumber":63,"author":{"gitId":"kheekheekhee"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":64,"author":{"gitId":"marcuspeh"},"content":"        CommandResult commandResult \u003d new AddExpenseCommand(validExpense.getPayer(), validExpense.getCost(),","lastModifiedDate":"2021-10-25"},{"lineNumber":65,"author":{"gitId":"marcuspeh"},"content":"                validExpense.getDescription(), groupName, new ArrayList\u003c\u003e(),","lastModifiedDate":"2021-10-25"},{"lineNumber":66,"author":{"gitId":"marcuspeh"},"content":"                new ArrayList\u003c\u003e(), new ArrayList\u003c\u003e()).execute(modelStub);","lastModifiedDate":"2021-10-25"},{"lineNumber":67,"author":{"gitId":"kheekheekhee"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":68,"author":{"gitId":"chrus-chong"},"content":"        assertEquals(String.format(MESSAGE_ADDEXPENSECOMMAND_SUCCESS, validPerson),","lastModifiedDate":"2021-10-25"},{"lineNumber":69,"author":{"gitId":"kheekheekhee"},"content":"                commandResult.getFeedbackToUser());","lastModifiedDate":"2021-10-12"},{"lineNumber":70,"author":{"gitId":"kheekheekhee"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":71,"author":{"gitId":"kheekheekhee"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":72,"author":{"gitId":"kheekheekhee"},"content":"    @Test","lastModifiedDate":"2021-10-12"},{"lineNumber":73,"author":{"gitId":"kheekheekhee"},"content":"    public void execute_payerNotInGroup_throwsCommandException() throws Exception {","lastModifiedDate":"2021-10-12"},{"lineNumber":74,"author":{"gitId":"kheekheekhee"},"content":"        ModelStubAcceptingExpenseAdded modelStub \u003d new ModelStubAcceptingExpenseAdded();","lastModifiedDate":"2021-10-12"},{"lineNumber":75,"author":{"gitId":"kheekheekhee"},"content":"        Person validPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2021-10-12"},{"lineNumber":76,"author":{"gitId":"kheekheekhee"},"content":"        Group validGroup \u003d new GroupBuilder().build();","lastModifiedDate":"2021-10-12"},{"lineNumber":77,"author":{"gitId":"kheekheekhee"},"content":"        Expense validExpense \u003d new ExpenseBuilder().build();","lastModifiedDate":"2021-10-12"},{"lineNumber":78,"author":{"gitId":"kheekheekhee"},"content":"        modelStub.addGroup(validGroup);","lastModifiedDate":"2021-10-12"},{"lineNumber":79,"author":{"gitId":"kheekheekhee"},"content":"        GroupName groupName \u003d validGroup.getGroupName();","lastModifiedDate":"2021-10-12"},{"lineNumber":80,"author":{"gitId":"kheekheekhee"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":81,"author":{"gitId":"marcuspeh"},"content":"        try {","lastModifiedDate":"2021-10-25"},{"lineNumber":82,"author":{"gitId":"marcuspeh"},"content":"            CommandResult commandResult \u003d new AddExpenseCommand(validExpense.getPayer(), validExpense.getCost(),","lastModifiedDate":"2021-10-25"},{"lineNumber":83,"author":{"gitId":"marcuspeh"},"content":"                    validExpense.getDescription(), groupName, new ArrayList\u003c\u003e(), new ArrayList\u003c\u003e(),","lastModifiedDate":"2021-10-25"},{"lineNumber":84,"author":{"gitId":"marcuspeh"},"content":"                    new ArrayList\u003c\u003e()).execute(modelStub);","lastModifiedDate":"2021-10-25"},{"lineNumber":85,"author":{"gitId":"marcuspeh"},"content":"            fail(COMMAND_FAIL_FAILED_MESSAGE);","lastModifiedDate":"2021-10-25"},{"lineNumber":86,"author":{"gitId":"marcuspeh"},"content":"        } catch (CommandException commandException) {","lastModifiedDate":"2021-10-25"},{"lineNumber":87,"author":{"gitId":"chrus-chong"},"content":"            assertEquals(String.format(MESSAGE_ADDEXPENSECOMMAND_NOT_PART_OF_GROUP, validPerson),","lastModifiedDate":"2021-10-25"},{"lineNumber":88,"author":{"gitId":"marcuspeh"},"content":"                    commandException.getMessage());","lastModifiedDate":"2021-10-25"},{"lineNumber":89,"author":{"gitId":"marcuspeh"},"content":"        }","lastModifiedDate":"2021-10-25"},{"lineNumber":90,"author":{"gitId":"kheekheekhee"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":91,"author":{"gitId":"kheekheekhee"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":92,"author":{"gitId":"kheekheekhee"},"content":"    @Test","lastModifiedDate":"2021-10-12"},{"lineNumber":93,"author":{"gitId":"kheekheekhee"},"content":"    public void execute_allGroupMembersExcluded_throwsCommandException() throws Exception {","lastModifiedDate":"2021-10-12"},{"lineNumber":94,"author":{"gitId":"kheekheekhee"},"content":"        ModelStubAcceptingExpenseAdded modelStub \u003d new ModelStubAcceptingExpenseAdded();","lastModifiedDate":"2021-10-12"},{"lineNumber":95,"author":{"gitId":"kheekheekhee"},"content":"        Person validPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2021-10-12"},{"lineNumber":96,"author":{"gitId":"kheekheekhee"},"content":"        Group validGroup \u003d new GroupBuilder().build();","lastModifiedDate":"2021-10-12"},{"lineNumber":97,"author":{"gitId":"kheekheekhee"},"content":"        Expense validExpense \u003d new ExpenseBuilder().build();","lastModifiedDate":"2021-10-17"},{"lineNumber":98,"author":{"gitId":"marcuspeh"},"content":"        validGroup \u003d validGroup.addMember(validPerson);","lastModifiedDate":"2021-10-27"},{"lineNumber":99,"author":{"gitId":"kheekheekhee"},"content":"        modelStub.addGroup(validGroup);","lastModifiedDate":"2021-10-12"},{"lineNumber":100,"author":{"gitId":"kheekheekhee"},"content":"        GroupName groupName \u003d validGroup.getGroupName();","lastModifiedDate":"2021-10-12"},{"lineNumber":101,"author":{"gitId":"kheekheekhee"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":102,"author":{"gitId":"marcuspeh"},"content":"        try {","lastModifiedDate":"2021-10-25"},{"lineNumber":103,"author":{"gitId":"marcuspeh"},"content":"            CommandResult commandResult \u003d new AddExpenseCommand(validExpense.getPayer(), validExpense.getCost(),","lastModifiedDate":"2021-10-25"},{"lineNumber":104,"author":{"gitId":"marcuspeh"},"content":"                    validExpense.getDescription(), groupName, new ArrayList\u003c\u003e(), new ArrayList\u003c\u003e(),","lastModifiedDate":"2021-10-25"},{"lineNumber":105,"author":{"gitId":"marcuspeh"},"content":"                    new ArrayList\u003c\u003e(Arrays.asList(validPerson))).execute(modelStub);","lastModifiedDate":"2021-10-25"},{"lineNumber":106,"author":{"gitId":"marcuspeh"},"content":"            fail(COMMAND_FAIL_FAILED_MESSAGE);","lastModifiedDate":"2021-10-25"},{"lineNumber":107,"author":{"gitId":"marcuspeh"},"content":"        } catch (CommandException commandException) {","lastModifiedDate":"2021-10-25"},{"lineNumber":108,"author":{"gitId":"chrus-chong"},"content":"            assertEquals(String.format(MESSAGE_ADDEXPENSECOMMAND_ALL_MEMBERS_EXCLUDED, validPerson),","lastModifiedDate":"2021-10-25"},{"lineNumber":109,"author":{"gitId":"marcuspeh"},"content":"                    commandException.getMessage());","lastModifiedDate":"2021-10-25"},{"lineNumber":110,"author":{"gitId":"marcuspeh"},"content":"        }","lastModifiedDate":"2021-10-25"},{"lineNumber":111,"author":{"gitId":"kheekheekhee"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":112,"author":{"gitId":"kheekheekhee"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":113,"author":{"gitId":"kheekheekhee"},"content":"    @Test","lastModifiedDate":"2021-10-12"},{"lineNumber":114,"author":{"gitId":"kheekheekhee"},"content":"    public void execute_includedPersonNotPartOfGroup_throwsCommandException() throws Exception {","lastModifiedDate":"2021-10-17"},{"lineNumber":115,"author":{"gitId":"kheekheekhee"},"content":"        ModelStubAcceptingExpenseAdded modelStub \u003d new ModelStubAcceptingExpenseAdded();","lastModifiedDate":"2021-10-12"},{"lineNumber":116,"author":{"gitId":"kheekheekhee"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":117,"author":{"gitId":"kheekheekhee"},"content":"        Person validPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2021-10-12"},{"lineNumber":118,"author":{"gitId":"kheekheekhee"},"content":"        Person validPersonNotInGroup \u003d new PersonBuilder().withName(\"nic\").build();","lastModifiedDate":"2021-10-12"},{"lineNumber":119,"author":{"gitId":"kheekheekhee"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":120,"author":{"gitId":"kheekheekhee"},"content":"        Group validGroup \u003d new GroupBuilder().build();","lastModifiedDate":"2021-10-12"},{"lineNumber":121,"author":{"gitId":"kheekheekhee"},"content":"        Expense validExpense \u003d new ExpenseBuilder().build();","lastModifiedDate":"2021-10-17"},{"lineNumber":122,"author":{"gitId":"kheekheekhee"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":123,"author":{"gitId":"kheekheekhee"},"content":"        validGroup.addMember(validPerson);","lastModifiedDate":"2021-10-12"},{"lineNumber":124,"author":{"gitId":"kheekheekhee"},"content":"        modelStub.addGroup(validGroup);","lastModifiedDate":"2021-10-12"},{"lineNumber":125,"author":{"gitId":"kheekheekhee"},"content":"        GroupName groupName \u003d validGroup.getGroupName();","lastModifiedDate":"2021-10-12"},{"lineNumber":126,"author":{"gitId":"kheekheekhee"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":127,"author":{"gitId":"marcuspeh"},"content":"        try {","lastModifiedDate":"2021-10-25"},{"lineNumber":128,"author":{"gitId":"marcuspeh"},"content":"            CommandResult commandResult \u003d new AddExpenseCommand(validExpense.getPayer(), validExpense.getCost(),","lastModifiedDate":"2021-10-25"},{"lineNumber":129,"author":{"gitId":"marcuspeh"},"content":"                    validExpense.getDescription(), groupName, new ArrayList\u003c\u003e(), new ArrayList\u003c\u003e(),","lastModifiedDate":"2021-10-25"},{"lineNumber":130,"author":{"gitId":"kheekheekhee"},"content":"                    new ArrayList\u003c\u003e(Arrays.asList(validPersonNotInGroup))).execute(modelStub);","lastModifiedDate":"2021-10-17"},{"lineNumber":131,"author":{"gitId":"marcuspeh"},"content":"            fail(COMMAND_FAIL_FAILED_MESSAGE);","lastModifiedDate":"2021-10-25"},{"lineNumber":132,"author":{"gitId":"marcuspeh"},"content":"        } catch (CommandException commandException) {","lastModifiedDate":"2021-10-25"},{"lineNumber":133,"author":{"gitId":"chrus-chong"},"content":"            assertEquals(String.format(MESSAGE_ADDEXPENSECOMMAND_NOT_PART_OF_GROUP, validPerson),","lastModifiedDate":"2021-10-25"},{"lineNumber":134,"author":{"gitId":"marcuspeh"},"content":"                    commandException.getMessage());","lastModifiedDate":"2021-10-25"},{"lineNumber":135,"author":{"gitId":"marcuspeh"},"content":"        }","lastModifiedDate":"2021-10-25"},{"lineNumber":136,"author":{"gitId":"kheekheekhee"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":137,"author":{"gitId":"kheekheekhee"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":138,"author":{"gitId":"kheekheekhee"},"content":"    @Test","lastModifiedDate":"2021-10-12"},{"lineNumber":139,"author":{"gitId":"kheekheekhee"},"content":"    public void execute_invalidExpenseCost_throwsCommandException() throws Exception {","lastModifiedDate":"2021-10-12"},{"lineNumber":140,"author":{"gitId":"kheekheekhee"},"content":"        ModelStubAcceptingExpenseAdded modelStub \u003d new ModelStubAcceptingExpenseAdded();","lastModifiedDate":"2021-10-12"},{"lineNumber":141,"author":{"gitId":"kheekheekhee"},"content":"        Person validPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2021-10-12"},{"lineNumber":142,"author":{"gitId":"kheekheekhee"},"content":"        Group validGroup \u003d new GroupBuilder().build();","lastModifiedDate":"2021-10-12"},{"lineNumber":143,"author":{"gitId":"kheekheekhee"},"content":"        Expense validExpense \u003d new ExpenseBuilder().withCost(\"0\").build();","lastModifiedDate":"2021-10-12"},{"lineNumber":144,"author":{"gitId":"marcuspeh"},"content":"        validGroup \u003d validGroup.addMember(validPerson);","lastModifiedDate":"2021-10-27"},{"lineNumber":145,"author":{"gitId":"kheekheekhee"},"content":"        modelStub.addGroup(validGroup);","lastModifiedDate":"2021-10-12"},{"lineNumber":146,"author":{"gitId":"kheekheekhee"},"content":"        GroupName groupName \u003d validGroup.getGroupName();","lastModifiedDate":"2021-10-12"},{"lineNumber":147,"author":{"gitId":"kheekheekhee"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":148,"author":{"gitId":"marcuspeh"},"content":"        try {","lastModifiedDate":"2021-10-25"},{"lineNumber":149,"author":{"gitId":"marcuspeh"},"content":"            CommandResult commandResult \u003d new AddExpenseCommand(validExpense.getPayer(), validExpense.getCost(),","lastModifiedDate":"2021-10-25"},{"lineNumber":150,"author":{"gitId":"marcuspeh"},"content":"                    validExpense.getDescription(), groupName, new ArrayList\u003c\u003e(), new ArrayList\u003c\u003e(),","lastModifiedDate":"2021-10-25"},{"lineNumber":151,"author":{"gitId":"marcuspeh"},"content":"                    new ArrayList\u003c\u003e()).execute(modelStub);","lastModifiedDate":"2021-10-25"},{"lineNumber":152,"author":{"gitId":"marcuspeh"},"content":"            fail(COMMAND_FAIL_FAILED_MESSAGE);","lastModifiedDate":"2021-10-25"},{"lineNumber":153,"author":{"gitId":"marcuspeh"},"content":"        } catch (CommandException commandException) {","lastModifiedDate":"2021-10-25"},{"lineNumber":154,"author":{"gitId":"chrus-chong"},"content":"            assertEquals(String.format(MESSAGE_ADDEXPENSECOMMAND_COST_ZERO_OR_LESS, validPerson),","lastModifiedDate":"2021-10-25"},{"lineNumber":155,"author":{"gitId":"marcuspeh"},"content":"                    commandException.getMessage());","lastModifiedDate":"2021-10-25"},{"lineNumber":156,"author":{"gitId":"marcuspeh"},"content":"        }","lastModifiedDate":"2021-10-25"},{"lineNumber":157,"author":{"gitId":"kheekheekhee"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":158,"author":{"gitId":"kheekheekhee"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":159,"author":{"gitId":"kheekheekhee"},"content":"    @Test","lastModifiedDate":"2021-10-12"},{"lineNumber":160,"author":{"gitId":"kheekheekhee"},"content":"    public void execute_withSelfPayees_addSuccessfulWithReducedCost() throws Exception {","lastModifiedDate":"2021-10-12"},{"lineNumber":161,"author":{"gitId":"kheekheekhee"},"content":"        ModelStubAcceptingExpenseAdded modelStub \u003d new ModelStubAcceptingExpenseAdded();","lastModifiedDate":"2021-10-12"},{"lineNumber":162,"author":{"gitId":"kheekheekhee"},"content":"        Person validPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2021-10-12"},{"lineNumber":163,"author":{"gitId":"kheekheekhee"},"content":"        Person validSelfPayee \u003d new PersonBuilder().withName(\"nic\").build();","lastModifiedDate":"2021-10-12"},{"lineNumber":164,"author":{"gitId":"kheekheekhee"},"content":"        Group validGroup \u003d new GroupBuilder().build();","lastModifiedDate":"2021-10-12"},{"lineNumber":165,"author":{"gitId":"kheekheekhee"},"content":"        Expense validExpense \u003d new ExpenseBuilder().build();","lastModifiedDate":"2021-10-12"},{"lineNumber":166,"author":{"gitId":"marcuspeh"},"content":"        validGroup \u003d validGroup.addMember(validPerson);","lastModifiedDate":"2021-10-27"},{"lineNumber":167,"author":{"gitId":"marcuspeh"},"content":"        validGroup \u003d validGroup.addMember(validSelfPayee);","lastModifiedDate":"2021-10-27"},{"lineNumber":168,"author":{"gitId":"kheekheekhee"},"content":"        modelStub.addGroup(validGroup);","lastModifiedDate":"2021-10-12"},{"lineNumber":169,"author":{"gitId":"kheekheekhee"},"content":"        GroupName groupName \u003d validGroup.getGroupName();","lastModifiedDate":"2021-10-12"},{"lineNumber":170,"author":{"gitId":"kheekheekhee"},"content":"        Cost costOfSelfPayment \u003d new Cost(\"30\");","lastModifiedDate":"2021-10-12"},{"lineNumber":171,"author":{"gitId":"kheekheekhee"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":172,"author":{"gitId":"marcuspeh"},"content":"        AddExpenseCommand addExpenseCommand \u003d new AddExpenseCommand(validExpense.getPayer(), validExpense.getCost(),","lastModifiedDate":"2021-10-25"},{"lineNumber":173,"author":{"gitId":"marcuspeh"},"content":"                validExpense.getDescription(), groupName, Arrays.asList(validSelfPayee),","lastModifiedDate":"2021-10-25"},{"lineNumber":174,"author":{"gitId":"marcuspeh"},"content":"                Arrays.asList(costOfSelfPayment), new ArrayList\u003c\u003e());","lastModifiedDate":"2021-10-25"},{"lineNumber":175,"author":{"gitId":"kheekheekhee"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":176,"author":{"gitId":"kheekheekhee"},"content":"        CommandResult commandResult \u003d addExpenseCommand.execute(modelStub);","lastModifiedDate":"2021-10-12"},{"lineNumber":177,"author":{"gitId":"kheekheekhee"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":178,"author":{"gitId":"marcuspeh"},"content":"        Cost actualFinalCost \u003d addExpenseCommand.getTotalCost();","lastModifiedDate":"2021-10-25"},{"lineNumber":179,"author":{"gitId":"kheekheekhee"},"content":"        Cost expectedFinalCost \u003d new Cost(\"50\");","lastModifiedDate":"2021-10-18"},{"lineNumber":180,"author":{"gitId":"kheekheekhee"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":181,"author":{"gitId":"kheekheekhee"},"content":"        assertEquals(String.format(actualFinalCost.toString()),","lastModifiedDate":"2021-10-12"},{"lineNumber":182,"author":{"gitId":"kheekheekhee"},"content":"                expectedFinalCost.toString());","lastModifiedDate":"2021-10-12"},{"lineNumber":183,"author":{"gitId":"kheekheekhee"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":184,"author":{"gitId":"kheekheekhee"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":185,"author":{"gitId":"kheekheekhee"},"content":"    @Test","lastModifiedDate":"2021-10-12"},{"lineNumber":186,"author":{"gitId":"kheekheekhee"},"content":"    public void execute_withSelfPayeesNotInGroup_throwsCommandException() throws Exception {","lastModifiedDate":"2021-10-12"},{"lineNumber":187,"author":{"gitId":"kheekheekhee"},"content":"        ModelStubAcceptingExpenseAdded modelStub \u003d new ModelStubAcceptingExpenseAdded();","lastModifiedDate":"2021-10-12"},{"lineNumber":188,"author":{"gitId":"kheekheekhee"},"content":"        Person validPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2021-10-12"},{"lineNumber":189,"author":{"gitId":"kheekheekhee"},"content":"        Person validSelfPayee \u003d new PersonBuilder().withName(\"nic\").build();","lastModifiedDate":"2021-10-12"},{"lineNumber":190,"author":{"gitId":"kheekheekhee"},"content":"        Group validGroup \u003d new GroupBuilder().build();","lastModifiedDate":"2021-10-12"},{"lineNumber":191,"author":{"gitId":"kheekheekhee"},"content":"        Expense validExpense \u003d new ExpenseBuilder().build();","lastModifiedDate":"2021-10-12"},{"lineNumber":192,"author":{"gitId":"kheekheekhee"},"content":"        validGroup.addMember(validPerson);","lastModifiedDate":"2021-10-12"},{"lineNumber":193,"author":{"gitId":"kheekheekhee"},"content":"        modelStub.addGroup(validGroup);","lastModifiedDate":"2021-10-12"},{"lineNumber":194,"author":{"gitId":"kheekheekhee"},"content":"        GroupName groupName \u003d validGroup.getGroupName();","lastModifiedDate":"2021-10-12"},{"lineNumber":195,"author":{"gitId":"kheekheekhee"},"content":"        Cost costOfSelfPayment \u003d new Cost(\"30\");","lastModifiedDate":"2021-10-12"},{"lineNumber":196,"author":{"gitId":"kheekheekhee"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":197,"author":{"gitId":"marcuspeh"},"content":"        try {","lastModifiedDate":"2021-10-25"},{"lineNumber":198,"author":{"gitId":"marcuspeh"},"content":"            CommandResult commandResult \u003d new AddExpenseCommand(validExpense.getPayer(), validExpense.getCost(),","lastModifiedDate":"2021-10-25"},{"lineNumber":199,"author":{"gitId":"marcuspeh"},"content":"                    validExpense.getDescription(), groupName, Arrays.asList(validSelfPayee),","lastModifiedDate":"2021-10-25"},{"lineNumber":200,"author":{"gitId":"marcuspeh"},"content":"                    Arrays.asList(costOfSelfPayment), new ArrayList\u003c\u003e()).execute(modelStub);","lastModifiedDate":"2021-10-25"},{"lineNumber":201,"author":{"gitId":"marcuspeh"},"content":"            fail(COMMAND_FAIL_FAILED_MESSAGE);","lastModifiedDate":"2021-10-25"},{"lineNumber":202,"author":{"gitId":"marcuspeh"},"content":"        } catch (CommandException exception) {","lastModifiedDate":"2021-10-25"},{"lineNumber":203,"author":{"gitId":"chrus-chong"},"content":"            assertEquals(String.format(MESSAGE_ADDEXPENSECOMMAND_NOT_PART_OF_GROUP,","lastModifiedDate":"2021-10-26"},{"lineNumber":204,"author":{"gitId":"marcuspeh"},"content":"                    validPerson), exception.getMessage());","lastModifiedDate":"2021-10-25"},{"lineNumber":205,"author":{"gitId":"marcuspeh"},"content":"        }","lastModifiedDate":"2021-10-25"},{"lineNumber":206,"author":{"gitId":"kheekheekhee"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":207,"author":{"gitId":"kheekheekhee"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":208,"author":{"gitId":"kheekheekhee"},"content":"    @Test","lastModifiedDate":"2021-10-12"},{"lineNumber":209,"author":{"gitId":"kheekheekhee"},"content":"    public void equals() {","lastModifiedDate":"2021-10-12"},{"lineNumber":210,"author":{"gitId":"Jingwencloud"},"content":"        Expense alicePayer \u003d new ExpenseBuilder().withPayer(ALICE).build();","lastModifiedDate":"2021-10-28"},{"lineNumber":211,"author":{"gitId":"Jingwencloud"},"content":"        Expense bobPayer \u003d new ExpenseBuilder().withPayer(BOB).build();","lastModifiedDate":"2021-10-28"},{"lineNumber":212,"author":{"gitId":"kheekheekhee"},"content":"        GroupName groupName \u003d new GroupName(\"arcade\");","lastModifiedDate":"2021-10-12"},{"lineNumber":213,"author":{"gitId":"marcuspeh"},"content":"        AddExpenseCommand addAlicePayerCommand \u003d new AddExpenseCommand(alicePayer.getPayer(), alicePayer.getCost(),","lastModifiedDate":"2021-10-25"},{"lineNumber":214,"author":{"gitId":"marcuspeh"},"content":"                alicePayer.getDescription(), groupName, new ArrayList\u003c\u003e(), new ArrayList\u003c\u003e(), new ArrayList\u003c\u003e());","lastModifiedDate":"2021-10-25"},{"lineNumber":215,"author":{"gitId":"marcuspeh"},"content":"        AddExpenseCommand addBobPayerCommand \u003d new AddExpenseCommand(bobPayer.getPayer(), alicePayer.getCost(),","lastModifiedDate":"2021-10-25"},{"lineNumber":216,"author":{"gitId":"marcuspeh"},"content":"                alicePayer.getDescription(), groupName, new ArrayList\u003c\u003e(), new ArrayList\u003c\u003e(), new ArrayList\u003c\u003e());","lastModifiedDate":"2021-10-25"},{"lineNumber":217,"author":{"gitId":"kheekheekhee"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":218,"author":{"gitId":"kheekheekhee"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2021-10-12"},{"lineNumber":219,"author":{"gitId":"kheekheekhee"},"content":"        assertTrue(addAlicePayerCommand.equals(addAlicePayerCommand));","lastModifiedDate":"2021-10-12"},{"lineNumber":220,"author":{"gitId":"kheekheekhee"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":221,"author":{"gitId":"kheekheekhee"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2021-10-12"},{"lineNumber":222,"author":{"gitId":"marcuspeh"},"content":"        AddExpenseCommand addAlicePayerCommandCopy \u003d new AddExpenseCommand(alicePayer.getPayer(), alicePayer.getCost(),","lastModifiedDate":"2021-10-25"},{"lineNumber":223,"author":{"gitId":"marcuspeh"},"content":"                alicePayer.getDescription(), groupName, new ArrayList\u003c\u003e(), new ArrayList\u003c\u003e(), new ArrayList\u003c\u003e());","lastModifiedDate":"2021-10-25"},{"lineNumber":224,"author":{"gitId":"kheekheekhee"},"content":"        assertTrue(addAlicePayerCommandCopy.equals(addAlicePayerCommandCopy));","lastModifiedDate":"2021-10-12"},{"lineNumber":225,"author":{"gitId":"kheekheekhee"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":226,"author":{"gitId":"kheekheekhee"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2021-10-12"},{"lineNumber":227,"author":{"gitId":"kheekheekhee"},"content":"        assertFalse(addAlicePayerCommand.equals(1));","lastModifiedDate":"2021-10-12"},{"lineNumber":228,"author":{"gitId":"kheekheekhee"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":229,"author":{"gitId":"kheekheekhee"},"content":"        // null -\u003e returns false","lastModifiedDate":"2021-10-12"},{"lineNumber":230,"author":{"gitId":"kheekheekhee"},"content":"        assertFalse(addAlicePayerCommand.equals(null));","lastModifiedDate":"2021-10-12"},{"lineNumber":231,"author":{"gitId":"kheekheekhee"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":232,"author":{"gitId":"kheekheekhee"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2021-10-12"},{"lineNumber":233,"author":{"gitId":"kheekheekhee"},"content":"        assertFalse(addAlicePayerCommand.equals(addBobPayerCommand));","lastModifiedDate":"2021-10-12"},{"lineNumber":234,"author":{"gitId":"kheekheekhee"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":235,"author":{"gitId":"kheekheekhee"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":236,"author":{"gitId":"kheekheekhee"},"content":"    /**","lastModifiedDate":"2021-10-12"},{"lineNumber":237,"author":{"gitId":"kheekheekhee"},"content":"     * A default model stub that have all of the methods failing.","lastModifiedDate":"2021-10-12"},{"lineNumber":238,"author":{"gitId":"kheekheekhee"},"content":"     */","lastModifiedDate":"2021-10-12"},{"lineNumber":239,"author":{"gitId":"kheekheekhee"},"content":"    private class ModelStub implements Model {","lastModifiedDate":"2021-10-12"},{"lineNumber":240,"author":{"gitId":"kheekheekhee"},"content":"        @Override","lastModifiedDate":"2021-10-12"},{"lineNumber":241,"author":{"gitId":"kheekheekhee"},"content":"        public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2021-10-12"},{"lineNumber":242,"author":{"gitId":"kheekheekhee"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-12"},{"lineNumber":243,"author":{"gitId":"kheekheekhee"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":244,"author":{"gitId":"kheekheekhee"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":245,"author":{"gitId":"kheekheekhee"},"content":"        @Override","lastModifiedDate":"2021-10-12"},{"lineNumber":246,"author":{"gitId":"kheekheekhee"},"content":"        public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2021-10-12"},{"lineNumber":247,"author":{"gitId":"kheekheekhee"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-12"},{"lineNumber":248,"author":{"gitId":"kheekheekhee"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":249,"author":{"gitId":"kheekheekhee"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":250,"author":{"gitId":"kheekheekhee"},"content":"        @Override","lastModifiedDate":"2021-10-12"},{"lineNumber":251,"author":{"gitId":"kheekheekhee"},"content":"        public GuiSettings getGuiSettings() {","lastModifiedDate":"2021-10-12"},{"lineNumber":252,"author":{"gitId":"kheekheekhee"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-12"},{"lineNumber":253,"author":{"gitId":"kheekheekhee"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":254,"author":{"gitId":"kheekheekhee"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":255,"author":{"gitId":"kheekheekhee"},"content":"        @Override","lastModifiedDate":"2021-10-12"},{"lineNumber":256,"author":{"gitId":"kheekheekhee"},"content":"        public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2021-10-12"},{"lineNumber":257,"author":{"gitId":"kheekheekhee"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-12"},{"lineNumber":258,"author":{"gitId":"kheekheekhee"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":259,"author":{"gitId":"kheekheekhee"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":260,"author":{"gitId":"kheekheekhee"},"content":"        @Override","lastModifiedDate":"2021-10-12"},{"lineNumber":261,"author":{"gitId":"kheekheekhee"},"content":"        public Path getAddressBookFilePath() {","lastModifiedDate":"2021-10-12"},{"lineNumber":262,"author":{"gitId":"kheekheekhee"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-12"},{"lineNumber":263,"author":{"gitId":"kheekheekhee"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":264,"author":{"gitId":"kheekheekhee"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":265,"author":{"gitId":"kheekheekhee"},"content":"        @Override","lastModifiedDate":"2021-10-12"},{"lineNumber":266,"author":{"gitId":"kheekheekhee"},"content":"        public void setAddressBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2021-10-12"},{"lineNumber":267,"author":{"gitId":"kheekheekhee"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-12"},{"lineNumber":268,"author":{"gitId":"kheekheekhee"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":269,"author":{"gitId":"kheekheekhee"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":270,"author":{"gitId":"kheekheekhee"},"content":"        @Override","lastModifiedDate":"2021-10-12"},{"lineNumber":271,"author":{"gitId":"kheekheekhee"},"content":"        public void addPerson(Person person) {","lastModifiedDate":"2021-10-12"},{"lineNumber":272,"author":{"gitId":"kheekheekhee"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-12"},{"lineNumber":273,"author":{"gitId":"kheekheekhee"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":274,"author":{"gitId":"kheekheekhee"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":275,"author":{"gitId":"kheekheekhee"},"content":"        @Override","lastModifiedDate":"2021-10-12"},{"lineNumber":276,"author":{"gitId":"kheekheekhee"},"content":"        public void setAddressBook(ReadOnlyAddressBook newData) {","lastModifiedDate":"2021-10-12"},{"lineNumber":277,"author":{"gitId":"kheekheekhee"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-12"},{"lineNumber":278,"author":{"gitId":"kheekheekhee"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":279,"author":{"gitId":"kheekheekhee"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":280,"author":{"gitId":"kheekheekhee"},"content":"        @Override","lastModifiedDate":"2021-10-12"},{"lineNumber":281,"author":{"gitId":"kheekheekhee"},"content":"        public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2021-10-12"},{"lineNumber":282,"author":{"gitId":"kheekheekhee"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-12"},{"lineNumber":283,"author":{"gitId":"kheekheekhee"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":284,"author":{"gitId":"kheekheekhee"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":285,"author":{"gitId":"ramapriyan912001"},"content":"        @Override","lastModifiedDate":"2021-10-25"},{"lineNumber":286,"author":{"gitId":"ramapriyan912001"},"content":"        public Group getActiveGroupFromAddressBook() throws CommandException {","lastModifiedDate":"2021-10-25"},{"lineNumber":287,"author":{"gitId":"ramapriyan912001"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-25"},{"lineNumber":288,"author":{"gitId":"ramapriyan912001"},"content":"        }","lastModifiedDate":"2021-10-25"},{"lineNumber":289,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":290,"author":{"gitId":"kheekheekhee"},"content":"        @Override","lastModifiedDate":"2021-10-12"},{"lineNumber":291,"author":{"gitId":"kheekheekhee"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2021-10-12"},{"lineNumber":292,"author":{"gitId":"kheekheekhee"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-12"},{"lineNumber":293,"author":{"gitId":"kheekheekhee"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":294,"author":{"gitId":"kheekheekhee"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":295,"author":{"gitId":"kheekheekhee"},"content":"        @Override","lastModifiedDate":"2021-10-12"},{"lineNumber":296,"author":{"gitId":"kheekheekhee"},"content":"        public void deletePerson(Person target) {","lastModifiedDate":"2021-10-12"},{"lineNumber":297,"author":{"gitId":"kheekheekhee"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-12"},{"lineNumber":298,"author":{"gitId":"kheekheekhee"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":299,"author":{"gitId":"kheekheekhee"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":300,"author":{"gitId":"kheekheekhee"},"content":"        @Override","lastModifiedDate":"2021-10-12"},{"lineNumber":301,"author":{"gitId":"kheekheekhee"},"content":"        public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2021-10-12"},{"lineNumber":302,"author":{"gitId":"kheekheekhee"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-12"},{"lineNumber":303,"author":{"gitId":"kheekheekhee"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":304,"author":{"gitId":"kheekheekhee"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":305,"author":{"gitId":"marcuspeh"},"content":"        @Override","lastModifiedDate":"2021-10-18"},{"lineNumber":306,"author":{"gitId":"marcuspeh"},"content":"        public void setTransactionSummary(HashMap\u003cPerson, Cost\u003e summary) {","lastModifiedDate":"2021-10-18"},{"lineNumber":307,"author":{"gitId":"marcuspeh"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-18"},{"lineNumber":308,"author":{"gitId":"marcuspeh"},"content":"        }","lastModifiedDate":"2021-10-18"},{"lineNumber":309,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":310,"author":{"gitId":"chrus-chong"},"content":"        @Override","lastModifiedDate":"2021-10-19"},{"lineNumber":311,"author":{"gitId":"chrus-chong"},"content":"        public void setAllMembersOfGroup(Group group) {","lastModifiedDate":"2021-10-19"},{"lineNumber":312,"author":{"gitId":"chrus-chong"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-19"},{"lineNumber":313,"author":{"gitId":"chrus-chong"},"content":"        }","lastModifiedDate":"2021-10-19"},{"lineNumber":314,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":315,"author":{"gitId":"kheekheekhee"},"content":"        @Override","lastModifiedDate":"2021-10-12"},{"lineNumber":316,"author":{"gitId":"kheekheekhee"},"content":"        public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2021-10-12"},{"lineNumber":317,"author":{"gitId":"kheekheekhee"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-12"},{"lineNumber":318,"author":{"gitId":"kheekheekhee"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":319,"author":{"gitId":"kheekheekhee"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":320,"author":{"gitId":"kheekheekhee"},"content":"        @Override","lastModifiedDate":"2021-10-12"},{"lineNumber":321,"author":{"gitId":"kheekheekhee"},"content":"        public void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate) {","lastModifiedDate":"2021-10-12"},{"lineNumber":322,"author":{"gitId":"kheekheekhee"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-12"},{"lineNumber":323,"author":{"gitId":"kheekheekhee"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":324,"author":{"gitId":"kheekheekhee"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":325,"author":{"gitId":"kheekheekhee"},"content":"        @Override","lastModifiedDate":"2021-10-12"},{"lineNumber":326,"author":{"gitId":"kheekheekhee"},"content":"        public void deleteGroup(Group group) {","lastModifiedDate":"2021-10-12"},{"lineNumber":327,"author":{"gitId":"kheekheekhee"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-12"},{"lineNumber":328,"author":{"gitId":"kheekheekhee"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":329,"author":{"gitId":"kheekheekhee"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":330,"author":{"gitId":"kheekheekhee"},"content":"        @Override","lastModifiedDate":"2021-10-12"},{"lineNumber":331,"author":{"gitId":"kheekheekhee"},"content":"        public boolean hasGroup(Group group) {","lastModifiedDate":"2021-10-12"},{"lineNumber":332,"author":{"gitId":"kheekheekhee"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-12"},{"lineNumber":333,"author":{"gitId":"kheekheekhee"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":334,"author":{"gitId":"kheekheekhee"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":335,"author":{"gitId":"ramapriyan912001"},"content":"        @Override","lastModifiedDate":"2021-10-21"},{"lineNumber":336,"author":{"gitId":"ramapriyan912001"},"content":"        public void setPayments(List\u003cPayment\u003e payments) {","lastModifiedDate":"2021-10-21"},{"lineNumber":337,"author":{"gitId":"ramapriyan912001"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-27"},{"lineNumber":338,"author":{"gitId":"ramapriyan912001"},"content":"        }","lastModifiedDate":"2021-10-21"},{"lineNumber":339,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":340,"author":{"gitId":"kheekheekhee"},"content":"        /**","lastModifiedDate":"2021-10-12"},{"lineNumber":341,"author":{"gitId":"kheekheekhee"},"content":"         * Returns an unmodifiable view of the list of {@code Group} backed by the internal list of","lastModifiedDate":"2021-10-12"},{"lineNumber":342,"author":{"gitId":"kheekheekhee"},"content":"         * {@code versionedAddressBook}","lastModifiedDate":"2021-10-12"},{"lineNumber":343,"author":{"gitId":"kheekheekhee"},"content":"         */","lastModifiedDate":"2021-10-12"},{"lineNumber":344,"author":{"gitId":"kheekheekhee"},"content":"        @Override","lastModifiedDate":"2021-10-12"},{"lineNumber":345,"author":{"gitId":"kheekheekhee"},"content":"        public ObservableList\u003cGroup\u003e getFilteredGroupList() {","lastModifiedDate":"2021-10-12"},{"lineNumber":346,"author":{"gitId":"kheekheekhee"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-12"},{"lineNumber":347,"author":{"gitId":"kheekheekhee"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":348,"author":{"gitId":"kheekheekhee"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":349,"author":{"gitId":"kheekheekhee"},"content":"        @Override","lastModifiedDate":"2021-10-12"},{"lineNumber":350,"author":{"gitId":"kheekheekhee"},"content":"        public void updateFilteredGroupList(Predicate\u003cGroup\u003e predicate) {","lastModifiedDate":"2021-10-12"},{"lineNumber":351,"author":{"gitId":"kheekheekhee"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-12"},{"lineNumber":352,"author":{"gitId":"kheekheekhee"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":353,"author":{"gitId":"kheekheekhee"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":354,"author":{"gitId":"kheekheekhee"},"content":"        @Override","lastModifiedDate":"2021-10-12"},{"lineNumber":355,"author":{"gitId":"kheekheekhee"},"content":"        public Group getGroupByName(GroupName groupName) {","lastModifiedDate":"2021-10-12"},{"lineNumber":356,"author":{"gitId":"kheekheekhee"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-12"},{"lineNumber":357,"author":{"gitId":"kheekheekhee"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":358,"author":{"gitId":"kheekheekhee"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":359,"author":{"gitId":"kheekheekhee"},"content":"        @Override","lastModifiedDate":"2021-10-12"},{"lineNumber":360,"author":{"gitId":"kheekheekhee"},"content":"        public void addGroup(Group group) {","lastModifiedDate":"2021-10-12"},{"lineNumber":361,"author":{"gitId":"kheekheekhee"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-12"},{"lineNumber":362,"author":{"gitId":"kheekheekhee"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":363,"author":{"gitId":"kheekheekhee"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":364,"author":{"gitId":"kheekheekhee"},"content":"        @Override","lastModifiedDate":"2021-10-12"},{"lineNumber":365,"author":{"gitId":"kheekheekhee"},"content":"        public void setGroup(Group group, Group newGroup) throws DuplicateGroupException {","lastModifiedDate":"2021-10-12"},{"lineNumber":366,"author":{"gitId":"kheekheekhee"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-12"},{"lineNumber":367,"author":{"gitId":"kheekheekhee"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":368,"author":{"gitId":"kheekheekhee"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":369,"author":{"gitId":"Jingwencloud"},"content":"        @Override","lastModifiedDate":"2021-10-13"},{"lineNumber":370,"author":{"gitId":"Jingwencloud"},"content":"        public void updateFilteredExpenseList(Predicate\u003cExpense\u003e predicate) {","lastModifiedDate":"2021-10-13"},{"lineNumber":371,"author":{"gitId":"Jingwencloud"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-13"},{"lineNumber":372,"author":{"gitId":"Jingwencloud"},"content":"        }","lastModifiedDate":"2021-10-13"},{"lineNumber":373,"author":{"gitId":"Jingwencloud"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":374,"author":{"gitId":"Jingwencloud"},"content":"        @Override","lastModifiedDate":"2021-10-13"},{"lineNumber":375,"author":{"gitId":"Jingwencloud"},"content":"        public void addExpense(Expense expense, Group group) {","lastModifiedDate":"2021-10-13"},{"lineNumber":376,"author":{"gitId":"Jingwencloud"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-13"},{"lineNumber":377,"author":{"gitId":"Jingwencloud"},"content":"        }","lastModifiedDate":"2021-10-13"},{"lineNumber":378,"author":{"gitId":"Jingwencloud"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":379,"author":{"gitId":"Jingwencloud"},"content":"        @Override","lastModifiedDate":"2021-10-13"},{"lineNumber":380,"author":{"gitId":"Jingwencloud"},"content":"        public void deleteExpense(Expense expense, Group group) {","lastModifiedDate":"2021-10-13"},{"lineNumber":381,"author":{"gitId":"Jingwencloud"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-13"},{"lineNumber":382,"author":{"gitId":"Jingwencloud"},"content":"        }","lastModifiedDate":"2021-10-13"},{"lineNumber":383,"author":{"gitId":"Jingwencloud"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":384,"author":{"gitId":"ramapriyan912001"},"content":"        @Override","lastModifiedDate":"2021-10-21"},{"lineNumber":385,"author":{"gitId":"ramapriyan912001"},"content":"        public ObservableList\u003cPayment\u003e getPayments() {","lastModifiedDate":"2021-10-21"},{"lineNumber":386,"author":{"gitId":"ramapriyan912001"},"content":"            return null;","lastModifiedDate":"2021-10-21"},{"lineNumber":387,"author":{"gitId":"ramapriyan912001"},"content":"        }","lastModifiedDate":"2021-10-21"},{"lineNumber":388,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":389,"author":{"gitId":"kheekheekhee"},"content":"        @Override","lastModifiedDate":"2021-10-12"},{"lineNumber":390,"author":{"gitId":"kheekheekhee"},"content":"        public ObservableList\u003cExpense\u003e getExpenses() {","lastModifiedDate":"2021-10-12"},{"lineNumber":391,"author":{"gitId":"kheekheekhee"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-12"},{"lineNumber":392,"author":{"gitId":"kheekheekhee"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":393,"author":{"gitId":"kheekheekhee"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":394,"author":{"gitId":"kheekheekhee"},"content":"        @Override","lastModifiedDate":"2021-10-12"},{"lineNumber":395,"author":{"gitId":"kheekheekhee"},"content":"        public void setExpenses(Group group) {","lastModifiedDate":"2021-10-12"},{"lineNumber":396,"author":{"gitId":"kheekheekhee"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-12"},{"lineNumber":397,"author":{"gitId":"kheekheekhee"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":398,"author":{"gitId":"kheekheekhee"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":399,"author":{"gitId":"Jingwencloud"},"content":"        @Override","lastModifiedDate":"2021-10-21"},{"lineNumber":400,"author":{"gitId":"Jingwencloud"},"content":"        public ObservableList\u003cTransactionSummary\u003e getTransactionSummary() {","lastModifiedDate":"2021-10-21"},{"lineNumber":401,"author":{"gitId":"Jingwencloud"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-21"},{"lineNumber":402,"author":{"gitId":"Jingwencloud"},"content":"        }","lastModifiedDate":"2021-10-21"},{"lineNumber":403,"author":{"gitId":"Jingwencloud"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":404,"author":{"gitId":"Jingwencloud"},"content":"        @Override","lastModifiedDate":"2021-10-22"},{"lineNumber":405,"author":{"gitId":"Jingwencloud"},"content":"        public boolean isCurrentExpenseList(Group group) {","lastModifiedDate":"2021-10-22"},{"lineNumber":406,"author":{"gitId":"Jingwencloud"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-22"},{"lineNumber":407,"author":{"gitId":"Jingwencloud"},"content":"        }","lastModifiedDate":"2021-10-22"},{"lineNumber":408,"author":{"gitId":"Jingwencloud"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":409,"author":{"gitId":"ramapriyan912001"},"content":"        @Override","lastModifiedDate":"2021-10-27"},{"lineNumber":410,"author":{"gitId":"ramapriyan912001"},"content":"        public Expense getExpense(int index) {","lastModifiedDate":"2021-10-27"},{"lineNumber":411,"author":{"gitId":"ramapriyan912001"},"content":"            return null;","lastModifiedDate":"2021-10-27"},{"lineNumber":412,"author":{"gitId":"ramapriyan912001"},"content":"        }","lastModifiedDate":"2021-10-27"},{"lineNumber":413,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":414,"author":{"gitId":"kheekheekhee"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":415,"author":{"gitId":"kheekheekhee"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":416,"author":{"gitId":"kheekheekhee"},"content":"    /**","lastModifiedDate":"2021-10-12"},{"lineNumber":417,"author":{"gitId":"kheekheekhee"},"content":"     * A Model stub that always accept the expense being added.","lastModifiedDate":"2021-10-12"},{"lineNumber":418,"author":{"gitId":"kheekheekhee"},"content":"     */","lastModifiedDate":"2021-10-12"},{"lineNumber":419,"author":{"gitId":"kheekheekhee"},"content":"    private class ModelStubAcceptingExpenseAdded extends ModelStub {","lastModifiedDate":"2021-10-12"},{"lineNumber":420,"author":{"gitId":"kheekheekhee"},"content":"        final ArrayList\u003cPerson\u003e personsAdded \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-12"},{"lineNumber":421,"author":{"gitId":"kheekheekhee"},"content":"        final ArrayList\u003cGroup\u003e groups \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-12"},{"lineNumber":422,"author":{"gitId":"Jingwencloud"},"content":"        final ArrayList\u003cExpense\u003e expenses \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-13"},{"lineNumber":423,"author":{"gitId":"kheekheekhee"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":424,"author":{"gitId":"kheekheekhee"},"content":"        @Override","lastModifiedDate":"2021-10-12"},{"lineNumber":425,"author":{"gitId":"kheekheekhee"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2021-10-12"},{"lineNumber":426,"author":{"gitId":"kheekheekhee"},"content":"            requireNonNull(person);","lastModifiedDate":"2021-10-12"},{"lineNumber":427,"author":{"gitId":"kheekheekhee"},"content":"            return personsAdded.stream().anyMatch(person::isSamePerson);","lastModifiedDate":"2021-10-12"},{"lineNumber":428,"author":{"gitId":"kheekheekhee"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":429,"author":{"gitId":"kheekheekhee"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":430,"author":{"gitId":"kheekheekhee"},"content":"        @Override","lastModifiedDate":"2021-10-12"},{"lineNumber":431,"author":{"gitId":"kheekheekhee"},"content":"        public void addPerson(Person person) {","lastModifiedDate":"2021-10-12"},{"lineNumber":432,"author":{"gitId":"kheekheekhee"},"content":"            requireNonNull(person);","lastModifiedDate":"2021-10-12"},{"lineNumber":433,"author":{"gitId":"kheekheekhee"},"content":"            personsAdded.add(person);","lastModifiedDate":"2021-10-12"},{"lineNumber":434,"author":{"gitId":"kheekheekhee"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":435,"author":{"gitId":"kheekheekhee"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":436,"author":{"gitId":"Jingwencloud"},"content":"        @Override","lastModifiedDate":"2021-10-13"},{"lineNumber":437,"author":{"gitId":"Jingwencloud"},"content":"        public void addExpense(Expense expense, Group group) {","lastModifiedDate":"2021-10-13"},{"lineNumber":438,"author":{"gitId":"Jingwencloud"},"content":"            requireNonNull(expense);","lastModifiedDate":"2021-10-13"},{"lineNumber":439,"author":{"gitId":"Jingwencloud"},"content":"            requireNonNull(group);","lastModifiedDate":"2021-10-13"},{"lineNumber":440,"author":{"gitId":"Jingwencloud"},"content":"            expenses.add(expense);","lastModifiedDate":"2021-10-13"},{"lineNumber":441,"author":{"gitId":"Jingwencloud"},"content":"        }","lastModifiedDate":"2021-10-13"},{"lineNumber":442,"author":{"gitId":"Jingwencloud"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":443,"author":{"gitId":"kheekheekhee"},"content":"        @Override","lastModifiedDate":"2021-10-12"},{"lineNumber":444,"author":{"gitId":"kheekheekhee"},"content":"        public void addGroup(Group group) {","lastModifiedDate":"2021-10-12"},{"lineNumber":445,"author":{"gitId":"kheekheekhee"},"content":"            requireNonNull(group);","lastModifiedDate":"2021-10-12"},{"lineNumber":446,"author":{"gitId":"kheekheekhee"},"content":"            groups.add(group);","lastModifiedDate":"2021-10-12"},{"lineNumber":447,"author":{"gitId":"kheekheekhee"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":448,"author":{"gitId":"kheekheekhee"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":449,"author":{"gitId":"kheekheekhee"},"content":"        @Override","lastModifiedDate":"2021-10-12"},{"lineNumber":450,"author":{"gitId":"kheekheekhee"},"content":"        public void setGroup(Group group, Group newGroup) {","lastModifiedDate":"2021-10-12"},{"lineNumber":451,"author":{"gitId":"kheekheekhee"},"content":"            int index \u003d groups.indexOf(group);","lastModifiedDate":"2021-10-12"},{"lineNumber":452,"author":{"gitId":"kheekheekhee"},"content":"            groups.set(index, newGroup);","lastModifiedDate":"2021-10-12"},{"lineNumber":453,"author":{"gitId":"kheekheekhee"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":454,"author":{"gitId":"kheekheekhee"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":455,"author":{"gitId":"kheekheekhee"},"content":"        @Override","lastModifiedDate":"2021-10-12"},{"lineNumber":456,"author":{"gitId":"kheekheekhee"},"content":"        public Group getGroupByName(GroupName groupName) {","lastModifiedDate":"2021-10-12"},{"lineNumber":457,"author":{"gitId":"kheekheekhee"},"content":"            requireNonNull(groupName);","lastModifiedDate":"2021-10-12"},{"lineNumber":458,"author":{"gitId":"kheekheekhee"},"content":"            for (Group group : groups) {","lastModifiedDate":"2021-10-12"},{"lineNumber":459,"author":{"gitId":"kheekheekhee"},"content":"                if (group.getGroupName().equals(groupName)) {","lastModifiedDate":"2021-10-12"},{"lineNumber":460,"author":{"gitId":"kheekheekhee"},"content":"                    return group;","lastModifiedDate":"2021-10-12"},{"lineNumber":461,"author":{"gitId":"kheekheekhee"},"content":"                }","lastModifiedDate":"2021-10-12"},{"lineNumber":462,"author":{"gitId":"kheekheekhee"},"content":"            }","lastModifiedDate":"2021-10-12"},{"lineNumber":463,"author":{"gitId":"kheekheekhee"},"content":"            throw new GroupNotFoundException();","lastModifiedDate":"2021-10-12"},{"lineNumber":464,"author":{"gitId":"kheekheekhee"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":465,"author":{"gitId":"kheekheekhee"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":466,"author":{"gitId":"kheekheekhee"},"content":"        @Override","lastModifiedDate":"2021-10-12"},{"lineNumber":467,"author":{"gitId":"kheekheekhee"},"content":"        public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2021-10-12"},{"lineNumber":468,"author":{"gitId":"kheekheekhee"},"content":"            return new AddressBook();","lastModifiedDate":"2021-10-12"},{"lineNumber":469,"author":{"gitId":"kheekheekhee"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":470,"author":{"gitId":"kheekheekhee"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":471,"author":{"gitId":"kheekheekhee"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":472,"author":{"gitId":"kheekheekhee"},"content":"}","lastModifiedDate":"2021-10-12"}],"authorContributionMap":{"marcuspeh":66,"Jingwencloud":38,"kheekheekhee":330,"chrus-chong":15,"ramapriyan912001":23}},{"path":"src/test/java/seedu/awe/logic/commands/CalculatePaymentsCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"ramapriyan912001"},"content":"package seedu.awe.logic.commands;","lastModifiedDate":"2021-10-27"},{"lineNumber":2,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":3,"author":{"gitId":"ramapriyan912001"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-29"},{"lineNumber":4,"author":{"gitId":"ramapriyan912001"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2021-10-29"},{"lineNumber":5,"author":{"gitId":"ramapriyan912001"},"content":"import static seedu.awe.commons.core.Messages.MESSAGE_CALCULATEPAYMENTSCOMMAND_GROUP_NOT_FOUND;","lastModifiedDate":"2021-10-29"},{"lineNumber":6,"author":{"gitId":"ramapriyan912001"},"content":"import static seedu.awe.commons.core.Messages.MESSAGE_CALCULATEPAYMENTSCOMMAND_PAYMENTS_EMPTY;","lastModifiedDate":"2021-10-29"},{"lineNumber":7,"author":{"gitId":"ramapriyan912001"},"content":"import static seedu.awe.commons.core.Messages.MESSAGE_CALCULATEPAYMENTSCOMMAND_PAYMENT_DISCREPANCY;","lastModifiedDate":"2021-10-29"},{"lineNumber":8,"author":{"gitId":"ramapriyan912001"},"content":"import static seedu.awe.commons.core.Messages.MESSAGE_CALCULATEPAYMENTSCOMMAND_SUCCESS;","lastModifiedDate":"2021-10-29"},{"lineNumber":9,"author":{"gitId":"ramapriyan912001"},"content":"import static seedu.awe.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2021-10-29"},{"lineNumber":10,"author":{"gitId":"ramapriyan912001"},"content":"import static seedu.awe.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2021-10-29"},{"lineNumber":11,"author":{"gitId":"ramapriyan912001"},"content":"import static seedu.awe.testutil.Assert.assertThrows;","lastModifiedDate":"2021-10-29"},{"lineNumber":12,"author":{"gitId":"ramapriyan912001"},"content":"import static seedu.awe.testutil.TypicalGroups.AMSTERDAM;","lastModifiedDate":"2021-10-29"},{"lineNumber":13,"author":{"gitId":"ramapriyan912001"},"content":"import static seedu.awe.testutil.TypicalGroups.AMSTERDAM_WITH_EXPENSES;","lastModifiedDate":"2021-10-29"},{"lineNumber":14,"author":{"gitId":"ramapriyan912001"},"content":"import static seedu.awe.testutil.TypicalGroups.AMSTERDAM_WITH_EXPENSES_PAYMENTS;","lastModifiedDate":"2021-10-29"},{"lineNumber":15,"author":{"gitId":"ramapriyan912001"},"content":"import static seedu.awe.testutil.TypicalGroups.BALI;","lastModifiedDate":"2021-10-29"},{"lineNumber":16,"author":{"gitId":"ramapriyan912001"},"content":"import static seedu.awe.testutil.TypicalGroups.BALI_WITH_EXPENSES;","lastModifiedDate":"2021-10-29"},{"lineNumber":17,"author":{"gitId":"ramapriyan912001"},"content":"import static seedu.awe.testutil.TypicalGroups.BALI_WITH_EXPENSES_PAYMENTS;","lastModifiedDate":"2021-10-29"},{"lineNumber":18,"author":{"gitId":"ramapriyan912001"},"content":"import static seedu.awe.testutil.TypicalGroups.CHINA;","lastModifiedDate":"2021-10-29"},{"lineNumber":19,"author":{"gitId":"ramapriyan912001"},"content":"import static seedu.awe.testutil.TypicalGroups.COLOMBO_WITH_EXPENSES;","lastModifiedDate":"2021-10-29"},{"lineNumber":20,"author":{"gitId":"ramapriyan912001"},"content":"import static seedu.awe.testutil.TypicalGroups.INDIA;","lastModifiedDate":"2021-10-29"},{"lineNumber":21,"author":{"gitId":"ramapriyan912001"},"content":"import static seedu.awe.testutil.TypicalGroups.MALIBU;","lastModifiedDate":"2021-10-31"},{"lineNumber":22,"author":{"gitId":"ramapriyan912001"},"content":"import static seedu.awe.testutil.TypicalGroups.PERU_WITH_EXPENSES_INVALID;","lastModifiedDate":"2021-10-29"},{"lineNumber":23,"author":{"gitId":"ramapriyan912001"},"content":"import static seedu.awe.testutil.TypicalGroups.RIO_WITH_EXPENSES_INVALID;","lastModifiedDate":"2021-10-29"},{"lineNumber":24,"author":{"gitId":"ramapriyan912001"},"content":"import static seedu.awe.testutil.TypicalGroups.SANTIAGO_WITH_EXPENSES;","lastModifiedDate":"2021-10-31"},{"lineNumber":25,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":26,"author":{"gitId":"ramapriyan912001"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-29"},{"lineNumber":27,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":28,"author":{"gitId":"ramapriyan912001"},"content":"import seedu.awe.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-10-29"},{"lineNumber":29,"author":{"gitId":"ramapriyan912001"},"content":"import seedu.awe.model.Model;","lastModifiedDate":"2021-10-27"},{"lineNumber":30,"author":{"gitId":"ramapriyan912001"},"content":"import seedu.awe.testutil.ModelBuilder;","lastModifiedDate":"2021-10-27"},{"lineNumber":31,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":32,"author":{"gitId":"ramapriyan912001"},"content":"public class CalculatePaymentsCommandTest {","lastModifiedDate":"2021-10-27"},{"lineNumber":33,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":34,"author":{"gitId":"ramapriyan912001"},"content":"    private Model model \u003d new ModelBuilder().build();","lastModifiedDate":"2021-10-27"},{"lineNumber":35,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":36,"author":{"gitId":"ramapriyan912001"},"content":"    public void resetModel() {","lastModifiedDate":"2021-10-27"},{"lineNumber":37,"author":{"gitId":"ramapriyan912001"},"content":"        model \u003d new ModelBuilder().build();","lastModifiedDate":"2021-10-27"},{"lineNumber":38,"author":{"gitId":"ramapriyan912001"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":39,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":40,"author":{"gitId":"ramapriyan912001"},"content":"    @Test","lastModifiedDate":"2021-10-29"},{"lineNumber":41,"author":{"gitId":"ramapriyan912001"},"content":"    public void constructor_invalidInput_throwsNullPointerException() {","lastModifiedDate":"2021-10-29"},{"lineNumber":42,"author":{"gitId":"ramapriyan912001"},"content":"        assertThrows(NullPointerException.class, () -\u003e new CalculatePaymentsCommand(null));","lastModifiedDate":"2021-10-29"},{"lineNumber":43,"author":{"gitId":"ramapriyan912001"},"content":"    }","lastModifiedDate":"2021-10-29"},{"lineNumber":44,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":45,"author":{"gitId":"ramapriyan912001"},"content":"    @Test","lastModifiedDate":"2021-10-29"},{"lineNumber":46,"author":{"gitId":"ramapriyan912001"},"content":"    public void equals() {","lastModifiedDate":"2021-10-29"},{"lineNumber":47,"author":{"gitId":"ramapriyan912001"},"content":"        assertNotEquals(new CalculatePaymentsCommand(AMSTERDAM), new CalculatePaymentsCommand(BALI));","lastModifiedDate":"2021-10-29"},{"lineNumber":48,"author":{"gitId":"ramapriyan912001"},"content":"        assertNotEquals(new CalculatePaymentsCommand(BALI), null);","lastModifiedDate":"2021-10-29"},{"lineNumber":49,"author":{"gitId":"ramapriyan912001"},"content":"        assertNotEquals(new CalculatePaymentsCommand(AMSTERDAM_WITH_EXPENSES), new CalculatePaymentsCommand(BALI));","lastModifiedDate":"2021-10-29"},{"lineNumber":50,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":51,"author":{"gitId":"ramapriyan912001"},"content":"        assertEquals(new CalculatePaymentsCommand(BALI), new CalculatePaymentsCommand(BALI));","lastModifiedDate":"2021-10-29"},{"lineNumber":52,"author":{"gitId":"ramapriyan912001"},"content":"        assertEquals(new CalculatePaymentsCommand(BALI_WITH_EXPENSES), new CalculatePaymentsCommand(BALI));","lastModifiedDate":"2021-10-29"},{"lineNumber":53,"author":{"gitId":"ramapriyan912001"},"content":"        CalculatePaymentsCommand calculatePaymentsCommand \u003d new CalculatePaymentsCommand(BALI_WITH_EXPENSES);","lastModifiedDate":"2021-10-31"},{"lineNumber":54,"author":{"gitId":"ramapriyan912001"},"content":"        assertEquals(calculatePaymentsCommand, calculatePaymentsCommand);","lastModifiedDate":"2021-10-31"},{"lineNumber":55,"author":{"gitId":"ramapriyan912001"},"content":"    }","lastModifiedDate":"2021-10-29"},{"lineNumber":56,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":57,"author":{"gitId":"ramapriyan912001"},"content":"    @Test","lastModifiedDate":"2021-10-29"},{"lineNumber":58,"author":{"gitId":"ramapriyan912001"},"content":"    public void execute_groupNotInModel_throwsCommandException() {","lastModifiedDate":"2021-10-29"},{"lineNumber":59,"author":{"gitId":"ramapriyan912001"},"content":"        resetModel();","lastModifiedDate":"2021-10-29"},{"lineNumber":60,"author":{"gitId":"ramapriyan912001"},"content":"        // COLOMBO_WITH_EXPENSES is not in model","lastModifiedDate":"2021-10-29"},{"lineNumber":61,"author":{"gitId":"ramapriyan912001"},"content":"        CalculatePaymentsCommand calculatePaymentsCommand \u003d new CalculatePaymentsCommand(COLOMBO_WITH_EXPENSES);","lastModifiedDate":"2021-10-29"},{"lineNumber":62,"author":{"gitId":"ramapriyan912001"},"content":"        assertCommandFailure(calculatePaymentsCommand, model, MESSAGE_CALCULATEPAYMENTSCOMMAND_GROUP_NOT_FOUND);","lastModifiedDate":"2021-10-29"},{"lineNumber":63,"author":{"gitId":"ramapriyan912001"},"content":"    }","lastModifiedDate":"2021-10-29"},{"lineNumber":64,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":65,"author":{"gitId":"ramapriyan912001"},"content":"    @Test","lastModifiedDate":"2021-10-29"},{"lineNumber":66,"author":{"gitId":"ramapriyan912001"},"content":"    public void execute_nullModel_throwsCommandException() {","lastModifiedDate":"2021-10-29"},{"lineNumber":67,"author":{"gitId":"ramapriyan912001"},"content":"        resetModel();","lastModifiedDate":"2021-10-29"},{"lineNumber":68,"author":{"gitId":"ramapriyan912001"},"content":"        // COLOMBO_WITH_EXPENSES is not in model","lastModifiedDate":"2021-10-29"},{"lineNumber":69,"author":{"gitId":"ramapriyan912001"},"content":"        CalculatePaymentsCommand calculatePaymentsCommand \u003d new CalculatePaymentsCommand(COLOMBO_WITH_EXPENSES);","lastModifiedDate":"2021-10-29"},{"lineNumber":70,"author":{"gitId":"ramapriyan912001"},"content":"        assertThrows(NullPointerException.class, () -\u003e calculatePaymentsCommand.execute(null));","lastModifiedDate":"2021-10-29"},{"lineNumber":71,"author":{"gitId":"ramapriyan912001"},"content":"    }","lastModifiedDate":"2021-10-29"},{"lineNumber":72,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":73,"author":{"gitId":"ramapriyan912001"},"content":"    @Test","lastModifiedDate":"2021-10-29"},{"lineNumber":74,"author":{"gitId":"ramapriyan912001"},"content":"    public void execute_validInput_returnsCommandResult() {","lastModifiedDate":"2021-10-29"},{"lineNumber":75,"author":{"gitId":"ramapriyan912001"},"content":"        resetModel();","lastModifiedDate":"2021-10-29"},{"lineNumber":76,"author":{"gitId":"ramapriyan912001"},"content":"        // More deficit members than surplus members, multiple expenses","lastModifiedDate":"2021-10-31"},{"lineNumber":77,"author":{"gitId":"ramapriyan912001"},"content":"        CommandResult expectedCommandResultBali \u003d new CommandResult(MESSAGE_CALCULATEPAYMENTSCOMMAND_SUCCESS, false,","lastModifiedDate":"2021-10-29"},{"lineNumber":78,"author":{"gitId":"ramapriyan912001"},"content":"                false, false, false, false, false, true);","lastModifiedDate":"2021-10-29"},{"lineNumber":79,"author":{"gitId":"ramapriyan912001"},"content":"        assertCommandSuccess(new CalculatePaymentsCommand(BALI_WITH_EXPENSES), model, expectedCommandResultBali, model);","lastModifiedDate":"2021-10-29"},{"lineNumber":80,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":81,"author":{"gitId":"ramapriyan912001"},"content":"        // More deficit members than surplus members, one expense.","lastModifiedDate":"2021-10-31"},{"lineNumber":82,"author":{"gitId":"ramapriyan912001"},"content":"        CommandResult expectedCommandResultAmsterdam \u003d new CommandResult(MESSAGE_CALCULATEPAYMENTSCOMMAND_SUCCESS,","lastModifiedDate":"2021-10-29"},{"lineNumber":83,"author":{"gitId":"ramapriyan912001"},"content":"                false, false, false, false, false, false, true);","lastModifiedDate":"2021-10-29"},{"lineNumber":84,"author":{"gitId":"ramapriyan912001"},"content":"        assertCommandSuccess(new CalculatePaymentsCommand(AMSTERDAM_WITH_EXPENSES), model,","lastModifiedDate":"2021-10-29"},{"lineNumber":85,"author":{"gitId":"ramapriyan912001"},"content":"                expectedCommandResultAmsterdam, model);","lastModifiedDate":"2021-10-29"},{"lineNumber":86,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":87,"author":{"gitId":"ramapriyan912001"},"content":"        // More surplus members than deficit members","lastModifiedDate":"2021-10-31"},{"lineNumber":88,"author":{"gitId":"ramapriyan912001"},"content":"        CommandResult expectedCommandResultMalibu \u003d new CommandResult(MESSAGE_CALCULATEPAYMENTSCOMMAND_SUCCESS,","lastModifiedDate":"2021-10-31"},{"lineNumber":89,"author":{"gitId":"ramapriyan912001"},"content":"                false, false, false, false, false, false, true);","lastModifiedDate":"2021-10-31"},{"lineNumber":90,"author":{"gitId":"ramapriyan912001"},"content":"        assertCommandSuccess(new CalculatePaymentsCommand(MALIBU), model,","lastModifiedDate":"2021-10-31"},{"lineNumber":91,"author":{"gitId":"ramapriyan912001"},"content":"                expectedCommandResultMalibu, model);","lastModifiedDate":"2021-10-31"},{"lineNumber":92,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":93,"author":{"gitId":"ramapriyan912001"},"content":"        // Pair of members with equal deficit and surplus","lastModifiedDate":"2021-10-31"},{"lineNumber":94,"author":{"gitId":"ramapriyan912001"},"content":"        CommandResult expectedCommandResultSantiago \u003d new CommandResult(MESSAGE_CALCULATEPAYMENTSCOMMAND_SUCCESS,","lastModifiedDate":"2021-10-31"},{"lineNumber":95,"author":{"gitId":"ramapriyan912001"},"content":"                false, false, false, false, false, false, true);","lastModifiedDate":"2021-10-31"},{"lineNumber":96,"author":{"gitId":"ramapriyan912001"},"content":"        assertCommandSuccess(new CalculatePaymentsCommand(SANTIAGO_WITH_EXPENSES), model,","lastModifiedDate":"2021-10-31"},{"lineNumber":97,"author":{"gitId":"ramapriyan912001"},"content":"                expectedCommandResultSantiago, model);","lastModifiedDate":"2021-10-31"},{"lineNumber":98,"author":{"gitId":"ramapriyan912001"},"content":"    }","lastModifiedDate":"2021-10-29"},{"lineNumber":99,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":100,"author":{"gitId":"ramapriyan912001"},"content":"    @Test","lastModifiedDate":"2021-10-29"},{"lineNumber":101,"author":{"gitId":"ramapriyan912001"},"content":"    public void getPayments_groupExpenseSumNotZero_throwsException() {","lastModifiedDate":"2021-10-29"},{"lineNumber":102,"author":{"gitId":"ramapriyan912001"},"content":"        resetModel();","lastModifiedDate":"2021-10-29"},{"lineNumber":103,"author":{"gitId":"ramapriyan912001"},"content":"        assertCommandFailure(new CalculatePaymentsCommand(RIO_WITH_EXPENSES_INVALID), model,","lastModifiedDate":"2021-10-29"},{"lineNumber":104,"author":{"gitId":"ramapriyan912001"},"content":"                MESSAGE_CALCULATEPAYMENTSCOMMAND_PAYMENT_DISCREPANCY);","lastModifiedDate":"2021-10-29"},{"lineNumber":105,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":106,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":107,"author":{"gitId":"ramapriyan912001"},"content":"        assertCommandFailure(new CalculatePaymentsCommand(PERU_WITH_EXPENSES_INVALID), model,","lastModifiedDate":"2021-10-29"},{"lineNumber":108,"author":{"gitId":"ramapriyan912001"},"content":"                MESSAGE_CALCULATEPAYMENTSCOMMAND_PAYMENT_DISCREPANCY);","lastModifiedDate":"2021-10-29"},{"lineNumber":109,"author":{"gitId":"ramapriyan912001"},"content":"    }","lastModifiedDate":"2021-10-29"},{"lineNumber":110,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":111,"author":{"gitId":"ramapriyan912001"},"content":"    @Test","lastModifiedDate":"2021-10-29"},{"lineNumber":112,"author":{"gitId":"ramapriyan912001"},"content":"    public void execute_emptyGroup_returnsCommandResult() throws CommandException {","lastModifiedDate":"2021-10-29"},{"lineNumber":113,"author":{"gitId":"ramapriyan912001"},"content":"        resetModel();","lastModifiedDate":"2021-10-29"},{"lineNumber":114,"author":{"gitId":"ramapriyan912001"},"content":"        CommandResult expectedCommandResultIndia \u003d new CommandResult(MESSAGE_CALCULATEPAYMENTSCOMMAND_PAYMENTS_EMPTY,","lastModifiedDate":"2021-10-29"},{"lineNumber":115,"author":{"gitId":"ramapriyan912001"},"content":"                false, false, false, false, false, false, true);","lastModifiedDate":"2021-10-29"},{"lineNumber":116,"author":{"gitId":"ramapriyan912001"},"content":"        assertCommandSuccess(new CalculatePaymentsCommand(INDIA), model, expectedCommandResultIndia, model);","lastModifiedDate":"2021-10-29"},{"lineNumber":117,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":118,"author":{"gitId":"ramapriyan912001"},"content":"        resetModel();","lastModifiedDate":"2021-10-29"},{"lineNumber":119,"author":{"gitId":"ramapriyan912001"},"content":"        CommandResult expectedCommandResultChina \u003d new CommandResult(MESSAGE_CALCULATEPAYMENTSCOMMAND_PAYMENTS_EMPTY,","lastModifiedDate":"2021-10-29"},{"lineNumber":120,"author":{"gitId":"ramapriyan912001"},"content":"                false, false, false, false, false, false, true);","lastModifiedDate":"2021-10-29"},{"lineNumber":121,"author":{"gitId":"ramapriyan912001"},"content":"        assertCommandSuccess(new CalculatePaymentsCommand(CHINA), model,","lastModifiedDate":"2021-10-29"},{"lineNumber":122,"author":{"gitId":"ramapriyan912001"},"content":"                expectedCommandResultChina, model);","lastModifiedDate":"2021-10-29"},{"lineNumber":123,"author":{"gitId":"ramapriyan912001"},"content":"    }","lastModifiedDate":"2021-10-29"},{"lineNumber":124,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":125,"author":{"gitId":"ramapriyan912001"},"content":"    @Test","lastModifiedDate":"2021-10-29"},{"lineNumber":126,"author":{"gitId":"ramapriyan912001"},"content":"    public void getPayments_validGroupExpenses_returnsPaymentList() throws CommandException {","lastModifiedDate":"2021-10-29"},{"lineNumber":127,"author":{"gitId":"ramapriyan912001"},"content":"        resetModel();","lastModifiedDate":"2021-10-29"},{"lineNumber":128,"author":{"gitId":"marcuspeh"},"content":"        assertEquals(BALI_WITH_EXPENSES_PAYMENTS, new CalculatePaymentsCommand(BALI_WITH_EXPENSES)","lastModifiedDate":"2021-11-01"},{"lineNumber":129,"author":{"gitId":"marcuspeh"},"content":"                .getPayments(BALI_WITH_EXPENSES));","lastModifiedDate":"2021-11-01"},{"lineNumber":130,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":131,"author":{"gitId":"marcuspeh"},"content":"        assertEquals(AMSTERDAM_WITH_EXPENSES_PAYMENTS, new CalculatePaymentsCommand(AMSTERDAM_WITH_EXPENSES)","lastModifiedDate":"2021-11-01"},{"lineNumber":132,"author":{"gitId":"marcuspeh"},"content":"                .getPayments(AMSTERDAM_WITH_EXPENSES));","lastModifiedDate":"2021-11-01"},{"lineNumber":133,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":134,"author":{"gitId":"ramapriyan912001"},"content":"        assertNotEquals(BALI_WITH_EXPENSES_PAYMENTS, new CalculatePaymentsCommand(AMSTERDAM_WITH_EXPENSES)","lastModifiedDate":"2021-10-29"},{"lineNumber":135,"author":{"gitId":"ramapriyan912001"},"content":"                .getPayments(AMSTERDAM_WITH_EXPENSES));","lastModifiedDate":"2021-10-29"},{"lineNumber":136,"author":{"gitId":"ramapriyan912001"},"content":"    }","lastModifiedDate":"2021-10-29"},{"lineNumber":137,"author":{"gitId":"ramapriyan912001"},"content":"}","lastModifiedDate":"2021-10-27"}],"authorContributionMap":{"marcuspeh":4,"ramapriyan912001":133}},{"path":"src/test/java/seedu/awe/logic/commands/ClearAllDataCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"ramapriyan912001"},"content":"package seedu.awe.logic.commands;","lastModifiedDate":"2021-10-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":3,"author":{"gitId":"ramapriyan912001"},"content":"import static seedu.awe.commons.core.Messages.MESSAGE_CLEARALLDATACOMMAND_SUCCESS;","lastModifiedDate":"2021-10-30"},{"lineNumber":4,"author":{"gitId":"ramapriyan912001"},"content":"import static seedu.awe.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2021-10-05"},{"lineNumber":5,"author":{"gitId":"ramapriyan912001"},"content":"import static seedu.awe.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2021-10-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":9,"author":{"gitId":"ramapriyan912001"},"content":"import seedu.awe.model.AddressBook;","lastModifiedDate":"2021-10-05"},{"lineNumber":10,"author":{"gitId":"ramapriyan912001"},"content":"import seedu.awe.model.Model;","lastModifiedDate":"2021-10-05"},{"lineNumber":11,"author":{"gitId":"ramapriyan912001"},"content":"import seedu.awe.model.ModelManager;","lastModifiedDate":"2021-10-05"},{"lineNumber":12,"author":{"gitId":"ramapriyan912001"},"content":"import seedu.awe.model.UserPrefs;","lastModifiedDate":"2021-10-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":14,"author":{"gitId":"ramapriyan912001"},"content":"public class ClearAllDataCommandTest {","lastModifiedDate":"2021-10-30"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void execute_emptyAddressBook_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        Model model \u003d new ModelManager();","lastModifiedDate":"2017-06-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager();","lastModifiedDate":"2018-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":21,"author":{"gitId":"marcuspeh"},"content":"        CommandResult commandResult \u003d new CommandResult(MESSAGE_CLEARALLDATACOMMAND_SUCCESS,","lastModifiedDate":"2021-11-01"},{"lineNumber":22,"author":{"gitId":"marcuspeh"},"content":"                false, false, false, true, false, false, false);","lastModifiedDate":"2021-11-01"},{"lineNumber":23,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":24,"author":{"gitId":"marcuspeh"},"content":"        assertCommandSuccess(new ClearAllDataCommand(), model, commandResult, expectedModel);","lastModifiedDate":"2021-11-01"},{"lineNumber":25,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public void execute_nonEmptyAddressBook_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2017-07-19"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2018-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        expectedModel.setAddressBook(new AddressBook());","lastModifiedDate":"2018-11-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":34,"author":{"gitId":"marcuspeh"},"content":"        CommandResult commandResult \u003d new CommandResult(MESSAGE_CLEARALLDATACOMMAND_SUCCESS,","lastModifiedDate":"2021-11-01"},{"lineNumber":35,"author":{"gitId":"marcuspeh"},"content":"                false, false, false, true, false, false, false);","lastModifiedDate":"2021-11-01"},{"lineNumber":36,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":37,"author":{"gitId":"marcuspeh"},"content":"        assertCommandSuccess(new ClearAllDataCommand(), model, commandResult, expectedModel);","lastModifiedDate":"2021-11-01"},{"lineNumber":38,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-08"}],"authorContributionMap":{"marcuspeh":10,"ramapriyan912001":9,"-":22}},{"path":"src/test/java/seedu/awe/logic/commands/CommandResultTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"ramapriyan912001"},"content":"package seedu.awe.logic.commands;","lastModifiedDate":"2021-10-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class CommandResultTest {","lastModifiedDate":"2018-12-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-12-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-12-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        CommandResult commandResult \u003d new CommandResult(\"feedback\");","lastModifiedDate":"2018-12-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2018-12-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        assertTrue(commandResult.equals(new CommandResult(\"feedback\")));","lastModifiedDate":"2018-12-09"},{"lineNumber":17,"author":{"gitId":"ramapriyan912001"},"content":"        assertTrue(commandResult.equals(new CommandResult(\"feedback\", false,","lastModifiedDate":"2021-10-21"},{"lineNumber":18,"author":{"gitId":"ramapriyan912001"},"content":"                false, false, false, false, false, false)));","lastModifiedDate":"2021-10-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2018-12-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        assertTrue(commandResult.equals(commandResult));","lastModifiedDate":"2018-12-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        assertFalse(commandResult.equals(null));","lastModifiedDate":"2018-12-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertFalse(commandResult.equals(0.5f));","lastModifiedDate":"2018-12-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        // different feedbackToUser value -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertFalse(commandResult.equals(new CommandResult(\"different\")));","lastModifiedDate":"2018-12-09"},{"lineNumber":31,"author":{"gitId":"marcuspeh"},"content":"    }","lastModifiedDate":"2021-11-01"},{"lineNumber":32,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":33,"author":{"gitId":"marcuspeh"},"content":"    @Test","lastModifiedDate":"2021-11-01"},{"lineNumber":34,"author":{"gitId":"marcuspeh"},"content":"    public void equals_withUiTest_failure() {","lastModifiedDate":"2021-11-01"},{"lineNumber":35,"author":{"gitId":"marcuspeh"},"content":"        CommandResult commandResult \u003d new CommandResult(\"feedback\");","lastModifiedDate":"2021-11-01"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        // different showHelp value -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":38,"author":{"gitId":"ramapriyan912001"},"content":"        assertFalse(commandResult.equals(new CommandResult(\"feedback\", true, false, false, false, false,","lastModifiedDate":"2021-10-21"},{"lineNumber":39,"author":{"gitId":"ramapriyan912001"},"content":"                false, false)));","lastModifiedDate":"2021-10-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        // different exit value -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":42,"author":{"gitId":"ramapriyan912001"},"content":"        assertFalse(commandResult.equals(new CommandResult(\"feedback\", false, true, false, false,","lastModifiedDate":"2021-10-21"},{"lineNumber":43,"author":{"gitId":"ramapriyan912001"},"content":"                false, false, false)));","lastModifiedDate":"2021-10-21"},{"lineNumber":44,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":45,"author":{"gitId":"marcuspeh"},"content":"        // different showGroup value -\u003e returns false","lastModifiedDate":"2021-09-30"},{"lineNumber":46,"author":{"gitId":"ramapriyan912001"},"content":"        assertFalse(commandResult.equals(new CommandResult(\"feedback\", false, false, true, false, false,","lastModifiedDate":"2021-10-21"},{"lineNumber":47,"author":{"gitId":"ramapriyan912001"},"content":"                false, false)));","lastModifiedDate":"2021-10-21"},{"lineNumber":48,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":49,"author":{"gitId":"marcuspeh"},"content":"        // different showContacts value -\u003e returns false","lastModifiedDate":"2021-09-30"},{"lineNumber":50,"author":{"gitId":"ramapriyan912001"},"content":"        assertFalse(commandResult.equals(new CommandResult(\"feedback\", false, false, false, true, false,","lastModifiedDate":"2021-10-21"},{"lineNumber":51,"author":{"gitId":"ramapriyan912001"},"content":"                false, false)));","lastModifiedDate":"2021-10-21"},{"lineNumber":52,"author":{"gitId":"Jingwencloud"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":53,"author":{"gitId":"Jingwencloud"},"content":"        // different showExpenses value -\u003e returns false","lastModifiedDate":"2021-10-21"},{"lineNumber":54,"author":{"gitId":"ramapriyan912001"},"content":"        assertFalse(commandResult.equals(new CommandResult(\"feedback\", false, false, false, false, true,","lastModifiedDate":"2021-10-21"},{"lineNumber":55,"author":{"gitId":"ramapriyan912001"},"content":"                false, false)));","lastModifiedDate":"2021-10-21"},{"lineNumber":56,"author":{"gitId":"Jingwencloud"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":57,"author":{"gitId":"Jingwencloud"},"content":"        // different showTransactionSummary value -\u003e returns false","lastModifiedDate":"2021-10-21"},{"lineNumber":58,"author":{"gitId":"ramapriyan912001"},"content":"        assertFalse(commandResult.equals(new CommandResult(\"feedback\", false, false, false, false, false,","lastModifiedDate":"2021-10-21"},{"lineNumber":59,"author":{"gitId":"ramapriyan912001"},"content":"                true, false)));","lastModifiedDate":"2021-10-21"},{"lineNumber":60,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":61,"author":{"gitId":"ramapriyan912001"},"content":"        // different showPayments value -\u003e returns false","lastModifiedDate":"2021-10-21"},{"lineNumber":62,"author":{"gitId":"ramapriyan912001"},"content":"        assertFalse(commandResult.equals(new CommandResult(\"feedback\", false, false, false, false, false,","lastModifiedDate":"2021-10-21"},{"lineNumber":63,"author":{"gitId":"ramapriyan912001"},"content":"                false, true)));","lastModifiedDate":"2021-10-21"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":66,"author":{"gitId":"marcuspeh"},"content":"    @Test","lastModifiedDate":"2021-11-01"},{"lineNumber":67,"author":{"gitId":"marcuspeh"},"content":"    public void equals_isShowHelp_success() {","lastModifiedDate":"2021-11-01"},{"lineNumber":68,"author":{"gitId":"marcuspeh"},"content":"        CommandResult commandResult \u003d new CommandResult(\"feedback\", true, false, false, false, false,","lastModifiedDate":"2021-11-01"},{"lineNumber":69,"author":{"gitId":"marcuspeh"},"content":"                false, false);","lastModifiedDate":"2021-11-01"},{"lineNumber":70,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":71,"author":{"gitId":"marcuspeh"},"content":"        // same showHelp value -\u003e returns true","lastModifiedDate":"2021-11-01"},{"lineNumber":72,"author":{"gitId":"marcuspeh"},"content":"        assertTrue(commandResult.equals(new CommandResult(\"feedback\", true, false, false, false, false,","lastModifiedDate":"2021-11-01"},{"lineNumber":73,"author":{"gitId":"marcuspeh"},"content":"                false, false)));","lastModifiedDate":"2021-11-01"},{"lineNumber":74,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":75,"author":{"gitId":"marcuspeh"},"content":"        // isShowHelp -\u003e return true","lastModifiedDate":"2021-11-01"},{"lineNumber":76,"author":{"gitId":"marcuspeh"},"content":"        assertTrue(commandResult.isShowHelp());","lastModifiedDate":"2021-11-01"},{"lineNumber":77,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":78,"author":{"gitId":"marcuspeh"},"content":"        // Everything else -\u003e return false","lastModifiedDate":"2021-11-01"},{"lineNumber":79,"author":{"gitId":"marcuspeh"},"content":"        assertFalse(commandResult.isExit());","lastModifiedDate":"2021-11-01"},{"lineNumber":80,"author":{"gitId":"marcuspeh"},"content":"        assertFalse(commandResult.isShowContacts());","lastModifiedDate":"2021-11-01"},{"lineNumber":81,"author":{"gitId":"marcuspeh"},"content":"        assertFalse(commandResult.isShowExpenses());","lastModifiedDate":"2021-11-01"},{"lineNumber":82,"author":{"gitId":"marcuspeh"},"content":"        assertFalse(commandResult.isShowGroups());","lastModifiedDate":"2021-11-01"},{"lineNumber":83,"author":{"gitId":"marcuspeh"},"content":"        assertFalse(commandResult.isShowPaymentsCommand());","lastModifiedDate":"2021-11-01"},{"lineNumber":84,"author":{"gitId":"marcuspeh"},"content":"        assertFalse(commandResult.isShowTransactionSummary());","lastModifiedDate":"2021-11-01"},{"lineNumber":85,"author":{"gitId":"marcuspeh"},"content":"    }","lastModifiedDate":"2021-11-01"},{"lineNumber":86,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":87,"author":{"gitId":"marcuspeh"},"content":"    @Test","lastModifiedDate":"2021-11-01"},{"lineNumber":88,"author":{"gitId":"marcuspeh"},"content":"    public void equals_isExit_success() {","lastModifiedDate":"2021-11-01"},{"lineNumber":89,"author":{"gitId":"marcuspeh"},"content":"        CommandResult commandResult \u003d new CommandResult(\"feedback\", false, true, false, false, false,","lastModifiedDate":"2021-11-01"},{"lineNumber":90,"author":{"gitId":"marcuspeh"},"content":"                false, false);","lastModifiedDate":"2021-11-01"},{"lineNumber":91,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":92,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":93,"author":{"gitId":"marcuspeh"},"content":"        // different exit value -\u003e returns false","lastModifiedDate":"2021-11-01"},{"lineNumber":94,"author":{"gitId":"marcuspeh"},"content":"        assertTrue(commandResult.equals(new CommandResult(\"feedback\", false, true, false, false,","lastModifiedDate":"2021-11-01"},{"lineNumber":95,"author":{"gitId":"marcuspeh"},"content":"                false, false, false)));","lastModifiedDate":"2021-11-01"},{"lineNumber":96,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":97,"author":{"gitId":"marcuspeh"},"content":"        // isExit -\u003e return true","lastModifiedDate":"2021-11-01"},{"lineNumber":98,"author":{"gitId":"marcuspeh"},"content":"        assertTrue(commandResult.isExit());","lastModifiedDate":"2021-11-01"},{"lineNumber":99,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":100,"author":{"gitId":"marcuspeh"},"content":"        // Everything else -\u003e return false","lastModifiedDate":"2021-11-01"},{"lineNumber":101,"author":{"gitId":"marcuspeh"},"content":"        assertFalse(commandResult.isShowHelp());","lastModifiedDate":"2021-11-01"},{"lineNumber":102,"author":{"gitId":"marcuspeh"},"content":"        assertFalse(commandResult.isShowContacts());","lastModifiedDate":"2021-11-01"},{"lineNumber":103,"author":{"gitId":"marcuspeh"},"content":"        assertFalse(commandResult.isShowExpenses());","lastModifiedDate":"2021-11-01"},{"lineNumber":104,"author":{"gitId":"marcuspeh"},"content":"        assertFalse(commandResult.isShowGroups());","lastModifiedDate":"2021-11-01"},{"lineNumber":105,"author":{"gitId":"marcuspeh"},"content":"        assertFalse(commandResult.isShowPaymentsCommand());","lastModifiedDate":"2021-11-01"},{"lineNumber":106,"author":{"gitId":"marcuspeh"},"content":"        assertFalse(commandResult.isShowTransactionSummary());","lastModifiedDate":"2021-11-01"},{"lineNumber":107,"author":{"gitId":"marcuspeh"},"content":"    }","lastModifiedDate":"2021-11-01"},{"lineNumber":108,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":109,"author":{"gitId":"marcuspeh"},"content":"    @Test","lastModifiedDate":"2021-11-01"},{"lineNumber":110,"author":{"gitId":"marcuspeh"},"content":"    public void equals_isShowGroup_success() {","lastModifiedDate":"2021-11-01"},{"lineNumber":111,"author":{"gitId":"marcuspeh"},"content":"        CommandResult commandResult \u003d new CommandResult(\"feedback\", false, false, true, false, false,","lastModifiedDate":"2021-11-01"},{"lineNumber":112,"author":{"gitId":"marcuspeh"},"content":"                false, false);","lastModifiedDate":"2021-11-01"},{"lineNumber":113,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":114,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":115,"author":{"gitId":"marcuspeh"},"content":"        // different showGroup value -\u003e returns false","lastModifiedDate":"2021-11-01"},{"lineNumber":116,"author":{"gitId":"marcuspeh"},"content":"        assertTrue(commandResult.equals(new CommandResult(\"feedback\", false, false, true, false, false,","lastModifiedDate":"2021-11-01"},{"lineNumber":117,"author":{"gitId":"marcuspeh"},"content":"                false, false)));","lastModifiedDate":"2021-11-01"},{"lineNumber":118,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":119,"author":{"gitId":"marcuspeh"},"content":"        // isShowGroup -\u003e return true","lastModifiedDate":"2021-11-01"},{"lineNumber":120,"author":{"gitId":"marcuspeh"},"content":"        assertTrue(commandResult.isShowGroups());","lastModifiedDate":"2021-11-01"},{"lineNumber":121,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":122,"author":{"gitId":"marcuspeh"},"content":"        // Everything else -\u003e return false","lastModifiedDate":"2021-11-01"},{"lineNumber":123,"author":{"gitId":"marcuspeh"},"content":"        assertFalse(commandResult.isShowHelp());","lastModifiedDate":"2021-11-01"},{"lineNumber":124,"author":{"gitId":"marcuspeh"},"content":"        assertFalse(commandResult.isShowContacts());","lastModifiedDate":"2021-11-01"},{"lineNumber":125,"author":{"gitId":"marcuspeh"},"content":"        assertFalse(commandResult.isShowExpenses());","lastModifiedDate":"2021-11-01"},{"lineNumber":126,"author":{"gitId":"marcuspeh"},"content":"        assertFalse(commandResult.isExit());","lastModifiedDate":"2021-11-01"},{"lineNumber":127,"author":{"gitId":"marcuspeh"},"content":"        assertFalse(commandResult.isShowPaymentsCommand());","lastModifiedDate":"2021-11-01"},{"lineNumber":128,"author":{"gitId":"marcuspeh"},"content":"        assertFalse(commandResult.isShowTransactionSummary());","lastModifiedDate":"2021-11-01"},{"lineNumber":129,"author":{"gitId":"marcuspeh"},"content":"    }","lastModifiedDate":"2021-11-01"},{"lineNumber":130,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":131,"author":{"gitId":"marcuspeh"},"content":"    @Test","lastModifiedDate":"2021-11-01"},{"lineNumber":132,"author":{"gitId":"marcuspeh"},"content":"    public void equals_isShowContact_success() {","lastModifiedDate":"2021-11-01"},{"lineNumber":133,"author":{"gitId":"marcuspeh"},"content":"        CommandResult commandResult \u003d new CommandResult(\"feedback\", false, false, false, true, false,","lastModifiedDate":"2021-11-01"},{"lineNumber":134,"author":{"gitId":"marcuspeh"},"content":"                false, false);","lastModifiedDate":"2021-11-01"},{"lineNumber":135,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":136,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":137,"author":{"gitId":"marcuspeh"},"content":"        // different showContacts value -\u003e returns false","lastModifiedDate":"2021-11-01"},{"lineNumber":138,"author":{"gitId":"marcuspeh"},"content":"        assertTrue(commandResult.equals(new CommandResult(\"feedback\", false, false, false, true, false,","lastModifiedDate":"2021-11-01"},{"lineNumber":139,"author":{"gitId":"marcuspeh"},"content":"                false, false)));","lastModifiedDate":"2021-11-01"},{"lineNumber":140,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":141,"author":{"gitId":"marcuspeh"},"content":"        // isShowContact -\u003e return true","lastModifiedDate":"2021-11-01"},{"lineNumber":142,"author":{"gitId":"marcuspeh"},"content":"        assertTrue(commandResult.isShowContacts());","lastModifiedDate":"2021-11-01"},{"lineNumber":143,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":144,"author":{"gitId":"marcuspeh"},"content":"        // Everything else -\u003e return false","lastModifiedDate":"2021-11-01"},{"lineNumber":145,"author":{"gitId":"marcuspeh"},"content":"        assertFalse(commandResult.isShowHelp());","lastModifiedDate":"2021-11-01"},{"lineNumber":146,"author":{"gitId":"marcuspeh"},"content":"        assertFalse(commandResult.isExit());","lastModifiedDate":"2021-11-01"},{"lineNumber":147,"author":{"gitId":"marcuspeh"},"content":"        assertFalse(commandResult.isShowExpenses());","lastModifiedDate":"2021-11-01"},{"lineNumber":148,"author":{"gitId":"marcuspeh"},"content":"        assertFalse(commandResult.isShowGroups());","lastModifiedDate":"2021-11-01"},{"lineNumber":149,"author":{"gitId":"marcuspeh"},"content":"        assertFalse(commandResult.isShowPaymentsCommand());","lastModifiedDate":"2021-11-01"},{"lineNumber":150,"author":{"gitId":"marcuspeh"},"content":"        assertFalse(commandResult.isShowTransactionSummary());","lastModifiedDate":"2021-11-01"},{"lineNumber":151,"author":{"gitId":"marcuspeh"},"content":"    }","lastModifiedDate":"2021-11-01"},{"lineNumber":152,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":153,"author":{"gitId":"marcuspeh"},"content":"    @Test","lastModifiedDate":"2021-11-01"},{"lineNumber":154,"author":{"gitId":"marcuspeh"},"content":"    public void equals_isShowExpense_success() {","lastModifiedDate":"2021-11-01"},{"lineNumber":155,"author":{"gitId":"marcuspeh"},"content":"        CommandResult commandResult \u003d new CommandResult(\"feedback\", false, false, false, false, true,","lastModifiedDate":"2021-11-01"},{"lineNumber":156,"author":{"gitId":"marcuspeh"},"content":"                false, false);","lastModifiedDate":"2021-11-01"},{"lineNumber":157,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":158,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":159,"author":{"gitId":"marcuspeh"},"content":"        // different showExpenses value -\u003e returns false","lastModifiedDate":"2021-11-01"},{"lineNumber":160,"author":{"gitId":"marcuspeh"},"content":"        assertTrue(commandResult.equals(new CommandResult(\"feedback\", false, false, false, false, true,","lastModifiedDate":"2021-11-01"},{"lineNumber":161,"author":{"gitId":"marcuspeh"},"content":"                false, false)));","lastModifiedDate":"2021-11-01"},{"lineNumber":162,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":163,"author":{"gitId":"marcuspeh"},"content":"        // isShowExpense -\u003e return true","lastModifiedDate":"2021-11-01"},{"lineNumber":164,"author":{"gitId":"marcuspeh"},"content":"        assertTrue(commandResult.isShowExpenses());","lastModifiedDate":"2021-11-01"},{"lineNumber":165,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":166,"author":{"gitId":"marcuspeh"},"content":"        // Everything else -\u003e return false","lastModifiedDate":"2021-11-01"},{"lineNumber":167,"author":{"gitId":"marcuspeh"},"content":"        assertFalse(commandResult.isShowHelp());","lastModifiedDate":"2021-11-01"},{"lineNumber":168,"author":{"gitId":"marcuspeh"},"content":"        assertFalse(commandResult.isShowContacts());","lastModifiedDate":"2021-11-01"},{"lineNumber":169,"author":{"gitId":"marcuspeh"},"content":"        assertFalse(commandResult.isExit());","lastModifiedDate":"2021-11-01"},{"lineNumber":170,"author":{"gitId":"marcuspeh"},"content":"        assertFalse(commandResult.isShowGroups());","lastModifiedDate":"2021-11-01"},{"lineNumber":171,"author":{"gitId":"marcuspeh"},"content":"        assertFalse(commandResult.isShowPaymentsCommand());","lastModifiedDate":"2021-11-01"},{"lineNumber":172,"author":{"gitId":"marcuspeh"},"content":"        assertFalse(commandResult.isShowTransactionSummary());","lastModifiedDate":"2021-11-01"},{"lineNumber":173,"author":{"gitId":"marcuspeh"},"content":"    }","lastModifiedDate":"2021-11-01"},{"lineNumber":174,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":175,"author":{"gitId":"marcuspeh"},"content":"    @Test","lastModifiedDate":"2021-11-01"},{"lineNumber":176,"author":{"gitId":"marcuspeh"},"content":"    public void equals_isShowTransaction_success() {","lastModifiedDate":"2021-11-01"},{"lineNumber":177,"author":{"gitId":"marcuspeh"},"content":"        CommandResult commandResult \u003d new CommandResult(\"feedback\", false, false, false, false, false,","lastModifiedDate":"2021-11-01"},{"lineNumber":178,"author":{"gitId":"marcuspeh"},"content":"                true, false);","lastModifiedDate":"2021-11-01"},{"lineNumber":179,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":180,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":181,"author":{"gitId":"marcuspeh"},"content":"        // different showTransactionSummary value -\u003e returns false","lastModifiedDate":"2021-11-01"},{"lineNumber":182,"author":{"gitId":"marcuspeh"},"content":"        assertTrue(commandResult.equals(new CommandResult(\"feedback\", false, false, false, false, false,","lastModifiedDate":"2021-11-01"},{"lineNumber":183,"author":{"gitId":"marcuspeh"},"content":"                true, false)));","lastModifiedDate":"2021-11-01"},{"lineNumber":184,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":185,"author":{"gitId":"marcuspeh"},"content":"        // isShowTransaction -\u003e return true","lastModifiedDate":"2021-11-01"},{"lineNumber":186,"author":{"gitId":"marcuspeh"},"content":"        assertTrue(commandResult.isShowTransactionSummary());","lastModifiedDate":"2021-11-01"},{"lineNumber":187,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":188,"author":{"gitId":"marcuspeh"},"content":"        // Everything else -\u003e return false","lastModifiedDate":"2021-11-01"},{"lineNumber":189,"author":{"gitId":"marcuspeh"},"content":"        assertFalse(commandResult.isShowHelp());","lastModifiedDate":"2021-11-01"},{"lineNumber":190,"author":{"gitId":"marcuspeh"},"content":"        assertFalse(commandResult.isShowContacts());","lastModifiedDate":"2021-11-01"},{"lineNumber":191,"author":{"gitId":"marcuspeh"},"content":"        assertFalse(commandResult.isShowExpenses());","lastModifiedDate":"2021-11-01"},{"lineNumber":192,"author":{"gitId":"marcuspeh"},"content":"        assertFalse(commandResult.isShowGroups());","lastModifiedDate":"2021-11-01"},{"lineNumber":193,"author":{"gitId":"marcuspeh"},"content":"        assertFalse(commandResult.isShowPaymentsCommand());","lastModifiedDate":"2021-11-01"},{"lineNumber":194,"author":{"gitId":"marcuspeh"},"content":"        assertFalse(commandResult.isExit());","lastModifiedDate":"2021-11-01"},{"lineNumber":195,"author":{"gitId":"marcuspeh"},"content":"    }","lastModifiedDate":"2021-11-01"},{"lineNumber":196,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":197,"author":{"gitId":"marcuspeh"},"content":"    @Test","lastModifiedDate":"2021-11-01"},{"lineNumber":198,"author":{"gitId":"marcuspeh"},"content":"    public void equals_isShowPayments_success() {","lastModifiedDate":"2021-11-01"},{"lineNumber":199,"author":{"gitId":"marcuspeh"},"content":"        CommandResult commandResult \u003d new CommandResult(\"feedback\", false, false, false, false, false,","lastModifiedDate":"2021-11-01"},{"lineNumber":200,"author":{"gitId":"marcuspeh"},"content":"                false, true);","lastModifiedDate":"2021-11-01"},{"lineNumber":201,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":202,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":203,"author":{"gitId":"marcuspeh"},"content":"        // different showPayments value -\u003e returns false","lastModifiedDate":"2021-11-01"},{"lineNumber":204,"author":{"gitId":"marcuspeh"},"content":"        assertTrue(commandResult.equals(new CommandResult(\"feedback\", false, false, false, false, false,","lastModifiedDate":"2021-11-01"},{"lineNumber":205,"author":{"gitId":"marcuspeh"},"content":"                false, true)));","lastModifiedDate":"2021-11-01"},{"lineNumber":206,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":207,"author":{"gitId":"marcuspeh"},"content":"        // isShowPayement -\u003e return true","lastModifiedDate":"2021-11-01"},{"lineNumber":208,"author":{"gitId":"marcuspeh"},"content":"        assertTrue(commandResult.isShowPaymentsCommand());","lastModifiedDate":"2021-11-01"},{"lineNumber":209,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":210,"author":{"gitId":"marcuspeh"},"content":"        // Everything else -\u003e return false","lastModifiedDate":"2021-11-01"},{"lineNumber":211,"author":{"gitId":"marcuspeh"},"content":"        assertFalse(commandResult.isShowHelp());","lastModifiedDate":"2021-11-01"},{"lineNumber":212,"author":{"gitId":"marcuspeh"},"content":"        assertFalse(commandResult.isShowContacts());","lastModifiedDate":"2021-11-01"},{"lineNumber":213,"author":{"gitId":"marcuspeh"},"content":"        assertFalse(commandResult.isShowExpenses());","lastModifiedDate":"2021-11-01"},{"lineNumber":214,"author":{"gitId":"marcuspeh"},"content":"        assertFalse(commandResult.isShowGroups());","lastModifiedDate":"2021-11-01"},{"lineNumber":215,"author":{"gitId":"marcuspeh"},"content":"        assertFalse(commandResult.isExit());","lastModifiedDate":"2021-11-01"},{"lineNumber":216,"author":{"gitId":"marcuspeh"},"content":"        assertFalse(commandResult.isShowTransactionSummary());","lastModifiedDate":"2021-11-01"},{"lineNumber":217,"author":{"gitId":"marcuspeh"},"content":"    }","lastModifiedDate":"2021-11-01"},{"lineNumber":218,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":219,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-12-09"},{"lineNumber":220,"author":{"gitId":"-"},"content":"    public void hashcode() {","lastModifiedDate":"2018-12-09"},{"lineNumber":221,"author":{"gitId":"-"},"content":"        CommandResult commandResult \u003d new CommandResult(\"feedback\");","lastModifiedDate":"2018-12-09"},{"lineNumber":222,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":223,"author":{"gitId":"-"},"content":"        // same values -\u003e returns same hashcode","lastModifiedDate":"2018-12-09"},{"lineNumber":224,"author":{"gitId":"-"},"content":"        assertEquals(commandResult.hashCode(), new CommandResult(\"feedback\").hashCode());","lastModifiedDate":"2018-12-09"},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":226,"author":{"gitId":"-"},"content":"        // different feedbackToUser value -\u003e returns different hashcode","lastModifiedDate":"2018-12-09"},{"lineNumber":227,"author":{"gitId":"-"},"content":"        assertNotEquals(commandResult.hashCode(), new CommandResult(\"different\").hashCode());","lastModifiedDate":"2018-12-09"},{"lineNumber":228,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":229,"author":{"gitId":"-"},"content":"        // different showHelp value -\u003e returns different hashcode","lastModifiedDate":"2018-12-09"},{"lineNumber":230,"author":{"gitId":"Jingwencloud"},"content":"        assertNotEquals(commandResult.hashCode(), new CommandResult(\"feedback\", true, false,","lastModifiedDate":"2021-10-07"},{"lineNumber":231,"author":{"gitId":"ramapriyan912001"},"content":"                false, false, false, false, false).hashCode());","lastModifiedDate":"2021-10-21"},{"lineNumber":232,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":233,"author":{"gitId":"-"},"content":"        // different exit value -\u003e returns different hashcode","lastModifiedDate":"2018-12-09"},{"lineNumber":234,"author":{"gitId":"Jingwencloud"},"content":"        assertNotEquals(commandResult.hashCode(), new CommandResult(\"feedback\", false, true,","lastModifiedDate":"2021-10-07"},{"lineNumber":235,"author":{"gitId":"ramapriyan912001"},"content":"                false, false, false, false, false).hashCode());","lastModifiedDate":"2021-10-21"},{"lineNumber":236,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":237,"author":{"gitId":"marcuspeh"},"content":"        // different showGroup value -\u003e returns different hashcode","lastModifiedDate":"2021-09-30"},{"lineNumber":238,"author":{"gitId":"Jingwencloud"},"content":"        assertNotEquals(commandResult.hashCode(), new CommandResult(\"feedback\", false, false,","lastModifiedDate":"2021-10-07"},{"lineNumber":239,"author":{"gitId":"ramapriyan912001"},"content":"                true, false, false, false, false).hashCode());","lastModifiedDate":"2021-10-21"},{"lineNumber":240,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":241,"author":{"gitId":"marcuspeh"},"content":"        // different showContacts value -\u003e returns different hashcode","lastModifiedDate":"2021-09-30"},{"lineNumber":242,"author":{"gitId":"Jingwencloud"},"content":"        assertNotEquals(commandResult.hashCode(), new CommandResult(\"feedback\", false, false,","lastModifiedDate":"2021-10-07"},{"lineNumber":243,"author":{"gitId":"ramapriyan912001"},"content":"                false, true, false, false, false).hashCode());","lastModifiedDate":"2021-10-21"},{"lineNumber":244,"author":{"gitId":"Jingwencloud"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":245,"author":{"gitId":"Jingwencloud"},"content":"        // different showExpenses value -\u003e returns different hashcode","lastModifiedDate":"2021-10-06"},{"lineNumber":246,"author":{"gitId":"Jingwencloud"},"content":"        assertNotEquals(commandResult.hashCode(), new CommandResult(\"feedback\", false, false,","lastModifiedDate":"2021-10-07"},{"lineNumber":247,"author":{"gitId":"ramapriyan912001"},"content":"                false, false, true, false, false).hashCode());","lastModifiedDate":"2021-10-21"},{"lineNumber":248,"author":{"gitId":"Jingwencloud"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":249,"author":{"gitId":"Jingwencloud"},"content":"        // different showTransactionSummary value -\u003e returns different hashcode","lastModifiedDate":"2021-10-21"},{"lineNumber":250,"author":{"gitId":"Jingwencloud"},"content":"        assertNotEquals(commandResult.hashCode(), new CommandResult(\"feedback\", false, false,","lastModifiedDate":"2021-10-21"},{"lineNumber":251,"author":{"gitId":"ramapriyan912001"},"content":"            false, false, false, true, false).hashCode());","lastModifiedDate":"2021-10-21"},{"lineNumber":252,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":253,"author":{"gitId":"ramapriyan912001"},"content":"        // different showPayments value -\u003e returns different hashcode","lastModifiedDate":"2021-10-21"},{"lineNumber":254,"author":{"gitId":"ramapriyan912001"},"content":"        assertNotEquals(commandResult.hashCode(), new CommandResult(\"feedback\", false, false,","lastModifiedDate":"2021-10-21"},{"lineNumber":255,"author":{"gitId":"ramapriyan912001"},"content":"                false, false, false, false, true).hashCode());","lastModifiedDate":"2021-10-21"},{"lineNumber":256,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":257,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-12-09"}],"authorContributionMap":{"marcuspeh":166,"Jingwencloud":14,"ramapriyan912001":29,"-":48}},{"path":"src/test/java/seedu/awe/logic/commands/CommandTestUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"ramapriyan912001"},"content":"package seedu.awe.logic.commands;","lastModifiedDate":"2021-10-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"ramapriyan912001"},"content":"import static seedu.awe.logic.parser.CliSyntax.PREFIX_GROUP_NAME;","lastModifiedDate":"2021-10-05"},{"lineNumber":6,"author":{"gitId":"ramapriyan912001"},"content":"import static seedu.awe.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2021-10-05"},{"lineNumber":7,"author":{"gitId":"ramapriyan912001"},"content":"import static seedu.awe.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2021-10-05"},{"lineNumber":8,"author":{"gitId":"ramapriyan912001"},"content":"import static seedu.awe.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2021-10-05"},{"lineNumber":9,"author":{"gitId":"ramapriyan912001"},"content":"import static seedu.awe.testutil.Assert.assertThrows;","lastModifiedDate":"2021-10-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-06-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-07-20"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":15,"author":{"gitId":"ramapriyan912001"},"content":"import seedu.awe.commons.core.index.Index;","lastModifiedDate":"2021-10-05"},{"lineNumber":16,"author":{"gitId":"ramapriyan912001"},"content":"import seedu.awe.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-10-05"},{"lineNumber":17,"author":{"gitId":"ramapriyan912001"},"content":"import seedu.awe.model.AddressBook;","lastModifiedDate":"2021-10-05"},{"lineNumber":18,"author":{"gitId":"ramapriyan912001"},"content":"import seedu.awe.model.Model;","lastModifiedDate":"2021-10-05"},{"lineNumber":19,"author":{"gitId":"Jingwencloud"},"content":"import seedu.awe.model.expense.DescriptionContainsKeywordsPredicate;","lastModifiedDate":"2021-10-28"},{"lineNumber":20,"author":{"gitId":"Jingwencloud"},"content":"import seedu.awe.model.expense.Expense;","lastModifiedDate":"2021-10-28"},{"lineNumber":21,"author":{"gitId":"ramapriyan912001"},"content":"import seedu.awe.model.group.exceptions.DuplicateGroupException;","lastModifiedDate":"2021-10-05"},{"lineNumber":22,"author":{"gitId":"ramapriyan912001"},"content":"import seedu.awe.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2021-10-05"},{"lineNumber":23,"author":{"gitId":"ramapriyan912001"},"content":"import seedu.awe.model.person.Person;","lastModifiedDate":"2021-10-05"},{"lineNumber":24,"author":{"gitId":"ramapriyan912001"},"content":"import seedu.awe.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2021-10-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":" * Contains helper methods for testing commands.","lastModifiedDate":"2017-06-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"public class CommandTestUtil {","lastModifiedDate":"2017-06-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public static final String VALID_NAME_AMY \u003d \"Amy Bee\";","lastModifiedDate":"2017-07-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static final String VALID_NAME_BOB \u003d \"Bob Choo\";","lastModifiedDate":"2017-07-05"},{"lineNumber":33,"author":{"gitId":"chrus-chong"},"content":"    public static final String VALID_NAME_ALICE \u003d \"Alice Pauline\";","lastModifiedDate":"2021-10-06"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public static final String VALID_PHONE_AMY \u003d \"11111111\";","lastModifiedDate":"2017-07-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public static final String VALID_PHONE_BOB \u003d \"22222222\";","lastModifiedDate":"2017-07-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public static final String VALID_TAG_HUSBAND \u003d \"husband\";","lastModifiedDate":"2017-07-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static final String VALID_TAG_FRIEND \u003d \"friend\";","lastModifiedDate":"2017-07-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":39,"author":{"gitId":"ramapriyan912001"},"content":"    public static final String VALID_GROUPNAME_BALI \u003d \"Bali\";","lastModifiedDate":"2021-10-05"},{"lineNumber":40,"author":{"gitId":"ramapriyan912001"},"content":"    public static final String VALID_GROUPNAME_OSLO \u003d \"Oslo\";","lastModifiedDate":"2021-10-05"},{"lineNumber":41,"author":{"gitId":"ramapriyan912001"},"content":"    public static final String VALID_GROUP_TAG_FRIENDS \u003d \"friends\";","lastModifiedDate":"2021-10-05"},{"lineNumber":42,"author":{"gitId":"ramapriyan912001"},"content":"    public static final String VALID_GROUP_TAG_FAMILY \u003d \"family\";","lastModifiedDate":"2021-10-05"},{"lineNumber":43,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":44,"author":{"gitId":"Jingwencloud"},"content":"    public static final String VALID_DESCRIPTION_BUFFET \u003d \"Buffet\";","lastModifiedDate":"2021-10-13"},{"lineNumber":45,"author":{"gitId":"Jingwencloud"},"content":"    public static final String VALID_DESCRIPTION_SOUVENIRS \u003d \"Souvenirs\";","lastModifiedDate":"2021-10-13"},{"lineNumber":46,"author":{"gitId":"Jingwencloud"},"content":"    public static final String VALID_COST_BUFFET \u003d \"300\";","lastModifiedDate":"2021-10-13"},{"lineNumber":47,"author":{"gitId":"Jingwencloud"},"content":"    public static final String VALID_COST_SOUVENIRS \u003d \"200\";","lastModifiedDate":"2021-10-13"},{"lineNumber":48,"author":{"gitId":"Jingwencloud"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public static final String NAME_DESC_AMY \u003d \" \" + PREFIX_NAME + VALID_NAME_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public static final String NAME_DESC_BOB \u003d \" \" + PREFIX_NAME + VALID_NAME_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":51,"author":{"gitId":"chrus-chong"},"content":"    public static final String NAME_DESC_ALICE \u003d \" \" + PREFIX_NAME + VALID_NAME_ALICE;","lastModifiedDate":"2021-10-06"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public static final String PHONE_DESC_AMY \u003d \" \" + PREFIX_PHONE + VALID_PHONE_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public static final String PHONE_DESC_BOB \u003d \" \" + PREFIX_PHONE + VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public static final String TAG_DESC_FRIEND \u003d \" \" + PREFIX_TAG + VALID_TAG_FRIEND;","lastModifiedDate":"2017-07-05"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public static final String TAG_DESC_HUSBAND \u003d \" \" + PREFIX_TAG + VALID_TAG_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":57,"author":{"gitId":"ramapriyan912001"},"content":"    public static final String GROUPNAME_DESC_BALI \u003d \" \" + PREFIX_GROUP_NAME + VALID_GROUPNAME_BALI;","lastModifiedDate":"2021-10-05"},{"lineNumber":58,"author":{"gitId":"ramapriyan912001"},"content":"    public static final String GROUPNAME_DESC_OSLO \u003d \" \" + PREFIX_GROUP_NAME + VALID_GROUPNAME_OSLO;","lastModifiedDate":"2021-10-05"},{"lineNumber":59,"author":{"gitId":"ramapriyan912001"},"content":"    public static final String TAG_DESC_FRIENDS \u003d \" \" + PREFIX_TAG + VALID_GROUP_TAG_FRIENDS;","lastModifiedDate":"2021-10-05"},{"lineNumber":60,"author":{"gitId":"ramapriyan912001"},"content":"    public static final String TAG_DESC_FAMILY \u003d \" \" + PREFIX_TAG + VALID_GROUP_TAG_FAMILY;","lastModifiedDate":"2021-10-05"},{"lineNumber":61,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":62,"author":{"gitId":"ramapriyan912001"},"content":"    public static final String INVALID_NAME_JAMES \u003d \"James#\";","lastModifiedDate":"2021-10-09"},{"lineNumber":63,"author":{"gitId":"ramapriyan912001"},"content":"    public static final String INVALID_NAME_JOHN \u003d \"Jo\u0026hn*\";","lastModifiedDate":"2021-10-09"},{"lineNumber":64,"author":{"gitId":"ramapriyan912001"},"content":"    public static final String INVALID_NAME_GARY \u003d \"G(ary\u0026\";","lastModifiedDate":"2021-10-09"},{"lineNumber":65,"author":{"gitId":"ramapriyan912001"},"content":"    public static final String INVALID_NAME_DESC_ONE \u003d \" \"","lastModifiedDate":"2021-10-09"},{"lineNumber":66,"author":{"gitId":"ramapriyan912001"},"content":"            + PREFIX_NAME + INVALID_NAME_JAMES; // \u0027\u0026\u0027 not allowed in names","lastModifiedDate":"2021-10-09"},{"lineNumber":67,"author":{"gitId":"ramapriyan912001"},"content":"    public static final String INVALID_NAME_DESC_TWO \u003d \" \"","lastModifiedDate":"2021-10-09"},{"lineNumber":68,"author":{"gitId":"ramapriyan912001"},"content":"            + PREFIX_NAME + INVALID_NAME_JOHN; // \u0027\u0026\u0027 not allowed in names","lastModifiedDate":"2021-10-09"},{"lineNumber":69,"author":{"gitId":"ramapriyan912001"},"content":"    public static final String INVALID_NAME_DESC_THREE \u003d \" \" + PREFIX_NAME + \"G(ary\u0026\"; // \u0027\u0026\u0027 not allowed in names","lastModifiedDate":"2021-10-09"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public static final String INVALID_NAME_DESC \u003d \" \" + PREFIX_NAME + \"James\u0026\"; // \u0027\u0026\u0027 not allowed in names","lastModifiedDate":"2017-07-05"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public static final String INVALID_PHONE_DESC \u003d \" \" + PREFIX_PHONE + \"911a\"; // \u0027a\u0027 not allowed in phones","lastModifiedDate":"2017-07-05"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public static final String INVALID_TAG_DESC \u003d \" \" + PREFIX_TAG + \"hubby*\"; // \u0027*\u0027 not allowed in tags","lastModifiedDate":"2017-07-05"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":74,"author":{"gitId":"ramapriyan912001"},"content":"    public static final String INVALID_GROUP_NAME_DESC \u003d \" \" + PREFIX_GROUP_NAME + \"Bali\u0026\"; // \u0027\u0026\u0027 not allowed in names","lastModifiedDate":"2021-10-05"},{"lineNumber":75,"author":{"gitId":"ramapriyan912001"},"content":"    public static final String INVALID_GROUP_TAG_DESC \u003d \" \" + PREFIX_TAG + \"Family*\"; // \u0027*\u0027 not allowed in tags","lastModifiedDate":"2021-10-05"},{"lineNumber":76,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public static final String PREAMBLE_WHITESPACE \u003d \"\\t  \\r  \\n\";","lastModifiedDate":"2017-12-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public static final String PREAMBLE_NON_EMPTY \u003d \"NonEmptyPreamble\";","lastModifiedDate":"2017-12-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":80,"author":{"gitId":"marcuspeh"},"content":"    public static final EditContactCommand.EditPersonDescriptor DESC_AMY;","lastModifiedDate":"2021-10-11"},{"lineNumber":81,"author":{"gitId":"marcuspeh"},"content":"    public static final EditContactCommand.EditPersonDescriptor DESC_BOB;","lastModifiedDate":"2021-10-11"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    static {","lastModifiedDate":"2017-07-05"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        DESC_AMY \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_AMY)","lastModifiedDate":"2017-07-05"},{"lineNumber":85,"author":{"gitId":"marcuspeh"},"content":"                .withPhone(VALID_PHONE_AMY).withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2021-11-01"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        DESC_BOB \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB)","lastModifiedDate":"2017-07-05"},{"lineNumber":87,"author":{"gitId":"marcuspeh"},"content":"                .withPhone(VALID_PHONE_BOB).withTags(VALID_TAG_HUSBAND, VALID_TAG_FRIEND).build();","lastModifiedDate":"2021-11-01"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-05"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     * - the returned {@link CommandResult} matches {@code expectedCommandResult} \u003cbr\u003e","lastModifiedDate":"2018-12-09"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     * - the {@code actualModel} matches {@code expectedModel}","lastModifiedDate":"2019-01-25"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    public static void assertCommandSuccess(Command command, Model actualModel, CommandResult expectedCommandResult,","lastModifiedDate":"2019-01-25"},{"lineNumber":96,"author":{"gitId":"-"},"content":"            Model expectedModel) {","lastModifiedDate":"2019-01-25"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-08-15"},{"lineNumber":98,"author":{"gitId":"-"},"content":"            CommandResult result \u003d command.execute(actualModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":99,"author":{"gitId":"-"},"content":"            assertEquals(expectedCommandResult, result);","lastModifiedDate":"2018-12-09"},{"lineNumber":100,"author":{"gitId":"-"},"content":"            assertEquals(expectedModel, actualModel);","lastModifiedDate":"2017-06-05"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        } catch (CommandException ce) {","lastModifiedDate":"2017-08-15"},{"lineNumber":102,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"Execution of command should not fail.\", ce);","lastModifiedDate":"2017-08-15"},{"lineNumber":103,"author":{"gitId":"ramapriyan912001"},"content":"        } catch (DuplicateGroupException dge) {","lastModifiedDate":"2021-10-04"},{"lineNumber":104,"author":{"gitId":"ramapriyan912001"},"content":"            throw new AssertionError(\"Execution of command should not fail.\", dge);","lastModifiedDate":"2021-10-04"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-08-15"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":109,"author":{"gitId":"-"},"content":"     * Convenience wrapper to {@link #assertCommandSuccess(Command, Model, CommandResult, Model)}","lastModifiedDate":"2019-01-25"},{"lineNumber":110,"author":{"gitId":"-"},"content":"     * that takes a string {@code expectedMessage}.","lastModifiedDate":"2018-12-09"},{"lineNumber":111,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    public static void assertCommandSuccess(Command command, Model actualModel, String expectedMessage,","lastModifiedDate":"2019-01-25"},{"lineNumber":113,"author":{"gitId":"-"},"content":"            Model expectedModel) {","lastModifiedDate":"2019-01-25"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(expectedMessage);","lastModifiedDate":"2018-12-09"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, actualModel, expectedCommandResult, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":118,"author":{"gitId":"marcuspeh"},"content":"    /**","lastModifiedDate":"2021-09-30"},{"lineNumber":119,"author":{"gitId":"marcuspeh"},"content":"     * Convenience wrapper to {@link #assertCommandSuccess(Command, Model, CommandResult, Model)}","lastModifiedDate":"2021-09-30"},{"lineNumber":120,"author":{"gitId":"marcuspeh"},"content":"     * that takes a string {@code expectedMessage}.","lastModifiedDate":"2021-09-30"},{"lineNumber":121,"author":{"gitId":"marcuspeh"},"content":"     */","lastModifiedDate":"2021-09-30"},{"lineNumber":122,"author":{"gitId":"marcuspeh"},"content":"    public static void assertCommandSuccess(Command command, Model actualModel, String expectedMessage,","lastModifiedDate":"2021-09-30"},{"lineNumber":123,"author":{"gitId":"Jingwencloud"},"content":"                                            Model expectedModel, boolean showGroups, boolean showContacts,","lastModifiedDate":"2021-10-07"},{"lineNumber":124,"author":{"gitId":"ramapriyan912001"},"content":"                                            boolean showExpenses, boolean showTransactionSummary,","lastModifiedDate":"2021-10-21"},{"lineNumber":125,"author":{"gitId":"Jingwencloud"},"content":"                                            boolean showPayments) {","lastModifiedDate":"2021-10-28"},{"lineNumber":126,"author":{"gitId":"marcuspeh"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(expectedMessage, false,","lastModifiedDate":"2021-09-30"},{"lineNumber":127,"author":{"gitId":"Jingwencloud"},"content":"                false, showGroups, showContacts, showExpenses, showTransactionSummary, showPayments);","lastModifiedDate":"2021-10-28"},{"lineNumber":128,"author":{"gitId":"marcuspeh"},"content":"        assertCommandSuccess(command, actualModel, expectedCommandResult, expectedModel);","lastModifiedDate":"2021-09-30"},{"lineNumber":129,"author":{"gitId":"marcuspeh"},"content":"    }","lastModifiedDate":"2021-09-30"},{"lineNumber":130,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-09-30"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":132,"author":{"gitId":"-"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":133,"author":{"gitId":"-"},"content":"     * - a {@code CommandException} is thrown \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":134,"author":{"gitId":"-"},"content":"     * - the CommandException message matches {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":135,"author":{"gitId":"ramapriyan912001"},"content":"     * - the awe book, filtered person list and selected person in {@code actualModel} remain unchanged","lastModifiedDate":"2021-10-05"},{"lineNumber":136,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    public static void assertCommandFailure(Command command, Model actualModel, String expectedMessage) {","lastModifiedDate":"2019-01-25"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        // we are unable to defensively copy the model for comparison later, so we can","lastModifiedDate":"2017-06-05"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        // only do so by copying its components.","lastModifiedDate":"2017-06-05"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        AddressBook expectedAddressBook \u003d new AddressBook(actualModel.getAddressBook());","lastModifiedDate":"2017-06-05"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e expectedFilteredList \u003d new ArrayList\u003c\u003e(actualModel.getFilteredPersonList());","lastModifiedDate":"2018-01-10"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        assertThrows(CommandException.class, expectedMessage, () -\u003e command.execute(actualModel));","lastModifiedDate":"2019-05-03"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        assertEquals(expectedAddressBook, actualModel.getAddressBook());","lastModifiedDate":"2017-06-05"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        assertEquals(expectedFilteredList, actualModel.getFilteredPersonList());","lastModifiedDate":"2017-06-05"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-20"},{"lineNumber":148,"author":{"gitId":"-"},"content":"     * Updates {@code model}\u0027s filtered list to show only the person at the given {@code targetIndex} in the","lastModifiedDate":"2018-01-31"},{"lineNumber":149,"author":{"gitId":"ramapriyan912001"},"content":"     * {@code model}\u0027s awe book.","lastModifiedDate":"2021-10-05"},{"lineNumber":150,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-20"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    public static void showPersonAtIndex(Model model, Index targetIndex) {","lastModifiedDate":"2018-01-31"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        assertTrue(targetIndex.getZeroBased() \u003c model.getFilteredPersonList().size());","lastModifiedDate":"2018-01-31"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-31"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        Person person \u003d model.getFilteredPersonList().get(targetIndex.getZeroBased());","lastModifiedDate":"2018-01-31"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        final String[] splitName \u003d person.getName().fullName.split(\"\\\\s+\");","lastModifiedDate":"2017-07-20"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(new NameContainsKeywordsPredicate(Arrays.asList(splitName[0])));","lastModifiedDate":"2017-07-20"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-20"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        assertEquals(1, model.getFilteredPersonList().size());","lastModifiedDate":"2018-02-08"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-20"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":161,"author":{"gitId":"Jingwencloud"},"content":"    /**","lastModifiedDate":"2021-10-28"},{"lineNumber":162,"author":{"gitId":"Jingwencloud"},"content":"     * Updates {@code model}\u0027s filtered list to show only the expense at the given {@code targetIndex} in the","lastModifiedDate":"2021-10-28"},{"lineNumber":163,"author":{"gitId":"Jingwencloud"},"content":"     * {@code model}\u0027s awe book.","lastModifiedDate":"2021-10-28"},{"lineNumber":164,"author":{"gitId":"Jingwencloud"},"content":"     */","lastModifiedDate":"2021-10-28"},{"lineNumber":165,"author":{"gitId":"Jingwencloud"},"content":"    public static void showExpenseAtIndex(Model model, Index targetIndex) {","lastModifiedDate":"2021-10-28"},{"lineNumber":166,"author":{"gitId":"Jingwencloud"},"content":"        assertTrue(targetIndex.getZeroBased() \u003c model.getExpenses().size());","lastModifiedDate":"2021-10-28"},{"lineNumber":167,"author":{"gitId":"Jingwencloud"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":168,"author":{"gitId":"Jingwencloud"},"content":"        Expense expense \u003d model.getExpenses().get(targetIndex.getZeroBased());","lastModifiedDate":"2021-10-28"},{"lineNumber":169,"author":{"gitId":"Jingwencloud"},"content":"        final String[] splitDescription \u003d expense.getDescription().getFullDescription().split(\"\\\\s+\");","lastModifiedDate":"2021-10-28"},{"lineNumber":170,"author":{"gitId":"Jingwencloud"},"content":"        model.updateFilteredExpenseList(new DescriptionContainsKeywordsPredicate(Arrays.asList(splitDescription[0])));","lastModifiedDate":"2021-10-28"},{"lineNumber":171,"author":{"gitId":"Jingwencloud"},"content":"    }","lastModifiedDate":"2021-10-28"},{"lineNumber":172,"author":{"gitId":"Jingwencloud"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":173,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-05"}],"authorContributionMap":{"Jingwencloud":22,"marcuspeh":13,"chrus-chong":2,"ramapriyan912001":40,"-":96}},{"path":"src/test/java/seedu/awe/logic/commands/CreateGroupCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"ramapriyan912001"},"content":"package seedu.awe.logic.commands;","lastModifiedDate":"2021-10-05"},{"lineNumber":2,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":3,"author":{"gitId":"chrus-chong"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-05"},{"lineNumber":4,"author":{"gitId":"chrus-chong"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-05"},{"lineNumber":5,"author":{"gitId":"chrus-chong"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-10-05"},{"lineNumber":6,"author":{"gitId":"chrus-chong"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-05"},{"lineNumber":7,"author":{"gitId":"chrus-chong"},"content":"import static seedu.awe.commons.core.Messages.MESSAGE_CREATEGROUPCOMMAND_DUPLICATE_GROUP;","lastModifiedDate":"2021-10-25"},{"lineNumber":8,"author":{"gitId":"chrus-chong"},"content":"import static seedu.awe.commons.core.Messages.MESSAGE_CREATEGROUPCOMMAND_SUCCESS;","lastModifiedDate":"2021-10-25"},{"lineNumber":9,"author":{"gitId":"chrus-chong"},"content":"import static seedu.awe.testutil.Assert.assertThrows;","lastModifiedDate":"2021-10-05"},{"lineNumber":10,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":11,"author":{"gitId":"chrus-chong"},"content":"import java.nio.file.Path;","lastModifiedDate":"2021-10-05"},{"lineNumber":12,"author":{"gitId":"chrus-chong"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-05"},{"lineNumber":13,"author":{"gitId":"chrus-chong"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-10-05"},{"lineNumber":14,"author":{"gitId":"marcuspeh"},"content":"import java.util.HashMap;","lastModifiedDate":"2021-10-18"},{"lineNumber":15,"author":{"gitId":"ramapriyan912001"},"content":"import java.util.HashSet;","lastModifiedDate":"2021-10-09"},{"lineNumber":16,"author":{"gitId":"ramapriyan912001"},"content":"import java.util.List;","lastModifiedDate":"2021-10-21"},{"lineNumber":17,"author":{"gitId":"chrus-chong"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2021-10-05"},{"lineNumber":18,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":19,"author":{"gitId":"chrus-chong"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-05"},{"lineNumber":20,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":21,"author":{"gitId":"chrus-chong"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-10-05"},{"lineNumber":22,"author":{"gitId":"chrus-chong"},"content":"import seedu.awe.commons.core.GuiSettings;","lastModifiedDate":"2021-10-05"},{"lineNumber":23,"author":{"gitId":"chrus-chong"},"content":"import seedu.awe.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-10-05"},{"lineNumber":24,"author":{"gitId":"chrus-chong"},"content":"import seedu.awe.model.AddressBook;","lastModifiedDate":"2021-10-05"},{"lineNumber":25,"author":{"gitId":"ramapriyan912001"},"content":"import seedu.awe.model.Model;","lastModifiedDate":"2021-10-05"},{"lineNumber":26,"author":{"gitId":"chrus-chong"},"content":"import seedu.awe.model.ReadOnlyAddressBook;","lastModifiedDate":"2021-10-05"},{"lineNumber":27,"author":{"gitId":"chrus-chong"},"content":"import seedu.awe.model.ReadOnlyUserPrefs;","lastModifiedDate":"2021-10-05"},{"lineNumber":28,"author":{"gitId":"marcuspeh"},"content":"import seedu.awe.model.expense.Cost;","lastModifiedDate":"2021-10-18"},{"lineNumber":29,"author":{"gitId":"kheekheekhee"},"content":"import seedu.awe.model.expense.Expense;","lastModifiedDate":"2021-10-06"},{"lineNumber":30,"author":{"gitId":"chrus-chong"},"content":"import seedu.awe.model.group.Group;","lastModifiedDate":"2021-10-05"},{"lineNumber":31,"author":{"gitId":"chrus-chong"},"content":"import seedu.awe.model.group.GroupName;","lastModifiedDate":"2021-10-05"},{"lineNumber":32,"author":{"gitId":"kheekheekhee"},"content":"import seedu.awe.model.group.exceptions.DuplicateGroupException;","lastModifiedDate":"2021-10-06"},{"lineNumber":33,"author":{"gitId":"ramapriyan912001"},"content":"import seedu.awe.model.payment.Payment;","lastModifiedDate":"2021-10-21"},{"lineNumber":34,"author":{"gitId":"chrus-chong"},"content":"import seedu.awe.model.person.Person;","lastModifiedDate":"2021-10-05"},{"lineNumber":35,"author":{"gitId":"Jingwencloud"},"content":"import seedu.awe.model.transactionsummary.TransactionSummary;","lastModifiedDate":"2021-10-21"},{"lineNumber":36,"author":{"gitId":"chrus-chong"},"content":"import seedu.awe.testutil.GroupBuilder;","lastModifiedDate":"2021-10-05"},{"lineNumber":37,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":38,"author":{"gitId":"ramapriyan912001"},"content":"public class CreateGroupCommandTest {","lastModifiedDate":"2021-10-05"},{"lineNumber":39,"author":{"gitId":"ramapriyan912001"},"content":"    private Model model;","lastModifiedDate":"2021-10-05"},{"lineNumber":40,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":41,"author":{"gitId":"chrus-chong"},"content":"    @Test","lastModifiedDate":"2021-10-05"},{"lineNumber":42,"author":{"gitId":"chrus-chong"},"content":"    public void constructor_nullGroup_throwsNullPointerException() {","lastModifiedDate":"2021-10-05"},{"lineNumber":43,"author":{"gitId":"chrus-chong"},"content":"        assertThrows(NullPointerException.class, () -\u003e","lastModifiedDate":"2021-10-05"},{"lineNumber":44,"author":{"gitId":"ramapriyan912001"},"content":"                new CreateGroupCommand(null, null, true, new HashSet\u003c\u003e()));","lastModifiedDate":"2021-10-09"},{"lineNumber":45,"author":{"gitId":"chrus-chong"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":46,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":47,"author":{"gitId":"chrus-chong"},"content":"    @Test","lastModifiedDate":"2021-10-05"},{"lineNumber":48,"author":{"gitId":"chrus-chong"},"content":"    public void execute_groupAcceptedByModel_addSuccessful() throws Exception {","lastModifiedDate":"2021-10-05"},{"lineNumber":49,"author":{"gitId":"chrus-chong"},"content":"        ModelStubAcceptingGroupAdded modelStub \u003d new ModelStubAcceptingGroupAdded();","lastModifiedDate":"2021-10-05"},{"lineNumber":50,"author":{"gitId":"chrus-chong"},"content":"        GroupBuilder builder \u003d new GroupBuilder();","lastModifiedDate":"2021-10-05"},{"lineNumber":51,"author":{"gitId":"chrus-chong"},"content":"        GroupName bali \u003d builder.getValidGroupName();","lastModifiedDate":"2021-10-06"},{"lineNumber":52,"author":{"gitId":"chrus-chong"},"content":"        ArrayList\u003cPerson\u003e members \u003d builder.getValidMembers();","lastModifiedDate":"2021-10-05"},{"lineNumber":53,"author":{"gitId":"chrus-chong"},"content":"        Group groupAdded \u003d new Group(bali, members);","lastModifiedDate":"2021-10-06"},{"lineNumber":54,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":55,"author":{"gitId":"ramapriyan912001"},"content":"        CommandResult commandResult \u003d new CreateGroupCommand(bali, members, true, new HashSet\u003c\u003e())","lastModifiedDate":"2021-10-26"},{"lineNumber":56,"author":{"gitId":"ramapriyan912001"},"content":"                .execute(modelStub);","lastModifiedDate":"2021-10-26"},{"lineNumber":57,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":58,"author":{"gitId":"chrus-chong"},"content":"        assertEquals(MESSAGE_CREATEGROUPCOMMAND_SUCCESS, commandResult.getFeedbackToUser());","lastModifiedDate":"2021-10-25"},{"lineNumber":59,"author":{"gitId":"chrus-chong"},"content":"        assertEquals(Arrays.asList(groupAdded), modelStub.groupsAdded);","lastModifiedDate":"2021-10-05"},{"lineNumber":60,"author":{"gitId":"chrus-chong"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":61,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":62,"author":{"gitId":"chrus-chong"},"content":"    @Test","lastModifiedDate":"2021-10-05"},{"lineNumber":63,"author":{"gitId":"chrus-chong"},"content":"    public void execute_duplicateGroup_throwsCommandException() {","lastModifiedDate":"2021-10-05"},{"lineNumber":64,"author":{"gitId":"chrus-chong"},"content":"        Group validGroup \u003d new GroupBuilder().buildValidGroup();","lastModifiedDate":"2021-10-05"},{"lineNumber":65,"author":{"gitId":"chrus-chong"},"content":"        GroupBuilder builder \u003d new GroupBuilder();","lastModifiedDate":"2021-10-05"},{"lineNumber":66,"author":{"gitId":"chrus-chong"},"content":"        GroupName bali \u003d builder.getValidGroupName();","lastModifiedDate":"2021-10-06"},{"lineNumber":67,"author":{"gitId":"chrus-chong"},"content":"        ArrayList\u003cPerson\u003e members \u003d builder.getValidMembers();","lastModifiedDate":"2021-10-05"},{"lineNumber":68,"author":{"gitId":"ramapriyan912001"},"content":"        CreateGroupCommand createGroupCommand \u003d new CreateGroupCommand(bali, members, true, new HashSet\u003c\u003e());","lastModifiedDate":"2021-10-09"},{"lineNumber":69,"author":{"gitId":"chrus-chong"},"content":"        ModelStub modelStub \u003d new ModelStubWithGroup(validGroup);","lastModifiedDate":"2021-10-05"},{"lineNumber":70,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":71,"author":{"gitId":"chrus-chong"},"content":"        assertThrows(CommandException.class, MESSAGE_CREATEGROUPCOMMAND_DUPLICATE_GROUP, () -\u003e","lastModifiedDate":"2021-10-25"},{"lineNumber":72,"author":{"gitId":"chrus-chong"},"content":"                        createGroupCommand.execute(modelStub));","lastModifiedDate":"2021-10-05"},{"lineNumber":73,"author":{"gitId":"chrus-chong"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":74,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":75,"author":{"gitId":"chrus-chong"},"content":"    @Test","lastModifiedDate":"2021-10-05"},{"lineNumber":76,"author":{"gitId":"chrus-chong"},"content":"    public void equals() {","lastModifiedDate":"2021-10-05"},{"lineNumber":77,"author":{"gitId":"chrus-chong"},"content":"        GroupName bali \u003d new GroupName(\"Bali\");","lastModifiedDate":"2021-10-06"},{"lineNumber":78,"author":{"gitId":"chrus-chong"},"content":"        GroupName oslo \u003d new GroupName(\"Oslo\");","lastModifiedDate":"2021-10-06"},{"lineNumber":79,"author":{"gitId":"chrus-chong"},"content":"        ArrayList\u003cPerson\u003e members \u003d new GroupBuilder().getValidMembers();","lastModifiedDate":"2021-10-05"},{"lineNumber":80,"author":{"gitId":"ramapriyan912001"},"content":"        CreateGroupCommand createBaliCommand \u003d new CreateGroupCommand(bali, members, true,","lastModifiedDate":"2021-10-09"},{"lineNumber":81,"author":{"gitId":"ramapriyan912001"},"content":"                new HashSet\u003c\u003e());","lastModifiedDate":"2021-10-09"},{"lineNumber":82,"author":{"gitId":"ramapriyan912001"},"content":"        CreateGroupCommand createOsloCommand \u003d new CreateGroupCommand(oslo, members, true,","lastModifiedDate":"2021-10-09"},{"lineNumber":83,"author":{"gitId":"ramapriyan912001"},"content":"                new HashSet\u003c\u003e());","lastModifiedDate":"2021-10-09"},{"lineNumber":84,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":85,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":86,"author":{"gitId":"chrus-chong"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2021-10-05"},{"lineNumber":87,"author":{"gitId":"chrus-chong"},"content":"        assertTrue(createBaliCommand.equals(createBaliCommand));","lastModifiedDate":"2021-10-06"},{"lineNumber":88,"author":{"gitId":"chrus-chong"},"content":"        assertTrue(createOsloCommand.equals(createOsloCommand));","lastModifiedDate":"2021-10-06"},{"lineNumber":89,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":90,"author":{"gitId":"chrus-chong"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2021-10-05"},{"lineNumber":91,"author":{"gitId":"chrus-chong"},"content":"        assertFalse(createOsloCommand.equals(1));","lastModifiedDate":"2021-10-06"},{"lineNumber":92,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":93,"author":{"gitId":"chrus-chong"},"content":"        // null -\u003e returns false","lastModifiedDate":"2021-10-05"},{"lineNumber":94,"author":{"gitId":"chrus-chong"},"content":"        assertFalse(createOsloCommand.equals(null));","lastModifiedDate":"2021-10-06"},{"lineNumber":95,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":96,"author":{"gitId":"chrus-chong"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2021-10-05"},{"lineNumber":97,"author":{"gitId":"chrus-chong"},"content":"        assertFalse(createOsloCommand.equals(createBaliCommand));","lastModifiedDate":"2021-10-06"},{"lineNumber":98,"author":{"gitId":"chrus-chong"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":99,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":100,"author":{"gitId":"chrus-chong"},"content":"    /**","lastModifiedDate":"2021-10-05"},{"lineNumber":101,"author":{"gitId":"chrus-chong"},"content":"     * A default model stub that have all of the methods failing.","lastModifiedDate":"2021-10-05"},{"lineNumber":102,"author":{"gitId":"chrus-chong"},"content":"     */","lastModifiedDate":"2021-10-05"},{"lineNumber":103,"author":{"gitId":"chrus-chong"},"content":"    private class ModelStub implements Model {","lastModifiedDate":"2021-10-05"},{"lineNumber":104,"author":{"gitId":"chrus-chong"},"content":"        @Override","lastModifiedDate":"2021-10-05"},{"lineNumber":105,"author":{"gitId":"chrus-chong"},"content":"        public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2021-10-05"},{"lineNumber":106,"author":{"gitId":"chrus-chong"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-05"},{"lineNumber":107,"author":{"gitId":"chrus-chong"},"content":"        }","lastModifiedDate":"2021-10-05"},{"lineNumber":108,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":109,"author":{"gitId":"chrus-chong"},"content":"        @Override","lastModifiedDate":"2021-10-05"},{"lineNumber":110,"author":{"gitId":"chrus-chong"},"content":"        public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2021-10-05"},{"lineNumber":111,"author":{"gitId":"chrus-chong"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-05"},{"lineNumber":112,"author":{"gitId":"chrus-chong"},"content":"        }","lastModifiedDate":"2021-10-05"},{"lineNumber":113,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":114,"author":{"gitId":"chrus-chong"},"content":"        @Override","lastModifiedDate":"2021-10-05"},{"lineNumber":115,"author":{"gitId":"chrus-chong"},"content":"        public GuiSettings getGuiSettings() {","lastModifiedDate":"2021-10-05"},{"lineNumber":116,"author":{"gitId":"chrus-chong"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-05"},{"lineNumber":117,"author":{"gitId":"chrus-chong"},"content":"        }","lastModifiedDate":"2021-10-05"},{"lineNumber":118,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":119,"author":{"gitId":"chrus-chong"},"content":"        @Override","lastModifiedDate":"2021-10-05"},{"lineNumber":120,"author":{"gitId":"chrus-chong"},"content":"        public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2021-10-05"},{"lineNumber":121,"author":{"gitId":"chrus-chong"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-05"},{"lineNumber":122,"author":{"gitId":"chrus-chong"},"content":"        }","lastModifiedDate":"2021-10-05"},{"lineNumber":123,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":124,"author":{"gitId":"chrus-chong"},"content":"        @Override","lastModifiedDate":"2021-10-05"},{"lineNumber":125,"author":{"gitId":"chrus-chong"},"content":"        public Path getAddressBookFilePath() {","lastModifiedDate":"2021-10-05"},{"lineNumber":126,"author":{"gitId":"chrus-chong"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-05"},{"lineNumber":127,"author":{"gitId":"chrus-chong"},"content":"        }","lastModifiedDate":"2021-10-05"},{"lineNumber":128,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":129,"author":{"gitId":"chrus-chong"},"content":"        @Override","lastModifiedDate":"2021-10-05"},{"lineNumber":130,"author":{"gitId":"chrus-chong"},"content":"        public void setAddressBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2021-10-05"},{"lineNumber":131,"author":{"gitId":"chrus-chong"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-05"},{"lineNumber":132,"author":{"gitId":"chrus-chong"},"content":"        }","lastModifiedDate":"2021-10-05"},{"lineNumber":133,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":134,"author":{"gitId":"chrus-chong"},"content":"        @Override","lastModifiedDate":"2021-10-05"},{"lineNumber":135,"author":{"gitId":"chrus-chong"},"content":"        public void addPerson(Person person) {","lastModifiedDate":"2021-10-05"},{"lineNumber":136,"author":{"gitId":"chrus-chong"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-05"},{"lineNumber":137,"author":{"gitId":"chrus-chong"},"content":"        }","lastModifiedDate":"2021-10-05"},{"lineNumber":138,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":139,"author":{"gitId":"chrus-chong"},"content":"        @Override","lastModifiedDate":"2021-10-05"},{"lineNumber":140,"author":{"gitId":"chrus-chong"},"content":"        public void setAddressBook(ReadOnlyAddressBook newData) {","lastModifiedDate":"2021-10-05"},{"lineNumber":141,"author":{"gitId":"chrus-chong"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-05"},{"lineNumber":142,"author":{"gitId":"chrus-chong"},"content":"        }","lastModifiedDate":"2021-10-05"},{"lineNumber":143,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":144,"author":{"gitId":"chrus-chong"},"content":"        @Override","lastModifiedDate":"2021-10-05"},{"lineNumber":145,"author":{"gitId":"chrus-chong"},"content":"        public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2021-10-05"},{"lineNumber":146,"author":{"gitId":"chrus-chong"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-05"},{"lineNumber":147,"author":{"gitId":"ramapriyan912001"},"content":"        }","lastModifiedDate":"2021-10-25"},{"lineNumber":148,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":149,"author":{"gitId":"ramapriyan912001"},"content":"        @Override","lastModifiedDate":"2021-10-25"},{"lineNumber":150,"author":{"gitId":"ramapriyan912001"},"content":"        public Group getActiveGroupFromAddressBook() throws CommandException {","lastModifiedDate":"2021-10-25"},{"lineNumber":151,"author":{"gitId":"ramapriyan912001"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-25"},{"lineNumber":152,"author":{"gitId":"chrus-chong"},"content":"        }","lastModifiedDate":"2021-10-05"},{"lineNumber":153,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":154,"author":{"gitId":"chrus-chong"},"content":"        @Override","lastModifiedDate":"2021-10-05"},{"lineNumber":155,"author":{"gitId":"chrus-chong"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2021-10-05"},{"lineNumber":156,"author":{"gitId":"chrus-chong"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-05"},{"lineNumber":157,"author":{"gitId":"chrus-chong"},"content":"        }","lastModifiedDate":"2021-10-05"},{"lineNumber":158,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":159,"author":{"gitId":"chrus-chong"},"content":"        @Override","lastModifiedDate":"2021-10-05"},{"lineNumber":160,"author":{"gitId":"chrus-chong"},"content":"        public void deletePerson(Person target) {","lastModifiedDate":"2021-10-05"},{"lineNumber":161,"author":{"gitId":"chrus-chong"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-05"},{"lineNumber":162,"author":{"gitId":"chrus-chong"},"content":"        }","lastModifiedDate":"2021-10-05"},{"lineNumber":163,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":164,"author":{"gitId":"chrus-chong"},"content":"        @Override","lastModifiedDate":"2021-10-05"},{"lineNumber":165,"author":{"gitId":"chrus-chong"},"content":"        public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2021-10-05"},{"lineNumber":166,"author":{"gitId":"chrus-chong"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-05"},{"lineNumber":167,"author":{"gitId":"chrus-chong"},"content":"        }","lastModifiedDate":"2021-10-05"},{"lineNumber":168,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":169,"author":{"gitId":"marcuspeh"},"content":"        @Override","lastModifiedDate":"2021-10-18"},{"lineNumber":170,"author":{"gitId":"marcuspeh"},"content":"        public void setTransactionSummary(HashMap\u003cPerson, Cost\u003e summary) {","lastModifiedDate":"2021-10-18"},{"lineNumber":171,"author":{"gitId":"marcuspeh"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-18"},{"lineNumber":172,"author":{"gitId":"marcuspeh"},"content":"        }","lastModifiedDate":"2021-10-18"},{"lineNumber":173,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":174,"author":{"gitId":"chrus-chong"},"content":"        @Override","lastModifiedDate":"2021-10-19"},{"lineNumber":175,"author":{"gitId":"chrus-chong"},"content":"        public void setAllMembersOfGroup(Group group) {","lastModifiedDate":"2021-10-19"},{"lineNumber":176,"author":{"gitId":"chrus-chong"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-19"},{"lineNumber":177,"author":{"gitId":"chrus-chong"},"content":"        }","lastModifiedDate":"2021-10-19"},{"lineNumber":178,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":179,"author":{"gitId":"chrus-chong"},"content":"        @Override","lastModifiedDate":"2021-10-05"},{"lineNumber":180,"author":{"gitId":"chrus-chong"},"content":"        public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2021-10-05"},{"lineNumber":181,"author":{"gitId":"chrus-chong"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-05"},{"lineNumber":182,"author":{"gitId":"chrus-chong"},"content":"        }","lastModifiedDate":"2021-10-05"},{"lineNumber":183,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":184,"author":{"gitId":"chrus-chong"},"content":"        @Override","lastModifiedDate":"2021-10-05"},{"lineNumber":185,"author":{"gitId":"chrus-chong"},"content":"        public void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate) {","lastModifiedDate":"2021-10-05"},{"lineNumber":186,"author":{"gitId":"chrus-chong"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-05"},{"lineNumber":187,"author":{"gitId":"chrus-chong"},"content":"        }","lastModifiedDate":"2021-10-05"},{"lineNumber":188,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":189,"author":{"gitId":"chrus-chong"},"content":"        @Override","lastModifiedDate":"2021-10-05"},{"lineNumber":190,"author":{"gitId":"chrus-chong"},"content":"        public void deleteGroup(Group group) {","lastModifiedDate":"2021-10-05"},{"lineNumber":191,"author":{"gitId":"chrus-chong"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-05"},{"lineNumber":192,"author":{"gitId":"chrus-chong"},"content":"        }","lastModifiedDate":"2021-10-05"},{"lineNumber":193,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":194,"author":{"gitId":"chrus-chong"},"content":"        @Override","lastModifiedDate":"2021-10-05"},{"lineNumber":195,"author":{"gitId":"chrus-chong"},"content":"        public boolean hasGroup(Group group) {","lastModifiedDate":"2021-10-05"},{"lineNumber":196,"author":{"gitId":"chrus-chong"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-05"},{"lineNumber":197,"author":{"gitId":"chrus-chong"},"content":"        }","lastModifiedDate":"2021-10-05"},{"lineNumber":198,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":199,"author":{"gitId":"ramapriyan912001"},"content":"        @Override","lastModifiedDate":"2021-10-21"},{"lineNumber":200,"author":{"gitId":"ramapriyan912001"},"content":"        public void setPayments(List\u003cPayment\u003e payments) {","lastModifiedDate":"2021-10-21"},{"lineNumber":201,"author":{"gitId":"ramapriyan912001"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-27"},{"lineNumber":202,"author":{"gitId":"ramapriyan912001"},"content":"        }","lastModifiedDate":"2021-10-21"},{"lineNumber":203,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":204,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":205,"author":{"gitId":"chrus-chong"},"content":"        /**","lastModifiedDate":"2021-10-05"},{"lineNumber":206,"author":{"gitId":"chrus-chong"},"content":"         * Returns an unmodifiable view of the list of {@code Group} backed by the internal list of","lastModifiedDate":"2021-10-05"},{"lineNumber":207,"author":{"gitId":"chrus-chong"},"content":"         * {@code versionedAddressBook}","lastModifiedDate":"2021-10-05"},{"lineNumber":208,"author":{"gitId":"chrus-chong"},"content":"         */","lastModifiedDate":"2021-10-05"},{"lineNumber":209,"author":{"gitId":"chrus-chong"},"content":"        @Override","lastModifiedDate":"2021-10-05"},{"lineNumber":210,"author":{"gitId":"chrus-chong"},"content":"        public ObservableList\u003cGroup\u003e getFilteredGroupList() {","lastModifiedDate":"2021-10-05"},{"lineNumber":211,"author":{"gitId":"chrus-chong"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-05"},{"lineNumber":212,"author":{"gitId":"chrus-chong"},"content":"        }","lastModifiedDate":"2021-10-05"},{"lineNumber":213,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":214,"author":{"gitId":"chrus-chong"},"content":"        @Override","lastModifiedDate":"2021-10-05"},{"lineNumber":215,"author":{"gitId":"chrus-chong"},"content":"        public void updateFilteredGroupList(Predicate\u003cGroup\u003e predicate) {","lastModifiedDate":"2021-10-05"},{"lineNumber":216,"author":{"gitId":"chrus-chong"},"content":"        }","lastModifiedDate":"2021-10-05"},{"lineNumber":217,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":218,"author":{"gitId":"chrus-chong"},"content":"        @Override","lastModifiedDate":"2021-10-05"},{"lineNumber":219,"author":{"gitId":"chrus-chong"},"content":"        public Group getGroupByName(GroupName groupName) {","lastModifiedDate":"2021-10-05"},{"lineNumber":220,"author":{"gitId":"chrus-chong"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-05"},{"lineNumber":221,"author":{"gitId":"ramapriyan912001"},"content":"        }","lastModifiedDate":"2021-10-05"},{"lineNumber":222,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":223,"author":{"gitId":"chrus-chong"},"content":"        @Override","lastModifiedDate":"2021-10-05"},{"lineNumber":224,"author":{"gitId":"chrus-chong"},"content":"        public void addGroup(Group group) {","lastModifiedDate":"2021-10-05"},{"lineNumber":225,"author":{"gitId":"chrus-chong"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-05"},{"lineNumber":226,"author":{"gitId":"chrus-chong"},"content":"        }","lastModifiedDate":"2021-10-05"},{"lineNumber":227,"author":{"gitId":"kheekheekhee"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":228,"author":{"gitId":"kheekheekhee"},"content":"        @Override","lastModifiedDate":"2021-10-06"},{"lineNumber":229,"author":{"gitId":"kheekheekhee"},"content":"        public void setGroup(Group group, Group newGroup) throws DuplicateGroupException {","lastModifiedDate":"2021-10-06"},{"lineNumber":230,"author":{"gitId":"kheekheekhee"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-06"},{"lineNumber":231,"author":{"gitId":"kheekheekhee"},"content":"        }","lastModifiedDate":"2021-10-06"},{"lineNumber":232,"author":{"gitId":"kheekheekhee"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":233,"author":{"gitId":"Jingwencloud"},"content":"        @Override","lastModifiedDate":"2021-10-13"},{"lineNumber":234,"author":{"gitId":"Jingwencloud"},"content":"        public void addExpense(Expense expense, Group group) {","lastModifiedDate":"2021-10-13"},{"lineNumber":235,"author":{"gitId":"Jingwencloud"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-13"},{"lineNumber":236,"author":{"gitId":"Jingwencloud"},"content":"        }","lastModifiedDate":"2021-10-13"},{"lineNumber":237,"author":{"gitId":"Jingwencloud"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":238,"author":{"gitId":"Jingwencloud"},"content":"        @Override","lastModifiedDate":"2021-10-13"},{"lineNumber":239,"author":{"gitId":"Jingwencloud"},"content":"        public void deleteExpense(Expense expense, Group group) {","lastModifiedDate":"2021-10-13"},{"lineNumber":240,"author":{"gitId":"Jingwencloud"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-13"},{"lineNumber":241,"author":{"gitId":"Jingwencloud"},"content":"        }","lastModifiedDate":"2021-10-13"},{"lineNumber":242,"author":{"gitId":"Jingwencloud"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":243,"author":{"gitId":"ramapriyan912001"},"content":"        @Override","lastModifiedDate":"2021-10-21"},{"lineNumber":244,"author":{"gitId":"ramapriyan912001"},"content":"        public ObservableList\u003cPayment\u003e getPayments() {","lastModifiedDate":"2021-10-21"},{"lineNumber":245,"author":{"gitId":"ramapriyan912001"},"content":"            return null;","lastModifiedDate":"2021-10-21"},{"lineNumber":246,"author":{"gitId":"ramapriyan912001"},"content":"        }","lastModifiedDate":"2021-10-21"},{"lineNumber":247,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":248,"author":{"gitId":"kheekheekhee"},"content":"        @Override","lastModifiedDate":"2021-10-06"},{"lineNumber":249,"author":{"gitId":"Jingwencloud"},"content":"        public ObservableList\u003cExpense\u003e getExpenses() {","lastModifiedDate":"2021-10-07"},{"lineNumber":250,"author":{"gitId":"kheekheekhee"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-06"},{"lineNumber":251,"author":{"gitId":"kheekheekhee"},"content":"        }","lastModifiedDate":"2021-10-06"},{"lineNumber":252,"author":{"gitId":"Jingwencloud"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":253,"author":{"gitId":"Jingwencloud"},"content":"        @Override","lastModifiedDate":"2021-10-07"},{"lineNumber":254,"author":{"gitId":"Jingwencloud"},"content":"        public void setExpenses(Group group) {","lastModifiedDate":"2021-10-07"},{"lineNumber":255,"author":{"gitId":"Jingwencloud"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-07"},{"lineNumber":256,"author":{"gitId":"Jingwencloud"},"content":"        }","lastModifiedDate":"2021-10-07"},{"lineNumber":257,"author":{"gitId":"Jingwencloud"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":258,"author":{"gitId":"Jingwencloud"},"content":"        @Override","lastModifiedDate":"2021-10-12"},{"lineNumber":259,"author":{"gitId":"Jingwencloud"},"content":"        public void updateFilteredExpenseList(Predicate\u003cExpense\u003e predicate) {","lastModifiedDate":"2021-10-12"},{"lineNumber":260,"author":{"gitId":"Jingwencloud"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-12"},{"lineNumber":261,"author":{"gitId":"Jingwencloud"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":262,"author":{"gitId":"Jingwencloud"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":263,"author":{"gitId":"Jingwencloud"},"content":"        @Override","lastModifiedDate":"2021-10-21"},{"lineNumber":264,"author":{"gitId":"Jingwencloud"},"content":"        public ObservableList\u003cTransactionSummary\u003e getTransactionSummary() {","lastModifiedDate":"2021-10-21"},{"lineNumber":265,"author":{"gitId":"Jingwencloud"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-21"},{"lineNumber":266,"author":{"gitId":"Jingwencloud"},"content":"        }","lastModifiedDate":"2021-10-21"},{"lineNumber":267,"author":{"gitId":"Jingwencloud"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":268,"author":{"gitId":"Jingwencloud"},"content":"        @Override","lastModifiedDate":"2021-10-22"},{"lineNumber":269,"author":{"gitId":"Jingwencloud"},"content":"        public boolean isCurrentExpenseList(Group group) {","lastModifiedDate":"2021-10-22"},{"lineNumber":270,"author":{"gitId":"Jingwencloud"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-22"},{"lineNumber":271,"author":{"gitId":"Jingwencloud"},"content":"        }","lastModifiedDate":"2021-10-22"},{"lineNumber":272,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":273,"author":{"gitId":"ramapriyan912001"},"content":"        @Override","lastModifiedDate":"2021-10-27"},{"lineNumber":274,"author":{"gitId":"ramapriyan912001"},"content":"        public Expense getExpense(int index) {","lastModifiedDate":"2021-10-27"},{"lineNumber":275,"author":{"gitId":"ramapriyan912001"},"content":"            return null;","lastModifiedDate":"2021-10-27"},{"lineNumber":276,"author":{"gitId":"ramapriyan912001"},"content":"        }","lastModifiedDate":"2021-10-27"},{"lineNumber":277,"author":{"gitId":"chrus-chong"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":278,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":279,"author":{"gitId":"chrus-chong"},"content":"    /**","lastModifiedDate":"2021-10-05"},{"lineNumber":280,"author":{"gitId":"kheekheekhee"},"content":"     * A Model stub that contains a single group.","lastModifiedDate":"2021-10-12"},{"lineNumber":281,"author":{"gitId":"chrus-chong"},"content":"     */","lastModifiedDate":"2021-10-05"},{"lineNumber":282,"author":{"gitId":"chrus-chong"},"content":"    private class ModelStubWithGroup extends ModelStub {","lastModifiedDate":"2021-10-05"},{"lineNumber":283,"author":{"gitId":"chrus-chong"},"content":"        private final Group group;","lastModifiedDate":"2021-10-05"},{"lineNumber":284,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":285,"author":{"gitId":"chrus-chong"},"content":"        ModelStubWithGroup(Group group) {","lastModifiedDate":"2021-10-05"},{"lineNumber":286,"author":{"gitId":"chrus-chong"},"content":"            requireNonNull(group);","lastModifiedDate":"2021-10-05"},{"lineNumber":287,"author":{"gitId":"chrus-chong"},"content":"            this.group \u003d group;","lastModifiedDate":"2021-10-05"},{"lineNumber":288,"author":{"gitId":"ramapriyan912001"},"content":"        }","lastModifiedDate":"2021-10-05"},{"lineNumber":289,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":290,"author":{"gitId":"chrus-chong"},"content":"        @Override","lastModifiedDate":"2021-10-05"},{"lineNumber":291,"author":{"gitId":"chrus-chong"},"content":"        public boolean hasGroup(Group group) {","lastModifiedDate":"2021-10-05"},{"lineNumber":292,"author":{"gitId":"chrus-chong"},"content":"            requireNonNull(group);","lastModifiedDate":"2021-10-05"},{"lineNumber":293,"author":{"gitId":"chrus-chong"},"content":"            return this.group.isSameGroup(group);","lastModifiedDate":"2021-10-05"},{"lineNumber":294,"author":{"gitId":"chrus-chong"},"content":"        }","lastModifiedDate":"2021-10-05"},{"lineNumber":295,"author":{"gitId":"chrus-chong"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":296,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":297,"author":{"gitId":"chrus-chong"},"content":"    /**","lastModifiedDate":"2021-10-05"},{"lineNumber":298,"author":{"gitId":"chrus-chong"},"content":"     * A Model stub that always accept the group being added.","lastModifiedDate":"2021-10-05"},{"lineNumber":299,"author":{"gitId":"chrus-chong"},"content":"     */","lastModifiedDate":"2021-10-05"},{"lineNumber":300,"author":{"gitId":"chrus-chong"},"content":"    private class ModelStubAcceptingGroupAdded extends ModelStub {","lastModifiedDate":"2021-10-05"},{"lineNumber":301,"author":{"gitId":"chrus-chong"},"content":"        final ArrayList\u003cGroup\u003e groupsAdded \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-05"},{"lineNumber":302,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":303,"author":{"gitId":"chrus-chong"},"content":"        @Override","lastModifiedDate":"2021-10-05"},{"lineNumber":304,"author":{"gitId":"chrus-chong"},"content":"        public boolean hasGroup(Group group) {","lastModifiedDate":"2021-10-05"},{"lineNumber":305,"author":{"gitId":"chrus-chong"},"content":"            requireNonNull(group);","lastModifiedDate":"2021-10-05"},{"lineNumber":306,"author":{"gitId":"chrus-chong"},"content":"            return groupsAdded.stream().anyMatch(group::isSameGroup);","lastModifiedDate":"2021-10-05"},{"lineNumber":307,"author":{"gitId":"chrus-chong"},"content":"        }","lastModifiedDate":"2021-10-05"},{"lineNumber":308,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":309,"author":{"gitId":"chrus-chong"},"content":"        @Override","lastModifiedDate":"2021-10-05"},{"lineNumber":310,"author":{"gitId":"chrus-chong"},"content":"        public void addGroup(Group group) {","lastModifiedDate":"2021-10-05"},{"lineNumber":311,"author":{"gitId":"chrus-chong"},"content":"            requireNonNull(group);","lastModifiedDate":"2021-10-05"},{"lineNumber":312,"author":{"gitId":"chrus-chong"},"content":"            groupsAdded.add(group);","lastModifiedDate":"2021-10-05"},{"lineNumber":313,"author":{"gitId":"chrus-chong"},"content":"        }","lastModifiedDate":"2021-10-05"},{"lineNumber":314,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":315,"author":{"gitId":"chrus-chong"},"content":"        @Override","lastModifiedDate":"2021-10-05"},{"lineNumber":316,"author":{"gitId":"chrus-chong"},"content":"        public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2021-10-05"},{"lineNumber":317,"author":{"gitId":"chrus-chong"},"content":"            return new AddressBook();","lastModifiedDate":"2021-10-05"},{"lineNumber":318,"author":{"gitId":"chrus-chong"},"content":"        }","lastModifiedDate":"2021-10-05"},{"lineNumber":319,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":320,"author":{"gitId":"chrus-chong"},"content":"        @Override","lastModifiedDate":"2021-10-19"},{"lineNumber":321,"author":{"gitId":"chrus-chong"},"content":"        public void setAllMembersOfGroup(Group group) {","lastModifiedDate":"2021-10-19"},{"lineNumber":322,"author":{"gitId":"chrus-chong"},"content":"            requireNonNull(group);","lastModifiedDate":"2021-10-19"},{"lineNumber":323,"author":{"gitId":"chrus-chong"},"content":"        }","lastModifiedDate":"2021-10-19"},{"lineNumber":324,"author":{"gitId":"chrus-chong"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":325,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":326,"author":{"gitId":"chrus-chong"},"content":"}","lastModifiedDate":"2021-10-05"},{"lineNumber":327,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-10-05"}],"authorContributionMap":{"marcuspeh":7,"Jingwencloud":32,"chrus-chong":234,"kheekheekhee":12,"ramapriyan912001":42}},{"path":"src/test/java/seedu/awe/logic/commands/DeleteContactCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"ramapriyan912001"},"content":"package seedu.awe.logic.commands;","lastModifiedDate":"2021-10-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"ramapriyan912001"},"content":"import static seedu.awe.commons.core.Messages.MESSAGE_DELETECONTACTCOMMAND_CANNOT_BE_DELETED;","lastModifiedDate":"2021-10-30"},{"lineNumber":6,"author":{"gitId":"chrus-chong"},"content":"import static seedu.awe.commons.core.Messages.MESSAGE_DELETECONTACTCOMMAND_DELETE_PERSON_SUCCESS;","lastModifiedDate":"2021-10-25"},{"lineNumber":7,"author":{"gitId":"ramapriyan912001"},"content":"import static seedu.awe.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2021-10-05"},{"lineNumber":8,"author":{"gitId":"ramapriyan912001"},"content":"import static seedu.awe.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2021-10-05"},{"lineNumber":9,"author":{"gitId":"ramapriyan912001"},"content":"import static seedu.awe.logic.commands.CommandTestUtil.showPersonAtIndex;","lastModifiedDate":"2021-10-05"},{"lineNumber":10,"author":{"gitId":"ramapriyan912001"},"content":"import static seedu.awe.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2021-10-05"},{"lineNumber":11,"author":{"gitId":"ramapriyan912001"},"content":"import static seedu.awe.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2021-10-05"},{"lineNumber":12,"author":{"gitId":"ramapriyan912001"},"content":"import static seedu.awe.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2021-10-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":16,"author":{"gitId":"ramapriyan912001"},"content":"import seedu.awe.commons.core.Messages;","lastModifiedDate":"2021-10-05"},{"lineNumber":17,"author":{"gitId":"ramapriyan912001"},"content":"import seedu.awe.commons.core.index.Index;","lastModifiedDate":"2021-10-05"},{"lineNumber":18,"author":{"gitId":"ramapriyan912001"},"content":"import seedu.awe.model.Model;","lastModifiedDate":"2021-10-05"},{"lineNumber":19,"author":{"gitId":"ramapriyan912001"},"content":"import seedu.awe.model.ModelManager;","lastModifiedDate":"2021-10-05"},{"lineNumber":20,"author":{"gitId":"ramapriyan912001"},"content":"import seedu.awe.model.UserPrefs;","lastModifiedDate":"2021-10-05"},{"lineNumber":21,"author":{"gitId":"ramapriyan912001"},"content":"import seedu.awe.model.person.Person;","lastModifiedDate":"2021-10-05"},{"lineNumber":22,"author":{"gitId":"ramapriyan912001"},"content":"import seedu.awe.ui.MainWindow;","lastModifiedDate":"2021-10-30"},{"lineNumber":23,"author":{"gitId":"ramapriyan912001"},"content":"import seedu.awe.ui.UiView;","lastModifiedDate":"2021-10-30"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) and unit tests for","lastModifiedDate":"2020-12-16"},{"lineNumber":27,"author":{"gitId":"-"},"content":" * {@code DeleteCommand}.","lastModifiedDate":"2018-01-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-05"},{"lineNumber":29,"author":{"gitId":"marcuspeh"},"content":"public class DeleteContactCommandTest {","lastModifiedDate":"2021-10-11"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2017-07-19"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":33,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":34,"author":{"gitId":"ramapriyan912001"},"content":"    @Test","lastModifiedDate":"2021-10-30"},{"lineNumber":35,"author":{"gitId":"ramapriyan912001"},"content":"    public void execute_notOnContactsPage_failure() {","lastModifiedDate":"2021-10-30"},{"lineNumber":36,"author":{"gitId":"ramapriyan912001"},"content":"        MainWindow.setViewEnum(UiView.EXPENSE_PAGE);","lastModifiedDate":"2021-10-30"},{"lineNumber":37,"author":{"gitId":"ramapriyan912001"},"content":"        Person personToDelete \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2021-10-30"},{"lineNumber":38,"author":{"gitId":"ramapriyan912001"},"content":"        DeleteContactCommand deleteContactCommand \u003d new DeleteContactCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2021-10-30"},{"lineNumber":39,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":40,"author":{"gitId":"ramapriyan912001"},"content":"        String expectedMessage \u003d MESSAGE_DELETECONTACTCOMMAND_CANNOT_BE_DELETED;","lastModifiedDate":"2021-10-30"},{"lineNumber":41,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":42,"author":{"gitId":"ramapriyan912001"},"content":"        assertCommandFailure(deleteContactCommand, model, expectedMessage);","lastModifiedDate":"2021-10-30"},{"lineNumber":43,"author":{"gitId":"ramapriyan912001"},"content":"    }","lastModifiedDate":"2021-10-30"},{"lineNumber":44,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public void execute_validIndexUnfilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":47,"author":{"gitId":"ramapriyan912001"},"content":"        MainWindow.setViewEnum(UiView.CONTACT_PAGE);","lastModifiedDate":"2021-10-30"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        Person personToDelete \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":49,"author":{"gitId":"marcuspeh"},"content":"        DeleteContactCommand deleteContactCommand \u003d new DeleteContactCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2021-10-11"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":51,"author":{"gitId":"marcuspeh"},"content":"        CommandResult commandResult \u003d new CommandResult(","lastModifiedDate":"2021-11-01"},{"lineNumber":52,"author":{"gitId":"marcuspeh"},"content":"                String.format(MESSAGE_DELETECONTACTCOMMAND_DELETE_PERSON_SUCCESS, personToDelete),","lastModifiedDate":"2021-11-01"},{"lineNumber":53,"author":{"gitId":"marcuspeh"},"content":"                false, false, false, true, false, false, false);","lastModifiedDate":"2021-11-01"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        ModelManager expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2017-06-05"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        expectedModel.deletePerson(personToDelete);","lastModifiedDate":"2017-06-05"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":58,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":59,"author":{"gitId":"marcuspeh"},"content":"        assertCommandSuccess(deleteContactCommand, model, commandResult, expectedModel);","lastModifiedDate":"2021-11-01"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public void execute_invalidIndexUnfilteredList_throwsCommandException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":64,"author":{"gitId":"ramapriyan912001"},"content":"        MainWindow.setViewEnum(UiView.CONTACT_PAGE);","lastModifiedDate":"2021-10-30"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredPersonList().size() + 1);","lastModifiedDate":"2017-06-05"},{"lineNumber":66,"author":{"gitId":"marcuspeh"},"content":"        DeleteContactCommand deleteContactCommand \u003d new DeleteContactCommand(outOfBoundIndex);","lastModifiedDate":"2021-10-11"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":68,"author":{"gitId":"marcuspeh"},"content":"        assertCommandFailure(deleteContactCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2021-10-11"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public void execute_validIndexFilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":73,"author":{"gitId":"ramapriyan912001"},"content":"        MainWindow.setViewEnum(UiView.CONTACT_PAGE);","lastModifiedDate":"2021-10-30"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        Person personToDelete \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":77,"author":{"gitId":"marcuspeh"},"content":"        DeleteContactCommand deleteContactCommand \u003d new DeleteContactCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2021-10-11"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":79,"author":{"gitId":"marcuspeh"},"content":"        CommandResult commandResult \u003d new CommandResult(","lastModifiedDate":"2021-11-01"},{"lineNumber":80,"author":{"gitId":"marcuspeh"},"content":"                String.format(MESSAGE_DELETECONTACTCOMMAND_DELETE_PERSON_SUCCESS, personToDelete),","lastModifiedDate":"2021-11-01"},{"lineNumber":81,"author":{"gitId":"marcuspeh"},"content":"                false, false, false, true, false, false, false);","lastModifiedDate":"2021-11-01"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2017-06-05"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        expectedModel.deletePerson(personToDelete);","lastModifiedDate":"2017-06-05"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        showNoPerson(expectedModel);","lastModifiedDate":"2017-06-05"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":87,"author":{"gitId":"marcuspeh"},"content":"        assertCommandSuccess(deleteContactCommand, model, commandResult, expectedModel);","lastModifiedDate":"2021-11-01"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    public void execute_invalidIndexFilteredList_throwsCommandException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":92,"author":{"gitId":"ramapriyan912001"},"content":"        MainWindow.setViewEnum(UiView.CONTACT_PAGE);","lastModifiedDate":"2021-10-30"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2017-06-05"},{"lineNumber":96,"author":{"gitId":"ramapriyan912001"},"content":"        // ensures that outOfBoundIndex is still in bounds of awe book list","lastModifiedDate":"2021-10-05"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getAddressBook().getPersonList().size());","lastModifiedDate":"2017-06-05"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":99,"author":{"gitId":"marcuspeh"},"content":"        DeleteContactCommand deleteContactCommand \u003d new DeleteContactCommand(outOfBoundIndex);","lastModifiedDate":"2021-10-11"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":101,"author":{"gitId":"marcuspeh"},"content":"        assertCommandFailure(deleteContactCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2021-10-11"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-01-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-08-08"},{"lineNumber":106,"author":{"gitId":"ramapriyan912001"},"content":"        MainWindow.setViewEnum(UiView.CONTACT_PAGE);","lastModifiedDate":"2021-10-30"},{"lineNumber":107,"author":{"gitId":"marcuspeh"},"content":"        DeleteContactCommand deleteFirstCommand \u003d new DeleteContactCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2021-10-11"},{"lineNumber":108,"author":{"gitId":"marcuspeh"},"content":"        DeleteContactCommand deleteSecondCommand \u003d new DeleteContactCommand(INDEX_SECOND_PERSON);","lastModifiedDate":"2021-10-11"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        assertTrue(deleteFirstCommand.equals(deleteFirstCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":114,"author":{"gitId":"marcuspeh"},"content":"        DeleteContactCommand deleteFirstCommandCopy \u003d new DeleteContactCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2021-10-11"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        assertTrue(deleteFirstCommand.equals(deleteFirstCommandCopy));","lastModifiedDate":"2017-06-27"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(1));","lastModifiedDate":"2017-06-27"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(null));","lastModifiedDate":"2017-06-27"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(deleteSecondCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":128,"author":{"gitId":"-"},"content":"     * Updates {@code model}\u0027s filtered list to show no one.","lastModifiedDate":"2017-06-05"},{"lineNumber":129,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    private void showNoPerson(Model model) {","lastModifiedDate":"2017-06-05"},{"lineNumber":131,"author":{"gitId":"ramapriyan912001"},"content":"        MainWindow.setViewEnum(UiView.CONTACT_PAGE);","lastModifiedDate":"2021-10-30"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(p -\u003e false);","lastModifiedDate":"2017-06-12"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        assertTrue(model.getFilteredPersonList().isEmpty());","lastModifiedDate":"2018-02-08"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":136,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-05"}],"authorContributionMap":{"marcuspeh":19,"chrus-chong":1,"ramapriyan912001":35,"-":81}},{"path":"src/test/java/seedu/awe/logic/commands/DeleteExpenseCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Jingwencloud"},"content":"package seedu.awe.logic.commands;","lastModifiedDate":"2021-10-28"},{"lineNumber":2,"author":{"gitId":"Jingwencloud"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":3,"author":{"gitId":"Jingwencloud"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-28"},{"lineNumber":4,"author":{"gitId":"Jingwencloud"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-28"},{"lineNumber":5,"author":{"gitId":"Jingwencloud"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-10-30"},{"lineNumber":6,"author":{"gitId":"Jingwencloud"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-28"},{"lineNumber":7,"author":{"gitId":"Jingwencloud"},"content":"import static seedu.awe.commons.core.Messages.MESSAGE_DELETEEXPENSECOMMAND_CANNOT_BE_DELETED;","lastModifiedDate":"2021-10-28"},{"lineNumber":8,"author":{"gitId":"Jingwencloud"},"content":"import static seedu.awe.commons.core.Messages.MESSAGE_DELETEEXPENSECOMMAND_SUCCESS;","lastModifiedDate":"2021-10-28"},{"lineNumber":9,"author":{"gitId":"Jingwencloud"},"content":"import static seedu.awe.commons.core.Messages.MESSAGE_INVALID_EXPENSE_DISPLAYED_INDEX;","lastModifiedDate":"2021-10-28"},{"lineNumber":10,"author":{"gitId":"Jingwencloud"},"content":"import static seedu.awe.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2021-10-30"},{"lineNumber":11,"author":{"gitId":"Jingwencloud"},"content":"import static seedu.awe.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2021-10-30"},{"lineNumber":12,"author":{"gitId":"Jingwencloud"},"content":"import static seedu.awe.logic.commands.CommandTestUtil.showExpenseAtIndex;","lastModifiedDate":"2021-10-30"},{"lineNumber":13,"author":{"gitId":"Jingwencloud"},"content":"import static seedu.awe.testutil.Assert.assertThrows;","lastModifiedDate":"2021-10-28"},{"lineNumber":14,"author":{"gitId":"Jingwencloud"},"content":"import static seedu.awe.testutil.TypicalExpenses.getTypicalAddressBook;","lastModifiedDate":"2021-10-28"},{"lineNumber":15,"author":{"gitId":"Jingwencloud"},"content":"import static seedu.awe.testutil.TypicalIndexes.INDEX_FIRST_EXPENSE;","lastModifiedDate":"2021-10-28"},{"lineNumber":16,"author":{"gitId":"Jingwencloud"},"content":"import static seedu.awe.testutil.TypicalIndexes.INDEX_SECOND_EXPENSE;","lastModifiedDate":"2021-10-30"},{"lineNumber":17,"author":{"gitId":"Jingwencloud"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":18,"author":{"gitId":"Jingwencloud"},"content":"import java.nio.file.Path;","lastModifiedDate":"2021-10-28"},{"lineNumber":19,"author":{"gitId":"Jingwencloud"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-28"},{"lineNumber":20,"author":{"gitId":"Jingwencloud"},"content":"import java.util.HashMap;","lastModifiedDate":"2021-10-28"},{"lineNumber":21,"author":{"gitId":"Jingwencloud"},"content":"import java.util.List;","lastModifiedDate":"2021-10-28"},{"lineNumber":22,"author":{"gitId":"Jingwencloud"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2021-10-28"},{"lineNumber":23,"author":{"gitId":"Jingwencloud"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":24,"author":{"gitId":"Jingwencloud"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-28"},{"lineNumber":25,"author":{"gitId":"Jingwencloud"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":26,"author":{"gitId":"Jingwencloud"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-10-28"},{"lineNumber":27,"author":{"gitId":"Jingwencloud"},"content":"import javafx.collections.transformation.FilteredList;","lastModifiedDate":"2021-10-28"},{"lineNumber":28,"author":{"gitId":"Jingwencloud"},"content":"import seedu.awe.commons.core.GuiSettings;","lastModifiedDate":"2021-10-28"},{"lineNumber":29,"author":{"gitId":"Jingwencloud"},"content":"import seedu.awe.commons.core.Messages;","lastModifiedDate":"2021-10-30"},{"lineNumber":30,"author":{"gitId":"Jingwencloud"},"content":"import seedu.awe.commons.core.index.Index;","lastModifiedDate":"2021-10-28"},{"lineNumber":31,"author":{"gitId":"Jingwencloud"},"content":"import seedu.awe.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-10-28"},{"lineNumber":32,"author":{"gitId":"Jingwencloud"},"content":"import seedu.awe.model.Model;","lastModifiedDate":"2021-10-28"},{"lineNumber":33,"author":{"gitId":"Jingwencloud"},"content":"import seedu.awe.model.ModelManager;","lastModifiedDate":"2021-10-28"},{"lineNumber":34,"author":{"gitId":"Jingwencloud"},"content":"import seedu.awe.model.ReadOnlyAddressBook;","lastModifiedDate":"2021-10-28"},{"lineNumber":35,"author":{"gitId":"Jingwencloud"},"content":"import seedu.awe.model.ReadOnlyUserPrefs;","lastModifiedDate":"2021-10-28"},{"lineNumber":36,"author":{"gitId":"Jingwencloud"},"content":"import seedu.awe.model.UserPrefs;","lastModifiedDate":"2021-10-28"},{"lineNumber":37,"author":{"gitId":"Jingwencloud"},"content":"import seedu.awe.model.expense.Cost;","lastModifiedDate":"2021-10-28"},{"lineNumber":38,"author":{"gitId":"Jingwencloud"},"content":"import seedu.awe.model.expense.Expense;","lastModifiedDate":"2021-10-28"},{"lineNumber":39,"author":{"gitId":"Jingwencloud"},"content":"import seedu.awe.model.expense.ExpenseList;","lastModifiedDate":"2021-10-28"},{"lineNumber":40,"author":{"gitId":"Jingwencloud"},"content":"import seedu.awe.model.group.Group;","lastModifiedDate":"2021-10-28"},{"lineNumber":41,"author":{"gitId":"Jingwencloud"},"content":"import seedu.awe.model.group.GroupName;","lastModifiedDate":"2021-10-28"},{"lineNumber":42,"author":{"gitId":"Jingwencloud"},"content":"import seedu.awe.model.group.exceptions.DuplicateGroupException;","lastModifiedDate":"2021-10-28"},{"lineNumber":43,"author":{"gitId":"Jingwencloud"},"content":"import seedu.awe.model.payment.Payment;","lastModifiedDate":"2021-10-28"},{"lineNumber":44,"author":{"gitId":"Jingwencloud"},"content":"import seedu.awe.model.person.Person;","lastModifiedDate":"2021-10-28"},{"lineNumber":45,"author":{"gitId":"Jingwencloud"},"content":"import seedu.awe.model.transactionsummary.TransactionSummary;","lastModifiedDate":"2021-10-28"},{"lineNumber":46,"author":{"gitId":"Jingwencloud"},"content":"import seedu.awe.ui.MainWindow;","lastModifiedDate":"2021-10-28"},{"lineNumber":47,"author":{"gitId":"Jingwencloud"},"content":"import seedu.awe.ui.UiView;","lastModifiedDate":"2021-10-28"},{"lineNumber":48,"author":{"gitId":"Jingwencloud"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":49,"author":{"gitId":"Jingwencloud"},"content":"public class DeleteExpenseCommandTest {","lastModifiedDate":"2021-10-28"},{"lineNumber":50,"author":{"gitId":"Jingwencloud"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":51,"author":{"gitId":"Jingwencloud"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2021-10-28"},{"lineNumber":52,"author":{"gitId":"Jingwencloud"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":53,"author":{"gitId":"Jingwencloud"},"content":"    @Test","lastModifiedDate":"2021-10-28"},{"lineNumber":54,"author":{"gitId":"Jingwencloud"},"content":"    public void execute_validIndexUnfilteredList_success() throws Exception {","lastModifiedDate":"2021-10-28"},{"lineNumber":55,"author":{"gitId":"Jingwencloud"},"content":"        MainWindow.setViewEnum(UiView.EXPENSE_PAGE);","lastModifiedDate":"2021-10-28"},{"lineNumber":56,"author":{"gitId":"Jingwencloud"},"content":"        ModelStubWithExpense modelStub \u003d new ModelStubWithExpense();","lastModifiedDate":"2021-10-28"},{"lineNumber":57,"author":{"gitId":"Jingwencloud"},"content":"        Group deleteExpenseGroup \u003d model.getGroupByName(new GroupName(\"Bali\"));","lastModifiedDate":"2021-10-28"},{"lineNumber":58,"author":{"gitId":"Jingwencloud"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":59,"author":{"gitId":"Jingwencloud"},"content":"        ArrayList\u003cExpense\u003e expenses \u003d deleteExpenseGroup.getExpenses();","lastModifiedDate":"2021-10-28"},{"lineNumber":60,"author":{"gitId":"Jingwencloud"},"content":"        ExpenseList expensesList \u003d new ExpenseList();","lastModifiedDate":"2021-10-28"},{"lineNumber":61,"author":{"gitId":"Jingwencloud"},"content":"        expensesList.addAll(expenses);","lastModifiedDate":"2021-10-28"},{"lineNumber":62,"author":{"gitId":"Jingwencloud"},"content":"        Expense expenseToDelete \u003d expenses.get(0);","lastModifiedDate":"2021-10-28"},{"lineNumber":63,"author":{"gitId":"Jingwencloud"},"content":"        expensesList.remove(expenseToDelete);","lastModifiedDate":"2021-10-28"},{"lineNumber":64,"author":{"gitId":"Jingwencloud"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":65,"author":{"gitId":"Jingwencloud"},"content":"        CommandResult commandResult \u003d new DeleteExpenseCommand(INDEX_FIRST_EXPENSE).execute(modelStub);","lastModifiedDate":"2021-10-28"},{"lineNumber":66,"author":{"gitId":"Jingwencloud"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":67,"author":{"gitId":"Jingwencloud"},"content":"        assertEquals(String.format(MESSAGE_DELETEEXPENSECOMMAND_SUCCESS,","lastModifiedDate":"2021-10-28"},{"lineNumber":68,"author":{"gitId":"Jingwencloud"},"content":"                expenseToDelete.getDescription().getFullDescription()), commandResult.getFeedbackToUser());","lastModifiedDate":"2021-10-28"},{"lineNumber":69,"author":{"gitId":"Jingwencloud"},"content":"        assertEquals(expensesList, modelStub.expenses);","lastModifiedDate":"2021-10-28"},{"lineNumber":70,"author":{"gitId":"Jingwencloud"},"content":"    }","lastModifiedDate":"2021-10-28"},{"lineNumber":71,"author":{"gitId":"Jingwencloud"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":72,"author":{"gitId":"Jingwencloud"},"content":"    @Test","lastModifiedDate":"2021-10-28"},{"lineNumber":73,"author":{"gitId":"Jingwencloud"},"content":"    public void execute_invalidIndexUnfilteredList_throwsCommandException() {","lastModifiedDate":"2021-10-28"},{"lineNumber":74,"author":{"gitId":"Jingwencloud"},"content":"        MainWindow.setViewEnum(UiView.EXPENSE_PAGE);","lastModifiedDate":"2021-10-28"},{"lineNumber":75,"author":{"gitId":"Jingwencloud"},"content":"        ModelStubWithExpense modelStub \u003d new ModelStubWithExpense();","lastModifiedDate":"2021-10-28"},{"lineNumber":76,"author":{"gitId":"Jingwencloud"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(modelStub.getExpenses().size() + 1);","lastModifiedDate":"2021-10-28"},{"lineNumber":77,"author":{"gitId":"Jingwencloud"},"content":"        DeleteExpenseCommand deleteExpenseCommand \u003d new DeleteExpenseCommand(outOfBoundIndex);","lastModifiedDate":"2021-10-28"},{"lineNumber":78,"author":{"gitId":"Jingwencloud"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":79,"author":{"gitId":"Jingwencloud"},"content":"        assertThrows(CommandException.class,","lastModifiedDate":"2021-10-28"},{"lineNumber":80,"author":{"gitId":"Jingwencloud"},"content":"                MESSAGE_INVALID_EXPENSE_DISPLAYED_INDEX, () -\u003e deleteExpenseCommand.execute(modelStub));","lastModifiedDate":"2021-10-28"},{"lineNumber":81,"author":{"gitId":"Jingwencloud"},"content":"    }","lastModifiedDate":"2021-10-28"},{"lineNumber":82,"author":{"gitId":"Jingwencloud"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":83,"author":{"gitId":"Jingwencloud"},"content":"    @Test","lastModifiedDate":"2021-10-28"},{"lineNumber":84,"author":{"gitId":"Jingwencloud"},"content":"    public void execute_inValidViewPage_throwsCommandException() {","lastModifiedDate":"2021-10-28"},{"lineNumber":85,"author":{"gitId":"Jingwencloud"},"content":"        MainWindow.setViewEnum(UiView.CONTACT_PAGE);","lastModifiedDate":"2021-10-28"},{"lineNumber":86,"author":{"gitId":"Jingwencloud"},"content":"        ModelStubWithExpense modelStub \u003d new ModelStubWithExpense();","lastModifiedDate":"2021-10-28"},{"lineNumber":87,"author":{"gitId":"Jingwencloud"},"content":"        DeleteExpenseCommand deleteExpenseCommand \u003d new DeleteExpenseCommand(INDEX_FIRST_EXPENSE);","lastModifiedDate":"2021-10-28"},{"lineNumber":88,"author":{"gitId":"Jingwencloud"},"content":"        assertThrows(CommandException.class,","lastModifiedDate":"2021-10-28"},{"lineNumber":89,"author":{"gitId":"Jingwencloud"},"content":"                MESSAGE_DELETEEXPENSECOMMAND_CANNOT_BE_DELETED, () -\u003e deleteExpenseCommand.execute(modelStub));","lastModifiedDate":"2021-10-28"},{"lineNumber":90,"author":{"gitId":"Jingwencloud"},"content":"    }","lastModifiedDate":"2021-10-28"},{"lineNumber":91,"author":{"gitId":"Jingwencloud"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":92,"author":{"gitId":"Jingwencloud"},"content":"    @Test","lastModifiedDate":"2021-10-30"},{"lineNumber":93,"author":{"gitId":"Jingwencloud"},"content":"    public void execute_validIndexFilteredList_success() throws Exception {","lastModifiedDate":"2021-10-30"},{"lineNumber":94,"author":{"gitId":"Jingwencloud"},"content":"        MainWindow.setViewEnum(UiView.EXPENSE_PAGE);","lastModifiedDate":"2021-10-28"},{"lineNumber":95,"author":{"gitId":"Jingwencloud"},"content":"        model.setExpenses(model.getGroupByName(new GroupName(\"Bali\")));","lastModifiedDate":"2021-10-30"},{"lineNumber":96,"author":{"gitId":"Jingwencloud"},"content":"        showExpenseAtIndex(model, INDEX_FIRST_EXPENSE);","lastModifiedDate":"2021-10-30"},{"lineNumber":97,"author":{"gitId":"Jingwencloud"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":98,"author":{"gitId":"Jingwencloud"},"content":"        Expense expenseToDelete \u003d model.getExpenses().get(INDEX_FIRST_EXPENSE.getZeroBased());","lastModifiedDate":"2021-10-30"},{"lineNumber":99,"author":{"gitId":"Jingwencloud"},"content":"        DeleteExpenseCommand deleteExpenseCommand \u003d new DeleteExpenseCommand(INDEX_FIRST_EXPENSE);","lastModifiedDate":"2021-10-28"},{"lineNumber":100,"author":{"gitId":"Jingwencloud"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":101,"author":{"gitId":"Jingwencloud"},"content":"        Model expectedModel \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2021-10-30"},{"lineNumber":102,"author":{"gitId":"Jingwencloud"},"content":"        expectedModel.setExpenses(expectedModel.getGroupByName(new GroupName(\"Bali\")));","lastModifiedDate":"2021-10-30"},{"lineNumber":103,"author":{"gitId":"Jingwencloud"},"content":"        Group group \u003d expectedModel.getGroupByName(new GroupName(\"Bali\"));","lastModifiedDate":"2021-10-30"},{"lineNumber":104,"author":{"gitId":"Jingwencloud"},"content":"        Group newGroup \u003d group.deleteExpense(expenseToDelete);","lastModifiedDate":"2021-10-30"},{"lineNumber":105,"author":{"gitId":"Jingwencloud"},"content":"        expectedModel.setGroup(group, newGroup);","lastModifiedDate":"2021-10-30"},{"lineNumber":106,"author":{"gitId":"Jingwencloud"},"content":"        expectedModel.deleteExpense(expenseToDelete, newGroup);","lastModifiedDate":"2021-10-30"},{"lineNumber":107,"author":{"gitId":"Jingwencloud"},"content":"        showNoExpense(expectedModel);","lastModifiedDate":"2021-10-30"},{"lineNumber":108,"author":{"gitId":"Jingwencloud"},"content":"        String expectedFeedback \u003d String.format(MESSAGE_DELETEEXPENSECOMMAND_SUCCESS,","lastModifiedDate":"2021-10-30"},{"lineNumber":109,"author":{"gitId":"Jingwencloud"},"content":"                expenseToDelete.getDescription().getFullDescription());","lastModifiedDate":"2021-10-28"},{"lineNumber":110,"author":{"gitId":"Jingwencloud"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(expectedFeedback, false,","lastModifiedDate":"2021-10-30"},{"lineNumber":111,"author":{"gitId":"Jingwencloud"},"content":"            false, false, false,","lastModifiedDate":"2021-10-30"},{"lineNumber":112,"author":{"gitId":"Jingwencloud"},"content":"            true, false, false);","lastModifiedDate":"2021-10-30"},{"lineNumber":113,"author":{"gitId":"Jingwencloud"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":114,"author":{"gitId":"Jingwencloud"},"content":"        assertCommandSuccess(deleteExpenseCommand, model, expectedCommandResult, expectedModel);","lastModifiedDate":"2021-10-30"},{"lineNumber":115,"author":{"gitId":"Jingwencloud"},"content":"    }","lastModifiedDate":"2021-10-30"},{"lineNumber":116,"author":{"gitId":"Jingwencloud"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":117,"author":{"gitId":"Jingwencloud"},"content":"    @Test","lastModifiedDate":"2021-10-30"},{"lineNumber":118,"author":{"gitId":"Jingwencloud"},"content":"    public void execute_invalidIndexFilteredList_throwsCommandException() {","lastModifiedDate":"2021-10-30"},{"lineNumber":119,"author":{"gitId":"Jingwencloud"},"content":"        MainWindow.setViewEnum(UiView.EXPENSE_PAGE);","lastModifiedDate":"2021-10-30"},{"lineNumber":120,"author":{"gitId":"Jingwencloud"},"content":"        model.setExpenses(model.getGroupByName(new GroupName(\"Bali\")));","lastModifiedDate":"2021-10-30"},{"lineNumber":121,"author":{"gitId":"Jingwencloud"},"content":"        showExpenseAtIndex(model, INDEX_FIRST_EXPENSE);","lastModifiedDate":"2021-10-30"},{"lineNumber":122,"author":{"gitId":"Jingwencloud"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":123,"author":{"gitId":"Jingwencloud"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_EXPENSE;","lastModifiedDate":"2021-10-30"},{"lineNumber":124,"author":{"gitId":"Jingwencloud"},"content":"        // ensures that outOfBoundIndex is still in bounds of awe book list","lastModifiedDate":"2021-10-30"},{"lineNumber":125,"author":{"gitId":"Jingwencloud"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getAddressBook().getExpenseList().size());","lastModifiedDate":"2021-10-30"},{"lineNumber":126,"author":{"gitId":"Jingwencloud"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":127,"author":{"gitId":"Jingwencloud"},"content":"        DeleteExpenseCommand deleteExpenseCommand \u003d new DeleteExpenseCommand(outOfBoundIndex);","lastModifiedDate":"2021-10-30"},{"lineNumber":128,"author":{"gitId":"Jingwencloud"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":129,"author":{"gitId":"Jingwencloud"},"content":"        assertCommandFailure(deleteExpenseCommand, model, Messages.MESSAGE_INVALID_EXPENSE_DISPLAYED_INDEX);","lastModifiedDate":"2021-10-30"},{"lineNumber":130,"author":{"gitId":"Jingwencloud"},"content":"    }","lastModifiedDate":"2021-10-30"},{"lineNumber":131,"author":{"gitId":"Jingwencloud"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":132,"author":{"gitId":"Jingwencloud"},"content":"    @Test","lastModifiedDate":"2021-10-30"},{"lineNumber":133,"author":{"gitId":"Jingwencloud"},"content":"    public void equals() {","lastModifiedDate":"2021-10-30"},{"lineNumber":134,"author":{"gitId":"Jingwencloud"},"content":"        DeleteExpenseCommand deleteFirstCommand \u003d new DeleteExpenseCommand(INDEX_FIRST_EXPENSE);","lastModifiedDate":"2021-10-30"},{"lineNumber":135,"author":{"gitId":"Jingwencloud"},"content":"        DeleteExpenseCommand deleteSecondCommand \u003d new DeleteExpenseCommand(INDEX_SECOND_EXPENSE);","lastModifiedDate":"2021-10-30"},{"lineNumber":136,"author":{"gitId":"Jingwencloud"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":137,"author":{"gitId":"Jingwencloud"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2021-10-30"},{"lineNumber":138,"author":{"gitId":"Jingwencloud"},"content":"        assertTrue(deleteFirstCommand.equals(deleteFirstCommand));","lastModifiedDate":"2021-10-30"},{"lineNumber":139,"author":{"gitId":"Jingwencloud"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":140,"author":{"gitId":"Jingwencloud"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2021-10-30"},{"lineNumber":141,"author":{"gitId":"Jingwencloud"},"content":"        DeleteExpenseCommand deleteFirstCommandCopy \u003d new DeleteExpenseCommand(INDEX_FIRST_EXPENSE);","lastModifiedDate":"2021-10-30"},{"lineNumber":142,"author":{"gitId":"Jingwencloud"},"content":"        assertTrue(deleteFirstCommand.equals(deleteFirstCommandCopy));","lastModifiedDate":"2021-10-30"},{"lineNumber":143,"author":{"gitId":"Jingwencloud"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":144,"author":{"gitId":"Jingwencloud"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2021-10-30"},{"lineNumber":145,"author":{"gitId":"Jingwencloud"},"content":"        assertFalse(deleteFirstCommand.equals(1));","lastModifiedDate":"2021-10-30"},{"lineNumber":146,"author":{"gitId":"Jingwencloud"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":147,"author":{"gitId":"Jingwencloud"},"content":"        // null -\u003e returns false","lastModifiedDate":"2021-10-30"},{"lineNumber":148,"author":{"gitId":"Jingwencloud"},"content":"        assertFalse(deleteFirstCommand.equals(null));","lastModifiedDate":"2021-10-30"},{"lineNumber":149,"author":{"gitId":"Jingwencloud"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":150,"author":{"gitId":"Jingwencloud"},"content":"        // different expense -\u003e returns false","lastModifiedDate":"2021-10-30"},{"lineNumber":151,"author":{"gitId":"Jingwencloud"},"content":"        assertFalse(deleteFirstCommand.equals(deleteSecondCommand));","lastModifiedDate":"2021-10-30"},{"lineNumber":152,"author":{"gitId":"Jingwencloud"},"content":"    }","lastModifiedDate":"2021-10-30"},{"lineNumber":153,"author":{"gitId":"Jingwencloud"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":154,"author":{"gitId":"Jingwencloud"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":155,"author":{"gitId":"Jingwencloud"},"content":"    /**","lastModifiedDate":"2021-10-28"},{"lineNumber":156,"author":{"gitId":"Jingwencloud"},"content":"     * Updates {@code model}\u0027s filtered expense list to show no expenses.","lastModifiedDate":"2021-10-28"},{"lineNumber":157,"author":{"gitId":"Jingwencloud"},"content":"     */","lastModifiedDate":"2021-10-28"},{"lineNumber":158,"author":{"gitId":"Jingwencloud"},"content":"    private void showNoExpense(Model model) {","lastModifiedDate":"2021-10-28"},{"lineNumber":159,"author":{"gitId":"Jingwencloud"},"content":"        model.updateFilteredExpenseList(p -\u003e false);","lastModifiedDate":"2021-10-28"},{"lineNumber":160,"author":{"gitId":"Jingwencloud"},"content":"        assertTrue(model.getExpenses().isEmpty());","lastModifiedDate":"2021-10-28"},{"lineNumber":161,"author":{"gitId":"Jingwencloud"},"content":"    }","lastModifiedDate":"2021-10-28"},{"lineNumber":162,"author":{"gitId":"Jingwencloud"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":163,"author":{"gitId":"Jingwencloud"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":164,"author":{"gitId":"Jingwencloud"},"content":"    /**","lastModifiedDate":"2021-10-28"},{"lineNumber":165,"author":{"gitId":"Jingwencloud"},"content":"     * A default model stub that have all of the methods failing.","lastModifiedDate":"2021-10-28"},{"lineNumber":166,"author":{"gitId":"Jingwencloud"},"content":"     */","lastModifiedDate":"2021-10-28"},{"lineNumber":167,"author":{"gitId":"Jingwencloud"},"content":"    private class ModelStub implements Model {","lastModifiedDate":"2021-10-28"},{"lineNumber":168,"author":{"gitId":"Jingwencloud"},"content":"        @Override","lastModifiedDate":"2021-10-28"},{"lineNumber":169,"author":{"gitId":"Jingwencloud"},"content":"        public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2021-10-28"},{"lineNumber":170,"author":{"gitId":"Jingwencloud"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-28"},{"lineNumber":171,"author":{"gitId":"Jingwencloud"},"content":"        }","lastModifiedDate":"2021-10-28"},{"lineNumber":172,"author":{"gitId":"Jingwencloud"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":173,"author":{"gitId":"Jingwencloud"},"content":"        @Override","lastModifiedDate":"2021-10-28"},{"lineNumber":174,"author":{"gitId":"Jingwencloud"},"content":"        public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2021-10-28"},{"lineNumber":175,"author":{"gitId":"Jingwencloud"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-28"},{"lineNumber":176,"author":{"gitId":"Jingwencloud"},"content":"        }","lastModifiedDate":"2021-10-28"},{"lineNumber":177,"author":{"gitId":"Jingwencloud"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":178,"author":{"gitId":"Jingwencloud"},"content":"        @Override","lastModifiedDate":"2021-10-28"},{"lineNumber":179,"author":{"gitId":"Jingwencloud"},"content":"        public GuiSettings getGuiSettings() {","lastModifiedDate":"2021-10-28"},{"lineNumber":180,"author":{"gitId":"Jingwencloud"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-28"},{"lineNumber":181,"author":{"gitId":"Jingwencloud"},"content":"        }","lastModifiedDate":"2021-10-28"},{"lineNumber":182,"author":{"gitId":"Jingwencloud"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":183,"author":{"gitId":"Jingwencloud"},"content":"        @Override","lastModifiedDate":"2021-10-28"},{"lineNumber":184,"author":{"gitId":"Jingwencloud"},"content":"        public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2021-10-28"},{"lineNumber":185,"author":{"gitId":"Jingwencloud"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-28"},{"lineNumber":186,"author":{"gitId":"Jingwencloud"},"content":"        }","lastModifiedDate":"2021-10-28"},{"lineNumber":187,"author":{"gitId":"Jingwencloud"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":188,"author":{"gitId":"Jingwencloud"},"content":"        @Override","lastModifiedDate":"2021-10-28"},{"lineNumber":189,"author":{"gitId":"Jingwencloud"},"content":"        public Path getAddressBookFilePath() {","lastModifiedDate":"2021-10-28"},{"lineNumber":190,"author":{"gitId":"Jingwencloud"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-28"},{"lineNumber":191,"author":{"gitId":"Jingwencloud"},"content":"        }","lastModifiedDate":"2021-10-28"},{"lineNumber":192,"author":{"gitId":"Jingwencloud"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":193,"author":{"gitId":"Jingwencloud"},"content":"        @Override","lastModifiedDate":"2021-10-28"},{"lineNumber":194,"author":{"gitId":"Jingwencloud"},"content":"        public void setAddressBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2021-10-28"},{"lineNumber":195,"author":{"gitId":"Jingwencloud"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-28"},{"lineNumber":196,"author":{"gitId":"Jingwencloud"},"content":"        }","lastModifiedDate":"2021-10-28"},{"lineNumber":197,"author":{"gitId":"Jingwencloud"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":198,"author":{"gitId":"Jingwencloud"},"content":"        @Override","lastModifiedDate":"2021-10-28"},{"lineNumber":199,"author":{"gitId":"Jingwencloud"},"content":"        public void addPerson(Person person) {","lastModifiedDate":"2021-10-28"},{"lineNumber":200,"author":{"gitId":"Jingwencloud"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-28"},{"lineNumber":201,"author":{"gitId":"Jingwencloud"},"content":"        }","lastModifiedDate":"2021-10-28"},{"lineNumber":202,"author":{"gitId":"Jingwencloud"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":203,"author":{"gitId":"Jingwencloud"},"content":"        @Override","lastModifiedDate":"2021-10-28"},{"lineNumber":204,"author":{"gitId":"Jingwencloud"},"content":"        public void setAddressBook(ReadOnlyAddressBook newData) {","lastModifiedDate":"2021-10-28"},{"lineNumber":205,"author":{"gitId":"Jingwencloud"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-28"},{"lineNumber":206,"author":{"gitId":"Jingwencloud"},"content":"        }","lastModifiedDate":"2021-10-28"},{"lineNumber":207,"author":{"gitId":"Jingwencloud"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":208,"author":{"gitId":"Jingwencloud"},"content":"        @Override","lastModifiedDate":"2021-10-28"},{"lineNumber":209,"author":{"gitId":"Jingwencloud"},"content":"        public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2021-10-28"},{"lineNumber":210,"author":{"gitId":"Jingwencloud"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-28"},{"lineNumber":211,"author":{"gitId":"Jingwencloud"},"content":"        }","lastModifiedDate":"2021-10-28"},{"lineNumber":212,"author":{"gitId":"Jingwencloud"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":213,"author":{"gitId":"Jingwencloud"},"content":"        @Override","lastModifiedDate":"2021-10-28"},{"lineNumber":214,"author":{"gitId":"Jingwencloud"},"content":"        public Group getActiveGroupFromAddressBook() throws CommandException {","lastModifiedDate":"2021-10-28"},{"lineNumber":215,"author":{"gitId":"Jingwencloud"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-28"},{"lineNumber":216,"author":{"gitId":"Jingwencloud"},"content":"        }","lastModifiedDate":"2021-10-28"},{"lineNumber":217,"author":{"gitId":"Jingwencloud"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":218,"author":{"gitId":"Jingwencloud"},"content":"        @Override","lastModifiedDate":"2021-10-28"},{"lineNumber":219,"author":{"gitId":"Jingwencloud"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2021-10-28"},{"lineNumber":220,"author":{"gitId":"Jingwencloud"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-28"},{"lineNumber":221,"author":{"gitId":"Jingwencloud"},"content":"        }","lastModifiedDate":"2021-10-28"},{"lineNumber":222,"author":{"gitId":"Jingwencloud"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":223,"author":{"gitId":"Jingwencloud"},"content":"        @Override","lastModifiedDate":"2021-10-28"},{"lineNumber":224,"author":{"gitId":"Jingwencloud"},"content":"        public void deletePerson(Person target) {","lastModifiedDate":"2021-10-28"},{"lineNumber":225,"author":{"gitId":"Jingwencloud"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-28"},{"lineNumber":226,"author":{"gitId":"Jingwencloud"},"content":"        }","lastModifiedDate":"2021-10-28"},{"lineNumber":227,"author":{"gitId":"Jingwencloud"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":228,"author":{"gitId":"Jingwencloud"},"content":"        @Override","lastModifiedDate":"2021-10-28"},{"lineNumber":229,"author":{"gitId":"Jingwencloud"},"content":"        public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2021-10-28"},{"lineNumber":230,"author":{"gitId":"Jingwencloud"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-28"},{"lineNumber":231,"author":{"gitId":"Jingwencloud"},"content":"        }","lastModifiedDate":"2021-10-28"},{"lineNumber":232,"author":{"gitId":"Jingwencloud"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":233,"author":{"gitId":"Jingwencloud"},"content":"        @Override","lastModifiedDate":"2021-10-28"},{"lineNumber":234,"author":{"gitId":"Jingwencloud"},"content":"        public void setTransactionSummary(HashMap\u003cPerson, Cost\u003e summary) {","lastModifiedDate":"2021-10-28"},{"lineNumber":235,"author":{"gitId":"Jingwencloud"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-28"},{"lineNumber":236,"author":{"gitId":"Jingwencloud"},"content":"        }","lastModifiedDate":"2021-10-28"},{"lineNumber":237,"author":{"gitId":"Jingwencloud"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":238,"author":{"gitId":"Jingwencloud"},"content":"        @Override","lastModifiedDate":"2021-10-28"},{"lineNumber":239,"author":{"gitId":"Jingwencloud"},"content":"        public void setAllMembersOfGroup(Group group) {","lastModifiedDate":"2021-10-28"},{"lineNumber":240,"author":{"gitId":"Jingwencloud"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-28"},{"lineNumber":241,"author":{"gitId":"Jingwencloud"},"content":"        }","lastModifiedDate":"2021-10-28"},{"lineNumber":242,"author":{"gitId":"Jingwencloud"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":243,"author":{"gitId":"Jingwencloud"},"content":"        @Override","lastModifiedDate":"2021-10-28"},{"lineNumber":244,"author":{"gitId":"Jingwencloud"},"content":"        public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2021-10-28"},{"lineNumber":245,"author":{"gitId":"Jingwencloud"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-28"},{"lineNumber":246,"author":{"gitId":"Jingwencloud"},"content":"        }","lastModifiedDate":"2021-10-28"},{"lineNumber":247,"author":{"gitId":"Jingwencloud"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":248,"author":{"gitId":"Jingwencloud"},"content":"        @Override","lastModifiedDate":"2021-10-28"},{"lineNumber":249,"author":{"gitId":"Jingwencloud"},"content":"        public void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate) {","lastModifiedDate":"2021-10-28"},{"lineNumber":250,"author":{"gitId":"Jingwencloud"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-28"},{"lineNumber":251,"author":{"gitId":"Jingwencloud"},"content":"        }","lastModifiedDate":"2021-10-28"},{"lineNumber":252,"author":{"gitId":"Jingwencloud"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":253,"author":{"gitId":"Jingwencloud"},"content":"        @Override","lastModifiedDate":"2021-10-28"},{"lineNumber":254,"author":{"gitId":"Jingwencloud"},"content":"        public void deleteGroup(Group group) {","lastModifiedDate":"2021-10-28"},{"lineNumber":255,"author":{"gitId":"Jingwencloud"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-28"},{"lineNumber":256,"author":{"gitId":"Jingwencloud"},"content":"        }","lastModifiedDate":"2021-10-28"},{"lineNumber":257,"author":{"gitId":"Jingwencloud"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":258,"author":{"gitId":"Jingwencloud"},"content":"        @Override","lastModifiedDate":"2021-10-28"},{"lineNumber":259,"author":{"gitId":"Jingwencloud"},"content":"        public boolean hasGroup(Group group) {","lastModifiedDate":"2021-10-28"},{"lineNumber":260,"author":{"gitId":"Jingwencloud"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-28"},{"lineNumber":261,"author":{"gitId":"Jingwencloud"},"content":"        }","lastModifiedDate":"2021-10-28"},{"lineNumber":262,"author":{"gitId":"Jingwencloud"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":263,"author":{"gitId":"Jingwencloud"},"content":"        @Override","lastModifiedDate":"2021-10-28"},{"lineNumber":264,"author":{"gitId":"Jingwencloud"},"content":"        public void setPayments(List\u003cPayment\u003e payments) {","lastModifiedDate":"2021-10-28"},{"lineNumber":265,"author":{"gitId":"Jingwencloud"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-28"},{"lineNumber":266,"author":{"gitId":"Jingwencloud"},"content":"        }","lastModifiedDate":"2021-10-28"},{"lineNumber":267,"author":{"gitId":"Jingwencloud"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":268,"author":{"gitId":"Jingwencloud"},"content":"        /**","lastModifiedDate":"2021-10-28"},{"lineNumber":269,"author":{"gitId":"Jingwencloud"},"content":"         * Returns an unmodifiable view of the list of {@code Group} backed by the internal list of","lastModifiedDate":"2021-10-28"},{"lineNumber":270,"author":{"gitId":"Jingwencloud"},"content":"         * {@code versionedAddressBook}","lastModifiedDate":"2021-10-28"},{"lineNumber":271,"author":{"gitId":"Jingwencloud"},"content":"         */","lastModifiedDate":"2021-10-28"},{"lineNumber":272,"author":{"gitId":"Jingwencloud"},"content":"        @Override","lastModifiedDate":"2021-10-28"},{"lineNumber":273,"author":{"gitId":"Jingwencloud"},"content":"        public ObservableList\u003cGroup\u003e getFilteredGroupList() {","lastModifiedDate":"2021-10-28"},{"lineNumber":274,"author":{"gitId":"Jingwencloud"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-28"},{"lineNumber":275,"author":{"gitId":"Jingwencloud"},"content":"        }","lastModifiedDate":"2021-10-28"},{"lineNumber":276,"author":{"gitId":"Jingwencloud"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":277,"author":{"gitId":"Jingwencloud"},"content":"        @Override","lastModifiedDate":"2021-10-28"},{"lineNumber":278,"author":{"gitId":"Jingwencloud"},"content":"        public void updateFilteredGroupList(Predicate\u003cGroup\u003e predicate) {","lastModifiedDate":"2021-10-28"},{"lineNumber":279,"author":{"gitId":"Jingwencloud"},"content":"        }","lastModifiedDate":"2021-10-28"},{"lineNumber":280,"author":{"gitId":"Jingwencloud"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":281,"author":{"gitId":"Jingwencloud"},"content":"        @Override","lastModifiedDate":"2021-10-28"},{"lineNumber":282,"author":{"gitId":"Jingwencloud"},"content":"        public Group getGroupByName(GroupName groupName) {","lastModifiedDate":"2021-10-28"},{"lineNumber":283,"author":{"gitId":"Jingwencloud"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-28"},{"lineNumber":284,"author":{"gitId":"Jingwencloud"},"content":"        }","lastModifiedDate":"2021-10-28"},{"lineNumber":285,"author":{"gitId":"Jingwencloud"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":286,"author":{"gitId":"Jingwencloud"},"content":"        @Override","lastModifiedDate":"2021-10-28"},{"lineNumber":287,"author":{"gitId":"Jingwencloud"},"content":"        public void addGroup(Group group) {","lastModifiedDate":"2021-10-28"},{"lineNumber":288,"author":{"gitId":"Jingwencloud"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-28"},{"lineNumber":289,"author":{"gitId":"Jingwencloud"},"content":"        }","lastModifiedDate":"2021-10-28"},{"lineNumber":290,"author":{"gitId":"Jingwencloud"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":291,"author":{"gitId":"Jingwencloud"},"content":"        @Override","lastModifiedDate":"2021-10-28"},{"lineNumber":292,"author":{"gitId":"Jingwencloud"},"content":"        public void setGroup(Group group, Group newGroup) throws DuplicateGroupException {","lastModifiedDate":"2021-10-28"},{"lineNumber":293,"author":{"gitId":"Jingwencloud"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-28"},{"lineNumber":294,"author":{"gitId":"Jingwencloud"},"content":"        }","lastModifiedDate":"2021-10-28"},{"lineNumber":295,"author":{"gitId":"Jingwencloud"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":296,"author":{"gitId":"Jingwencloud"},"content":"        @Override","lastModifiedDate":"2021-10-28"},{"lineNumber":297,"author":{"gitId":"Jingwencloud"},"content":"        public void addExpense(Expense expense, Group group) {","lastModifiedDate":"2021-10-28"},{"lineNumber":298,"author":{"gitId":"Jingwencloud"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-28"},{"lineNumber":299,"author":{"gitId":"Jingwencloud"},"content":"        }","lastModifiedDate":"2021-10-28"},{"lineNumber":300,"author":{"gitId":"Jingwencloud"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":301,"author":{"gitId":"Jingwencloud"},"content":"        @Override","lastModifiedDate":"2021-10-28"},{"lineNumber":302,"author":{"gitId":"Jingwencloud"},"content":"        public void deleteExpense(Expense expense, Group group) {","lastModifiedDate":"2021-10-28"},{"lineNumber":303,"author":{"gitId":"Jingwencloud"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-28"},{"lineNumber":304,"author":{"gitId":"Jingwencloud"},"content":"        }","lastModifiedDate":"2021-10-28"},{"lineNumber":305,"author":{"gitId":"Jingwencloud"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":306,"author":{"gitId":"Jingwencloud"},"content":"        @Override","lastModifiedDate":"2021-10-28"},{"lineNumber":307,"author":{"gitId":"Jingwencloud"},"content":"        public ObservableList\u003cPayment\u003e getPayments() {","lastModifiedDate":"2021-10-28"},{"lineNumber":308,"author":{"gitId":"Jingwencloud"},"content":"            return null;","lastModifiedDate":"2021-10-28"},{"lineNumber":309,"author":{"gitId":"Jingwencloud"},"content":"        }","lastModifiedDate":"2021-10-28"},{"lineNumber":310,"author":{"gitId":"Jingwencloud"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":311,"author":{"gitId":"Jingwencloud"},"content":"        @Override","lastModifiedDate":"2021-10-28"},{"lineNumber":312,"author":{"gitId":"Jingwencloud"},"content":"        public ObservableList\u003cExpense\u003e getExpenses() {","lastModifiedDate":"2021-10-28"},{"lineNumber":313,"author":{"gitId":"Jingwencloud"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-28"},{"lineNumber":314,"author":{"gitId":"Jingwencloud"},"content":"        }","lastModifiedDate":"2021-10-28"},{"lineNumber":315,"author":{"gitId":"Jingwencloud"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":316,"author":{"gitId":"Jingwencloud"},"content":"        @Override","lastModifiedDate":"2021-10-28"},{"lineNumber":317,"author":{"gitId":"Jingwencloud"},"content":"        public void setExpenses(Group group) {","lastModifiedDate":"2021-10-28"},{"lineNumber":318,"author":{"gitId":"Jingwencloud"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-28"},{"lineNumber":319,"author":{"gitId":"Jingwencloud"},"content":"        }","lastModifiedDate":"2021-10-28"},{"lineNumber":320,"author":{"gitId":"Jingwencloud"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":321,"author":{"gitId":"Jingwencloud"},"content":"        @Override","lastModifiedDate":"2021-10-28"},{"lineNumber":322,"author":{"gitId":"Jingwencloud"},"content":"        public void updateFilteredExpenseList(Predicate\u003cExpense\u003e predicate) {","lastModifiedDate":"2021-10-28"},{"lineNumber":323,"author":{"gitId":"Jingwencloud"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-28"},{"lineNumber":324,"author":{"gitId":"Jingwencloud"},"content":"        }","lastModifiedDate":"2021-10-28"},{"lineNumber":325,"author":{"gitId":"Jingwencloud"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":326,"author":{"gitId":"Jingwencloud"},"content":"        @Override","lastModifiedDate":"2021-10-28"},{"lineNumber":327,"author":{"gitId":"Jingwencloud"},"content":"        public ObservableList\u003cTransactionSummary\u003e getTransactionSummary() {","lastModifiedDate":"2021-10-28"},{"lineNumber":328,"author":{"gitId":"Jingwencloud"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-28"},{"lineNumber":329,"author":{"gitId":"Jingwencloud"},"content":"        }","lastModifiedDate":"2021-10-28"},{"lineNumber":330,"author":{"gitId":"Jingwencloud"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":331,"author":{"gitId":"Jingwencloud"},"content":"        @Override","lastModifiedDate":"2021-10-28"},{"lineNumber":332,"author":{"gitId":"Jingwencloud"},"content":"        public boolean isCurrentExpenseList(Group group) {","lastModifiedDate":"2021-10-28"},{"lineNumber":333,"author":{"gitId":"Jingwencloud"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-28"},{"lineNumber":334,"author":{"gitId":"Jingwencloud"},"content":"        }","lastModifiedDate":"2021-10-28"},{"lineNumber":335,"author":{"gitId":"Jingwencloud"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":336,"author":{"gitId":"Jingwencloud"},"content":"        @Override","lastModifiedDate":"2021-10-28"},{"lineNumber":337,"author":{"gitId":"Jingwencloud"},"content":"        public Expense getExpense(int index) {","lastModifiedDate":"2021-10-28"},{"lineNumber":338,"author":{"gitId":"Jingwencloud"},"content":"            return null;","lastModifiedDate":"2021-10-28"},{"lineNumber":339,"author":{"gitId":"Jingwencloud"},"content":"        }","lastModifiedDate":"2021-10-28"},{"lineNumber":340,"author":{"gitId":"Jingwencloud"},"content":"    }","lastModifiedDate":"2021-10-28"},{"lineNumber":341,"author":{"gitId":"Jingwencloud"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":342,"author":{"gitId":"Jingwencloud"},"content":"    /**","lastModifiedDate":"2021-10-28"},{"lineNumber":343,"author":{"gitId":"Jingwencloud"},"content":"     * A Model stub that contains the expense list of the Bali group.","lastModifiedDate":"2021-10-28"},{"lineNumber":344,"author":{"gitId":"Jingwencloud"},"content":"     */","lastModifiedDate":"2021-10-28"},{"lineNumber":345,"author":{"gitId":"Jingwencloud"},"content":"    private class ModelStubWithExpense extends ModelStub {","lastModifiedDate":"2021-10-28"},{"lineNumber":346,"author":{"gitId":"Jingwencloud"},"content":"        private final ExpenseList expenses;","lastModifiedDate":"2021-10-28"},{"lineNumber":347,"author":{"gitId":"Jingwencloud"},"content":"        private FilteredList\u003cExpense\u003e filteredExpensesList;","lastModifiedDate":"2021-10-28"},{"lineNumber":348,"author":{"gitId":"Jingwencloud"},"content":"        private Group group;","lastModifiedDate":"2021-10-28"},{"lineNumber":349,"author":{"gitId":"Jingwencloud"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":350,"author":{"gitId":"Jingwencloud"},"content":"        ModelStubWithExpense() {","lastModifiedDate":"2021-10-28"},{"lineNumber":351,"author":{"gitId":"Jingwencloud"},"content":"            expenses \u003d new ExpenseList();","lastModifiedDate":"2021-10-28"},{"lineNumber":352,"author":{"gitId":"Jingwencloud"},"content":"            group \u003d model.getGroupByName(new GroupName(\"Bali\"));","lastModifiedDate":"2021-10-28"},{"lineNumber":353,"author":{"gitId":"Jingwencloud"},"content":"            setExpenses(group);","lastModifiedDate":"2021-10-28"},{"lineNumber":354,"author":{"gitId":"Jingwencloud"},"content":"            filteredExpensesList \u003d new FilteredList\u003c\u003e(expenses.asUnmodifiableObservableList());","lastModifiedDate":"2021-10-28"},{"lineNumber":355,"author":{"gitId":"Jingwencloud"},"content":"        }","lastModifiedDate":"2021-10-28"},{"lineNumber":356,"author":{"gitId":"Jingwencloud"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":357,"author":{"gitId":"Jingwencloud"},"content":"        @Override","lastModifiedDate":"2021-10-28"},{"lineNumber":358,"author":{"gitId":"Jingwencloud"},"content":"        public void setExpenses(Group group) {","lastModifiedDate":"2021-10-28"},{"lineNumber":359,"author":{"gitId":"Jingwencloud"},"content":"            requireNonNull(group);","lastModifiedDate":"2021-10-28"},{"lineNumber":360,"author":{"gitId":"Jingwencloud"},"content":"            expenses.clear();","lastModifiedDate":"2021-10-28"},{"lineNumber":361,"author":{"gitId":"Jingwencloud"},"content":"            expenses.addAll(group.getExpenses());","lastModifiedDate":"2021-10-28"},{"lineNumber":362,"author":{"gitId":"Jingwencloud"},"content":"            filteredExpensesList \u003d new FilteredList\u003c\u003e(expenses.asUnmodifiableObservableList());","lastModifiedDate":"2021-10-28"},{"lineNumber":363,"author":{"gitId":"Jingwencloud"},"content":"        }","lastModifiedDate":"2021-10-28"},{"lineNumber":364,"author":{"gitId":"Jingwencloud"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":365,"author":{"gitId":"Jingwencloud"},"content":"        @Override","lastModifiedDate":"2021-10-28"},{"lineNumber":366,"author":{"gitId":"Jingwencloud"},"content":"        public Expense getExpense(int index) {","lastModifiedDate":"2021-10-28"},{"lineNumber":367,"author":{"gitId":"Jingwencloud"},"content":"            return filteredExpensesList.get(index);","lastModifiedDate":"2021-10-30"},{"lineNumber":368,"author":{"gitId":"Jingwencloud"},"content":"        }","lastModifiedDate":"2021-10-28"},{"lineNumber":369,"author":{"gitId":"Jingwencloud"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":370,"author":{"gitId":"Jingwencloud"},"content":"        @Override","lastModifiedDate":"2021-10-28"},{"lineNumber":371,"author":{"gitId":"Jingwencloud"},"content":"        public ObservableList\u003cExpense\u003e getExpenses() {","lastModifiedDate":"2021-10-28"},{"lineNumber":372,"author":{"gitId":"Jingwencloud"},"content":"            return filteredExpensesList;","lastModifiedDate":"2021-10-28"},{"lineNumber":373,"author":{"gitId":"Jingwencloud"},"content":"        }","lastModifiedDate":"2021-10-28"},{"lineNumber":374,"author":{"gitId":"Jingwencloud"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":375,"author":{"gitId":"Jingwencloud"},"content":"        @Override","lastModifiedDate":"2021-10-28"},{"lineNumber":376,"author":{"gitId":"Jingwencloud"},"content":"        public void deleteExpense(Expense expense, Group group) {","lastModifiedDate":"2021-10-28"},{"lineNumber":377,"author":{"gitId":"Jingwencloud"},"content":"            expenses.remove(expense);","lastModifiedDate":"2021-10-28"},{"lineNumber":378,"author":{"gitId":"Jingwencloud"},"content":"            filteredExpensesList.remove(expense);","lastModifiedDate":"2021-10-28"},{"lineNumber":379,"author":{"gitId":"Jingwencloud"},"content":"        }","lastModifiedDate":"2021-10-28"},{"lineNumber":380,"author":{"gitId":"Jingwencloud"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":381,"author":{"gitId":"Jingwencloud"},"content":"        @Override","lastModifiedDate":"2021-10-28"},{"lineNumber":382,"author":{"gitId":"Jingwencloud"},"content":"        public Group getActiveGroupFromAddressBook() {","lastModifiedDate":"2021-10-28"},{"lineNumber":383,"author":{"gitId":"Jingwencloud"},"content":"            return group;","lastModifiedDate":"2021-10-28"},{"lineNumber":384,"author":{"gitId":"Jingwencloud"},"content":"        }","lastModifiedDate":"2021-10-28"},{"lineNumber":385,"author":{"gitId":"Jingwencloud"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":386,"author":{"gitId":"Jingwencloud"},"content":"        @Override","lastModifiedDate":"2021-10-28"},{"lineNumber":387,"author":{"gitId":"Jingwencloud"},"content":"        public void setGroup(Group group, Group newGroup) {","lastModifiedDate":"2021-10-28"},{"lineNumber":388,"author":{"gitId":"Jingwencloud"},"content":"            this.group \u003d newGroup;","lastModifiedDate":"2021-10-30"},{"lineNumber":389,"author":{"gitId":"Jingwencloud"},"content":"        }","lastModifiedDate":"2021-10-28"},{"lineNumber":390,"author":{"gitId":"Jingwencloud"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":391,"author":{"gitId":"Jingwencloud"},"content":"        @Override","lastModifiedDate":"2021-10-28"},{"lineNumber":392,"author":{"gitId":"Jingwencloud"},"content":"        public void updateFilteredExpenseList(Predicate\u003cExpense\u003e predicate) {","lastModifiedDate":"2021-10-28"},{"lineNumber":393,"author":{"gitId":"Jingwencloud"},"content":"            filteredExpensesList.setPredicate(predicate);","lastModifiedDate":"2021-10-28"},{"lineNumber":394,"author":{"gitId":"Jingwencloud"},"content":"        }","lastModifiedDate":"2021-10-28"},{"lineNumber":395,"author":{"gitId":"Jingwencloud"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":396,"author":{"gitId":"Jingwencloud"},"content":"    }","lastModifiedDate":"2021-10-28"},{"lineNumber":397,"author":{"gitId":"Jingwencloud"},"content":"}","lastModifiedDate":"2021-10-28"}],"authorContributionMap":{"Jingwencloud":397}},{"path":"src/test/java/seedu/awe/logic/commands/DeleteGroupCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"ramapriyan912001"},"content":"package seedu.awe.logic.commands;","lastModifiedDate":"2021-10-05"},{"lineNumber":2,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":3,"author":{"gitId":"ramapriyan912001"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-10-07"},{"lineNumber":4,"author":{"gitId":"ramapriyan912001"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-07"},{"lineNumber":5,"author":{"gitId":"chrus-chong"},"content":"import static seedu.awe.commons.core.Messages.MESSAGE_DELETEGROUPCOMMAND_GROUP_DOES_NOT_EXIST;","lastModifiedDate":"2021-10-25"},{"lineNumber":6,"author":{"gitId":"chrus-chong"},"content":"import static seedu.awe.commons.core.Messages.MESSAGE_DELETEGROUPCOMMAND_SUCCESS;","lastModifiedDate":"2021-10-25"},{"lineNumber":7,"author":{"gitId":"ramapriyan912001"},"content":"import static seedu.awe.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2021-10-07"},{"lineNumber":8,"author":{"gitId":"ramapriyan912001"},"content":"import static seedu.awe.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2021-10-07"},{"lineNumber":9,"author":{"gitId":"ramapriyan912001"},"content":"import static seedu.awe.testutil.TypicalGroups.BALI;","lastModifiedDate":"2021-10-07"},{"lineNumber":10,"author":{"gitId":"ramapriyan912001"},"content":"import static seedu.awe.testutil.TypicalGroups.OSLO;","lastModifiedDate":"2021-10-07"},{"lineNumber":11,"author":{"gitId":"ramapriyan912001"},"content":"import static seedu.awe.testutil.TypicalGroups.VIENNA_NOT_IN_GROUPS;","lastModifiedDate":"2021-10-07"},{"lineNumber":12,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":13,"author":{"gitId":"ramapriyan912001"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-07"},{"lineNumber":14,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":15,"author":{"gitId":"ramapriyan912001"},"content":"import seedu.awe.model.Model;","lastModifiedDate":"2021-10-05"},{"lineNumber":16,"author":{"gitId":"ramapriyan912001"},"content":"import seedu.awe.model.group.Group;","lastModifiedDate":"2021-10-07"},{"lineNumber":17,"author":{"gitId":"ramapriyan912001"},"content":"import seedu.awe.testutil.ModelBuilder;","lastModifiedDate":"2021-10-07"},{"lineNumber":18,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":19,"author":{"gitId":"ramapriyan912001"},"content":"public class DeleteGroupCommandTest {","lastModifiedDate":"2021-10-05"},{"lineNumber":20,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":21,"author":{"gitId":"ramapriyan912001"},"content":"    private Model model \u003d new ModelBuilder().build();","lastModifiedDate":"2021-10-07"},{"lineNumber":22,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":23,"author":{"gitId":"ramapriyan912001"},"content":"    public void resetModel() {","lastModifiedDate":"2021-10-07"},{"lineNumber":24,"author":{"gitId":"ramapriyan912001"},"content":"        model \u003d new ModelBuilder().build();","lastModifiedDate":"2021-10-07"},{"lineNumber":25,"author":{"gitId":"ramapriyan912001"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":26,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":27,"author":{"gitId":"ramapriyan912001"},"content":"    @Test","lastModifiedDate":"2021-10-07"},{"lineNumber":28,"author":{"gitId":"ramapriyan912001"},"content":"    public void execute_validGroupCommand_success() {","lastModifiedDate":"2021-10-07"},{"lineNumber":29,"author":{"gitId":"ramapriyan912001"},"content":"        // Group is within model","lastModifiedDate":"2021-10-07"},{"lineNumber":30,"author":{"gitId":"ramapriyan912001"},"content":"        Group groupToDelete \u003d BALI;","lastModifiedDate":"2021-10-07"},{"lineNumber":31,"author":{"gitId":"ramapriyan912001"},"content":"        DeleteGroupCommand deleteGroupCommand \u003d new DeleteGroupCommand(groupToDelete);","lastModifiedDate":"2021-10-07"},{"lineNumber":32,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":33,"author":{"gitId":"ramapriyan912001"},"content":"        CommandResult commandResult \u003d new CommandResult(String.format(MESSAGE_DELETEGROUPCOMMAND_SUCCESS,","lastModifiedDate":"2021-10-26"},{"lineNumber":34,"author":{"gitId":"ramapriyan912001"},"content":"                groupToDelete.getGroupName(), groupToDelete.getMembers().size()), false, false,","lastModifiedDate":"2021-10-26"},{"lineNumber":35,"author":{"gitId":"ramapriyan912001"},"content":"                true, false, false, false, false);","lastModifiedDate":"2021-10-26"},{"lineNumber":36,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":37,"author":{"gitId":"ramapriyan912001"},"content":"        assertCommandSuccess(deleteGroupCommand, model, commandResult, model);","lastModifiedDate":"2021-10-26"},{"lineNumber":38,"author":{"gitId":"ramapriyan912001"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":39,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":40,"author":{"gitId":"ramapriyan912001"},"content":"    @Test","lastModifiedDate":"2021-10-07"},{"lineNumber":41,"author":{"gitId":"ramapriyan912001"},"content":"    public void execute_invalidGroup_throwsCommandException() {","lastModifiedDate":"2021-10-07"},{"lineNumber":42,"author":{"gitId":"ramapriyan912001"},"content":"        // Group not in model","lastModifiedDate":"2021-10-07"},{"lineNumber":43,"author":{"gitId":"ramapriyan912001"},"content":"        Group groupNotInModel \u003d VIENNA_NOT_IN_GROUPS;","lastModifiedDate":"2021-10-07"},{"lineNumber":44,"author":{"gitId":"ramapriyan912001"},"content":"        DeleteGroupCommand deleteGroupCommand \u003d new DeleteGroupCommand(groupNotInModel);","lastModifiedDate":"2021-10-07"},{"lineNumber":45,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":46,"author":{"gitId":"chrus-chong"},"content":"        assertCommandFailure(deleteGroupCommand, model, MESSAGE_DELETEGROUPCOMMAND_GROUP_DOES_NOT_EXIST);","lastModifiedDate":"2021-10-25"},{"lineNumber":47,"author":{"gitId":"ramapriyan912001"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":48,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":49,"author":{"gitId":"ramapriyan912001"},"content":"    @Test","lastModifiedDate":"2021-10-07"},{"lineNumber":50,"author":{"gitId":"ramapriyan912001"},"content":"    public void equals() {","lastModifiedDate":"2021-10-07"},{"lineNumber":51,"author":{"gitId":"ramapriyan912001"},"content":"        DeleteGroupCommand deleteFirstGroupCommand \u003d new DeleteGroupCommand(BALI);","lastModifiedDate":"2021-10-07"},{"lineNumber":52,"author":{"gitId":"ramapriyan912001"},"content":"        DeleteGroupCommand deleteSecondGroupCommand \u003d new DeleteGroupCommand(OSLO);","lastModifiedDate":"2021-10-07"},{"lineNumber":53,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":54,"author":{"gitId":"ramapriyan912001"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2021-10-07"},{"lineNumber":55,"author":{"gitId":"ramapriyan912001"},"content":"        assertTrue(deleteFirstGroupCommand.equals(deleteFirstGroupCommand));","lastModifiedDate":"2021-10-07"},{"lineNumber":56,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":57,"author":{"gitId":"ramapriyan912001"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2021-10-07"},{"lineNumber":58,"author":{"gitId":"ramapriyan912001"},"content":"        DeleteGroupCommand deleteFirstGroupCommandCopy \u003d new DeleteGroupCommand(BALI);","lastModifiedDate":"2021-10-07"},{"lineNumber":59,"author":{"gitId":"ramapriyan912001"},"content":"        assertTrue(deleteFirstGroupCommand.equals(deleteFirstGroupCommandCopy));","lastModifiedDate":"2021-10-07"},{"lineNumber":60,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":61,"author":{"gitId":"ramapriyan912001"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2021-10-07"},{"lineNumber":62,"author":{"gitId":"ramapriyan912001"},"content":"        assertFalse(deleteFirstGroupCommand.equals(1));","lastModifiedDate":"2021-10-07"},{"lineNumber":63,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":64,"author":{"gitId":"ramapriyan912001"},"content":"        // null -\u003e returns false","lastModifiedDate":"2021-10-07"},{"lineNumber":65,"author":{"gitId":"ramapriyan912001"},"content":"        assertFalse(deleteFirstGroupCommand.equals(null));","lastModifiedDate":"2021-10-07"},{"lineNumber":66,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":67,"author":{"gitId":"ramapriyan912001"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2021-10-07"},{"lineNumber":68,"author":{"gitId":"ramapriyan912001"},"content":"        assertFalse(deleteFirstGroupCommand.equals(deleteSecondGroupCommand));","lastModifiedDate":"2021-10-07"},{"lineNumber":69,"author":{"gitId":"ramapriyan912001"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":70,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":71,"author":{"gitId":"ramapriyan912001"},"content":"    /**","lastModifiedDate":"2021-10-07"},{"lineNumber":72,"author":{"gitId":"ramapriyan912001"},"content":"     * Updates {@code model}\u0027s filtered list to show no group.","lastModifiedDate":"2021-10-07"},{"lineNumber":73,"author":{"gitId":"ramapriyan912001"},"content":"     */","lastModifiedDate":"2021-10-07"},{"lineNumber":74,"author":{"gitId":"ramapriyan912001"},"content":"    private void showNoGroup(Model model) {","lastModifiedDate":"2021-10-07"},{"lineNumber":75,"author":{"gitId":"ramapriyan912001"},"content":"        model.updateFilteredGroupList(g -\u003e false);","lastModifiedDate":"2021-10-07"},{"lineNumber":76,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":77,"author":{"gitId":"ramapriyan912001"},"content":"        assertTrue(model.getFilteredGroupList().isEmpty());","lastModifiedDate":"2021-10-07"},{"lineNumber":78,"author":{"gitId":"ramapriyan912001"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":79,"author":{"gitId":"ramapriyan912001"},"content":"}","lastModifiedDate":"2021-10-05"}],"authorContributionMap":{"chrus-chong":3,"ramapriyan912001":76}},{"path":"src/test/java/seedu/awe/logic/commands/EditContactCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"ramapriyan912001"},"content":"package seedu.awe.logic.commands;","lastModifiedDate":"2021-10-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"ramapriyan912001"},"content":"import static seedu.awe.commons.core.Messages.MESSAGE_EDITCONTACTCOMMAND_CANNOT_BE_EDITED;","lastModifiedDate":"2021-10-30"},{"lineNumber":6,"author":{"gitId":"chrus-chong"},"content":"import static seedu.awe.commons.core.Messages.MESSAGE_EDITCONTACTCOMMAND_DUPLICATE_PERSON;","lastModifiedDate":"2021-10-25"},{"lineNumber":7,"author":{"gitId":"chrus-chong"},"content":"import static seedu.awe.commons.core.Messages.MESSAGE_EDITCONTACTCOMMAND_EDIT_PERSON_SUCCESS;","lastModifiedDate":"2021-10-25"},{"lineNumber":8,"author":{"gitId":"ramapriyan912001"},"content":"import static seedu.awe.logic.commands.CommandTestUtil.DESC_AMY;","lastModifiedDate":"2021-10-05"},{"lineNumber":9,"author":{"gitId":"ramapriyan912001"},"content":"import static seedu.awe.logic.commands.CommandTestUtil.DESC_BOB;","lastModifiedDate":"2021-10-05"},{"lineNumber":10,"author":{"gitId":"ramapriyan912001"},"content":"import static seedu.awe.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2021-10-05"},{"lineNumber":11,"author":{"gitId":"ramapriyan912001"},"content":"import static seedu.awe.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2021-10-05"},{"lineNumber":12,"author":{"gitId":"ramapriyan912001"},"content":"import static seedu.awe.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2021-10-05"},{"lineNumber":13,"author":{"gitId":"ramapriyan912001"},"content":"import static seedu.awe.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2021-10-05"},{"lineNumber":14,"author":{"gitId":"ramapriyan912001"},"content":"import static seedu.awe.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2021-10-05"},{"lineNumber":15,"author":{"gitId":"ramapriyan912001"},"content":"import static seedu.awe.logic.commands.CommandTestUtil.showPersonAtIndex;","lastModifiedDate":"2021-10-05"},{"lineNumber":16,"author":{"gitId":"ramapriyan912001"},"content":"import static seedu.awe.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2021-10-05"},{"lineNumber":17,"author":{"gitId":"ramapriyan912001"},"content":"import static seedu.awe.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2021-10-05"},{"lineNumber":18,"author":{"gitId":"ramapriyan912001"},"content":"import static seedu.awe.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2021-10-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":22,"author":{"gitId":"ramapriyan912001"},"content":"import seedu.awe.commons.core.Messages;","lastModifiedDate":"2021-10-05"},{"lineNumber":23,"author":{"gitId":"ramapriyan912001"},"content":"import seedu.awe.commons.core.index.Index;","lastModifiedDate":"2021-10-05"},{"lineNumber":24,"author":{"gitId":"marcuspeh"},"content":"import seedu.awe.logic.commands.EditContactCommand.EditPersonDescriptor;","lastModifiedDate":"2021-10-11"},{"lineNumber":25,"author":{"gitId":"ramapriyan912001"},"content":"import seedu.awe.model.AddressBook;","lastModifiedDate":"2021-10-05"},{"lineNumber":26,"author":{"gitId":"ramapriyan912001"},"content":"import seedu.awe.model.Model;","lastModifiedDate":"2021-10-05"},{"lineNumber":27,"author":{"gitId":"ramapriyan912001"},"content":"import seedu.awe.model.ModelManager;","lastModifiedDate":"2021-10-05"},{"lineNumber":28,"author":{"gitId":"ramapriyan912001"},"content":"import seedu.awe.model.UserPrefs;","lastModifiedDate":"2021-10-05"},{"lineNumber":29,"author":{"gitId":"ramapriyan912001"},"content":"import seedu.awe.model.person.Person;","lastModifiedDate":"2021-10-05"},{"lineNumber":30,"author":{"gitId":"ramapriyan912001"},"content":"import seedu.awe.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2021-10-05"},{"lineNumber":31,"author":{"gitId":"ramapriyan912001"},"content":"import seedu.awe.testutil.PersonBuilder;","lastModifiedDate":"2021-10-05"},{"lineNumber":32,"author":{"gitId":"ramapriyan912001"},"content":"import seedu.awe.ui.MainWindow;","lastModifiedDate":"2021-10-30"},{"lineNumber":33,"author":{"gitId":"ramapriyan912001"},"content":"import seedu.awe.ui.UiView;","lastModifiedDate":"2021-10-30"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-05-04"},{"lineNumber":36,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) and unit tests for EditCommand.","lastModifiedDate":"2020-12-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-05-04"},{"lineNumber":38,"author":{"gitId":"marcuspeh"},"content":"public class EditContactCommandTest {","lastModifiedDate":"2021-10-11"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2017-07-19"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":42,"author":{"gitId":"ramapriyan912001"},"content":"    @Test","lastModifiedDate":"2021-10-30"},{"lineNumber":43,"author":{"gitId":"ramapriyan912001"},"content":"    public void execute_notOnContactsPage_failure() {","lastModifiedDate":"2021-10-30"},{"lineNumber":44,"author":{"gitId":"ramapriyan912001"},"content":"        MainWindow.setViewEnum(UiView.EXPENSE_PAGE);","lastModifiedDate":"2021-10-30"},{"lineNumber":45,"author":{"gitId":"ramapriyan912001"},"content":"        Person editedPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2021-10-30"},{"lineNumber":46,"author":{"gitId":"ramapriyan912001"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder(editedPerson).build();","lastModifiedDate":"2021-10-30"},{"lineNumber":47,"author":{"gitId":"ramapriyan912001"},"content":"        EditContactCommand editContactCommand \u003d new EditContactCommand(INDEX_FIRST_PERSON, descriptor);","lastModifiedDate":"2021-10-30"},{"lineNumber":48,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":49,"author":{"gitId":"ramapriyan912001"},"content":"        String expectedMessage \u003d MESSAGE_EDITCONTACTCOMMAND_CANNOT_BE_EDITED;","lastModifiedDate":"2021-10-30"},{"lineNumber":50,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":51,"author":{"gitId":"ramapriyan912001"},"content":"        assertCommandFailure(editContactCommand, model, expectedMessage);","lastModifiedDate":"2021-10-30"},{"lineNumber":52,"author":{"gitId":"ramapriyan912001"},"content":"    }","lastModifiedDate":"2021-10-30"},{"lineNumber":53,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public void execute_allFieldsSpecifiedUnfilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":56,"author":{"gitId":"ramapriyan912001"},"content":"        MainWindow.setViewEnum(UiView.CONTACT_PAGE);","lastModifiedDate":"2021-10-30"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2017-05-26"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder(editedPerson).build();","lastModifiedDate":"2017-06-05"},{"lineNumber":59,"author":{"gitId":"marcuspeh"},"content":"        EditContactCommand editContactCommand \u003d new EditContactCommand(INDEX_FIRST_PERSON, descriptor);","lastModifiedDate":"2021-10-11"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":61,"author":{"gitId":"chrus-chong"},"content":"        String expectedMessage \u003d String.format(MESSAGE_EDITCONTACTCOMMAND_EDIT_PERSON_SUCCESS, editedPerson);","lastModifiedDate":"2021-10-25"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2017-06-05"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        expectedModel.setPerson(model.getFilteredPersonList().get(0), editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":66,"author":{"gitId":"marcuspeh"},"content":"        assertCommandSuccess(editContactCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2021-10-11"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public void execute_someFieldsSpecifiedUnfilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":71,"author":{"gitId":"ramapriyan912001"},"content":"        MainWindow.setViewEnum(UiView.CONTACT_PAGE);","lastModifiedDate":"2021-10-30"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        Index indexLastPerson \u003d Index.fromOneBased(model.getFilteredPersonList().size());","lastModifiedDate":"2017-05-18"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        Person lastPerson \u003d model.getFilteredPersonList().get(indexLastPerson.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        PersonBuilder personInList \u003d new PersonBuilder(lastPerson);","lastModifiedDate":"2017-05-18"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d personInList.withName(VALID_NAME_BOB).withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2017-05-18"},{"lineNumber":77,"author":{"gitId":"-"},"content":"                .withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2017-05-18"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB)","lastModifiedDate":"2017-05-18"},{"lineNumber":80,"author":{"gitId":"-"},"content":"                .withPhone(VALID_PHONE_BOB).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2017-05-18"},{"lineNumber":81,"author":{"gitId":"marcuspeh"},"content":"        EditContactCommand editContactCommand \u003d new EditContactCommand(indexLastPerson, descriptor);","lastModifiedDate":"2021-10-11"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":83,"author":{"gitId":"chrus-chong"},"content":"        String expectedMessage \u003d String.format(MESSAGE_EDITCONTACTCOMMAND_EDIT_PERSON_SUCCESS, editedPerson);","lastModifiedDate":"2021-10-25"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2017-05-18"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        expectedModel.setPerson(lastPerson, editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":88,"author":{"gitId":"marcuspeh"},"content":"        assertCommandSuccess(editContactCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2021-10-11"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    public void execute_noFieldSpecifiedUnfilteredList_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":93,"author":{"gitId":"ramapriyan912001"},"content":"        MainWindow.setViewEnum(UiView.CONTACT_PAGE);","lastModifiedDate":"2021-10-30"},{"lineNumber":94,"author":{"gitId":"marcuspeh"},"content":"        EditContactCommand editContactCommand \u003d new EditContactCommand(INDEX_FIRST_PERSON, new EditPersonDescriptor());","lastModifiedDate":"2021-10-11"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":97,"author":{"gitId":"chrus-chong"},"content":"        String expectedMessage \u003d String.format(MESSAGE_EDITCONTACTCOMMAND_EDIT_PERSON_SUCCESS, editedPerson);","lastModifiedDate":"2021-10-25"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2017-05-18"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":101,"author":{"gitId":"marcuspeh"},"content":"        assertCommandSuccess(editContactCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2021-10-11"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    public void execute_filteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":106,"author":{"gitId":"ramapriyan912001"},"content":"        MainWindow.setViewEnum(UiView.CONTACT_PAGE);","lastModifiedDate":"2021-10-30"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        Person personInFilteredList \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d new PersonBuilder(personInFilteredList).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2017-05-18"},{"lineNumber":111,"author":{"gitId":"marcuspeh"},"content":"        EditContactCommand editContactCommand \u003d new EditContactCommand(INDEX_FIRST_PERSON,","lastModifiedDate":"2021-10-11"},{"lineNumber":112,"author":{"gitId":"-"},"content":"                new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB).build());","lastModifiedDate":"2017-05-18"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":114,"author":{"gitId":"chrus-chong"},"content":"        String expectedMessage \u003d String.format(MESSAGE_EDITCONTACTCOMMAND_EDIT_PERSON_SUCCESS, editedPerson);","lastModifiedDate":"2021-10-25"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2017-05-18"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        expectedModel.setPerson(model.getFilteredPersonList().get(0), editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":119,"author":{"gitId":"marcuspeh"},"content":"        assertCommandSuccess(editContactCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2021-10-11"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    public void execute_duplicatePersonUnfilteredList_failure() {","lastModifiedDate":"2017-08-15"},{"lineNumber":124,"author":{"gitId":"ramapriyan912001"},"content":"        MainWindow.setViewEnum(UiView.CONTACT_PAGE);","lastModifiedDate":"2021-10-30"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        Person firstPerson \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder(firstPerson).build();","lastModifiedDate":"2017-06-05"},{"lineNumber":127,"author":{"gitId":"marcuspeh"},"content":"        EditContactCommand editContactCommand \u003d new EditContactCommand(INDEX_SECOND_PERSON, descriptor);","lastModifiedDate":"2021-10-11"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":129,"author":{"gitId":"chrus-chong"},"content":"        assertCommandFailure(editContactCommand, model, MESSAGE_EDITCONTACTCOMMAND_DUPLICATE_PERSON);","lastModifiedDate":"2021-10-25"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    public void execute_duplicatePersonFilteredList_failure() {","lastModifiedDate":"2017-08-15"},{"lineNumber":134,"author":{"gitId":"ramapriyan912001"},"content":"        MainWindow.setViewEnum(UiView.CONTACT_PAGE);","lastModifiedDate":"2021-10-30"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":137,"author":{"gitId":"ramapriyan912001"},"content":"        // edit person in filtered list into a duplicate in awe book","lastModifiedDate":"2021-10-05"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        Person personInList \u003d model.getAddressBook().getPersonList().get(INDEX_SECOND_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":139,"author":{"gitId":"marcuspeh"},"content":"        EditContactCommand editContactCommand \u003d new EditContactCommand(INDEX_FIRST_PERSON,","lastModifiedDate":"2021-10-11"},{"lineNumber":140,"author":{"gitId":"-"},"content":"                new EditPersonDescriptorBuilder(personInList).build());","lastModifiedDate":"2017-05-18"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":142,"author":{"gitId":"chrus-chong"},"content":"        assertCommandFailure(editContactCommand, model, MESSAGE_EDITCONTACTCOMMAND_DUPLICATE_PERSON);","lastModifiedDate":"2021-10-25"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    public void execute_invalidPersonIndexUnfilteredList_failure() {","lastModifiedDate":"2017-08-15"},{"lineNumber":147,"author":{"gitId":"ramapriyan912001"},"content":"        MainWindow.setViewEnum(UiView.CONTACT_PAGE);","lastModifiedDate":"2021-10-30"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredPersonList().size() + 1);","lastModifiedDate":"2017-05-18"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB).build();","lastModifiedDate":"2017-05-22"},{"lineNumber":150,"author":{"gitId":"marcuspeh"},"content":"        EditContactCommand editContactCommand \u003d new EditContactCommand(outOfBoundIndex, descriptor);","lastModifiedDate":"2021-10-11"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":152,"author":{"gitId":"marcuspeh"},"content":"        assertCommandFailure(editContactCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2021-10-11"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":155,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-18"},{"lineNumber":156,"author":{"gitId":"-"},"content":"     * Edit filtered list where index is larger than size of filtered list,","lastModifiedDate":"2017-05-18"},{"lineNumber":157,"author":{"gitId":"ramapriyan912001"},"content":"     * but smaller than size of awe book","lastModifiedDate":"2021-10-05"},{"lineNumber":158,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-18"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    public void execute_invalidPersonIndexFilteredList_failure() {","lastModifiedDate":"2017-08-15"},{"lineNumber":161,"author":{"gitId":"ramapriyan912001"},"content":"        MainWindow.setViewEnum(UiView.CONTACT_PAGE);","lastModifiedDate":"2021-10-30"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2017-05-18"},{"lineNumber":164,"author":{"gitId":"ramapriyan912001"},"content":"        // ensures that outOfBoundIndex is still in bounds of awe book list","lastModifiedDate":"2021-10-05"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getAddressBook().getPersonList().size());","lastModifiedDate":"2017-05-18"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":167,"author":{"gitId":"marcuspeh"},"content":"        EditContactCommand editContactCommand \u003d new EditContactCommand(outOfBoundIndex,","lastModifiedDate":"2021-10-11"},{"lineNumber":168,"author":{"gitId":"-"},"content":"                new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB).build());","lastModifiedDate":"2017-05-18"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":170,"author":{"gitId":"marcuspeh"},"content":"        assertCommandFailure(editContactCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2021-10-11"},{"lineNumber":171,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":173,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-01-23"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-08-08"},{"lineNumber":175,"author":{"gitId":"ramapriyan912001"},"content":"        MainWindow.setViewEnum(UiView.CONTACT_PAGE);","lastModifiedDate":"2021-10-30"},{"lineNumber":176,"author":{"gitId":"marcuspeh"},"content":"        final EditContactCommand standardCommand \u003d new EditContactCommand(INDEX_FIRST_PERSON, DESC_AMY);","lastModifiedDate":"2021-10-11"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-08"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        EditPersonDescriptor copyDescriptor \u003d new EditPersonDescriptor(DESC_AMY);","lastModifiedDate":"2017-05-08"},{"lineNumber":180,"author":{"gitId":"marcuspeh"},"content":"        EditContactCommand commandWithSameValues \u003d new EditContactCommand(INDEX_FIRST_PERSON, copyDescriptor);","lastModifiedDate":"2021-10-11"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        assertTrue(standardCommand.equals(commandWithSameValues));","lastModifiedDate":"2017-05-08"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":183,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-08"},{"lineNumber":184,"author":{"gitId":"-"},"content":"        assertTrue(standardCommand.equals(standardCommand));","lastModifiedDate":"2017-05-08"},{"lineNumber":185,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":186,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":187,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(null));","lastModifiedDate":"2017-05-08"},{"lineNumber":188,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":189,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":190,"author":{"gitId":"ramapriyan912001"},"content":"        assertFalse(standardCommand.equals(new ClearAllDataCommand()));","lastModifiedDate":"2021-10-30"},{"lineNumber":191,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":192,"author":{"gitId":"-"},"content":"        // different index -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":193,"author":{"gitId":"marcuspeh"},"content":"        assertFalse(standardCommand.equals(new EditContactCommand(INDEX_SECOND_PERSON, DESC_AMY)));","lastModifiedDate":"2021-10-11"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":195,"author":{"gitId":"-"},"content":"        // different descriptor -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":196,"author":{"gitId":"marcuspeh"},"content":"        assertFalse(standardCommand.equals(new EditContactCommand(INDEX_FIRST_PERSON, DESC_BOB)));","lastModifiedDate":"2021-10-11"},{"lineNumber":197,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-08"},{"lineNumber":198,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":199,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-08"}],"authorContributionMap":{"marcuspeh":20,"chrus-chong":8,"ramapriyan912001":49,"-":122}},{"path":"src/test/java/seedu/awe/logic/commands/EditPersonDescriptorTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"ramapriyan912001"},"content":"package seedu.awe.logic.commands;","lastModifiedDate":"2021-10-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"ramapriyan912001"},"content":"import static seedu.awe.logic.commands.CommandTestUtil.DESC_AMY;","lastModifiedDate":"2021-10-05"},{"lineNumber":6,"author":{"gitId":"ramapriyan912001"},"content":"import static seedu.awe.logic.commands.CommandTestUtil.DESC_BOB;","lastModifiedDate":"2021-10-05"},{"lineNumber":7,"author":{"gitId":"ramapriyan912001"},"content":"import static seedu.awe.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2021-10-05"},{"lineNumber":8,"author":{"gitId":"ramapriyan912001"},"content":"import static seedu.awe.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2021-10-05"},{"lineNumber":9,"author":{"gitId":"ramapriyan912001"},"content":"import static seedu.awe.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2021-10-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":13,"author":{"gitId":"marcuspeh"},"content":"import seedu.awe.logic.commands.EditContactCommand.EditPersonDescriptor;","lastModifiedDate":"2021-10-11"},{"lineNumber":14,"author":{"gitId":"ramapriyan912001"},"content":"import seedu.awe.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2021-10-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class EditPersonDescriptorTest {","lastModifiedDate":"2017-05-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptorWithSameValues \u003d new EditPersonDescriptor(DESC_AMY);","lastModifiedDate":"2017-05-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        assertTrue(DESC_AMY.equals(descriptorWithSameValues));","lastModifiedDate":"2017-05-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        assertTrue(DESC_AMY.equals(DESC_AMY));","lastModifiedDate":"2017-05-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(null));","lastModifiedDate":"2017-05-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(5));","lastModifiedDate":"2017-05-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(DESC_BOB));","lastModifiedDate":"2017-05-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        // different name -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        EditPersonDescriptor editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2017-05-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        // different phone -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2017-05-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        // different tags -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2017-05-05"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":48,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-05"}],"authorContributionMap":{"marcuspeh":1,"ramapriyan912001":7,"-":40}},{"path":"src/test/java/seedu/awe/logic/commands/ExitCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"ramapriyan912001"},"content":"package seedu.awe.logic.commands;","lastModifiedDate":"2021-10-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":3,"author":{"gitId":"chrus-chong"},"content":"import static seedu.awe.commons.core.Messages.MESSAGE_EXITCOMMAND_ACKNOWLEDGEMENT;","lastModifiedDate":"2021-10-25"},{"lineNumber":4,"author":{"gitId":"ramapriyan912001"},"content":"import static seedu.awe.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2021-10-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":8,"author":{"gitId":"ramapriyan912001"},"content":"import seedu.awe.model.Model;","lastModifiedDate":"2021-10-05"},{"lineNumber":9,"author":{"gitId":"ramapriyan912001"},"content":"import seedu.awe.model.ModelManager;","lastModifiedDate":"2021-10-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class ExitCommandTest {","lastModifiedDate":"2017-06-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager();","lastModifiedDate":"2018-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    private Model expectedModel \u003d new ModelManager();","lastModifiedDate":"2018-12-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public void execute_exit_success() {","lastModifiedDate":"2017-06-08"},{"lineNumber":17,"author":{"gitId":"chrus-chong"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(MESSAGE_EXITCOMMAND_ACKNOWLEDGEMENT,","lastModifiedDate":"2021-10-25"},{"lineNumber":18,"author":{"gitId":"chrus-chong"},"content":"                false, true, false, false,","lastModifiedDate":"2021-10-25"},{"lineNumber":19,"author":{"gitId":"chrus-chong"},"content":"                false, false, false);","lastModifiedDate":"2021-10-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ExitCommand(), model, expectedCommandResult, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-08"}],"authorContributionMap":{"chrus-chong":4,"ramapriyan912001":4,"-":14}},{"path":"src/test/java/seedu/awe/logic/commands/FindContactsCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"ramapriyan912001"},"content":"package seedu.awe.logic.commands;","lastModifiedDate":"2021-10-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"ramapriyan912001"},"content":"import static seedu.awe.commons.core.Messages.MESSAGE_PERSONS_LISTED_OVERVIEW;","lastModifiedDate":"2021-10-05"},{"lineNumber":7,"author":{"gitId":"ramapriyan912001"},"content":"import static seedu.awe.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2021-10-05"},{"lineNumber":8,"author":{"gitId":"ramapriyan912001"},"content":"import static seedu.awe.testutil.TypicalPersons.CARL;","lastModifiedDate":"2021-10-05"},{"lineNumber":9,"author":{"gitId":"ramapriyan912001"},"content":"import static seedu.awe.testutil.TypicalPersons.ELLE;","lastModifiedDate":"2021-10-05"},{"lineNumber":10,"author":{"gitId":"ramapriyan912001"},"content":"import static seedu.awe.testutil.TypicalPersons.FIONA;","lastModifiedDate":"2021-10-05"},{"lineNumber":11,"author":{"gitId":"ramapriyan912001"},"content":"import static seedu.awe.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2021-10-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"ramapriyan912001"},"content":"import seedu.awe.model.Model;","lastModifiedDate":"2021-10-05"},{"lineNumber":19,"author":{"gitId":"ramapriyan912001"},"content":"import seedu.awe.model.ModelManager;","lastModifiedDate":"2021-10-05"},{"lineNumber":20,"author":{"gitId":"ramapriyan912001"},"content":"import seedu.awe.model.UserPrefs;","lastModifiedDate":"2021-10-05"},{"lineNumber":21,"author":{"gitId":"ramapriyan912001"},"content":"import seedu.awe.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2021-10-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) for {@code FindCommand}.","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"marcuspeh"},"content":"public class FindContactsCommandTest {","lastModifiedDate":"2021-10-10"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2017-07-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private Model expectedModel \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2018-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-06-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate firstPredicate \u003d","lastModifiedDate":"2017-06-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"                new NameContainsKeywordsPredicate(Collections.singletonList(\"first\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate secondPredicate \u003d","lastModifiedDate":"2017-06-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"                new NameContainsKeywordsPredicate(Collections.singletonList(\"second\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":37,"author":{"gitId":"marcuspeh"},"content":"        FindContactsCommand findFirstCommand \u003d new FindContactsCommand(firstPredicate);","lastModifiedDate":"2021-10-10"},{"lineNumber":38,"author":{"gitId":"marcuspeh"},"content":"        FindContactsCommand findSecondCommand \u003d new FindContactsCommand(secondPredicate);","lastModifiedDate":"2021-10-10"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertTrue(findFirstCommand.equals(findFirstCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":44,"author":{"gitId":"marcuspeh"},"content":"        FindContactsCommand findFirstCommandCopy \u003d new FindContactsCommand(firstPredicate);","lastModifiedDate":"2021-10-10"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertTrue(findFirstCommand.equals(findFirstCommandCopy));","lastModifiedDate":"2017-06-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertFalse(findFirstCommand.equals(1));","lastModifiedDate":"2017-06-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        assertFalse(findFirstCommand.equals(null));","lastModifiedDate":"2017-06-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        assertFalse(findFirstCommand.equals(findSecondCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public void execute_zeroKeywords_noPersonFound() {","lastModifiedDate":"2017-08-15"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MESSAGE_PERSONS_LISTED_OVERVIEW, 0);","lastModifiedDate":"2017-06-12"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate \u003d preparePredicate(\" \");","lastModifiedDate":"2018-08-08"},{"lineNumber":61,"author":{"gitId":"marcuspeh"},"content":"        FindContactsCommand command \u003d new FindContactsCommand(predicate);","lastModifiedDate":"2021-10-10"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        expectedModel.updateFilteredPersonList(predicate);","lastModifiedDate":"2018-08-08"},{"lineNumber":63,"author":{"gitId":"ramapriyan912001"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel, false, true, false, false, false);","lastModifiedDate":"2021-10-21"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertEquals(Collections.emptyList(), model.getFilteredPersonList());","lastModifiedDate":"2018-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public void execute_multipleKeywords_multiplePersonsFound() {","lastModifiedDate":"2017-08-15"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MESSAGE_PERSONS_LISTED_OVERVIEW, 3);","lastModifiedDate":"2017-06-12"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate \u003d preparePredicate(\"Kurz Elle Kunz\");","lastModifiedDate":"2018-08-08"},{"lineNumber":71,"author":{"gitId":"marcuspeh"},"content":"        FindContactsCommand command \u003d new FindContactsCommand(predicate);","lastModifiedDate":"2021-10-10"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        expectedModel.updateFilteredPersonList(predicate);","lastModifiedDate":"2018-08-08"},{"lineNumber":73,"author":{"gitId":"ramapriyan912001"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel, false, true, false, false, false);","lastModifiedDate":"2021-10-21"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        assertEquals(Arrays.asList(CARL, ELLE, FIONA), model.getFilteredPersonList());","lastModifiedDate":"2018-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-12"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     * Parses {@code userInput} into a {@code NameContainsKeywordsPredicate}.","lastModifiedDate":"2018-08-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-12"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    private NameContainsKeywordsPredicate preparePredicate(String userInput) {","lastModifiedDate":"2018-08-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        return new NameContainsKeywordsPredicate(Arrays.asList(userInput.split(\"\\\\s+\")));","lastModifiedDate":"2018-08-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":83,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"marcuspeh":6,"ramapriyan912001":13,"-":64}},{"path":"src/test/java/seedu/awe/logic/commands/FindExpensesCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Jingwencloud"},"content":"package seedu.awe.logic.commands;","lastModifiedDate":"2021-10-14"},{"lineNumber":2,"author":{"gitId":"Jingwencloud"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":3,"author":{"gitId":"Jingwencloud"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-14"},{"lineNumber":4,"author":{"gitId":"Jingwencloud"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-10-14"},{"lineNumber":5,"author":{"gitId":"Jingwencloud"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-14"},{"lineNumber":6,"author":{"gitId":"Jingwencloud"},"content":"import static seedu.awe.commons.core.Messages.MESSAGE_EXPENSES_LISTED_OVERVIEW;","lastModifiedDate":"2021-10-14"},{"lineNumber":7,"author":{"gitId":"Jingwencloud"},"content":"import static seedu.awe.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2021-10-14"},{"lineNumber":8,"author":{"gitId":"Jingwencloud"},"content":"import static seedu.awe.testutil.TypicalExpenses.BUFFET;","lastModifiedDate":"2021-10-28"},{"lineNumber":9,"author":{"gitId":"Jingwencloud"},"content":"import static seedu.awe.testutil.TypicalExpenses.SOUVENIRS;","lastModifiedDate":"2021-10-28"},{"lineNumber":10,"author":{"gitId":"Jingwencloud"},"content":"import static seedu.awe.testutil.TypicalExpenses.getTypicalAddressBook;","lastModifiedDate":"2021-10-15"},{"lineNumber":11,"author":{"gitId":"Jingwencloud"},"content":"import static seedu.awe.testutil.TypicalGroups.BALI;","lastModifiedDate":"2021-10-14"},{"lineNumber":12,"author":{"gitId":"Jingwencloud"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":13,"author":{"gitId":"Jingwencloud"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-10-14"},{"lineNumber":14,"author":{"gitId":"Jingwencloud"},"content":"import java.util.Collections;","lastModifiedDate":"2021-10-14"},{"lineNumber":15,"author":{"gitId":"Jingwencloud"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":16,"author":{"gitId":"Jingwencloud"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-14"},{"lineNumber":17,"author":{"gitId":"Jingwencloud"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":18,"author":{"gitId":"Jingwencloud"},"content":"import seedu.awe.model.Model;","lastModifiedDate":"2021-10-14"},{"lineNumber":19,"author":{"gitId":"Jingwencloud"},"content":"import seedu.awe.model.ModelManager;","lastModifiedDate":"2021-10-14"},{"lineNumber":20,"author":{"gitId":"Jingwencloud"},"content":"import seedu.awe.model.UserPrefs;","lastModifiedDate":"2021-10-14"},{"lineNumber":21,"author":{"gitId":"Jingwencloud"},"content":"import seedu.awe.model.expense.DescriptionContainsKeywordsPredicate;","lastModifiedDate":"2021-10-14"},{"lineNumber":22,"author":{"gitId":"Jingwencloud"},"content":"import seedu.awe.model.group.GroupName;","lastModifiedDate":"2021-10-28"},{"lineNumber":23,"author":{"gitId":"Jingwencloud"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":24,"author":{"gitId":"Jingwencloud"},"content":"/**","lastModifiedDate":"2021-10-14"},{"lineNumber":25,"author":{"gitId":"Jingwencloud"},"content":" * Contains integration tests (interaction with the Model) for {@code FindExpensesCommand}.","lastModifiedDate":"2021-10-15"},{"lineNumber":26,"author":{"gitId":"Jingwencloud"},"content":" */","lastModifiedDate":"2021-10-14"},{"lineNumber":27,"author":{"gitId":"Jingwencloud"},"content":"public class FindExpensesCommandTest {","lastModifiedDate":"2021-10-14"},{"lineNumber":28,"author":{"gitId":"Jingwencloud"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2021-10-14"},{"lineNumber":29,"author":{"gitId":"Jingwencloud"},"content":"    private Model expectedModel \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2021-10-14"},{"lineNumber":30,"author":{"gitId":"Jingwencloud"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":31,"author":{"gitId":"Jingwencloud"},"content":"    @Test","lastModifiedDate":"2021-10-14"},{"lineNumber":32,"author":{"gitId":"Jingwencloud"},"content":"    public void equals() {","lastModifiedDate":"2021-10-14"},{"lineNumber":33,"author":{"gitId":"Jingwencloud"},"content":"        DescriptionContainsKeywordsPredicate firstPredicate \u003d","lastModifiedDate":"2021-10-14"},{"lineNumber":34,"author":{"gitId":"Jingwencloud"},"content":"                new DescriptionContainsKeywordsPredicate(Collections.singletonList(\"first\"));","lastModifiedDate":"2021-10-14"},{"lineNumber":35,"author":{"gitId":"Jingwencloud"},"content":"        DescriptionContainsKeywordsPredicate secondPredicate \u003d","lastModifiedDate":"2021-10-14"},{"lineNumber":36,"author":{"gitId":"Jingwencloud"},"content":"                new DescriptionContainsKeywordsPredicate(Collections.singletonList(\"second\"));","lastModifiedDate":"2021-10-14"},{"lineNumber":37,"author":{"gitId":"Jingwencloud"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":38,"author":{"gitId":"Jingwencloud"},"content":"        FindExpensesCommand findFirstCommand \u003d new FindExpensesCommand(BALI.getGroupName(), firstPredicate);","lastModifiedDate":"2021-10-14"},{"lineNumber":39,"author":{"gitId":"Jingwencloud"},"content":"        FindExpensesCommand findSecondCommand \u003d new FindExpensesCommand(BALI.getGroupName(), secondPredicate);","lastModifiedDate":"2021-10-14"},{"lineNumber":40,"author":{"gitId":"Jingwencloud"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":41,"author":{"gitId":"Jingwencloud"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2021-10-14"},{"lineNumber":42,"author":{"gitId":"Jingwencloud"},"content":"        assertTrue(findFirstCommand.equals(findFirstCommand));","lastModifiedDate":"2021-10-14"},{"lineNumber":43,"author":{"gitId":"Jingwencloud"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":44,"author":{"gitId":"Jingwencloud"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2021-10-14"},{"lineNumber":45,"author":{"gitId":"Jingwencloud"},"content":"        FindExpensesCommand findFirstCommandCopy \u003d new FindExpensesCommand(BALI.getGroupName(), firstPredicate);","lastModifiedDate":"2021-10-14"},{"lineNumber":46,"author":{"gitId":"Jingwencloud"},"content":"        assertTrue(findFirstCommand.equals(findFirstCommandCopy));","lastModifiedDate":"2021-10-14"},{"lineNumber":47,"author":{"gitId":"Jingwencloud"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":48,"author":{"gitId":"Jingwencloud"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2021-10-14"},{"lineNumber":49,"author":{"gitId":"Jingwencloud"},"content":"        assertFalse(findFirstCommand.equals(1));","lastModifiedDate":"2021-10-14"},{"lineNumber":50,"author":{"gitId":"Jingwencloud"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":51,"author":{"gitId":"Jingwencloud"},"content":"        // null -\u003e returns false","lastModifiedDate":"2021-10-14"},{"lineNumber":52,"author":{"gitId":"Jingwencloud"},"content":"        assertFalse(findFirstCommand.equals(null));","lastModifiedDate":"2021-10-14"},{"lineNumber":53,"author":{"gitId":"Jingwencloud"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":54,"author":{"gitId":"Jingwencloud"},"content":"        // different expense -\u003e returns false","lastModifiedDate":"2021-10-14"},{"lineNumber":55,"author":{"gitId":"Jingwencloud"},"content":"        assertFalse(findFirstCommand.equals(findSecondCommand));","lastModifiedDate":"2021-10-14"},{"lineNumber":56,"author":{"gitId":"Jingwencloud"},"content":"    }","lastModifiedDate":"2021-10-14"},{"lineNumber":57,"author":{"gitId":"Jingwencloud"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":58,"author":{"gitId":"Jingwencloud"},"content":"    @Test","lastModifiedDate":"2021-10-14"},{"lineNumber":59,"author":{"gitId":"Jingwencloud"},"content":"    public void execute_zeroKeywords_noExpenseFound() {","lastModifiedDate":"2021-10-14"},{"lineNumber":60,"author":{"gitId":"Jingwencloud"},"content":"        String expectedMessage \u003d String.format(MESSAGE_EXPENSES_LISTED_OVERVIEW, 0);","lastModifiedDate":"2021-10-14"},{"lineNumber":61,"author":{"gitId":"Jingwencloud"},"content":"        DescriptionContainsKeywordsPredicate predicate \u003d preparePredicate(\" \");","lastModifiedDate":"2021-10-14"},{"lineNumber":62,"author":{"gitId":"Jingwencloud"},"content":"        FindExpensesCommand command \u003d new FindExpensesCommand(BALI.getGroupName(), predicate);","lastModifiedDate":"2021-10-14"},{"lineNumber":63,"author":{"gitId":"Jingwencloud"},"content":"        expectedModel.updateFilteredExpenseList(predicate);","lastModifiedDate":"2021-10-14"},{"lineNumber":64,"author":{"gitId":"ramapriyan912001"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel, false, false, true, false, false);","lastModifiedDate":"2021-10-21"},{"lineNumber":65,"author":{"gitId":"Jingwencloud"},"content":"        assertEquals(Collections.emptyList(), model.getExpenses());","lastModifiedDate":"2021-10-14"},{"lineNumber":66,"author":{"gitId":"Jingwencloud"},"content":"    }","lastModifiedDate":"2021-10-14"},{"lineNumber":67,"author":{"gitId":"Jingwencloud"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":68,"author":{"gitId":"Jingwencloud"},"content":"    @Test","lastModifiedDate":"2021-10-14"},{"lineNumber":69,"author":{"gitId":"Jingwencloud"},"content":"    public void execute_multipleKeywords_multipleExpensesFound() {","lastModifiedDate":"2021-10-14"},{"lineNumber":70,"author":{"gitId":"Jingwencloud"},"content":"        String expectedMessage \u003d String.format(MESSAGE_EXPENSES_LISTED_OVERVIEW, 2);","lastModifiedDate":"2021-10-28"},{"lineNumber":71,"author":{"gitId":"Jingwencloud"},"content":"        DescriptionContainsKeywordsPredicate predicate \u003d preparePredicate(\"Souvenirs Buffet\");","lastModifiedDate":"2021-10-15"},{"lineNumber":72,"author":{"gitId":"Jingwencloud"},"content":"        FindExpensesCommand command \u003d new FindExpensesCommand(new GroupName(\"Bali\"), predicate);","lastModifiedDate":"2021-10-15"},{"lineNumber":73,"author":{"gitId":"Jingwencloud"},"content":"        expectedModel.setExpenses(expectedModel.getGroupByName(new GroupName(\"Bali\")));","lastModifiedDate":"2021-10-15"},{"lineNumber":74,"author":{"gitId":"Jingwencloud"},"content":"        expectedModel.updateFilteredExpenseList(predicate);","lastModifiedDate":"2021-10-14"},{"lineNumber":75,"author":{"gitId":"Jingwencloud"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel, false, false, true, false, false);","lastModifiedDate":"2021-10-28"},{"lineNumber":76,"author":{"gitId":"Jingwencloud"},"content":"        assertEquals(Arrays.asList(BUFFET, SOUVENIRS), model.getExpenses());","lastModifiedDate":"2021-10-15"},{"lineNumber":77,"author":{"gitId":"Jingwencloud"},"content":"    }","lastModifiedDate":"2021-10-14"},{"lineNumber":78,"author":{"gitId":"Jingwencloud"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":79,"author":{"gitId":"Jingwencloud"},"content":"    /**","lastModifiedDate":"2021-10-14"},{"lineNumber":80,"author":{"gitId":"Jingwencloud"},"content":"     * Parses {@code userInput} into a {@code DescriptionContainsKeywordsPredicate}.","lastModifiedDate":"2021-10-14"},{"lineNumber":81,"author":{"gitId":"Jingwencloud"},"content":"     */","lastModifiedDate":"2021-10-14"},{"lineNumber":82,"author":{"gitId":"Jingwencloud"},"content":"    private DescriptionContainsKeywordsPredicate preparePredicate(String userInput) {","lastModifiedDate":"2021-10-14"},{"lineNumber":83,"author":{"gitId":"Jingwencloud"},"content":"        return new DescriptionContainsKeywordsPredicate(Arrays.asList(userInput.split(\"\\\\s+\")));","lastModifiedDate":"2021-10-14"},{"lineNumber":84,"author":{"gitId":"Jingwencloud"},"content":"    }","lastModifiedDate":"2021-10-14"},{"lineNumber":85,"author":{"gitId":"Jingwencloud"},"content":"}","lastModifiedDate":"2021-10-14"}],"authorContributionMap":{"Jingwencloud":84,"ramapriyan912001":1}},{"path":"src/test/java/seedu/awe/logic/commands/FindGroupsCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"marcuspeh"},"content":"package seedu.awe.logic.commands;","lastModifiedDate":"2021-10-11"},{"lineNumber":2,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":3,"author":{"gitId":"marcuspeh"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-11"},{"lineNumber":4,"author":{"gitId":"marcuspeh"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-10-11"},{"lineNumber":5,"author":{"gitId":"marcuspeh"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-11"},{"lineNumber":6,"author":{"gitId":"marcuspeh"},"content":"import static seedu.awe.commons.core.Messages.MESSAGE_GROUPS_LISTED_OVERVIEW;","lastModifiedDate":"2021-10-11"},{"lineNumber":7,"author":{"gitId":"marcuspeh"},"content":"import static seedu.awe.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2021-10-11"},{"lineNumber":8,"author":{"gitId":"marcuspeh"},"content":"import static seedu.awe.testutil.TypicalGroups.BALI;","lastModifiedDate":"2021-10-11"},{"lineNumber":9,"author":{"gitId":"marcuspeh"},"content":"import static seedu.awe.testutil.TypicalGroups.CHINA;","lastModifiedDate":"2021-10-11"},{"lineNumber":10,"author":{"gitId":"marcuspeh"},"content":"import static seedu.awe.testutil.TypicalGroups.INDIA;","lastModifiedDate":"2021-10-11"},{"lineNumber":11,"author":{"gitId":"marcuspeh"},"content":"import static seedu.awe.testutil.TypicalGroups.getTypicalAddressBook;","lastModifiedDate":"2021-10-11"},{"lineNumber":12,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":13,"author":{"gitId":"marcuspeh"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-10-11"},{"lineNumber":14,"author":{"gitId":"marcuspeh"},"content":"import java.util.Collections;","lastModifiedDate":"2021-10-11"},{"lineNumber":15,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":16,"author":{"gitId":"marcuspeh"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-11"},{"lineNumber":17,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":18,"author":{"gitId":"marcuspeh"},"content":"import seedu.awe.model.Model;","lastModifiedDate":"2021-10-11"},{"lineNumber":19,"author":{"gitId":"marcuspeh"},"content":"import seedu.awe.model.ModelManager;","lastModifiedDate":"2021-10-11"},{"lineNumber":20,"author":{"gitId":"marcuspeh"},"content":"import seedu.awe.model.UserPrefs;","lastModifiedDate":"2021-10-11"},{"lineNumber":21,"author":{"gitId":"marcuspeh"},"content":"import seedu.awe.model.group.GroupContainsKeywordsPredicate;","lastModifiedDate":"2021-10-11"},{"lineNumber":22,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":23,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":24,"author":{"gitId":"marcuspeh"},"content":"/**","lastModifiedDate":"2021-10-11"},{"lineNumber":25,"author":{"gitId":"marcuspeh"},"content":" * Contains integration tests (interaction with the Model) for {@code FindCommand}.","lastModifiedDate":"2021-10-11"},{"lineNumber":26,"author":{"gitId":"marcuspeh"},"content":" */","lastModifiedDate":"2021-10-11"},{"lineNumber":27,"author":{"gitId":"marcuspeh"},"content":"public class FindGroupsCommandTest {","lastModifiedDate":"2021-10-11"},{"lineNumber":28,"author":{"gitId":"marcuspeh"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2021-10-11"},{"lineNumber":29,"author":{"gitId":"marcuspeh"},"content":"    private Model expectedModel \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2021-10-11"},{"lineNumber":30,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":31,"author":{"gitId":"marcuspeh"},"content":"    @Test","lastModifiedDate":"2021-10-11"},{"lineNumber":32,"author":{"gitId":"marcuspeh"},"content":"    public void equals() {","lastModifiedDate":"2021-10-11"},{"lineNumber":33,"author":{"gitId":"marcuspeh"},"content":"        GroupContainsKeywordsPredicate firstPredicate \u003d","lastModifiedDate":"2021-10-11"},{"lineNumber":34,"author":{"gitId":"marcuspeh"},"content":"                new GroupContainsKeywordsPredicate(Collections.singletonList(\"first\"));","lastModifiedDate":"2021-10-11"},{"lineNumber":35,"author":{"gitId":"marcuspeh"},"content":"        GroupContainsKeywordsPredicate secondPredicate \u003d","lastModifiedDate":"2021-10-11"},{"lineNumber":36,"author":{"gitId":"marcuspeh"},"content":"                new GroupContainsKeywordsPredicate(Collections.singletonList(\"second\"));","lastModifiedDate":"2021-10-11"},{"lineNumber":37,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":38,"author":{"gitId":"marcuspeh"},"content":"        FindGroupsCommand findFirstCommand \u003d new FindGroupsCommand(firstPredicate);","lastModifiedDate":"2021-10-11"},{"lineNumber":39,"author":{"gitId":"marcuspeh"},"content":"        FindGroupsCommand findSecondCommand \u003d new FindGroupsCommand(secondPredicate);","lastModifiedDate":"2021-10-11"},{"lineNumber":40,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":41,"author":{"gitId":"marcuspeh"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2021-10-11"},{"lineNumber":42,"author":{"gitId":"marcuspeh"},"content":"        assertTrue(findFirstCommand.equals(findFirstCommand));","lastModifiedDate":"2021-10-11"},{"lineNumber":43,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":44,"author":{"gitId":"marcuspeh"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2021-10-11"},{"lineNumber":45,"author":{"gitId":"marcuspeh"},"content":"        FindGroupsCommand findFirstCommandCopy \u003d new FindGroupsCommand(firstPredicate);","lastModifiedDate":"2021-10-11"},{"lineNumber":46,"author":{"gitId":"marcuspeh"},"content":"        assertTrue(findFirstCommand.equals(findFirstCommandCopy));","lastModifiedDate":"2021-10-11"},{"lineNumber":47,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":48,"author":{"gitId":"marcuspeh"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2021-10-11"},{"lineNumber":49,"author":{"gitId":"marcuspeh"},"content":"        assertFalse(findFirstCommand.equals(1));","lastModifiedDate":"2021-10-11"},{"lineNumber":50,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":51,"author":{"gitId":"marcuspeh"},"content":"        // null -\u003e returns false","lastModifiedDate":"2021-10-11"},{"lineNumber":52,"author":{"gitId":"marcuspeh"},"content":"        assertFalse(findFirstCommand.equals(null));","lastModifiedDate":"2021-10-11"},{"lineNumber":53,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":54,"author":{"gitId":"marcuspeh"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2021-10-11"},{"lineNumber":55,"author":{"gitId":"marcuspeh"},"content":"        assertFalse(findFirstCommand.equals(findSecondCommand));","lastModifiedDate":"2021-10-11"},{"lineNumber":56,"author":{"gitId":"marcuspeh"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":57,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":58,"author":{"gitId":"marcuspeh"},"content":"    @Test","lastModifiedDate":"2021-10-11"},{"lineNumber":59,"author":{"gitId":"marcuspeh"},"content":"    public void execute_zeroKeywords_noPersonFound() {","lastModifiedDate":"2021-10-11"},{"lineNumber":60,"author":{"gitId":"marcuspeh"},"content":"        String expectedMessage \u003d String.format(MESSAGE_GROUPS_LISTED_OVERVIEW, 0);","lastModifiedDate":"2021-10-11"},{"lineNumber":61,"author":{"gitId":"marcuspeh"},"content":"        GroupContainsKeywordsPredicate predicate \u003d preparePredicate(\" \");","lastModifiedDate":"2021-10-11"},{"lineNumber":62,"author":{"gitId":"marcuspeh"},"content":"        FindGroupsCommand command \u003d new FindGroupsCommand(predicate);","lastModifiedDate":"2021-10-11"},{"lineNumber":63,"author":{"gitId":"marcuspeh"},"content":"        expectedModel.updateFilteredGroupList(predicate);","lastModifiedDate":"2021-10-11"},{"lineNumber":64,"author":{"gitId":"ramapriyan912001"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel, true, false, false, false, false);","lastModifiedDate":"2021-10-21"},{"lineNumber":65,"author":{"gitId":"marcuspeh"},"content":"        assertEquals(Collections.emptyList(), model.getFilteredGroupList());","lastModifiedDate":"2021-10-11"},{"lineNumber":66,"author":{"gitId":"marcuspeh"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":67,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":68,"author":{"gitId":"marcuspeh"},"content":"    @Test","lastModifiedDate":"2021-10-11"},{"lineNumber":69,"author":{"gitId":"marcuspeh"},"content":"    public void execute_multipleKeywords_multiplePersonsFound() {","lastModifiedDate":"2021-10-11"},{"lineNumber":70,"author":{"gitId":"marcuspeh"},"content":"        String expectedMessage \u003d String.format(MESSAGE_GROUPS_LISTED_OVERVIEW, 3);","lastModifiedDate":"2021-10-11"},{"lineNumber":71,"author":{"gitId":"marcuspeh"},"content":"        GroupContainsKeywordsPredicate predicate \u003d preparePredicate(\"Bali India China\");","lastModifiedDate":"2021-10-11"},{"lineNumber":72,"author":{"gitId":"marcuspeh"},"content":"        FindGroupsCommand command \u003d new FindGroupsCommand(predicate);","lastModifiedDate":"2021-10-11"},{"lineNumber":73,"author":{"gitId":"marcuspeh"},"content":"        expectedModel.updateFilteredGroupList(predicate);","lastModifiedDate":"2021-10-11"},{"lineNumber":74,"author":{"gitId":"ramapriyan912001"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel, true, false, false, false, false);","lastModifiedDate":"2021-10-21"},{"lineNumber":75,"author":{"gitId":"marcuspeh"},"content":"        assertEquals(Arrays.asList(BALI, INDIA, CHINA), model.getFilteredGroupList());","lastModifiedDate":"2021-10-11"},{"lineNumber":76,"author":{"gitId":"marcuspeh"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":77,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":78,"author":{"gitId":"marcuspeh"},"content":"    /**","lastModifiedDate":"2021-10-11"},{"lineNumber":79,"author":{"gitId":"marcuspeh"},"content":"     * Parses {@code userInput} into a {@code GroupContainsKeywordsPredicate}.","lastModifiedDate":"2021-10-11"},{"lineNumber":80,"author":{"gitId":"marcuspeh"},"content":"     */","lastModifiedDate":"2021-10-11"},{"lineNumber":81,"author":{"gitId":"marcuspeh"},"content":"    private GroupContainsKeywordsPredicate preparePredicate(String userInput) {","lastModifiedDate":"2021-10-11"},{"lineNumber":82,"author":{"gitId":"marcuspeh"},"content":"        return new GroupContainsKeywordsPredicate(Arrays.asList(userInput.split(\"\\\\s+\")));","lastModifiedDate":"2021-10-11"},{"lineNumber":83,"author":{"gitId":"marcuspeh"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":84,"author":{"gitId":"marcuspeh"},"content":"}","lastModifiedDate":"2021-10-11"}],"authorContributionMap":{"marcuspeh":82,"ramapriyan912001":2}},{"path":"src/test/java/seedu/awe/logic/commands/HelpCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"ramapriyan912001"},"content":"package seedu.awe.logic.commands;","lastModifiedDate":"2021-10-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":3,"author":{"gitId":"chrus-chong"},"content":"import static seedu.awe.commons.core.Messages.MESSAGE_HELPCOMMAND_SHOWING_HELP;","lastModifiedDate":"2021-10-25"},{"lineNumber":4,"author":{"gitId":"ramapriyan912001"},"content":"import static seedu.awe.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2021-10-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":8,"author":{"gitId":"ramapriyan912001"},"content":"import seedu.awe.model.Model;","lastModifiedDate":"2021-10-05"},{"lineNumber":9,"author":{"gitId":"ramapriyan912001"},"content":"import seedu.awe.model.ModelManager;","lastModifiedDate":"2021-10-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class HelpCommandTest {","lastModifiedDate":"2017-06-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager();","lastModifiedDate":"2018-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    private Model expectedModel \u003d new ModelManager();","lastModifiedDate":"2018-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public void execute_help_success() {","lastModifiedDate":"2017-06-08"},{"lineNumber":17,"author":{"gitId":"chrus-chong"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(MESSAGE_HELPCOMMAND_SHOWING_HELP, true,","lastModifiedDate":"2021-10-25"},{"lineNumber":18,"author":{"gitId":"ramapriyan912001"},"content":"            false, false, false, false, false, false);","lastModifiedDate":"2021-10-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new HelpCommand(), model, expectedCommandResult, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-08"}],"authorContributionMap":{"chrus-chong":2,"ramapriyan912001":5,"-":14}},{"path":"src/test/java/seedu/awe/logic/commands/ListContactsCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"ramapriyan912001"},"content":"package seedu.awe.logic.commands;","lastModifiedDate":"2021-10-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"chrus-chong"},"content":"import static seedu.awe.commons.core.Messages.MESSAGE_LISTCONTACTSCOMMAND_SUCCESS;","lastModifiedDate":"2021-10-25"},{"lineNumber":4,"author":{"gitId":"ramapriyan912001"},"content":"import static seedu.awe.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2021-10-05"},{"lineNumber":5,"author":{"gitId":"ramapriyan912001"},"content":"import static seedu.awe.logic.commands.CommandTestUtil.showPersonAtIndex;","lastModifiedDate":"2021-10-05"},{"lineNumber":6,"author":{"gitId":"ramapriyan912001"},"content":"import static seedu.awe.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2021-10-05"},{"lineNumber":7,"author":{"gitId":"ramapriyan912001"},"content":"import static seedu.awe.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2021-10-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":12,"author":{"gitId":"ramapriyan912001"},"content":"import seedu.awe.model.Model;","lastModifiedDate":"2021-10-05"},{"lineNumber":13,"author":{"gitId":"ramapriyan912001"},"content":"import seedu.awe.model.ModelManager;","lastModifiedDate":"2021-10-05"},{"lineNumber":14,"author":{"gitId":"ramapriyan912001"},"content":"import seedu.awe.model.UserPrefs;","lastModifiedDate":"2021-10-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-12"},{"lineNumber":17,"author":{"gitId":"marcuspeh"},"content":" * Contains integration tests (interaction with the Model) and unit tests for ListContactCommand.","lastModifiedDate":"2021-10-07"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"marcuspeh"},"content":"public class ListContactsCommandTest {","lastModifiedDate":"2021-10-07"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private Model model;","lastModifiedDate":"2017-06-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private Model expectedModel;","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2017-07-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2017-06-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public void execute_listIsNotFiltered_showsSameList() {","lastModifiedDate":"2017-08-15"},{"lineNumber":32,"author":{"gitId":"chrus-chong"},"content":"        assertCommandSuccess(new ListContactsCommand(), model, MESSAGE_LISTCONTACTSCOMMAND_SUCCESS,","lastModifiedDate":"2021-10-25"},{"lineNumber":33,"author":{"gitId":"ramapriyan912001"},"content":"                expectedModel, false, true, false, false, false);","lastModifiedDate":"2021-10-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void execute_listIsFiltered_showsEverything() {","lastModifiedDate":"2017-08-15"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":39,"author":{"gitId":"chrus-chong"},"content":"        assertCommandSuccess(new ListContactsCommand(), model, MESSAGE_LISTCONTACTSCOMMAND_SUCCESS,","lastModifiedDate":"2021-10-25"},{"lineNumber":40,"author":{"gitId":"ramapriyan912001"},"content":"                expectedModel, false, true, false, false, false);","lastModifiedDate":"2021-10-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":42,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":43,"author":{"gitId":"marcuspeh"},"content":"    @Test","lastModifiedDate":"2021-10-03"},{"lineNumber":44,"author":{"gitId":"marcuspeh"},"content":"    public void execute_showContacts_success() {","lastModifiedDate":"2021-10-03"},{"lineNumber":45,"author":{"gitId":"chrus-chong"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(MESSAGE_LISTCONTACTSCOMMAND_SUCCESS,","lastModifiedDate":"2021-10-25"},{"lineNumber":46,"author":{"gitId":"ramapriyan912001"},"content":"                false, false, false, true, false, false, false);","lastModifiedDate":"2021-10-21"},{"lineNumber":47,"author":{"gitId":"marcuspeh"},"content":"        assertCommandSuccess(new ListContactsCommand(), new ModelManager(), expectedCommandResult, new ModelManager());","lastModifiedDate":"2021-10-03"},{"lineNumber":48,"author":{"gitId":"marcuspeh"},"content":"    }","lastModifiedDate":"2021-10-03"},{"lineNumber":49,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"marcuspeh":7,"chrus-chong":4,"ramapriyan912001":11,"-":27}},{"path":"src/test/java/seedu/awe/logic/commands/ListExpensesCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Jingwencloud"},"content":"package seedu.awe.logic.commands;","lastModifiedDate":"2021-10-08"},{"lineNumber":2,"author":{"gitId":"Jingwencloud"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":3,"author":{"gitId":"chrus-chong"},"content":"import static seedu.awe.commons.core.Messages.MESSAGE_LISTEXPENSESCOMMAND_GROUP_NOT_FOUND;","lastModifiedDate":"2021-10-25"},{"lineNumber":4,"author":{"gitId":"chrus-chong"},"content":"import static seedu.awe.commons.core.Messages.MESSAGE_LISTEXPENSESCOMMAND_SUCCESS;","lastModifiedDate":"2021-10-25"},{"lineNumber":5,"author":{"gitId":"Jingwencloud"},"content":"import static seedu.awe.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2021-10-08"},{"lineNumber":6,"author":{"gitId":"Jingwencloud"},"content":"import static seedu.awe.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2021-10-08"},{"lineNumber":7,"author":{"gitId":"Jingwencloud"},"content":"import static seedu.awe.testutil.Assert.assertThrows;","lastModifiedDate":"2021-10-08"},{"lineNumber":8,"author":{"gitId":"Jingwencloud"},"content":"import static seedu.awe.testutil.TypicalGroups.BALI;","lastModifiedDate":"2021-10-08"},{"lineNumber":9,"author":{"gitId":"Jingwencloud"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":10,"author":{"gitId":"Jingwencloud"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-08"},{"lineNumber":11,"author":{"gitId":"Jingwencloud"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":12,"author":{"gitId":"Jingwencloud"},"content":"import seedu.awe.model.Model;","lastModifiedDate":"2021-10-08"},{"lineNumber":13,"author":{"gitId":"Jingwencloud"},"content":"import seedu.awe.model.group.GroupName;","lastModifiedDate":"2021-10-08"},{"lineNumber":14,"author":{"gitId":"Jingwencloud"},"content":"import seedu.awe.testutil.ModelBuilder;","lastModifiedDate":"2021-10-08"},{"lineNumber":15,"author":{"gitId":"Jingwencloud"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":16,"author":{"gitId":"Jingwencloud"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":17,"author":{"gitId":"Jingwencloud"},"content":"public class ListExpensesCommandTest {","lastModifiedDate":"2021-10-08"},{"lineNumber":18,"author":{"gitId":"Jingwencloud"},"content":"    private Model model \u003d new ModelBuilder().build();","lastModifiedDate":"2021-10-08"},{"lineNumber":19,"author":{"gitId":"Jingwencloud"},"content":"    private Model expectedModel \u003d new ModelBuilder().build();","lastModifiedDate":"2021-10-08"},{"lineNumber":20,"author":{"gitId":"Jingwencloud"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":21,"author":{"gitId":"Jingwencloud"},"content":"    @Test","lastModifiedDate":"2021-10-08"},{"lineNumber":22,"author":{"gitId":"Jingwencloud"},"content":"    public void constructor_nullGroupName_throwsNullPointerException() {","lastModifiedDate":"2021-10-08"},{"lineNumber":23,"author":{"gitId":"Jingwencloud"},"content":"        assertThrows(NullPointerException.class, () -\u003e new ListExpensesCommand(null));","lastModifiedDate":"2021-10-08"},{"lineNumber":24,"author":{"gitId":"Jingwencloud"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":25,"author":{"gitId":"Jingwencloud"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":26,"author":{"gitId":"Jingwencloud"},"content":"    @Test","lastModifiedDate":"2021-10-08"},{"lineNumber":27,"author":{"gitId":"Jingwencloud"},"content":"    public void execute_invalidGroupName_throwsCommandException() {","lastModifiedDate":"2021-10-08"},{"lineNumber":28,"author":{"gitId":"Jingwencloud"},"content":"        GroupName test \u003d new GroupName(\"test\");","lastModifiedDate":"2021-10-08"},{"lineNumber":29,"author":{"gitId":"Jingwencloud"},"content":"        ListExpensesCommand listExpensesCommand \u003d new ListExpensesCommand(test);","lastModifiedDate":"2021-10-08"},{"lineNumber":30,"author":{"gitId":"chrus-chong"},"content":"        assertCommandFailure(listExpensesCommand, model, MESSAGE_LISTEXPENSESCOMMAND_GROUP_NOT_FOUND);","lastModifiedDate":"2021-10-25"},{"lineNumber":31,"author":{"gitId":"Jingwencloud"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":32,"author":{"gitId":"Jingwencloud"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":33,"author":{"gitId":"Jingwencloud"},"content":"    @Test","lastModifiedDate":"2021-10-08"},{"lineNumber":34,"author":{"gitId":"Jingwencloud"},"content":"    public void execute_showExpenses_success() {","lastModifiedDate":"2021-10-08"},{"lineNumber":35,"author":{"gitId":"Jingwencloud"},"content":"        ListExpensesCommand listExpensesCommand \u003d new ListExpensesCommand(BALI.getGroupName());","lastModifiedDate":"2021-10-08"},{"lineNumber":36,"author":{"gitId":"chrus-chong"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(MESSAGE_LISTEXPENSESCOMMAND_SUCCESS,","lastModifiedDate":"2021-10-25"},{"lineNumber":37,"author":{"gitId":"chrus-chong"},"content":"                false, false, false, false,","lastModifiedDate":"2021-10-25"},{"lineNumber":38,"author":{"gitId":"chrus-chong"},"content":"                true, false, false);","lastModifiedDate":"2021-10-25"},{"lineNumber":39,"author":{"gitId":"Jingwencloud"},"content":"        assertCommandSuccess(listExpensesCommand, model, expectedCommandResult, expectedModel);","lastModifiedDate":"2021-10-08"},{"lineNumber":40,"author":{"gitId":"Jingwencloud"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":41,"author":{"gitId":"Jingwencloud"},"content":"}","lastModifiedDate":"2021-10-08"}],"authorContributionMap":{"Jingwencloud":35,"chrus-chong":6}},{"path":"src/test/java/seedu/awe/logic/commands/ListGroupsCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"ramapriyan912001"},"content":"package seedu.awe.logic.commands;","lastModifiedDate":"2021-10-05"},{"lineNumber":2,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":3,"author":{"gitId":"chrus-chong"},"content":"import static seedu.awe.commons.core.Messages.MESSAGE_LISTGROUPSCOMMAND_SUCCESS;","lastModifiedDate":"2021-10-25"},{"lineNumber":4,"author":{"gitId":"ramapriyan912001"},"content":"import static seedu.awe.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2021-10-05"},{"lineNumber":5,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":6,"author":{"gitId":"marcuspeh"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-03"},{"lineNumber":7,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":8,"author":{"gitId":"ramapriyan912001"},"content":"import seedu.awe.model.Model;","lastModifiedDate":"2021-10-05"},{"lineNumber":9,"author":{"gitId":"ramapriyan912001"},"content":"import seedu.awe.model.ModelManager;","lastModifiedDate":"2021-10-05"},{"lineNumber":10,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":11,"author":{"gitId":"marcuspeh"},"content":"/**","lastModifiedDate":"2021-10-07"},{"lineNumber":12,"author":{"gitId":"marcuspeh"},"content":" * Contains integration tests (interaction with the Model) and unit tests for ListGroupsCommand.","lastModifiedDate":"2021-10-07"},{"lineNumber":13,"author":{"gitId":"marcuspeh"},"content":" */","lastModifiedDate":"2021-10-07"},{"lineNumber":14,"author":{"gitId":"marcuspeh"},"content":"public class ListGroupsCommandTest {","lastModifiedDate":"2021-10-07"},{"lineNumber":15,"author":{"gitId":"marcuspeh"},"content":"    private Model model \u003d new ModelManager();","lastModifiedDate":"2021-10-03"},{"lineNumber":16,"author":{"gitId":"marcuspeh"},"content":"    private Model expectedModel \u003d new ModelManager();","lastModifiedDate":"2021-10-03"},{"lineNumber":17,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":18,"author":{"gitId":"marcuspeh"},"content":"    @Test","lastModifiedDate":"2021-10-03"},{"lineNumber":19,"author":{"gitId":"marcuspeh"},"content":"    public void execute_showGroup_success() {","lastModifiedDate":"2021-10-03"},{"lineNumber":20,"author":{"gitId":"chrus-chong"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(MESSAGE_LISTGROUPSCOMMAND_SUCCESS,","lastModifiedDate":"2021-10-25"},{"lineNumber":21,"author":{"gitId":"chrus-chong"},"content":"                false, false, true, false,","lastModifiedDate":"2021-10-25"},{"lineNumber":22,"author":{"gitId":"chrus-chong"},"content":"                false, false, false);","lastModifiedDate":"2021-10-25"},{"lineNumber":23,"author":{"gitId":"marcuspeh"},"content":"        assertCommandSuccess(new ListGroupsCommand(), model, expectedCommandResult, expectedModel);","lastModifiedDate":"2021-10-03"},{"lineNumber":24,"author":{"gitId":"marcuspeh"},"content":"    }","lastModifiedDate":"2021-10-03"},{"lineNumber":25,"author":{"gitId":"marcuspeh"},"content":"}","lastModifiedDate":"2021-10-03"}],"authorContributionMap":{"marcuspeh":17,"chrus-chong":4,"ramapriyan912001":4}},{"path":"src/test/java/seedu/awe/logic/commands/ListTransactionCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"marcuspeh"},"content":"package seedu.awe.logic.commands;","lastModifiedDate":"2021-11-01"},{"lineNumber":2,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":3,"author":{"gitId":"marcuspeh"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-11-01"},{"lineNumber":4,"author":{"gitId":"marcuspeh"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2021-11-01"},{"lineNumber":5,"author":{"gitId":"marcuspeh"},"content":"import static seedu.awe.commons.core.Messages.MESSAGE_LISTTRANSACTIONSUMMARYCOMMAND_GROUP_NOT_FOUND;","lastModifiedDate":"2021-11-01"},{"lineNumber":6,"author":{"gitId":"marcuspeh"},"content":"import static seedu.awe.commons.core.Messages.MESSAGE_LISTTRANSACTIONSUMMARYCOMMAND_SUCCESS;","lastModifiedDate":"2021-11-01"},{"lineNumber":7,"author":{"gitId":"marcuspeh"},"content":"import static seedu.awe.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2021-11-01"},{"lineNumber":8,"author":{"gitId":"marcuspeh"},"content":"import static seedu.awe.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2021-11-01"},{"lineNumber":9,"author":{"gitId":"marcuspeh"},"content":"import static seedu.awe.testutil.Assert.assertThrows;","lastModifiedDate":"2021-11-01"},{"lineNumber":10,"author":{"gitId":"marcuspeh"},"content":"import static seedu.awe.testutil.TypicalGroups.AMSTERDAM;","lastModifiedDate":"2021-11-01"},{"lineNumber":11,"author":{"gitId":"marcuspeh"},"content":"import static seedu.awe.testutil.TypicalGroups.AMSTERDAM_WITH_EXPENSES;","lastModifiedDate":"2021-11-01"},{"lineNumber":12,"author":{"gitId":"marcuspeh"},"content":"import static seedu.awe.testutil.TypicalGroups.BALI;","lastModifiedDate":"2021-11-01"},{"lineNumber":13,"author":{"gitId":"marcuspeh"},"content":"import static seedu.awe.testutil.TypicalGroups.BALI_WITH_EXPENSES;","lastModifiedDate":"2021-11-01"},{"lineNumber":14,"author":{"gitId":"marcuspeh"},"content":"import static seedu.awe.testutil.TypicalGroups.COLOMBO_WITH_EXPENSES;","lastModifiedDate":"2021-11-01"},{"lineNumber":15,"author":{"gitId":"marcuspeh"},"content":"import static seedu.awe.testutil.TypicalGroups.MALIBU;","lastModifiedDate":"2021-11-01"},{"lineNumber":16,"author":{"gitId":"marcuspeh"},"content":"import static seedu.awe.testutil.TypicalGroups.SANTIAGO_WITH_EXPENSES;","lastModifiedDate":"2021-11-01"},{"lineNumber":17,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":18,"author":{"gitId":"marcuspeh"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-11-01"},{"lineNumber":19,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":20,"author":{"gitId":"marcuspeh"},"content":"import seedu.awe.model.Model;","lastModifiedDate":"2021-11-01"},{"lineNumber":21,"author":{"gitId":"marcuspeh"},"content":"import seedu.awe.testutil.ModelBuilder;","lastModifiedDate":"2021-11-01"},{"lineNumber":22,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":23,"author":{"gitId":"marcuspeh"},"content":"public class ListTransactionCommandTest {","lastModifiedDate":"2021-11-01"},{"lineNumber":24,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":25,"author":{"gitId":"marcuspeh"},"content":"    private Model model \u003d new ModelBuilder().build();","lastModifiedDate":"2021-11-01"},{"lineNumber":26,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":27,"author":{"gitId":"marcuspeh"},"content":"    public void resetModel() {","lastModifiedDate":"2021-11-01"},{"lineNumber":28,"author":{"gitId":"marcuspeh"},"content":"        model \u003d new ModelBuilder().build();","lastModifiedDate":"2021-11-01"},{"lineNumber":29,"author":{"gitId":"marcuspeh"},"content":"    }","lastModifiedDate":"2021-11-01"},{"lineNumber":30,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":31,"author":{"gitId":"marcuspeh"},"content":"    @Test","lastModifiedDate":"2021-11-01"},{"lineNumber":32,"author":{"gitId":"marcuspeh"},"content":"    public void constructor_invalidInput_throwsNullPointerException() {","lastModifiedDate":"2021-11-01"},{"lineNumber":33,"author":{"gitId":"marcuspeh"},"content":"        assertThrows(NullPointerException.class, () -\u003e new ListTransactionSummaryCommand(null));","lastModifiedDate":"2021-11-01"},{"lineNumber":34,"author":{"gitId":"marcuspeh"},"content":"    }","lastModifiedDate":"2021-11-01"},{"lineNumber":35,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":36,"author":{"gitId":"marcuspeh"},"content":"    @Test","lastModifiedDate":"2021-11-01"},{"lineNumber":37,"author":{"gitId":"marcuspeh"},"content":"    public void equals() {","lastModifiedDate":"2021-11-01"},{"lineNumber":38,"author":{"gitId":"marcuspeh"},"content":"        // Compare with null -\u003e not equal","lastModifiedDate":"2021-11-01"},{"lineNumber":39,"author":{"gitId":"marcuspeh"},"content":"        assertNotEquals(new ListTransactionSummaryCommand(BALI), null);","lastModifiedDate":"2021-11-01"},{"lineNumber":40,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":41,"author":{"gitId":"marcuspeh"},"content":"        // Compare with other groups -\u003e not equal","lastModifiedDate":"2021-11-01"},{"lineNumber":42,"author":{"gitId":"marcuspeh"},"content":"        assertNotEquals(new ListTransactionSummaryCommand(AMSTERDAM), new ListTransactionSummaryCommand(BALI));","lastModifiedDate":"2021-11-01"},{"lineNumber":43,"author":{"gitId":"marcuspeh"},"content":"        assertNotEquals(new ListTransactionSummaryCommand(AMSTERDAM_WITH_EXPENSES),","lastModifiedDate":"2021-11-01"},{"lineNumber":44,"author":{"gitId":"marcuspeh"},"content":"                new ListTransactionSummaryCommand(BALI));","lastModifiedDate":"2021-11-01"},{"lineNumber":45,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":46,"author":{"gitId":"marcuspeh"},"content":"        // Same group -\u003e equals","lastModifiedDate":"2021-11-01"},{"lineNumber":47,"author":{"gitId":"marcuspeh"},"content":"        assertEquals(new ListTransactionSummaryCommand(BALI), new ListTransactionSummaryCommand(BALI));","lastModifiedDate":"2021-11-01"},{"lineNumber":48,"author":{"gitId":"marcuspeh"},"content":"        assertEquals(new ListTransactionSummaryCommand(BALI_WITH_EXPENSES), new ListTransactionSummaryCommand(BALI));","lastModifiedDate":"2021-11-01"},{"lineNumber":49,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":50,"author":{"gitId":"marcuspeh"},"content":"        // Check with itself -\u003e equal","lastModifiedDate":"2021-11-01"},{"lineNumber":51,"author":{"gitId":"marcuspeh"},"content":"        ListTransactionSummaryCommand listTransactionSummaryCommand \u003d","lastModifiedDate":"2021-11-01"},{"lineNumber":52,"author":{"gitId":"marcuspeh"},"content":"                new ListTransactionSummaryCommand(BALI_WITH_EXPENSES);","lastModifiedDate":"2021-11-01"},{"lineNumber":53,"author":{"gitId":"marcuspeh"},"content":"        assertEquals(listTransactionSummaryCommand, listTransactionSummaryCommand);","lastModifiedDate":"2021-11-01"},{"lineNumber":54,"author":{"gitId":"marcuspeh"},"content":"    }","lastModifiedDate":"2021-11-01"},{"lineNumber":55,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":56,"author":{"gitId":"marcuspeh"},"content":"    @Test","lastModifiedDate":"2021-11-01"},{"lineNumber":57,"author":{"gitId":"marcuspeh"},"content":"    public void execute_groupNotInModel_throwsCommandException() {","lastModifiedDate":"2021-11-01"},{"lineNumber":58,"author":{"gitId":"marcuspeh"},"content":"        resetModel();","lastModifiedDate":"2021-11-01"},{"lineNumber":59,"author":{"gitId":"marcuspeh"},"content":"        // COLOMBO_WITH_EXPENSES is not in model","lastModifiedDate":"2021-11-01"},{"lineNumber":60,"author":{"gitId":"marcuspeh"},"content":"        ListTransactionSummaryCommand listTransactionSummaryCommand \u003d","lastModifiedDate":"2021-11-01"},{"lineNumber":61,"author":{"gitId":"marcuspeh"},"content":"                new ListTransactionSummaryCommand(COLOMBO_WITH_EXPENSES);","lastModifiedDate":"2021-11-01"},{"lineNumber":62,"author":{"gitId":"marcuspeh"},"content":"        assertCommandFailure(listTransactionSummaryCommand, model,","lastModifiedDate":"2021-11-01"},{"lineNumber":63,"author":{"gitId":"marcuspeh"},"content":"                MESSAGE_LISTTRANSACTIONSUMMARYCOMMAND_GROUP_NOT_FOUND);","lastModifiedDate":"2021-11-01"},{"lineNumber":64,"author":{"gitId":"marcuspeh"},"content":"    }","lastModifiedDate":"2021-11-01"},{"lineNumber":65,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":66,"author":{"gitId":"marcuspeh"},"content":"    @Test","lastModifiedDate":"2021-11-01"},{"lineNumber":67,"author":{"gitId":"marcuspeh"},"content":"    public void execute_nullModel_throwsCommandException() {","lastModifiedDate":"2021-11-01"},{"lineNumber":68,"author":{"gitId":"marcuspeh"},"content":"        resetModel();","lastModifiedDate":"2021-11-01"},{"lineNumber":69,"author":{"gitId":"marcuspeh"},"content":"        // COLOMBO_WITH_EXPENSES is not in model","lastModifiedDate":"2021-11-01"},{"lineNumber":70,"author":{"gitId":"marcuspeh"},"content":"        ListTransactionSummaryCommand listTransactionSummaryCommand \u003d","lastModifiedDate":"2021-11-01"},{"lineNumber":71,"author":{"gitId":"marcuspeh"},"content":"                new ListTransactionSummaryCommand(COLOMBO_WITH_EXPENSES);","lastModifiedDate":"2021-11-01"},{"lineNumber":72,"author":{"gitId":"marcuspeh"},"content":"        assertThrows(NullPointerException.class, () -\u003e listTransactionSummaryCommand.execute(null));","lastModifiedDate":"2021-11-01"},{"lineNumber":73,"author":{"gitId":"marcuspeh"},"content":"    }","lastModifiedDate":"2021-11-01"},{"lineNumber":74,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":75,"author":{"gitId":"marcuspeh"},"content":"    @Test","lastModifiedDate":"2021-11-01"},{"lineNumber":76,"author":{"gitId":"marcuspeh"},"content":"    public void execute_validInput_returnsCommandResult() {","lastModifiedDate":"2021-11-01"},{"lineNumber":77,"author":{"gitId":"marcuspeh"},"content":"        resetModel();","lastModifiedDate":"2021-11-01"},{"lineNumber":78,"author":{"gitId":"marcuspeh"},"content":"        // More deficit members than surplus members, multiple expenses","lastModifiedDate":"2021-11-01"},{"lineNumber":79,"author":{"gitId":"marcuspeh"},"content":"        CommandResult expectedCommandResultBali \u003d new CommandResult(MESSAGE_LISTTRANSACTIONSUMMARYCOMMAND_SUCCESS,","lastModifiedDate":"2021-11-01"},{"lineNumber":80,"author":{"gitId":"marcuspeh"},"content":"                false, false, false, false, false, true, false);","lastModifiedDate":"2021-11-01"},{"lineNumber":81,"author":{"gitId":"marcuspeh"},"content":"        assertCommandSuccess(new ListTransactionSummaryCommand(BALI_WITH_EXPENSES), model,","lastModifiedDate":"2021-11-01"},{"lineNumber":82,"author":{"gitId":"marcuspeh"},"content":"                expectedCommandResultBali, model);","lastModifiedDate":"2021-11-01"},{"lineNumber":83,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":84,"author":{"gitId":"marcuspeh"},"content":"        // More deficit members than surplus members, one expense.","lastModifiedDate":"2021-11-01"},{"lineNumber":85,"author":{"gitId":"marcuspeh"},"content":"        CommandResult expectedCommandResultAmsterdam \u003d new CommandResult(MESSAGE_LISTTRANSACTIONSUMMARYCOMMAND_SUCCESS,","lastModifiedDate":"2021-11-01"},{"lineNumber":86,"author":{"gitId":"marcuspeh"},"content":"                false, false, false, false, false, true, false);","lastModifiedDate":"2021-11-01"},{"lineNumber":87,"author":{"gitId":"marcuspeh"},"content":"        assertCommandSuccess(new ListTransactionSummaryCommand(AMSTERDAM_WITH_EXPENSES), model,","lastModifiedDate":"2021-11-01"},{"lineNumber":88,"author":{"gitId":"marcuspeh"},"content":"                expectedCommandResultAmsterdam, model);","lastModifiedDate":"2021-11-01"},{"lineNumber":89,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":90,"author":{"gitId":"marcuspeh"},"content":"        // More surplus members than deficit members","lastModifiedDate":"2021-11-01"},{"lineNumber":91,"author":{"gitId":"marcuspeh"},"content":"        CommandResult expectedCommandResultMalibu \u003d new CommandResult(MESSAGE_LISTTRANSACTIONSUMMARYCOMMAND_SUCCESS,","lastModifiedDate":"2021-11-01"},{"lineNumber":92,"author":{"gitId":"marcuspeh"},"content":"                false, false, false, false, false, true, false);","lastModifiedDate":"2021-11-01"},{"lineNumber":93,"author":{"gitId":"marcuspeh"},"content":"        assertCommandSuccess(new ListTransactionSummaryCommand(MALIBU), model,","lastModifiedDate":"2021-11-01"},{"lineNumber":94,"author":{"gitId":"marcuspeh"},"content":"                expectedCommandResultMalibu, model);","lastModifiedDate":"2021-11-01"},{"lineNumber":95,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":96,"author":{"gitId":"marcuspeh"},"content":"        // Pair of members with equal deficit and surplus","lastModifiedDate":"2021-11-01"},{"lineNumber":97,"author":{"gitId":"marcuspeh"},"content":"        CommandResult expectedCommandResultSantiago \u003d new CommandResult(MESSAGE_LISTTRANSACTIONSUMMARYCOMMAND_SUCCESS,","lastModifiedDate":"2021-11-01"},{"lineNumber":98,"author":{"gitId":"marcuspeh"},"content":"                false, false, false, false, false, true, false);","lastModifiedDate":"2021-11-01"},{"lineNumber":99,"author":{"gitId":"marcuspeh"},"content":"        assertCommandSuccess(new ListTransactionSummaryCommand(SANTIAGO_WITH_EXPENSES), model,","lastModifiedDate":"2021-11-01"},{"lineNumber":100,"author":{"gitId":"marcuspeh"},"content":"                expectedCommandResultSantiago, model);","lastModifiedDate":"2021-11-01"},{"lineNumber":101,"author":{"gitId":"marcuspeh"},"content":"    }","lastModifiedDate":"2021-11-01"},{"lineNumber":102,"author":{"gitId":"marcuspeh"},"content":"}","lastModifiedDate":"2021-11-01"}],"authorContributionMap":{"marcuspeh":102}},{"path":"src/test/java/seedu/awe/logic/commands/helper/PairTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"ramapriyan912001"},"content":"package seedu.awe.logic.commands.helper;","lastModifiedDate":"2021-10-31"},{"lineNumber":2,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":3,"author":{"gitId":"ramapriyan912001"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-31"},{"lineNumber":4,"author":{"gitId":"ramapriyan912001"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-10-31"},{"lineNumber":5,"author":{"gitId":"ramapriyan912001"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2021-10-31"},{"lineNumber":6,"author":{"gitId":"ramapriyan912001"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2021-10-31"},{"lineNumber":7,"author":{"gitId":"ramapriyan912001"},"content":"import static seedu.awe.testutil.TypicalGroups.BALI_WITH_EXPENSES;","lastModifiedDate":"2021-10-31"},{"lineNumber":8,"author":{"gitId":"ramapriyan912001"},"content":"import static seedu.awe.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2021-10-31"},{"lineNumber":9,"author":{"gitId":"ramapriyan912001"},"content":"import static seedu.awe.testutil.TypicalPersons.BOB;","lastModifiedDate":"2021-10-31"},{"lineNumber":10,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":11,"author":{"gitId":"ramapriyan912001"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-31"},{"lineNumber":12,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":13,"author":{"gitId":"ramapriyan912001"},"content":"import seedu.awe.logic.commands.CalculatePaymentsCommand;","lastModifiedDate":"2021-10-31"},{"lineNumber":14,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":15,"author":{"gitId":"ramapriyan912001"},"content":"public class PairTest {","lastModifiedDate":"2021-10-31"},{"lineNumber":16,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":17,"author":{"gitId":"ramapriyan912001"},"content":"    @Test","lastModifiedDate":"2021-10-31"},{"lineNumber":18,"author":{"gitId":"ramapriyan912001"},"content":"    public void testPairEquals() {","lastModifiedDate":"2021-10-31"},{"lineNumber":19,"author":{"gitId":"ramapriyan912001"},"content":"        CalculatePaymentsCommand command \u003d new CalculatePaymentsCommand(BALI_WITH_EXPENSES);","lastModifiedDate":"2021-10-31"},{"lineNumber":20,"author":{"gitId":"ramapriyan912001"},"content":"        assertFalse(new Pair(20.0, ALICE).equals(20.0));","lastModifiedDate":"2021-10-31"},{"lineNumber":21,"author":{"gitId":"ramapriyan912001"},"content":"        assertNotEquals(new Pair(20.0, ALICE),","lastModifiedDate":"2021-10-31"},{"lineNumber":22,"author":{"gitId":"ramapriyan912001"},"content":"                new Pair(1000.0, ALICE));","lastModifiedDate":"2021-10-31"},{"lineNumber":23,"author":{"gitId":"ramapriyan912001"},"content":"    }","lastModifiedDate":"2021-10-31"},{"lineNumber":24,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":25,"author":{"gitId":"ramapriyan912001"},"content":"    @Test","lastModifiedDate":"2021-10-31"},{"lineNumber":26,"author":{"gitId":"ramapriyan912001"},"content":"    public void testHashCode() {","lastModifiedDate":"2021-10-31"},{"lineNumber":27,"author":{"gitId":"ramapriyan912001"},"content":"        assertEquals(new Pair(20.0, ALICE).hashCode(),","lastModifiedDate":"2021-10-31"},{"lineNumber":28,"author":{"gitId":"ramapriyan912001"},"content":"                new Pair(20.0, ALICE).hashCode());","lastModifiedDate":"2021-10-31"},{"lineNumber":29,"author":{"gitId":"ramapriyan912001"},"content":"        assertNotEquals(new Pair(20.0, ALICE),","lastModifiedDate":"2021-10-31"},{"lineNumber":30,"author":{"gitId":"ramapriyan912001"},"content":"                new Pair(100.0, ALICE));","lastModifiedDate":"2021-10-31"},{"lineNumber":31,"author":{"gitId":"ramapriyan912001"},"content":"    }","lastModifiedDate":"2021-10-31"},{"lineNumber":32,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":33,"author":{"gitId":"ramapriyan912001"},"content":"    @Test","lastModifiedDate":"2021-10-31"},{"lineNumber":34,"author":{"gitId":"ramapriyan912001"},"content":"    public void constructor_invalidInput_throwsNullPointerException() {","lastModifiedDate":"2021-10-31"},{"lineNumber":35,"author":{"gitId":"ramapriyan912001"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Pair(100.00, null));","lastModifiedDate":"2021-10-31"},{"lineNumber":36,"author":{"gitId":"ramapriyan912001"},"content":"    }","lastModifiedDate":"2021-10-31"},{"lineNumber":37,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":38,"author":{"gitId":"ramapriyan912001"},"content":"    @Test","lastModifiedDate":"2021-10-31"},{"lineNumber":39,"author":{"gitId":"ramapriyan912001"},"content":"    public void getPerson_success() {","lastModifiedDate":"2021-10-31"},{"lineNumber":40,"author":{"gitId":"ramapriyan912001"},"content":"        assertEquals(new Pair(20.0, ALICE).getPerson(), ALICE);","lastModifiedDate":"2021-10-31"},{"lineNumber":41,"author":{"gitId":"ramapriyan912001"},"content":"        assertNotEquals(new Pair(20.0, ALICE).getPerson(), BOB);","lastModifiedDate":"2021-10-31"},{"lineNumber":42,"author":{"gitId":"ramapriyan912001"},"content":"    }","lastModifiedDate":"2021-10-31"},{"lineNumber":43,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":44,"author":{"gitId":"ramapriyan912001"},"content":"    @Test","lastModifiedDate":"2021-10-31"},{"lineNumber":45,"author":{"gitId":"ramapriyan912001"},"content":"    public void getSurplus_success() {","lastModifiedDate":"2021-10-31"},{"lineNumber":46,"author":{"gitId":"ramapriyan912001"},"content":"        assertEquals(new Pair(20.0, ALICE).getSurplus(), 20.0);","lastModifiedDate":"2021-10-31"},{"lineNumber":47,"author":{"gitId":"ramapriyan912001"},"content":"        assertNotEquals(new Pair(20.0, ALICE).getSurplus(), 22);","lastModifiedDate":"2021-10-31"},{"lineNumber":48,"author":{"gitId":"ramapriyan912001"},"content":"    }","lastModifiedDate":"2021-10-31"},{"lineNumber":49,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":50,"author":{"gitId":"ramapriyan912001"},"content":"    @Test","lastModifiedDate":"2021-10-31"},{"lineNumber":51,"author":{"gitId":"ramapriyan912001"},"content":"    public void equals() {","lastModifiedDate":"2021-10-31"},{"lineNumber":52,"author":{"gitId":"ramapriyan912001"},"content":"        assertEquals(new Pair(20.0, ALICE), new Pair(20.0, ALICE));","lastModifiedDate":"2021-10-31"},{"lineNumber":53,"author":{"gitId":"ramapriyan912001"},"content":"        assertNotEquals(new Pair(20.0, ALICE), new Pair(29.0, ALICE));","lastModifiedDate":"2021-10-31"},{"lineNumber":54,"author":{"gitId":"ramapriyan912001"},"content":"        assertNotEquals(new Pair(20.0, ALICE), new Pair(20.0, BOB));","lastModifiedDate":"2021-10-31"},{"lineNumber":55,"author":{"gitId":"ramapriyan912001"},"content":"        assertFalse(new Pair(20.0, ALICE).equals(20.0));","lastModifiedDate":"2021-10-31"},{"lineNumber":56,"author":{"gitId":"ramapriyan912001"},"content":"        Pair pair \u003d new Pair(20.0, ALICE);","lastModifiedDate":"2021-10-31"},{"lineNumber":57,"author":{"gitId":"ramapriyan912001"},"content":"        assertEquals(pair, pair);","lastModifiedDate":"2021-10-31"},{"lineNumber":58,"author":{"gitId":"ramapriyan912001"},"content":"    }","lastModifiedDate":"2021-10-31"},{"lineNumber":59,"author":{"gitId":"ramapriyan912001"},"content":"}","lastModifiedDate":"2021-10-31"}],"authorContributionMap":{"ramapriyan912001":59}},{"path":"src/test/java/seedu/awe/logic/parser/AddContactCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"ramapriyan912001"},"content":"package seedu.awe.logic.parser;","lastModifiedDate":"2021-10-05"},{"lineNumber":2,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":3,"author":{"gitId":"chrus-chong"},"content":"import static seedu.awe.commons.core.Messages.MESSAGE_ADDCONTACTCOMMAND_USAGE;","lastModifiedDate":"2021-10-25"},{"lineNumber":4,"author":{"gitId":"ramapriyan912001"},"content":"import static seedu.awe.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-10-05"},{"lineNumber":5,"author":{"gitId":"ramapriyan912001"},"content":"import static seedu.awe.logic.commands.CommandTestUtil.INVALID_NAME_DESC;","lastModifiedDate":"2021-10-05"},{"lineNumber":6,"author":{"gitId":"ramapriyan912001"},"content":"import static seedu.awe.logic.commands.CommandTestUtil.INVALID_PHONE_DESC;","lastModifiedDate":"2021-10-05"},{"lineNumber":7,"author":{"gitId":"ramapriyan912001"},"content":"import static seedu.awe.logic.commands.CommandTestUtil.INVALID_TAG_DESC;","lastModifiedDate":"2021-10-05"},{"lineNumber":8,"author":{"gitId":"ramapriyan912001"},"content":"import static seedu.awe.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2021-10-05"},{"lineNumber":9,"author":{"gitId":"ramapriyan912001"},"content":"import static seedu.awe.logic.commands.CommandTestUtil.NAME_DESC_BOB;","lastModifiedDate":"2021-10-05"},{"lineNumber":10,"author":{"gitId":"ramapriyan912001"},"content":"import static seedu.awe.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2021-10-05"},{"lineNumber":11,"author":{"gitId":"ramapriyan912001"},"content":"import static seedu.awe.logic.commands.CommandTestUtil.PHONE_DESC_BOB;","lastModifiedDate":"2021-10-05"},{"lineNumber":12,"author":{"gitId":"ramapriyan912001"},"content":"import static seedu.awe.logic.commands.CommandTestUtil.PREAMBLE_NON_EMPTY;","lastModifiedDate":"2021-10-05"},{"lineNumber":13,"author":{"gitId":"ramapriyan912001"},"content":"import static seedu.awe.logic.commands.CommandTestUtil.PREAMBLE_WHITESPACE;","lastModifiedDate":"2021-10-05"},{"lineNumber":14,"author":{"gitId":"ramapriyan912001"},"content":"import static seedu.awe.logic.commands.CommandTestUtil.TAG_DESC_FRIEND;","lastModifiedDate":"2021-10-05"},{"lineNumber":15,"author":{"gitId":"ramapriyan912001"},"content":"import static seedu.awe.logic.commands.CommandTestUtil.TAG_DESC_HUSBAND;","lastModifiedDate":"2021-10-05"},{"lineNumber":16,"author":{"gitId":"ramapriyan912001"},"content":"import static seedu.awe.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2021-10-05"},{"lineNumber":17,"author":{"gitId":"ramapriyan912001"},"content":"import static seedu.awe.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2021-10-05"},{"lineNumber":18,"author":{"gitId":"ramapriyan912001"},"content":"import static seedu.awe.logic.commands.CommandTestUtil.VALID_TAG_FRIEND;","lastModifiedDate":"2021-10-05"},{"lineNumber":19,"author":{"gitId":"ramapriyan912001"},"content":"import static seedu.awe.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2021-10-05"},{"lineNumber":20,"author":{"gitId":"ramapriyan912001"},"content":"import static seedu.awe.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2021-10-05"},{"lineNumber":21,"author":{"gitId":"ramapriyan912001"},"content":"import static seedu.awe.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2021-10-05"},{"lineNumber":22,"author":{"gitId":"ramapriyan912001"},"content":"import static seedu.awe.testutil.TypicalPersons.AMY;","lastModifiedDate":"2021-10-05"},{"lineNumber":23,"author":{"gitId":"ramapriyan912001"},"content":"import static seedu.awe.testutil.TypicalPersons.BOB;","lastModifiedDate":"2021-10-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":27,"author":{"gitId":"marcuspeh"},"content":"import seedu.awe.logic.commands.AddContactCommand;","lastModifiedDate":"2021-10-11"},{"lineNumber":28,"author":{"gitId":"ramapriyan912001"},"content":"import seedu.awe.model.person.Name;","lastModifiedDate":"2021-10-05"},{"lineNumber":29,"author":{"gitId":"ramapriyan912001"},"content":"import seedu.awe.model.person.Person;","lastModifiedDate":"2021-10-05"},{"lineNumber":30,"author":{"gitId":"ramapriyan912001"},"content":"import seedu.awe.model.person.Phone;","lastModifiedDate":"2021-10-05"},{"lineNumber":31,"author":{"gitId":"ramapriyan912001"},"content":"import seedu.awe.model.tag.Tag;","lastModifiedDate":"2021-10-05"},{"lineNumber":32,"author":{"gitId":"ramapriyan912001"},"content":"import seedu.awe.testutil.PersonBuilder;","lastModifiedDate":"2021-10-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":34,"author":{"gitId":"marcuspeh"},"content":"public class AddContactCommandParserTest {","lastModifiedDate":"2021-10-11"},{"lineNumber":35,"author":{"gitId":"chrus-chong"},"content":"    private AddContactCommandParser parser \u003d new AddContactCommandParser();","lastModifiedDate":"2021-10-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public void parse_allFieldsPresent_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        Person expectedPerson \u003d new PersonBuilder(BOB).withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2018-07-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        // whitespace only preamble","lastModifiedDate":"2017-12-23"},{"lineNumber":42,"author":{"gitId":"marcuspeh"},"content":"        assertParseSuccess(parser, PREAMBLE_WHITESPACE + NAME_DESC_BOB + PHONE_DESC_BOB","lastModifiedDate":"2021-11-01"},{"lineNumber":43,"author":{"gitId":"marcuspeh"},"content":"                + TAG_DESC_FRIEND, new AddContactCommand(expectedPerson));","lastModifiedDate":"2021-11-01"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        // multiple names - last name accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":46,"author":{"gitId":"marcuspeh"},"content":"        assertParseSuccess(parser, NAME_DESC_AMY + NAME_DESC_BOB + PHONE_DESC_BOB","lastModifiedDate":"2021-11-01"},{"lineNumber":47,"author":{"gitId":"marcuspeh"},"content":"                + TAG_DESC_FRIEND, new AddContactCommand(expectedPerson));","lastModifiedDate":"2021-11-01"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        // multiple phones - last phone accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":50,"author":{"gitId":"marcuspeh"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + PHONE_DESC_AMY + PHONE_DESC_BOB","lastModifiedDate":"2021-11-01"},{"lineNumber":51,"author":{"gitId":"marcuspeh"},"content":"                + TAG_DESC_FRIEND, new AddContactCommand(expectedPerson));","lastModifiedDate":"2021-11-01"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        // multiple tags - all accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        Person expectedPersonMultipleTags \u003d new PersonBuilder(BOB).withTags(VALID_TAG_FRIEND, VALID_TAG_HUSBAND)","lastModifiedDate":"2018-07-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-07-25"},{"lineNumber":56,"author":{"gitId":"marcuspeh"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + PHONE_DESC_BOB","lastModifiedDate":"2021-11-01"},{"lineNumber":57,"author":{"gitId":"marcuspeh"},"content":"                + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, new AddContactCommand(expectedPersonMultipleTags));","lastModifiedDate":"2021-10-11"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public void parse_optionalFieldsMissing_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        // zero tags","lastModifiedDate":"2017-06-15"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        Person expectedPerson \u003d new PersonBuilder(AMY).withTags().build();","lastModifiedDate":"2018-07-25"},{"lineNumber":64,"author":{"gitId":"marcuspeh"},"content":"        assertParseSuccess(parser, NAME_DESC_AMY + PHONE_DESC_AMY,","lastModifiedDate":"2021-11-01"},{"lineNumber":65,"author":{"gitId":"marcuspeh"},"content":"                new AddContactCommand(expectedPerson));","lastModifiedDate":"2021-10-11"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public void parse_compulsoryFieldMissing_failure() {","lastModifiedDate":"2017-06-15"},{"lineNumber":70,"author":{"gitId":"chrus-chong"},"content":"        String expectedMessage \u003d String.format(MESSAGE_INVALID_COMMAND_FORMAT, MESSAGE_ADDCONTACTCOMMAND_USAGE);","lastModifiedDate":"2021-10-25"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        // missing name prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":73,"author":{"gitId":"marcuspeh"},"content":"        assertParseFailure(parser, VALID_NAME_BOB + PHONE_DESC_BOB,","lastModifiedDate":"2021-11-01"},{"lineNumber":74,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        // missing phone prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":77,"author":{"gitId":"marcuspeh"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + VALID_PHONE_BOB,","lastModifiedDate":"2021-11-01"},{"lineNumber":78,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        // all prefixes missing","lastModifiedDate":"2017-06-15"},{"lineNumber":81,"author":{"gitId":"marcuspeh"},"content":"        assertParseFailure(parser, VALID_NAME_BOB + VALID_PHONE_BOB,","lastModifiedDate":"2021-11-01"},{"lineNumber":82,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2017-06-15"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        // invalid name","lastModifiedDate":"2017-06-15"},{"lineNumber":88,"author":{"gitId":"marcuspeh"},"content":"        assertParseFailure(parser, INVALID_NAME_DESC + PHONE_DESC_BOB","lastModifiedDate":"2021-11-01"},{"lineNumber":89,"author":{"gitId":"-"},"content":"                + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        // invalid phone","lastModifiedDate":"2017-06-15"},{"lineNumber":92,"author":{"gitId":"marcuspeh"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + INVALID_PHONE_DESC","lastModifiedDate":"2021-11-01"},{"lineNumber":93,"author":{"gitId":"-"},"content":"                + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        // invalid tag","lastModifiedDate":"2017-06-15"},{"lineNumber":97,"author":{"gitId":"marcuspeh"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB","lastModifiedDate":"2021-11-01"},{"lineNumber":98,"author":{"gitId":"-"},"content":"                + INVALID_TAG_DESC + VALID_TAG_FRIEND, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":100,"author":{"gitId":"marcuspeh"},"content":"        // two invalid values, only first invalid va reported","lastModifiedDate":"2021-11-01"},{"lineNumber":101,"author":{"gitId":"marcuspeh"},"content":"        assertParseFailure(parser, INVALID_NAME_DESC + PHONE_DESC_BOB,","lastModifiedDate":"2021-11-01"},{"lineNumber":102,"author":{"gitId":"-"},"content":"                Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        // non-empty preamble","lastModifiedDate":"2017-12-23"},{"lineNumber":105,"author":{"gitId":"marcuspeh"},"content":"        assertParseFailure(parser, PREAMBLE_NON_EMPTY + NAME_DESC_BOB + PHONE_DESC_BOB","lastModifiedDate":"2021-11-01"},{"lineNumber":106,"author":{"gitId":"marcuspeh"},"content":"                + TAG_DESC_HUSBAND + TAG_DESC_FRIEND,","lastModifiedDate":"2021-11-01"},{"lineNumber":107,"author":{"gitId":"chrus-chong"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, MESSAGE_ADDCONTACTCOMMAND_USAGE));","lastModifiedDate":"2021-10-25"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":109,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-15"}],"authorContributionMap":{"marcuspeh":22,"chrus-chong":4,"ramapriyan912001":27,"-":56}},{"path":"src/test/java/seedu/awe/logic/parser/ArgumentTokenizerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"ramapriyan912001"},"content":"package seedu.awe.logic.parser;","lastModifiedDate":"2021-10-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class ArgumentTokenizerTest {","lastModifiedDate":"2016-10-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private final Prefix unknownPrefix \u003d new Prefix(\"--u\");","lastModifiedDate":"2016-10-16"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    private final Prefix pSlash \u003d new Prefix(\"p/\");","lastModifiedDate":"2017-03-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private final Prefix dashT \u003d new Prefix(\"-t\");","lastModifiedDate":"2016-10-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    private final Prefix hatQ \u003d new Prefix(\"^Q\");","lastModifiedDate":"2016-10-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public void tokenize_emptyArgsString_noValues() {","lastModifiedDate":"2016-10-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        String argsString \u003d \"  \";","lastModifiedDate":"2016-10-16"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash);","lastModifiedDate":"2017-03-20"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        assertPreambleEmpty(argMultimap);","lastModifiedDate":"2017-03-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertArgumentAbsent(argMultimap, pSlash);","lastModifiedDate":"2017-03-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private void assertPreamblePresent(ArgumentMultimap argMultimap, String expectedPreamble) {","lastModifiedDate":"2017-03-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertEquals(expectedPreamble, argMultimap.getPreamble());","lastModifiedDate":"2017-03-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private void assertPreambleEmpty(ArgumentMultimap argMultimap) {","lastModifiedDate":"2017-03-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertTrue(argMultimap.getPreamble().isEmpty());","lastModifiedDate":"2017-03-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-20"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Asserts all the arguments in {@code argMultimap} with {@code prefix} match the {@code expectedValues}","lastModifiedDate":"2017-08-20"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * and only the last value is returned upon calling {@code ArgumentMultimap#getValue(Prefix)}.","lastModifiedDate":"2017-08-20"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-20"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private void assertArgumentPresent(ArgumentMultimap argMultimap, Prefix prefix, String... expectedValues) {","lastModifiedDate":"2017-03-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        // Verify the last value is returned","lastModifiedDate":"2016-10-16"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertEquals(expectedValues[expectedValues.length - 1], argMultimap.getValue(prefix).get());","lastModifiedDate":"2017-06-07"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        // Verify the number of values returned is as expected","lastModifiedDate":"2016-10-16"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertEquals(expectedValues.length, argMultimap.getAllValues(prefix).size());","lastModifiedDate":"2017-03-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        // Verify all values returned are as expected and in order","lastModifiedDate":"2016-10-16"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        for (int i \u003d 0; i \u003c expectedValues.length; i++) {","lastModifiedDate":"2016-10-16"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            assertEquals(expectedValues[i], argMultimap.getAllValues(prefix).get(i));","lastModifiedDate":"2017-03-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-16"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    private void assertArgumentAbsent(ArgumentMultimap argMultimap, Prefix prefix) {","lastModifiedDate":"2017-03-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertFalse(argMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2017-03-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public void tokenize_noPrefixes_allTakenAsPreamble() {","lastModifiedDate":"2016-10-16"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        String argsString \u003d \"  some random string /t tag with leading and trailing spaces \";","lastModifiedDate":"2016-10-16"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString);","lastModifiedDate":"2017-03-20"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        // Same string expected as preamble, but leading/trailing spaces should be trimmed","lastModifiedDate":"2016-10-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, argsString.trim());","lastModifiedDate":"2017-03-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public void tokenize_oneArgument() {","lastModifiedDate":"2016-10-16"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        // Preamble present","lastModifiedDate":"2016-10-16"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        String argsString \u003d \"  Some preamble string p/ Argument value \";","lastModifiedDate":"2017-03-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash);","lastModifiedDate":"2017-03-20"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, \"Some preamble string\");","lastModifiedDate":"2017-03-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, pSlash, \"Argument value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        // No preamble","lastModifiedDate":"2016-10-16"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        argsString \u003d \" p/   Argument value \";","lastModifiedDate":"2017-03-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash);","lastModifiedDate":"2017-03-20"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        assertPreambleEmpty(argMultimap);","lastModifiedDate":"2017-03-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, pSlash, \"Argument value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public void tokenize_multipleArguments() {","lastModifiedDate":"2016-10-16"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        // Only two arguments are present","lastModifiedDate":"2016-10-16"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        String argsString \u003d \"SomePreambleString -t dashT-Value p/pSlash value\";","lastModifiedDate":"2017-03-08"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2017-03-20"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, \"SomePreambleString\");","lastModifiedDate":"2017-03-08"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, pSlash, \"pSlash value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, dashT, \"dashT-Value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        assertArgumentAbsent(argMultimap, hatQ);","lastModifiedDate":"2017-03-08"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        // All three arguments are present","lastModifiedDate":"2017-05-19"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        argsString \u003d \"Different Preamble String ^Q111 -t dashT-Value p/pSlash value\";","lastModifiedDate":"2017-03-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2017-03-20"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, \"Different Preamble String\");","lastModifiedDate":"2017-03-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, pSlash, \"pSlash value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, dashT, \"dashT-Value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, hatQ, \"111\");","lastModifiedDate":"2017-03-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        /* Also covers: Reusing of the tokenizer multiple times */","lastModifiedDate":"2016-10-16"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        // Reuse tokenizer on an empty string to ensure ArgumentMultimap is correctly reset","lastModifiedDate":"2017-03-08"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        // (i.e. no stale values from the previous tokenizing remain)","lastModifiedDate":"2017-03-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        argsString \u003d \"\";","lastModifiedDate":"2017-03-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2017-03-20"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        assertPreambleEmpty(argMultimap);","lastModifiedDate":"2017-03-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        assertArgumentAbsent(argMultimap, pSlash);","lastModifiedDate":"2017-03-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        /* Also covers: testing for prefixes not specified as a prefix */","lastModifiedDate":"2020-05-27"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        // Prefixes not previously given to the tokenizer should not return any values","lastModifiedDate":"2016-10-16"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        argsString \u003d unknownPrefix + \"some value\";","lastModifiedDate":"2017-05-09"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2017-03-20"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        assertArgumentAbsent(argMultimap, unknownPrefix);","lastModifiedDate":"2017-03-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, argsString); // Unknown prefix is taken as part of preamble","lastModifiedDate":"2017-03-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    public void tokenize_multipleArgumentsWithRepeats() {","lastModifiedDate":"2016-10-16"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        // Two arguments repeated, some have empty values","lastModifiedDate":"2016-10-16"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        String argsString \u003d \"SomePreambleString -t dashT-Value ^Q ^Q -t another dashT value p/ pSlash value -t\";","lastModifiedDate":"2017-03-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2017-03-20"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, \"SomePreambleString\");","lastModifiedDate":"2017-03-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, pSlash, \"pSlash value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, dashT, \"dashT-Value\", \"another dashT value\", \"\");","lastModifiedDate":"2017-03-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, hatQ, \"\", \"\");","lastModifiedDate":"2017-03-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-19"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    public void tokenize_multipleArgumentsJoined() {","lastModifiedDate":"2017-05-19"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        String argsString \u003d \"SomePreambleStringp/ pSlash joined-tjoined -t not joined^Qjoined\";","lastModifiedDate":"2017-05-19"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2017-05-19"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, \"SomePreambleStringp/ pSlash joined-tjoined\");","lastModifiedDate":"2017-05-19"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        assertArgumentAbsent(argMultimap, pSlash);","lastModifiedDate":"2017-05-19"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, dashT, \"not joined^Qjoined\");","lastModifiedDate":"2017-05-19"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        assertArgumentAbsent(argMultimap, hatQ);","lastModifiedDate":"2017-05-19"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-19"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    public void equalsMethod() {","lastModifiedDate":"2016-10-16"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        Prefix aaa \u003d new Prefix(\"aaa\");","lastModifiedDate":"2016-10-16"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        assertEquals(aaa, aaa);","lastModifiedDate":"2016-10-16"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        assertEquals(aaa, new Prefix(\"aaa\"));","lastModifiedDate":"2016-10-16"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        assertNotEquals(aaa, \"aaa\");","lastModifiedDate":"2016-10-16"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        assertNotEquals(aaa, new Prefix(\"aab\"));","lastModifiedDate":"2016-10-16"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":150,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-10-16"}],"authorContributionMap":{"ramapriyan912001":1,"-":149}},{"path":"src/test/java/seedu/awe/logic/parser/AweParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"ramapriyan912001"},"content":"package seedu.awe.logic.parser;","lastModifiedDate":"2021-10-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"chrus-chong"},"content":"import static seedu.awe.commons.core.Messages.MESSAGE_HELPCOMMAND_USAGE;","lastModifiedDate":"2021-10-25"},{"lineNumber":6,"author":{"gitId":"ramapriyan912001"},"content":"import static seedu.awe.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-10-05"},{"lineNumber":7,"author":{"gitId":"ramapriyan912001"},"content":"import static seedu.awe.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2021-10-05"},{"lineNumber":8,"author":{"gitId":"ramapriyan912001"},"content":"import static seedu.awe.testutil.Assert.assertThrows;","lastModifiedDate":"2021-10-05"},{"lineNumber":9,"author":{"gitId":"ramapriyan912001"},"content":"import static seedu.awe.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2021-10-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2017-06-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":17,"author":{"gitId":"marcuspeh"},"content":"import seedu.awe.logic.commands.AddContactCommand;","lastModifiedDate":"2021-10-12"},{"lineNumber":18,"author":{"gitId":"ramapriyan912001"},"content":"import seedu.awe.logic.commands.ClearAllDataCommand;","lastModifiedDate":"2021-10-30"},{"lineNumber":19,"author":{"gitId":"marcuspeh"},"content":"import seedu.awe.logic.commands.DeleteContactCommand;","lastModifiedDate":"2021-10-12"},{"lineNumber":20,"author":{"gitId":"marcuspeh"},"content":"import seedu.awe.logic.commands.EditContactCommand;","lastModifiedDate":"2021-10-12"},{"lineNumber":21,"author":{"gitId":"marcuspeh"},"content":"import seedu.awe.logic.commands.EditContactCommand.EditPersonDescriptor;","lastModifiedDate":"2021-10-11"},{"lineNumber":22,"author":{"gitId":"marcuspeh"},"content":"import seedu.awe.logic.commands.FindContactsCommand;","lastModifiedDate":"2021-10-12"},{"lineNumber":23,"author":{"gitId":"marcuspeh"},"content":"import seedu.awe.logic.commands.FindGroupsCommand;","lastModifiedDate":"2021-10-12"},{"lineNumber":24,"author":{"gitId":"marcuspeh"},"content":"import seedu.awe.logic.commands.HelpCommand;","lastModifiedDate":"2021-10-12"},{"lineNumber":25,"author":{"gitId":"marcuspeh"},"content":"import seedu.awe.logic.commands.ListContactsCommand;","lastModifiedDate":"2021-10-12"},{"lineNumber":26,"author":{"gitId":"marcuspeh"},"content":"import seedu.awe.logic.commands.ListGroupsCommand;","lastModifiedDate":"2021-10-12"},{"lineNumber":27,"author":{"gitId":"ramapriyan912001"},"content":"import seedu.awe.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-10-05"},{"lineNumber":28,"author":{"gitId":"marcuspeh"},"content":"import seedu.awe.model.group.GroupContainsKeywordsPredicate;","lastModifiedDate":"2021-10-12"},{"lineNumber":29,"author":{"gitId":"ramapriyan912001"},"content":"import seedu.awe.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2021-10-05"},{"lineNumber":30,"author":{"gitId":"ramapriyan912001"},"content":"import seedu.awe.model.person.Person;","lastModifiedDate":"2021-10-05"},{"lineNumber":31,"author":{"gitId":"ramapriyan912001"},"content":"import seedu.awe.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2021-10-05"},{"lineNumber":32,"author":{"gitId":"ramapriyan912001"},"content":"import seedu.awe.testutil.PersonBuilder;","lastModifiedDate":"2021-10-05"},{"lineNumber":33,"author":{"gitId":"ramapriyan912001"},"content":"import seedu.awe.testutil.PersonUtil;","lastModifiedDate":"2021-10-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":35,"author":{"gitId":"marcuspeh"},"content":"public class AweParserTest {","lastModifiedDate":"2021-10-22"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":37,"author":{"gitId":"marcuspeh"},"content":"    private final AweParser parser \u003d new AweParser();","lastModifiedDate":"2021-10-22"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":40,"author":{"gitId":"marcuspeh"},"content":"    public void parseCommand_addContact() throws Exception {","lastModifiedDate":"2021-10-12"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        Person person \u003d new PersonBuilder().build();","lastModifiedDate":"2017-06-27"},{"lineNumber":42,"author":{"gitId":"marcuspeh"},"content":"        AddContactCommand command \u003d (AddContactCommand) parser.parseCommand(PersonUtil.getAddCommand(person));","lastModifiedDate":"2021-10-11"},{"lineNumber":43,"author":{"gitId":"marcuspeh"},"content":"        assertEquals(new AddContactCommand(person), command);","lastModifiedDate":"2021-10-11"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":47,"author":{"gitId":"marcuspeh"},"content":"    public void parseCommand_deleteContact() throws Exception {","lastModifiedDate":"2021-10-12"},{"lineNumber":48,"author":{"gitId":"marcuspeh"},"content":"        DeleteContactCommand command \u003d (DeleteContactCommand) parser.parseCommand(","lastModifiedDate":"2021-10-11"},{"lineNumber":49,"author":{"gitId":"marcuspeh"},"content":"                DeleteContactCommand.COMMAND_WORD + \" \" + INDEX_FIRST_PERSON.getOneBased());","lastModifiedDate":"2021-10-11"},{"lineNumber":50,"author":{"gitId":"marcuspeh"},"content":"        assertEquals(new DeleteContactCommand(INDEX_FIRST_PERSON), command);","lastModifiedDate":"2021-10-11"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":54,"author":{"gitId":"marcuspeh"},"content":"    public void parseCommand_editContact() throws Exception {","lastModifiedDate":"2021-10-12"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        Person person \u003d new PersonBuilder().build();","lastModifiedDate":"2017-06-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder(person).build();","lastModifiedDate":"2017-06-27"},{"lineNumber":57,"author":{"gitId":"marcuspeh"},"content":"        EditContactCommand command \u003d (EditContactCommand) parser.parseCommand(EditContactCommand.COMMAND_WORD + \" \"","lastModifiedDate":"2021-10-11"},{"lineNumber":58,"author":{"gitId":"-"},"content":"                + INDEX_FIRST_PERSON.getOneBased() + \" \" + PersonUtil.getEditPersonDescriptorDetails(descriptor));","lastModifiedDate":"2018-03-26"},{"lineNumber":59,"author":{"gitId":"marcuspeh"},"content":"        assertEquals(new EditContactCommand(INDEX_FIRST_PERSON, descriptor), command);","lastModifiedDate":"2021-10-11"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":63,"author":{"gitId":"marcuspeh"},"content":"    public void parseCommand_findContact() throws Exception {","lastModifiedDate":"2021-10-12"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        List\u003cString\u003e keywords \u003d Arrays.asList(\"foo\", \"bar\", \"baz\");","lastModifiedDate":"2017-06-12"},{"lineNumber":65,"author":{"gitId":"marcuspeh"},"content":"        FindContactsCommand command \u003d (FindContactsCommand) parser.parseCommand(","lastModifiedDate":"2021-10-10"},{"lineNumber":66,"author":{"gitId":"marcuspeh"},"content":"                FindContactsCommand.COMMAND_WORD + \" \" + keywords.stream().collect(Collectors.joining(\" \")));","lastModifiedDate":"2021-10-10"},{"lineNumber":67,"author":{"gitId":"marcuspeh"},"content":"        assertEquals(new FindContactsCommand(new NameContainsKeywordsPredicate(keywords)), command);","lastModifiedDate":"2021-10-10"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":71,"author":{"gitId":"marcuspeh"},"content":"    public void parseCommand_contacts() throws Exception {","lastModifiedDate":"2021-10-12"},{"lineNumber":72,"author":{"gitId":"marcuspeh"},"content":"        assertTrue(parser.parseCommand(ListContactsCommand.COMMAND_WORD) instanceof ListContactsCommand);","lastModifiedDate":"2021-10-12"},{"lineNumber":73,"author":{"gitId":"marcuspeh"},"content":"        assertTrue(parser.parseCommand(ListContactsCommand.COMMAND_WORD + \" 3\") instanceof ListContactsCommand);","lastModifiedDate":"2021-10-12"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":77,"author":{"gitId":"marcuspeh"},"content":"    public void parseCommand_findGroups() throws Exception {","lastModifiedDate":"2021-10-12"},{"lineNumber":78,"author":{"gitId":"marcuspeh"},"content":"        List\u003cString\u003e keywords \u003d Arrays.asList(\"London\", \"Japan\", \"Taiwan\");","lastModifiedDate":"2021-10-12"},{"lineNumber":79,"author":{"gitId":"marcuspeh"},"content":"        FindGroupsCommand command \u003d (FindGroupsCommand) parser.parseCommand(","lastModifiedDate":"2021-10-12"},{"lineNumber":80,"author":{"gitId":"marcuspeh"},"content":"                FindGroupsCommand.COMMAND_WORD + \" \" + keywords.stream().collect(Collectors.joining(\" \")));","lastModifiedDate":"2021-10-12"},{"lineNumber":81,"author":{"gitId":"marcuspeh"},"content":"        assertEquals(new FindGroupsCommand(new GroupContainsKeywordsPredicate(keywords)), command);","lastModifiedDate":"2021-10-12"},{"lineNumber":82,"author":{"gitId":"marcuspeh"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":83,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":84,"author":{"gitId":"marcuspeh"},"content":"    @Test","lastModifiedDate":"2021-10-12"},{"lineNumber":85,"author":{"gitId":"marcuspeh"},"content":"    public void parseCommand_groups() throws Exception {","lastModifiedDate":"2021-10-12"},{"lineNumber":86,"author":{"gitId":"marcuspeh"},"content":"        assertTrue(parser.parseCommand(ListGroupsCommand.COMMAND_WORD) instanceof ListGroupsCommand);","lastModifiedDate":"2021-10-12"},{"lineNumber":87,"author":{"gitId":"marcuspeh"},"content":"        assertTrue(parser.parseCommand(ListGroupsCommand.COMMAND_WORD + \" 3\") instanceof ListGroupsCommand);","lastModifiedDate":"2021-10-12"},{"lineNumber":88,"author":{"gitId":"marcuspeh"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":89,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":90,"author":{"gitId":"marcuspeh"},"content":"    @Test","lastModifiedDate":"2021-10-12"},{"lineNumber":91,"author":{"gitId":"ramapriyan912001"},"content":"    public void parseCommand_clearAllData() throws Exception {","lastModifiedDate":"2021-10-30"},{"lineNumber":92,"author":{"gitId":"ramapriyan912001"},"content":"        assertTrue(parser.parseCommand(ClearAllDataCommand.COMMAND_WORD) instanceof ClearAllDataCommand);","lastModifiedDate":"2021-10-30"},{"lineNumber":93,"author":{"gitId":"ramapriyan912001"},"content":"        assertTrue(parser.parseCommand(ClearAllDataCommand.COMMAND_WORD + \" 3\") instanceof ClearAllDataCommand);","lastModifiedDate":"2021-10-30"},{"lineNumber":94,"author":{"gitId":"marcuspeh"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":95,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":96,"author":{"gitId":"marcuspeh"},"content":"    @Test","lastModifiedDate":"2021-10-12"},{"lineNumber":97,"author":{"gitId":"marcuspeh"},"content":"    public void parseCommand_help() throws Exception {","lastModifiedDate":"2021-10-12"},{"lineNumber":98,"author":{"gitId":"marcuspeh"},"content":"        assertTrue(parser.parseCommand(HelpCommand.COMMAND_WORD) instanceof HelpCommand);","lastModifiedDate":"2021-10-12"},{"lineNumber":99,"author":{"gitId":"marcuspeh"},"content":"        assertTrue(parser.parseCommand(HelpCommand.COMMAND_WORD + \" 3\") instanceof HelpCommand);","lastModifiedDate":"2021-10-12"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    public void parseCommand_unrecognisedInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":104,"author":{"gitId":"chrus-chong"},"content":"        assertThrows(ParseException.class, String.format(MESSAGE_INVALID_COMMAND_FORMAT, MESSAGE_HELPCOMMAND_USAGE), ()","lastModifiedDate":"2021-10-25"},{"lineNumber":105,"author":{"gitId":"-"},"content":"            -\u003e parser.parseCommand(\"\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    public void parseCommand_unknownCommand_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, MESSAGE_UNKNOWN_COMMAND, () -\u003e parser.parseCommand(\"unknownCommand\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":112,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-24"}],"authorContributionMap":{"marcuspeh":49,"chrus-chong":2,"ramapriyan912001":15,"-":46}},{"path":"src/test/java/seedu/awe/logic/parser/CalculatePaymentsCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"ramapriyan912001"},"content":"package seedu.awe.logic.parser;","lastModifiedDate":"2021-10-27"},{"lineNumber":2,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":3,"author":{"gitId":"ramapriyan912001"},"content":"import static seedu.awe.commons.core.Messages.MESSAGE_CALCULATEPAYMENTSCOMMAND_USAGE;","lastModifiedDate":"2021-10-27"},{"lineNumber":4,"author":{"gitId":"ramapriyan912001"},"content":"import static seedu.awe.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-10-27"},{"lineNumber":5,"author":{"gitId":"ramapriyan912001"},"content":"import static seedu.awe.logic.commands.CommandTestUtil.GROUPNAME_DESC_BALI;","lastModifiedDate":"2021-10-27"},{"lineNumber":6,"author":{"gitId":"ramapriyan912001"},"content":"import static seedu.awe.logic.commands.CommandTestUtil.GROUPNAME_DESC_OSLO;","lastModifiedDate":"2021-10-27"},{"lineNumber":7,"author":{"gitId":"ramapriyan912001"},"content":"import static seedu.awe.logic.commands.CommandTestUtil.INVALID_GROUP_NAME_DESC;","lastModifiedDate":"2021-10-27"},{"lineNumber":8,"author":{"gitId":"ramapriyan912001"},"content":"import static seedu.awe.logic.commands.CommandTestUtil.PREAMBLE_NON_EMPTY;","lastModifiedDate":"2021-10-27"},{"lineNumber":9,"author":{"gitId":"ramapriyan912001"},"content":"import static seedu.awe.logic.commands.CommandTestUtil.PREAMBLE_WHITESPACE;","lastModifiedDate":"2021-10-27"},{"lineNumber":10,"author":{"gitId":"ramapriyan912001"},"content":"import static seedu.awe.logic.parser.CliSyntax.PREFIX_GROUP_NAME;","lastModifiedDate":"2021-10-27"},{"lineNumber":11,"author":{"gitId":"ramapriyan912001"},"content":"import static seedu.awe.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2021-10-27"},{"lineNumber":12,"author":{"gitId":"ramapriyan912001"},"content":"import static seedu.awe.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2021-10-27"},{"lineNumber":13,"author":{"gitId":"ramapriyan912001"},"content":"import static seedu.awe.testutil.Assert.assertThrows;","lastModifiedDate":"2021-10-27"},{"lineNumber":14,"author":{"gitId":"ramapriyan912001"},"content":"import static seedu.awe.testutil.TypicalGroups.BALI;","lastModifiedDate":"2021-10-27"},{"lineNumber":15,"author":{"gitId":"ramapriyan912001"},"content":"import static seedu.awe.testutil.TypicalGroups.OSLO;","lastModifiedDate":"2021-10-27"},{"lineNumber":16,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":17,"author":{"gitId":"ramapriyan912001"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-27"},{"lineNumber":18,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":19,"author":{"gitId":"ramapriyan912001"},"content":"import seedu.awe.logic.commands.CalculatePaymentsCommand;","lastModifiedDate":"2021-10-27"},{"lineNumber":20,"author":{"gitId":"ramapriyan912001"},"content":"import seedu.awe.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-10-27"},{"lineNumber":21,"author":{"gitId":"ramapriyan912001"},"content":"import seedu.awe.model.group.GroupName;","lastModifiedDate":"2021-10-27"},{"lineNumber":22,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":23,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":24,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":25,"author":{"gitId":"ramapriyan912001"},"content":"public class CalculatePaymentsCommandParserTest {","lastModifiedDate":"2021-10-27"},{"lineNumber":26,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":27,"author":{"gitId":"ramapriyan912001"},"content":"    private CalculatePaymentsCommandParser parser;","lastModifiedDate":"2021-10-27"},{"lineNumber":28,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":29,"author":{"gitId":"ramapriyan912001"},"content":"    public CalculatePaymentsCommandParserTest() {","lastModifiedDate":"2021-10-27"},{"lineNumber":30,"author":{"gitId":"ramapriyan912001"},"content":"        parser \u003d new CalculatePaymentsCommandParser();","lastModifiedDate":"2021-10-27"},{"lineNumber":31,"author":{"gitId":"ramapriyan912001"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":32,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":33,"author":{"gitId":"ramapriyan912001"},"content":"    /**","lastModifiedDate":"2021-10-27"},{"lineNumber":34,"author":{"gitId":"ramapriyan912001"},"content":"     * Resets parser. Necessary as CalculatePaymentsCommand parser needs to be initialised with a model for each call.","lastModifiedDate":"2021-10-27"},{"lineNumber":35,"author":{"gitId":"ramapriyan912001"},"content":"     * Failure to reset parser will result in Duplicate exceptions being raised.","lastModifiedDate":"2021-10-27"},{"lineNumber":36,"author":{"gitId":"ramapriyan912001"},"content":"     */","lastModifiedDate":"2021-10-27"},{"lineNumber":37,"author":{"gitId":"ramapriyan912001"},"content":"    public void resetParser() {","lastModifiedDate":"2021-10-27"},{"lineNumber":38,"author":{"gitId":"ramapriyan912001"},"content":"        parser \u003d new CalculatePaymentsCommandParser();","lastModifiedDate":"2021-10-27"},{"lineNumber":39,"author":{"gitId":"ramapriyan912001"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":40,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":41,"author":{"gitId":"ramapriyan912001"},"content":"    @Test","lastModifiedDate":"2021-10-27"},{"lineNumber":42,"author":{"gitId":"ramapriyan912001"},"content":"    public void parse_allFieldsPresent_success() {","lastModifiedDate":"2021-10-27"},{"lineNumber":43,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":44,"author":{"gitId":"ramapriyan912001"},"content":"        // regular input for CalculatePaymentsCommand","lastModifiedDate":"2021-10-27"},{"lineNumber":45,"author":{"gitId":"ramapriyan912001"},"content":"        assertParseSuccess(parser, GROUPNAME_DESC_BALI,","lastModifiedDate":"2021-10-27"},{"lineNumber":46,"author":{"gitId":"ramapriyan912001"},"content":"                new CalculatePaymentsCommand(BALI));","lastModifiedDate":"2021-10-27"},{"lineNumber":47,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":48,"author":{"gitId":"ramapriyan912001"},"content":"        resetParser();","lastModifiedDate":"2021-10-27"},{"lineNumber":49,"author":{"gitId":"ramapriyan912001"},"content":"        // names in different order","lastModifiedDate":"2021-10-27"},{"lineNumber":50,"author":{"gitId":"ramapriyan912001"},"content":"        assertParseSuccess(parser, GROUPNAME_DESC_OSLO,","lastModifiedDate":"2021-10-27"},{"lineNumber":51,"author":{"gitId":"ramapriyan912001"},"content":"                new CalculatePaymentsCommand(OSLO));","lastModifiedDate":"2021-10-27"},{"lineNumber":52,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":53,"author":{"gitId":"ramapriyan912001"},"content":"        resetParser();","lastModifiedDate":"2021-10-27"},{"lineNumber":54,"author":{"gitId":"ramapriyan912001"},"content":"        // whitespace only preamble","lastModifiedDate":"2021-10-27"},{"lineNumber":55,"author":{"gitId":"ramapriyan912001"},"content":"        assertParseSuccess(parser, PREAMBLE_WHITESPACE + GROUPNAME_DESC_BALI,","lastModifiedDate":"2021-10-27"},{"lineNumber":56,"author":{"gitId":"ramapriyan912001"},"content":"                new CalculatePaymentsCommand(BALI));","lastModifiedDate":"2021-10-27"},{"lineNumber":57,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":58,"author":{"gitId":"ramapriyan912001"},"content":"        resetParser();","lastModifiedDate":"2021-10-27"},{"lineNumber":59,"author":{"gitId":"ramapriyan912001"},"content":"        // whitespace only preamble","lastModifiedDate":"2021-10-27"},{"lineNumber":60,"author":{"gitId":"ramapriyan912001"},"content":"        assertParseSuccess(parser, PREAMBLE_WHITESPACE + GROUPNAME_DESC_OSLO,","lastModifiedDate":"2021-10-27"},{"lineNumber":61,"author":{"gitId":"ramapriyan912001"},"content":"                new CalculatePaymentsCommand(OSLO));","lastModifiedDate":"2021-10-27"},{"lineNumber":62,"author":{"gitId":"ramapriyan912001"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":63,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":64,"author":{"gitId":"ramapriyan912001"},"content":"    @Test","lastModifiedDate":"2021-10-27"},{"lineNumber":65,"author":{"gitId":"ramapriyan912001"},"content":"    public void parse_compulsoryFieldMissing_failure() {","lastModifiedDate":"2021-10-27"},{"lineNumber":66,"author":{"gitId":"ramapriyan912001"},"content":"        String expectedMessage \u003d String.format(MESSAGE_INVALID_COMMAND_FORMAT, MESSAGE_CALCULATEPAYMENTSCOMMAND_USAGE);","lastModifiedDate":"2021-10-27"},{"lineNumber":67,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":68,"author":{"gitId":"ramapriyan912001"},"content":"        resetParser();","lastModifiedDate":"2021-10-27"},{"lineNumber":69,"author":{"gitId":"ramapriyan912001"},"content":"        // missing group prefix","lastModifiedDate":"2021-10-27"},{"lineNumber":70,"author":{"gitId":"ramapriyan912001"},"content":"        String inputMissingGroupPrefix \u003d \" Bali\";","lastModifiedDate":"2021-10-27"},{"lineNumber":71,"author":{"gitId":"ramapriyan912001"},"content":"        assertParseFailure(parser, inputMissingGroupPrefix, expectedMessage);","lastModifiedDate":"2021-10-27"},{"lineNumber":72,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":73,"author":{"gitId":"ramapriyan912001"},"content":"        resetParser();","lastModifiedDate":"2021-10-27"},{"lineNumber":74,"author":{"gitId":"ramapriyan912001"},"content":"        // empty command","lastModifiedDate":"2021-10-27"},{"lineNumber":75,"author":{"gitId":"ramapriyan912001"},"content":"        assertParseFailure(parser, \" \", expectedMessage);","lastModifiedDate":"2021-10-27"},{"lineNumber":76,"author":{"gitId":"ramapriyan912001"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":77,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":78,"author":{"gitId":"ramapriyan912001"},"content":"    @Test","lastModifiedDate":"2021-10-27"},{"lineNumber":79,"author":{"gitId":"ramapriyan912001"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2021-10-27"},{"lineNumber":80,"author":{"gitId":"ramapriyan912001"},"content":"        String expectedMessage \u003d String.format(MESSAGE_INVALID_COMMAND_FORMAT, MESSAGE_CALCULATEPAYMENTSCOMMAND_USAGE);","lastModifiedDate":"2021-10-27"},{"lineNumber":81,"author":{"gitId":"ramapriyan912001"},"content":"        resetParser();","lastModifiedDate":"2021-10-27"},{"lineNumber":82,"author":{"gitId":"ramapriyan912001"},"content":"        // invalid group name","lastModifiedDate":"2021-10-27"},{"lineNumber":83,"author":{"gitId":"ramapriyan912001"},"content":"        assertParseFailure(parser, INVALID_GROUP_NAME_DESC, GroupName.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-27"},{"lineNumber":84,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":85,"author":{"gitId":"ramapriyan912001"},"content":"        resetParser();","lastModifiedDate":"2021-10-27"},{"lineNumber":86,"author":{"gitId":"ramapriyan912001"},"content":"        // empty group name","lastModifiedDate":"2021-10-27"},{"lineNumber":87,"author":{"gitId":"ramapriyan912001"},"content":"        String emptyGroupNameInput \u003d \" \" + PREFIX_GROUP_NAME;","lastModifiedDate":"2021-10-27"},{"lineNumber":88,"author":{"gitId":"ramapriyan912001"},"content":"        assertParseFailure(parser, emptyGroupNameInput, GroupName.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-27"},{"lineNumber":89,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":90,"author":{"gitId":"ramapriyan912001"},"content":"        resetParser();","lastModifiedDate":"2021-10-27"},{"lineNumber":91,"author":{"gitId":"ramapriyan912001"},"content":"        // invalid name returns IllegalArgumentException","lastModifiedDate":"2021-10-27"},{"lineNumber":92,"author":{"gitId":"ramapriyan912001"},"content":"        String userInput \u003d INVALID_GROUP_NAME_DESC;","lastModifiedDate":"2021-10-27"},{"lineNumber":93,"author":{"gitId":"ramapriyan912001"},"content":"        assertThrows(ParseException.class, GroupName.MESSAGE_CONSTRAINTS, () -\u003e parser.parse(userInput));","lastModifiedDate":"2021-10-27"},{"lineNumber":94,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":95,"author":{"gitId":"ramapriyan912001"},"content":"        resetParser();","lastModifiedDate":"2021-10-27"},{"lineNumber":96,"author":{"gitId":"ramapriyan912001"},"content":"        // non-empty preamble","lastModifiedDate":"2021-10-27"},{"lineNumber":97,"author":{"gitId":"ramapriyan912001"},"content":"        assertParseFailure(parser, PREAMBLE_NON_EMPTY + GROUPNAME_DESC_BALI, expectedMessage);","lastModifiedDate":"2021-10-27"},{"lineNumber":98,"author":{"gitId":"ramapriyan912001"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":99,"author":{"gitId":"ramapriyan912001"},"content":"}","lastModifiedDate":"2021-10-27"}],"authorContributionMap":{"ramapriyan912001":99}},{"path":"src/test/java/seedu/awe/logic/parser/CommandParserTestUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"ramapriyan912001"},"content":"package seedu.awe.logic.parser;","lastModifiedDate":"2021-10-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":5,"author":{"gitId":"ramapriyan912001"},"content":"import seedu.awe.logic.commands.Command;","lastModifiedDate":"2021-10-05"},{"lineNumber":6,"author":{"gitId":"ramapriyan912001"},"content":"import seedu.awe.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-10-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-07-06"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Contains helper methods for testing command parsers.","lastModifiedDate":"2017-07-06"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-07-06"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class CommandParserTestUtil {","lastModifiedDate":"2017-07-06"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-06"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     * Asserts that the parsing of {@code userInput} by {@code parser} is successful and the command created","lastModifiedDate":"2017-07-06"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * equals to {@code expectedCommand}.","lastModifiedDate":"2017-07-06"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-06"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public static void assertParseSuccess(Parser parser, String userInput, Command expectedCommand) {","lastModifiedDate":"2017-08-15"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-08-15"},{"lineNumber":19,"author":{"gitId":"-"},"content":"            Command command \u003d parser.parse(userInput);","lastModifiedDate":"2017-07-06"},{"lineNumber":20,"author":{"gitId":"-"},"content":"            assertEquals(expectedCommand, command);","lastModifiedDate":"2017-07-06"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2017-08-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"            throw new IllegalArgumentException(\"Invalid userInput.\", pe);","lastModifiedDate":"2017-08-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-08-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * Asserts that the parsing of {@code userInput} by {@code parser} is unsuccessful and the error message","lastModifiedDate":"2017-07-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * equals to {@code expectedMessage}.","lastModifiedDate":"2017-07-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public static void assertParseFailure(Parser parser, String userInput, String expectedMessage) {","lastModifiedDate":"2017-07-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-07-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"            parser.parse(userInput);","lastModifiedDate":"2017-07-06"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"The expected ParseException was not thrown.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2017-07-06"},{"lineNumber":35,"author":{"gitId":"-"},"content":"            assertEquals(expectedMessage, pe.getMessage());","lastModifiedDate":"2017-07-06"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-07-06"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-06"},{"lineNumber":38,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-07-06"}],"authorContributionMap":{"ramapriyan912001":3,"-":35}},{"path":"src/test/java/seedu/awe/logic/parser/CreateGroupCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"ramapriyan912001"},"content":"package seedu.awe.logic.parser;","lastModifiedDate":"2021-10-05"},{"lineNumber":2,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":3,"author":{"gitId":"chrus-chong"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-10"},{"lineNumber":4,"author":{"gitId":"chrus-chong"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-10"},{"lineNumber":5,"author":{"gitId":"chrus-chong"},"content":"import static seedu.awe.commons.core.Messages.MESSAGE_CREATEGROUPCOMMAND_EMPTY_GROUP;","lastModifiedDate":"2021-10-25"},{"lineNumber":6,"author":{"gitId":"chrus-chong"},"content":"import static seedu.awe.commons.core.Messages.MESSAGE_CREATEGROUPCOMMAND_ERROR;","lastModifiedDate":"2021-10-25"},{"lineNumber":7,"author":{"gitId":"chrus-chong"},"content":"import static seedu.awe.commons.core.Messages.MESSAGE_CREATEGROUPCOMMAND_INVALID_NAMES;","lastModifiedDate":"2021-10-25"},{"lineNumber":8,"author":{"gitId":"chrus-chong"},"content":"import static seedu.awe.commons.core.Messages.MESSAGE_CREATEGROUPCOMMAND_USAGE;","lastModifiedDate":"2021-10-25"},{"lineNumber":9,"author":{"gitId":"chrus-chong"},"content":"import static seedu.awe.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-10-06"},{"lineNumber":10,"author":{"gitId":"chrus-chong"},"content":"import static seedu.awe.logic.commands.CommandTestUtil.GROUPNAME_DESC_BALI;","lastModifiedDate":"2021-10-06"},{"lineNumber":11,"author":{"gitId":"chrus-chong"},"content":"import static seedu.awe.logic.commands.CommandTestUtil.INVALID_GROUP_NAME_DESC;","lastModifiedDate":"2021-10-06"},{"lineNumber":12,"author":{"gitId":"chrus-chong"},"content":"import static seedu.awe.logic.commands.CommandTestUtil.INVALID_NAME_DESC;","lastModifiedDate":"2021-10-06"},{"lineNumber":13,"author":{"gitId":"ramapriyan912001"},"content":"import static seedu.awe.logic.commands.CommandTestUtil.INVALID_NAME_DESC_ONE;","lastModifiedDate":"2021-10-09"},{"lineNumber":14,"author":{"gitId":"ramapriyan912001"},"content":"import static seedu.awe.logic.commands.CommandTestUtil.INVALID_NAME_DESC_TWO;","lastModifiedDate":"2021-10-09"},{"lineNumber":15,"author":{"gitId":"chrus-chong"},"content":"import static seedu.awe.logic.commands.CommandTestUtil.NAME_DESC_ALICE;","lastModifiedDate":"2021-10-06"},{"lineNumber":16,"author":{"gitId":"chrus-chong"},"content":"import static seedu.awe.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2021-10-06"},{"lineNumber":17,"author":{"gitId":"chrus-chong"},"content":"import static seedu.awe.logic.commands.CommandTestUtil.NAME_DESC_BOB;","lastModifiedDate":"2021-10-06"},{"lineNumber":18,"author":{"gitId":"chrus-chong"},"content":"import static seedu.awe.logic.commands.CommandTestUtil.PREAMBLE_NON_EMPTY;","lastModifiedDate":"2021-10-06"},{"lineNumber":19,"author":{"gitId":"chrus-chong"},"content":"import static seedu.awe.logic.commands.CommandTestUtil.PREAMBLE_WHITESPACE;","lastModifiedDate":"2021-10-06"},{"lineNumber":20,"author":{"gitId":"chrus-chong"},"content":"import static seedu.awe.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2021-10-06"},{"lineNumber":21,"author":{"gitId":"chrus-chong"},"content":"import static seedu.awe.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2021-10-06"},{"lineNumber":22,"author":{"gitId":"chrus-chong"},"content":"import static seedu.awe.testutil.Assert.assertThrows;","lastModifiedDate":"2021-10-06"},{"lineNumber":23,"author":{"gitId":"chrus-chong"},"content":"import static seedu.awe.testutil.TypicalGroups.BALI;","lastModifiedDate":"2021-10-06"},{"lineNumber":24,"author":{"gitId":"chrus-chong"},"content":"import static seedu.awe.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2021-10-10"},{"lineNumber":25,"author":{"gitId":"chrus-chong"},"content":"import static seedu.awe.testutil.TypicalPersons.AMY;","lastModifiedDate":"2021-10-10"},{"lineNumber":26,"author":{"gitId":"chrus-chong"},"content":"import static seedu.awe.testutil.TypicalPersons.BOB;","lastModifiedDate":"2021-10-10"},{"lineNumber":27,"author":{"gitId":"chrus-chong"},"content":"import static seedu.awe.testutil.TypicalPersons.NONEXISTENTPERSON;","lastModifiedDate":"2021-10-10"},{"lineNumber":28,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":29,"author":{"gitId":"chrus-chong"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-06"},{"lineNumber":30,"author":{"gitId":"ramapriyan912001"},"content":"import java.util.HashSet;","lastModifiedDate":"2021-10-09"},{"lineNumber":31,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":32,"author":{"gitId":"chrus-chong"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-06"},{"lineNumber":33,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":34,"author":{"gitId":"chrus-chong"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-10-10"},{"lineNumber":35,"author":{"gitId":"chrus-chong"},"content":"import seedu.awe.logic.commands.CreateGroupCommand;","lastModifiedDate":"2021-10-06"},{"lineNumber":36,"author":{"gitId":"ramapriyan912001"},"content":"import seedu.awe.logic.parser.exceptions.EmptyGroupException;","lastModifiedDate":"2021-10-09"},{"lineNumber":37,"author":{"gitId":"chrus-chong"},"content":"import seedu.awe.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-10-10"},{"lineNumber":38,"author":{"gitId":"chrus-chong"},"content":"import seedu.awe.model.group.GroupName;","lastModifiedDate":"2021-10-06"},{"lineNumber":39,"author":{"gitId":"ramapriyan912001"},"content":"import seedu.awe.model.group.exceptions.DuplicateGroupException;","lastModifiedDate":"2021-10-07"},{"lineNumber":40,"author":{"gitId":"chrus-chong"},"content":"import seedu.awe.model.person.Name;","lastModifiedDate":"2021-10-10"},{"lineNumber":41,"author":{"gitId":"chrus-chong"},"content":"import seedu.awe.model.person.Person;","lastModifiedDate":"2021-10-06"},{"lineNumber":42,"author":{"gitId":"chrus-chong"},"content":"import seedu.awe.testutil.ModelBuilder;","lastModifiedDate":"2021-10-06"},{"lineNumber":43,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":44,"author":{"gitId":"chrus-chong"},"content":"public class CreateGroupCommandParserTest {","lastModifiedDate":"2021-10-05"},{"lineNumber":45,"author":{"gitId":"ramapriyan912001"},"content":"    private CreateGroupCommandParser parser;","lastModifiedDate":"2021-10-07"},{"lineNumber":46,"author":{"gitId":"chrus-chong"},"content":"    private CreateGroupCommandParser emptyParser;","lastModifiedDate":"2021-10-10"},{"lineNumber":47,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":48,"author":{"gitId":"ramapriyan912001"},"content":"    public CreateGroupCommandParserTest() {","lastModifiedDate":"2021-10-07"},{"lineNumber":49,"author":{"gitId":"ramapriyan912001"},"content":"        parser \u003d new CreateGroupCommandParser(new ModelBuilder().build());","lastModifiedDate":"2021-10-07"},{"lineNumber":50,"author":{"gitId":"chrus-chong"},"content":"        emptyParser \u003d new CreateGroupCommandParser(new ModelBuilder().buildEmptyModel());","lastModifiedDate":"2021-10-10"},{"lineNumber":51,"author":{"gitId":"ramapriyan912001"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":52,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":53,"author":{"gitId":"chrus-chong"},"content":"    /**","lastModifiedDate":"2021-10-06"},{"lineNumber":54,"author":{"gitId":"chrus-chong"},"content":"     * Resets parser. Necessary as CreateGroupCommand parser needs to be initialised with a model for each call.","lastModifiedDate":"2021-10-06"},{"lineNumber":55,"author":{"gitId":"chrus-chong"},"content":"     * Failure to reset parser will result in Duplicate exceptions being raised.","lastModifiedDate":"2021-10-06"},{"lineNumber":56,"author":{"gitId":"chrus-chong"},"content":"     */","lastModifiedDate":"2021-10-06"},{"lineNumber":57,"author":{"gitId":"ramapriyan912001"},"content":"    public void resetParser() throws DuplicateGroupException {","lastModifiedDate":"2021-10-07"},{"lineNumber":58,"author":{"gitId":"chrus-chong"},"content":"        parser \u003d new CreateGroupCommandParser(new ModelBuilder().build());","lastModifiedDate":"2021-10-06"},{"lineNumber":59,"author":{"gitId":"chrus-chong"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":60,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":61,"author":{"gitId":"chrus-chong"},"content":"    @Test","lastModifiedDate":"2021-10-06"},{"lineNumber":62,"author":{"gitId":"chrus-chong"},"content":"    public void parse_allFieldsPresent_success() {","lastModifiedDate":"2021-10-06"},{"lineNumber":63,"author":{"gitId":"chrus-chong"},"content":"        GroupName expectedGroupName \u003d BALI.getGroupName();","lastModifiedDate":"2021-10-06"},{"lineNumber":64,"author":{"gitId":"chrus-chong"},"content":"        ArrayList\u003cPerson\u003e expectedGroupMembers \u003d new ArrayList\u003c\u003e(BALI.getMembers());","lastModifiedDate":"2021-10-06"},{"lineNumber":65,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":66,"author":{"gitId":"chrus-chong"},"content":"        // regular input for CreateGroupCommand","lastModifiedDate":"2021-10-06"},{"lineNumber":67,"author":{"gitId":"chrus-chong"},"content":"        assertParseSuccess(parser, GROUPNAME_DESC_BALI + NAME_DESC_ALICE + NAME_DESC_BOB + NAME_DESC_AMY,","lastModifiedDate":"2021-10-06"},{"lineNumber":68,"author":{"gitId":"ramapriyan912001"},"content":"                new CreateGroupCommand(expectedGroupName, expectedGroupMembers, true, new HashSet\u003c\u003e()));","lastModifiedDate":"2021-10-09"},{"lineNumber":69,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":70,"author":{"gitId":"chrus-chong"},"content":"        resetParser();","lastModifiedDate":"2021-10-06"},{"lineNumber":71,"author":{"gitId":"chrus-chong"},"content":"        // names in different order","lastModifiedDate":"2021-10-06"},{"lineNumber":72,"author":{"gitId":"chrus-chong"},"content":"        assertParseSuccess(parser, GROUPNAME_DESC_BALI + NAME_DESC_BOB + NAME_DESC_AMY + NAME_DESC_ALICE,","lastModifiedDate":"2021-10-06"},{"lineNumber":73,"author":{"gitId":"ramapriyan912001"},"content":"                new CreateGroupCommand(expectedGroupName, expectedGroupMembers, true, new HashSet\u003c\u003e()));","lastModifiedDate":"2021-10-09"},{"lineNumber":74,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":75,"author":{"gitId":"chrus-chong"},"content":"        resetParser();","lastModifiedDate":"2021-10-06"},{"lineNumber":76,"author":{"gitId":"chrus-chong"},"content":"        // whitespace only preamble","lastModifiedDate":"2021-10-06"},{"lineNumber":77,"author":{"gitId":"chrus-chong"},"content":"        assertParseSuccess(parser, PREAMBLE_WHITESPACE + GROUPNAME_DESC_BALI","lastModifiedDate":"2021-10-06"},{"lineNumber":78,"author":{"gitId":"chrus-chong"},"content":"                        + NAME_DESC_ALICE + NAME_DESC_BOB + NAME_DESC_AMY,","lastModifiedDate":"2021-10-06"},{"lineNumber":79,"author":{"gitId":"ramapriyan912001"},"content":"                new CreateGroupCommand(expectedGroupName, expectedGroupMembers, true, new HashSet\u003c\u003e()));","lastModifiedDate":"2021-10-09"},{"lineNumber":80,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":81,"author":{"gitId":"chrus-chong"},"content":"        resetParser();","lastModifiedDate":"2021-10-06"},{"lineNumber":82,"author":{"gitId":"chrus-chong"},"content":"        // name repeats","lastModifiedDate":"2021-10-06"},{"lineNumber":83,"author":{"gitId":"chrus-chong"},"content":"        assertParseSuccess(parser, GROUPNAME_DESC_BALI","lastModifiedDate":"2021-10-06"},{"lineNumber":84,"author":{"gitId":"chrus-chong"},"content":"                        + NAME_DESC_BOB + NAME_DESC_AMY + NAME_DESC_ALICE + NAME_DESC_ALICE,","lastModifiedDate":"2021-10-06"},{"lineNumber":85,"author":{"gitId":"ramapriyan912001"},"content":"                new CreateGroupCommand(expectedGroupName, expectedGroupMembers, true, new HashSet\u003c\u003e()));","lastModifiedDate":"2021-10-09"},{"lineNumber":86,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":87,"author":{"gitId":"chrus-chong"},"content":"        resetParser();","lastModifiedDate":"2021-10-06"},{"lineNumber":88,"author":{"gitId":"chrus-chong"},"content":"        // multiple name repeats","lastModifiedDate":"2021-10-06"},{"lineNumber":89,"author":{"gitId":"chrus-chong"},"content":"        assertParseSuccess(parser, GROUPNAME_DESC_BALI","lastModifiedDate":"2021-10-06"},{"lineNumber":90,"author":{"gitId":"chrus-chong"},"content":"                        + NAME_DESC_BOB + NAME_DESC_BOB + NAME_DESC_AMY + NAME_DESC_ALICE + NAME_DESC_ALICE,","lastModifiedDate":"2021-10-06"},{"lineNumber":91,"author":{"gitId":"ramapriyan912001"},"content":"                new CreateGroupCommand(expectedGroupName, expectedGroupMembers, true, new HashSet\u003c\u003e()));","lastModifiedDate":"2021-10-09"},{"lineNumber":92,"author":{"gitId":"chrus-chong"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":93,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":94,"author":{"gitId":"chrus-chong"},"content":"    @Test","lastModifiedDate":"2021-10-06"},{"lineNumber":95,"author":{"gitId":"ramapriyan912001"},"content":"    public void parse_compulsoryFieldMissing_failure() throws DuplicateGroupException {","lastModifiedDate":"2021-10-07"},{"lineNumber":96,"author":{"gitId":"chrus-chong"},"content":"        String expectedMessage \u003d String.format(MESSAGE_INVALID_COMMAND_FORMAT, MESSAGE_CREATEGROUPCOMMAND_USAGE);","lastModifiedDate":"2021-10-25"},{"lineNumber":97,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":98,"author":{"gitId":"chrus-chong"},"content":"        resetParser();","lastModifiedDate":"2021-10-06"},{"lineNumber":99,"author":{"gitId":"chrus-chong"},"content":"        // missing group prefix","lastModifiedDate":"2021-10-06"},{"lineNumber":100,"author":{"gitId":"chrus-chong"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + NAME_DESC_AMY + NAME_DESC_ALICE, expectedMessage);","lastModifiedDate":"2021-10-06"},{"lineNumber":101,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":102,"author":{"gitId":"chrus-chong"},"content":"        resetParser();","lastModifiedDate":"2021-10-06"},{"lineNumber":103,"author":{"gitId":"chrus-chong"},"content":"        // missing name prefix","lastModifiedDate":"2021-10-06"},{"lineNumber":104,"author":{"gitId":"chrus-chong"},"content":"        assertParseFailure(parser, GROUPNAME_DESC_BALI, expectedMessage);","lastModifiedDate":"2021-10-06"},{"lineNumber":105,"author":{"gitId":"chrus-chong"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":106,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":107,"author":{"gitId":"chrus-chong"},"content":"    @Test","lastModifiedDate":"2021-10-06"},{"lineNumber":108,"author":{"gitId":"chrus-chong"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2021-10-06"},{"lineNumber":109,"author":{"gitId":"chrus-chong"},"content":"        String expectedMessage \u003d String.format(MESSAGE_INVALID_COMMAND_FORMAT, MESSAGE_CREATEGROUPCOMMAND_USAGE);","lastModifiedDate":"2021-10-25"},{"lineNumber":110,"author":{"gitId":"chrus-chong"},"content":"        resetParser();","lastModifiedDate":"2021-10-06"},{"lineNumber":111,"author":{"gitId":"chrus-chong"},"content":"        // invalid group name","lastModifiedDate":"2021-10-06"},{"lineNumber":112,"author":{"gitId":"chrus-chong"},"content":"        assertParseFailure(parser, INVALID_GROUP_NAME_DESC + NAME_DESC_BOB + NAME_DESC_AMY + NAME_DESC_ALICE,","lastModifiedDate":"2021-10-06"},{"lineNumber":113,"author":{"gitId":"ramapriyan912001"},"content":"                GroupName.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-07"},{"lineNumber":114,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":115,"author":{"gitId":"chrus-chong"},"content":"        resetParser();","lastModifiedDate":"2021-10-06"},{"lineNumber":116,"author":{"gitId":"ramapriyan912001"},"content":"        // invalid names returns EmptyGroupException","lastModifiedDate":"2021-10-09"},{"lineNumber":117,"author":{"gitId":"ramapriyan912001"},"content":"        String userInput \u003d GROUPNAME_DESC_BALI + INVALID_NAME_DESC + INVALID_NAME_DESC_ONE + INVALID_NAME_DESC_TWO;","lastModifiedDate":"2021-10-09"},{"lineNumber":118,"author":{"gitId":"ramapriyan912001"},"content":"        assertThrows(EmptyGroupException.class,","lastModifiedDate":"2021-10-09"},{"lineNumber":119,"author":{"gitId":"chrus-chong"},"content":"                String.format(MESSAGE_CREATEGROUPCOMMAND_EMPTY_GROUP, MESSAGE_CREATEGROUPCOMMAND_INVALID_NAMES), () -\u003e","lastModifiedDate":"2021-10-25"},{"lineNumber":120,"author":{"gitId":"chrus-chong"},"content":"                        parser.parse(userInput));","lastModifiedDate":"2021-10-25"},{"lineNumber":121,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":122,"author":{"gitId":"chrus-chong"},"content":"        resetParser();","lastModifiedDate":"2021-10-06"},{"lineNumber":123,"author":{"gitId":"chrus-chong"},"content":"        // non-empty preamble","lastModifiedDate":"2021-10-06"},{"lineNumber":124,"author":{"gitId":"chrus-chong"},"content":"        assertParseFailure(parser, PREAMBLE_NON_EMPTY + GROUPNAME_DESC_BALI","lastModifiedDate":"2021-10-06"},{"lineNumber":125,"author":{"gitId":"chrus-chong"},"content":"                        + NAME_DESC_ALICE + NAME_DESC_BOB + NAME_DESC_AMY, expectedMessage);","lastModifiedDate":"2021-10-06"},{"lineNumber":126,"author":{"gitId":"chrus-chong"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":127,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":128,"author":{"gitId":"chrus-chong"},"content":"    @Test","lastModifiedDate":"2021-10-10"},{"lineNumber":129,"author":{"gitId":"chrus-chong"},"content":"    public void findGroupMembers_validValues_success() throws ParseException {","lastModifiedDate":"2021-10-10"},{"lineNumber":130,"author":{"gitId":"chrus-chong"},"content":"        resetParser();","lastModifiedDate":"2021-10-10"},{"lineNumber":131,"author":{"gitId":"chrus-chong"},"content":"        //valid names for Bob, Amy, and Alice","lastModifiedDate":"2021-10-10"},{"lineNumber":132,"author":{"gitId":"chrus-chong"},"content":"        ArrayList\u003cName\u003e membersToFind \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-10"},{"lineNumber":133,"author":{"gitId":"chrus-chong"},"content":"        membersToFind.add(BOB.getName());","lastModifiedDate":"2021-10-10"},{"lineNumber":134,"author":{"gitId":"chrus-chong"},"content":"        membersToFind.add(AMY.getName());","lastModifiedDate":"2021-10-10"},{"lineNumber":135,"author":{"gitId":"chrus-chong"},"content":"        membersToFind.add(ALICE.getName());","lastModifiedDate":"2021-10-10"},{"lineNumber":136,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":137,"author":{"gitId":"chrus-chong"},"content":"        ArrayList\u003cPerson\u003e members \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-10"},{"lineNumber":138,"author":{"gitId":"chrus-chong"},"content":"        members.add(BOB);","lastModifiedDate":"2021-10-10"},{"lineNumber":139,"author":{"gitId":"chrus-chong"},"content":"        members.add(AMY);","lastModifiedDate":"2021-10-10"},{"lineNumber":140,"author":{"gitId":"chrus-chong"},"content":"        members.add(ALICE);","lastModifiedDate":"2021-10-10"},{"lineNumber":141,"author":{"gitId":"chrus-chong"},"content":"        assertEquals(parser.findGroupMembers(membersToFind), members);","lastModifiedDate":"2021-10-10"},{"lineNumber":142,"author":{"gitId":"chrus-chong"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":143,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":144,"author":{"gitId":"chrus-chong"},"content":"    @Test","lastModifiedDate":"2021-10-10"},{"lineNumber":145,"author":{"gitId":"chrus-chong"},"content":"    public void findGroupMembers_invalidValues_failure() throws ParseException {","lastModifiedDate":"2021-10-10"},{"lineNumber":146,"author":{"gitId":"chrus-chong"},"content":"        resetParser();","lastModifiedDate":"2021-10-11"},{"lineNumber":147,"author":{"gitId":"chrus-chong"},"content":"        //valid names and additional person not found in the model addressbook.","lastModifiedDate":"2021-10-11"},{"lineNumber":148,"author":{"gitId":"chrus-chong"},"content":"        ArrayList\u003cName\u003e membersToFindExtra \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-11"},{"lineNumber":149,"author":{"gitId":"chrus-chong"},"content":"        membersToFindExtra.add(BOB.getName());","lastModifiedDate":"2021-10-11"},{"lineNumber":150,"author":{"gitId":"chrus-chong"},"content":"        membersToFindExtra.add(AMY.getName());","lastModifiedDate":"2021-10-11"},{"lineNumber":151,"author":{"gitId":"chrus-chong"},"content":"        membersToFindExtra.add(ALICE.getName());","lastModifiedDate":"2021-10-11"},{"lineNumber":152,"author":{"gitId":"chrus-chong"},"content":"        membersToFindExtra.add(NONEXISTENTPERSON.getName());","lastModifiedDate":"2021-10-11"},{"lineNumber":153,"author":{"gitId":"chrus-chong"},"content":"        assertThrows(ParseException.class, MESSAGE_CREATEGROUPCOMMAND_ERROR, () -\u003e","lastModifiedDate":"2021-10-25"},{"lineNumber":154,"author":{"gitId":"chrus-chong"},"content":"                emptyParser.findGroupMembers(membersToFindExtra));","lastModifiedDate":"2021-10-11"},{"lineNumber":155,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":156,"author":{"gitId":"chrus-chong"},"content":"        //Argument membersToFind contains members but CreateGroupCommandParser has empty toBeAddedToGroup List.","lastModifiedDate":"2021-10-10"},{"lineNumber":157,"author":{"gitId":"chrus-chong"},"content":"        //Throws ParseException.","lastModifiedDate":"2021-10-10"},{"lineNumber":158,"author":{"gitId":"chrus-chong"},"content":"        ArrayList\u003cName\u003e membersToFind \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-10"},{"lineNumber":159,"author":{"gitId":"chrus-chong"},"content":"        membersToFind.add(BOB.getName());","lastModifiedDate":"2021-10-10"},{"lineNumber":160,"author":{"gitId":"chrus-chong"},"content":"        membersToFind.add(AMY.getName());","lastModifiedDate":"2021-10-10"},{"lineNumber":161,"author":{"gitId":"chrus-chong"},"content":"        membersToFind.add(ALICE.getName());","lastModifiedDate":"2021-10-10"},{"lineNumber":162,"author":{"gitId":"chrus-chong"},"content":"        assertThrows(ParseException.class, MESSAGE_CREATEGROUPCOMMAND_ERROR, () -\u003e","lastModifiedDate":"2021-10-25"},{"lineNumber":163,"author":{"gitId":"chrus-chong"},"content":"                emptyParser.findGroupMembers(membersToFind));","lastModifiedDate":"2021-10-10"},{"lineNumber":164,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":165,"author":{"gitId":"chrus-chong"},"content":"        //Argument membersToFind is empty list and CreateGroupCommandParser has empty toBeAddedToGroup List.","lastModifiedDate":"2021-10-10"},{"lineNumber":166,"author":{"gitId":"chrus-chong"},"content":"        //Throws EmptyGroupException.","lastModifiedDate":"2021-10-10"},{"lineNumber":167,"author":{"gitId":"chrus-chong"},"content":"        resetParser();","lastModifiedDate":"2021-10-10"},{"lineNumber":168,"author":{"gitId":"chrus-chong"},"content":"        ArrayList\u003cName\u003e emptyMembersToFind \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-10"},{"lineNumber":169,"author":{"gitId":"chrus-chong"},"content":"        String exceptionMessage \u003d String.format(MESSAGE_CREATEGROUPCOMMAND_EMPTY_GROUP,","lastModifiedDate":"2021-10-25"},{"lineNumber":170,"author":{"gitId":"chrus-chong"},"content":"                MESSAGE_CREATEGROUPCOMMAND_INVALID_NAMES,","lastModifiedDate":"2021-10-25"},{"lineNumber":171,"author":{"gitId":"chrus-chong"},"content":"                MESSAGE_CREATEGROUPCOMMAND_USAGE);","lastModifiedDate":"2021-10-25"},{"lineNumber":172,"author":{"gitId":"chrus-chong"},"content":"        assertThrows(EmptyGroupException.class, exceptionMessage, () -\u003e","lastModifiedDate":"2021-10-10"},{"lineNumber":173,"author":{"gitId":"chrus-chong"},"content":"                parser.findGroupMembers(emptyMembersToFind));","lastModifiedDate":"2021-10-10"},{"lineNumber":174,"author":{"gitId":"chrus-chong"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":175,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":176,"author":{"gitId":"chrus-chong"},"content":"    @Test","lastModifiedDate":"2021-10-10"},{"lineNumber":177,"author":{"gitId":"chrus-chong"},"content":"    public void addMemberIfExist_validValues_trueReturned() throws ParseException {","lastModifiedDate":"2021-10-11"},{"lineNumber":178,"author":{"gitId":"chrus-chong"},"content":"        resetParser();","lastModifiedDate":"2021-10-10"},{"lineNumber":179,"author":{"gitId":"chrus-chong"},"content":"        //Add valid Person name (Bob)","lastModifiedDate":"2021-10-10"},{"lineNumber":180,"author":{"gitId":"chrus-chong"},"content":"        assertTrue(parser.addMemberIfExist(BOB.getName()));","lastModifiedDate":"2021-10-10"},{"lineNumber":181,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":182,"author":{"gitId":"chrus-chong"},"content":"        //Add valid Person name (Alice)","lastModifiedDate":"2021-10-10"},{"lineNumber":183,"author":{"gitId":"chrus-chong"},"content":"        assertTrue(parser.addMemberIfExist(ALICE.getName()));","lastModifiedDate":"2021-10-10"},{"lineNumber":184,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":185,"author":{"gitId":"chrus-chong"},"content":"        //Add valid Person name (Amy)","lastModifiedDate":"2021-10-10"},{"lineNumber":186,"author":{"gitId":"chrus-chong"},"content":"        assertTrue(parser.addMemberIfExist(AMY.getName()));","lastModifiedDate":"2021-10-10"},{"lineNumber":187,"author":{"gitId":"chrus-chong"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":188,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":189,"author":{"gitId":"chrus-chong"},"content":"    @Test","lastModifiedDate":"2021-10-10"},{"lineNumber":190,"author":{"gitId":"chrus-chong"},"content":"    public void addMemberIfExist_invalidValues_parseExceptionThrown() throws ParseException {","lastModifiedDate":"2021-10-11"},{"lineNumber":191,"author":{"gitId":"chrus-chong"},"content":"        resetParser();","lastModifiedDate":"2021-10-10"},{"lineNumber":192,"author":{"gitId":"chrus-chong"},"content":"        //Add valid Person name (Bob)","lastModifiedDate":"2021-10-10"},{"lineNumber":193,"author":{"gitId":"chrus-chong"},"content":"        assertTrue(parser.addMemberIfExist(BOB.getName()));","lastModifiedDate":"2021-10-10"},{"lineNumber":194,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":195,"author":{"gitId":"chrus-chong"},"content":"        //Attempts to add a repeat Bob name will throw parseException","lastModifiedDate":"2021-10-11"},{"lineNumber":196,"author":{"gitId":"chrus-chong"},"content":"        assertThrows(ParseException.class, MESSAGE_CREATEGROUPCOMMAND_ERROR, () -\u003e","lastModifiedDate":"2021-10-25"},{"lineNumber":197,"author":{"gitId":"chrus-chong"},"content":"                parser.addMemberIfExist(BOB.getName()));","lastModifiedDate":"2021-10-11"},{"lineNumber":198,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":199,"author":{"gitId":"chrus-chong"},"content":"        resetParser();","lastModifiedDate":"2021-10-10"},{"lineNumber":200,"author":{"gitId":"chrus-chong"},"content":"        //Add Person who does not exist","lastModifiedDate":"2021-10-10"},{"lineNumber":201,"author":{"gitId":"chrus-chong"},"content":"        assertThrows(ParseException.class, MESSAGE_CREATEGROUPCOMMAND_ERROR, () -\u003e","lastModifiedDate":"2021-10-25"},{"lineNumber":202,"author":{"gitId":"chrus-chong"},"content":"                parser.addMemberIfExist(NONEXISTENTPERSON.getName()));","lastModifiedDate":"2021-10-11"},{"lineNumber":203,"author":{"gitId":"chrus-chong"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":204,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":205,"author":{"gitId":"chrus-chong"},"content":"    @Test","lastModifiedDate":"2021-10-10"},{"lineNumber":206,"author":{"gitId":"chrus-chong"},"content":"    public void findMember_validValues_personReturned() {","lastModifiedDate":"2021-10-10"},{"lineNumber":207,"author":{"gitId":"chrus-chong"},"content":"        ObservableList\u003cPerson\u003e membersToSearch \u003d new ModelBuilder().build().getAddressBook().getPersonList();","lastModifiedDate":"2021-10-10"},{"lineNumber":208,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":209,"author":{"gitId":"chrus-chong"},"content":"        //search for existing member","lastModifiedDate":"2021-10-10"},{"lineNumber":210,"author":{"gitId":"chrus-chong"},"content":"        Person bob \u003d CreateGroupCommandParser.findMember(BOB.getName(), membersToSearch);","lastModifiedDate":"2021-10-10"},{"lineNumber":211,"author":{"gitId":"chrus-chong"},"content":"        assertEquals(bob, BOB);","lastModifiedDate":"2021-10-10"},{"lineNumber":212,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":213,"author":{"gitId":"chrus-chong"},"content":"        //search for existing member","lastModifiedDate":"2021-10-10"},{"lineNumber":214,"author":{"gitId":"chrus-chong"},"content":"        Person alice \u003d CreateGroupCommandParser.findMember(ALICE.getName(), membersToSearch);","lastModifiedDate":"2021-10-10"},{"lineNumber":215,"author":{"gitId":"chrus-chong"},"content":"        assertEquals(alice, ALICE);","lastModifiedDate":"2021-10-10"},{"lineNumber":216,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":217,"author":{"gitId":"chrus-chong"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":218,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":219,"author":{"gitId":"chrus-chong"},"content":"    @Test","lastModifiedDate":"2021-10-10"},{"lineNumber":220,"author":{"gitId":"chrus-chong"},"content":"    public void findMember_invalidValues_nullReturned() {","lastModifiedDate":"2021-10-10"},{"lineNumber":221,"author":{"gitId":"chrus-chong"},"content":"        ObservableList\u003cPerson\u003e membersToSearch \u003d new ModelBuilder().build().getAddressBook().getPersonList();","lastModifiedDate":"2021-10-10"},{"lineNumber":222,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":223,"author":{"gitId":"chrus-chong"},"content":"        //search for non-existent member","lastModifiedDate":"2021-10-10"},{"lineNumber":224,"author":{"gitId":"chrus-chong"},"content":"        Person nonExistentPerson \u003d CreateGroupCommandParser","lastModifiedDate":"2021-10-10"},{"lineNumber":225,"author":{"gitId":"chrus-chong"},"content":"                .findMember(NONEXISTENTPERSON.getName(), membersToSearch);","lastModifiedDate":"2021-10-10"},{"lineNumber":226,"author":{"gitId":"chrus-chong"},"content":"        assertEquals(nonExistentPerson, null);","lastModifiedDate":"2021-10-10"},{"lineNumber":227,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":228,"author":{"gitId":"chrus-chong"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":229,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":230,"author":{"gitId":"ramapriyan912001"},"content":"}","lastModifiedDate":"2021-10-05"}],"authorContributionMap":{"chrus-chong":205,"ramapriyan912001":25}},{"path":"src/test/java/seedu/awe/logic/parser/DeleteContactCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"ramapriyan912001"},"content":"package seedu.awe.logic.parser;","lastModifiedDate":"2021-10-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":3,"author":{"gitId":"chrus-chong"},"content":"import static seedu.awe.commons.core.Messages.MESSAGE_DELETECONTACTCOMMAND_USAGE;","lastModifiedDate":"2021-10-25"},{"lineNumber":4,"author":{"gitId":"ramapriyan912001"},"content":"import static seedu.awe.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-10-05"},{"lineNumber":5,"author":{"gitId":"ramapriyan912001"},"content":"import static seedu.awe.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2021-10-05"},{"lineNumber":6,"author":{"gitId":"ramapriyan912001"},"content":"import static seedu.awe.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2021-10-05"},{"lineNumber":7,"author":{"gitId":"ramapriyan912001"},"content":"import static seedu.awe.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2021-10-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":11,"author":{"gitId":"marcuspeh"},"content":"import seedu.awe.logic.commands.DeleteContactCommand;","lastModifiedDate":"2021-10-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * As we are only doing white-box testing, our test cases do not cover path variations","lastModifiedDate":"2017-06-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * outside of the DeleteCommand code. For example, inputs \"1\" and \"1 abc\" take the","lastModifiedDate":"2017-06-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * same path through the DeleteCommand, and therefore we test only one of them.","lastModifiedDate":"2017-06-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * The path variation for those two cases occur inside the ParserUtil, and","lastModifiedDate":"2017-06-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * therefore should be covered by the ParserUtilTest.","lastModifiedDate":"2017-06-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-09"},{"lineNumber":20,"author":{"gitId":"marcuspeh"},"content":"public class DeleteContactCommandParserTest {","lastModifiedDate":"2021-10-11"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":22,"author":{"gitId":"chrus-chong"},"content":"    private DeleteContactCommandParser parser \u003d new DeleteContactCommandParser();","lastModifiedDate":"2021-10-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public void parse_validArgs_returnsDeleteCommand() {","lastModifiedDate":"2017-08-15"},{"lineNumber":26,"author":{"gitId":"marcuspeh"},"content":"        assertParseSuccess(parser, \"1\", new DeleteContactCommand(INDEX_FIRST_PERSON));","lastModifiedDate":"2021-10-11"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public void parse_invalidArgs_throwsParseException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":31,"author":{"gitId":"marcuspeh"},"content":"        assertParseFailure(parser, \"a\", String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2021-10-11"},{"lineNumber":32,"author":{"gitId":"chrus-chong"},"content":"                MESSAGE_DELETECONTACTCOMMAND_USAGE));","lastModifiedDate":"2021-10-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-09"},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-09"}],"authorContributionMap":{"marcuspeh":4,"chrus-chong":3,"ramapriyan912001":5,"-":22}},{"path":"src/test/java/seedu/awe/logic/parser/DeleteExpenseCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Jingwencloud"},"content":"package seedu.awe.logic.parser;","lastModifiedDate":"2021-10-30"},{"lineNumber":2,"author":{"gitId":"Jingwencloud"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":3,"author":{"gitId":"Jingwencloud"},"content":"import static seedu.awe.commons.core.Messages.MESSAGE_DELETEEXPENSECOMMAND_USAGE;","lastModifiedDate":"2021-10-30"},{"lineNumber":4,"author":{"gitId":"Jingwencloud"},"content":"import static seedu.awe.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-10-30"},{"lineNumber":5,"author":{"gitId":"Jingwencloud"},"content":"import static seedu.awe.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2021-10-30"},{"lineNumber":6,"author":{"gitId":"Jingwencloud"},"content":"import static seedu.awe.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2021-10-30"},{"lineNumber":7,"author":{"gitId":"Jingwencloud"},"content":"import static seedu.awe.testutil.TypicalIndexes.INDEX_FIRST_EXPENSE;","lastModifiedDate":"2021-10-30"},{"lineNumber":8,"author":{"gitId":"Jingwencloud"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":9,"author":{"gitId":"Jingwencloud"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-30"},{"lineNumber":10,"author":{"gitId":"Jingwencloud"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":11,"author":{"gitId":"Jingwencloud"},"content":"import seedu.awe.logic.commands.DeleteExpenseCommand;","lastModifiedDate":"2021-10-30"},{"lineNumber":12,"author":{"gitId":"Jingwencloud"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":13,"author":{"gitId":"Jingwencloud"},"content":"public class DeleteExpenseCommandParserTest {","lastModifiedDate":"2021-10-30"},{"lineNumber":14,"author":{"gitId":"Jingwencloud"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":15,"author":{"gitId":"Jingwencloud"},"content":"    private DeleteExpenseCommandParser parser \u003d new DeleteExpenseCommandParser();","lastModifiedDate":"2021-10-30"},{"lineNumber":16,"author":{"gitId":"Jingwencloud"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":17,"author":{"gitId":"Jingwencloud"},"content":"    //EP: positive integer","lastModifiedDate":"2021-10-30"},{"lineNumber":18,"author":{"gitId":"Jingwencloud"},"content":"    @Test","lastModifiedDate":"2021-10-30"},{"lineNumber":19,"author":{"gitId":"Jingwencloud"},"content":"    public void parse_validArgs_returnsDeleteExpenseCommand() {","lastModifiedDate":"2021-10-30"},{"lineNumber":20,"author":{"gitId":"Jingwencloud"},"content":"        assertParseSuccess(parser, \"1\", new DeleteExpenseCommand(INDEX_FIRST_EXPENSE));","lastModifiedDate":"2021-10-30"},{"lineNumber":21,"author":{"gitId":"Jingwencloud"},"content":"    }","lastModifiedDate":"2021-10-30"},{"lineNumber":22,"author":{"gitId":"Jingwencloud"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":23,"author":{"gitId":"Jingwencloud"},"content":"    @Test","lastModifiedDate":"2021-10-30"},{"lineNumber":24,"author":{"gitId":"Jingwencloud"},"content":"    public void parse_invalidArgs_throwsParseException() {","lastModifiedDate":"2021-10-30"},{"lineNumber":25,"author":{"gitId":"Jingwencloud"},"content":"        //EP: not a number","lastModifiedDate":"2021-10-30"},{"lineNumber":26,"author":{"gitId":"Jingwencloud"},"content":"        assertParseFailure(parser, \"a\", String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2021-10-30"},{"lineNumber":27,"author":{"gitId":"Jingwencloud"},"content":"            MESSAGE_DELETEEXPENSECOMMAND_USAGE));","lastModifiedDate":"2021-10-30"},{"lineNumber":28,"author":{"gitId":"Jingwencloud"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":29,"author":{"gitId":"Jingwencloud"},"content":"        //EP: negative integer","lastModifiedDate":"2021-10-30"},{"lineNumber":30,"author":{"gitId":"Jingwencloud"},"content":"        assertParseFailure(parser, \"-1\", String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2021-10-30"},{"lineNumber":31,"author":{"gitId":"Jingwencloud"},"content":"            MESSAGE_DELETEEXPENSECOMMAND_USAGE));","lastModifiedDate":"2021-10-30"},{"lineNumber":32,"author":{"gitId":"Jingwencloud"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":33,"author":{"gitId":"Jingwencloud"},"content":"        //EP: zero","lastModifiedDate":"2021-10-30"},{"lineNumber":34,"author":{"gitId":"Jingwencloud"},"content":"        assertParseFailure(parser, \"0\", String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2021-10-30"},{"lineNumber":35,"author":{"gitId":"Jingwencloud"},"content":"            MESSAGE_DELETEEXPENSECOMMAND_USAGE));","lastModifiedDate":"2021-10-30"},{"lineNumber":36,"author":{"gitId":"Jingwencloud"},"content":"    }","lastModifiedDate":"2021-10-30"},{"lineNumber":37,"author":{"gitId":"Jingwencloud"},"content":"}","lastModifiedDate":"2021-10-30"}],"authorContributionMap":{"Jingwencloud":37}},{"path":"src/test/java/seedu/awe/logic/parser/DeleteGroupCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"ramapriyan912001"},"content":"package seedu.awe.logic.parser;","lastModifiedDate":"2021-10-05"},{"lineNumber":2,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":3,"author":{"gitId":"chrus-chong"},"content":"import static seedu.awe.commons.core.Messages.MESSAGE_DELETEGROUPCOMMAND_USAGE;","lastModifiedDate":"2021-10-25"},{"lineNumber":4,"author":{"gitId":"ramapriyan912001"},"content":"import static seedu.awe.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-10-07"},{"lineNumber":5,"author":{"gitId":"ramapriyan912001"},"content":"import static seedu.awe.logic.commands.CommandTestUtil.GROUPNAME_DESC_BALI;","lastModifiedDate":"2021-10-07"},{"lineNumber":6,"author":{"gitId":"ramapriyan912001"},"content":"import static seedu.awe.logic.commands.CommandTestUtil.GROUPNAME_DESC_OSLO;","lastModifiedDate":"2021-10-07"},{"lineNumber":7,"author":{"gitId":"ramapriyan912001"},"content":"import static seedu.awe.logic.commands.CommandTestUtil.INVALID_GROUP_NAME_DESC;","lastModifiedDate":"2021-10-07"},{"lineNumber":8,"author":{"gitId":"ramapriyan912001"},"content":"import static seedu.awe.logic.commands.CommandTestUtil.PREAMBLE_NON_EMPTY;","lastModifiedDate":"2021-10-07"},{"lineNumber":9,"author":{"gitId":"ramapriyan912001"},"content":"import static seedu.awe.logic.commands.CommandTestUtil.PREAMBLE_WHITESPACE;","lastModifiedDate":"2021-10-07"},{"lineNumber":10,"author":{"gitId":"ramapriyan912001"},"content":"import static seedu.awe.logic.parser.CliSyntax.PREFIX_GROUP_NAME;","lastModifiedDate":"2021-10-07"},{"lineNumber":11,"author":{"gitId":"ramapriyan912001"},"content":"import static seedu.awe.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2021-10-07"},{"lineNumber":12,"author":{"gitId":"ramapriyan912001"},"content":"import static seedu.awe.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2021-10-07"},{"lineNumber":13,"author":{"gitId":"ramapriyan912001"},"content":"import static seedu.awe.testutil.Assert.assertThrows;","lastModifiedDate":"2021-10-07"},{"lineNumber":14,"author":{"gitId":"ramapriyan912001"},"content":"import static seedu.awe.testutil.TypicalGroups.BALI;","lastModifiedDate":"2021-10-07"},{"lineNumber":15,"author":{"gitId":"ramapriyan912001"},"content":"import static seedu.awe.testutil.TypicalGroups.OSLO;","lastModifiedDate":"2021-10-07"},{"lineNumber":16,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":17,"author":{"gitId":"ramapriyan912001"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-07"},{"lineNumber":18,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":19,"author":{"gitId":"ramapriyan912001"},"content":"import seedu.awe.logic.commands.DeleteGroupCommand;","lastModifiedDate":"2021-10-07"},{"lineNumber":20,"author":{"gitId":"ramapriyan912001"},"content":"import seedu.awe.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-10-07"},{"lineNumber":21,"author":{"gitId":"ramapriyan912001"},"content":"import seedu.awe.model.group.GroupName;","lastModifiedDate":"2021-10-07"},{"lineNumber":22,"author":{"gitId":"ramapriyan912001"},"content":"import seedu.awe.model.group.exceptions.DuplicateGroupException;","lastModifiedDate":"2021-10-07"},{"lineNumber":23,"author":{"gitId":"ramapriyan912001"},"content":"import seedu.awe.testutil.ModelBuilder;","lastModifiedDate":"2021-10-07"},{"lineNumber":24,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":25,"author":{"gitId":"ramapriyan912001"},"content":"public class DeleteGroupCommandParserTest {","lastModifiedDate":"2021-10-05"},{"lineNumber":26,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":27,"author":{"gitId":"ramapriyan912001"},"content":"    private DeleteGroupCommandParser parser;","lastModifiedDate":"2021-10-07"},{"lineNumber":28,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":29,"author":{"gitId":"ramapriyan912001"},"content":"    public DeleteGroupCommandParserTest() {","lastModifiedDate":"2021-10-07"},{"lineNumber":30,"author":{"gitId":"ramapriyan912001"},"content":"        parser \u003d new DeleteGroupCommandParser(new ModelBuilder().build());","lastModifiedDate":"2021-10-07"},{"lineNumber":31,"author":{"gitId":"ramapriyan912001"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":32,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":33,"author":{"gitId":"ramapriyan912001"},"content":"    /**","lastModifiedDate":"2021-10-07"},{"lineNumber":34,"author":{"gitId":"ramapriyan912001"},"content":"     * Resets parser. Necessary as DeleteGroupCommand parser needs to be initialised with a model for each call.","lastModifiedDate":"2021-10-27"},{"lineNumber":35,"author":{"gitId":"ramapriyan912001"},"content":"     * Failure to reset parser will result in Duplicate exceptions being raised.","lastModifiedDate":"2021-10-07"},{"lineNumber":36,"author":{"gitId":"ramapriyan912001"},"content":"     */","lastModifiedDate":"2021-10-07"},{"lineNumber":37,"author":{"gitId":"ramapriyan912001"},"content":"    public void resetParser() throws DuplicateGroupException {","lastModifiedDate":"2021-10-07"},{"lineNumber":38,"author":{"gitId":"ramapriyan912001"},"content":"        parser \u003d new DeleteGroupCommandParser(new ModelBuilder().build());","lastModifiedDate":"2021-10-07"},{"lineNumber":39,"author":{"gitId":"ramapriyan912001"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":40,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":41,"author":{"gitId":"ramapriyan912001"},"content":"    @Test","lastModifiedDate":"2021-10-07"},{"lineNumber":42,"author":{"gitId":"ramapriyan912001"},"content":"    public void parse_allFieldsPresent_success() {","lastModifiedDate":"2021-10-07"},{"lineNumber":43,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":44,"author":{"gitId":"ramapriyan912001"},"content":"        // regular input for DeleteGroupCommand","lastModifiedDate":"2021-10-27"},{"lineNumber":45,"author":{"gitId":"ramapriyan912001"},"content":"        assertParseSuccess(parser, GROUPNAME_DESC_BALI,","lastModifiedDate":"2021-10-07"},{"lineNumber":46,"author":{"gitId":"ramapriyan912001"},"content":"                new DeleteGroupCommand(BALI));","lastModifiedDate":"2021-10-07"},{"lineNumber":47,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":48,"author":{"gitId":"ramapriyan912001"},"content":"        resetParser();","lastModifiedDate":"2021-10-07"},{"lineNumber":49,"author":{"gitId":"ramapriyan912001"},"content":"        // names in different order","lastModifiedDate":"2021-10-07"},{"lineNumber":50,"author":{"gitId":"ramapriyan912001"},"content":"        assertParseSuccess(parser, GROUPNAME_DESC_OSLO,","lastModifiedDate":"2021-10-07"},{"lineNumber":51,"author":{"gitId":"ramapriyan912001"},"content":"                new DeleteGroupCommand(OSLO));","lastModifiedDate":"2021-10-07"},{"lineNumber":52,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":53,"author":{"gitId":"ramapriyan912001"},"content":"        resetParser();","lastModifiedDate":"2021-10-07"},{"lineNumber":54,"author":{"gitId":"ramapriyan912001"},"content":"        // whitespace only preamble","lastModifiedDate":"2021-10-07"},{"lineNumber":55,"author":{"gitId":"ramapriyan912001"},"content":"        assertParseSuccess(parser, PREAMBLE_WHITESPACE + GROUPNAME_DESC_BALI,","lastModifiedDate":"2021-10-07"},{"lineNumber":56,"author":{"gitId":"ramapriyan912001"},"content":"                new DeleteGroupCommand(BALI));","lastModifiedDate":"2021-10-07"},{"lineNumber":57,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":58,"author":{"gitId":"ramapriyan912001"},"content":"        resetParser();","lastModifiedDate":"2021-10-07"},{"lineNumber":59,"author":{"gitId":"ramapriyan912001"},"content":"        // whitespace only preamble","lastModifiedDate":"2021-10-07"},{"lineNumber":60,"author":{"gitId":"ramapriyan912001"},"content":"        assertParseSuccess(parser, PREAMBLE_WHITESPACE + GROUPNAME_DESC_OSLO,","lastModifiedDate":"2021-10-07"},{"lineNumber":61,"author":{"gitId":"ramapriyan912001"},"content":"                new DeleteGroupCommand(OSLO));","lastModifiedDate":"2021-10-07"},{"lineNumber":62,"author":{"gitId":"ramapriyan912001"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":63,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":64,"author":{"gitId":"ramapriyan912001"},"content":"    @Test","lastModifiedDate":"2021-10-07"},{"lineNumber":65,"author":{"gitId":"ramapriyan912001"},"content":"    public void parse_compulsoryFieldMissing_failure() {","lastModifiedDate":"2021-10-07"},{"lineNumber":66,"author":{"gitId":"chrus-chong"},"content":"        String expectedMessage \u003d String.format(MESSAGE_INVALID_COMMAND_FORMAT, MESSAGE_DELETEGROUPCOMMAND_USAGE);","lastModifiedDate":"2021-10-25"},{"lineNumber":67,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":68,"author":{"gitId":"ramapriyan912001"},"content":"        resetParser();","lastModifiedDate":"2021-10-07"},{"lineNumber":69,"author":{"gitId":"ramapriyan912001"},"content":"        // missing group prefix","lastModifiedDate":"2021-10-07"},{"lineNumber":70,"author":{"gitId":"ramapriyan912001"},"content":"        String inputMissingGroupPrefix \u003d \" Bali\";","lastModifiedDate":"2021-10-07"},{"lineNumber":71,"author":{"gitId":"ramapriyan912001"},"content":"        assertParseFailure(parser, inputMissingGroupPrefix, expectedMessage);","lastModifiedDate":"2021-10-07"},{"lineNumber":72,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":73,"author":{"gitId":"ramapriyan912001"},"content":"        resetParser();","lastModifiedDate":"2021-10-07"},{"lineNumber":74,"author":{"gitId":"ramapriyan912001"},"content":"        // empty command","lastModifiedDate":"2021-10-07"},{"lineNumber":75,"author":{"gitId":"ramapriyan912001"},"content":"        assertParseFailure(parser, \" \", expectedMessage);","lastModifiedDate":"2021-10-07"},{"lineNumber":76,"author":{"gitId":"ramapriyan912001"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":77,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":78,"author":{"gitId":"ramapriyan912001"},"content":"    @Test","lastModifiedDate":"2021-10-07"},{"lineNumber":79,"author":{"gitId":"ramapriyan912001"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2021-10-07"},{"lineNumber":80,"author":{"gitId":"chrus-chong"},"content":"        String expectedMessage \u003d String.format(MESSAGE_INVALID_COMMAND_FORMAT, MESSAGE_DELETEGROUPCOMMAND_USAGE);","lastModifiedDate":"2021-10-25"},{"lineNumber":81,"author":{"gitId":"ramapriyan912001"},"content":"        resetParser();","lastModifiedDate":"2021-10-07"},{"lineNumber":82,"author":{"gitId":"ramapriyan912001"},"content":"        // invalid group name","lastModifiedDate":"2021-10-07"},{"lineNumber":83,"author":{"gitId":"ramapriyan912001"},"content":"        assertParseFailure(parser, INVALID_GROUP_NAME_DESC, GroupName.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-07"},{"lineNumber":84,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":85,"author":{"gitId":"ramapriyan912001"},"content":"        resetParser();","lastModifiedDate":"2021-10-07"},{"lineNumber":86,"author":{"gitId":"ramapriyan912001"},"content":"        // empty group name","lastModifiedDate":"2021-10-07"},{"lineNumber":87,"author":{"gitId":"ramapriyan912001"},"content":"        String emptyGroupNameInput \u003d \" \" + PREFIX_GROUP_NAME;","lastModifiedDate":"2021-10-07"},{"lineNumber":88,"author":{"gitId":"ramapriyan912001"},"content":"        assertParseFailure(parser, emptyGroupNameInput, GroupName.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-07"},{"lineNumber":89,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":90,"author":{"gitId":"ramapriyan912001"},"content":"        resetParser();","lastModifiedDate":"2021-10-07"},{"lineNumber":91,"author":{"gitId":"ramapriyan912001"},"content":"        // invalid name returns IllegalArgumentException","lastModifiedDate":"2021-10-07"},{"lineNumber":92,"author":{"gitId":"ramapriyan912001"},"content":"        String userInput \u003d INVALID_GROUP_NAME_DESC;","lastModifiedDate":"2021-10-07"},{"lineNumber":93,"author":{"gitId":"ramapriyan912001"},"content":"        assertThrows(ParseException.class, GroupName.MESSAGE_CONSTRAINTS, () -\u003e parser.parse(userInput));","lastModifiedDate":"2021-10-07"},{"lineNumber":94,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":95,"author":{"gitId":"ramapriyan912001"},"content":"        resetParser();","lastModifiedDate":"2021-10-07"},{"lineNumber":96,"author":{"gitId":"ramapriyan912001"},"content":"        // non-empty preamble","lastModifiedDate":"2021-10-07"},{"lineNumber":97,"author":{"gitId":"ramapriyan912001"},"content":"        assertParseFailure(parser, PREAMBLE_NON_EMPTY + GROUPNAME_DESC_BALI, expectedMessage);","lastModifiedDate":"2021-10-07"},{"lineNumber":98,"author":{"gitId":"ramapriyan912001"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":99,"author":{"gitId":"ramapriyan912001"},"content":"}","lastModifiedDate":"2021-10-05"}],"authorContributionMap":{"chrus-chong":3,"ramapriyan912001":96}},{"path":"src/test/java/seedu/awe/logic/parser/EditContactCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"ramapriyan912001"},"content":"package seedu.awe.logic.parser;","lastModifiedDate":"2021-10-05"},{"lineNumber":2,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":3,"author":{"gitId":"chrus-chong"},"content":"import static seedu.awe.commons.core.Messages.MESSAGE_EDITCONTACTCOMMAND_NOT_EDITED;","lastModifiedDate":"2021-10-25"},{"lineNumber":4,"author":{"gitId":"chrus-chong"},"content":"import static seedu.awe.commons.core.Messages.MESSAGE_EDITCONTACTCOMMAND_USAGE;","lastModifiedDate":"2021-10-25"},{"lineNumber":5,"author":{"gitId":"ramapriyan912001"},"content":"import static seedu.awe.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-10-05"},{"lineNumber":6,"author":{"gitId":"ramapriyan912001"},"content":"import static seedu.awe.logic.commands.CommandTestUtil.INVALID_NAME_DESC;","lastModifiedDate":"2021-10-05"},{"lineNumber":7,"author":{"gitId":"ramapriyan912001"},"content":"import static seedu.awe.logic.commands.CommandTestUtil.INVALID_PHONE_DESC;","lastModifiedDate":"2021-10-05"},{"lineNumber":8,"author":{"gitId":"ramapriyan912001"},"content":"import static seedu.awe.logic.commands.CommandTestUtil.INVALID_TAG_DESC;","lastModifiedDate":"2021-10-05"},{"lineNumber":9,"author":{"gitId":"ramapriyan912001"},"content":"import static seedu.awe.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2021-10-05"},{"lineNumber":10,"author":{"gitId":"ramapriyan912001"},"content":"import static seedu.awe.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2021-10-05"},{"lineNumber":11,"author":{"gitId":"ramapriyan912001"},"content":"import static seedu.awe.logic.commands.CommandTestUtil.PHONE_DESC_BOB;","lastModifiedDate":"2021-10-05"},{"lineNumber":12,"author":{"gitId":"ramapriyan912001"},"content":"import static seedu.awe.logic.commands.CommandTestUtil.TAG_DESC_FRIEND;","lastModifiedDate":"2021-10-05"},{"lineNumber":13,"author":{"gitId":"ramapriyan912001"},"content":"import static seedu.awe.logic.commands.CommandTestUtil.TAG_DESC_HUSBAND;","lastModifiedDate":"2021-10-05"},{"lineNumber":14,"author":{"gitId":"ramapriyan912001"},"content":"import static seedu.awe.logic.commands.CommandTestUtil.VALID_NAME_AMY;","lastModifiedDate":"2021-10-05"},{"lineNumber":15,"author":{"gitId":"ramapriyan912001"},"content":"import static seedu.awe.logic.commands.CommandTestUtil.VALID_PHONE_AMY;","lastModifiedDate":"2021-10-05"},{"lineNumber":16,"author":{"gitId":"ramapriyan912001"},"content":"import static seedu.awe.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2021-10-05"},{"lineNumber":17,"author":{"gitId":"ramapriyan912001"},"content":"import static seedu.awe.logic.commands.CommandTestUtil.VALID_TAG_FRIEND;","lastModifiedDate":"2021-10-05"},{"lineNumber":18,"author":{"gitId":"ramapriyan912001"},"content":"import static seedu.awe.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2021-10-05"},{"lineNumber":19,"author":{"gitId":"ramapriyan912001"},"content":"import static seedu.awe.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2021-10-05"},{"lineNumber":20,"author":{"gitId":"ramapriyan912001"},"content":"import static seedu.awe.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2021-10-05"},{"lineNumber":21,"author":{"gitId":"ramapriyan912001"},"content":"import static seedu.awe.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2021-10-05"},{"lineNumber":22,"author":{"gitId":"ramapriyan912001"},"content":"import static seedu.awe.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2021-10-05"},{"lineNumber":23,"author":{"gitId":"ramapriyan912001"},"content":"import static seedu.awe.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2021-10-05"},{"lineNumber":24,"author":{"gitId":"ramapriyan912001"},"content":"import static seedu.awe.testutil.TypicalIndexes.INDEX_THIRD_PERSON;","lastModifiedDate":"2021-10-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":28,"author":{"gitId":"ramapriyan912001"},"content":"import seedu.awe.commons.core.index.Index;","lastModifiedDate":"2021-10-05"},{"lineNumber":29,"author":{"gitId":"marcuspeh"},"content":"import seedu.awe.logic.commands.EditContactCommand;","lastModifiedDate":"2021-10-11"},{"lineNumber":30,"author":{"gitId":"marcuspeh"},"content":"import seedu.awe.logic.commands.EditContactCommand.EditPersonDescriptor;","lastModifiedDate":"2021-10-11"},{"lineNumber":31,"author":{"gitId":"ramapriyan912001"},"content":"import seedu.awe.model.person.Name;","lastModifiedDate":"2021-10-05"},{"lineNumber":32,"author":{"gitId":"ramapriyan912001"},"content":"import seedu.awe.model.person.Phone;","lastModifiedDate":"2021-10-05"},{"lineNumber":33,"author":{"gitId":"ramapriyan912001"},"content":"import seedu.awe.model.tag.Tag;","lastModifiedDate":"2021-10-05"},{"lineNumber":34,"author":{"gitId":"ramapriyan912001"},"content":"import seedu.awe.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2021-10-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":36,"author":{"gitId":"marcuspeh"},"content":"public class EditContactCommandParserTest {","lastModifiedDate":"2021-10-11"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private static final String TAG_EMPTY \u003d \" \" + PREFIX_TAG;","lastModifiedDate":"2017-05-04"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    private static final String MESSAGE_INVALID_FORMAT \u003d","lastModifiedDate":"2017-05-04"},{"lineNumber":41,"author":{"gitId":"chrus-chong"},"content":"            String.format(MESSAGE_INVALID_COMMAND_FORMAT, MESSAGE_EDITCONTACTCOMMAND_USAGE);","lastModifiedDate":"2021-10-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    private EditCommandParser parser \u003d new EditCommandParser();","lastModifiedDate":"2017-05-04"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public void parse_missingParts_failure() {","lastModifiedDate":"2017-05-04"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        // no index specified","lastModifiedDate":"2017-05-04"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, VALID_NAME_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        // no field specified","lastModifiedDate":"2017-05-04"},{"lineNumber":51,"author":{"gitId":"chrus-chong"},"content":"        assertParseFailure(parser, \"1\", MESSAGE_EDITCONTACTCOMMAND_NOT_EDITED);","lastModifiedDate":"2021-10-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        // no index and no field specified","lastModifiedDate":"2017-05-04"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public void parse_invalidPreamble_failure() {","lastModifiedDate":"2017-06-06"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        // negative index","lastModifiedDate":"2017-05-04"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"-5\" + NAME_DESC_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        // zero index","lastModifiedDate":"2017-06-06"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"0\" + NAME_DESC_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-06"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        // invalid arguments being parsed as preamble","lastModifiedDate":"2017-06-06"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1 some random string\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-06"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        // invalid prefix being parsed as preamble","lastModifiedDate":"2017-06-06"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1 i/ string\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2017-05-04"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_NAME_DESC, Name.MESSAGE_CONSTRAINTS); // invalid name","lastModifiedDate":"2018-09-22"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_PHONE_DESC, Phone.MESSAGE_CONSTRAINTS); // invalid phone","lastModifiedDate":"2018-09-22"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_TAG_DESC, Tag.MESSAGE_CONSTRAINTS); // invalid tag","lastModifiedDate":"2018-09-22"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":78,"author":{"gitId":"marcuspeh"},"content":"        // invalid phone","lastModifiedDate":"2021-11-01"},{"lineNumber":79,"author":{"gitId":"marcuspeh"},"content":"        assertParseFailure(parser, \"1\" + INVALID_PHONE_DESC, Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-11-01"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        // valid phone followed by invalid phone. The test case for invalid phone followed by valid phone","lastModifiedDate":"2017-05-04"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        // is tested at {@code parse_invalidValueFollowedByValidValue_success()}","lastModifiedDate":"2017-05-04"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + PHONE_DESC_BOB + INVALID_PHONE_DESC, Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        // while parsing {@code PREFIX_TAG} alone will reset the tags of the {@code Person} being edited,","lastModifiedDate":"2017-05-04"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        // parsing it together with a valid tag results in error","lastModifiedDate":"2017-05-04"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + TAG_DESC_FRIEND + TAG_DESC_HUSBAND + TAG_EMPTY, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + TAG_DESC_FRIEND + TAG_EMPTY + TAG_DESC_HUSBAND, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + TAG_EMPTY + TAG_DESC_FRIEND + TAG_DESC_HUSBAND, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        // multiple invalid values, but only the first invalid value is captured","lastModifiedDate":"2017-05-04"},{"lineNumber":92,"author":{"gitId":"marcuspeh"},"content":"        assertParseFailure(parser, \"1\" + INVALID_NAME_DESC + VALID_PHONE_AMY,","lastModifiedDate":"2021-11-01"},{"lineNumber":93,"author":{"gitId":"-"},"content":"                Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    public void parse_allFieldsSpecified_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + PHONE_DESC_BOB + TAG_DESC_HUSBAND","lastModifiedDate":"2017-06-06"},{"lineNumber":100,"author":{"gitId":"marcuspeh"},"content":"                + NAME_DESC_AMY + TAG_DESC_FRIEND;","lastModifiedDate":"2021-11-01"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_AMY)","lastModifiedDate":"2017-05-04"},{"lineNumber":103,"author":{"gitId":"marcuspeh"},"content":"                .withPhone(VALID_PHONE_BOB).withTags(VALID_TAG_HUSBAND, VALID_TAG_FRIEND).build();","lastModifiedDate":"2021-11-01"},{"lineNumber":104,"author":{"gitId":"marcuspeh"},"content":"        EditContactCommand expectedCommand \u003d new EditContactCommand(targetIndex, descriptor);","lastModifiedDate":"2021-10-11"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    public void parse_someFieldsSpecified_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_FIRST_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":112,"author":{"gitId":"marcuspeh"},"content":"        String userInput \u003d targetIndex.getOneBased() + PHONE_DESC_BOB;","lastModifiedDate":"2021-11-01"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":114,"author":{"gitId":"marcuspeh"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2021-11-01"},{"lineNumber":115,"author":{"gitId":"marcuspeh"},"content":"        EditContactCommand expectedCommand \u003d new EditContactCommand(targetIndex, descriptor);","lastModifiedDate":"2021-10-11"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    public void parse_oneFieldSpecified_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        // name","lastModifiedDate":"2017-05-04"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_THIRD_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + NAME_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_AMY).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":126,"author":{"gitId":"marcuspeh"},"content":"        EditContactCommand expectedCommand \u003d new EditContactCommand(targetIndex, descriptor);","lastModifiedDate":"2021-10-11"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        // phone","lastModifiedDate":"2017-05-04"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + PHONE_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withPhone(VALID_PHONE_AMY).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":132,"author":{"gitId":"marcuspeh"},"content":"        expectedCommand \u003d new EditContactCommand(targetIndex, descriptor);","lastModifiedDate":"2021-10-11"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        // tags","lastModifiedDate":"2017-05-04"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + TAG_DESC_FRIEND;","lastModifiedDate":"2017-05-25"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":138,"author":{"gitId":"marcuspeh"},"content":"        expectedCommand \u003d new EditContactCommand(targetIndex, descriptor);","lastModifiedDate":"2021-10-11"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    public void parse_multipleRepeatedFields_acceptsLast() {","lastModifiedDate":"2017-08-15"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_FIRST_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":145,"author":{"gitId":"marcuspeh"},"content":"        String userInput \u003d targetIndex.getOneBased() + PHONE_DESC_AMY","lastModifiedDate":"2021-11-01"},{"lineNumber":146,"author":{"gitId":"marcuspeh"},"content":"                + TAG_DESC_FRIEND + PHONE_DESC_AMY + TAG_DESC_FRIEND","lastModifiedDate":"2021-11-01"},{"lineNumber":147,"author":{"gitId":"marcuspeh"},"content":"                + PHONE_DESC_BOB + TAG_DESC_HUSBAND;","lastModifiedDate":"2021-11-01"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2017-05-04"},{"lineNumber":150,"author":{"gitId":"marcuspeh"},"content":"                .withTags(VALID_TAG_HUSBAND, VALID_TAG_FRIEND).build();","lastModifiedDate":"2021-11-01"},{"lineNumber":151,"author":{"gitId":"marcuspeh"},"content":"        EditContactCommand expectedCommand \u003d new EditContactCommand(targetIndex, descriptor);","lastModifiedDate":"2021-10-11"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":156,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    public void parse_invalidValueFollowedByValidValue_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        // no other valid values specified","lastModifiedDate":"2017-05-04"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_FIRST_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + INVALID_PHONE_DESC + PHONE_DESC_BOB;","lastModifiedDate":"2017-05-25"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":162,"author":{"gitId":"marcuspeh"},"content":"        EditContactCommand expectedCommand \u003d new EditContactCommand(targetIndex, descriptor);","lastModifiedDate":"2021-10-11"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        // other valid values specified","lastModifiedDate":"2017-05-04"},{"lineNumber":166,"author":{"gitId":"marcuspeh"},"content":"        userInput \u003d targetIndex.getOneBased() + INVALID_PHONE_DESC + PHONE_DESC_BOB;","lastModifiedDate":"2021-11-01"},{"lineNumber":167,"author":{"gitId":"marcuspeh"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2021-11-01"},{"lineNumber":168,"author":{"gitId":"marcuspeh"},"content":"        expectedCommand \u003d new EditContactCommand(targetIndex, descriptor);","lastModifiedDate":"2021-10-11"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":170,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":173,"author":{"gitId":"-"},"content":"    public void parse_resetTags_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_THIRD_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + TAG_EMPTY;","lastModifiedDate":"2017-05-25"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withTags().build();","lastModifiedDate":"2017-05-04"},{"lineNumber":178,"author":{"gitId":"marcuspeh"},"content":"        EditContactCommand expectedCommand \u003d new EditContactCommand(targetIndex, descriptor);","lastModifiedDate":"2021-10-11"},{"lineNumber":179,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":180,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":181,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":182,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-04"}],"authorContributionMap":{"marcuspeh":25,"chrus-chong":4,"ramapriyan912001":27,"-":126}},{"path":"src/test/java/seedu/awe/logic/parser/FindContactsCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"ramapriyan912001"},"content":"package seedu.awe.logic.parser;","lastModifiedDate":"2021-10-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":3,"author":{"gitId":"chrus-chong"},"content":"import static seedu.awe.commons.core.Messages.MESSAGE_FINDCONTACTSCOMMAND_USAGE;","lastModifiedDate":"2021-10-25"},{"lineNumber":4,"author":{"gitId":"ramapriyan912001"},"content":"import static seedu.awe.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-10-05"},{"lineNumber":5,"author":{"gitId":"ramapriyan912001"},"content":"import static seedu.awe.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2021-10-05"},{"lineNumber":6,"author":{"gitId":"ramapriyan912001"},"content":"import static seedu.awe.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2021-10-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":12,"author":{"gitId":"marcuspeh"},"content":"import seedu.awe.logic.commands.FindContactsCommand;","lastModifiedDate":"2021-10-10"},{"lineNumber":13,"author":{"gitId":"ramapriyan912001"},"content":"import seedu.awe.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2021-10-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":15,"author":{"gitId":"marcuspeh"},"content":"public class FindContactsCommandParserTest {","lastModifiedDate":"2021-10-10"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":17,"author":{"gitId":"marcuspeh"},"content":"    private FindContactsCommandParser parser \u003d new FindContactsCommandParser();","lastModifiedDate":"2021-10-10"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public void parse_emptyArg_throwsParseException() {","lastModifiedDate":"2017-06-27"},{"lineNumber":21,"author":{"gitId":"marcuspeh"},"content":"        assertParseFailure(parser, \"     \",","lastModifiedDate":"2021-10-10"},{"lineNumber":22,"author":{"gitId":"chrus-chong"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, MESSAGE_FINDCONTACTSCOMMAND_USAGE));","lastModifiedDate":"2021-10-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public void parse_validArgs_returnsFindCommand() {","lastModifiedDate":"2017-08-15"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        // no leading and trailing whitespaces","lastModifiedDate":"2017-06-27"},{"lineNumber":28,"author":{"gitId":"marcuspeh"},"content":"        FindContactsCommand expectedFindContactsCommand \u003d","lastModifiedDate":"2021-10-10"},{"lineNumber":29,"author":{"gitId":"marcuspeh"},"content":"                new FindContactsCommand(new NameContainsKeywordsPredicate(Arrays.asList(\"Alice\", \"Bob\")));","lastModifiedDate":"2021-10-10"},{"lineNumber":30,"author":{"gitId":"marcuspeh"},"content":"        assertParseSuccess(parser, \"Alice Bob\", expectedFindContactsCommand);","lastModifiedDate":"2021-10-10"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        // multiple whitespaces between keywords","lastModifiedDate":"2017-06-27"},{"lineNumber":33,"author":{"gitId":"marcuspeh"},"content":"        assertParseSuccess(parser, \" \\n Alice \\n \\t Bob  \\t\", expectedFindContactsCommand);","lastModifiedDate":"2021-10-10"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-27"}],"authorContributionMap":{"marcuspeh":8,"chrus-chong":2,"ramapriyan912001":5,"-":21}},{"path":"src/test/java/seedu/awe/logic/parser/FindGroupsCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"marcuspeh"},"content":"package seedu.awe.logic.parser;","lastModifiedDate":"2021-11-01"},{"lineNumber":2,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":3,"author":{"gitId":"marcuspeh"},"content":"import static seedu.awe.commons.core.Messages.MESSAGE_FINDGROUPSCOMMAND_USAGE;","lastModifiedDate":"2021-11-01"},{"lineNumber":4,"author":{"gitId":"marcuspeh"},"content":"import static seedu.awe.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-11-01"},{"lineNumber":5,"author":{"gitId":"marcuspeh"},"content":"import static seedu.awe.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2021-11-01"},{"lineNumber":6,"author":{"gitId":"marcuspeh"},"content":"import static seedu.awe.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2021-11-01"},{"lineNumber":7,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":8,"author":{"gitId":"marcuspeh"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-11-01"},{"lineNumber":9,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":10,"author":{"gitId":"marcuspeh"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-11-01"},{"lineNumber":11,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":12,"author":{"gitId":"marcuspeh"},"content":"import seedu.awe.logic.commands.FindGroupsCommand;","lastModifiedDate":"2021-11-01"},{"lineNumber":13,"author":{"gitId":"marcuspeh"},"content":"import seedu.awe.model.group.GroupContainsKeywordsPredicate;","lastModifiedDate":"2021-11-01"},{"lineNumber":14,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":15,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":16,"author":{"gitId":"marcuspeh"},"content":"public class FindGroupsCommandParserTest {","lastModifiedDate":"2021-11-01"},{"lineNumber":17,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":18,"author":{"gitId":"marcuspeh"},"content":"    private FindGroupsCommandParser parser \u003d new FindGroupsCommandParser();","lastModifiedDate":"2021-11-01"},{"lineNumber":19,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":20,"author":{"gitId":"marcuspeh"},"content":"    @Test","lastModifiedDate":"2021-11-01"},{"lineNumber":21,"author":{"gitId":"marcuspeh"},"content":"    public void parse_emptyArg_throwsParseException() {","lastModifiedDate":"2021-11-01"},{"lineNumber":22,"author":{"gitId":"marcuspeh"},"content":"        assertParseFailure(parser, \"     \",","lastModifiedDate":"2021-11-01"},{"lineNumber":23,"author":{"gitId":"marcuspeh"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, MESSAGE_FINDGROUPSCOMMAND_USAGE));","lastModifiedDate":"2021-11-01"},{"lineNumber":24,"author":{"gitId":"marcuspeh"},"content":"    }","lastModifiedDate":"2021-11-01"},{"lineNumber":25,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":26,"author":{"gitId":"marcuspeh"},"content":"    @Test","lastModifiedDate":"2021-11-01"},{"lineNumber":27,"author":{"gitId":"marcuspeh"},"content":"    public void parse_validArgs_returnsFindCommand() {","lastModifiedDate":"2021-11-01"},{"lineNumber":28,"author":{"gitId":"marcuspeh"},"content":"        // no leading and trailing whitespaces","lastModifiedDate":"2021-11-01"},{"lineNumber":29,"author":{"gitId":"marcuspeh"},"content":"        FindGroupsCommand expectedFindGroupsCommand \u003d","lastModifiedDate":"2021-11-01"},{"lineNumber":30,"author":{"gitId":"marcuspeh"},"content":"                new FindGroupsCommand(new GroupContainsKeywordsPredicate(Arrays.asList(\"Japan\", \"Singapore\")));","lastModifiedDate":"2021-11-01"},{"lineNumber":31,"author":{"gitId":"marcuspeh"},"content":"        assertParseSuccess(parser, \"Japan Singapore\", expectedFindGroupsCommand);","lastModifiedDate":"2021-11-01"},{"lineNumber":32,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":33,"author":{"gitId":"marcuspeh"},"content":"        // multiple whitespaces between keywords","lastModifiedDate":"2021-11-01"},{"lineNumber":34,"author":{"gitId":"marcuspeh"},"content":"        assertParseSuccess(parser, \" \\n Japan \\n \\t Singapore  \\t\", expectedFindGroupsCommand);","lastModifiedDate":"2021-11-01"},{"lineNumber":35,"author":{"gitId":"marcuspeh"},"content":"    }","lastModifiedDate":"2021-11-01"},{"lineNumber":36,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":37,"author":{"gitId":"marcuspeh"},"content":"}","lastModifiedDate":"2021-11-01"}],"authorContributionMap":{"marcuspeh":37}},{"path":"src/test/java/seedu/awe/logic/parser/ListTransactionSummaryCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"marcuspeh"},"content":"package seedu.awe.logic.parser;","lastModifiedDate":"2021-11-01"},{"lineNumber":2,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":3,"author":{"gitId":"marcuspeh"},"content":"import static seedu.awe.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-11-01"},{"lineNumber":4,"author":{"gitId":"marcuspeh"},"content":"import static seedu.awe.commons.core.Messages.MESSAGE_LISTTRANSACTIONSUMMARYCOMMAND_USAGE;","lastModifiedDate":"2021-11-01"},{"lineNumber":5,"author":{"gitId":"marcuspeh"},"content":"import static seedu.awe.logic.commands.CommandTestUtil.GROUPNAME_DESC_BALI;","lastModifiedDate":"2021-11-01"},{"lineNumber":6,"author":{"gitId":"marcuspeh"},"content":"import static seedu.awe.logic.commands.CommandTestUtil.GROUPNAME_DESC_OSLO;","lastModifiedDate":"2021-11-01"},{"lineNumber":7,"author":{"gitId":"marcuspeh"},"content":"import static seedu.awe.logic.commands.CommandTestUtil.INVALID_GROUP_NAME_DESC;","lastModifiedDate":"2021-11-01"},{"lineNumber":8,"author":{"gitId":"marcuspeh"},"content":"import static seedu.awe.logic.commands.CommandTestUtil.PREAMBLE_NON_EMPTY;","lastModifiedDate":"2021-11-01"},{"lineNumber":9,"author":{"gitId":"marcuspeh"},"content":"import static seedu.awe.logic.commands.CommandTestUtil.PREAMBLE_WHITESPACE;","lastModifiedDate":"2021-11-01"},{"lineNumber":10,"author":{"gitId":"marcuspeh"},"content":"import static seedu.awe.logic.parser.CliSyntax.PREFIX_GROUP_NAME;","lastModifiedDate":"2021-11-01"},{"lineNumber":11,"author":{"gitId":"marcuspeh"},"content":"import static seedu.awe.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2021-11-01"},{"lineNumber":12,"author":{"gitId":"marcuspeh"},"content":"import static seedu.awe.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2021-11-01"},{"lineNumber":13,"author":{"gitId":"marcuspeh"},"content":"import static seedu.awe.testutil.Assert.assertThrows;","lastModifiedDate":"2021-11-01"},{"lineNumber":14,"author":{"gitId":"marcuspeh"},"content":"import static seedu.awe.testutil.TypicalGroups.BALI;","lastModifiedDate":"2021-11-01"},{"lineNumber":15,"author":{"gitId":"marcuspeh"},"content":"import static seedu.awe.testutil.TypicalGroups.OSLO;","lastModifiedDate":"2021-11-01"},{"lineNumber":16,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":17,"author":{"gitId":"marcuspeh"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-11-01"},{"lineNumber":18,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":19,"author":{"gitId":"marcuspeh"},"content":"import seedu.awe.logic.commands.ListTransactionSummaryCommand;","lastModifiedDate":"2021-11-01"},{"lineNumber":20,"author":{"gitId":"marcuspeh"},"content":"import seedu.awe.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-11-01"},{"lineNumber":21,"author":{"gitId":"marcuspeh"},"content":"import seedu.awe.model.group.GroupName;","lastModifiedDate":"2021-11-01"},{"lineNumber":22,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":23,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":24,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":25,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":26,"author":{"gitId":"marcuspeh"},"content":"public class ListTransactionSummaryCommandParserTest {","lastModifiedDate":"2021-11-01"},{"lineNumber":27,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":28,"author":{"gitId":"marcuspeh"},"content":"    private ListTransactionSummaryCommandParser parser;","lastModifiedDate":"2021-11-01"},{"lineNumber":29,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":30,"author":{"gitId":"marcuspeh"},"content":"    public ListTransactionSummaryCommandParserTest() {","lastModifiedDate":"2021-11-01"},{"lineNumber":31,"author":{"gitId":"marcuspeh"},"content":"        parser \u003d new ListTransactionSummaryCommandParser();","lastModifiedDate":"2021-11-01"},{"lineNumber":32,"author":{"gitId":"marcuspeh"},"content":"    }","lastModifiedDate":"2021-11-01"},{"lineNumber":33,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":34,"author":{"gitId":"marcuspeh"},"content":"    /**","lastModifiedDate":"2021-11-01"},{"lineNumber":35,"author":{"gitId":"marcuspeh"},"content":"     * Resets parser. Necessary as ListTransactionSummaryCommand parser needs to be initialised with a model for","lastModifiedDate":"2021-11-01"},{"lineNumber":36,"author":{"gitId":"marcuspeh"},"content":"     * each call. Failure to reset parser will result in Duplicate exceptions being raised.","lastModifiedDate":"2021-11-01"},{"lineNumber":37,"author":{"gitId":"marcuspeh"},"content":"     */","lastModifiedDate":"2021-11-01"},{"lineNumber":38,"author":{"gitId":"marcuspeh"},"content":"    public void resetParser() {","lastModifiedDate":"2021-11-01"},{"lineNumber":39,"author":{"gitId":"marcuspeh"},"content":"        parser \u003d new ListTransactionSummaryCommandParser();","lastModifiedDate":"2021-11-01"},{"lineNumber":40,"author":{"gitId":"marcuspeh"},"content":"    }","lastModifiedDate":"2021-11-01"},{"lineNumber":41,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":42,"author":{"gitId":"marcuspeh"},"content":"    @Test","lastModifiedDate":"2021-11-01"},{"lineNumber":43,"author":{"gitId":"marcuspeh"},"content":"    public void parse_allFieldsPresent_success() {","lastModifiedDate":"2021-11-01"},{"lineNumber":44,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":45,"author":{"gitId":"marcuspeh"},"content":"        // regular input for ListTransactionSummaryCommand","lastModifiedDate":"2021-11-01"},{"lineNumber":46,"author":{"gitId":"marcuspeh"},"content":"        assertParseSuccess(parser, GROUPNAME_DESC_BALI,","lastModifiedDate":"2021-11-01"},{"lineNumber":47,"author":{"gitId":"marcuspeh"},"content":"                new ListTransactionSummaryCommand(BALI));","lastModifiedDate":"2021-11-01"},{"lineNumber":48,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":49,"author":{"gitId":"marcuspeh"},"content":"        resetParser();","lastModifiedDate":"2021-11-01"},{"lineNumber":50,"author":{"gitId":"marcuspeh"},"content":"        // names in different order","lastModifiedDate":"2021-11-01"},{"lineNumber":51,"author":{"gitId":"marcuspeh"},"content":"        assertParseSuccess(parser, GROUPNAME_DESC_OSLO,","lastModifiedDate":"2021-11-01"},{"lineNumber":52,"author":{"gitId":"marcuspeh"},"content":"                new ListTransactionSummaryCommand(OSLO));","lastModifiedDate":"2021-11-01"},{"lineNumber":53,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":54,"author":{"gitId":"marcuspeh"},"content":"        resetParser();","lastModifiedDate":"2021-11-01"},{"lineNumber":55,"author":{"gitId":"marcuspeh"},"content":"        // whitespace only preamble","lastModifiedDate":"2021-11-01"},{"lineNumber":56,"author":{"gitId":"marcuspeh"},"content":"        assertParseSuccess(parser, PREAMBLE_WHITESPACE + GROUPNAME_DESC_BALI,","lastModifiedDate":"2021-11-01"},{"lineNumber":57,"author":{"gitId":"marcuspeh"},"content":"                new ListTransactionSummaryCommand(BALI));","lastModifiedDate":"2021-11-01"},{"lineNumber":58,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":59,"author":{"gitId":"marcuspeh"},"content":"        resetParser();","lastModifiedDate":"2021-11-01"},{"lineNumber":60,"author":{"gitId":"marcuspeh"},"content":"        // whitespace only preamble","lastModifiedDate":"2021-11-01"},{"lineNumber":61,"author":{"gitId":"marcuspeh"},"content":"        assertParseSuccess(parser, PREAMBLE_WHITESPACE + GROUPNAME_DESC_OSLO,","lastModifiedDate":"2021-11-01"},{"lineNumber":62,"author":{"gitId":"marcuspeh"},"content":"                new ListTransactionSummaryCommand(OSLO));","lastModifiedDate":"2021-11-01"},{"lineNumber":63,"author":{"gitId":"marcuspeh"},"content":"    }","lastModifiedDate":"2021-11-01"},{"lineNumber":64,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":65,"author":{"gitId":"marcuspeh"},"content":"    @Test","lastModifiedDate":"2021-11-01"},{"lineNumber":66,"author":{"gitId":"marcuspeh"},"content":"    public void parse_compulsoryFieldMissing_failure() {","lastModifiedDate":"2021-11-01"},{"lineNumber":67,"author":{"gitId":"marcuspeh"},"content":"        String expectedMessage \u003d String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2021-11-01"},{"lineNumber":68,"author":{"gitId":"marcuspeh"},"content":"                MESSAGE_LISTTRANSACTIONSUMMARYCOMMAND_USAGE);","lastModifiedDate":"2021-11-01"},{"lineNumber":69,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":70,"author":{"gitId":"marcuspeh"},"content":"        resetParser();","lastModifiedDate":"2021-11-01"},{"lineNumber":71,"author":{"gitId":"marcuspeh"},"content":"        // missing group prefix","lastModifiedDate":"2021-11-01"},{"lineNumber":72,"author":{"gitId":"marcuspeh"},"content":"        String inputMissingGroupPrefix \u003d \" Bali\";","lastModifiedDate":"2021-11-01"},{"lineNumber":73,"author":{"gitId":"marcuspeh"},"content":"        assertParseFailure(parser, inputMissingGroupPrefix, expectedMessage);","lastModifiedDate":"2021-11-01"},{"lineNumber":74,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":75,"author":{"gitId":"marcuspeh"},"content":"        resetParser();","lastModifiedDate":"2021-11-01"},{"lineNumber":76,"author":{"gitId":"marcuspeh"},"content":"        // empty command","lastModifiedDate":"2021-11-01"},{"lineNumber":77,"author":{"gitId":"marcuspeh"},"content":"        assertParseFailure(parser, \" \", expectedMessage);","lastModifiedDate":"2021-11-01"},{"lineNumber":78,"author":{"gitId":"marcuspeh"},"content":"    }","lastModifiedDate":"2021-11-01"},{"lineNumber":79,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":80,"author":{"gitId":"marcuspeh"},"content":"    @Test","lastModifiedDate":"2021-11-01"},{"lineNumber":81,"author":{"gitId":"marcuspeh"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2021-11-01"},{"lineNumber":82,"author":{"gitId":"marcuspeh"},"content":"        String expectedMessage \u003d String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2021-11-01"},{"lineNumber":83,"author":{"gitId":"marcuspeh"},"content":"                MESSAGE_LISTTRANSACTIONSUMMARYCOMMAND_USAGE);","lastModifiedDate":"2021-11-01"},{"lineNumber":84,"author":{"gitId":"marcuspeh"},"content":"        resetParser();","lastModifiedDate":"2021-11-01"},{"lineNumber":85,"author":{"gitId":"marcuspeh"},"content":"        // invalid group name","lastModifiedDate":"2021-11-01"},{"lineNumber":86,"author":{"gitId":"marcuspeh"},"content":"        assertParseFailure(parser, INVALID_GROUP_NAME_DESC, GroupName.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-11-01"},{"lineNumber":87,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":88,"author":{"gitId":"marcuspeh"},"content":"        resetParser();","lastModifiedDate":"2021-11-01"},{"lineNumber":89,"author":{"gitId":"marcuspeh"},"content":"        // empty group name","lastModifiedDate":"2021-11-01"},{"lineNumber":90,"author":{"gitId":"marcuspeh"},"content":"        String emptyGroupNameInput \u003d \" \" + PREFIX_GROUP_NAME;","lastModifiedDate":"2021-11-01"},{"lineNumber":91,"author":{"gitId":"marcuspeh"},"content":"        assertParseFailure(parser, emptyGroupNameInput, GroupName.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-11-01"},{"lineNumber":92,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":93,"author":{"gitId":"marcuspeh"},"content":"        resetParser();","lastModifiedDate":"2021-11-01"},{"lineNumber":94,"author":{"gitId":"marcuspeh"},"content":"        // invalid name returns IllegalArgumentException","lastModifiedDate":"2021-11-01"},{"lineNumber":95,"author":{"gitId":"marcuspeh"},"content":"        String userInput \u003d INVALID_GROUP_NAME_DESC;","lastModifiedDate":"2021-11-01"},{"lineNumber":96,"author":{"gitId":"marcuspeh"},"content":"        assertThrows(ParseException.class, GroupName.MESSAGE_CONSTRAINTS, () -\u003e parser.parse(userInput));","lastModifiedDate":"2021-11-01"},{"lineNumber":97,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":98,"author":{"gitId":"marcuspeh"},"content":"        resetParser();","lastModifiedDate":"2021-11-01"},{"lineNumber":99,"author":{"gitId":"marcuspeh"},"content":"        // non-empty preamble","lastModifiedDate":"2021-11-01"},{"lineNumber":100,"author":{"gitId":"marcuspeh"},"content":"        assertParseFailure(parser, PREAMBLE_NON_EMPTY + GROUPNAME_DESC_BALI, expectedMessage);","lastModifiedDate":"2021-11-01"},{"lineNumber":101,"author":{"gitId":"marcuspeh"},"content":"    }","lastModifiedDate":"2021-11-01"},{"lineNumber":102,"author":{"gitId":"marcuspeh"},"content":"}","lastModifiedDate":"2021-11-01"}],"authorContributionMap":{"marcuspeh":102}},{"path":"src/test/java/seedu/awe/logic/parser/ParserUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"ramapriyan912001"},"content":"package seedu.awe.logic.parser;","lastModifiedDate":"2021-10-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"ramapriyan912001"},"content":"import static seedu.awe.logic.commands.CommandTestUtil.INVALID_NAME_JAMES;","lastModifiedDate":"2021-10-09"},{"lineNumber":6,"author":{"gitId":"ramapriyan912001"},"content":"import static seedu.awe.logic.commands.CommandTestUtil.INVALID_NAME_JOHN;","lastModifiedDate":"2021-10-09"},{"lineNumber":7,"author":{"gitId":"ramapriyan912001"},"content":"import static seedu.awe.logic.commands.CommandTestUtil.VALID_NAME_ALICE;","lastModifiedDate":"2021-10-09"},{"lineNumber":8,"author":{"gitId":"ramapriyan912001"},"content":"import static seedu.awe.logic.commands.CommandTestUtil.VALID_NAME_AMY;","lastModifiedDate":"2021-10-09"},{"lineNumber":9,"author":{"gitId":"ramapriyan912001"},"content":"import static seedu.awe.logic.parser.ParserUtil.MESSAGE_INVALID_INDEX;","lastModifiedDate":"2021-10-05"},{"lineNumber":10,"author":{"gitId":"ramapriyan912001"},"content":"import static seedu.awe.testutil.Assert.assertThrows;","lastModifiedDate":"2021-10-05"},{"lineNumber":11,"author":{"gitId":"ramapriyan912001"},"content":"import static seedu.awe.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2021-10-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-05-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-05-22"},{"lineNumber":16,"author":{"gitId":"ramapriyan912001"},"content":"import java.util.List;","lastModifiedDate":"2021-10-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-05-22"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":21,"author":{"gitId":"ramapriyan912001"},"content":"import seedu.awe.logic.parser.exceptions.EmptyGroupException;","lastModifiedDate":"2021-10-09"},{"lineNumber":22,"author":{"gitId":"ramapriyan912001"},"content":"import seedu.awe.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-10-05"},{"lineNumber":23,"author":{"gitId":"ramapriyan912001"},"content":"import seedu.awe.model.group.GroupName;","lastModifiedDate":"2021-10-07"},{"lineNumber":24,"author":{"gitId":"ramapriyan912001"},"content":"import seedu.awe.model.person.Name;","lastModifiedDate":"2021-10-05"},{"lineNumber":25,"author":{"gitId":"ramapriyan912001"},"content":"import seedu.awe.model.person.Phone;","lastModifiedDate":"2021-10-05"},{"lineNumber":26,"author":{"gitId":"ramapriyan912001"},"content":"import seedu.awe.model.tag.Tag;","lastModifiedDate":"2021-10-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":28,"author":{"gitId":"-"},"content":"public class ParserUtilTest {","lastModifiedDate":"2017-05-22"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private static final String INVALID_NAME \u003d \"R@chel\";","lastModifiedDate":"2017-05-22"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private static final String INVALID_PHONE \u003d \"+651234\";","lastModifiedDate":"2017-05-22"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private static final String INVALID_ADDRESS \u003d \" \";","lastModifiedDate":"2017-05-22"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private static final String INVALID_EMAIL \u003d \"example.com\";","lastModifiedDate":"2017-05-22"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private static final String INVALID_TAG \u003d \"#friend\";","lastModifiedDate":"2017-05-22"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":35,"author":{"gitId":"ramapriyan912001"},"content":"    private static final String INVALID_GROUPNAME \u003d \"B@li\";","lastModifiedDate":"2021-10-07"},{"lineNumber":36,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private static final String VALID_NAME \u003d \"Rachel Walker\";","lastModifiedDate":"2017-05-22"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private static final String VALID_PHONE \u003d \"123456\";","lastModifiedDate":"2017-05-22"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    private static final String VALID_ADDRESS \u003d \"123 Main Street #0505\";","lastModifiedDate":"2017-05-22"},{"lineNumber":40,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":41,"author":{"gitId":"ramapriyan912001"},"content":"    private static final String VALID_GROUPNAME \u003d \"Bali\";","lastModifiedDate":"2021-10-07"},{"lineNumber":42,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    private static final String VALID_EMAIL \u003d \"rachel@example.com\";","lastModifiedDate":"2017-05-22"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    private static final String VALID_TAG_1 \u003d \"friend\";","lastModifiedDate":"2017-05-22"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    private static final String VALID_TAG_2 \u003d \"neighbour\";","lastModifiedDate":"2017-05-22"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    private static final String WHITESPACE \u003d \" \\t\\r\\n\";","lastModifiedDate":"2017-05-29"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-29"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public void parseIndex_invalidInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseIndex(\"10 a\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public void parseIndex_outOfRangeInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, MESSAGE_INVALID_INDEX, ()","lastModifiedDate":"2019-03-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"            -\u003e ParserUtil.parseIndex(Long.toString(Integer.MAX_VALUE + 1)));","lastModifiedDate":"2019-03-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public void parseIndex_validInput_success() throws Exception {","lastModifiedDate":"2017-05-26"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        // No whitespaces","lastModifiedDate":"2017-05-26"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertEquals(INDEX_FIRST_PERSON, ParserUtil.parseIndex(\"1\"));","lastModifiedDate":"2017-05-25"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        // Leading and trailing whitespaces","lastModifiedDate":"2017-05-26"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assertEquals(INDEX_FIRST_PERSON, ParserUtil.parseIndex(\"  1  \"));","lastModifiedDate":"2017-05-25"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public void parseName_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-29"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseName((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public void parseName_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseName(INVALID_NAME));","lastModifiedDate":"2019-03-14"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public void parseName_validValueWithoutWhitespace_returnsName() throws Exception {","lastModifiedDate":"2017-05-29"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        Name expectedName \u003d new Name(VALID_NAME);","lastModifiedDate":"2017-05-22"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertEquals(expectedName, ParserUtil.parseName(VALID_NAME));","lastModifiedDate":"2017-05-29"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-29"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-29"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public void parseName_validValueWithWhitespace_returnsTrimmedName() throws Exception {","lastModifiedDate":"2017-05-29"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        String nameWithWhitespace \u003d WHITESPACE + VALID_NAME + WHITESPACE;","lastModifiedDate":"2017-05-29"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        Name expectedName \u003d new Name(VALID_NAME);","lastModifiedDate":"2017-05-29"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        assertEquals(expectedName, ParserUtil.parseName(nameWithWhitespace));","lastModifiedDate":"2017-05-29"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2021-10-07"},{"lineNumber":93,"author":{"gitId":"ramapriyan912001"},"content":"    public void parseGroupName_null_throwsNullPointerException() {","lastModifiedDate":"2021-10-07"},{"lineNumber":94,"author":{"gitId":"ramapriyan912001"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseGroupName((String) null));","lastModifiedDate":"2021-10-07"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2021-10-07"},{"lineNumber":98,"author":{"gitId":"ramapriyan912001"},"content":"    public void parseGroupName_invalidValue_throwsParseException() {","lastModifiedDate":"2021-10-07"},{"lineNumber":99,"author":{"gitId":"ramapriyan912001"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseGroupName(INVALID_GROUPNAME));","lastModifiedDate":"2021-10-07"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2021-10-07"},{"lineNumber":103,"author":{"gitId":"ramapriyan912001"},"content":"    public void parseGroupName_validValueWithoutWhitespace_returnsName() throws Exception {","lastModifiedDate":"2021-10-07"},{"lineNumber":104,"author":{"gitId":"ramapriyan912001"},"content":"        GroupName expectedGroupName \u003d new GroupName(VALID_GROUPNAME);","lastModifiedDate":"2021-10-07"},{"lineNumber":105,"author":{"gitId":"ramapriyan912001"},"content":"        assertEquals(expectedGroupName, ParserUtil.parseGroupName(VALID_GROUPNAME));","lastModifiedDate":"2021-10-07"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2021-10-07"},{"lineNumber":109,"author":{"gitId":"ramapriyan912001"},"content":"    public void parseGroupName_validValueWithWhitespace_returnsTrimmedName() throws Exception {","lastModifiedDate":"2021-10-07"},{"lineNumber":110,"author":{"gitId":"ramapriyan912001"},"content":"        String groupNameWithWhitespace \u003d WHITESPACE + VALID_GROUPNAME + WHITESPACE;","lastModifiedDate":"2021-10-07"},{"lineNumber":111,"author":{"gitId":"ramapriyan912001"},"content":"        GroupName expectedGroupName \u003d new GroupName(VALID_GROUPNAME);","lastModifiedDate":"2021-10-07"},{"lineNumber":112,"author":{"gitId":"ramapriyan912001"},"content":"        assertEquals(expectedGroupName, ParserUtil.parseGroupName(groupNameWithWhitespace));","lastModifiedDate":"2021-10-07"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    public void parsePhone_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parsePhone((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    public void parsePhone_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parsePhone(INVALID_PHONE));","lastModifiedDate":"2019-03-14"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    public void parsePhone_validValueWithoutWhitespace_returnsPhone() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        Phone expectedPhone \u003d new Phone(VALID_PHONE);","lastModifiedDate":"2017-05-22"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        assertEquals(expectedPhone, ParserUtil.parsePhone(VALID_PHONE));","lastModifiedDate":"2017-05-30"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    public void parsePhone_validValueWithWhitespace_returnsTrimmedPhone() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        String phoneWithWhitespace \u003d WHITESPACE + VALID_PHONE + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        Phone expectedPhone \u003d new Phone(VALID_PHONE);","lastModifiedDate":"2017-05-30"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        assertEquals(expectedPhone, ParserUtil.parsePhone(phoneWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    public void parseTag_null_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseTag(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    public void parseTag_invalidValue_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseTag(INVALID_TAG));","lastModifiedDate":"2019-03-23"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    public void parseTag_validValueWithoutWhitespace_returnsTag() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        Tag expectedTag \u003d new Tag(VALID_TAG_1);","lastModifiedDate":"2017-05-30"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        assertEquals(expectedTag, ParserUtil.parseTag(VALID_TAG_1));","lastModifiedDate":"2017-05-30"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":155,"author":{"gitId":"-"},"content":"    public void parseTag_validValueWithWhitespace_returnsTrimmedTag() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        String tagWithWhitespace \u003d WHITESPACE + VALID_TAG_1 + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        Tag expectedTag \u003d new Tag(VALID_TAG_1);","lastModifiedDate":"2017-05-30"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        assertEquals(expectedTag, ParserUtil.parseTag(tagWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    public void parseTags_null_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseTags(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":167,"author":{"gitId":"-"},"content":"    public void parseTags_collectionWithInvalidTags_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, () -\u003e ParserUtil.parseTags(Arrays.asList(VALID_TAG_1, INVALID_TAG)));","lastModifiedDate":"2019-03-23"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":171,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    public void parseTags_emptyCollection_returnsEmptySet() throws Exception {","lastModifiedDate":"2017-05-22"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        assertTrue(ParserUtil.parseTags(Collections.emptyList()).isEmpty());","lastModifiedDate":"2017-05-22"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":175,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":176,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    public void parseTags_collectionWithValidTags_returnsTagSet() throws Exception {","lastModifiedDate":"2017-05-22"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e actualTagSet \u003d ParserUtil.parseTags(Arrays.asList(VALID_TAG_1, VALID_TAG_2));","lastModifiedDate":"2017-05-22"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e expectedTagSet \u003d new HashSet\u003cTag\u003e(Arrays.asList(new Tag(VALID_TAG_1), new Tag(VALID_TAG_2)));","lastModifiedDate":"2017-05-22"},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        assertEquals(expectedTagSet, actualTagSet);","lastModifiedDate":"2017-05-22"},{"lineNumber":182,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":183,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":184,"author":{"gitId":"ramapriyan912001"},"content":"    @Test","lastModifiedDate":"2021-10-09"},{"lineNumber":185,"author":{"gitId":"ramapriyan912001"},"content":"    public void parseMemberNames_null_throwsNullPointerException() {","lastModifiedDate":"2021-10-09"},{"lineNumber":186,"author":{"gitId":"ramapriyan912001"},"content":"        assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseMemberNames(null));","lastModifiedDate":"2021-10-09"},{"lineNumber":187,"author":{"gitId":"ramapriyan912001"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":188,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":189,"author":{"gitId":"ramapriyan912001"},"content":"    @Test","lastModifiedDate":"2021-10-09"},{"lineNumber":190,"author":{"gitId":"ramapriyan912001"},"content":"    public void parseMemberNames_collectionWithInvalidMemberNames_throwsEmptyGroupException() {","lastModifiedDate":"2021-10-09"},{"lineNumber":191,"author":{"gitId":"ramapriyan912001"},"content":"        assertThrows(EmptyGroupException.class, () -\u003e ParserUtil.parseMemberNames(Arrays.asList(INVALID_NAME_JAMES,","lastModifiedDate":"2021-10-09"},{"lineNumber":192,"author":{"gitId":"ramapriyan912001"},"content":"                INVALID_NAME_JOHN)));","lastModifiedDate":"2021-10-09"},{"lineNumber":193,"author":{"gitId":"ramapriyan912001"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":194,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":195,"author":{"gitId":"ramapriyan912001"},"content":"    @Test","lastModifiedDate":"2021-10-09"},{"lineNumber":196,"author":{"gitId":"ramapriyan912001"},"content":"    public void parseMemberNames_emptyCollection_throwsEmptyGroupException() {","lastModifiedDate":"2021-10-09"},{"lineNumber":197,"author":{"gitId":"ramapriyan912001"},"content":"        assertThrows(EmptyGroupException.class, () -\u003e ParserUtil.parseMemberNames(Collections.emptyList()));","lastModifiedDate":"2021-10-09"},{"lineNumber":198,"author":{"gitId":"ramapriyan912001"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":199,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":200,"author":{"gitId":"ramapriyan912001"},"content":"    @Test","lastModifiedDate":"2021-10-09"},{"lineNumber":201,"author":{"gitId":"ramapriyan912001"},"content":"    public void parseMemberNames_collectionWithValidMemberNames_returnsMemberNames() {","lastModifiedDate":"2021-10-09"},{"lineNumber":202,"author":{"gitId":"ramapriyan912001"},"content":"        Set\u003cName\u003e actualNameSet \u003d Set.copyOf(","lastModifiedDate":"2021-10-09"},{"lineNumber":203,"author":{"gitId":"ramapriyan912001"},"content":"                ParserUtil.parseMemberNames(Arrays.asList(VALID_NAME_ALICE, VALID_NAME_AMY)));","lastModifiedDate":"2021-10-09"},{"lineNumber":204,"author":{"gitId":"ramapriyan912001"},"content":"        Set\u003cName\u003e expectedNameSet \u003d Set.of(new Name(VALID_NAME_ALICE), new Name(VALID_NAME_AMY));","lastModifiedDate":"2021-10-09"},{"lineNumber":205,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":206,"author":{"gitId":"ramapriyan912001"},"content":"        assertEquals(actualNameSet, expectedNameSet);","lastModifiedDate":"2021-10-09"},{"lineNumber":207,"author":{"gitId":"ramapriyan912001"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":208,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":209,"author":{"gitId":"ramapriyan912001"},"content":"    @Test","lastModifiedDate":"2021-10-09"},{"lineNumber":210,"author":{"gitId":"ramapriyan912001"},"content":"    public void parseMemberNames_collectionWithDuplicateMemberNames_returnsUniqueMemberNames() {","lastModifiedDate":"2021-10-09"},{"lineNumber":211,"author":{"gitId":"ramapriyan912001"},"content":"        List\u003cName\u003e actualNameList \u003d ParserUtil.parseMemberNames(Arrays.asList(VALID_NAME_ALICE, VALID_NAME_ALICE));","lastModifiedDate":"2021-10-09"},{"lineNumber":212,"author":{"gitId":"ramapriyan912001"},"content":"        List\u003cName\u003e expectedNameList \u003d Arrays.asList(new Name(VALID_NAME_ALICE));","lastModifiedDate":"2021-10-09"},{"lineNumber":213,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-10-09"},{"lineNumber":214,"author":{"gitId":"ramapriyan912001"},"content":"        assertEquals(actualNameList, expectedNameList);","lastModifiedDate":"2021-10-09"},{"lineNumber":215,"author":{"gitId":"ramapriyan912001"},"content":"    }","lastModifiedDate":"2021-10-09"},{"lineNumber":216,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-22"}],"authorContributionMap":{"ramapriyan912001":64,"-":152}},{"path":"src/test/java/seedu/awe/model/AddressBookTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"ramapriyan912001"},"content":"package seedu.awe.model;","lastModifiedDate":"2021-10-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"ramapriyan912001"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2021-10-31"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":7,"author":{"gitId":"ramapriyan912001"},"content":"import static seedu.awe.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2021-10-05"},{"lineNumber":8,"author":{"gitId":"ramapriyan912001"},"content":"import static seedu.awe.testutil.Assert.assertThrows;","lastModifiedDate":"2021-10-05"},{"lineNumber":9,"author":{"gitId":"ramapriyan912001"},"content":"import static seedu.awe.testutil.TypicalGroups.DUBAI;","lastModifiedDate":"2021-10-31"},{"lineNumber":10,"author":{"gitId":"ramapriyan912001"},"content":"import static seedu.awe.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2021-10-05"},{"lineNumber":11,"author":{"gitId":"ramapriyan912001"},"content":"import static seedu.awe.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2021-10-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2016-12-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2016-12-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2016-12-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-12-24"},{"lineNumber":17,"author":{"gitId":"ramapriyan912001"},"content":"import java.util.Optional;","lastModifiedDate":"2021-10-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2016-12-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-12-24"},{"lineNumber":23,"author":{"gitId":"ramapriyan912001"},"content":"import seedu.awe.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-10-25"},{"lineNumber":24,"author":{"gitId":"Jingwencloud"},"content":"import seedu.awe.model.expense.Expense;","lastModifiedDate":"2021-10-07"},{"lineNumber":25,"author":{"gitId":"ramapriyan912001"},"content":"import seedu.awe.model.group.Group;","lastModifiedDate":"2021-10-05"},{"lineNumber":26,"author":{"gitId":"ramapriyan912001"},"content":"import seedu.awe.model.group.GroupName;","lastModifiedDate":"2021-10-05"},{"lineNumber":27,"author":{"gitId":"ramapriyan912001"},"content":"import seedu.awe.model.group.UniqueGroupList;","lastModifiedDate":"2021-10-31"},{"lineNumber":28,"author":{"gitId":"ramapriyan912001"},"content":"import seedu.awe.model.payment.Payment;","lastModifiedDate":"2021-10-17"},{"lineNumber":29,"author":{"gitId":"ramapriyan912001"},"content":"import seedu.awe.model.person.Person;","lastModifiedDate":"2021-10-05"},{"lineNumber":30,"author":{"gitId":"ramapriyan912001"},"content":"import seedu.awe.model.person.UniquePersonList;","lastModifiedDate":"2021-10-31"},{"lineNumber":31,"author":{"gitId":"ramapriyan912001"},"content":"import seedu.awe.model.person.exceptions.DuplicatePersonException;","lastModifiedDate":"2021-10-05"},{"lineNumber":32,"author":{"gitId":"ramapriyan912001"},"content":"import seedu.awe.testutil.PersonBuilder;","lastModifiedDate":"2021-10-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"public class AddressBookTest {","lastModifiedDate":"2016-12-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private final AddressBook addressBook \u003d new AddressBook();","lastModifiedDate":"2016-12-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public void constructor() {","lastModifiedDate":"2016-12-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        assertEquals(Collections.emptyList(), addressBook.getPersonList());","lastModifiedDate":"2016-12-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public void resetData_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e addressBook.resetData(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public void resetData_withValidReadOnlyAddressBook_replacesData() {","lastModifiedDate":"2016-12-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        AddressBook newData \u003d getTypicalAddressBook();","lastModifiedDate":"2017-07-19"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        addressBook.resetData(newData);","lastModifiedDate":"2016-12-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertEquals(newData, addressBook);","lastModifiedDate":"2016-12-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public void resetData_withDuplicatePersons_throwsDuplicatePersonException() {","lastModifiedDate":"2018-08-07"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        // Two persons with the same identity fields","lastModifiedDate":"2018-04-19"},{"lineNumber":58,"author":{"gitId":"marcuspeh"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withTags(VALID_TAG_HUSBAND)","lastModifiedDate":"2021-11-01"},{"lineNumber":59,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-04-19"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e newPersons \u003d Arrays.asList(ALICE, editedAlice);","lastModifiedDate":"2018-04-19"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        AddressBookStub newData \u003d new AddressBookStub(newPersons);","lastModifiedDate":"2018-03-29"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertThrows(DuplicatePersonException.class, () -\u003e addressBook.resetData(newData));","lastModifiedDate":"2019-03-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public void hasPerson_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-06"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e addressBook.hasPerson(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public void hasPerson_personNotInAddressBook_returnsFalse() {","lastModifiedDate":"2018-08-06"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertFalse(addressBook.hasPerson(ALICE));","lastModifiedDate":"2018-08-06"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public void hasPerson_personInAddressBook_returnsTrue() {","lastModifiedDate":"2018-08-07"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        addressBook.addPerson(ALICE);","lastModifiedDate":"2018-08-06"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        assertTrue(addressBook.hasPerson(ALICE));","lastModifiedDate":"2018-08-06"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public void hasPerson_personWithSameIdentityFieldsInAddressBook_returnsTrue() {","lastModifiedDate":"2018-08-07"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        addressBook.addPerson(ALICE);","lastModifiedDate":"2018-08-06"},{"lineNumber":85,"author":{"gitId":"marcuspeh"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withTags(VALID_TAG_HUSBAND)","lastModifiedDate":"2021-11-01"},{"lineNumber":86,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-08-06"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        assertTrue(addressBook.hasPerson(editedAlice));","lastModifiedDate":"2018-08-06"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    public void getPersonList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e addressBook.getPersonList().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":95,"author":{"gitId":"ramapriyan912001"},"content":"    @Test","lastModifiedDate":"2021-10-31"},{"lineNumber":96,"author":{"gitId":"ramapriyan912001"},"content":"    public void getPersons_returnsPersonList() {","lastModifiedDate":"2021-10-31"},{"lineNumber":97,"author":{"gitId":"ramapriyan912001"},"content":"        assertEquals(addressBook.getPersons(), new UniquePersonList());","lastModifiedDate":"2021-10-31"},{"lineNumber":98,"author":{"gitId":"ramapriyan912001"},"content":"        addressBook.addPerson(ALICE);","lastModifiedDate":"2021-10-31"},{"lineNumber":99,"author":{"gitId":"ramapriyan912001"},"content":"        UniquePersonList personList \u003d new UniquePersonList();","lastModifiedDate":"2021-10-31"},{"lineNumber":100,"author":{"gitId":"ramapriyan912001"},"content":"        personList.add(ALICE);","lastModifiedDate":"2021-10-31"},{"lineNumber":101,"author":{"gitId":"ramapriyan912001"},"content":"        assertEquals(addressBook.getPersons(), personList);","lastModifiedDate":"2021-10-31"},{"lineNumber":102,"author":{"gitId":"ramapriyan912001"},"content":"    }","lastModifiedDate":"2021-10-31"},{"lineNumber":103,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":104,"author":{"gitId":"ramapriyan912001"},"content":"    @Test","lastModifiedDate":"2021-10-31"},{"lineNumber":105,"author":{"gitId":"ramapriyan912001"},"content":"    public void getGroups_returnsGroupList() {","lastModifiedDate":"2021-10-31"},{"lineNumber":106,"author":{"gitId":"ramapriyan912001"},"content":"        assertEquals(addressBook.getGroups(), new UniqueGroupList());","lastModifiedDate":"2021-10-31"},{"lineNumber":107,"author":{"gitId":"ramapriyan912001"},"content":"        addressBook.addGroup(DUBAI);","lastModifiedDate":"2021-10-31"},{"lineNumber":108,"author":{"gitId":"ramapriyan912001"},"content":"        UniqueGroupList groupList \u003d new UniqueGroupList();","lastModifiedDate":"2021-10-31"},{"lineNumber":109,"author":{"gitId":"ramapriyan912001"},"content":"        groupList.add(DUBAI);","lastModifiedDate":"2021-10-31"},{"lineNumber":110,"author":{"gitId":"ramapriyan912001"},"content":"        assertEquals(addressBook.getGroups(), groupList);","lastModifiedDate":"2021-10-31"},{"lineNumber":111,"author":{"gitId":"ramapriyan912001"},"content":"    }","lastModifiedDate":"2021-10-31"},{"lineNumber":112,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":113,"author":{"gitId":"ramapriyan912001"},"content":"    @Test","lastModifiedDate":"2021-10-31"},{"lineNumber":114,"author":{"gitId":"ramapriyan912001"},"content":"    public void equals() {","lastModifiedDate":"2021-10-31"},{"lineNumber":115,"author":{"gitId":"ramapriyan912001"},"content":"        assertEquals(addressBook, addressBook);","lastModifiedDate":"2021-10-31"},{"lineNumber":116,"author":{"gitId":"ramapriyan912001"},"content":"        assertNotEquals(addressBook, new ModelManager());","lastModifiedDate":"2021-10-31"},{"lineNumber":117,"author":{"gitId":"ramapriyan912001"},"content":"    }","lastModifiedDate":"2021-10-31"},{"lineNumber":118,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":119,"author":{"gitId":"ramapriyan912001"},"content":"    @Test","lastModifiedDate":"2021-10-31"},{"lineNumber":120,"author":{"gitId":"ramapriyan912001"},"content":"    public void hashcode() {","lastModifiedDate":"2021-10-31"},{"lineNumber":121,"author":{"gitId":"ramapriyan912001"},"content":"        assertEquals(addressBook.hashCode(), addressBook.hashCode());","lastModifiedDate":"2021-10-31"},{"lineNumber":122,"author":{"gitId":"ramapriyan912001"},"content":"        int oldCode \u003d addressBook.hashCode();","lastModifiedDate":"2021-10-31"},{"lineNumber":123,"author":{"gitId":"ramapriyan912001"},"content":"        addressBook.addPerson(ALICE);","lastModifiedDate":"2021-10-31"},{"lineNumber":124,"author":{"gitId":"ramapriyan912001"},"content":"        int newCode \u003d addressBook.hashCode();","lastModifiedDate":"2021-10-31"},{"lineNumber":125,"author":{"gitId":"ramapriyan912001"},"content":"        assertEquals(addressBook.hashCode(), addressBook.hashCode());","lastModifiedDate":"2021-10-31"},{"lineNumber":126,"author":{"gitId":"ramapriyan912001"},"content":"        assertNotEquals(oldCode, newCode);","lastModifiedDate":"2021-10-31"},{"lineNumber":127,"author":{"gitId":"ramapriyan912001"},"content":"    }","lastModifiedDate":"2021-10-31"},{"lineNumber":128,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-24"},{"lineNumber":130,"author":{"gitId":"-"},"content":"     * A stub ReadOnlyAddressBook whose persons list can violate interface constraints.","lastModifiedDate":"2018-03-29"},{"lineNumber":131,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-24"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    private static class AddressBookStub implements ReadOnlyAddressBook {","lastModifiedDate":"2016-12-24"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        private final ObservableList\u003cPerson\u003e persons \u003d FXCollections.observableArrayList();","lastModifiedDate":"2018-01-10"},{"lineNumber":134,"author":{"gitId":"Jingwencloud"},"content":"        private final ObservableList\u003cExpense\u003e expenses \u003d FXCollections.observableArrayList();","lastModifiedDate":"2021-10-07"},{"lineNumber":135,"author":{"gitId":"ramapriyan912001"},"content":"        private final ObservableList\u003cPayment\u003e payments \u003d FXCollections.observableArrayList();","lastModifiedDate":"2021-10-17"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        AddressBookStub(Collection\u003cPerson\u003e persons) {","lastModifiedDate":"2018-03-29"},{"lineNumber":138,"author":{"gitId":"-"},"content":"            this.persons.setAll(persons);","lastModifiedDate":"2016-12-24"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-24"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2016-12-24"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        public ObservableList\u003cPerson\u003e getPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":143,"author":{"gitId":"-"},"content":"            return persons;","lastModifiedDate":"2016-12-24"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-24"},{"lineNumber":145,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-09-26"},{"lineNumber":146,"author":{"gitId":"Jingwencloud"},"content":"        @Override","lastModifiedDate":"2021-10-07"},{"lineNumber":147,"author":{"gitId":"Jingwencloud"},"content":"        public ObservableList\u003cExpense\u003e getExpenseList() {","lastModifiedDate":"2021-10-07"},{"lineNumber":148,"author":{"gitId":"Jingwencloud"},"content":"            return expenses;","lastModifiedDate":"2021-10-07"},{"lineNumber":149,"author":{"gitId":"Jingwencloud"},"content":"        }","lastModifiedDate":"2021-10-07"},{"lineNumber":150,"author":{"gitId":"Jingwencloud"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":151,"author":{"gitId":"ramapriyan912001"},"content":"        @Override","lastModifiedDate":"2021-10-25"},{"lineNumber":152,"author":{"gitId":"ramapriyan912001"},"content":"        public Optional\u003cGroup\u003e getGroupFromExpenseList() throws CommandException {","lastModifiedDate":"2021-10-25"},{"lineNumber":153,"author":{"gitId":"ramapriyan912001"},"content":"            return Optional.empty();","lastModifiedDate":"2021-10-25"},{"lineNumber":154,"author":{"gitId":"ramapriyan912001"},"content":"        }","lastModifiedDate":"2021-10-25"},{"lineNumber":155,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":156,"author":{"gitId":"ramapriyan912001"},"content":"        @Override","lastModifiedDate":"2021-10-17"},{"lineNumber":157,"author":{"gitId":"ramapriyan912001"},"content":"        public ObservableList\u003cPayment\u003e getPaymentList() {","lastModifiedDate":"2021-10-17"},{"lineNumber":158,"author":{"gitId":"ramapriyan912001"},"content":"            return payments;","lastModifiedDate":"2021-10-17"},{"lineNumber":159,"author":{"gitId":"ramapriyan912001"},"content":"        }","lastModifiedDate":"2021-10-17"},{"lineNumber":160,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":161,"author":{"gitId":"ramapriyan912001"},"content":"        @Override","lastModifiedDate":"2021-09-26"},{"lineNumber":162,"author":{"gitId":"ramapriyan912001"},"content":"        public ObservableList\u003cGroup\u003e getGroupList() {","lastModifiedDate":"2021-09-26"},{"lineNumber":163,"author":{"gitId":"ramapriyan912001"},"content":"            return null;","lastModifiedDate":"2021-09-26"},{"lineNumber":164,"author":{"gitId":"ramapriyan912001"},"content":"        }","lastModifiedDate":"2021-09-26"},{"lineNumber":165,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-10-04"},{"lineNumber":166,"author":{"gitId":"ramapriyan912001"},"content":"        @Override","lastModifiedDate":"2021-10-04"},{"lineNumber":167,"author":{"gitId":"ramapriyan912001"},"content":"        public Group getGroupByName(GroupName groupName) {","lastModifiedDate":"2021-10-04"},{"lineNumber":168,"author":{"gitId":"ramapriyan912001"},"content":"            return null;","lastModifiedDate":"2021-10-04"},{"lineNumber":169,"author":{"gitId":"ramapriyan912001"},"content":"        }","lastModifiedDate":"2021-10-04"},{"lineNumber":170,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":171,"author":{"gitId":"ramapriyan912001"},"content":"        @Override","lastModifiedDate":"2021-10-21"},{"lineNumber":172,"author":{"gitId":"ramapriyan912001"},"content":"        public void setPayments(List\u003cPayment\u003e payments) {","lastModifiedDate":"2021-10-21"},{"lineNumber":173,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":174,"author":{"gitId":"ramapriyan912001"},"content":"        }","lastModifiedDate":"2021-10-21"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":177,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-24"}],"authorContributionMap":{"Jingwencloud":7,"marcuspeh":2,"ramapriyan912001":77,"-":91}},{"path":"src/test/java/seedu/awe/model/ModelManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"ramapriyan912001"},"content":"package seedu.awe.model;","lastModifiedDate":"2021-10-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"ramapriyan912001"},"content":"import static seedu.awe.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2021-10-05"},{"lineNumber":7,"author":{"gitId":"ramapriyan912001"},"content":"import static seedu.awe.testutil.Assert.assertThrows;","lastModifiedDate":"2021-10-05"},{"lineNumber":8,"author":{"gitId":"ramapriyan912001"},"content":"import static seedu.awe.testutil.TypicalGroups.BUDAPEST_WITH_EXPENSES;","lastModifiedDate":"2021-10-31"},{"lineNumber":9,"author":{"gitId":"ramapriyan912001"},"content":"import static seedu.awe.testutil.TypicalGroups.DUBAI;","lastModifiedDate":"2021-10-31"},{"lineNumber":10,"author":{"gitId":"ramapriyan912001"},"content":"import static seedu.awe.testutil.TypicalGroups.INDIA;","lastModifiedDate":"2021-10-31"},{"lineNumber":11,"author":{"gitId":"ramapriyan912001"},"content":"import static seedu.awe.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2021-10-05"},{"lineNumber":12,"author":{"gitId":"ramapriyan912001"},"content":"import static seedu.awe.testutil.TypicalPersons.BENSON;","lastModifiedDate":"2021-10-05"},{"lineNumber":13,"author":{"gitId":"ramapriyan912001"},"content":"import static seedu.awe.testutil.TypicalPersons.FIONA;","lastModifiedDate":"2021-10-31"},{"lineNumber":14,"author":{"gitId":"ramapriyan912001"},"content":"import static seedu.awe.testutil.TypicalPersons.IDA;","lastModifiedDate":"2021-10-31"},{"lineNumber":15,"author":{"gitId":"ramapriyan912001"},"content":"import static seedu.awe.testutil.TypicalPersons.NONEXISTENTPERSON;","lastModifiedDate":"2021-10-31"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-08-09"},{"lineNumber":19,"author":{"gitId":"ramapriyan912001"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-31"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-31"},{"lineNumber":21,"author":{"gitId":"ramapriyan912001"},"content":"import java.util.HashMap;","lastModifiedDate":"2021-10-31"},{"lineNumber":22,"author":{"gitId":"ramapriyan912001"},"content":"import java.util.List;","lastModifiedDate":"2021-10-31"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":26,"author":{"gitId":"ramapriyan912001"},"content":"import seedu.awe.commons.core.GuiSettings;","lastModifiedDate":"2021-10-05"},{"lineNumber":27,"author":{"gitId":"ramapriyan912001"},"content":"import seedu.awe.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-10-31"},{"lineNumber":28,"author":{"gitId":"ramapriyan912001"},"content":"import seedu.awe.model.expense.Cost;","lastModifiedDate":"2021-10-31"},{"lineNumber":29,"author":{"gitId":"ramapriyan912001"},"content":"import seedu.awe.model.expense.Description;","lastModifiedDate":"2021-10-31"},{"lineNumber":30,"author":{"gitId":"ramapriyan912001"},"content":"import seedu.awe.model.expense.Expense;","lastModifiedDate":"2021-10-31"},{"lineNumber":31,"author":{"gitId":"ramapriyan912001"},"content":"import seedu.awe.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2021-10-05"},{"lineNumber":32,"author":{"gitId":"ramapriyan912001"},"content":"import seedu.awe.model.person.Person;","lastModifiedDate":"2021-10-31"},{"lineNumber":33,"author":{"gitId":"ramapriyan912001"},"content":"import seedu.awe.model.transactionsummary.TransactionSummary;","lastModifiedDate":"2021-10-31"},{"lineNumber":34,"author":{"gitId":"ramapriyan912001"},"content":"import seedu.awe.testutil.AddressBookBuilder;","lastModifiedDate":"2021-10-05"},{"lineNumber":35,"author":{"gitId":"ramapriyan912001"},"content":"import seedu.awe.testutil.ModelBuilder;","lastModifiedDate":"2021-10-31"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":37,"author":{"gitId":"-"},"content":"public class ModelManagerTest {","lastModifiedDate":"2017-05-31"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":39,"author":{"gitId":"ramapriyan912001"},"content":"    private ModelManager emptyModelManager \u003d (ModelManager) new ModelManager();","lastModifiedDate":"2021-10-31"},{"lineNumber":40,"author":{"gitId":"ramapriyan912001"},"content":"    private ModelManager modelManager \u003d (ModelManager) new ModelBuilder().build();","lastModifiedDate":"2021-10-31"},{"lineNumber":41,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":42,"author":{"gitId":"ramapriyan912001"},"content":"    public void resetModelManager() {","lastModifiedDate":"2021-10-31"},{"lineNumber":43,"author":{"gitId":"ramapriyan912001"},"content":"        modelManager \u003d (ModelManager) new ModelBuilder().build();","lastModifiedDate":"2021-10-31"},{"lineNumber":44,"author":{"gitId":"ramapriyan912001"},"content":"    }","lastModifiedDate":"2021-10-31"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public void constructor() {","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"ramapriyan912001"},"content":"        resetModelManager();","lastModifiedDate":"2021-10-31"},{"lineNumber":49,"author":{"gitId":"ramapriyan912001"},"content":"        assertEquals(new UserPrefs(), emptyModelManager.getUserPrefs());","lastModifiedDate":"2021-10-31"},{"lineNumber":50,"author":{"gitId":"ramapriyan912001"},"content":"        assertEquals(new GuiSettings(), emptyModelManager.getGuiSettings());","lastModifiedDate":"2021-10-31"},{"lineNumber":51,"author":{"gitId":"ramapriyan912001"},"content":"        assertEquals(new AddressBook(), new AddressBook(emptyModelManager.getAddressBook()));","lastModifiedDate":"2021-10-31"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public void setUserPrefs_nullUserPrefs_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"ramapriyan912001"},"content":"        resetModelManager();","lastModifiedDate":"2021-10-31"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setUserPrefs(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public void setUserPrefs_validUserPrefs_copiesUserPrefs() {","lastModifiedDate":"2018-12-06"},{"lineNumber":62,"author":{"gitId":"ramapriyan912001"},"content":"        resetModelManager();","lastModifiedDate":"2021-10-31"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":64,"author":{"gitId":"ramapriyan912001"},"content":"        userPrefs.setAddressBookFilePath(Paths.get(\"awe/book/file/path\"));","lastModifiedDate":"2021-10-05"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(new GuiSettings(1, 2, 3, 4));","lastModifiedDate":"2018-11-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        modelManager.setUserPrefs(userPrefs);","lastModifiedDate":"2018-11-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        assertEquals(userPrefs, modelManager.getUserPrefs());","lastModifiedDate":"2018-11-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        // Modifying userPrefs should not modify modelManager\u0027s userPrefs","lastModifiedDate":"2018-12-06"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        UserPrefs oldUserPrefs \u003d new UserPrefs(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":71,"author":{"gitId":"ramapriyan912001"},"content":"        userPrefs.setAddressBookFilePath(Paths.get(\"new/awe/book/file/path\"));","lastModifiedDate":"2021-10-05"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertEquals(oldUserPrefs, modelManager.getUserPrefs());","lastModifiedDate":"2018-12-06"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public void setGuiSettings_nullGuiSettings_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":77,"author":{"gitId":"ramapriyan912001"},"content":"        resetModelManager();","lastModifiedDate":"2021-10-31"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setGuiSettings(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public void setGuiSettings_validGuiSettings_setsGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":83,"author":{"gitId":"ramapriyan912001"},"content":"        resetModelManager();","lastModifiedDate":"2021-10-31"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        GuiSettings guiSettings \u003d new GuiSettings(1, 2, 3, 4);","lastModifiedDate":"2018-11-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        modelManager.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        assertEquals(guiSettings, modelManager.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath_nullPath_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":91,"author":{"gitId":"ramapriyan912001"},"content":"        resetModelManager();","lastModifiedDate":"2021-10-31"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setAddressBookFilePath(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath_validPath_setsAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":97,"author":{"gitId":"ramapriyan912001"},"content":"        resetModelManager();","lastModifiedDate":"2021-10-31"},{"lineNumber":98,"author":{"gitId":"ramapriyan912001"},"content":"        Path path \u003d Paths.get(\"awe/book/file/path\");","lastModifiedDate":"2021-10-05"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        modelManager.setAddressBookFilePath(path);","lastModifiedDate":"2018-11-27"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        assertEquals(path, modelManager.getAddressBookFilePath());","lastModifiedDate":"2018-11-27"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    public void hasPerson_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-06"},{"lineNumber":105,"author":{"gitId":"ramapriyan912001"},"content":"        resetModelManager();","lastModifiedDate":"2021-10-31"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.hasPerson(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":109,"author":{"gitId":"ramapriyan912001"},"content":"    @Test","lastModifiedDate":"2021-10-31"},{"lineNumber":110,"author":{"gitId":"ramapriyan912001"},"content":"    public void hasGroup_nullGroup_throwsNullPointerException() {","lastModifiedDate":"2021-10-31"},{"lineNumber":111,"author":{"gitId":"ramapriyan912001"},"content":"        resetModelManager();","lastModifiedDate":"2021-10-31"},{"lineNumber":112,"author":{"gitId":"ramapriyan912001"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.hasGroup(null));","lastModifiedDate":"2021-10-31"},{"lineNumber":113,"author":{"gitId":"ramapriyan912001"},"content":"    }","lastModifiedDate":"2021-10-31"},{"lineNumber":114,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":115,"author":{"gitId":"ramapriyan912001"},"content":"    @Test","lastModifiedDate":"2021-10-31"},{"lineNumber":116,"author":{"gitId":"ramapriyan912001"},"content":"    public void hasGroup_validGroupInAddressBook_returnsTrue() {","lastModifiedDate":"2021-10-31"},{"lineNumber":117,"author":{"gitId":"ramapriyan912001"},"content":"        resetModelManager();","lastModifiedDate":"2021-10-31"},{"lineNumber":118,"author":{"gitId":"ramapriyan912001"},"content":"        assertTrue(modelManager.hasGroup(INDIA));","lastModifiedDate":"2021-10-31"},{"lineNumber":119,"author":{"gitId":"ramapriyan912001"},"content":"    }","lastModifiedDate":"2021-10-31"},{"lineNumber":120,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":121,"author":{"gitId":"ramapriyan912001"},"content":"    @Test","lastModifiedDate":"2021-10-31"},{"lineNumber":122,"author":{"gitId":"ramapriyan912001"},"content":"    public void hasGroup_validGroupInAddressBook_returnsFalse() {","lastModifiedDate":"2021-10-31"},{"lineNumber":123,"author":{"gitId":"ramapriyan912001"},"content":"        resetModelManager();","lastModifiedDate":"2021-10-31"},{"lineNumber":124,"author":{"gitId":"ramapriyan912001"},"content":"        assertFalse(modelManager.hasGroup(BUDAPEST_WITH_EXPENSES));","lastModifiedDate":"2021-10-31"},{"lineNumber":125,"author":{"gitId":"ramapriyan912001"},"content":"    }","lastModifiedDate":"2021-10-31"},{"lineNumber":126,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    public void hasPerson_personNotInAddressBook_returnsFalse() {","lastModifiedDate":"2018-08-06"},{"lineNumber":129,"author":{"gitId":"ramapriyan912001"},"content":"        resetModelManager();","lastModifiedDate":"2021-10-31"},{"lineNumber":130,"author":{"gitId":"ramapriyan912001"},"content":"        assertFalse(modelManager.hasPerson(NONEXISTENTPERSON));","lastModifiedDate":"2021-10-31"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    public void hasPerson_personInAddressBook_returnsTrue() {","lastModifiedDate":"2018-08-07"},{"lineNumber":135,"author":{"gitId":"ramapriyan912001"},"content":"        resetModelManager();","lastModifiedDate":"2021-10-31"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        assertTrue(modelManager.hasPerson(ALICE));","lastModifiedDate":"2018-08-06"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    public void getFilteredPersonList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":141,"author":{"gitId":"ramapriyan912001"},"content":"        resetModelManager();","lastModifiedDate":"2021-10-31"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e modelManager.getFilteredPersonList().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":145,"author":{"gitId":"ramapriyan912001"},"content":"    @Test","lastModifiedDate":"2021-10-31"},{"lineNumber":146,"author":{"gitId":"ramapriyan912001"},"content":"    public void getFilteredGroupList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2021-10-31"},{"lineNumber":147,"author":{"gitId":"ramapriyan912001"},"content":"        resetModelManager();","lastModifiedDate":"2021-10-31"},{"lineNumber":148,"author":{"gitId":"ramapriyan912001"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e modelManager.getFilteredGroupList().remove(0));","lastModifiedDate":"2021-10-31"},{"lineNumber":149,"author":{"gitId":"ramapriyan912001"},"content":"    }","lastModifiedDate":"2021-10-31"},{"lineNumber":150,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":151,"author":{"gitId":"ramapriyan912001"},"content":"    @Test","lastModifiedDate":"2021-10-31"},{"lineNumber":152,"author":{"gitId":"ramapriyan912001"},"content":"    public void getFilteredExpensesList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2021-10-31"},{"lineNumber":153,"author":{"gitId":"ramapriyan912001"},"content":"        resetModelManager();","lastModifiedDate":"2021-10-31"},{"lineNumber":154,"author":{"gitId":"ramapriyan912001"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e modelManager.getExpenses().remove(0));","lastModifiedDate":"2021-10-31"},{"lineNumber":155,"author":{"gitId":"ramapriyan912001"},"content":"    }","lastModifiedDate":"2021-10-31"},{"lineNumber":156,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":157,"author":{"gitId":"ramapriyan912001"},"content":"    @Test","lastModifiedDate":"2021-10-31"},{"lineNumber":158,"author":{"gitId":"ramapriyan912001"},"content":"    public void addExpense_success() {","lastModifiedDate":"2021-10-31"},{"lineNumber":159,"author":{"gitId":"ramapriyan912001"},"content":"        resetModelManager();","lastModifiedDate":"2021-10-31"},{"lineNumber":160,"author":{"gitId":"ramapriyan912001"},"content":"        Expense expense \u003d new Expense(FIONA, new Cost(20.00), new Description(\"test\"), List.of(IDA));","lastModifiedDate":"2021-10-31"},{"lineNumber":161,"author":{"gitId":"ramapriyan912001"},"content":"        modelManager.setExpenses(DUBAI);","lastModifiedDate":"2021-10-31"},{"lineNumber":162,"author":{"gitId":"ramapriyan912001"},"content":"        modelManager.addExpense(expense, DUBAI);","lastModifiedDate":"2021-10-31"},{"lineNumber":163,"author":{"gitId":"ramapriyan912001"},"content":"        assertEquals(modelManager.getExpense(0), expense);","lastModifiedDate":"2021-10-31"},{"lineNumber":164,"author":{"gitId":"ramapriyan912001"},"content":"    }","lastModifiedDate":"2021-10-31"},{"lineNumber":165,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":166,"author":{"gitId":"ramapriyan912001"},"content":"    @Test","lastModifiedDate":"2021-10-31"},{"lineNumber":167,"author":{"gitId":"ramapriyan912001"},"content":"    public void deleteExpense_success() {","lastModifiedDate":"2021-10-31"},{"lineNumber":168,"author":{"gitId":"ramapriyan912001"},"content":"        resetModelManager();","lastModifiedDate":"2021-10-31"},{"lineNumber":169,"author":{"gitId":"ramapriyan912001"},"content":"        Expense expense \u003d new Expense(FIONA, new Cost(20.00), new Description(\"test\"), List.of(IDA));","lastModifiedDate":"2021-10-31"},{"lineNumber":170,"author":{"gitId":"ramapriyan912001"},"content":"        modelManager.setExpenses(DUBAI);","lastModifiedDate":"2021-10-31"},{"lineNumber":171,"author":{"gitId":"ramapriyan912001"},"content":"        modelManager.addExpense(expense, DUBAI);","lastModifiedDate":"2021-10-31"},{"lineNumber":172,"author":{"gitId":"ramapriyan912001"},"content":"        modelManager.deleteExpense(expense, DUBAI);","lastModifiedDate":"2021-10-31"},{"lineNumber":173,"author":{"gitId":"ramapriyan912001"},"content":"        assertTrue(modelManager.getExpenses().isEmpty());","lastModifiedDate":"2021-10-31"},{"lineNumber":174,"author":{"gitId":"ramapriyan912001"},"content":"    }","lastModifiedDate":"2021-10-31"},{"lineNumber":175,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":176,"author":{"gitId":"ramapriyan912001"},"content":"    @Test","lastModifiedDate":"2021-10-31"},{"lineNumber":177,"author":{"gitId":"ramapriyan912001"},"content":"    public void isCurrentExpenseList_returnsFalse() {","lastModifiedDate":"2021-10-31"},{"lineNumber":178,"author":{"gitId":"ramapriyan912001"},"content":"        resetModelManager();","lastModifiedDate":"2021-10-31"},{"lineNumber":179,"author":{"gitId":"ramapriyan912001"},"content":"        modelManager.setExpenses(DUBAI);","lastModifiedDate":"2021-10-31"},{"lineNumber":180,"author":{"gitId":"ramapriyan912001"},"content":"        assertFalse(modelManager.isCurrentExpenseList(INDIA));","lastModifiedDate":"2021-10-31"},{"lineNumber":181,"author":{"gitId":"ramapriyan912001"},"content":"    }","lastModifiedDate":"2021-10-31"},{"lineNumber":182,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":183,"author":{"gitId":"ramapriyan912001"},"content":"    @Test","lastModifiedDate":"2021-10-31"},{"lineNumber":184,"author":{"gitId":"ramapriyan912001"},"content":"    public void isCurrentExpenseList_returnsTrue() {","lastModifiedDate":"2021-10-31"},{"lineNumber":185,"author":{"gitId":"ramapriyan912001"},"content":"        resetModelManager();","lastModifiedDate":"2021-10-31"},{"lineNumber":186,"author":{"gitId":"ramapriyan912001"},"content":"        modelManager.setExpenses(DUBAI);","lastModifiedDate":"2021-10-31"},{"lineNumber":187,"author":{"gitId":"ramapriyan912001"},"content":"        assertTrue(modelManager.isCurrentExpenseList(DUBAI));","lastModifiedDate":"2021-10-31"},{"lineNumber":188,"author":{"gitId":"ramapriyan912001"},"content":"    }","lastModifiedDate":"2021-10-31"},{"lineNumber":189,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":190,"author":{"gitId":"ramapriyan912001"},"content":"    @Test","lastModifiedDate":"2021-10-31"},{"lineNumber":191,"author":{"gitId":"ramapriyan912001"},"content":"    public void getActiveGroupFromAddressBook_throwsCommandException() {","lastModifiedDate":"2021-10-31"},{"lineNumber":192,"author":{"gitId":"ramapriyan912001"},"content":"        resetModelManager();","lastModifiedDate":"2021-10-31"},{"lineNumber":193,"author":{"gitId":"ramapriyan912001"},"content":"        assertThrows(CommandException.class, () -\u003e modelManager.getActiveGroupFromAddressBook());","lastModifiedDate":"2021-10-31"},{"lineNumber":194,"author":{"gitId":"ramapriyan912001"},"content":"    }","lastModifiedDate":"2021-10-31"},{"lineNumber":195,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":196,"author":{"gitId":"ramapriyan912001"},"content":"    @Test","lastModifiedDate":"2021-10-31"},{"lineNumber":197,"author":{"gitId":"ramapriyan912001"},"content":"    public void getActiveGroupFromAddressBook_returnsGroup() throws CommandException {","lastModifiedDate":"2021-10-31"},{"lineNumber":198,"author":{"gitId":"ramapriyan912001"},"content":"        resetModelManager();","lastModifiedDate":"2021-10-31"},{"lineNumber":199,"author":{"gitId":"ramapriyan912001"},"content":"        modelManager.setExpenses(DUBAI);","lastModifiedDate":"2021-10-31"},{"lineNumber":200,"author":{"gitId":"ramapriyan912001"},"content":"        assertEquals(modelManager.getActiveGroupFromAddressBook(), DUBAI);","lastModifiedDate":"2021-10-31"},{"lineNumber":201,"author":{"gitId":"ramapriyan912001"},"content":"    }","lastModifiedDate":"2021-10-31"},{"lineNumber":202,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":203,"author":{"gitId":"ramapriyan912001"},"content":"    @Test","lastModifiedDate":"2021-10-31"},{"lineNumber":204,"author":{"gitId":"ramapriyan912001"},"content":"    public void addGroup_validGroup_success() {","lastModifiedDate":"2021-10-31"},{"lineNumber":205,"author":{"gitId":"ramapriyan912001"},"content":"        resetModelManager();","lastModifiedDate":"2021-10-31"},{"lineNumber":206,"author":{"gitId":"ramapriyan912001"},"content":"        modelManager.addGroup(BUDAPEST_WITH_EXPENSES);","lastModifiedDate":"2021-10-31"},{"lineNumber":207,"author":{"gitId":"ramapriyan912001"},"content":"        assertTrue(modelManager.hasGroup(BUDAPEST_WITH_EXPENSES));","lastModifiedDate":"2021-10-31"},{"lineNumber":208,"author":{"gitId":"ramapriyan912001"},"content":"    }","lastModifiedDate":"2021-10-31"},{"lineNumber":209,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":210,"author":{"gitId":"ramapriyan912001"},"content":"    @Test","lastModifiedDate":"2021-10-31"},{"lineNumber":211,"author":{"gitId":"ramapriyan912001"},"content":"    public void setTransactionSummary_nullMap_throwsNullPointerException() {","lastModifiedDate":"2021-10-31"},{"lineNumber":212,"author":{"gitId":"ramapriyan912001"},"content":"        resetModelManager();","lastModifiedDate":"2021-10-31"},{"lineNumber":213,"author":{"gitId":"ramapriyan912001"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setTransactionSummary(null));","lastModifiedDate":"2021-10-31"},{"lineNumber":214,"author":{"gitId":"ramapriyan912001"},"content":"    }","lastModifiedDate":"2021-10-31"},{"lineNumber":215,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":216,"author":{"gitId":"ramapriyan912001"},"content":"    @Test","lastModifiedDate":"2021-10-31"},{"lineNumber":217,"author":{"gitId":"ramapriyan912001"},"content":"    public void setTransactionSummary_validMap_success() {","lastModifiedDate":"2021-10-31"},{"lineNumber":218,"author":{"gitId":"ramapriyan912001"},"content":"        resetModelManager();","lastModifiedDate":"2021-10-31"},{"lineNumber":219,"author":{"gitId":"ramapriyan912001"},"content":"        HashMap\u003cPerson, Cost\u003e summary \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2021-10-31"},{"lineNumber":220,"author":{"gitId":"ramapriyan912001"},"content":"        TransactionSummary transactionSummary \u003d new TransactionSummary(ALICE, new Cost(20.0));","lastModifiedDate":"2021-10-31"},{"lineNumber":221,"author":{"gitId":"ramapriyan912001"},"content":"        summary.put(ALICE, new Cost(20.0));","lastModifiedDate":"2021-10-31"},{"lineNumber":222,"author":{"gitId":"ramapriyan912001"},"content":"        modelManager.setTransactionSummary(summary);","lastModifiedDate":"2021-10-31"},{"lineNumber":223,"author":{"gitId":"ramapriyan912001"},"content":"        List\u003cTransactionSummary\u003e transactionSummaryList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-31"},{"lineNumber":224,"author":{"gitId":"ramapriyan912001"},"content":"        transactionSummaryList.add(transactionSummary);","lastModifiedDate":"2021-10-31"},{"lineNumber":225,"author":{"gitId":"ramapriyan912001"},"content":"        assertEquals(modelManager.getTransactionSummary(), transactionSummaryList);","lastModifiedDate":"2021-10-31"},{"lineNumber":226,"author":{"gitId":"ramapriyan912001"},"content":"    }","lastModifiedDate":"2021-10-31"},{"lineNumber":227,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":228,"author":{"gitId":"ramapriyan912001"},"content":"    @Test","lastModifiedDate":"2021-10-31"},{"lineNumber":229,"author":{"gitId":"ramapriyan912001"},"content":"    public void getFilteredPaymentsList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2021-10-31"},{"lineNumber":230,"author":{"gitId":"ramapriyan912001"},"content":"        resetModelManager();","lastModifiedDate":"2021-10-31"},{"lineNumber":231,"author":{"gitId":"ramapriyan912001"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e modelManager.getPayments().remove(0));","lastModifiedDate":"2021-10-31"},{"lineNumber":232,"author":{"gitId":"ramapriyan912001"},"content":"    }","lastModifiedDate":"2021-10-31"},{"lineNumber":233,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":234,"author":{"gitId":"ramapriyan912001"},"content":"    @Test","lastModifiedDate":"2021-10-31"},{"lineNumber":235,"author":{"gitId":"ramapriyan912001"},"content":"    public void getFilteredTransactionSummaryList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2021-10-31"},{"lineNumber":236,"author":{"gitId":"ramapriyan912001"},"content":"        resetModelManager();","lastModifiedDate":"2021-10-31"},{"lineNumber":237,"author":{"gitId":"ramapriyan912001"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e modelManager.getTransactionSummary().remove(0));","lastModifiedDate":"2021-10-31"},{"lineNumber":238,"author":{"gitId":"ramapriyan912001"},"content":"    }","lastModifiedDate":"2021-10-31"},{"lineNumber":239,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":240,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-31"},{"lineNumber":241,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":242,"author":{"gitId":"-"},"content":"        AddressBook addressBook \u003d new AddressBookBuilder().withPerson(ALICE).withPerson(BENSON).build();","lastModifiedDate":"2017-07-19"},{"lineNumber":243,"author":{"gitId":"-"},"content":"        AddressBook differentAddressBook \u003d new AddressBook();","lastModifiedDate":"2017-05-31"},{"lineNumber":244,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2017-05-31"},{"lineNumber":245,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":246,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-31"},{"lineNumber":247,"author":{"gitId":"-"},"content":"        modelManager \u003d new ModelManager(addressBook, userPrefs);","lastModifiedDate":"2018-08-06"},{"lineNumber":248,"author":{"gitId":"-"},"content":"        ModelManager modelManagerCopy \u003d new ModelManager(addressBook, userPrefs);","lastModifiedDate":"2017-05-31"},{"lineNumber":249,"author":{"gitId":"-"},"content":"        assertTrue(modelManager.equals(modelManagerCopy));","lastModifiedDate":"2017-05-31"},{"lineNumber":250,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":251,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-31"},{"lineNumber":252,"author":{"gitId":"-"},"content":"        assertTrue(modelManager.equals(modelManager));","lastModifiedDate":"2017-05-31"},{"lineNumber":253,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":254,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":255,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(null));","lastModifiedDate":"2017-05-31"},{"lineNumber":256,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":257,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":258,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(5));","lastModifiedDate":"2017-05-31"},{"lineNumber":259,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":260,"author":{"gitId":"-"},"content":"        // different addressBook -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":261,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(new ModelManager(differentAddressBook, userPrefs)));","lastModifiedDate":"2017-05-31"},{"lineNumber":262,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":263,"author":{"gitId":"-"},"content":"        // different filteredList -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":264,"author":{"gitId":"-"},"content":"        String[] keywords \u003d ALICE.getName().fullName.split(\"\\\\s+\");","lastModifiedDate":"2017-07-19"},{"lineNumber":265,"author":{"gitId":"-"},"content":"        modelManager.updateFilteredPersonList(new NameContainsKeywordsPredicate(Arrays.asList(keywords)));","lastModifiedDate":"2017-06-12"},{"lineNumber":266,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(new ModelManager(addressBook, userPrefs)));","lastModifiedDate":"2017-05-31"},{"lineNumber":267,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":268,"author":{"gitId":"-"},"content":"        // resets modelManager to initial state for upcoming tests","lastModifiedDate":"2017-08-05"},{"lineNumber":269,"author":{"gitId":"-"},"content":"        modelManager.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2017-08-05"},{"lineNumber":270,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":271,"author":{"gitId":"-"},"content":"        // different userPrefs -\u003e returns false","lastModifiedDate":"2018-11-27"},{"lineNumber":272,"author":{"gitId":"-"},"content":"        UserPrefs differentUserPrefs \u003d new UserPrefs();","lastModifiedDate":"2017-05-31"},{"lineNumber":273,"author":{"gitId":"-"},"content":"        differentUserPrefs.setAddressBookFilePath(Paths.get(\"differentFilePath\"));","lastModifiedDate":"2018-08-09"},{"lineNumber":274,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.equals(new ModelManager(addressBook, differentUserPrefs)));","lastModifiedDate":"2018-11-27"},{"lineNumber":275,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31"},{"lineNumber":276,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-31"}],"authorContributionMap":{"ramapriyan912001":161,"-":115}},{"path":"src/test/java/seedu/awe/model/UserPrefsTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"ramapriyan912001"},"content":"package seedu.awe.model;","lastModifiedDate":"2021-10-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":3,"author":{"gitId":"ramapriyan912001"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-31"},{"lineNumber":4,"author":{"gitId":"ramapriyan912001"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2021-10-31"},{"lineNumber":5,"author":{"gitId":"ramapriyan912001"},"content":"import static seedu.awe.testutil.Assert.assertThrows;","lastModifiedDate":"2021-10-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class UserPrefsTest {","lastModifiedDate":"2018-11-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":11,"author":{"gitId":"ramapriyan912001"},"content":"    private UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2021-10-31"},{"lineNumber":12,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":13,"author":{"gitId":"ramapriyan912001"},"content":"    public void resetUserPrefs() {","lastModifiedDate":"2021-10-31"},{"lineNumber":14,"author":{"gitId":"ramapriyan912001"},"content":"        userPrefs \u003d new UserPrefs();","lastModifiedDate":"2021-10-31"},{"lineNumber":15,"author":{"gitId":"ramapriyan912001"},"content":"    }","lastModifiedDate":"2021-10-31"},{"lineNumber":16,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public void setGuiSettings_nullGuiSettings_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":19,"author":{"gitId":"ramapriyan912001"},"content":"        resetUserPrefs();","lastModifiedDate":"2021-10-31"},{"lineNumber":20,"author":{"gitId":"ramapriyan912001"},"content":"        assertThrows(NullPointerException.class, () -\u003e userPrefs.setGuiSettings(null));","lastModifiedDate":"2021-10-31"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath_nullPath_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":25,"author":{"gitId":"ramapriyan912001"},"content":"        resetUserPrefs();","lastModifiedDate":"2021-10-31"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e userPrefs.setAddressBookFilePath(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":29,"author":{"gitId":"ramapriyan912001"},"content":"    @Test","lastModifiedDate":"2021-10-31"},{"lineNumber":30,"author":{"gitId":"ramapriyan912001"},"content":"    public void equals() {","lastModifiedDate":"2021-10-31"},{"lineNumber":31,"author":{"gitId":"ramapriyan912001"},"content":"        resetUserPrefs();","lastModifiedDate":"2021-10-31"},{"lineNumber":32,"author":{"gitId":"ramapriyan912001"},"content":"        assertEquals(userPrefs, userPrefs);","lastModifiedDate":"2021-10-31"},{"lineNumber":33,"author":{"gitId":"ramapriyan912001"},"content":"        assertNotEquals(userPrefs, new AddressBook());","lastModifiedDate":"2021-10-31"},{"lineNumber":34,"author":{"gitId":"ramapriyan912001"},"content":"    }","lastModifiedDate":"2021-10-31"},{"lineNumber":35,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":36,"author":{"gitId":"ramapriyan912001"},"content":"    @Test","lastModifiedDate":"2021-10-31"},{"lineNumber":37,"author":{"gitId":"ramapriyan912001"},"content":"    public void hashcode() {","lastModifiedDate":"2021-10-31"},{"lineNumber":38,"author":{"gitId":"ramapriyan912001"},"content":"        resetUserPrefs();","lastModifiedDate":"2021-10-31"},{"lineNumber":39,"author":{"gitId":"ramapriyan912001"},"content":"        assertEquals(userPrefs.hashCode(), new UserPrefs().hashCode());","lastModifiedDate":"2021-10-31"},{"lineNumber":40,"author":{"gitId":"ramapriyan912001"},"content":"    }","lastModifiedDate":"2021-10-31"},{"lineNumber":41,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-11-27"}],"authorContributionMap":{"ramapriyan912001":25,"-":16}},{"path":"src/test/java/seedu/awe/model/expense/DescriptionContainsKeywordsPredicateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Jingwencloud"},"content":"package seedu.awe.model.expense;","lastModifiedDate":"2021-10-15"},{"lineNumber":2,"author":{"gitId":"Jingwencloud"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":3,"author":{"gitId":"Jingwencloud"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-10-15"},{"lineNumber":4,"author":{"gitId":"Jingwencloud"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-15"},{"lineNumber":5,"author":{"gitId":"Jingwencloud"},"content":"import static seedu.awe.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2021-10-28"},{"lineNumber":6,"author":{"gitId":"Jingwencloud"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":7,"author":{"gitId":"Jingwencloud"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-10-15"},{"lineNumber":8,"author":{"gitId":"Jingwencloud"},"content":"import java.util.Collections;","lastModifiedDate":"2021-10-15"},{"lineNumber":9,"author":{"gitId":"Jingwencloud"},"content":"import java.util.List;","lastModifiedDate":"2021-10-15"},{"lineNumber":10,"author":{"gitId":"Jingwencloud"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":11,"author":{"gitId":"Jingwencloud"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-15"},{"lineNumber":12,"author":{"gitId":"Jingwencloud"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":13,"author":{"gitId":"Jingwencloud"},"content":"import seedu.awe.testutil.ExpenseBuilder;","lastModifiedDate":"2021-10-15"},{"lineNumber":14,"author":{"gitId":"Jingwencloud"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":15,"author":{"gitId":"Jingwencloud"},"content":"public class DescriptionContainsKeywordsPredicateTest {","lastModifiedDate":"2021-10-15"},{"lineNumber":16,"author":{"gitId":"Jingwencloud"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":17,"author":{"gitId":"Jingwencloud"},"content":"    @Test","lastModifiedDate":"2021-10-15"},{"lineNumber":18,"author":{"gitId":"Jingwencloud"},"content":"    public void equals() {","lastModifiedDate":"2021-10-15"},{"lineNumber":19,"author":{"gitId":"Jingwencloud"},"content":"        List\u003cString\u003e firstPredicateKeywordList \u003d Collections.singletonList(\"lunch\");","lastModifiedDate":"2021-10-15"},{"lineNumber":20,"author":{"gitId":"Jingwencloud"},"content":"        List\u003cString\u003e secondPredicateKeywordList \u003d Arrays.asList(\"lunch\", \"dinner\");","lastModifiedDate":"2021-10-15"},{"lineNumber":21,"author":{"gitId":"Jingwencloud"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":22,"author":{"gitId":"Jingwencloud"},"content":"        DescriptionContainsKeywordsPredicate firstPredicate \u003d new DescriptionContainsKeywordsPredicate(","lastModifiedDate":"2021-10-15"},{"lineNumber":23,"author":{"gitId":"Jingwencloud"},"content":"                firstPredicateKeywordList);","lastModifiedDate":"2021-10-15"},{"lineNumber":24,"author":{"gitId":"Jingwencloud"},"content":"        DescriptionContainsKeywordsPredicate secondPredicate \u003d new DescriptionContainsKeywordsPredicate(","lastModifiedDate":"2021-10-15"},{"lineNumber":25,"author":{"gitId":"Jingwencloud"},"content":"                secondPredicateKeywordList);","lastModifiedDate":"2021-10-15"},{"lineNumber":26,"author":{"gitId":"Jingwencloud"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":27,"author":{"gitId":"Jingwencloud"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2021-10-15"},{"lineNumber":28,"author":{"gitId":"Jingwencloud"},"content":"        assertTrue(firstPredicate.equals(firstPredicate));","lastModifiedDate":"2021-10-15"},{"lineNumber":29,"author":{"gitId":"Jingwencloud"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":30,"author":{"gitId":"Jingwencloud"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2021-10-15"},{"lineNumber":31,"author":{"gitId":"Jingwencloud"},"content":"        DescriptionContainsKeywordsPredicate firstPredicateCopy \u003d new DescriptionContainsKeywordsPredicate(","lastModifiedDate":"2021-10-15"},{"lineNumber":32,"author":{"gitId":"Jingwencloud"},"content":"                firstPredicateKeywordList);","lastModifiedDate":"2021-10-15"},{"lineNumber":33,"author":{"gitId":"Jingwencloud"},"content":"        assertTrue(firstPredicate.equals(firstPredicateCopy));","lastModifiedDate":"2021-10-15"},{"lineNumber":34,"author":{"gitId":"Jingwencloud"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":35,"author":{"gitId":"Jingwencloud"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2021-10-15"},{"lineNumber":36,"author":{"gitId":"Jingwencloud"},"content":"        assertFalse(firstPredicate.equals(1));","lastModifiedDate":"2021-10-15"},{"lineNumber":37,"author":{"gitId":"Jingwencloud"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":38,"author":{"gitId":"Jingwencloud"},"content":"        // null -\u003e returns false","lastModifiedDate":"2021-10-15"},{"lineNumber":39,"author":{"gitId":"Jingwencloud"},"content":"        assertFalse(firstPredicate.equals(null));","lastModifiedDate":"2021-10-15"},{"lineNumber":40,"author":{"gitId":"Jingwencloud"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":41,"author":{"gitId":"Jingwencloud"},"content":"        // different expense -\u003e returns false","lastModifiedDate":"2021-10-15"},{"lineNumber":42,"author":{"gitId":"Jingwencloud"},"content":"        assertFalse(firstPredicate.equals(secondPredicate));","lastModifiedDate":"2021-10-15"},{"lineNumber":43,"author":{"gitId":"Jingwencloud"},"content":"    }","lastModifiedDate":"2021-10-15"},{"lineNumber":44,"author":{"gitId":"Jingwencloud"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":45,"author":{"gitId":"Jingwencloud"},"content":"    @Test","lastModifiedDate":"2021-10-15"},{"lineNumber":46,"author":{"gitId":"Jingwencloud"},"content":"    public void test_descriptionContainsKeywords_returnsTrue() {","lastModifiedDate":"2021-10-15"},{"lineNumber":47,"author":{"gitId":"Jingwencloud"},"content":"        // One keyword","lastModifiedDate":"2021-10-15"},{"lineNumber":48,"author":{"gitId":"Jingwencloud"},"content":"        DescriptionContainsKeywordsPredicate predicate \u003d new DescriptionContainsKeywordsPredicate(","lastModifiedDate":"2021-10-15"},{"lineNumber":49,"author":{"gitId":"Jingwencloud"},"content":"                Collections.singletonList(\"Buffet\"));","lastModifiedDate":"2021-10-15"},{"lineNumber":50,"author":{"gitId":"Jingwencloud"},"content":"        assertTrue(predicate.test(new ExpenseBuilder().withDescription(\"Buffet\").build()));","lastModifiedDate":"2021-10-15"},{"lineNumber":51,"author":{"gitId":"Jingwencloud"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":52,"author":{"gitId":"Jingwencloud"},"content":"        // Multiple keywords","lastModifiedDate":"2021-10-15"},{"lineNumber":53,"author":{"gitId":"Jingwencloud"},"content":"        predicate \u003d new DescriptionContainsKeywordsPredicate(Arrays.asList(\"Buffet\", \"Dinner\"));","lastModifiedDate":"2021-10-15"},{"lineNumber":54,"author":{"gitId":"Jingwencloud"},"content":"        assertTrue(predicate.test(new ExpenseBuilder().withDescription(\"Buffet Dinner\").build()));","lastModifiedDate":"2021-10-15"},{"lineNumber":55,"author":{"gitId":"Jingwencloud"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":56,"author":{"gitId":"Jingwencloud"},"content":"        // Only one matching keyword","lastModifiedDate":"2021-10-15"},{"lineNumber":57,"author":{"gitId":"Jingwencloud"},"content":"        predicate \u003d new DescriptionContainsKeywordsPredicate(Arrays.asList(\"Dinner\", \"Holiday\"));","lastModifiedDate":"2021-10-15"},{"lineNumber":58,"author":{"gitId":"Jingwencloud"},"content":"        assertTrue(predicate.test(new ExpenseBuilder().withDescription(\"Dinner Buffet\").build()));","lastModifiedDate":"2021-10-15"},{"lineNumber":59,"author":{"gitId":"Jingwencloud"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":60,"author":{"gitId":"Jingwencloud"},"content":"        // Mixed-case keywords","lastModifiedDate":"2021-10-15"},{"lineNumber":61,"author":{"gitId":"Jingwencloud"},"content":"        predicate \u003d new DescriptionContainsKeywordsPredicate(Arrays.asList(\"diNNer\", \"holidaY\"));","lastModifiedDate":"2021-10-15"},{"lineNumber":62,"author":{"gitId":"Jingwencloud"},"content":"        assertTrue(predicate.test(new ExpenseBuilder().withDescription(\"Dinner Holiday\").build()));","lastModifiedDate":"2021-10-28"},{"lineNumber":63,"author":{"gitId":"Jingwencloud"},"content":"    }","lastModifiedDate":"2021-10-15"},{"lineNumber":64,"author":{"gitId":"Jingwencloud"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":65,"author":{"gitId":"Jingwencloud"},"content":"    @Test","lastModifiedDate":"2021-10-15"},{"lineNumber":66,"author":{"gitId":"Jingwencloud"},"content":"    public void test_descriptionDoesNotContainKeywords_returnsFalse() {","lastModifiedDate":"2021-10-28"},{"lineNumber":67,"author":{"gitId":"Jingwencloud"},"content":"        // Zero keywords","lastModifiedDate":"2021-10-15"},{"lineNumber":68,"author":{"gitId":"Jingwencloud"},"content":"        DescriptionContainsKeywordsPredicate predicate \u003d new DescriptionContainsKeywordsPredicate(","lastModifiedDate":"2021-10-15"},{"lineNumber":69,"author":{"gitId":"Jingwencloud"},"content":"                Collections.emptyList());","lastModifiedDate":"2021-10-15"},{"lineNumber":70,"author":{"gitId":"Jingwencloud"},"content":"        assertFalse(predicate.test(new ExpenseBuilder().withDescription(\"Buffet\").build()));","lastModifiedDate":"2021-10-15"},{"lineNumber":71,"author":{"gitId":"Jingwencloud"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":72,"author":{"gitId":"Jingwencloud"},"content":"        // Non-matching keyword","lastModifiedDate":"2021-10-15"},{"lineNumber":73,"author":{"gitId":"Jingwencloud"},"content":"        predicate \u003d new DescriptionContainsKeywordsPredicate(Arrays.asList(\"Lunch\"));","lastModifiedDate":"2021-10-15"},{"lineNumber":74,"author":{"gitId":"Jingwencloud"},"content":"        assertFalse(predicate.test(new ExpenseBuilder().withDescription(\"Buffet Dinner\").build()));","lastModifiedDate":"2021-10-28"},{"lineNumber":75,"author":{"gitId":"Jingwencloud"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":76,"author":{"gitId":"Jingwencloud"},"content":"        // Keywords match cost and payer but does not match description","lastModifiedDate":"2021-10-15"},{"lineNumber":77,"author":{"gitId":"Jingwencloud"},"content":"        predicate \u003d new DescriptionContainsKeywordsPredicate(Arrays.asList(\"100\", \"Alice\", \"lunch\"));","lastModifiedDate":"2021-10-15"},{"lineNumber":78,"author":{"gitId":"Jingwencloud"},"content":"        assertFalse(predicate.test(new ExpenseBuilder().withDescription(\"Buffet\").withCost(\"100\")","lastModifiedDate":"2021-10-15"},{"lineNumber":79,"author":{"gitId":"Jingwencloud"},"content":"                .withPayer(ALICE).build()));","lastModifiedDate":"2021-10-28"},{"lineNumber":80,"author":{"gitId":"Jingwencloud"},"content":"    }","lastModifiedDate":"2021-10-15"},{"lineNumber":81,"author":{"gitId":"Jingwencloud"},"content":"}","lastModifiedDate":"2021-10-15"},{"lineNumber":82,"author":{"gitId":"Jingwencloud"},"content":"","lastModifiedDate":"2021-10-15"}],"authorContributionMap":{"Jingwencloud":82}},{"path":"src/test/java/seedu/awe/model/group/GroupNameTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"ramapriyan912001"},"content":"package seedu.awe.model.group;","lastModifiedDate":"2021-10-05"},{"lineNumber":2,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":3,"author":{"gitId":"ramapriyan912001"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-10-05"},{"lineNumber":4,"author":{"gitId":"ramapriyan912001"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-05"},{"lineNumber":5,"author":{"gitId":"ramapriyan912001"},"content":"import static seedu.awe.testutil.Assert.assertThrows;","lastModifiedDate":"2021-10-05"},{"lineNumber":6,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":7,"author":{"gitId":"ramapriyan912001"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-05"},{"lineNumber":8,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":9,"author":{"gitId":"ramapriyan912001"},"content":"import seedu.awe.model.person.Name;","lastModifiedDate":"2021-10-05"},{"lineNumber":10,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":11,"author":{"gitId":"ramapriyan912001"},"content":"public class GroupNameTest {","lastModifiedDate":"2021-10-05"},{"lineNumber":12,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":13,"author":{"gitId":"ramapriyan912001"},"content":"    @Test","lastModifiedDate":"2021-10-05"},{"lineNumber":14,"author":{"gitId":"ramapriyan912001"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2021-10-05"},{"lineNumber":15,"author":{"gitId":"ramapriyan912001"},"content":"        assertThrows(NullPointerException.class, () -\u003e new GroupName(null));","lastModifiedDate":"2021-10-05"},{"lineNumber":16,"author":{"gitId":"ramapriyan912001"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":17,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":18,"author":{"gitId":"ramapriyan912001"},"content":"    @Test","lastModifiedDate":"2021-10-05"},{"lineNumber":19,"author":{"gitId":"ramapriyan912001"},"content":"    public void constructor_invalidGroupName_throwsIllegalArgumentException() {","lastModifiedDate":"2021-10-05"},{"lineNumber":20,"author":{"gitId":"ramapriyan912001"},"content":"        String invalidGroupName \u003d \"\";","lastModifiedDate":"2021-10-05"},{"lineNumber":21,"author":{"gitId":"ramapriyan912001"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new GroupName(invalidGroupName));","lastModifiedDate":"2021-10-05"},{"lineNumber":22,"author":{"gitId":"ramapriyan912001"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":23,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":24,"author":{"gitId":"ramapriyan912001"},"content":"    @Test","lastModifiedDate":"2021-10-05"},{"lineNumber":25,"author":{"gitId":"ramapriyan912001"},"content":"    public void isValidGroupName() {","lastModifiedDate":"2021-10-05"},{"lineNumber":26,"author":{"gitId":"ramapriyan912001"},"content":"        // null name","lastModifiedDate":"2021-10-05"},{"lineNumber":27,"author":{"gitId":"ramapriyan912001"},"content":"        assertThrows(NullPointerException.class, () -\u003e GroupName.isValidGroupName(null));","lastModifiedDate":"2021-10-05"},{"lineNumber":28,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":29,"author":{"gitId":"ramapriyan912001"},"content":"        // invalid name","lastModifiedDate":"2021-10-05"},{"lineNumber":30,"author":{"gitId":"ramapriyan912001"},"content":"        assertFalse(Name.isValidGroupName(\"\")); // empty string","lastModifiedDate":"2021-10-05"},{"lineNumber":31,"author":{"gitId":"ramapriyan912001"},"content":"        assertFalse(Name.isValidGroupName(\" \")); // spaces only","lastModifiedDate":"2021-10-05"},{"lineNumber":32,"author":{"gitId":"ramapriyan912001"},"content":"        assertFalse(Name.isValidGroupName(\"^\")); // only non-alphanumeric characters","lastModifiedDate":"2021-10-05"},{"lineNumber":33,"author":{"gitId":"ramapriyan912001"},"content":"        assertFalse(Name.isValidGroupName(\"bali*\")); // contains non-alphanumeric characters","lastModifiedDate":"2021-10-05"},{"lineNumber":34,"author":{"gitId":"marcuspeh"},"content":"        assertFalse(Name.isValidGroupName(\"123456789012345678901234567\"","lastModifiedDate":"2021-11-01"},{"lineNumber":35,"author":{"gitId":"marcuspeh"},"content":"                + \"890123456789012345678901\")); // contains \u003e 50 characters","lastModifiedDate":"2021-11-01"},{"lineNumber":36,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":37,"author":{"gitId":"ramapriyan912001"},"content":"        // valid name","lastModifiedDate":"2021-10-05"},{"lineNumber":38,"author":{"gitId":"ramapriyan912001"},"content":"        assertTrue(Name.isValidGroupName(\"hong kong\")); // alphabets only","lastModifiedDate":"2021-10-05"},{"lineNumber":39,"author":{"gitId":"ramapriyan912001"},"content":"        assertTrue(Name.isValidGroupName(\"12345\")); // numbers only","lastModifiedDate":"2021-10-05"},{"lineNumber":40,"author":{"gitId":"ramapriyan912001"},"content":"        assertTrue(Name.isValidGroupName(\"budapest 2nd time\")); // alphanumeric characters","lastModifiedDate":"2021-10-05"},{"lineNumber":41,"author":{"gitId":"ramapriyan912001"},"content":"        assertTrue(Name.isValidGroupName(\"Capital Bangkok\")); // with capital letters","lastModifiedDate":"2021-10-05"},{"lineNumber":42,"author":{"gitId":"ramapriyan912001"},"content":"        assertTrue(Name.isValidGroupName(\"The Grand Canyon and Niagara Falls\")); // long names","lastModifiedDate":"2021-10-05"},{"lineNumber":43,"author":{"gitId":"marcuspeh"},"content":"        assertTrue(Name.isValidGroupName(\"123456789012345678901234567\"","lastModifiedDate":"2021-11-01"},{"lineNumber":44,"author":{"gitId":"marcuspeh"},"content":"                + \"89012345678901234567890\")); // contains 50 characters","lastModifiedDate":"2021-11-01"},{"lineNumber":45,"author":{"gitId":"ramapriyan912001"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":46,"author":{"gitId":"ramapriyan912001"},"content":"}","lastModifiedDate":"2021-10-05"}],"authorContributionMap":{"marcuspeh":4,"ramapriyan912001":42}},{"path":"src/test/java/seedu/awe/model/group/GroupTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"ramapriyan912001"},"content":"package seedu.awe.model.group;","lastModifiedDate":"2021-10-05"},{"lineNumber":2,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":3,"author":{"gitId":"ramapriyan912001"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-10-05"},{"lineNumber":4,"author":{"gitId":"ramapriyan912001"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-05"},{"lineNumber":5,"author":{"gitId":"ramapriyan912001"},"content":"import static seedu.awe.testutil.Assert.assertThrows;","lastModifiedDate":"2021-10-05"},{"lineNumber":6,"author":{"gitId":"ramapriyan912001"},"content":"import static seedu.awe.testutil.TypicalGroups.AMSTERDAM;","lastModifiedDate":"2021-10-05"},{"lineNumber":7,"author":{"gitId":"ramapriyan912001"},"content":"import static seedu.awe.testutil.TypicalGroups.BALI;","lastModifiedDate":"2021-10-05"},{"lineNumber":8,"author":{"gitId":"ramapriyan912001"},"content":"import static seedu.awe.testutil.TypicalPersons.HOON;","lastModifiedDate":"2021-10-05"},{"lineNumber":9,"author":{"gitId":"ramapriyan912001"},"content":"import static seedu.awe.testutil.TypicalPersons.IDA;","lastModifiedDate":"2021-10-05"},{"lineNumber":10,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":11,"author":{"gitId":"ramapriyan912001"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-05"},{"lineNumber":12,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":13,"author":{"gitId":"ramapriyan912001"},"content":"import seedu.awe.testutil.GroupBuilder;","lastModifiedDate":"2021-10-05"},{"lineNumber":14,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":15,"author":{"gitId":"ramapriyan912001"},"content":"public class GroupTest {","lastModifiedDate":"2021-10-05"},{"lineNumber":16,"author":{"gitId":"ramapriyan912001"},"content":"    @Test","lastModifiedDate":"2021-10-05"},{"lineNumber":17,"author":{"gitId":"ramapriyan912001"},"content":"    public void asObservableList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2021-10-05"},{"lineNumber":18,"author":{"gitId":"ramapriyan912001"},"content":"        Group group \u003d new GroupBuilder().build();","lastModifiedDate":"2021-10-05"},{"lineNumber":19,"author":{"gitId":"ramapriyan912001"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e group.getTags().remove(0));","lastModifiedDate":"2021-10-05"},{"lineNumber":20,"author":{"gitId":"ramapriyan912001"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":21,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":22,"author":{"gitId":"ramapriyan912001"},"content":"    @Test","lastModifiedDate":"2021-10-05"},{"lineNumber":23,"author":{"gitId":"ramapriyan912001"},"content":"    public void isSameGroup() {","lastModifiedDate":"2021-10-05"},{"lineNumber":24,"author":{"gitId":"ramapriyan912001"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2021-10-05"},{"lineNumber":25,"author":{"gitId":"ramapriyan912001"},"content":"        assertTrue(BALI.isSameGroup(BALI));","lastModifiedDate":"2021-10-05"},{"lineNumber":26,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":27,"author":{"gitId":"ramapriyan912001"},"content":"        // null -\u003e returns false","lastModifiedDate":"2021-10-05"},{"lineNumber":28,"author":{"gitId":"ramapriyan912001"},"content":"        assertFalse(BALI.isSameGroup(null));","lastModifiedDate":"2021-10-05"},{"lineNumber":29,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":30,"author":{"gitId":"ramapriyan912001"},"content":"        // same name, all members different -\u003e returns true","lastModifiedDate":"2021-10-05"},{"lineNumber":31,"author":{"gitId":"ramapriyan912001"},"content":"        Group editedBali \u003d new GroupBuilder(BALI).withMembers(IDA).build();","lastModifiedDate":"2021-10-05"},{"lineNumber":32,"author":{"gitId":"ramapriyan912001"},"content":"        assertTrue(BALI.isSameGroup(editedBali));","lastModifiedDate":"2021-10-05"},{"lineNumber":33,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":34,"author":{"gitId":"ramapriyan912001"},"content":"        // same name, all tags different -\u003e returns true","lastModifiedDate":"2021-10-05"},{"lineNumber":35,"author":{"gitId":"ramapriyan912001"},"content":"        editedBali \u003d new GroupBuilder(BALI).withTags(\"Business\").build();","lastModifiedDate":"2021-10-05"},{"lineNumber":36,"author":{"gitId":"ramapriyan912001"},"content":"        assertTrue(BALI.isSameGroup(editedBali));","lastModifiedDate":"2021-10-05"},{"lineNumber":37,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":38,"author":{"gitId":"ramapriyan912001"},"content":"        // name differs in case, all other attributes same -\u003e returns false","lastModifiedDate":"2021-10-05"},{"lineNumber":39,"author":{"gitId":"ramapriyan912001"},"content":"        editedBali \u003d new GroupBuilder(BALI).withGroupName(BALI.getGroupName().getName().toLowerCase()).build();","lastModifiedDate":"2021-10-05"},{"lineNumber":40,"author":{"gitId":"ramapriyan912001"},"content":"        assertFalse(BALI.isSameGroup(editedBali));","lastModifiedDate":"2021-10-05"},{"lineNumber":41,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":42,"author":{"gitId":"ramapriyan912001"},"content":"        // name has trailing spaces, all other attributes same -\u003e returns false","lastModifiedDate":"2021-10-05"},{"lineNumber":43,"author":{"gitId":"ramapriyan912001"},"content":"        String nameWithTrailingSpaces \u003d BALI.getGroupName().getName() + \" \";","lastModifiedDate":"2021-10-05"},{"lineNumber":44,"author":{"gitId":"ramapriyan912001"},"content":"        editedBali \u003d new GroupBuilder(BALI).withGroupName(nameWithTrailingSpaces).build();","lastModifiedDate":"2021-10-05"},{"lineNumber":45,"author":{"gitId":"ramapriyan912001"},"content":"        assertFalse(BALI.isSameGroup(editedBali));","lastModifiedDate":"2021-10-05"},{"lineNumber":46,"author":{"gitId":"ramapriyan912001"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":47,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":48,"author":{"gitId":"ramapriyan912001"},"content":"    @Test","lastModifiedDate":"2021-10-05"},{"lineNumber":49,"author":{"gitId":"ramapriyan912001"},"content":"    public void equals() {","lastModifiedDate":"2021-10-05"},{"lineNumber":50,"author":{"gitId":"ramapriyan912001"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2021-10-05"},{"lineNumber":51,"author":{"gitId":"ramapriyan912001"},"content":"        Group baliCopy \u003d new GroupBuilder(BALI).build();","lastModifiedDate":"2021-10-05"},{"lineNumber":52,"author":{"gitId":"ramapriyan912001"},"content":"        assertTrue(BALI.equals(baliCopy));","lastModifiedDate":"2021-10-05"},{"lineNumber":53,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":54,"author":{"gitId":"ramapriyan912001"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2021-10-05"},{"lineNumber":55,"author":{"gitId":"ramapriyan912001"},"content":"        assertTrue(BALI.equals(BALI));","lastModifiedDate":"2021-10-05"},{"lineNumber":56,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":57,"author":{"gitId":"ramapriyan912001"},"content":"        // null -\u003e returns false","lastModifiedDate":"2021-10-05"},{"lineNumber":58,"author":{"gitId":"ramapriyan912001"},"content":"        assertFalse(BALI.equals(null));","lastModifiedDate":"2021-10-05"},{"lineNumber":59,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":60,"author":{"gitId":"ramapriyan912001"},"content":"        // different type -\u003e returns false","lastModifiedDate":"2021-10-05"},{"lineNumber":61,"author":{"gitId":"ramapriyan912001"},"content":"        assertFalse(BALI.equals(5));","lastModifiedDate":"2021-10-05"},{"lineNumber":62,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":63,"author":{"gitId":"ramapriyan912001"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2021-10-05"},{"lineNumber":64,"author":{"gitId":"ramapriyan912001"},"content":"        assertFalse(BALI.equals(AMSTERDAM));","lastModifiedDate":"2021-10-05"},{"lineNumber":65,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":66,"author":{"gitId":"ramapriyan912001"},"content":"        // different name -\u003e returns false","lastModifiedDate":"2021-10-05"},{"lineNumber":67,"author":{"gitId":"ramapriyan912001"},"content":"        Group editedBali \u003d new GroupBuilder(BALI).withGroupName(AMSTERDAM.getGroupName().getName()).build();","lastModifiedDate":"2021-10-05"},{"lineNumber":68,"author":{"gitId":"ramapriyan912001"},"content":"        assertFalse(BALI.equals(editedBali));","lastModifiedDate":"2021-10-05"},{"lineNumber":69,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":70,"author":{"gitId":"ramapriyan912001"},"content":"        // different tags -\u003e returns true","lastModifiedDate":"2021-10-05"},{"lineNumber":71,"author":{"gitId":"ramapriyan912001"},"content":"        editedBali \u003d new GroupBuilder(BALI).withTags(\"Family\").build();","lastModifiedDate":"2021-10-05"},{"lineNumber":72,"author":{"gitId":"ramapriyan912001"},"content":"        assertTrue(BALI.equals(editedBali));","lastModifiedDate":"2021-10-05"},{"lineNumber":73,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":74,"author":{"gitId":"ramapriyan912001"},"content":"        // different members -\u003e returns true","lastModifiedDate":"2021-10-05"},{"lineNumber":75,"author":{"gitId":"ramapriyan912001"},"content":"        editedBali \u003d new GroupBuilder(BALI).withMembers(IDA, HOON).build();","lastModifiedDate":"2021-10-05"},{"lineNumber":76,"author":{"gitId":"ramapriyan912001"},"content":"        assertTrue(BALI.equals(BALI));","lastModifiedDate":"2021-10-05"},{"lineNumber":77,"author":{"gitId":"ramapriyan912001"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":78,"author":{"gitId":"ramapriyan912001"},"content":"}","lastModifiedDate":"2021-10-05"}],"authorContributionMap":{"ramapriyan912001":78}},{"path":"src/test/java/seedu/awe/model/group/GroupsContainsKeywordsPredicateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"marcuspeh"},"content":"package seedu.awe.model.group;","lastModifiedDate":"2021-10-11"},{"lineNumber":2,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":3,"author":{"gitId":"marcuspeh"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-10-11"},{"lineNumber":4,"author":{"gitId":"marcuspeh"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-11"},{"lineNumber":5,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":6,"author":{"gitId":"marcuspeh"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-10-11"},{"lineNumber":7,"author":{"gitId":"marcuspeh"},"content":"import java.util.Collections;","lastModifiedDate":"2021-10-11"},{"lineNumber":8,"author":{"gitId":"marcuspeh"},"content":"import java.util.List;","lastModifiedDate":"2021-10-11"},{"lineNumber":9,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":10,"author":{"gitId":"marcuspeh"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-11"},{"lineNumber":11,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":12,"author":{"gitId":"marcuspeh"},"content":"import seedu.awe.testutil.GroupBuilder;","lastModifiedDate":"2021-10-11"},{"lineNumber":13,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":14,"author":{"gitId":"marcuspeh"},"content":"public class GroupsContainsKeywordsPredicateTest {","lastModifiedDate":"2021-10-11"},{"lineNumber":15,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":16,"author":{"gitId":"marcuspeh"},"content":"    @Test","lastModifiedDate":"2021-10-11"},{"lineNumber":17,"author":{"gitId":"marcuspeh"},"content":"    public void equals() {","lastModifiedDate":"2021-10-11"},{"lineNumber":18,"author":{"gitId":"marcuspeh"},"content":"        List\u003cString\u003e firstPredicateKeywordList \u003d Collections.singletonList(\"first\");","lastModifiedDate":"2021-10-11"},{"lineNumber":19,"author":{"gitId":"marcuspeh"},"content":"        List\u003cString\u003e secondPredicateKeywordList \u003d Arrays.asList(\"first\", \"second\");","lastModifiedDate":"2021-10-11"},{"lineNumber":20,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":21,"author":{"gitId":"marcuspeh"},"content":"        GroupContainsKeywordsPredicate firstPredicate \u003d new GroupContainsKeywordsPredicate(firstPredicateKeywordList);","lastModifiedDate":"2021-10-11"},{"lineNumber":22,"author":{"gitId":"marcuspeh"},"content":"        GroupContainsKeywordsPredicate secondPredicate \u003d new GroupContainsKeywordsPredicate(secondPredicateKeywordList);","lastModifiedDate":"2021-10-11"},{"lineNumber":23,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":24,"author":{"gitId":"marcuspeh"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2021-10-11"},{"lineNumber":25,"author":{"gitId":"marcuspeh"},"content":"        assertTrue(firstPredicate.equals(firstPredicate));","lastModifiedDate":"2021-10-11"},{"lineNumber":26,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":27,"author":{"gitId":"marcuspeh"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2021-10-11"},{"lineNumber":28,"author":{"gitId":"marcuspeh"},"content":"        GroupContainsKeywordsPredicate firstPredicateCopy \u003d","lastModifiedDate":"2021-10-11"},{"lineNumber":29,"author":{"gitId":"marcuspeh"},"content":"                new GroupContainsKeywordsPredicate(firstPredicateKeywordList);","lastModifiedDate":"2021-10-11"},{"lineNumber":30,"author":{"gitId":"marcuspeh"},"content":"        assertTrue(firstPredicate.equals(firstPredicateCopy));","lastModifiedDate":"2021-10-11"},{"lineNumber":31,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":32,"author":{"gitId":"marcuspeh"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2021-10-11"},{"lineNumber":33,"author":{"gitId":"marcuspeh"},"content":"        assertFalse(firstPredicate.equals(1));","lastModifiedDate":"2021-10-11"},{"lineNumber":34,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":35,"author":{"gitId":"marcuspeh"},"content":"        // null -\u003e returns false","lastModifiedDate":"2021-10-11"},{"lineNumber":36,"author":{"gitId":"marcuspeh"},"content":"        assertFalse(firstPredicate.equals(null));","lastModifiedDate":"2021-10-11"},{"lineNumber":37,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":38,"author":{"gitId":"marcuspeh"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2021-10-11"},{"lineNumber":39,"author":{"gitId":"marcuspeh"},"content":"        assertFalse(firstPredicate.equals(secondPredicate));","lastModifiedDate":"2021-10-11"},{"lineNumber":40,"author":{"gitId":"marcuspeh"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":41,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":42,"author":{"gitId":"marcuspeh"},"content":"    @Test","lastModifiedDate":"2021-10-11"},{"lineNumber":43,"author":{"gitId":"marcuspeh"},"content":"    public void test_nameContainsKeywords_returnsTrue() {","lastModifiedDate":"2021-10-11"},{"lineNumber":44,"author":{"gitId":"marcuspeh"},"content":"        // One keyword","lastModifiedDate":"2021-10-11"},{"lineNumber":45,"author":{"gitId":"marcuspeh"},"content":"        GroupContainsKeywordsPredicate predicate \u003d","lastModifiedDate":"2021-10-11"},{"lineNumber":46,"author":{"gitId":"marcuspeh"},"content":"                new GroupContainsKeywordsPredicate(Collections.singletonList(\"London\"));","lastModifiedDate":"2021-10-11"},{"lineNumber":47,"author":{"gitId":"marcuspeh"},"content":"        assertTrue(predicate.test(new GroupBuilder().withGroupName(\"London Singapore\").build()));","lastModifiedDate":"2021-10-11"},{"lineNumber":48,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":49,"author":{"gitId":"marcuspeh"},"content":"        // Multiple keywords","lastModifiedDate":"2021-10-11"},{"lineNumber":50,"author":{"gitId":"marcuspeh"},"content":"        predicate \u003d new GroupContainsKeywordsPredicate(Arrays.asList(\"London\", \"Singapore\"));","lastModifiedDate":"2021-10-11"},{"lineNumber":51,"author":{"gitId":"marcuspeh"},"content":"        assertTrue(predicate.test(new GroupBuilder().withGroupName(\"London Singapore\").build()));","lastModifiedDate":"2021-10-11"},{"lineNumber":52,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":53,"author":{"gitId":"marcuspeh"},"content":"        // Only one matching keyword","lastModifiedDate":"2021-10-11"},{"lineNumber":54,"author":{"gitId":"marcuspeh"},"content":"        predicate \u003d new GroupContainsKeywordsPredicate(Arrays.asList(\"Singapore\", \"China\"));","lastModifiedDate":"2021-10-11"},{"lineNumber":55,"author":{"gitId":"marcuspeh"},"content":"        assertTrue(predicate.test(new GroupBuilder().withGroupName(\"London China\").build()));","lastModifiedDate":"2021-10-11"},{"lineNumber":56,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":57,"author":{"gitId":"marcuspeh"},"content":"        // Mixed-case keywords","lastModifiedDate":"2021-10-11"},{"lineNumber":58,"author":{"gitId":"marcuspeh"},"content":"        predicate \u003d new GroupContainsKeywordsPredicate(Arrays.asList(\"lOnDon\", \"JAPAn\"));","lastModifiedDate":"2021-10-11"},{"lineNumber":59,"author":{"gitId":"marcuspeh"},"content":"        assertTrue(predicate.test(new GroupBuilder().withGroupName(\"London Japan\").build()));","lastModifiedDate":"2021-10-11"},{"lineNumber":60,"author":{"gitId":"marcuspeh"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":61,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":62,"author":{"gitId":"marcuspeh"},"content":"    @Test","lastModifiedDate":"2021-10-11"},{"lineNumber":63,"author":{"gitId":"marcuspeh"},"content":"    public void test_nameDoesNotContainKeywords_returnsFalse() {","lastModifiedDate":"2021-10-11"},{"lineNumber":64,"author":{"gitId":"marcuspeh"},"content":"        // Zero keywords","lastModifiedDate":"2021-10-11"},{"lineNumber":65,"author":{"gitId":"marcuspeh"},"content":"        GroupContainsKeywordsPredicate predicate \u003d new GroupContainsKeywordsPredicate(Collections.emptyList());","lastModifiedDate":"2021-10-11"},{"lineNumber":66,"author":{"gitId":"marcuspeh"},"content":"        assertFalse(predicate.test(new GroupBuilder().withGroupName(\"Japan\").build()));","lastModifiedDate":"2021-10-11"},{"lineNumber":67,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":68,"author":{"gitId":"marcuspeh"},"content":"        // Non-matching keyword","lastModifiedDate":"2021-10-11"},{"lineNumber":69,"author":{"gitId":"marcuspeh"},"content":"        predicate \u003d new GroupContainsKeywordsPredicate(Arrays.asList(\"London\"));","lastModifiedDate":"2021-10-11"},{"lineNumber":70,"author":{"gitId":"marcuspeh"},"content":"        assertFalse(predicate.test(new GroupBuilder().withGroupName(\"Japan Korea\").build()));","lastModifiedDate":"2021-10-11"},{"lineNumber":71,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":72,"author":{"gitId":"marcuspeh"},"content":"        // Keywords match phone, email and awe, but does not match name","lastModifiedDate":"2021-10-11"},{"lineNumber":73,"author":{"gitId":"marcuspeh"},"content":"        predicate \u003d new GroupContainsKeywordsPredicate(Arrays.asList(\"Korea\"));","lastModifiedDate":"2021-10-11"},{"lineNumber":74,"author":{"gitId":"marcuspeh"},"content":"        assertFalse(predicate.test(new GroupBuilder().withGroupName(\"Grad Trip\").withTags(\"Korea\").build()));","lastModifiedDate":"2021-10-11"},{"lineNumber":75,"author":{"gitId":"marcuspeh"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":76,"author":{"gitId":"marcuspeh"},"content":"}","lastModifiedDate":"2021-10-11"}],"authorContributionMap":{"marcuspeh":76}},{"path":"src/test/java/seedu/awe/model/group/UniqueGroupListTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"ramapriyan912001"},"content":"package seedu.awe.model.group;","lastModifiedDate":"2021-10-05"},{"lineNumber":2,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":3,"author":{"gitId":"ramapriyan912001"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-05"},{"lineNumber":4,"author":{"gitId":"ramapriyan912001"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-10-05"},{"lineNumber":5,"author":{"gitId":"ramapriyan912001"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-05"},{"lineNumber":6,"author":{"gitId":"ramapriyan912001"},"content":"import static seedu.awe.testutil.Assert.assertThrows;","lastModifiedDate":"2021-10-05"},{"lineNumber":7,"author":{"gitId":"ramapriyan912001"},"content":"import static seedu.awe.testutil.TypicalGroups.AMSTERDAM;","lastModifiedDate":"2021-10-05"},{"lineNumber":8,"author":{"gitId":"ramapriyan912001"},"content":"import static seedu.awe.testutil.TypicalGroups.BALI;","lastModifiedDate":"2021-10-05"},{"lineNumber":9,"author":{"gitId":"ramapriyan912001"},"content":"import static seedu.awe.testutil.TypicalPersons.HOON;","lastModifiedDate":"2021-10-05"},{"lineNumber":10,"author":{"gitId":"ramapriyan912001"},"content":"import static seedu.awe.testutil.TypicalPersons.IDA;","lastModifiedDate":"2021-10-05"},{"lineNumber":11,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":12,"author":{"gitId":"ramapriyan912001"},"content":"import java.util.Collections;","lastModifiedDate":"2021-10-05"},{"lineNumber":13,"author":{"gitId":"ramapriyan912001"},"content":"import java.util.List;","lastModifiedDate":"2021-10-05"},{"lineNumber":14,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":15,"author":{"gitId":"ramapriyan912001"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-05"},{"lineNumber":16,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":17,"author":{"gitId":"ramapriyan912001"},"content":"import seedu.awe.model.group.exceptions.DuplicateGroupException;","lastModifiedDate":"2021-10-05"},{"lineNumber":18,"author":{"gitId":"ramapriyan912001"},"content":"import seedu.awe.model.group.exceptions.GroupNotFoundException;","lastModifiedDate":"2021-10-05"},{"lineNumber":19,"author":{"gitId":"ramapriyan912001"},"content":"import seedu.awe.testutil.GroupBuilder;","lastModifiedDate":"2021-10-05"},{"lineNumber":20,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":21,"author":{"gitId":"ramapriyan912001"},"content":"public class UniqueGroupListTest {","lastModifiedDate":"2021-10-05"},{"lineNumber":22,"author":{"gitId":"ramapriyan912001"},"content":"    private final UniqueGroupList uniqueGroupList \u003d new UniqueGroupList();","lastModifiedDate":"2021-10-05"},{"lineNumber":23,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":24,"author":{"gitId":"ramapriyan912001"},"content":"    @Test","lastModifiedDate":"2021-10-05"},{"lineNumber":25,"author":{"gitId":"ramapriyan912001"},"content":"    public void contains_nullGroup_throwsNullPointerException() {","lastModifiedDate":"2021-10-05"},{"lineNumber":26,"author":{"gitId":"ramapriyan912001"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueGroupList.contains(null));","lastModifiedDate":"2021-10-05"},{"lineNumber":27,"author":{"gitId":"ramapriyan912001"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":28,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":29,"author":{"gitId":"ramapriyan912001"},"content":"    @Test","lastModifiedDate":"2021-10-05"},{"lineNumber":30,"author":{"gitId":"ramapriyan912001"},"content":"    public void contains_groupNotInList_returnsFalse() {","lastModifiedDate":"2021-10-05"},{"lineNumber":31,"author":{"gitId":"ramapriyan912001"},"content":"        assertFalse(uniqueGroupList.contains(BALI));","lastModifiedDate":"2021-10-05"},{"lineNumber":32,"author":{"gitId":"ramapriyan912001"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":33,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":34,"author":{"gitId":"ramapriyan912001"},"content":"    @Test","lastModifiedDate":"2021-10-05"},{"lineNumber":35,"author":{"gitId":"ramapriyan912001"},"content":"    public void contains_groupInList_returnsTrue() {","lastModifiedDate":"2021-10-07"},{"lineNumber":36,"author":{"gitId":"ramapriyan912001"},"content":"        uniqueGroupList.add(BALI);","lastModifiedDate":"2021-10-05"},{"lineNumber":37,"author":{"gitId":"ramapriyan912001"},"content":"        assertTrue(uniqueGroupList.contains(BALI));","lastModifiedDate":"2021-10-05"},{"lineNumber":38,"author":{"gitId":"ramapriyan912001"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":39,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":40,"author":{"gitId":"ramapriyan912001"},"content":"    @Test","lastModifiedDate":"2021-10-05"},{"lineNumber":41,"author":{"gitId":"ramapriyan912001"},"content":"    public void contains_groupWithSameIdentityFieldsInList_returnsTrue() {","lastModifiedDate":"2021-10-07"},{"lineNumber":42,"author":{"gitId":"ramapriyan912001"},"content":"        uniqueGroupList.add(BALI);","lastModifiedDate":"2021-10-05"},{"lineNumber":43,"author":{"gitId":"ramapriyan912001"},"content":"        Group editedBali \u003d new GroupBuilder(BALI).withMembers(IDA, HOON).build();","lastModifiedDate":"2021-10-05"},{"lineNumber":44,"author":{"gitId":"ramapriyan912001"},"content":"        assertTrue(uniqueGroupList.contains(editedBali));","lastModifiedDate":"2021-10-05"},{"lineNumber":45,"author":{"gitId":"ramapriyan912001"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":46,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":47,"author":{"gitId":"ramapriyan912001"},"content":"    @Test","lastModifiedDate":"2021-10-05"},{"lineNumber":48,"author":{"gitId":"ramapriyan912001"},"content":"    public void add_nullGroup_throwsNullPointerException() {","lastModifiedDate":"2021-10-05"},{"lineNumber":49,"author":{"gitId":"ramapriyan912001"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueGroupList.add(null));","lastModifiedDate":"2021-10-05"},{"lineNumber":50,"author":{"gitId":"ramapriyan912001"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":51,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":52,"author":{"gitId":"ramapriyan912001"},"content":"    @Test","lastModifiedDate":"2021-10-05"},{"lineNumber":53,"author":{"gitId":"ramapriyan912001"},"content":"    public void add_duplicateGroup_throwsDuplicateGroupException() {","lastModifiedDate":"2021-10-07"},{"lineNumber":54,"author":{"gitId":"ramapriyan912001"},"content":"        uniqueGroupList.add(BALI);","lastModifiedDate":"2021-10-05"},{"lineNumber":55,"author":{"gitId":"ramapriyan912001"},"content":"        assertThrows(DuplicateGroupException.class, () -\u003e uniqueGroupList.add(BALI));","lastModifiedDate":"2021-10-05"},{"lineNumber":56,"author":{"gitId":"ramapriyan912001"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":57,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":58,"author":{"gitId":"ramapriyan912001"},"content":"    @Test","lastModifiedDate":"2021-10-05"},{"lineNumber":59,"author":{"gitId":"ramapriyan912001"},"content":"    public void setGroup_nullTargetPerson_throwsNullPointerException() {","lastModifiedDate":"2021-10-05"},{"lineNumber":60,"author":{"gitId":"ramapriyan912001"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueGroupList.setGroup(null, BALI));","lastModifiedDate":"2021-10-05"},{"lineNumber":61,"author":{"gitId":"ramapriyan912001"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":62,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":63,"author":{"gitId":"ramapriyan912001"},"content":"    @Test","lastModifiedDate":"2021-10-05"},{"lineNumber":64,"author":{"gitId":"ramapriyan912001"},"content":"    public void setGroup_nullEditedGroup_throwsNullPointerException() {","lastModifiedDate":"2021-10-05"},{"lineNumber":65,"author":{"gitId":"ramapriyan912001"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueGroupList.setGroup(BALI, null));","lastModifiedDate":"2021-10-05"},{"lineNumber":66,"author":{"gitId":"ramapriyan912001"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":67,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":68,"author":{"gitId":"ramapriyan912001"},"content":"    @Test","lastModifiedDate":"2021-10-05"},{"lineNumber":69,"author":{"gitId":"ramapriyan912001"},"content":"    public void setGroup_targetGroupNotInList_throwsGroupNotFoundException() {","lastModifiedDate":"2021-10-05"},{"lineNumber":70,"author":{"gitId":"ramapriyan912001"},"content":"        assertThrows(GroupNotFoundException.class, () -\u003e uniqueGroupList.setGroup(BALI, BALI));","lastModifiedDate":"2021-10-05"},{"lineNumber":71,"author":{"gitId":"ramapriyan912001"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":72,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":73,"author":{"gitId":"ramapriyan912001"},"content":"    @Test","lastModifiedDate":"2021-10-05"},{"lineNumber":74,"author":{"gitId":"ramapriyan912001"},"content":"    public void setGroup_editedGroupIsSameGroup_success() {","lastModifiedDate":"2021-10-07"},{"lineNumber":75,"author":{"gitId":"ramapriyan912001"},"content":"        uniqueGroupList.add(BALI);","lastModifiedDate":"2021-10-05"},{"lineNumber":76,"author":{"gitId":"ramapriyan912001"},"content":"        uniqueGroupList.setGroup(BALI, BALI);","lastModifiedDate":"2021-10-05"},{"lineNumber":77,"author":{"gitId":"ramapriyan912001"},"content":"        UniqueGroupList expectedUniqueGroupList \u003d new UniqueGroupList();","lastModifiedDate":"2021-10-05"},{"lineNumber":78,"author":{"gitId":"ramapriyan912001"},"content":"        expectedUniqueGroupList.add(BALI);","lastModifiedDate":"2021-10-05"},{"lineNumber":79,"author":{"gitId":"ramapriyan912001"},"content":"        assertEquals(expectedUniqueGroupList, uniqueGroupList);","lastModifiedDate":"2021-10-05"},{"lineNumber":80,"author":{"gitId":"ramapriyan912001"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":81,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":82,"author":{"gitId":"ramapriyan912001"},"content":"    @Test","lastModifiedDate":"2021-10-05"},{"lineNumber":83,"author":{"gitId":"ramapriyan912001"},"content":"    public void setGroup_editedGroupHasSameIdentity_success() {","lastModifiedDate":"2021-10-07"},{"lineNumber":84,"author":{"gitId":"ramapriyan912001"},"content":"        uniqueGroupList.add(BALI);","lastModifiedDate":"2021-10-05"},{"lineNumber":85,"author":{"gitId":"ramapriyan912001"},"content":"        Group editedBali \u003d new GroupBuilder(BALI).withTags(\"Business\").build();","lastModifiedDate":"2021-10-05"},{"lineNumber":86,"author":{"gitId":"ramapriyan912001"},"content":"        uniqueGroupList.setGroup(BALI, editedBali);","lastModifiedDate":"2021-10-05"},{"lineNumber":87,"author":{"gitId":"ramapriyan912001"},"content":"        UniqueGroupList expectedUniqueGroupList \u003d new UniqueGroupList();","lastModifiedDate":"2021-10-05"},{"lineNumber":88,"author":{"gitId":"ramapriyan912001"},"content":"        expectedUniqueGroupList.add(editedBali);","lastModifiedDate":"2021-10-05"},{"lineNumber":89,"author":{"gitId":"ramapriyan912001"},"content":"        assertEquals(expectedUniqueGroupList, uniqueGroupList);","lastModifiedDate":"2021-10-05"},{"lineNumber":90,"author":{"gitId":"ramapriyan912001"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":91,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":92,"author":{"gitId":"ramapriyan912001"},"content":"    @Test","lastModifiedDate":"2021-10-05"},{"lineNumber":93,"author":{"gitId":"ramapriyan912001"},"content":"    public void setGroup_editedGroupHasDifferentIdentity_success() {","lastModifiedDate":"2021-10-07"},{"lineNumber":94,"author":{"gitId":"ramapriyan912001"},"content":"        uniqueGroupList.add(BALI);","lastModifiedDate":"2021-10-05"},{"lineNumber":95,"author":{"gitId":"ramapriyan912001"},"content":"        uniqueGroupList.setGroup(BALI, AMSTERDAM);","lastModifiedDate":"2021-10-05"},{"lineNumber":96,"author":{"gitId":"ramapriyan912001"},"content":"        UniqueGroupList expectedUniqueGroupList \u003d new UniqueGroupList();","lastModifiedDate":"2021-10-05"},{"lineNumber":97,"author":{"gitId":"ramapriyan912001"},"content":"        expectedUniqueGroupList.add(AMSTERDAM);","lastModifiedDate":"2021-10-05"},{"lineNumber":98,"author":{"gitId":"ramapriyan912001"},"content":"        assertEquals(expectedUniqueGroupList, uniqueGroupList);","lastModifiedDate":"2021-10-05"},{"lineNumber":99,"author":{"gitId":"ramapriyan912001"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":100,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":101,"author":{"gitId":"ramapriyan912001"},"content":"    @Test","lastModifiedDate":"2021-10-05"},{"lineNumber":102,"author":{"gitId":"ramapriyan912001"},"content":"    public void setGroup_editedGroupHasNonUniqueIdentity_throwsDuplicateGroupException()","lastModifiedDate":"2021-10-05"},{"lineNumber":103,"author":{"gitId":"ramapriyan912001"},"content":"            throws DuplicateGroupException {","lastModifiedDate":"2021-10-05"},{"lineNumber":104,"author":{"gitId":"ramapriyan912001"},"content":"        uniqueGroupList.add(BALI);","lastModifiedDate":"2021-10-05"},{"lineNumber":105,"author":{"gitId":"ramapriyan912001"},"content":"        uniqueGroupList.add(AMSTERDAM);","lastModifiedDate":"2021-10-05"},{"lineNumber":106,"author":{"gitId":"ramapriyan912001"},"content":"        assertThrows(DuplicateGroupException.class, () -\u003e uniqueGroupList.setGroup(BALI, AMSTERDAM));","lastModifiedDate":"2021-10-05"},{"lineNumber":107,"author":{"gitId":"ramapriyan912001"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":108,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":109,"author":{"gitId":"ramapriyan912001"},"content":"    @Test","lastModifiedDate":"2021-10-05"},{"lineNumber":110,"author":{"gitId":"ramapriyan912001"},"content":"    public void remove_nullGroup_throwsNullPointerException() {","lastModifiedDate":"2021-10-05"},{"lineNumber":111,"author":{"gitId":"ramapriyan912001"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueGroupList.remove(null));","lastModifiedDate":"2021-10-05"},{"lineNumber":112,"author":{"gitId":"ramapriyan912001"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":113,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":114,"author":{"gitId":"ramapriyan912001"},"content":"    @Test","lastModifiedDate":"2021-10-05"},{"lineNumber":115,"author":{"gitId":"ramapriyan912001"},"content":"    public void remove_groupDoesNotExist_throwsGroupNotFoundException() {","lastModifiedDate":"2021-10-05"},{"lineNumber":116,"author":{"gitId":"ramapriyan912001"},"content":"        assertThrows(GroupNotFoundException.class, () -\u003e uniqueGroupList.remove(BALI));","lastModifiedDate":"2021-10-05"},{"lineNumber":117,"author":{"gitId":"ramapriyan912001"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":118,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":119,"author":{"gitId":"ramapriyan912001"},"content":"    @Test","lastModifiedDate":"2021-10-05"},{"lineNumber":120,"author":{"gitId":"ramapriyan912001"},"content":"    public void remove_existingGroup_removesGroup() {","lastModifiedDate":"2021-10-07"},{"lineNumber":121,"author":{"gitId":"ramapriyan912001"},"content":"        uniqueGroupList.add(BALI);","lastModifiedDate":"2021-10-05"},{"lineNumber":122,"author":{"gitId":"ramapriyan912001"},"content":"        uniqueGroupList.remove(BALI);","lastModifiedDate":"2021-10-05"},{"lineNumber":123,"author":{"gitId":"ramapriyan912001"},"content":"        UniqueGroupList expectedUniqueGroupList \u003d new UniqueGroupList();","lastModifiedDate":"2021-10-05"},{"lineNumber":124,"author":{"gitId":"ramapriyan912001"},"content":"        assertEquals(expectedUniqueGroupList, uniqueGroupList);","lastModifiedDate":"2021-10-05"},{"lineNumber":125,"author":{"gitId":"ramapriyan912001"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":126,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":127,"author":{"gitId":"ramapriyan912001"},"content":"    @Test","lastModifiedDate":"2021-10-05"},{"lineNumber":128,"author":{"gitId":"ramapriyan912001"},"content":"    public void setGroups_nullUniqueGroupList_throwsNullPointerException() {","lastModifiedDate":"2021-10-05"},{"lineNumber":129,"author":{"gitId":"ramapriyan912001"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueGroupList.setGroups((UniqueGroupList) null));","lastModifiedDate":"2021-10-05"},{"lineNumber":130,"author":{"gitId":"ramapriyan912001"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":131,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":132,"author":{"gitId":"ramapriyan912001"},"content":"    @Test","lastModifiedDate":"2021-10-05"},{"lineNumber":133,"author":{"gitId":"ramapriyan912001"},"content":"    public void setGroups_uniqueGroupList_replacesOwnListWithProvidedUniqueGroupsList() {","lastModifiedDate":"2021-10-07"},{"lineNumber":134,"author":{"gitId":"ramapriyan912001"},"content":"        uniqueGroupList.add(BALI);","lastModifiedDate":"2021-10-05"},{"lineNumber":135,"author":{"gitId":"ramapriyan912001"},"content":"        UniqueGroupList expectedUniqueGroupList \u003d new UniqueGroupList();","lastModifiedDate":"2021-10-05"},{"lineNumber":136,"author":{"gitId":"ramapriyan912001"},"content":"        expectedUniqueGroupList.add(AMSTERDAM);","lastModifiedDate":"2021-10-05"},{"lineNumber":137,"author":{"gitId":"ramapriyan912001"},"content":"        uniqueGroupList.setGroups(expectedUniqueGroupList);","lastModifiedDate":"2021-10-05"},{"lineNumber":138,"author":{"gitId":"ramapriyan912001"},"content":"        assertEquals(expectedUniqueGroupList, uniqueGroupList);","lastModifiedDate":"2021-10-05"},{"lineNumber":139,"author":{"gitId":"ramapriyan912001"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":140,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":141,"author":{"gitId":"ramapriyan912001"},"content":"    @Test","lastModifiedDate":"2021-10-05"},{"lineNumber":142,"author":{"gitId":"ramapriyan912001"},"content":"    public void setGroups_nullList_throwsNullPointerException() {","lastModifiedDate":"2021-10-05"},{"lineNumber":143,"author":{"gitId":"ramapriyan912001"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueGroupList.setGroups((List\u003cGroup\u003e) null));","lastModifiedDate":"2021-10-05"},{"lineNumber":144,"author":{"gitId":"ramapriyan912001"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":145,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":146,"author":{"gitId":"ramapriyan912001"},"content":"    @Test","lastModifiedDate":"2021-10-05"},{"lineNumber":147,"author":{"gitId":"ramapriyan912001"},"content":"    public void setGroups_list_replacesOwnListWithProvidedList() {","lastModifiedDate":"2021-10-07"},{"lineNumber":148,"author":{"gitId":"ramapriyan912001"},"content":"        uniqueGroupList.add(BALI);","lastModifiedDate":"2021-10-05"},{"lineNumber":149,"author":{"gitId":"ramapriyan912001"},"content":"        List\u003cGroup\u003e groupList \u003d Collections.singletonList(AMSTERDAM);","lastModifiedDate":"2021-10-05"},{"lineNumber":150,"author":{"gitId":"ramapriyan912001"},"content":"        uniqueGroupList.setGroups(groupList);","lastModifiedDate":"2021-10-05"},{"lineNumber":151,"author":{"gitId":"ramapriyan912001"},"content":"        UniqueGroupList expectedUniqueGroupList \u003d new UniqueGroupList();","lastModifiedDate":"2021-10-05"},{"lineNumber":152,"author":{"gitId":"ramapriyan912001"},"content":"        expectedUniqueGroupList.add(AMSTERDAM);","lastModifiedDate":"2021-10-05"},{"lineNumber":153,"author":{"gitId":"ramapriyan912001"},"content":"        assertEquals(expectedUniqueGroupList, uniqueGroupList);","lastModifiedDate":"2021-10-05"},{"lineNumber":154,"author":{"gitId":"ramapriyan912001"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":155,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":156,"author":{"gitId":"ramapriyan912001"},"content":"    @Test","lastModifiedDate":"2021-10-05"},{"lineNumber":157,"author":{"gitId":"ramapriyan912001"},"content":"    public void asUnmodifiableObservableList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2021-10-05"},{"lineNumber":158,"author":{"gitId":"ramapriyan912001"},"content":"        assertThrows(UnsupportedOperationException.class, ()","lastModifiedDate":"2021-10-05"},{"lineNumber":159,"author":{"gitId":"ramapriyan912001"},"content":"            -\u003e uniqueGroupList.asUnmodifiableObservableList().remove(0));","lastModifiedDate":"2021-10-05"},{"lineNumber":160,"author":{"gitId":"ramapriyan912001"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":161,"author":{"gitId":"ramapriyan912001"},"content":"}","lastModifiedDate":"2021-10-05"}],"authorContributionMap":{"ramapriyan912001":161}},{"path":"src/test/java/seedu/awe/model/payment/PaymentListTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"ramapriyan912001"},"content":"package seedu.awe.model.payment;","lastModifiedDate":"2021-10-27"},{"lineNumber":2,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":3,"author":{"gitId":"ramapriyan912001"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-31"},{"lineNumber":4,"author":{"gitId":"ramapriyan912001"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-10-27"},{"lineNumber":5,"author":{"gitId":"ramapriyan912001"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2021-10-31"},{"lineNumber":6,"author":{"gitId":"ramapriyan912001"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-27"},{"lineNumber":7,"author":{"gitId":"ramapriyan912001"},"content":"import static seedu.awe.testutil.Assert.assertThrows;","lastModifiedDate":"2021-10-27"},{"lineNumber":8,"author":{"gitId":"ramapriyan912001"},"content":"import static seedu.awe.testutil.TypicalGroups.BALI_WITH_EXPENSES;","lastModifiedDate":"2021-10-31"},{"lineNumber":9,"author":{"gitId":"ramapriyan912001"},"content":"import static seedu.awe.testutil.TypicalGroups.BALI_WITH_EXPENSES_PAYMENTS;","lastModifiedDate":"2021-10-31"},{"lineNumber":10,"author":{"gitId":"ramapriyan912001"},"content":"import static seedu.awe.testutil.TypicalPayments.ALICE_BOB_COST;","lastModifiedDate":"2021-10-27"},{"lineNumber":11,"author":{"gitId":"ramapriyan912001"},"content":"import static seedu.awe.testutil.TypicalPayments.ALICE_BOB_PAYMENT;","lastModifiedDate":"2021-10-27"},{"lineNumber":12,"author":{"gitId":"ramapriyan912001"},"content":"import static seedu.awe.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2021-10-27"},{"lineNumber":13,"author":{"gitId":"ramapriyan912001"},"content":"import static seedu.awe.testutil.TypicalPersons.BOB;","lastModifiedDate":"2021-10-27"},{"lineNumber":14,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":15,"author":{"gitId":"ramapriyan912001"},"content":"import java.util.Iterator;","lastModifiedDate":"2021-10-31"},{"lineNumber":16,"author":{"gitId":"ramapriyan912001"},"content":"import java.util.Optional;","lastModifiedDate":"2021-10-31"},{"lineNumber":17,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":18,"author":{"gitId":"ramapriyan912001"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-27"},{"lineNumber":19,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":20,"author":{"gitId":"ramapriyan912001"},"content":"import seedu.awe.testutil.PaymentBuilder;","lastModifiedDate":"2021-10-27"},{"lineNumber":21,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":22,"author":{"gitId":"ramapriyan912001"},"content":"public class PaymentListTest {","lastModifiedDate":"2021-10-27"},{"lineNumber":23,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":24,"author":{"gitId":"ramapriyan912001"},"content":"    private final PaymentList emptyPaymentList \u003d new PaymentList();","lastModifiedDate":"2021-10-31"},{"lineNumber":25,"author":{"gitId":"ramapriyan912001"},"content":"    private final PaymentList paymentList \u003d new PaymentList(BALI_WITH_EXPENSES);","lastModifiedDate":"2021-10-31"},{"lineNumber":26,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":27,"author":{"gitId":"ramapriyan912001"},"content":"    public void addPayments() {","lastModifiedDate":"2021-10-31"},{"lineNumber":28,"author":{"gitId":"ramapriyan912001"},"content":"        paymentList.addAll(BALI_WITH_EXPENSES_PAYMENTS);","lastModifiedDate":"2021-10-31"},{"lineNumber":29,"author":{"gitId":"ramapriyan912001"},"content":"    }","lastModifiedDate":"2021-10-31"},{"lineNumber":30,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":31,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":32,"author":{"gitId":"ramapriyan912001"},"content":"    @Test","lastModifiedDate":"2021-10-27"},{"lineNumber":33,"author":{"gitId":"ramapriyan912001"},"content":"    public void contains_nullPayment_throwsNullPointerException() {","lastModifiedDate":"2021-10-27"},{"lineNumber":34,"author":{"gitId":"ramapriyan912001"},"content":"        addPayments();","lastModifiedDate":"2021-10-31"},{"lineNumber":35,"author":{"gitId":"ramapriyan912001"},"content":"        assertThrows(NullPointerException.class, () -\u003e emptyPaymentList.contains(null));","lastModifiedDate":"2021-10-31"},{"lineNumber":36,"author":{"gitId":"ramapriyan912001"},"content":"    }","lastModifiedDate":"2021-10-31"},{"lineNumber":37,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":38,"author":{"gitId":"ramapriyan912001"},"content":"    @Test","lastModifiedDate":"2021-10-31"},{"lineNumber":39,"author":{"gitId":"ramapriyan912001"},"content":"    public void constructor_nullGroup_throwsNullPointerException() {","lastModifiedDate":"2021-10-31"},{"lineNumber":40,"author":{"gitId":"ramapriyan912001"},"content":"        addPayments();","lastModifiedDate":"2021-10-31"},{"lineNumber":41,"author":{"gitId":"ramapriyan912001"},"content":"        assertThrows(NullPointerException.class, () -\u003e new PaymentList(null));","lastModifiedDate":"2021-10-31"},{"lineNumber":42,"author":{"gitId":"ramapriyan912001"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":43,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":44,"author":{"gitId":"ramapriyan912001"},"content":"    @Test","lastModifiedDate":"2021-10-27"},{"lineNumber":45,"author":{"gitId":"ramapriyan912001"},"content":"    public void contains_paymentNotInList_returnsFalse() {","lastModifiedDate":"2021-10-27"},{"lineNumber":46,"author":{"gitId":"ramapriyan912001"},"content":"        addPayments();","lastModifiedDate":"2021-10-31"},{"lineNumber":47,"author":{"gitId":"ramapriyan912001"},"content":"        assertFalse(emptyPaymentList.contains(ALICE_BOB_PAYMENT));","lastModifiedDate":"2021-10-31"},{"lineNumber":48,"author":{"gitId":"ramapriyan912001"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":49,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":50,"author":{"gitId":"ramapriyan912001"},"content":"    @Test","lastModifiedDate":"2021-10-27"},{"lineNumber":51,"author":{"gitId":"ramapriyan912001"},"content":"    public void contains_paymentInList_returnsTrue() {","lastModifiedDate":"2021-10-27"},{"lineNumber":52,"author":{"gitId":"ramapriyan912001"},"content":"        addPayments();","lastModifiedDate":"2021-10-31"},{"lineNumber":53,"author":{"gitId":"ramapriyan912001"},"content":"        emptyPaymentList.add(ALICE_BOB_PAYMENT);","lastModifiedDate":"2021-10-31"},{"lineNumber":54,"author":{"gitId":"ramapriyan912001"},"content":"        assertTrue(emptyPaymentList.contains(ALICE_BOB_PAYMENT));","lastModifiedDate":"2021-10-31"},{"lineNumber":55,"author":{"gitId":"ramapriyan912001"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":56,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":57,"author":{"gitId":"ramapriyan912001"},"content":"    @Test","lastModifiedDate":"2021-10-27"},{"lineNumber":58,"author":{"gitId":"ramapriyan912001"},"content":"    public void contains_paymentWithSameIdentityFieldsInList_returnsTrue() {","lastModifiedDate":"2021-10-27"},{"lineNumber":59,"author":{"gitId":"ramapriyan912001"},"content":"        addPayments();","lastModifiedDate":"2021-10-31"},{"lineNumber":60,"author":{"gitId":"ramapriyan912001"},"content":"        emptyPaymentList.add(ALICE_BOB_PAYMENT);","lastModifiedDate":"2021-10-31"},{"lineNumber":61,"author":{"gitId":"ramapriyan912001"},"content":"        Payment editedPayment \u003d new PaymentBuilder().withPayer(ALICE).withPayee(BOB).withCost(ALICE_BOB_COST).build();","lastModifiedDate":"2021-10-27"},{"lineNumber":62,"author":{"gitId":"ramapriyan912001"},"content":"        assertTrue(emptyPaymentList.contains(editedPayment));","lastModifiedDate":"2021-10-31"},{"lineNumber":63,"author":{"gitId":"ramapriyan912001"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":64,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":65,"author":{"gitId":"ramapriyan912001"},"content":"    @Test","lastModifiedDate":"2021-10-27"},{"lineNumber":66,"author":{"gitId":"ramapriyan912001"},"content":"    public void add_nullPayment_throwsNullPointerException() {","lastModifiedDate":"2021-10-27"},{"lineNumber":67,"author":{"gitId":"ramapriyan912001"},"content":"        addPayments();","lastModifiedDate":"2021-10-31"},{"lineNumber":68,"author":{"gitId":"ramapriyan912001"},"content":"        assertThrows(NullPointerException.class, () -\u003e emptyPaymentList.add(null));","lastModifiedDate":"2021-10-31"},{"lineNumber":69,"author":{"gitId":"ramapriyan912001"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":70,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":71,"author":{"gitId":"ramapriyan912001"},"content":"    @Test","lastModifiedDate":"2021-10-27"},{"lineNumber":72,"author":{"gitId":"ramapriyan912001"},"content":"    public void asUnmodifiableObservableList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2021-10-27"},{"lineNumber":73,"author":{"gitId":"ramapriyan912001"},"content":"        addPayments();","lastModifiedDate":"2021-10-31"},{"lineNumber":74,"author":{"gitId":"ramapriyan912001"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e","lastModifiedDate":"2021-10-27"},{"lineNumber":75,"author":{"gitId":"ramapriyan912001"},"content":"                emptyPaymentList.asUnmodifiableObservableList().remove(0));","lastModifiedDate":"2021-10-31"},{"lineNumber":76,"author":{"gitId":"ramapriyan912001"},"content":"    }","lastModifiedDate":"2021-10-31"},{"lineNumber":77,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":78,"author":{"gitId":"ramapriyan912001"},"content":"    @Test","lastModifiedDate":"2021-10-31"},{"lineNumber":79,"author":{"gitId":"ramapriyan912001"},"content":"    public void equals() {","lastModifiedDate":"2021-10-31"},{"lineNumber":80,"author":{"gitId":"ramapriyan912001"},"content":"        addPayments();","lastModifiedDate":"2021-10-31"},{"lineNumber":81,"author":{"gitId":"ramapriyan912001"},"content":"        assertEquals(paymentList, paymentList);","lastModifiedDate":"2021-10-31"},{"lineNumber":82,"author":{"gitId":"ramapriyan912001"},"content":"        assertNotEquals(paymentList, emptyPaymentList);","lastModifiedDate":"2021-10-31"},{"lineNumber":83,"author":{"gitId":"ramapriyan912001"},"content":"        assertFalse(paymentList.equals(30));","lastModifiedDate":"2021-10-31"},{"lineNumber":84,"author":{"gitId":"ramapriyan912001"},"content":"    }","lastModifiedDate":"2021-10-31"},{"lineNumber":85,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":86,"author":{"gitId":"ramapriyan912001"},"content":"    @Test","lastModifiedDate":"2021-10-31"},{"lineNumber":87,"author":{"gitId":"ramapriyan912001"},"content":"    public void hashcode() {","lastModifiedDate":"2021-10-31"},{"lineNumber":88,"author":{"gitId":"ramapriyan912001"},"content":"        addPayments();","lastModifiedDate":"2021-10-31"},{"lineNumber":89,"author":{"gitId":"ramapriyan912001"},"content":"        assertEquals(paymentList.hashCode(), paymentList.hashCode());","lastModifiedDate":"2021-10-31"},{"lineNumber":90,"author":{"gitId":"ramapriyan912001"},"content":"        assertEquals(emptyPaymentList.hashCode(), emptyPaymentList.hashCode());","lastModifiedDate":"2021-10-31"},{"lineNumber":91,"author":{"gitId":"ramapriyan912001"},"content":"        assertNotEquals(paymentList, emptyPaymentList);","lastModifiedDate":"2021-10-31"},{"lineNumber":92,"author":{"gitId":"ramapriyan912001"},"content":"    }","lastModifiedDate":"2021-10-31"},{"lineNumber":93,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":94,"author":{"gitId":"ramapriyan912001"},"content":"    @Test","lastModifiedDate":"2021-10-31"},{"lineNumber":95,"author":{"gitId":"ramapriyan912001"},"content":"    public void getGroup_groupPresent_returnsOptionalOfGroup() {","lastModifiedDate":"2021-10-31"},{"lineNumber":96,"author":{"gitId":"ramapriyan912001"},"content":"        addPayments();","lastModifiedDate":"2021-10-31"},{"lineNumber":97,"author":{"gitId":"ramapriyan912001"},"content":"        assertEquals(Optional.ofNullable(BALI_WITH_EXPENSES), paymentList.getGroup());","lastModifiedDate":"2021-10-31"},{"lineNumber":98,"author":{"gitId":"ramapriyan912001"},"content":"    }","lastModifiedDate":"2021-10-31"},{"lineNumber":99,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":100,"author":{"gitId":"ramapriyan912001"},"content":"    @Test","lastModifiedDate":"2021-10-31"},{"lineNumber":101,"author":{"gitId":"ramapriyan912001"},"content":"    public void getGroup_groupAbsent_returnsEmptyOptional() {","lastModifiedDate":"2021-10-31"},{"lineNumber":102,"author":{"gitId":"ramapriyan912001"},"content":"        addPayments();","lastModifiedDate":"2021-10-31"},{"lineNumber":103,"author":{"gitId":"ramapriyan912001"},"content":"        assertEquals(Optional.empty(), emptyPaymentList.getGroup());","lastModifiedDate":"2021-10-31"},{"lineNumber":104,"author":{"gitId":"ramapriyan912001"},"content":"    }","lastModifiedDate":"2021-10-31"},{"lineNumber":105,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":106,"author":{"gitId":"ramapriyan912001"},"content":"    @Test","lastModifiedDate":"2021-10-31"},{"lineNumber":107,"author":{"gitId":"ramapriyan912001"},"content":"    public void setGroup_sucess() {","lastModifiedDate":"2021-10-31"},{"lineNumber":108,"author":{"gitId":"ramapriyan912001"},"content":"        addPayments();","lastModifiedDate":"2021-10-31"},{"lineNumber":109,"author":{"gitId":"ramapriyan912001"},"content":"        emptyPaymentList.setGroup(BALI_WITH_EXPENSES);","lastModifiedDate":"2021-10-31"},{"lineNumber":110,"author":{"gitId":"ramapriyan912001"},"content":"        assertEquals(Optional.ofNullable(BALI_WITH_EXPENSES), emptyPaymentList.getGroup());","lastModifiedDate":"2021-10-31"},{"lineNumber":111,"author":{"gitId":"ramapriyan912001"},"content":"    }","lastModifiedDate":"2021-10-31"},{"lineNumber":112,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":113,"author":{"gitId":"ramapriyan912001"},"content":"    @Test","lastModifiedDate":"2021-10-31"},{"lineNumber":114,"author":{"gitId":"ramapriyan912001"},"content":"    public void iterator() {","lastModifiedDate":"2021-10-31"},{"lineNumber":115,"author":{"gitId":"ramapriyan912001"},"content":"        addPayments();","lastModifiedDate":"2021-10-31"},{"lineNumber":116,"author":{"gitId":"ramapriyan912001"},"content":"        assertTrue(paymentList.iterator() instanceof Iterator);","lastModifiedDate":"2021-10-31"},{"lineNumber":117,"author":{"gitId":"ramapriyan912001"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":118,"author":{"gitId":"ramapriyan912001"},"content":"}","lastModifiedDate":"2021-10-27"}],"authorContributionMap":{"ramapriyan912001":118}},{"path":"src/test/java/seedu/awe/model/payment/PaymentTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"ramapriyan912001"},"content":"package seedu.awe.model.payment;","lastModifiedDate":"2021-10-27"},{"lineNumber":2,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":3,"author":{"gitId":"ramapriyan912001"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-27"},{"lineNumber":4,"author":{"gitId":"ramapriyan912001"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-10-31"},{"lineNumber":5,"author":{"gitId":"ramapriyan912001"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2021-10-31"},{"lineNumber":6,"author":{"gitId":"ramapriyan912001"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-31"},{"lineNumber":7,"author":{"gitId":"ramapriyan912001"},"content":"import static seedu.awe.testutil.Assert.assertThrows;","lastModifiedDate":"2021-10-27"},{"lineNumber":8,"author":{"gitId":"ramapriyan912001"},"content":"import static seedu.awe.testutil.TypicalPayments.ALICE_BOB_COST;","lastModifiedDate":"2021-10-27"},{"lineNumber":9,"author":{"gitId":"ramapriyan912001"},"content":"import static seedu.awe.testutil.TypicalPayments.ALICE_BOB_PAYMENT;","lastModifiedDate":"2021-10-27"},{"lineNumber":10,"author":{"gitId":"ramapriyan912001"},"content":"import static seedu.awe.testutil.TypicalPayments.ALICE_CARL_PAYMENT;","lastModifiedDate":"2021-10-31"},{"lineNumber":11,"author":{"gitId":"ramapriyan912001"},"content":"import static seedu.awe.testutil.TypicalPayments.AMY_ELLE_PAYMENT;","lastModifiedDate":"2021-10-31"},{"lineNumber":12,"author":{"gitId":"ramapriyan912001"},"content":"import static seedu.awe.testutil.TypicalPayments.CARL_DANIEL_COST;","lastModifiedDate":"2021-10-27"},{"lineNumber":13,"author":{"gitId":"ramapriyan912001"},"content":"import static seedu.awe.testutil.TypicalPayments.CARL_DANIEL_PAYMENT;","lastModifiedDate":"2021-10-27"},{"lineNumber":14,"author":{"gitId":"ramapriyan912001"},"content":"import static seedu.awe.testutil.TypicalPayments.DANIEL_FIONA_PAYMENT;","lastModifiedDate":"2021-10-31"},{"lineNumber":15,"author":{"gitId":"ramapriyan912001"},"content":"import static seedu.awe.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2021-10-27"},{"lineNumber":16,"author":{"gitId":"ramapriyan912001"},"content":"import static seedu.awe.testutil.TypicalPersons.BOB;","lastModifiedDate":"2021-10-27"},{"lineNumber":17,"author":{"gitId":"ramapriyan912001"},"content":"import static seedu.awe.testutil.TypicalPersons.CARL;","lastModifiedDate":"2021-10-27"},{"lineNumber":18,"author":{"gitId":"ramapriyan912001"},"content":"import static seedu.awe.testutil.TypicalPersons.DANIEL;","lastModifiedDate":"2021-10-27"},{"lineNumber":19,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":20,"author":{"gitId":"ramapriyan912001"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-31"},{"lineNumber":21,"author":{"gitId":"ramapriyan912001"},"content":"import java.util.Comparator;","lastModifiedDate":"2021-10-31"},{"lineNumber":22,"author":{"gitId":"ramapriyan912001"},"content":"import java.util.List;","lastModifiedDate":"2021-10-31"},{"lineNumber":23,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":24,"author":{"gitId":"ramapriyan912001"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-31"},{"lineNumber":25,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":26,"author":{"gitId":"ramapriyan912001"},"content":"import seedu.awe.model.expense.Cost;","lastModifiedDate":"2021-10-31"},{"lineNumber":27,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":28,"author":{"gitId":"ramapriyan912001"},"content":"public class PaymentTest {","lastModifiedDate":"2021-10-27"},{"lineNumber":29,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":30,"author":{"gitId":"ramapriyan912001"},"content":"    @Test","lastModifiedDate":"2021-10-27"},{"lineNumber":31,"author":{"gitId":"ramapriyan912001"},"content":"    public void getPayer_success() {","lastModifiedDate":"2021-10-27"},{"lineNumber":32,"author":{"gitId":"ramapriyan912001"},"content":"        assertEquals(ALICE, ALICE_BOB_PAYMENT.getPayer());","lastModifiedDate":"2021-10-27"},{"lineNumber":33,"author":{"gitId":"ramapriyan912001"},"content":"        assertEquals(CARL, CARL_DANIEL_PAYMENT.getPayer());","lastModifiedDate":"2021-10-27"},{"lineNumber":34,"author":{"gitId":"ramapriyan912001"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":35,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":36,"author":{"gitId":"ramapriyan912001"},"content":"    @Test","lastModifiedDate":"2021-10-27"},{"lineNumber":37,"author":{"gitId":"ramapriyan912001"},"content":"    public void nullPayer_throwsNullPointerException() {","lastModifiedDate":"2021-10-27"},{"lineNumber":38,"author":{"gitId":"ramapriyan912001"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Payment(null, BOB, ALICE_BOB_COST));","lastModifiedDate":"2021-10-27"},{"lineNumber":39,"author":{"gitId":"ramapriyan912001"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":40,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":41,"author":{"gitId":"ramapriyan912001"},"content":"    @Test","lastModifiedDate":"2021-10-27"},{"lineNumber":42,"author":{"gitId":"ramapriyan912001"},"content":"    public void getPayee_success() {","lastModifiedDate":"2021-10-27"},{"lineNumber":43,"author":{"gitId":"ramapriyan912001"},"content":"        assertEquals(BOB, ALICE_BOB_PAYMENT.getPayee());","lastModifiedDate":"2021-10-27"},{"lineNumber":44,"author":{"gitId":"ramapriyan912001"},"content":"        assertEquals(DANIEL, CARL_DANIEL_PAYMENT.getPayee());","lastModifiedDate":"2021-10-27"},{"lineNumber":45,"author":{"gitId":"ramapriyan912001"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":46,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":47,"author":{"gitId":"ramapriyan912001"},"content":"    @Test","lastModifiedDate":"2021-10-27"},{"lineNumber":48,"author":{"gitId":"ramapriyan912001"},"content":"    public void nullPayee_throwsNullPointerException() {","lastModifiedDate":"2021-10-27"},{"lineNumber":49,"author":{"gitId":"ramapriyan912001"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Payment(ALICE, null, ALICE_BOB_COST));","lastModifiedDate":"2021-10-27"},{"lineNumber":50,"author":{"gitId":"ramapriyan912001"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":51,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":52,"author":{"gitId":"ramapriyan912001"},"content":"    @Test","lastModifiedDate":"2021-10-27"},{"lineNumber":53,"author":{"gitId":"ramapriyan912001"},"content":"    public void getCost_success() {","lastModifiedDate":"2021-10-27"},{"lineNumber":54,"author":{"gitId":"ramapriyan912001"},"content":"        assertEquals(ALICE_BOB_COST, ALICE_BOB_PAYMENT.getCost());","lastModifiedDate":"2021-10-27"},{"lineNumber":55,"author":{"gitId":"ramapriyan912001"},"content":"        assertEquals(CARL_DANIEL_COST, CARL_DANIEL_PAYMENT.getCost());","lastModifiedDate":"2021-10-27"},{"lineNumber":56,"author":{"gitId":"ramapriyan912001"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":57,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":58,"author":{"gitId":"ramapriyan912001"},"content":"    @Test","lastModifiedDate":"2021-10-27"},{"lineNumber":59,"author":{"gitId":"ramapriyan912001"},"content":"    public void nullCost_throwsNullPointerException() {","lastModifiedDate":"2021-10-27"},{"lineNumber":60,"author":{"gitId":"ramapriyan912001"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Payment(ALICE, BOB, null));","lastModifiedDate":"2021-10-27"},{"lineNumber":61,"author":{"gitId":"ramapriyan912001"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":62,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":63,"author":{"gitId":"ramapriyan912001"},"content":"    @Test","lastModifiedDate":"2021-10-31"},{"lineNumber":64,"author":{"gitId":"ramapriyan912001"},"content":"    public void toString_test() {","lastModifiedDate":"2021-10-31"},{"lineNumber":65,"author":{"gitId":"ramapriyan912001"},"content":"        assertEquals(new Payment(ALICE, BOB, new Cost(10.0)).toString(),","lastModifiedDate":"2021-10-31"},{"lineNumber":66,"author":{"gitId":"ramapriyan912001"},"content":"                \"Bob Choo pays $10.00 to Alice Pauline.\");","lastModifiedDate":"2021-10-31"},{"lineNumber":67,"author":{"gitId":"ramapriyan912001"},"content":"    }","lastModifiedDate":"2021-10-31"},{"lineNumber":68,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":69,"author":{"gitId":"ramapriyan912001"},"content":"    @Test","lastModifiedDate":"2021-10-31"},{"lineNumber":70,"author":{"gitId":"ramapriyan912001"},"content":"    public void equals() {","lastModifiedDate":"2021-10-31"},{"lineNumber":71,"author":{"gitId":"ramapriyan912001"},"content":"        Payment aliceBobPayment \u003d new Payment(ALICE, BOB, new Cost(10.0));","lastModifiedDate":"2021-10-31"},{"lineNumber":72,"author":{"gitId":"ramapriyan912001"},"content":"        assertFalse(aliceBobPayment.equals(10.0));","lastModifiedDate":"2021-10-31"},{"lineNumber":73,"author":{"gitId":"ramapriyan912001"},"content":"        assertTrue(aliceBobPayment.equals(aliceBobPayment));","lastModifiedDate":"2021-10-31"},{"lineNumber":74,"author":{"gitId":"ramapriyan912001"},"content":"        assertTrue(aliceBobPayment.equals(new Payment(ALICE, BOB, new Cost(10.0))));","lastModifiedDate":"2021-10-31"},{"lineNumber":75,"author":{"gitId":"ramapriyan912001"},"content":"        assertFalse(aliceBobPayment.equals(new Payment(BOB, ALICE, new Cost(10.0))));","lastModifiedDate":"2021-10-31"},{"lineNumber":76,"author":{"gitId":"ramapriyan912001"},"content":"        assertFalse(aliceBobPayment.equals(new Payment(BOB, ALICE, new Cost(20.0))));","lastModifiedDate":"2021-10-31"},{"lineNumber":77,"author":{"gitId":"ramapriyan912001"},"content":"        assertFalse(aliceBobPayment.equals(new Payment(ALICE, CARL, new Cost(10.0))));","lastModifiedDate":"2021-10-31"},{"lineNumber":78,"author":{"gitId":"ramapriyan912001"},"content":"        assertFalse(aliceBobPayment.equals(new Payment(ALICE, CARL, new Cost(20.0))));","lastModifiedDate":"2021-10-31"},{"lineNumber":79,"author":{"gitId":"ramapriyan912001"},"content":"        assertFalse(aliceBobPayment.equals(new Payment(CARL, BOB, new Cost(10.0))));","lastModifiedDate":"2021-10-31"},{"lineNumber":80,"author":{"gitId":"ramapriyan912001"},"content":"        assertFalse(aliceBobPayment.equals(new Payment(CARL, BOB, new Cost(20.0))));","lastModifiedDate":"2021-10-31"},{"lineNumber":81,"author":{"gitId":"ramapriyan912001"},"content":"        assertFalse(aliceBobPayment.equals(new Payment(ALICE, BOB, new Cost(20.0))));","lastModifiedDate":"2021-10-31"},{"lineNumber":82,"author":{"gitId":"ramapriyan912001"},"content":"    }","lastModifiedDate":"2021-10-31"},{"lineNumber":83,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":84,"author":{"gitId":"ramapriyan912001"},"content":"    @Test","lastModifiedDate":"2021-10-31"},{"lineNumber":85,"author":{"gitId":"ramapriyan912001"},"content":"    public void hashcode() {","lastModifiedDate":"2021-10-31"},{"lineNumber":86,"author":{"gitId":"ramapriyan912001"},"content":"        Payment aliceBobPayment \u003d new Payment(ALICE, BOB, new Cost(10.0));","lastModifiedDate":"2021-10-31"},{"lineNumber":87,"author":{"gitId":"ramapriyan912001"},"content":"        assertEquals(aliceBobPayment.hashCode(), aliceBobPayment.hashCode());","lastModifiedDate":"2021-10-31"},{"lineNumber":88,"author":{"gitId":"ramapriyan912001"},"content":"        assertEquals(aliceBobPayment.hashCode(), new Payment(ALICE, BOB, new Cost(10.0)).hashCode());","lastModifiedDate":"2021-10-31"},{"lineNumber":89,"author":{"gitId":"ramapriyan912001"},"content":"        assertNotEquals(aliceBobPayment.hashCode(), new Payment(ALICE, CARL, new Cost(10.0)).hashCode());","lastModifiedDate":"2021-10-31"},{"lineNumber":90,"author":{"gitId":"ramapriyan912001"},"content":"    }","lastModifiedDate":"2021-10-31"},{"lineNumber":91,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":92,"author":{"gitId":"ramapriyan912001"},"content":"    @Test","lastModifiedDate":"2021-10-31"},{"lineNumber":93,"author":{"gitId":"ramapriyan912001"},"content":"    public void comparator_test() {","lastModifiedDate":"2021-10-31"},{"lineNumber":94,"author":{"gitId":"ramapriyan912001"},"content":"        List\u003cPayment\u003e payments \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-31"},{"lineNumber":95,"author":{"gitId":"ramapriyan912001"},"content":"        payments.add(ALICE_CARL_PAYMENT);","lastModifiedDate":"2021-10-31"},{"lineNumber":96,"author":{"gitId":"ramapriyan912001"},"content":"        payments.add(AMY_ELLE_PAYMENT);","lastModifiedDate":"2021-10-31"},{"lineNumber":97,"author":{"gitId":"ramapriyan912001"},"content":"        payments.add(ALICE_BOB_PAYMENT);","lastModifiedDate":"2021-10-31"},{"lineNumber":98,"author":{"gitId":"ramapriyan912001"},"content":"        payments.add(DANIEL_FIONA_PAYMENT);","lastModifiedDate":"2021-10-31"},{"lineNumber":99,"author":{"gitId":"ramapriyan912001"},"content":"        payments.sort(new Comparator\u003cPayment\u003e() {","lastModifiedDate":"2021-10-31"},{"lineNumber":100,"author":{"gitId":"ramapriyan912001"},"content":"            @Override","lastModifiedDate":"2021-10-31"},{"lineNumber":101,"author":{"gitId":"ramapriyan912001"},"content":"            public int compare(Payment payment, Payment t1) {","lastModifiedDate":"2021-10-31"},{"lineNumber":102,"author":{"gitId":"ramapriyan912001"},"content":"                return payment.compareTo(t1);","lastModifiedDate":"2021-10-31"},{"lineNumber":103,"author":{"gitId":"ramapriyan912001"},"content":"            }","lastModifiedDate":"2021-10-31"},{"lineNumber":104,"author":{"gitId":"ramapriyan912001"},"content":"        });","lastModifiedDate":"2021-10-31"},{"lineNumber":105,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":106,"author":{"gitId":"ramapriyan912001"},"content":"        List\u003cPayment\u003e expectedPayments \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-31"},{"lineNumber":107,"author":{"gitId":"ramapriyan912001"},"content":"        expectedPayments.add(ALICE_BOB_PAYMENT);","lastModifiedDate":"2021-10-31"},{"lineNumber":108,"author":{"gitId":"ramapriyan912001"},"content":"        expectedPayments.add(ALICE_CARL_PAYMENT);","lastModifiedDate":"2021-10-31"},{"lineNumber":109,"author":{"gitId":"ramapriyan912001"},"content":"        expectedPayments.add(AMY_ELLE_PAYMENT);","lastModifiedDate":"2021-10-31"},{"lineNumber":110,"author":{"gitId":"ramapriyan912001"},"content":"        expectedPayments.add(DANIEL_FIONA_PAYMENT);","lastModifiedDate":"2021-10-31"},{"lineNumber":111,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":112,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":113,"author":{"gitId":"ramapriyan912001"},"content":"        int i \u003d 0;","lastModifiedDate":"2021-10-31"},{"lineNumber":114,"author":{"gitId":"ramapriyan912001"},"content":"        while (i \u003c 4) {","lastModifiedDate":"2021-10-31"},{"lineNumber":115,"author":{"gitId":"ramapriyan912001"},"content":"            assertEquals(payments.get(i), expectedPayments.get(i));","lastModifiedDate":"2021-10-31"},{"lineNumber":116,"author":{"gitId":"ramapriyan912001"},"content":"            i++;","lastModifiedDate":"2021-10-31"},{"lineNumber":117,"author":{"gitId":"ramapriyan912001"},"content":"        }","lastModifiedDate":"2021-10-31"},{"lineNumber":118,"author":{"gitId":"ramapriyan912001"},"content":"    }","lastModifiedDate":"2021-10-31"},{"lineNumber":119,"author":{"gitId":"ramapriyan912001"},"content":"}","lastModifiedDate":"2021-10-27"}],"authorContributionMap":{"ramapriyan912001":119}},{"path":"src/test/java/seedu/awe/model/person/NameContainsKeywordsPredicateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"ramapriyan912001"},"content":"package seedu.awe.model.person;","lastModifiedDate":"2021-10-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-12"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-06-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":12,"author":{"gitId":"ramapriyan912001"},"content":"import seedu.awe.testutil.PersonBuilder;","lastModifiedDate":"2021-10-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class NameContainsKeywordsPredicateTest {","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        List\u003cString\u003e firstPredicateKeywordList \u003d Collections.singletonList(\"first\");","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        List\u003cString\u003e secondPredicateKeywordList \u003d Arrays.asList(\"first\", \"second\");","lastModifiedDate":"2017-06-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate firstPredicate \u003d new NameContainsKeywordsPredicate(firstPredicateKeywordList);","lastModifiedDate":"2017-06-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate secondPredicate \u003d new NameContainsKeywordsPredicate(secondPredicateKeywordList);","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        assertTrue(firstPredicate.equals(firstPredicate));","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate firstPredicateCopy \u003d new NameContainsKeywordsPredicate(firstPredicateKeywordList);","lastModifiedDate":"2017-06-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertTrue(firstPredicate.equals(firstPredicateCopy));","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertFalse(firstPredicate.equals(1));","lastModifiedDate":"2017-06-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        assertFalse(firstPredicate.equals(null));","lastModifiedDate":"2017-06-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2017-06-12"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertFalse(firstPredicate.equals(secondPredicate));","lastModifiedDate":"2017-06-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public void test_nameContainsKeywords_returnsTrue() {","lastModifiedDate":"2017-08-15"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        // One keyword","lastModifiedDate":"2017-06-12"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate \u003d new NameContainsKeywordsPredicate(Collections.singletonList(\"Alice\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertTrue(predicate.test(new PersonBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2017-06-12"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        // Multiple keywords","lastModifiedDate":"2017-06-12"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"Alice\", \"Bob\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertTrue(predicate.test(new PersonBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2017-06-12"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        // Only one matching keyword","lastModifiedDate":"2017-06-12"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"Bob\", \"Carol\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertTrue(predicate.test(new PersonBuilder().withName(\"Alice Carol\").build()));","lastModifiedDate":"2017-06-12"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        // Mixed-case keywords","lastModifiedDate":"2017-06-12"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"aLIce\", \"bOB\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertTrue(predicate.test(new PersonBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2017-06-12"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public void test_nameDoesNotContainKeywords_returnsFalse() {","lastModifiedDate":"2017-08-15"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        // Zero keywords","lastModifiedDate":"2017-06-12"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate \u003d new NameContainsKeywordsPredicate(Collections.emptyList());","lastModifiedDate":"2017-06-12"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertFalse(predicate.test(new PersonBuilder().withName(\"Alice\").build()));","lastModifiedDate":"2017-06-12"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        // Non-matching keyword","lastModifiedDate":"2017-06-12"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"Carol\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertFalse(predicate.test(new PersonBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2017-06-12"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":70,"author":{"gitId":"marcuspeh"},"content":"        // Keywords match phone and awe, but does not match name","lastModifiedDate":"2021-11-01"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        predicate \u003d new NameContainsKeywordsPredicate(Arrays.asList(\"12345\", \"alice@email.com\", \"Main\", \"Street\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":72,"author":{"gitId":"marcuspeh"},"content":"        assertFalse(predicate.test(new PersonBuilder().withName(\"Alice\").withPhone(\"12345\").build()));","lastModifiedDate":"2021-11-01"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":74,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"marcuspeh":2,"ramapriyan912001":2,"-":70}},{"path":"src/test/java/seedu/awe/model/person/NameTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"ramapriyan912001"},"content":"package seedu.awe.model.person;","lastModifiedDate":"2021-10-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"ramapriyan912001"},"content":"import static seedu.awe.testutil.Assert.assertThrows;","lastModifiedDate":"2021-10-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class NameTest {","lastModifiedDate":"2017-01-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2017-12-04"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Name(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void constructor_invalidName_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        String invalidName \u003d \"\";","lastModifiedDate":"2017-05-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Name(invalidName));","lastModifiedDate":"2019-03-14"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":22,"author":{"gitId":"marcuspeh"},"content":"    @Test","lastModifiedDate":"2021-11-01"},{"lineNumber":23,"author":{"gitId":"marcuspeh"},"content":"    public void constructor_tooLongName_throwsIllegalArgumentException() {","lastModifiedDate":"2021-11-01"},{"lineNumber":24,"author":{"gitId":"marcuspeh"},"content":"        String invalidName \u003d \"123456789012345678901234567890123456789012345678901\";","lastModifiedDate":"2021-11-01"},{"lineNumber":25,"author":{"gitId":"marcuspeh"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Name(invalidName));","lastModifiedDate":"2021-11-01"},{"lineNumber":26,"author":{"gitId":"marcuspeh"},"content":"    }","lastModifiedDate":"2021-11-01"},{"lineNumber":27,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-01-16"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public void isValidName() {","lastModifiedDate":"2017-01-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        // null name","lastModifiedDate":"2017-12-04"},{"lineNumber":31,"author":{"gitId":"ramapriyan912001"},"content":"        assertThrows(NullPointerException.class, () -\u003e Name.isValidGroupName(null));","lastModifiedDate":"2021-10-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        // invalid name","lastModifiedDate":"2017-01-16"},{"lineNumber":34,"author":{"gitId":"ramapriyan912001"},"content":"        assertFalse(Name.isValidGroupName(\"\")); // empty string","lastModifiedDate":"2021-10-05"},{"lineNumber":35,"author":{"gitId":"ramapriyan912001"},"content":"        assertFalse(Name.isValidGroupName(\" \")); // spaces only","lastModifiedDate":"2021-10-05"},{"lineNumber":36,"author":{"gitId":"ramapriyan912001"},"content":"        assertFalse(Name.isValidGroupName(\"^\")); // only non-alphanumeric characters","lastModifiedDate":"2021-10-05"},{"lineNumber":37,"author":{"gitId":"ramapriyan912001"},"content":"        assertFalse(Name.isValidGroupName(\"peter*\")); // contains non-alphanumeric characters","lastModifiedDate":"2021-10-05"},{"lineNumber":38,"author":{"gitId":"marcuspeh"},"content":"        assertFalse(Name.isValidGroupName(\"123456789012345678901234567\"","lastModifiedDate":"2021-11-01"},{"lineNumber":39,"author":{"gitId":"marcuspeh"},"content":"                + \"890123456789012345678901\")); // contains more than 50 characters","lastModifiedDate":"2021-11-01"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        // valid name","lastModifiedDate":"2017-01-16"},{"lineNumber":42,"author":{"gitId":"ramapriyan912001"},"content":"        assertTrue(Name.isValidGroupName(\"peter jack\")); // alphabets only","lastModifiedDate":"2021-10-05"},{"lineNumber":43,"author":{"gitId":"ramapriyan912001"},"content":"        assertTrue(Name.isValidGroupName(\"12345\")); // numbers only","lastModifiedDate":"2021-10-05"},{"lineNumber":44,"author":{"gitId":"ramapriyan912001"},"content":"        assertTrue(Name.isValidGroupName(\"peter the 2nd\")); // alphanumeric characters","lastModifiedDate":"2021-10-05"},{"lineNumber":45,"author":{"gitId":"ramapriyan912001"},"content":"        assertTrue(Name.isValidGroupName(\"Capital Tan\")); // with capital letters","lastModifiedDate":"2021-10-05"},{"lineNumber":46,"author":{"gitId":"ramapriyan912001"},"content":"        assertTrue(Name.isValidGroupName(\"David Roger Jackson Ray Jr 2nd\")); // long names","lastModifiedDate":"2021-10-05"},{"lineNumber":47,"author":{"gitId":"marcuspeh"},"content":"        assertTrue(Name.isValidGroupName(\"123456789012345678901234567\"","lastModifiedDate":"2021-11-01"},{"lineNumber":48,"author":{"gitId":"marcuspeh"},"content":"                + \"89012345678901234567890\")); // contains exactly 50 characters","lastModifiedDate":"2021-11-01"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-16"},{"lineNumber":50,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":51,"author":{"gitId":"marcuspeh"},"content":"    @Test","lastModifiedDate":"2021-11-01"},{"lineNumber":52,"author":{"gitId":"marcuspeh"},"content":"    public void equals() {","lastModifiedDate":"2021-11-01"},{"lineNumber":53,"author":{"gitId":"marcuspeh"},"content":"        Name name \u003d new Name(\"John\");","lastModifiedDate":"2021-11-01"},{"lineNumber":54,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":55,"author":{"gitId":"marcuspeh"},"content":"        // same instance -\u003e true","lastModifiedDate":"2021-11-01"},{"lineNumber":56,"author":{"gitId":"marcuspeh"},"content":"        assertTrue(name.equals(name));","lastModifiedDate":"2021-11-01"},{"lineNumber":57,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":58,"author":{"gitId":"marcuspeh"},"content":"        // null -\u003e false","lastModifiedDate":"2021-11-01"},{"lineNumber":59,"author":{"gitId":"marcuspeh"},"content":"        assertFalse(name.equals(null));","lastModifiedDate":"2021-11-01"},{"lineNumber":60,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":61,"author":{"gitId":"marcuspeh"},"content":"        // String is passed in -\u003e false","lastModifiedDate":"2021-11-01"},{"lineNumber":62,"author":{"gitId":"marcuspeh"},"content":"        assertFalse(name.equals(\"John\"));","lastModifiedDate":"2021-11-01"},{"lineNumber":63,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":64,"author":{"gitId":"marcuspeh"},"content":"        // different name -\u003e return false","lastModifiedDate":"2021-11-01"},{"lineNumber":65,"author":{"gitId":"marcuspeh"},"content":"        assertFalse(name.equals(new Name(\"Amy\")));","lastModifiedDate":"2021-11-01"},{"lineNumber":66,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":67,"author":{"gitId":"marcuspeh"},"content":"        // different case -\u003e return false","lastModifiedDate":"2021-11-01"},{"lineNumber":68,"author":{"gitId":"marcuspeh"},"content":"        assertFalse(name.equals(new Name(\"john\")));","lastModifiedDate":"2021-11-01"},{"lineNumber":69,"author":{"gitId":"marcuspeh"},"content":"    }","lastModifiedDate":"2021-11-01"},{"lineNumber":70,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-16"}],"authorContributionMap":{"marcuspeh":30,"ramapriyan912001":12,"-":28}},{"path":"src/test/java/seedu/awe/model/person/PersonTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"ramapriyan912001"},"content":"package seedu.awe.model.person;","lastModifiedDate":"2021-10-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":3,"author":{"gitId":"marcuspeh"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-11-01"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"ramapriyan912001"},"content":"import static seedu.awe.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2021-10-05"},{"lineNumber":7,"author":{"gitId":"ramapriyan912001"},"content":"import static seedu.awe.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2021-10-05"},{"lineNumber":8,"author":{"gitId":"ramapriyan912001"},"content":"import static seedu.awe.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2021-10-05"},{"lineNumber":9,"author":{"gitId":"ramapriyan912001"},"content":"import static seedu.awe.testutil.Assert.assertThrows;","lastModifiedDate":"2021-10-05"},{"lineNumber":10,"author":{"gitId":"marcuspeh"},"content":"import static seedu.awe.testutil.TypicalGroups.BALI;","lastModifiedDate":"2021-11-01"},{"lineNumber":11,"author":{"gitId":"marcuspeh"},"content":"import static seedu.awe.testutil.TypicalGroups.DOHA;","lastModifiedDate":"2021-11-01"},{"lineNumber":12,"author":{"gitId":"marcuspeh"},"content":"import static seedu.awe.testutil.TypicalGroups.INDIA;","lastModifiedDate":"2021-11-01"},{"lineNumber":13,"author":{"gitId":"marcuspeh"},"content":"import static seedu.awe.testutil.TypicalGroups.OSLO;","lastModifiedDate":"2021-11-01"},{"lineNumber":14,"author":{"gitId":"ramapriyan912001"},"content":"import static seedu.awe.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2021-10-05"},{"lineNumber":15,"author":{"gitId":"ramapriyan912001"},"content":"import static seedu.awe.testutil.TypicalPersons.BOB;","lastModifiedDate":"2021-10-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":17,"author":{"gitId":"marcuspeh"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-11-01"},{"lineNumber":18,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":21,"author":{"gitId":"marcuspeh"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2021-11-01"},{"lineNumber":22,"author":{"gitId":"marcuspeh"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-11-01"},{"lineNumber":23,"author":{"gitId":"marcuspeh"},"content":"import seedu.awe.model.group.Group;","lastModifiedDate":"2021-11-01"},{"lineNumber":24,"author":{"gitId":"ramapriyan912001"},"content":"import seedu.awe.testutil.PersonBuilder;","lastModifiedDate":"2021-10-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":26,"author":{"gitId":"-"},"content":"public class PersonTest {","lastModifiedDate":"2018-03-26"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public void asObservableList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        Person person \u003d new PersonBuilder().build();","lastModifiedDate":"2018-03-26"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e person.getTags().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-19"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public void isSamePerson() {","lastModifiedDate":"2018-04-19"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2018-04-19"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.isSamePerson(ALICE));","lastModifiedDate":"2018-04-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.isSamePerson(null));","lastModifiedDate":"2018-04-19"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        // same name, all other attributes different -\u003e returns true","lastModifiedDate":"2020-12-18"},{"lineNumber":43,"author":{"gitId":"marcuspeh"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2021-11-01"},{"lineNumber":44,"author":{"gitId":"marcuspeh"},"content":"                .withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2021-11-01"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.isSamePerson(editedAlice));","lastModifiedDate":"2020-12-18"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        // different name, all other attributes same -\u003e returns false","lastModifiedDate":"2020-12-18"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.isSamePerson(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        // name differs in case, all other attributes same -\u003e returns false","lastModifiedDate":"2020-12-18"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        Person editedBob \u003d new PersonBuilder(BOB).withName(VALID_NAME_BOB.toLowerCase()).build();","lastModifiedDate":"2020-12-18"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertFalse(BOB.isSamePerson(editedBob));","lastModifiedDate":"2020-12-18"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        // name has trailing spaces, all other attributes same -\u003e returns false","lastModifiedDate":"2020-12-18"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        String nameWithTrailingSpaces \u003d VALID_NAME_BOB + \" \";","lastModifiedDate":"2020-12-18"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        editedBob \u003d new PersonBuilder(BOB).withName(nameWithTrailingSpaces).build();","lastModifiedDate":"2020-12-18"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertFalse(BOB.isSamePerson(editedBob));","lastModifiedDate":"2020-12-18"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":61,"author":{"gitId":"marcuspeh"},"content":"    @Test","lastModifiedDate":"2021-11-01"},{"lineNumber":62,"author":{"gitId":"marcuspeh"},"content":"    public void getPersonGroups_personInAGroup_success() {","lastModifiedDate":"2021-11-01"},{"lineNumber":63,"author":{"gitId":"marcuspeh"},"content":"        ObservableList\u003cGroup\u003e groups \u003d FXCollections.observableArrayList(BALI, OSLO);","lastModifiedDate":"2021-11-01"},{"lineNumber":64,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":65,"author":{"gitId":"marcuspeh"},"content":"        ArrayList\u003cGroup\u003e expectedList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-11-01"},{"lineNumber":66,"author":{"gitId":"marcuspeh"},"content":"        expectedList.add(BALI);","lastModifiedDate":"2021-11-01"},{"lineNumber":67,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":68,"author":{"gitId":"marcuspeh"},"content":"        assertEquals(expectedList, ALICE.getPersonGroups(groups));","lastModifiedDate":"2021-11-01"},{"lineNumber":69,"author":{"gitId":"marcuspeh"},"content":"    }","lastModifiedDate":"2021-11-01"},{"lineNumber":70,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":71,"author":{"gitId":"marcuspeh"},"content":"    @Test","lastModifiedDate":"2021-11-01"},{"lineNumber":72,"author":{"gitId":"marcuspeh"},"content":"    public void getPersonGroups_personInMultipleGroup_success() {","lastModifiedDate":"2021-11-01"},{"lineNumber":73,"author":{"gitId":"marcuspeh"},"content":"        ObservableList\u003cGroup\u003e groups \u003d FXCollections.observableArrayList(BALI, OSLO, DOHA);","lastModifiedDate":"2021-11-01"},{"lineNumber":74,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":75,"author":{"gitId":"marcuspeh"},"content":"        ArrayList\u003cGroup\u003e expectedList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-11-01"},{"lineNumber":76,"author":{"gitId":"marcuspeh"},"content":"        expectedList.add(BALI);","lastModifiedDate":"2021-11-01"},{"lineNumber":77,"author":{"gitId":"marcuspeh"},"content":"        expectedList.add(DOHA);","lastModifiedDate":"2021-11-01"},{"lineNumber":78,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":79,"author":{"gitId":"marcuspeh"},"content":"        assertEquals(expectedList, ALICE.getPersonGroups(groups));","lastModifiedDate":"2021-11-01"},{"lineNumber":80,"author":{"gitId":"marcuspeh"},"content":"    }","lastModifiedDate":"2021-11-01"},{"lineNumber":81,"author":{"gitId":"marcuspeh"},"content":"    @Test","lastModifiedDate":"2021-11-01"},{"lineNumber":82,"author":{"gitId":"marcuspeh"},"content":"    public void getPersonGroups_personNotInGroup_success() {","lastModifiedDate":"2021-11-01"},{"lineNumber":83,"author":{"gitId":"marcuspeh"},"content":"        ObservableList\u003cGroup\u003e groups \u003d FXCollections.observableArrayList(INDIA, OSLO);","lastModifiedDate":"2021-11-01"},{"lineNumber":84,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":85,"author":{"gitId":"marcuspeh"},"content":"        ArrayList\u003cGroup\u003e expectedList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-11-01"},{"lineNumber":86,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":87,"author":{"gitId":"marcuspeh"},"content":"        assertEquals(expectedList, ALICE.getPersonGroups(groups));","lastModifiedDate":"2021-11-01"},{"lineNumber":88,"author":{"gitId":"marcuspeh"},"content":"    }","lastModifiedDate":"2021-11-01"},{"lineNumber":89,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":90,"author":{"gitId":"marcuspeh"},"content":"    @Test","lastModifiedDate":"2021-11-01"},{"lineNumber":91,"author":{"gitId":"marcuspeh"},"content":"    public void getGroupName_personInAGroup_success() {","lastModifiedDate":"2021-11-01"},{"lineNumber":92,"author":{"gitId":"marcuspeh"},"content":"        ObservableList\u003cGroup\u003e groups \u003d FXCollections.observableArrayList(BALI, OSLO);","lastModifiedDate":"2021-11-01"},{"lineNumber":93,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":94,"author":{"gitId":"marcuspeh"},"content":"        String expectedResult \u003d BALI.getGroupName().getName();","lastModifiedDate":"2021-11-01"},{"lineNumber":95,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":96,"author":{"gitId":"marcuspeh"},"content":"        assertEquals(expectedResult, ALICE.getGroupsName(groups));","lastModifiedDate":"2021-11-01"},{"lineNumber":97,"author":{"gitId":"marcuspeh"},"content":"    }","lastModifiedDate":"2021-11-01"},{"lineNumber":98,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":99,"author":{"gitId":"marcuspeh"},"content":"    @Test","lastModifiedDate":"2021-11-01"},{"lineNumber":100,"author":{"gitId":"marcuspeh"},"content":"    public void getGroupName_personInMultipleGroup_success() {","lastModifiedDate":"2021-11-01"},{"lineNumber":101,"author":{"gitId":"marcuspeh"},"content":"        ObservableList\u003cGroup\u003e groups \u003d FXCollections.observableArrayList(BALI, OSLO, DOHA);","lastModifiedDate":"2021-11-01"},{"lineNumber":102,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":103,"author":{"gitId":"marcuspeh"},"content":"        String expectedResult \u003d String.format(\"%s, %s\", BALI.getGroupName().getName(), DOHA.getGroupName().getName());","lastModifiedDate":"2021-11-01"},{"lineNumber":104,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":105,"author":{"gitId":"marcuspeh"},"content":"        assertEquals(expectedResult, ALICE.getGroupsName(groups));","lastModifiedDate":"2021-11-01"},{"lineNumber":106,"author":{"gitId":"marcuspeh"},"content":"    }","lastModifiedDate":"2021-11-01"},{"lineNumber":107,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":108,"author":{"gitId":"marcuspeh"},"content":"    @Test","lastModifiedDate":"2021-11-01"},{"lineNumber":109,"author":{"gitId":"marcuspeh"},"content":"    public void getGroupName_personNotInGroup_success() {","lastModifiedDate":"2021-11-01"},{"lineNumber":110,"author":{"gitId":"marcuspeh"},"content":"        ObservableList\u003cGroup\u003e groups \u003d FXCollections.observableArrayList(INDIA, OSLO);","lastModifiedDate":"2021-11-01"},{"lineNumber":111,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":112,"author":{"gitId":"marcuspeh"},"content":"        String expectedResult \u003d \"\";","lastModifiedDate":"2021-11-01"},{"lineNumber":113,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":114,"author":{"gitId":"marcuspeh"},"content":"        assertEquals(expectedResult, ALICE.getGroupsName(groups));","lastModifiedDate":"2021-11-01"},{"lineNumber":115,"author":{"gitId":"marcuspeh"},"content":"    }","lastModifiedDate":"2021-11-01"},{"lineNumber":116,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-19"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-04-19"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2018-04-19"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        Person aliceCopy \u003d new PersonBuilder(ALICE).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.equals(aliceCopy));","lastModifiedDate":"2018-04-19"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2018-04-19"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.equals(ALICE));","lastModifiedDate":"2018-04-19"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(null));","lastModifiedDate":"2018-04-19"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        // different type -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(5));","lastModifiedDate":"2018-04-19"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(BOB));","lastModifiedDate":"2018-04-19"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        // different name -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        // different phone -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        // different tags -\u003e returns false","lastModifiedDate":"2018-04-18"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2018-04-18"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-18"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":147,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-09-01"}],"authorContributionMap":{"marcuspeh":68,"ramapriyan912001":8,"-":71}},{"path":"src/test/java/seedu/awe/model/person/PhoneTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"ramapriyan912001"},"content":"package seedu.awe.model.person;","lastModifiedDate":"2021-10-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"ramapriyan912001"},"content":"import static seedu.awe.testutil.Assert.assertThrows;","lastModifiedDate":"2021-10-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class PhoneTest {","lastModifiedDate":"2017-01-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2017-12-04"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Phone(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void constructor_invalidPhone_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        String invalidPhone \u003d \"\";","lastModifiedDate":"2017-05-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Phone(invalidPhone));","lastModifiedDate":"2019-03-14"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-01-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public void isValidPhone() {","lastModifiedDate":"2017-01-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        // null phone number","lastModifiedDate":"2017-12-04"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e Phone.isValidPhone(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        // invalid phone numbers","lastModifiedDate":"2017-01-16"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\"\")); // empty string","lastModifiedDate":"2017-01-16"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\" \")); // spaces only","lastModifiedDate":"2017-01-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\"91\")); // less than 3 numbers","lastModifiedDate":"2017-05-04"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\"phone\")); // non-numeric","lastModifiedDate":"2017-01-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\"9011p041\")); // alphabets within digits","lastModifiedDate":"2017-01-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\"9312 1534\")); // spaces within digits","lastModifiedDate":"2017-01-16"},{"lineNumber":34,"author":{"gitId":"marcuspeh"},"content":"        assertFalse(Phone.isValidPhone(\"12345678901234567\")); // long phone numbers \u003e 16 digits","lastModifiedDate":"2021-11-01"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        // valid phone numbers","lastModifiedDate":"2017-01-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertTrue(Phone.isValidPhone(\"911\")); // exactly 3 numbers","lastModifiedDate":"2017-05-04"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertTrue(Phone.isValidPhone(\"93121534\"));","lastModifiedDate":"2017-01-16"},{"lineNumber":39,"author":{"gitId":"marcuspeh"},"content":"        assertTrue(Phone.isValidPhone(\"1234567890123456\")); // exactly 16 numbers","lastModifiedDate":"2021-11-01"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-16"},{"lineNumber":41,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":42,"author":{"gitId":"marcuspeh"},"content":"    @Test","lastModifiedDate":"2021-11-01"},{"lineNumber":43,"author":{"gitId":"marcuspeh"},"content":"    public void equals() {","lastModifiedDate":"2021-11-01"},{"lineNumber":44,"author":{"gitId":"marcuspeh"},"content":"        Phone phone \u003d new Phone(\"12345678\");","lastModifiedDate":"2021-11-01"},{"lineNumber":45,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":46,"author":{"gitId":"marcuspeh"},"content":"        // same instance -\u003e true","lastModifiedDate":"2021-11-01"},{"lineNumber":47,"author":{"gitId":"marcuspeh"},"content":"        assertTrue(phone.equals(phone));","lastModifiedDate":"2021-11-01"},{"lineNumber":48,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":49,"author":{"gitId":"marcuspeh"},"content":"        // null -\u003e false","lastModifiedDate":"2021-11-01"},{"lineNumber":50,"author":{"gitId":"marcuspeh"},"content":"        assertFalse(phone.equals(null));","lastModifiedDate":"2021-11-01"},{"lineNumber":51,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":52,"author":{"gitId":"marcuspeh"},"content":"        // integer is passed in -\u003e false","lastModifiedDate":"2021-11-01"},{"lineNumber":53,"author":{"gitId":"marcuspeh"},"content":"        assertFalse(phone.equals(12345678));","lastModifiedDate":"2021-11-01"},{"lineNumber":54,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":55,"author":{"gitId":"marcuspeh"},"content":"        // different name -\u003e return false","lastModifiedDate":"2021-11-01"},{"lineNumber":56,"author":{"gitId":"marcuspeh"},"content":"        assertFalse(phone.equals(new Phone(\"87654321\")));","lastModifiedDate":"2021-11-01"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-11-01"},{"lineNumber":58,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-16"}],"authorContributionMap":{"marcuspeh":18,"ramapriyan912001":2,"-":38}},{"path":"src/test/java/seedu/awe/model/person/UniquePersonListTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"ramapriyan912001"},"content":"package seedu.awe.model.person;","lastModifiedDate":"2021-10-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"ramapriyan912001"},"content":"import static seedu.awe.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2021-10-05"},{"lineNumber":7,"author":{"gitId":"ramapriyan912001"},"content":"import static seedu.awe.testutil.Assert.assertThrows;","lastModifiedDate":"2021-10-05"},{"lineNumber":8,"author":{"gitId":"ramapriyan912001"},"content":"import static seedu.awe.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2021-10-05"},{"lineNumber":9,"author":{"gitId":"ramapriyan912001"},"content":"import static seedu.awe.testutil.TypicalPersons.BOB;","lastModifiedDate":"2021-10-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":11,"author":{"gitId":"marcuspeh"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-11-01"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-11-01"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2021-11-01"},{"lineNumber":14,"author":{"gitId":"marcuspeh"},"content":"import java.util.Iterator;","lastModifiedDate":"2021-11-01"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2021-11-01"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":19,"author":{"gitId":"marcuspeh"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2021-11-01"},{"lineNumber":20,"author":{"gitId":"marcuspeh"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-11-01"},{"lineNumber":21,"author":{"gitId":"ramapriyan912001"},"content":"import seedu.awe.model.person.exceptions.DuplicatePersonException;","lastModifiedDate":"2021-10-05"},{"lineNumber":22,"author":{"gitId":"ramapriyan912001"},"content":"import seedu.awe.model.person.exceptions.PersonNotFoundException;","lastModifiedDate":"2021-10-05"},{"lineNumber":23,"author":{"gitId":"ramapriyan912001"},"content":"import seedu.awe.testutil.PersonBuilder;","lastModifiedDate":"2021-10-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"public class UniquePersonListTest {","lastModifiedDate":"2017-09-01"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private final UniquePersonList uniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public void contains_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.contains(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public void contains_personNotInList_returnsFalse() {","lastModifiedDate":"2018-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertFalse(uniquePersonList.contains(ALICE));","lastModifiedDate":"2018-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public void contains_personInList_returnsTrue() {","lastModifiedDate":"2018-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        assertTrue(uniquePersonList.contains(ALICE));","lastModifiedDate":"2018-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public void contains_personWithSameIdentityFieldsInList_returnsTrue() {","lastModifiedDate":"2018-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":48,"author":{"gitId":"marcuspeh"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withTags(VALID_TAG_HUSBAND)","lastModifiedDate":"2021-11-01"},{"lineNumber":49,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertTrue(uniquePersonList.contains(editedAlice));","lastModifiedDate":"2018-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public void add_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.add(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public void add_duplicatePerson_throwsDuplicatePersonException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertThrows(DuplicatePersonException.class, () -\u003e uniquePersonList.add(ALICE));","lastModifiedDate":"2019-03-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public void setPerson_nullTargetPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.setPerson(null, ALICE));","lastModifiedDate":"2019-03-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public void setPerson_nullEditedPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.setPerson(ALICE, null));","lastModifiedDate":"2019-03-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public void setPerson_targetPersonNotInList_throwsPersonNotFoundException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        assertThrows(PersonNotFoundException.class, () -\u003e uniquePersonList.setPerson(ALICE, ALICE));","lastModifiedDate":"2019-03-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public void setPerson_editedPersonIsSamePerson_success() {","lastModifiedDate":"2018-08-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        uniquePersonList.setPerson(ALICE, ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        expectedUniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    public void setPerson_editedPersonHasSameIdentity_success() {","lastModifiedDate":"2018-08-08"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":91,"author":{"gitId":"marcuspeh"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withTags(VALID_TAG_HUSBAND)","lastModifiedDate":"2021-11-01"},{"lineNumber":92,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-08-08"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        uniquePersonList.setPerson(ALICE, editedAlice);","lastModifiedDate":"2018-08-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        expectedUniquePersonList.add(editedAlice);","lastModifiedDate":"2018-08-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    public void setPerson_editedPersonHasDifferentIdentity_success() {","lastModifiedDate":"2018-08-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        uniquePersonList.setPerson(ALICE, BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        expectedUniquePersonList.add(BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    public void setPerson_editedPersonHasNonUniqueIdentity_throwsDuplicatePersonException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        uniquePersonList.add(BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        assertThrows(DuplicatePersonException.class, () -\u003e uniquePersonList.setPerson(ALICE, BOB));","lastModifiedDate":"2019-03-23"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    public void remove_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.remove(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    public void remove_personDoesNotExist_throwsPersonNotFoundException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        assertThrows(PersonNotFoundException.class, () -\u003e uniquePersonList.remove(ALICE));","lastModifiedDate":"2019-03-23"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    public void remove_existingPerson_removesPerson() {","lastModifiedDate":"2018-08-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        uniquePersonList.remove(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    public void setPersons_nullUniquePersonList_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.setPersons((UniquePersonList) null));","lastModifiedDate":"2019-03-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    public void setPersons_uniquePersonList_replacesOwnListWithProvidedUniquePersonList() {","lastModifiedDate":"2018-08-08"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        expectedUniquePersonList.add(BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        uniquePersonList.setPersons(expectedUniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    public void setPersons_nullList_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniquePersonList.setPersons((List\u003cPerson\u003e) null));","lastModifiedDate":"2019-03-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    public void setPersons_list_replacesOwnListWithProvidedList() {","lastModifiedDate":"2018-08-08"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e personList \u003d Collections.singletonList(BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        uniquePersonList.setPersons(personList);","lastModifiedDate":"2018-08-08"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        expectedUniquePersonList.add(BOB);","lastModifiedDate":"2018-08-08"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":163,"author":{"gitId":"-"},"content":"    public void setPersons_listWithDuplicatePersons_throwsDuplicatePersonException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e listWithDuplicatePersons \u003d Arrays.asList(ALICE, ALICE);","lastModifiedDate":"2018-08-08"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        assertThrows(DuplicatePersonException.class, () -\u003e uniquePersonList.setPersons(listWithDuplicatePersons));","lastModifiedDate":"2019-03-23"},{"lineNumber":166,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    public void asUnmodifiableObservableList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2018-04-05"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, ()","lastModifiedDate":"2019-03-23"},{"lineNumber":171,"author":{"gitId":"-"},"content":"            -\u003e uniquePersonList.asUnmodifiableObservableList().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":173,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":174,"author":{"gitId":"marcuspeh"},"content":"    @Test","lastModifiedDate":"2021-11-01"},{"lineNumber":175,"author":{"gitId":"marcuspeh"},"content":"    public void iterator() {","lastModifiedDate":"2021-11-01"},{"lineNumber":176,"author":{"gitId":"marcuspeh"},"content":"        // Empty List","lastModifiedDate":"2021-11-01"},{"lineNumber":177,"author":{"gitId":"marcuspeh"},"content":"        assertFalse(uniquePersonList.iterator().hasNext());","lastModifiedDate":"2021-11-01"},{"lineNumber":178,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":179,"author":{"gitId":"marcuspeh"},"content":"        // Contains 1 Person","lastModifiedDate":"2021-11-01"},{"lineNumber":180,"author":{"gitId":"marcuspeh"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2021-11-01"},{"lineNumber":181,"author":{"gitId":"marcuspeh"},"content":"        Iterator\u003cPerson\u003e uniquePersonListIterator \u003d uniquePersonList.iterator();","lastModifiedDate":"2021-11-01"},{"lineNumber":182,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":183,"author":{"gitId":"marcuspeh"},"content":"        ObservableList\u003cPerson\u003e singlePersonObservableList \u003d FXCollections.observableArrayList(ALICE);","lastModifiedDate":"2021-11-01"},{"lineNumber":184,"author":{"gitId":"marcuspeh"},"content":"        Iterator\u003cPerson\u003e singlePersonObservableListIterator \u003d singlePersonObservableList.iterator();","lastModifiedDate":"2021-11-01"},{"lineNumber":185,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":186,"author":{"gitId":"marcuspeh"},"content":"        assertEquals(singlePersonObservableListIterator.next(), uniquePersonListIterator.next());","lastModifiedDate":"2021-11-01"},{"lineNumber":187,"author":{"gitId":"marcuspeh"},"content":"        assertFalse(uniquePersonListIterator.hasNext());","lastModifiedDate":"2021-11-01"},{"lineNumber":188,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":189,"author":{"gitId":"marcuspeh"},"content":"        // Contains \u003e 1 Person","lastModifiedDate":"2021-11-01"},{"lineNumber":190,"author":{"gitId":"marcuspeh"},"content":"        uniquePersonList.add(BOB);","lastModifiedDate":"2021-11-01"},{"lineNumber":191,"author":{"gitId":"marcuspeh"},"content":"        uniquePersonListIterator \u003d uniquePersonList.iterator();","lastModifiedDate":"2021-11-01"},{"lineNumber":192,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":193,"author":{"gitId":"marcuspeh"},"content":"        ObservableList\u003cPerson\u003e multiplePersonObservableList \u003d FXCollections.observableArrayList(ALICE, BOB);","lastModifiedDate":"2021-11-01"},{"lineNumber":194,"author":{"gitId":"marcuspeh"},"content":"        Iterator\u003cPerson\u003e multiplePersonObservableListIterator \u003d multiplePersonObservableList.iterator();","lastModifiedDate":"2021-11-01"},{"lineNumber":195,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":196,"author":{"gitId":"marcuspeh"},"content":"        assertEquals(multiplePersonObservableListIterator.next(), uniquePersonListIterator.next());","lastModifiedDate":"2021-11-01"},{"lineNumber":197,"author":{"gitId":"marcuspeh"},"content":"        assertEquals(multiplePersonObservableListIterator.next(), uniquePersonListIterator.next());","lastModifiedDate":"2021-11-01"},{"lineNumber":198,"author":{"gitId":"marcuspeh"},"content":"        assertFalse(uniquePersonListIterator.hasNext());","lastModifiedDate":"2021-11-01"},{"lineNumber":199,"author":{"gitId":"marcuspeh"},"content":"    }","lastModifiedDate":"2021-11-01"},{"lineNumber":200,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":201,"author":{"gitId":"marcuspeh"},"content":"    @Test","lastModifiedDate":"2021-11-01"},{"lineNumber":202,"author":{"gitId":"marcuspeh"},"content":"    public void equals() {","lastModifiedDate":"2021-11-01"},{"lineNumber":203,"author":{"gitId":"marcuspeh"},"content":"        // same instance -\u003e true","lastModifiedDate":"2021-11-01"},{"lineNumber":204,"author":{"gitId":"marcuspeh"},"content":"        assertTrue(uniquePersonList.equals(uniquePersonList));","lastModifiedDate":"2021-11-01"},{"lineNumber":205,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":206,"author":{"gitId":"marcuspeh"},"content":"        // null -\u003e false","lastModifiedDate":"2021-11-01"},{"lineNumber":207,"author":{"gitId":"marcuspeh"},"content":"        assertFalse(uniquePersonList.equals(null));","lastModifiedDate":"2021-11-01"},{"lineNumber":208,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":209,"author":{"gitId":"marcuspeh"},"content":"        // list is passed in -\u003e false","lastModifiedDate":"2021-11-01"},{"lineNumber":210,"author":{"gitId":"marcuspeh"},"content":"        assertFalse(uniquePersonList.equals(new ArrayList\u003c\u003e()));","lastModifiedDate":"2021-11-01"},{"lineNumber":211,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":212,"author":{"gitId":"marcuspeh"},"content":"        // different person -\u003e return false","lastModifiedDate":"2021-11-01"},{"lineNumber":213,"author":{"gitId":"marcuspeh"},"content":"        UniquePersonList containExtraPerson \u003d new UniquePersonList();","lastModifiedDate":"2021-11-01"},{"lineNumber":214,"author":{"gitId":"marcuspeh"},"content":"        containExtraPerson.add(ALICE);","lastModifiedDate":"2021-11-01"},{"lineNumber":215,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":216,"author":{"gitId":"marcuspeh"},"content":"        assertFalse(uniquePersonList.equals(containExtraPerson));","lastModifiedDate":"2021-11-01"},{"lineNumber":217,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":218,"author":{"gitId":"marcuspeh"},"content":"        // contain same amount of person","lastModifiedDate":"2021-11-01"},{"lineNumber":219,"author":{"gitId":"marcuspeh"},"content":"        uniquePersonList.add(ALICE);","lastModifiedDate":"2021-11-01"},{"lineNumber":220,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":221,"author":{"gitId":"marcuspeh"},"content":"        assertTrue(uniquePersonList.equals(containExtraPerson));","lastModifiedDate":"2021-11-01"},{"lineNumber":222,"author":{"gitId":"marcuspeh"},"content":"    }","lastModifiedDate":"2021-11-01"},{"lineNumber":223,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-09-01"}],"authorContributionMap":{"marcuspeh":56,"ramapriyan912001":8,"-":159}},{"path":"src/test/java/seedu/awe/model/tag/TagTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"ramapriyan912001"},"content":"package seedu.awe.model.tag;","lastModifiedDate":"2021-10-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":3,"author":{"gitId":"marcuspeh"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-11-01"},{"lineNumber":4,"author":{"gitId":"marcuspeh"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-11-01"},{"lineNumber":5,"author":{"gitId":"marcuspeh"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-11-01"},{"lineNumber":6,"author":{"gitId":"ramapriyan912001"},"content":"import static seedu.awe.testutil.Assert.assertThrows;","lastModifiedDate":"2021-10-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-03-14"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class TagTest {","lastModifiedDate":"2017-12-04"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2017-12-04"},{"lineNumber":14,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Tag(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public void constructor_invalidTagName_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        String invalidTagName \u003d \"\";","lastModifiedDate":"2017-05-30"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Tag(invalidTagName));","lastModifiedDate":"2019-03-14"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void isValidTagName() {","lastModifiedDate":"2017-12-04"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        // null tag name","lastModifiedDate":"2017-12-04"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e Tag.isValidTagName(null));","lastModifiedDate":"2019-03-14"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":29,"author":{"gitId":"marcuspeh"},"content":"    @Test","lastModifiedDate":"2021-11-01"},{"lineNumber":30,"author":{"gitId":"marcuspeh"},"content":"    public void getTagName() {","lastModifiedDate":"2021-11-01"},{"lineNumber":31,"author":{"gitId":"marcuspeh"},"content":"        String validTagName \u003d \"Friends\";","lastModifiedDate":"2021-11-01"},{"lineNumber":32,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":33,"author":{"gitId":"marcuspeh"},"content":"        Tag validTag \u003d new Tag(\"Friends\");","lastModifiedDate":"2021-11-01"},{"lineNumber":34,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":35,"author":{"gitId":"marcuspeh"},"content":"        assertEquals(validTagName, validTag.getTagName());","lastModifiedDate":"2021-11-01"},{"lineNumber":36,"author":{"gitId":"marcuspeh"},"content":"    }","lastModifiedDate":"2021-11-01"},{"lineNumber":37,"author":{"gitId":"marcuspeh"},"content":"    @Test","lastModifiedDate":"2021-11-01"},{"lineNumber":38,"author":{"gitId":"marcuspeh"},"content":"    public void equals() {","lastModifiedDate":"2021-11-01"},{"lineNumber":39,"author":{"gitId":"marcuspeh"},"content":"        Tag tag \u003d new Tag(\"Family\");","lastModifiedDate":"2021-11-01"},{"lineNumber":40,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":41,"author":{"gitId":"marcuspeh"},"content":"        // same instance -\u003e true","lastModifiedDate":"2021-11-01"},{"lineNumber":42,"author":{"gitId":"marcuspeh"},"content":"        assertTrue(tag.equals(tag));","lastModifiedDate":"2021-11-01"},{"lineNumber":43,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":44,"author":{"gitId":"marcuspeh"},"content":"        // null -\u003e false","lastModifiedDate":"2021-11-01"},{"lineNumber":45,"author":{"gitId":"marcuspeh"},"content":"        assertFalse(tag.equals(null));","lastModifiedDate":"2021-11-01"},{"lineNumber":46,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":47,"author":{"gitId":"marcuspeh"},"content":"        // String is passed in -\u003e false","lastModifiedDate":"2021-11-01"},{"lineNumber":48,"author":{"gitId":"marcuspeh"},"content":"        assertFalse(tag.equals(\"Family\"));","lastModifiedDate":"2021-11-01"},{"lineNumber":49,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":50,"author":{"gitId":"marcuspeh"},"content":"        // different name -\u003e return false","lastModifiedDate":"2021-11-01"},{"lineNumber":51,"author":{"gitId":"marcuspeh"},"content":"        assertFalse(tag.equals(new Tag(\"Friends\")));","lastModifiedDate":"2021-11-01"},{"lineNumber":52,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":53,"author":{"gitId":"marcuspeh"},"content":"        // different case -\u003e return false","lastModifiedDate":"2021-11-01"},{"lineNumber":54,"author":{"gitId":"marcuspeh"},"content":"        assertFalse(tag.equals(new Tag(\"family\")));","lastModifiedDate":"2021-11-01"},{"lineNumber":55,"author":{"gitId":"marcuspeh"},"content":"    }","lastModifiedDate":"2021-11-01"},{"lineNumber":56,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-12-04"}],"authorContributionMap":{"marcuspeh":30,"ramapriyan912001":2,"-":24}},{"path":"src/test/java/seedu/awe/model/transactionsummary/TransactionSummaryListTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"marcuspeh"},"content":"package seedu.awe.model.transactionsummary;","lastModifiedDate":"2021-11-01"},{"lineNumber":2,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":3,"author":{"gitId":"marcuspeh"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-11-01"},{"lineNumber":4,"author":{"gitId":"marcuspeh"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-11-01"},{"lineNumber":5,"author":{"gitId":"marcuspeh"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2021-11-01"},{"lineNumber":6,"author":{"gitId":"marcuspeh"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-11-01"},{"lineNumber":7,"author":{"gitId":"marcuspeh"},"content":"import static seedu.awe.testutil.Assert.assertThrows;","lastModifiedDate":"2021-11-01"},{"lineNumber":8,"author":{"gitId":"marcuspeh"},"content":"import static seedu.awe.testutil.TypicalGroups.BALI_WITH_EXPENSES;","lastModifiedDate":"2021-11-01"},{"lineNumber":9,"author":{"gitId":"marcuspeh"},"content":"import static seedu.awe.testutil.TypicalGroups.BALI_WITH_TRANSACTION_SUMMARIES;","lastModifiedDate":"2021-11-01"},{"lineNumber":10,"author":{"gitId":"marcuspeh"},"content":"import static seedu.awe.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2021-11-01"},{"lineNumber":11,"author":{"gitId":"marcuspeh"},"content":"import static seedu.awe.testutil.TypicalPersons.AMY;","lastModifiedDate":"2021-11-01"},{"lineNumber":12,"author":{"gitId":"marcuspeh"},"content":"import static seedu.awe.testutil.TypicalPersons.BOB;","lastModifiedDate":"2021-11-01"},{"lineNumber":13,"author":{"gitId":"marcuspeh"},"content":"import static seedu.awe.testutil.TypicalTransactionSummary.ALICE_TRANSACTION_SUMMARY;","lastModifiedDate":"2021-11-01"},{"lineNumber":14,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":15,"author":{"gitId":"marcuspeh"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-11-01"},{"lineNumber":16,"author":{"gitId":"marcuspeh"},"content":"import java.util.Iterator;","lastModifiedDate":"2021-11-01"},{"lineNumber":17,"author":{"gitId":"marcuspeh"},"content":"import java.util.Optional;","lastModifiedDate":"2021-11-01"},{"lineNumber":18,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":19,"author":{"gitId":"marcuspeh"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-11-01"},{"lineNumber":20,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":21,"author":{"gitId":"marcuspeh"},"content":"import seedu.awe.model.expense.Cost;","lastModifiedDate":"2021-11-01"},{"lineNumber":22,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":23,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":24,"author":{"gitId":"marcuspeh"},"content":"public class TransactionSummaryListTest {","lastModifiedDate":"2021-11-01"},{"lineNumber":25,"author":{"gitId":"marcuspeh"},"content":"    private final TransactionSummaryList emptyTransactionSummaryList \u003d new TransactionSummaryList();","lastModifiedDate":"2021-11-01"},{"lineNumber":26,"author":{"gitId":"marcuspeh"},"content":"    private final TransactionSummaryList transactionSummaryList \u003d new TransactionSummaryList(BALI_WITH_EXPENSES);","lastModifiedDate":"2021-11-01"},{"lineNumber":27,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":28,"author":{"gitId":"marcuspeh"},"content":"    {","lastModifiedDate":"2021-11-01"},{"lineNumber":29,"author":{"gitId":"marcuspeh"},"content":"        transactionSummaryList.set(BALI_WITH_TRANSACTION_SUMMARIES);","lastModifiedDate":"2021-11-01"},{"lineNumber":30,"author":{"gitId":"marcuspeh"},"content":"    }","lastModifiedDate":"2021-11-01"},{"lineNumber":31,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":32,"author":{"gitId":"marcuspeh"},"content":"    @Test","lastModifiedDate":"2021-11-01"},{"lineNumber":33,"author":{"gitId":"marcuspeh"},"content":"    public void setGroup_success() {","lastModifiedDate":"2021-11-01"},{"lineNumber":34,"author":{"gitId":"marcuspeh"},"content":"        emptyTransactionSummaryList.setGroup(BALI_WITH_EXPENSES);","lastModifiedDate":"2021-11-01"},{"lineNumber":35,"author":{"gitId":"marcuspeh"},"content":"        assertEquals(Optional.ofNullable(BALI_WITH_EXPENSES), emptyTransactionSummaryList.getGroup());","lastModifiedDate":"2021-11-01"},{"lineNumber":36,"author":{"gitId":"marcuspeh"},"content":"    }","lastModifiedDate":"2021-11-01"},{"lineNumber":37,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":38,"author":{"gitId":"marcuspeh"},"content":"    @Test","lastModifiedDate":"2021-11-01"},{"lineNumber":39,"author":{"gitId":"marcuspeh"},"content":"    public void getGroup_groupAbsent_returnsEmptyOptional() {","lastModifiedDate":"2021-11-01"},{"lineNumber":40,"author":{"gitId":"marcuspeh"},"content":"        assertEquals(Optional.empty(), emptyTransactionSummaryList.getGroup());","lastModifiedDate":"2021-11-01"},{"lineNumber":41,"author":{"gitId":"marcuspeh"},"content":"    }","lastModifiedDate":"2021-11-01"},{"lineNumber":42,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":43,"author":{"gitId":"marcuspeh"},"content":"    @Test","lastModifiedDate":"2021-11-01"},{"lineNumber":44,"author":{"gitId":"marcuspeh"},"content":"    public void contains_nullTransactionSummary_throwsNullPointerException() {","lastModifiedDate":"2021-11-01"},{"lineNumber":45,"author":{"gitId":"marcuspeh"},"content":"        assertThrows(NullPointerException.class, () -\u003e emptyTransactionSummaryList.contains(null));","lastModifiedDate":"2021-11-01"},{"lineNumber":46,"author":{"gitId":"marcuspeh"},"content":"    }","lastModifiedDate":"2021-11-01"},{"lineNumber":47,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":48,"author":{"gitId":"marcuspeh"},"content":"    @Test","lastModifiedDate":"2021-11-01"},{"lineNumber":49,"author":{"gitId":"marcuspeh"},"content":"    public void contains_transactionSummaryNotInList_returnsFalse() {","lastModifiedDate":"2021-11-01"},{"lineNumber":50,"author":{"gitId":"marcuspeh"},"content":"        assertFalse(emptyTransactionSummaryList.contains(ALICE_TRANSACTION_SUMMARY));","lastModifiedDate":"2021-11-01"},{"lineNumber":51,"author":{"gitId":"marcuspeh"},"content":"    }","lastModifiedDate":"2021-11-01"},{"lineNumber":52,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":53,"author":{"gitId":"marcuspeh"},"content":"    @Test","lastModifiedDate":"2021-11-01"},{"lineNumber":54,"author":{"gitId":"marcuspeh"},"content":"    public void contains_paymentInList_returnsTrue() {","lastModifiedDate":"2021-11-01"},{"lineNumber":55,"author":{"gitId":"marcuspeh"},"content":"        assertTrue(transactionSummaryList.contains(new TransactionSummary(ALICE, new Cost(400))));","lastModifiedDate":"2021-11-01"},{"lineNumber":56,"author":{"gitId":"marcuspeh"},"content":"    }","lastModifiedDate":"2021-11-01"},{"lineNumber":57,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":58,"author":{"gitId":"marcuspeh"},"content":"    @Test","lastModifiedDate":"2021-11-01"},{"lineNumber":59,"author":{"gitId":"marcuspeh"},"content":"    public void clearTest() {","lastModifiedDate":"2021-11-01"},{"lineNumber":60,"author":{"gitId":"marcuspeh"},"content":"        transactionSummaryList.clear();","lastModifiedDate":"2021-11-01"},{"lineNumber":61,"author":{"gitId":"marcuspeh"},"content":"        assertEquals(emptyTransactionSummaryList, transactionSummaryList);","lastModifiedDate":"2021-11-01"},{"lineNumber":62,"author":{"gitId":"marcuspeh"},"content":"    }","lastModifiedDate":"2021-11-01"},{"lineNumber":63,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":64,"author":{"gitId":"marcuspeh"},"content":"    @Test","lastModifiedDate":"2021-11-01"},{"lineNumber":65,"author":{"gitId":"marcuspeh"},"content":"    public void asUnmodifiableObservableList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2021-11-01"},{"lineNumber":66,"author":{"gitId":"marcuspeh"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e","lastModifiedDate":"2021-11-01"},{"lineNumber":67,"author":{"gitId":"marcuspeh"},"content":"                emptyTransactionSummaryList.asUnmodifiableObservableList().remove(0));","lastModifiedDate":"2021-11-01"},{"lineNumber":68,"author":{"gitId":"marcuspeh"},"content":"    }","lastModifiedDate":"2021-11-01"},{"lineNumber":69,"author":{"gitId":"marcuspeh"},"content":"    @Test","lastModifiedDate":"2021-11-01"},{"lineNumber":70,"author":{"gitId":"marcuspeh"},"content":"    public void iterator() {","lastModifiedDate":"2021-11-01"},{"lineNumber":71,"author":{"gitId":"marcuspeh"},"content":"        Iterator\u003cTransactionSummary\u003e transactionSummaryIterator \u003d transactionSummaryList.iterator();","lastModifiedDate":"2021-11-01"},{"lineNumber":72,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":73,"author":{"gitId":"marcuspeh"},"content":"        assertTrue(transactionSummaryIterator instanceof Iterator);","lastModifiedDate":"2021-11-01"},{"lineNumber":74,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":75,"author":{"gitId":"marcuspeh"},"content":"        assertEquals(new TransactionSummary(ALICE, new Cost(400)), transactionSummaryIterator.next());","lastModifiedDate":"2021-11-01"},{"lineNumber":76,"author":{"gitId":"marcuspeh"},"content":"        assertEquals(new TransactionSummary(BOB, new Cost(400)), transactionSummaryIterator.next());","lastModifiedDate":"2021-11-01"},{"lineNumber":77,"author":{"gitId":"marcuspeh"},"content":"        assertEquals(new TransactionSummary(AMY, new Cost(400)), transactionSummaryIterator.next());","lastModifiedDate":"2021-11-01"},{"lineNumber":78,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":79,"author":{"gitId":"marcuspeh"},"content":"        assertFalse(transactionSummaryIterator.hasNext());","lastModifiedDate":"2021-11-01"},{"lineNumber":80,"author":{"gitId":"marcuspeh"},"content":"    }","lastModifiedDate":"2021-11-01"},{"lineNumber":81,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":82,"author":{"gitId":"marcuspeh"},"content":"    @Test","lastModifiedDate":"2021-11-01"},{"lineNumber":83,"author":{"gitId":"marcuspeh"},"content":"    public void equals() {","lastModifiedDate":"2021-11-01"},{"lineNumber":84,"author":{"gitId":"marcuspeh"},"content":"        TransactionSummaryList transactionSummaryList1 \u003d new TransactionSummaryList();","lastModifiedDate":"2021-11-01"},{"lineNumber":85,"author":{"gitId":"marcuspeh"},"content":"        transactionSummaryList1.set(Arrays.asList(","lastModifiedDate":"2021-11-01"},{"lineNumber":86,"author":{"gitId":"marcuspeh"},"content":"                new TransactionSummary(ALICE, new Cost(400)),","lastModifiedDate":"2021-11-01"},{"lineNumber":87,"author":{"gitId":"marcuspeh"},"content":"                new TransactionSummary(BOB, new Cost(400)),","lastModifiedDate":"2021-11-01"},{"lineNumber":88,"author":{"gitId":"marcuspeh"},"content":"                new TransactionSummary(AMY, new Cost(400))","lastModifiedDate":"2021-11-01"},{"lineNumber":89,"author":{"gitId":"marcuspeh"},"content":"        ));","lastModifiedDate":"2021-11-01"},{"lineNumber":90,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":91,"author":{"gitId":"marcuspeh"},"content":"        // Same object -\u003e true","lastModifiedDate":"2021-11-01"},{"lineNumber":92,"author":{"gitId":"marcuspeh"},"content":"        assertTrue(transactionSummaryList1.equals(transactionSummaryList1));","lastModifiedDate":"2021-11-01"},{"lineNumber":93,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":94,"author":{"gitId":"marcuspeh"},"content":"        // null object -\u003e false","lastModifiedDate":"2021-11-01"},{"lineNumber":95,"author":{"gitId":"marcuspeh"},"content":"        assertFalse(transactionSummaryList1.equals(null));","lastModifiedDate":"2021-11-01"},{"lineNumber":96,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":97,"author":{"gitId":"marcuspeh"},"content":"        // other objects passed in -\u003e false","lastModifiedDate":"2021-11-01"},{"lineNumber":98,"author":{"gitId":"marcuspeh"},"content":"        assertFalse(transactionSummaryList1.equals(new TransactionSummary(ALICE, new Cost(400))));","lastModifiedDate":"2021-11-01"},{"lineNumber":99,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":100,"author":{"gitId":"marcuspeh"},"content":"        // Another instance passed in -\u003e true","lastModifiedDate":"2021-11-01"},{"lineNumber":101,"author":{"gitId":"marcuspeh"},"content":"        assertTrue(transactionSummaryList1.equals(transactionSummaryList));","lastModifiedDate":"2021-11-01"},{"lineNumber":102,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":103,"author":{"gitId":"marcuspeh"},"content":"        // Different transaction in list -\u003e false","lastModifiedDate":"2021-11-01"},{"lineNumber":104,"author":{"gitId":"marcuspeh"},"content":"        assertFalse(transactionSummaryList1.equals(emptyTransactionSummaryList));","lastModifiedDate":"2021-11-01"},{"lineNumber":105,"author":{"gitId":"marcuspeh"},"content":"    }","lastModifiedDate":"2021-11-01"},{"lineNumber":106,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":107,"author":{"gitId":"marcuspeh"},"content":"    @Test","lastModifiedDate":"2021-11-01"},{"lineNumber":108,"author":{"gitId":"marcuspeh"},"content":"    public void hashcode() {","lastModifiedDate":"2021-11-01"},{"lineNumber":109,"author":{"gitId":"marcuspeh"},"content":"        // same instance -\u003e equals","lastModifiedDate":"2021-11-01"},{"lineNumber":110,"author":{"gitId":"marcuspeh"},"content":"        assertEquals(transactionSummaryList.hashCode(), transactionSummaryList.hashCode());","lastModifiedDate":"2021-11-01"},{"lineNumber":111,"author":{"gitId":"marcuspeh"},"content":"        assertEquals(emptyTransactionSummaryList.hashCode(), emptyTransactionSummaryList.hashCode());","lastModifiedDate":"2021-11-01"},{"lineNumber":112,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":113,"author":{"gitId":"marcuspeh"},"content":"        // different -\u003e not equals","lastModifiedDate":"2021-11-01"},{"lineNumber":114,"author":{"gitId":"marcuspeh"},"content":"        assertNotEquals(transactionSummaryList, emptyTransactionSummaryList);","lastModifiedDate":"2021-11-01"},{"lineNumber":115,"author":{"gitId":"marcuspeh"},"content":"    }","lastModifiedDate":"2021-11-01"},{"lineNumber":116,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":117,"author":{"gitId":"marcuspeh"},"content":"}","lastModifiedDate":"2021-11-01"}],"authorContributionMap":{"marcuspeh":117}},{"path":"src/test/java/seedu/awe/model/transactionsummary/TransactionSummaryTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"marcuspeh"},"content":"package seedu.awe.model.transactionsummary;","lastModifiedDate":"2021-11-01"},{"lineNumber":2,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":3,"author":{"gitId":"marcuspeh"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-11-01"},{"lineNumber":4,"author":{"gitId":"marcuspeh"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-11-01"},{"lineNumber":5,"author":{"gitId":"marcuspeh"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2021-11-01"},{"lineNumber":6,"author":{"gitId":"marcuspeh"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-11-01"},{"lineNumber":7,"author":{"gitId":"marcuspeh"},"content":"import static seedu.awe.testutil.Assert.assertThrows;","lastModifiedDate":"2021-11-01"},{"lineNumber":8,"author":{"gitId":"marcuspeh"},"content":"import static seedu.awe.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2021-11-01"},{"lineNumber":9,"author":{"gitId":"marcuspeh"},"content":"import static seedu.awe.testutil.TypicalPersons.AMY;","lastModifiedDate":"2021-11-01"},{"lineNumber":10,"author":{"gitId":"marcuspeh"},"content":"import static seedu.awe.testutil.TypicalPersons.BOB;","lastModifiedDate":"2021-11-01"},{"lineNumber":11,"author":{"gitId":"marcuspeh"},"content":"import static seedu.awe.testutil.TypicalTransactionSummary.ALICE_COST;","lastModifiedDate":"2021-11-01"},{"lineNumber":12,"author":{"gitId":"marcuspeh"},"content":"import static seedu.awe.testutil.TypicalTransactionSummary.ALICE_TRANSACTION_SUMMARY;","lastModifiedDate":"2021-11-01"},{"lineNumber":13,"author":{"gitId":"marcuspeh"},"content":"import static seedu.awe.testutil.TypicalTransactionSummary.AMY_COST;","lastModifiedDate":"2021-11-01"},{"lineNumber":14,"author":{"gitId":"marcuspeh"},"content":"import static seedu.awe.testutil.TypicalTransactionSummary.AMY_TRANSACTION_SUMMARY;","lastModifiedDate":"2021-11-01"},{"lineNumber":15,"author":{"gitId":"marcuspeh"},"content":"import static seedu.awe.testutil.TypicalTransactionSummary.CARL_TRANSACTION_SUMMARY;","lastModifiedDate":"2021-11-01"},{"lineNumber":16,"author":{"gitId":"marcuspeh"},"content":"import static seedu.awe.testutil.TypicalTransactionSummary.DANIEL_COST;","lastModifiedDate":"2021-11-01"},{"lineNumber":17,"author":{"gitId":"marcuspeh"},"content":"import static seedu.awe.testutil.TypicalTransactionSummary.DANIEL_TRANSACTION_SUMMARY;","lastModifiedDate":"2021-11-01"},{"lineNumber":18,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":19,"author":{"gitId":"marcuspeh"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-11-01"},{"lineNumber":20,"author":{"gitId":"marcuspeh"},"content":"import java.util.Comparator;","lastModifiedDate":"2021-11-01"},{"lineNumber":21,"author":{"gitId":"marcuspeh"},"content":"import java.util.List;","lastModifiedDate":"2021-11-01"},{"lineNumber":22,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":23,"author":{"gitId":"marcuspeh"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-11-01"},{"lineNumber":24,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":25,"author":{"gitId":"marcuspeh"},"content":"import seedu.awe.model.expense.Cost;","lastModifiedDate":"2021-11-01"},{"lineNumber":26,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":27,"author":{"gitId":"marcuspeh"},"content":"public class TransactionSummaryTest {","lastModifiedDate":"2021-11-01"},{"lineNumber":28,"author":{"gitId":"marcuspeh"},"content":"    @Test","lastModifiedDate":"2021-11-01"},{"lineNumber":29,"author":{"gitId":"marcuspeh"},"content":"    public void constructor_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2021-11-01"},{"lineNumber":30,"author":{"gitId":"marcuspeh"},"content":"        assertThrows(NullPointerException.class, () -\u003e new TransactionSummary(null, ALICE_COST));","lastModifiedDate":"2021-11-01"},{"lineNumber":31,"author":{"gitId":"marcuspeh"},"content":"    }","lastModifiedDate":"2021-11-01"},{"lineNumber":32,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":33,"author":{"gitId":"marcuspeh"},"content":"    @Test","lastModifiedDate":"2021-11-01"},{"lineNumber":34,"author":{"gitId":"marcuspeh"},"content":"    public void constructor_nullCost_throwsNullPointerException() {","lastModifiedDate":"2021-11-01"},{"lineNumber":35,"author":{"gitId":"marcuspeh"},"content":"        assertThrows(NullPointerException.class, () -\u003e new TransactionSummary(ALICE, null));","lastModifiedDate":"2021-11-01"},{"lineNumber":36,"author":{"gitId":"marcuspeh"},"content":"    }","lastModifiedDate":"2021-11-01"},{"lineNumber":37,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":38,"author":{"gitId":"marcuspeh"},"content":"    @Test","lastModifiedDate":"2021-11-01"},{"lineNumber":39,"author":{"gitId":"marcuspeh"},"content":"    public void getPersonTest() {","lastModifiedDate":"2021-11-01"},{"lineNumber":40,"author":{"gitId":"marcuspeh"},"content":"        assertEquals(AMY, AMY_TRANSACTION_SUMMARY.getPerson());","lastModifiedDate":"2021-11-01"},{"lineNumber":41,"author":{"gitId":"marcuspeh"},"content":"        assertEquals(ALICE, ALICE_TRANSACTION_SUMMARY.getPerson());","lastModifiedDate":"2021-11-01"},{"lineNumber":42,"author":{"gitId":"marcuspeh"},"content":"    }","lastModifiedDate":"2021-11-01"},{"lineNumber":43,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":44,"author":{"gitId":"marcuspeh"},"content":"    @Test","lastModifiedDate":"2021-11-01"},{"lineNumber":45,"author":{"gitId":"marcuspeh"},"content":"    public void getCostTest() {","lastModifiedDate":"2021-11-01"},{"lineNumber":46,"author":{"gitId":"marcuspeh"},"content":"        assertEquals(DANIEL_COST, DANIEL_TRANSACTION_SUMMARY.getCost());","lastModifiedDate":"2021-11-01"},{"lineNumber":47,"author":{"gitId":"marcuspeh"},"content":"        assertEquals(AMY_COST, AMY_TRANSACTION_SUMMARY.getCost());","lastModifiedDate":"2021-11-01"},{"lineNumber":48,"author":{"gitId":"marcuspeh"},"content":"    }","lastModifiedDate":"2021-11-01"},{"lineNumber":49,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":50,"author":{"gitId":"marcuspeh"},"content":"    @Test","lastModifiedDate":"2021-11-01"},{"lineNumber":51,"author":{"gitId":"marcuspeh"},"content":"    public void equals() {","lastModifiedDate":"2021-11-01"},{"lineNumber":52,"author":{"gitId":"marcuspeh"},"content":"        TransactionSummary alicePayment \u003d new TransactionSummary(ALICE, new Cost(20.0));","lastModifiedDate":"2021-11-01"},{"lineNumber":53,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":54,"author":{"gitId":"marcuspeh"},"content":"        // Same object -\u003e true","lastModifiedDate":"2021-11-01"},{"lineNumber":55,"author":{"gitId":"marcuspeh"},"content":"        assertTrue(alicePayment.equals(alicePayment));","lastModifiedDate":"2021-11-01"},{"lineNumber":56,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":57,"author":{"gitId":"marcuspeh"},"content":"        // null object -\u003e false","lastModifiedDate":"2021-11-01"},{"lineNumber":58,"author":{"gitId":"marcuspeh"},"content":"        assertFalse(alicePayment.equals(null));","lastModifiedDate":"2021-11-01"},{"lineNumber":59,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":60,"author":{"gitId":"marcuspeh"},"content":"        // other objects passed in -\u003e false","lastModifiedDate":"2021-11-01"},{"lineNumber":61,"author":{"gitId":"marcuspeh"},"content":"        assertFalse(alicePayment.equals(20.0));","lastModifiedDate":"2021-11-01"},{"lineNumber":62,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":63,"author":{"gitId":"marcuspeh"},"content":"        // Another instance passed in -\u003e true","lastModifiedDate":"2021-11-01"},{"lineNumber":64,"author":{"gitId":"marcuspeh"},"content":"        assertTrue(alicePayment.equals(ALICE_TRANSACTION_SUMMARY));","lastModifiedDate":"2021-11-01"},{"lineNumber":65,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":66,"author":{"gitId":"marcuspeh"},"content":"        // Different cost -\u003e false","lastModifiedDate":"2021-11-01"},{"lineNumber":67,"author":{"gitId":"marcuspeh"},"content":"        assertFalse(alicePayment.equals(new TransactionSummary(ALICE, new Cost(10.0))));","lastModifiedDate":"2021-11-01"},{"lineNumber":68,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":69,"author":{"gitId":"marcuspeh"},"content":"        // Different person -\u003e false","lastModifiedDate":"2021-11-01"},{"lineNumber":70,"author":{"gitId":"marcuspeh"},"content":"        assertFalse(alicePayment.equals(new TransactionSummary(BOB, new Cost(20.0))));","lastModifiedDate":"2021-11-01"},{"lineNumber":71,"author":{"gitId":"marcuspeh"},"content":"    }","lastModifiedDate":"2021-11-01"},{"lineNumber":72,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":73,"author":{"gitId":"marcuspeh"},"content":"    @Test","lastModifiedDate":"2021-11-01"},{"lineNumber":74,"author":{"gitId":"marcuspeh"},"content":"    public void hashcode() {","lastModifiedDate":"2021-11-01"},{"lineNumber":75,"author":{"gitId":"marcuspeh"},"content":"        TransactionSummary alicePayment \u003d new TransactionSummary(ALICE, new Cost(20.0));","lastModifiedDate":"2021-11-01"},{"lineNumber":76,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":77,"author":{"gitId":"marcuspeh"},"content":"        // Same object -\u003e equal","lastModifiedDate":"2021-11-01"},{"lineNumber":78,"author":{"gitId":"marcuspeh"},"content":"        assertEquals(alicePayment.hashCode(), alicePayment.hashCode());","lastModifiedDate":"2021-11-01"},{"lineNumber":79,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":80,"author":{"gitId":"marcuspeh"},"content":"        // Different object -\u003e not equal","lastModifiedDate":"2021-11-01"},{"lineNumber":81,"author":{"gitId":"marcuspeh"},"content":"        assertNotEquals(alicePayment.hashCode(), new Cost(10.0).hashCode());","lastModifiedDate":"2021-11-01"},{"lineNumber":82,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":83,"author":{"gitId":"marcuspeh"},"content":"        // Another instance passed in -\u003e equal","lastModifiedDate":"2021-11-01"},{"lineNumber":84,"author":{"gitId":"marcuspeh"},"content":"        assertEquals(ALICE_TRANSACTION_SUMMARY.hashCode(), alicePayment.hashCode());","lastModifiedDate":"2021-11-01"},{"lineNumber":85,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":86,"author":{"gitId":"marcuspeh"},"content":"        // Different cost -\u003e not equal","lastModifiedDate":"2021-11-01"},{"lineNumber":87,"author":{"gitId":"marcuspeh"},"content":"        assertNotEquals(alicePayment, new TransactionSummary(ALICE, new Cost(10.0)));","lastModifiedDate":"2021-11-01"},{"lineNumber":88,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":89,"author":{"gitId":"marcuspeh"},"content":"        // Different person -\u003e not equal","lastModifiedDate":"2021-11-01"},{"lineNumber":90,"author":{"gitId":"marcuspeh"},"content":"        assertNotEquals(alicePayment, new TransactionSummary(BOB, new Cost(20.0)));","lastModifiedDate":"2021-11-01"},{"lineNumber":91,"author":{"gitId":"marcuspeh"},"content":"    }","lastModifiedDate":"2021-11-01"},{"lineNumber":92,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":93,"author":{"gitId":"marcuspeh"},"content":"    @Test","lastModifiedDate":"2021-11-01"},{"lineNumber":94,"author":{"gitId":"marcuspeh"},"content":"    public void comparatorTest() {","lastModifiedDate":"2021-11-01"},{"lineNumber":95,"author":{"gitId":"marcuspeh"},"content":"        List\u003cTransactionSummary\u003e transactionSummaries \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-11-01"},{"lineNumber":96,"author":{"gitId":"marcuspeh"},"content":"        transactionSummaries.add(ALICE_TRANSACTION_SUMMARY);","lastModifiedDate":"2021-11-01"},{"lineNumber":97,"author":{"gitId":"marcuspeh"},"content":"        transactionSummaries.add(AMY_TRANSACTION_SUMMARY);","lastModifiedDate":"2021-11-01"},{"lineNumber":98,"author":{"gitId":"marcuspeh"},"content":"        transactionSummaries.add(CARL_TRANSACTION_SUMMARY);","lastModifiedDate":"2021-11-01"},{"lineNumber":99,"author":{"gitId":"marcuspeh"},"content":"        transactionSummaries.add(DANIEL_TRANSACTION_SUMMARY);","lastModifiedDate":"2021-11-01"},{"lineNumber":100,"author":{"gitId":"marcuspeh"},"content":"        transactionSummaries.sort(new Comparator\u003cTransactionSummary\u003e() {","lastModifiedDate":"2021-11-01"},{"lineNumber":101,"author":{"gitId":"marcuspeh"},"content":"            @Override","lastModifiedDate":"2021-11-01"},{"lineNumber":102,"author":{"gitId":"marcuspeh"},"content":"            public int compare(TransactionSummary t1, TransactionSummary t2) {","lastModifiedDate":"2021-11-01"},{"lineNumber":103,"author":{"gitId":"marcuspeh"},"content":"                return t1.compareTo(t2);","lastModifiedDate":"2021-11-01"},{"lineNumber":104,"author":{"gitId":"marcuspeh"},"content":"            }","lastModifiedDate":"2021-11-01"},{"lineNumber":105,"author":{"gitId":"marcuspeh"},"content":"        });","lastModifiedDate":"2021-11-01"},{"lineNumber":106,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":107,"author":{"gitId":"marcuspeh"},"content":"        List\u003cTransactionSummary\u003e expectedTransactionSummaries \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-11-01"},{"lineNumber":108,"author":{"gitId":"marcuspeh"},"content":"        expectedTransactionSummaries.add(ALICE_TRANSACTION_SUMMARY);","lastModifiedDate":"2021-11-01"},{"lineNumber":109,"author":{"gitId":"marcuspeh"},"content":"        expectedTransactionSummaries.add(AMY_TRANSACTION_SUMMARY);","lastModifiedDate":"2021-11-01"},{"lineNumber":110,"author":{"gitId":"marcuspeh"},"content":"        expectedTransactionSummaries.add(CARL_TRANSACTION_SUMMARY);","lastModifiedDate":"2021-11-01"},{"lineNumber":111,"author":{"gitId":"marcuspeh"},"content":"        expectedTransactionSummaries.add(DANIEL_TRANSACTION_SUMMARY);","lastModifiedDate":"2021-11-01"},{"lineNumber":112,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":113,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":114,"author":{"gitId":"marcuspeh"},"content":"        int i \u003d 0;","lastModifiedDate":"2021-11-01"},{"lineNumber":115,"author":{"gitId":"marcuspeh"},"content":"        while (i \u003c 4) {","lastModifiedDate":"2021-11-01"},{"lineNumber":116,"author":{"gitId":"marcuspeh"},"content":"            assertEquals(transactionSummaries.get(i), expectedTransactionSummaries.get(i));","lastModifiedDate":"2021-11-01"},{"lineNumber":117,"author":{"gitId":"marcuspeh"},"content":"            i++;","lastModifiedDate":"2021-11-01"},{"lineNumber":118,"author":{"gitId":"marcuspeh"},"content":"        }","lastModifiedDate":"2021-11-01"},{"lineNumber":119,"author":{"gitId":"marcuspeh"},"content":"    }","lastModifiedDate":"2021-11-01"},{"lineNumber":120,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":121,"author":{"gitId":"marcuspeh"},"content":"    @Test","lastModifiedDate":"2021-11-01"},{"lineNumber":122,"author":{"gitId":"marcuspeh"},"content":"    public void toStringTest() {","lastModifiedDate":"2021-11-01"},{"lineNumber":123,"author":{"gitId":"marcuspeh"},"content":"        String expectedString \u003d \"Alice Pauline spent $20.00.\";","lastModifiedDate":"2021-11-01"},{"lineNumber":124,"author":{"gitId":"marcuspeh"},"content":"        assertEquals(expectedString, ALICE_TRANSACTION_SUMMARY.toString());","lastModifiedDate":"2021-11-01"},{"lineNumber":125,"author":{"gitId":"marcuspeh"},"content":"    }","lastModifiedDate":"2021-11-01"},{"lineNumber":126,"author":{"gitId":"marcuspeh"},"content":"}","lastModifiedDate":"2021-11-01"}],"authorContributionMap":{"marcuspeh":126}},{"path":"src/test/java/seedu/awe/storage/JsonAdaptedGroupTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"ramapriyan912001"},"content":"package seedu.awe.storage;","lastModifiedDate":"2021-10-05"},{"lineNumber":2,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":3,"author":{"gitId":"ramapriyan912001"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-05"},{"lineNumber":4,"author":{"gitId":"ramapriyan912001"},"content":"import static seedu.awe.storage.JsonAdaptedGroup.MISSING_FIELD_MESSAGE_FORMAT;","lastModifiedDate":"2021-10-05"},{"lineNumber":5,"author":{"gitId":"ramapriyan912001"},"content":"import static seedu.awe.testutil.Assert.assertThrows;","lastModifiedDate":"2021-10-05"},{"lineNumber":6,"author":{"gitId":"ramapriyan912001"},"content":"import static seedu.awe.testutil.TypicalGroups.BALI;","lastModifiedDate":"2021-10-05"},{"lineNumber":7,"author":{"gitId":"ramapriyan912001"},"content":"import static seedu.awe.testutil.TypicalPersons.BENSON;","lastModifiedDate":"2021-10-05"},{"lineNumber":8,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":9,"author":{"gitId":"ramapriyan912001"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-05"},{"lineNumber":10,"author":{"gitId":"ramapriyan912001"},"content":"import java.util.List;","lastModifiedDate":"2021-10-05"},{"lineNumber":11,"author":{"gitId":"ramapriyan912001"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2021-10-05"},{"lineNumber":12,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":13,"author":{"gitId":"ramapriyan912001"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-05"},{"lineNumber":14,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":15,"author":{"gitId":"ramapriyan912001"},"content":"import seedu.awe.commons.exceptions.IllegalValueException;","lastModifiedDate":"2021-10-05"},{"lineNumber":16,"author":{"gitId":"ramapriyan912001"},"content":"import seedu.awe.model.group.GroupName;","lastModifiedDate":"2021-10-05"},{"lineNumber":17,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":18,"author":{"gitId":"ramapriyan912001"},"content":"public class JsonAdaptedGroupTest {","lastModifiedDate":"2021-10-05"},{"lineNumber":19,"author":{"gitId":"ramapriyan912001"},"content":"    private static final String INVALID_GROUP_NAME \u003d \"R@chel Birthday\";","lastModifiedDate":"2021-10-05"},{"lineNumber":20,"author":{"gitId":"ramapriyan912001"},"content":"    private static final String INVALID_TAG \u003d \"#friend\";","lastModifiedDate":"2021-10-05"},{"lineNumber":21,"author":{"gitId":"ramapriyan912001"},"content":"    private static final List\u003cJsonAdaptedPerson\u003e VALID_MEMBERS \u003d BALI.getMembers().stream()","lastModifiedDate":"2021-10-05"},{"lineNumber":22,"author":{"gitId":"ramapriyan912001"},"content":"            .map(JsonAdaptedPerson::new)","lastModifiedDate":"2021-10-05"},{"lineNumber":23,"author":{"gitId":"ramapriyan912001"},"content":"            .collect(Collectors.toList());","lastModifiedDate":"2021-10-05"},{"lineNumber":24,"author":{"gitId":"ramapriyan912001"},"content":"    private static final String VALID_NAME \u003d BALI.getGroupName().getName();","lastModifiedDate":"2021-10-05"},{"lineNumber":25,"author":{"gitId":"ramapriyan912001"},"content":"    private static final List\u003cJsonAdaptedTag\u003e VALID_TAGS \u003d BALI.getTags().stream()","lastModifiedDate":"2021-10-05"},{"lineNumber":26,"author":{"gitId":"ramapriyan912001"},"content":"            .map(JsonAdaptedTag::new)","lastModifiedDate":"2021-10-05"},{"lineNumber":27,"author":{"gitId":"ramapriyan912001"},"content":"            .collect(Collectors.toList());","lastModifiedDate":"2021-10-05"},{"lineNumber":28,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":29,"author":{"gitId":"ramapriyan912001"},"content":"    @Test","lastModifiedDate":"2021-10-05"},{"lineNumber":30,"author":{"gitId":"ramapriyan912001"},"content":"    public void toModelType_validPersonDetails_returnsPerson() throws Exception {","lastModifiedDate":"2021-10-05"},{"lineNumber":31,"author":{"gitId":"ramapriyan912001"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(BENSON);","lastModifiedDate":"2021-10-05"},{"lineNumber":32,"author":{"gitId":"ramapriyan912001"},"content":"        assertEquals(BENSON, person.toModelType());","lastModifiedDate":"2021-10-05"},{"lineNumber":33,"author":{"gitId":"ramapriyan912001"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":34,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":35,"author":{"gitId":"ramapriyan912001"},"content":"    @Test","lastModifiedDate":"2021-10-05"},{"lineNumber":36,"author":{"gitId":"ramapriyan912001"},"content":"    public void toModelType_invalidGroupName_throwsIllegalValueException() {","lastModifiedDate":"2021-10-05"},{"lineNumber":37,"author":{"gitId":"ramapriyan912001"},"content":"        JsonAdaptedGroup group \u003d","lastModifiedDate":"2021-10-05"},{"lineNumber":38,"author":{"gitId":"kheekheekhee"},"content":"                new JsonAdaptedGroup(INVALID_GROUP_NAME, new ArrayList\u003c\u003e(), new ArrayList\u003c\u003e(), new ArrayList\u003c\u003e());","lastModifiedDate":"2021-10-06"},{"lineNumber":39,"author":{"gitId":"ramapriyan912001"},"content":"        String expectedMessage \u003d GroupName.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2021-10-05"},{"lineNumber":40,"author":{"gitId":"ramapriyan912001"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, group::toModelType);","lastModifiedDate":"2021-10-05"},{"lineNumber":41,"author":{"gitId":"ramapriyan912001"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":42,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":43,"author":{"gitId":"ramapriyan912001"},"content":"    @Test","lastModifiedDate":"2021-10-05"},{"lineNumber":44,"author":{"gitId":"ramapriyan912001"},"content":"    public void toModelType_nullGroupName_throwsIllegalValueException() {","lastModifiedDate":"2021-10-05"},{"lineNumber":45,"author":{"gitId":"kheekheekhee"},"content":"        JsonAdaptedGroup group \u003d new JsonAdaptedGroup(null, new ArrayList\u003c\u003e(), new ArrayList\u003c\u003e(), new ArrayList\u003c\u003e());","lastModifiedDate":"2021-10-06"},{"lineNumber":46,"author":{"gitId":"ramapriyan912001"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, GroupName.class.getSimpleName());","lastModifiedDate":"2021-10-05"},{"lineNumber":47,"author":{"gitId":"ramapriyan912001"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, group::toModelType);","lastModifiedDate":"2021-10-05"},{"lineNumber":48,"author":{"gitId":"ramapriyan912001"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":49,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":50,"author":{"gitId":"ramapriyan912001"},"content":"    @Test","lastModifiedDate":"2021-10-05"},{"lineNumber":51,"author":{"gitId":"ramapriyan912001"},"content":"    public void toModelType_invalidTags_throwsIllegalValueException() {","lastModifiedDate":"2021-10-05"},{"lineNumber":52,"author":{"gitId":"ramapriyan912001"},"content":"        List\u003cJsonAdaptedTag\u003e invalidTags \u003d new ArrayList\u003c\u003e(VALID_TAGS);","lastModifiedDate":"2021-10-05"},{"lineNumber":53,"author":{"gitId":"ramapriyan912001"},"content":"        invalidTags.add(new JsonAdaptedTag(INVALID_TAG));","lastModifiedDate":"2021-10-05"},{"lineNumber":54,"author":{"gitId":"ramapriyan912001"},"content":"        JsonAdaptedGroup group \u003d","lastModifiedDate":"2021-10-05"},{"lineNumber":55,"author":{"gitId":"kheekheekhee"},"content":"                new JsonAdaptedGroup(VALID_NAME, VALID_MEMBERS, invalidTags, new ArrayList\u003c\u003e());","lastModifiedDate":"2021-10-06"},{"lineNumber":56,"author":{"gitId":"ramapriyan912001"},"content":"        assertThrows(IllegalValueException.class, group::toModelType);","lastModifiedDate":"2021-10-05"},{"lineNumber":57,"author":{"gitId":"ramapriyan912001"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":58,"author":{"gitId":"ramapriyan912001"},"content":"}","lastModifiedDate":"2021-10-05"}],"authorContributionMap":{"kheekheekhee":3,"ramapriyan912001":55}},{"path":"src/test/java/seedu/awe/storage/JsonAdaptedPersonTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"ramapriyan912001"},"content":"package seedu.awe.storage;","lastModifiedDate":"2021-10-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"ramapriyan912001"},"content":"import static seedu.awe.storage.JsonAdaptedPerson.MISSING_FIELD_MESSAGE_FORMAT;","lastModifiedDate":"2021-10-05"},{"lineNumber":5,"author":{"gitId":"ramapriyan912001"},"content":"import static seedu.awe.testutil.Assert.assertThrows;","lastModifiedDate":"2021-10-05"},{"lineNumber":6,"author":{"gitId":"ramapriyan912001"},"content":"import static seedu.awe.testutil.TypicalPersons.BENSON;","lastModifiedDate":"2021-10-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"ramapriyan912001"},"content":"import seedu.awe.commons.exceptions.IllegalValueException;","lastModifiedDate":"2021-10-05"},{"lineNumber":15,"author":{"gitId":"ramapriyan912001"},"content":"import seedu.awe.model.person.Name;","lastModifiedDate":"2021-10-05"},{"lineNumber":16,"author":{"gitId":"ramapriyan912001"},"content":"import seedu.awe.model.person.Phone;","lastModifiedDate":"2021-10-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class JsonAdaptedPersonTest {","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private static final String INVALID_NAME \u003d \"R@chel\";","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private static final String INVALID_PHONE \u003d \"+651234\";","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final String INVALID_TAG \u003d \"#friend\";","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private static final String VALID_NAME \u003d BENSON.getName().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private static final String VALID_PHONE \u003d BENSON.getPhone().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private static final List\u003cJsonAdaptedTag\u003e VALID_TAGS \u003d BENSON.getTags().stream()","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"            .map(JsonAdaptedTag::new)","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"            .collect(Collectors.toList());","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public void toModelType_validPersonDetails_returnsPerson() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(BENSON);","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertEquals(BENSON, person.toModelType());","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public void toModelType_invalidName_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"marcuspeh"},"content":"                new JsonAdaptedPerson(INVALID_NAME, VALID_PHONE, VALID_TAGS);","lastModifiedDate":"2021-11-01"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Name.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public void toModelType_nullName_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"marcuspeh"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(null, VALID_PHONE, VALID_TAGS);","lastModifiedDate":"2021-11-01"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public void toModelType_invalidPhone_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":53,"author":{"gitId":"marcuspeh"},"content":"                new JsonAdaptedPerson(VALID_NAME, INVALID_PHONE, VALID_TAGS);","lastModifiedDate":"2021-11-01"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Phone.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public void toModelType_nullPhone_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":60,"author":{"gitId":"marcuspeh"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_NAME, null, VALID_TAGS);","lastModifiedDate":"2021-11-01"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Phone.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public void toModelType_invalidTags_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        List\u003cJsonAdaptedTag\u003e invalidTags \u003d new ArrayList\u003c\u003e(VALID_TAGS);","lastModifiedDate":"2018-08-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        invalidTags.add(new JsonAdaptedTag(INVALID_TAG));","lastModifiedDate":"2018-08-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":70,"author":{"gitId":"marcuspeh"},"content":"                new JsonAdaptedPerson(VALID_NAME, VALID_PHONE, invalidTags);","lastModifiedDate":"2021-11-01"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"marcuspeh":5,"ramapriyan912001":7,"-":62}},{"path":"src/test/java/seedu/awe/storage/JsonAddressBookStorageTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"ramapriyan912001"},"content":"package seedu.awe.storage;","lastModifiedDate":"2021-10-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"ramapriyan912001"},"content":"import static seedu.awe.testutil.Assert.assertThrows;","lastModifiedDate":"2021-10-05"},{"lineNumber":6,"author":{"gitId":"ramapriyan912001"},"content":"import static seedu.awe.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2021-10-05"},{"lineNumber":7,"author":{"gitId":"ramapriyan912001"},"content":"import static seedu.awe.testutil.TypicalPersons.HOON;","lastModifiedDate":"2021-10-05"},{"lineNumber":8,"author":{"gitId":"ramapriyan912001"},"content":"import static seedu.awe.testutil.TypicalPersons.IDA;","lastModifiedDate":"2021-10-05"},{"lineNumber":9,"author":{"gitId":"ramapriyan912001"},"content":"import static seedu.awe.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2021-10-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"ramapriyan912001"},"content":"import seedu.awe.commons.exceptions.DataConversionException;","lastModifiedDate":"2021-10-05"},{"lineNumber":19,"author":{"gitId":"ramapriyan912001"},"content":"import seedu.awe.model.AddressBook;","lastModifiedDate":"2021-10-05"},{"lineNumber":20,"author":{"gitId":"ramapriyan912001"},"content":"import seedu.awe.model.ReadOnlyAddressBook;","lastModifiedDate":"2021-10-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"public class JsonAddressBookStorageTest {","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"JsonAddressBookStorageTest\");","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public Path testFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public void readAddressBook_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e readAddressBook(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private java.util.Optional\u003cReadOnlyAddressBook\u003e readAddressBook(String filePath) throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        return new JsonAddressBookStorage(Paths.get(filePath)).readAddressBook(addToTestDataPathIfNotNull(filePath));","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private Path addToTestDataPathIfNotNull(String prefsFileInTestDataFolder) {","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        return prefsFileInTestDataFolder !\u003d null","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"                ? TEST_DATA_FOLDER.resolve(prefsFileInTestDataFolder)","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"                : null;","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public void read_missingFile_emptyResult() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertFalse(readAddressBook(\"NonExistentFile.json\").isPresent());","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public void read_notJsonFormat_exceptionThrown() {","lastModifiedDate":"2019-03-23"},{"lineNumber":50,"author":{"gitId":"ramapriyan912001"},"content":"        assertThrows(DataConversionException.class, () -\u003e readAddressBook(\"notJsonFormatAwe.json\"));","lastModifiedDate":"2021-10-31"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public void readAddressBook_invalidPersonAddressBook_throwDataConversionException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":55,"author":{"gitId":"ramapriyan912001"},"content":"        assertThrows(DataConversionException.class, () -\u003e readAddressBook(\"invalidPersonAwe.json\"));","lastModifiedDate":"2021-10-31"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public void readAddressBook_invalidAndValidPersonAddressBook_throwDataConversionException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":60,"author":{"gitId":"ramapriyan912001"},"content":"        assertThrows(DataConversionException.class, () -\u003e readAddressBook(\"invalidAndValidPersonAwe.json\"));","lastModifiedDate":"2021-10-31"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public void readAndSaveAddressBook_allInOrder_success() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":65,"author":{"gitId":"ramapriyan912001"},"content":"        Path filePath \u003d testFolder.resolve(\"TempAwe.json\");","lastModifiedDate":"2021-10-31"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        AddressBook original \u003d getTypicalAddressBook();","lastModifiedDate":"2018-08-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        JsonAddressBookStorage jsonAddressBookStorage \u003d new JsonAddressBookStorage(filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        // Save in new file and read back","lastModifiedDate":"2018-08-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        jsonAddressBookStorage.saveAddressBook(original, filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        ReadOnlyAddressBook readBack \u003d jsonAddressBookStorage.readAddressBook(filePath).get();","lastModifiedDate":"2018-08-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertEquals(original, new AddressBook(readBack));","lastModifiedDate":"2018-08-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        // Modify data, overwrite exiting file, and read back","lastModifiedDate":"2018-08-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        original.addPerson(HOON);","lastModifiedDate":"2018-08-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        original.removePerson(ALICE);","lastModifiedDate":"2018-08-13"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        jsonAddressBookStorage.saveAddressBook(original, filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        readBack \u003d jsonAddressBookStorage.readAddressBook(filePath).get();","lastModifiedDate":"2018-08-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        assertEquals(original, new AddressBook(readBack));","lastModifiedDate":"2018-08-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        // Save and read without specifying file path","lastModifiedDate":"2018-08-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        original.addPerson(IDA);","lastModifiedDate":"2018-08-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        jsonAddressBookStorage.saveAddressBook(original); // file path not specified","lastModifiedDate":"2018-08-13"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        readBack \u003d jsonAddressBookStorage.readAddressBook().get(); // file path not specified","lastModifiedDate":"2018-08-13"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        assertEquals(original, new AddressBook(readBack));","lastModifiedDate":"2018-08-13"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    public void saveAddressBook_nullAddressBook_throwsNullPointerException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e saveAddressBook(null, \"SomeFile.json\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     * Saves {@code addressBook} at the specified {@code filePath}.","lastModifiedDate":"2018-08-13"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    private void saveAddressBook(ReadOnlyAddressBook addressBook, String filePath) {","lastModifiedDate":"2018-08-13"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-08-13"},{"lineNumber":99,"author":{"gitId":"-"},"content":"            new JsonAddressBookStorage(Paths.get(filePath))","lastModifiedDate":"2018-08-13"},{"lineNumber":100,"author":{"gitId":"-"},"content":"                    .saveAddressBook(addressBook, addToTestDataPathIfNotNull(filePath));","lastModifiedDate":"2018-08-13"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2018-08-13"},{"lineNumber":102,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"There should not be an error writing to the file.\", ioe);","lastModifiedDate":"2018-08-13"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    public void saveAddressBook_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e saveAddressBook(new AddressBook(), null));","lastModifiedDate":"2019-03-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":110,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"ramapriyan912001":13,"-":97}},{"path":"src/test/java/seedu/awe/storage/JsonSerializableAddressBookTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"ramapriyan912001"},"content":"package seedu.awe.storage;","lastModifiedDate":"2021-10-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"ramapriyan912001"},"content":"import static seedu.awe.testutil.Assert.assertThrows;","lastModifiedDate":"2021-10-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"ramapriyan912001"},"content":"import seedu.awe.commons.exceptions.IllegalValueException;","lastModifiedDate":"2021-10-05"},{"lineNumber":12,"author":{"gitId":"ramapriyan912001"},"content":"import seedu.awe.commons.util.JsonUtil;","lastModifiedDate":"2021-10-05"},{"lineNumber":13,"author":{"gitId":"ramapriyan912001"},"content":"import seedu.awe.model.AddressBook;","lastModifiedDate":"2021-10-05"},{"lineNumber":14,"author":{"gitId":"ramapriyan912001"},"content":"import seedu.awe.testutil.TypicalPersons;","lastModifiedDate":"2021-10-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class JsonSerializableAddressBookTest {","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"marcuspeh"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"JsonSerializableAweTest\");","lastModifiedDate":"2021-11-01"},{"lineNumber":19,"author":{"gitId":"marcuspeh"},"content":"    private static final Path TYPICAL_PERSONS_FILE \u003d TEST_DATA_FOLDER.resolve(\"typicalPersonsAwe.json\");","lastModifiedDate":"2021-11-01"},{"lineNumber":20,"author":{"gitId":"marcuspeh"},"content":"    private static final Path DUPLICATE_PERSON_FILE \u003d TEST_DATA_FOLDER.resolve(\"duplicatePersonAwe.json\");","lastModifiedDate":"2021-11-01"},{"lineNumber":21,"author":{"gitId":"marcuspeh"},"content":"    private static final Path DUPLICATE_GROUP_FILE \u003d TEST_DATA_FOLDER.resolve(\"duplicateGroupAwe.json\");","lastModifiedDate":"2021-11-01"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void toModelType_typicalPersonsFile_success() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        JsonSerializableAddressBook dataFromFile \u003d JsonUtil.readJsonFile(TYPICAL_PERSONS_FILE,","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"                JsonSerializableAddressBook.class).get();","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        AddressBook addressBookFromFile \u003d dataFromFile.toModelType();","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        AddressBook typicalPersonsAddressBook \u003d TypicalPersons.getTypicalAddressBook();","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertEquals(addressBookFromFile, typicalPersonsAddressBook);","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"marcuspeh"},"content":"    public void toModelType_duplicatePersons_throwsIllegalValueException() throws Exception {","lastModifiedDate":"2021-11-01"},{"lineNumber":34,"author":{"gitId":"marcuspeh"},"content":"        JsonSerializableAddressBook dataFromFile \u003d JsonUtil.readJsonFile(DUPLICATE_PERSON_FILE,","lastModifiedDate":"2021-11-01"},{"lineNumber":35,"author":{"gitId":"-"},"content":"                JsonSerializableAddressBook.class).get();","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"marcuspeh"},"content":"        assertThrows(IllegalValueException.class, JsonSerializableAddressBook.MESSAGE_DUPLICATE_PERSON,","lastModifiedDate":"2021-11-01"},{"lineNumber":37,"author":{"gitId":"marcuspeh"},"content":"                dataFromFile::toModelType);","lastModifiedDate":"2021-11-01"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"marcuspeh"},"content":"    public void toModelType_duplicateGroups_throwsIllegalValueException() throws Exception {","lastModifiedDate":"2021-11-01"},{"lineNumber":42,"author":{"gitId":"marcuspeh"},"content":"        JsonSerializableAddressBook dataFromFile \u003d JsonUtil.readJsonFile(DUPLICATE_GROUP_FILE,","lastModifiedDate":"2021-11-01"},{"lineNumber":43,"author":{"gitId":"-"},"content":"                JsonSerializableAddressBook.class).get();","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"marcuspeh"},"content":"        assertThrows(IllegalValueException.class, JsonSerializableAddressBook.MESSAGE_DUPLICATE_GROUP,","lastModifiedDate":"2021-11-01"},{"lineNumber":45,"author":{"gitId":"-"},"content":"                dataFromFile::toModelType);","lastModifiedDate":"2019-03-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"marcuspeh":11,"ramapriyan912001":6,"-":31}},{"path":"src/test/java/seedu/awe/storage/JsonUserPrefsStorageTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"ramapriyan912001"},"content":"package seedu.awe.storage;","lastModifiedDate":"2021-10-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"ramapriyan912001"},"content":"import static seedu.awe.testutil.Assert.assertThrows;","lastModifiedDate":"2021-10-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":15,"author":{"gitId":"ramapriyan912001"},"content":"import seedu.awe.commons.core.GuiSettings;","lastModifiedDate":"2021-10-05"},{"lineNumber":16,"author":{"gitId":"ramapriyan912001"},"content":"import seedu.awe.commons.exceptions.DataConversionException;","lastModifiedDate":"2021-10-05"},{"lineNumber":17,"author":{"gitId":"ramapriyan912001"},"content":"import seedu.awe.model.UserPrefs;","lastModifiedDate":"2021-10-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class JsonUserPrefsStorageTest {","lastModifiedDate":"2016-10-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"JsonUserPrefsStorageTest\");","lastModifiedDate":"2018-04-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public Path testFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void readUserPrefs_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e readUserPrefs(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private Optional\u003cUserPrefs\u003e readUserPrefs(String userPrefsFileInTestDataFolder) throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        Path prefsFilePath \u003d addToTestDataPathIfNotNull(userPrefsFileInTestDataFolder);","lastModifiedDate":"2018-04-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return new JsonUserPrefsStorage(prefsFilePath).readUserPrefs(prefsFilePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void readUserPrefs_missingFile_emptyResult() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertFalse(readUserPrefs(\"NonExistentFile.json\").isPresent());","lastModifiedDate":"2016-09-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public void readUserPrefs_notJsonFormat_exceptionThrown() {","lastModifiedDate":"2019-03-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertThrows(DataConversionException.class, () -\u003e readUserPrefs(\"NotJsonFormatUserPrefs.json\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    private Path addToTestDataPathIfNotNull(String userPrefsFileInTestDataFolder) {","lastModifiedDate":"2018-04-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        return userPrefsFileInTestDataFolder !\u003d null","lastModifiedDate":"2016-09-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"                ? TEST_DATA_FOLDER.resolve(userPrefsFileInTestDataFolder)","lastModifiedDate":"2018-04-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"                : null;","lastModifiedDate":"2016-09-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public void readUserPrefs_fileInOrder_successfullyRead() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        UserPrefs expected \u003d getTypicalUserPrefs();","lastModifiedDate":"2017-02-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        UserPrefs actual \u003d readUserPrefs(\"TypicalUserPref.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public void readUserPrefs_valuesMissingFromFile_defaultValuesUsed() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        UserPrefs actual \u003d readUserPrefs(\"EmptyUserPrefs.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertEquals(new UserPrefs(), actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public void readUserPrefs_extraValuesInFile_extraValuesIgnored() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        UserPrefs expected \u003d getTypicalUserPrefs();","lastModifiedDate":"2017-02-25"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        UserPrefs actual \u003d readUserPrefs(\"ExtraValuesUserPref.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    private UserPrefs getTypicalUserPrefs() {","lastModifiedDate":"2017-02-25"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2017-02-25"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(new GuiSettings(1000, 500, 300, 100));","lastModifiedDate":"2018-11-27"},{"lineNumber":76,"author":{"gitId":"ramapriyan912001"},"content":"        userPrefs.setAddressBookFilePath(Paths.get(\"awe.json\"));","lastModifiedDate":"2021-10-31"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        return userPrefs;","lastModifiedDate":"2017-02-25"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-25"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public void savePrefs_nullPrefs_throwsNullPointerException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e saveUserPrefs(null, \"SomeFile.json\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public void saveUserPrefs_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e saveUserPrefs(new UserPrefs(), null));","lastModifiedDate":"2019-03-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-15"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     * Saves {@code userPrefs} at the specified {@code prefsFileInTestDataFolder} filepath.","lastModifiedDate":"2017-08-15"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-15"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    private void saveUserPrefs(UserPrefs userPrefs, String prefsFileInTestDataFolder) {","lastModifiedDate":"2017-08-15"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-08-15"},{"lineNumber":95,"author":{"gitId":"-"},"content":"            new JsonUserPrefsStorage(addToTestDataPathIfNotNull(prefsFileInTestDataFolder))","lastModifiedDate":"2016-10-12"},{"lineNumber":96,"author":{"gitId":"-"},"content":"                    .saveUserPrefs(userPrefs);","lastModifiedDate":"2016-10-12"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2017-08-15"},{"lineNumber":98,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"There should not be an error writing to the file\", ioe);","lastModifiedDate":"2017-08-15"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-08-15"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    public void saveUserPrefs_allInOrder_success() throws DataConversionException, IOException {","lastModifiedDate":"2016-09-24"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        UserPrefs original \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        original.setGuiSettings(new GuiSettings(1200, 200, 0, 2));","lastModifiedDate":"2018-11-27"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        Path pefsFilePath \u003d testFolder.resolve(\"TempPrefs.json\");","lastModifiedDate":"2019-04-25"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage jsonUserPrefsStorage \u003d new JsonUserPrefsStorage(pefsFilePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        //Try writing when the file doesn\u0027t exist","lastModifiedDate":"2016-09-24"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        jsonUserPrefsStorage.saveUserPrefs(original);","lastModifiedDate":"2016-10-01"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        UserPrefs readBack \u003d jsonUserPrefsStorage.readUserPrefs().get();","lastModifiedDate":"2016-10-01"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        assertEquals(original, readBack);","lastModifiedDate":"2016-09-24"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        //Try saving when the file exists","lastModifiedDate":"2016-09-24"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        original.setGuiSettings(new GuiSettings(5, 5, 5, 5));","lastModifiedDate":"2018-11-27"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        jsonUserPrefsStorage.saveUserPrefs(original);","lastModifiedDate":"2016-10-01"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        readBack \u003d jsonUserPrefsStorage.readUserPrefs().get();","lastModifiedDate":"2016-10-01"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        assertEquals(original, readBack);","lastModifiedDate":"2016-09-24"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":123,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-24"}],"authorContributionMap":{"ramapriyan912001":6,"-":117}},{"path":"src/test/java/seedu/awe/storage/StorageManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"ramapriyan912001"},"content":"package seedu.awe.storage;","lastModifiedDate":"2021-10-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"ramapriyan912001"},"content":"import static seedu.awe.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2021-10-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":13,"author":{"gitId":"ramapriyan912001"},"content":"import seedu.awe.commons.core.GuiSettings;","lastModifiedDate":"2021-10-05"},{"lineNumber":14,"author":{"gitId":"ramapriyan912001"},"content":"import seedu.awe.model.AddressBook;","lastModifiedDate":"2021-10-05"},{"lineNumber":15,"author":{"gitId":"ramapriyan912001"},"content":"import seedu.awe.model.ReadOnlyAddressBook;","lastModifiedDate":"2021-10-05"},{"lineNumber":16,"author":{"gitId":"ramapriyan912001"},"content":"import seedu.awe.model.UserPrefs;","lastModifiedDate":"2021-10-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class StorageManagerTest {","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public Path testFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private StorageManager storageManager;","lastModifiedDate":"2017-04-01"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2016-10-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        JsonAddressBookStorage addressBookStorage \u003d new JsonAddressBookStorage(getTempFilePath(\"ab\"));","lastModifiedDate":"2018-11-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(getTempFilePath(\"prefs\"));","lastModifiedDate":"2017-02-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        storageManager \u003d new StorageManager(addressBookStorage, userPrefsStorage);","lastModifiedDate":"2017-02-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private Path getTempFilePath(String fileName) {","lastModifiedDate":"2018-04-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return testFolder.resolve(fileName);","lastModifiedDate":"2019-04-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void prefsReadSave() throws Exception {","lastModifiedDate":"2016-10-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2016-09-28"},{"lineNumber":39,"author":{"gitId":"-"},"content":"         * Note: This is an integration test that verifies the StorageManager is properly wired to the","lastModifiedDate":"2016-09-28"},{"lineNumber":40,"author":{"gitId":"-"},"content":"         * {@link JsonUserPrefsStorage} class.","lastModifiedDate":"2016-10-01"},{"lineNumber":41,"author":{"gitId":"-"},"content":"         * More extensive testing of UserPref saving/reading is done in {@link JsonUserPrefsStorageTest} class.","lastModifiedDate":"2016-10-01"},{"lineNumber":42,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-09-28"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        UserPrefs original \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        original.setGuiSettings(new GuiSettings(300, 600, 4, 6));","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        storageManager.saveUserPrefs(original);","lastModifiedDate":"2016-09-28"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        UserPrefs retrieved \u003d storageManager.readUserPrefs().get();","lastModifiedDate":"2016-09-28"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertEquals(original, retrieved);","lastModifiedDate":"2016-09-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public void addressBookReadSave() throws Exception {","lastModifiedDate":"2016-09-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2016-10-16"},{"lineNumber":53,"author":{"gitId":"-"},"content":"         * Note: This is an integration test that verifies the StorageManager is properly wired to the","lastModifiedDate":"2016-10-16"},{"lineNumber":54,"author":{"gitId":"-"},"content":"         * {@link JsonAddressBookStorage} class.","lastModifiedDate":"2018-11-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"         * More extensive testing of UserPref saving/reading is done in {@link JsonAddressBookStorageTest} class.","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-10-16"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        AddressBook original \u003d getTypicalAddressBook();","lastModifiedDate":"2017-07-19"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        storageManager.saveAddressBook(original);","lastModifiedDate":"2016-09-28"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        ReadOnlyAddressBook retrieved \u003d storageManager.readAddressBook().get();","lastModifiedDate":"2016-09-28"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertEquals(original, new AddressBook(retrieved));","lastModifiedDate":"2016-09-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-01"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public void getAddressBookFilePath() {","lastModifiedDate":"2016-10-01"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertNotNull(storageManager.getAddressBookFilePath());","lastModifiedDate":"2016-10-01"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-01"},{"lineNumber":68,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"ramapriyan912001":6,"-":62}},{"path":"src/test/java/seedu/awe/storage/StorageUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"ramapriyan912001"},"content":"package seedu.awe.storage;","lastModifiedDate":"2021-10-27"},{"lineNumber":2,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":3,"author":{"gitId":"ramapriyan912001"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-27"},{"lineNumber":4,"author":{"gitId":"ramapriyan912001"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-27"},{"lineNumber":5,"author":{"gitId":"ramapriyan912001"},"content":"import static seedu.awe.testutil.Assert.assertThrows;","lastModifiedDate":"2021-10-27"},{"lineNumber":6,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":7,"author":{"gitId":"ramapriyan912001"},"content":"import java.util.List;","lastModifiedDate":"2021-10-27"},{"lineNumber":8,"author":{"gitId":"ramapriyan912001"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2021-10-27"},{"lineNumber":9,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":10,"author":{"gitId":"ramapriyan912001"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-27"},{"lineNumber":11,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":12,"author":{"gitId":"ramapriyan912001"},"content":"import seedu.awe.commons.exceptions.IllegalValueException;","lastModifiedDate":"2021-10-27"},{"lineNumber":13,"author":{"gitId":"ramapriyan912001"},"content":"import seedu.awe.model.expense.Expense;","lastModifiedDate":"2021-10-27"},{"lineNumber":14,"author":{"gitId":"ramapriyan912001"},"content":"import seedu.awe.model.expense.IndividualAmount;","lastModifiedDate":"2021-10-27"},{"lineNumber":15,"author":{"gitId":"ramapriyan912001"},"content":"import seedu.awe.testutil.TypicalExpenses;","lastModifiedDate":"2021-10-27"},{"lineNumber":16,"author":{"gitId":"ramapriyan912001"},"content":"import seedu.awe.testutil.TypicalGroups;","lastModifiedDate":"2021-10-27"},{"lineNumber":17,"author":{"gitId":"ramapriyan912001"},"content":"import seedu.awe.testutil.TypicalIndividualAmounts;","lastModifiedDate":"2021-10-27"},{"lineNumber":18,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":19,"author":{"gitId":"ramapriyan912001"},"content":"public class StorageUtilTest {","lastModifiedDate":"2021-10-27"},{"lineNumber":20,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":21,"author":{"gitId":"ramapriyan912001"},"content":"    public static final List\u003cExpense\u003e VALID_EXPENSES_BALI \u003d TypicalExpenses.getTypicalExpenses(TypicalGroups.BALI);","lastModifiedDate":"2021-10-27"},{"lineNumber":22,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":23,"author":{"gitId":"ramapriyan912001"},"content":"    public static final List\u003cExpense\u003e VALID_EXPENSES_HELSINKI \u003d TypicalExpenses","lastModifiedDate":"2021-10-27"},{"lineNumber":24,"author":{"gitId":"ramapriyan912001"},"content":"            .getTypicalExpenses(TypicalGroups.HELSINKI);","lastModifiedDate":"2021-10-27"},{"lineNumber":25,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":26,"author":{"gitId":"ramapriyan912001"},"content":"    public static final List\u003cJsonAdaptedExpense\u003e VALID_JSON_ADAPTED_EXPENSES_BALI \u003d VALID_EXPENSES_BALI","lastModifiedDate":"2021-10-27"},{"lineNumber":27,"author":{"gitId":"ramapriyan912001"},"content":"            .stream()","lastModifiedDate":"2021-10-27"},{"lineNumber":28,"author":{"gitId":"ramapriyan912001"},"content":"            .map(JsonAdaptedExpense::new)","lastModifiedDate":"2021-10-27"},{"lineNumber":29,"author":{"gitId":"ramapriyan912001"},"content":"            .collect(Collectors.toList());","lastModifiedDate":"2021-10-27"},{"lineNumber":30,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":31,"author":{"gitId":"ramapriyan912001"},"content":"    public static final List\u003cJsonAdaptedExpense\u003e VALID_JSON_ADAPTED_EXPENSES_HELSINKI \u003d VALID_EXPENSES_HELSINKI","lastModifiedDate":"2021-10-27"},{"lineNumber":32,"author":{"gitId":"ramapriyan912001"},"content":"            .stream()","lastModifiedDate":"2021-10-27"},{"lineNumber":33,"author":{"gitId":"ramapriyan912001"},"content":"            .map(JsonAdaptedExpense::new)","lastModifiedDate":"2021-10-27"},{"lineNumber":34,"author":{"gitId":"ramapriyan912001"},"content":"            .collect(Collectors.toList());","lastModifiedDate":"2021-10-27"},{"lineNumber":35,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":36,"author":{"gitId":"ramapriyan912001"},"content":"    @Test","lastModifiedDate":"2021-10-27"},{"lineNumber":37,"author":{"gitId":"ramapriyan912001"},"content":"    public void convertExpenseMapToListToIndividualAmounts_validInput_success() {","lastModifiedDate":"2021-10-27"},{"lineNumber":38,"author":{"gitId":"ramapriyan912001"},"content":"        List\u003cIndividualAmount\u003e listAbc1 \u003d StorageUtil.convertExpenseMapToListOfIndividualAmounts(","lastModifiedDate":"2021-10-27"},{"lineNumber":39,"author":{"gitId":"ramapriyan912001"},"content":"                TypicalIndividualAmounts.VALID_EXPENSE_MAP_ABC);","lastModifiedDate":"2021-10-27"},{"lineNumber":40,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":41,"author":{"gitId":"ramapriyan912001"},"content":"        List\u003cIndividualAmount\u003e listAbc2 \u003d TypicalIndividualAmounts.VALID_INDIVIDUAL_AMOUNTS_ABC;","lastModifiedDate":"2021-10-27"},{"lineNumber":42,"author":{"gitId":"ramapriyan912001"},"content":"        assertTrue(listAbc1.size() \u003d\u003d listAbc2.size());","lastModifiedDate":"2021-10-27"},{"lineNumber":43,"author":{"gitId":"ramapriyan912001"},"content":"        for (IndividualAmount individualAmount1 : listAbc1) {","lastModifiedDate":"2021-10-27"},{"lineNumber":44,"author":{"gitId":"ramapriyan912001"},"content":"            boolean isFound \u003d false;","lastModifiedDate":"2021-10-27"},{"lineNumber":45,"author":{"gitId":"ramapriyan912001"},"content":"            for (IndividualAmount individualAmount2 : listAbc2) {","lastModifiedDate":"2021-10-27"},{"lineNumber":46,"author":{"gitId":"ramapriyan912001"},"content":"                if (individualAmount1.equals(individualAmount2)) {","lastModifiedDate":"2021-10-27"},{"lineNumber":47,"author":{"gitId":"ramapriyan912001"},"content":"                    isFound \u003d true;","lastModifiedDate":"2021-10-27"},{"lineNumber":48,"author":{"gitId":"ramapriyan912001"},"content":"                    break;","lastModifiedDate":"2021-10-27"},{"lineNumber":49,"author":{"gitId":"ramapriyan912001"},"content":"                }","lastModifiedDate":"2021-10-27"},{"lineNumber":50,"author":{"gitId":"ramapriyan912001"},"content":"            }","lastModifiedDate":"2021-10-27"},{"lineNumber":51,"author":{"gitId":"ramapriyan912001"},"content":"            assertTrue(isFound);","lastModifiedDate":"2021-10-27"},{"lineNumber":52,"author":{"gitId":"ramapriyan912001"},"content":"        }","lastModifiedDate":"2021-10-27"},{"lineNumber":53,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":54,"author":{"gitId":"ramapriyan912001"},"content":"        List\u003cIndividualAmount\u003e listDe1 \u003d StorageUtil.convertExpenseMapToListOfIndividualAmounts(","lastModifiedDate":"2021-10-27"},{"lineNumber":55,"author":{"gitId":"ramapriyan912001"},"content":"                TypicalIndividualAmounts.VALID_EXPENSE_MAP_DE);","lastModifiedDate":"2021-10-27"},{"lineNumber":56,"author":{"gitId":"ramapriyan912001"},"content":"        List\u003cIndividualAmount\u003e listDe2 \u003d TypicalIndividualAmounts.VALID_INDIVIDUAL_AMOUNTS_DE;","lastModifiedDate":"2021-10-27"},{"lineNumber":57,"author":{"gitId":"ramapriyan912001"},"content":"        assertEquals(listDe2.size(), listDe1.size());","lastModifiedDate":"2021-10-27"},{"lineNumber":58,"author":{"gitId":"ramapriyan912001"},"content":"        for (IndividualAmount individualAmount1 : listDe1) {","lastModifiedDate":"2021-10-27"},{"lineNumber":59,"author":{"gitId":"ramapriyan912001"},"content":"            boolean isFound \u003d false;","lastModifiedDate":"2021-10-27"},{"lineNumber":60,"author":{"gitId":"ramapriyan912001"},"content":"            for (IndividualAmount individualAmount2 : listDe2) {","lastModifiedDate":"2021-10-27"},{"lineNumber":61,"author":{"gitId":"ramapriyan912001"},"content":"                if (individualAmount1.equals(individualAmount2)) {","lastModifiedDate":"2021-10-27"},{"lineNumber":62,"author":{"gitId":"ramapriyan912001"},"content":"                    isFound \u003d true;","lastModifiedDate":"2021-10-27"},{"lineNumber":63,"author":{"gitId":"ramapriyan912001"},"content":"                    break;","lastModifiedDate":"2021-10-27"},{"lineNumber":64,"author":{"gitId":"ramapriyan912001"},"content":"                }","lastModifiedDate":"2021-10-27"},{"lineNumber":65,"author":{"gitId":"ramapriyan912001"},"content":"            }","lastModifiedDate":"2021-10-27"},{"lineNumber":66,"author":{"gitId":"ramapriyan912001"},"content":"            assertTrue(isFound);","lastModifiedDate":"2021-10-27"},{"lineNumber":67,"author":{"gitId":"ramapriyan912001"},"content":"        }","lastModifiedDate":"2021-10-27"},{"lineNumber":68,"author":{"gitId":"ramapriyan912001"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":69,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":70,"author":{"gitId":"ramapriyan912001"},"content":"    @Test","lastModifiedDate":"2021-10-27"},{"lineNumber":71,"author":{"gitId":"ramapriyan912001"},"content":"    public void convertExpenseMapToListToIndividualAmounts_invalidInput_throwsNullPointerException() {","lastModifiedDate":"2021-10-27"},{"lineNumber":72,"author":{"gitId":"ramapriyan912001"},"content":"        assertThrows(NullPointerException.class, () -\u003e StorageUtil.convertExpenseMapToListOfIndividualAmounts(null));","lastModifiedDate":"2021-10-27"},{"lineNumber":73,"author":{"gitId":"ramapriyan912001"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":74,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":75,"author":{"gitId":"ramapriyan912001"},"content":"    @Test","lastModifiedDate":"2021-10-27"},{"lineNumber":76,"author":{"gitId":"ramapriyan912001"},"content":"    public void convertAdaptedExpensesToExpenses_validInput_success() throws IllegalValueException {","lastModifiedDate":"2021-10-27"},{"lineNumber":77,"author":{"gitId":"ramapriyan912001"},"content":"        assertEquals(VALID_EXPENSES_BALI,","lastModifiedDate":"2021-10-27"},{"lineNumber":78,"author":{"gitId":"ramapriyan912001"},"content":"                StorageUtil.convertAdaptedExpensesToExpenses(VALID_JSON_ADAPTED_EXPENSES_BALI));","lastModifiedDate":"2021-10-27"},{"lineNumber":79,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":80,"author":{"gitId":"ramapriyan912001"},"content":"        assertEquals(VALID_EXPENSES_HELSINKI,","lastModifiedDate":"2021-10-27"},{"lineNumber":81,"author":{"gitId":"ramapriyan912001"},"content":"                StorageUtil.convertAdaptedExpensesToExpenses(VALID_JSON_ADAPTED_EXPENSES_HELSINKI));","lastModifiedDate":"2021-10-27"},{"lineNumber":82,"author":{"gitId":"ramapriyan912001"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":83,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":84,"author":{"gitId":"ramapriyan912001"},"content":"    @Test","lastModifiedDate":"2021-10-27"},{"lineNumber":85,"author":{"gitId":"ramapriyan912001"},"content":"    public void convertAdaptedExpensesToExpenses_invalidInput_throwsNullPointerException() {","lastModifiedDate":"2021-10-27"},{"lineNumber":86,"author":{"gitId":"ramapriyan912001"},"content":"        assertThrows(NullPointerException.class, () -\u003e StorageUtil.convertAdaptedExpensesToExpenses(null));","lastModifiedDate":"2021-10-27"},{"lineNumber":87,"author":{"gitId":"ramapriyan912001"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":88,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":89,"author":{"gitId":"ramapriyan912001"},"content":"    @Test","lastModifiedDate":"2021-10-27"},{"lineNumber":90,"author":{"gitId":"ramapriyan912001"},"content":"    public void convertListOfJsonAdaptedIndividualAmountsToExpenseMap_validInput_success()","lastModifiedDate":"2021-10-27"},{"lineNumber":91,"author":{"gitId":"ramapriyan912001"},"content":"            throws IllegalValueException {","lastModifiedDate":"2021-10-27"},{"lineNumber":92,"author":{"gitId":"ramapriyan912001"},"content":"        assertEquals(TypicalIndividualAmounts.VALID_EXPENSE_MAP_ABC, StorageUtil","lastModifiedDate":"2021-10-27"},{"lineNumber":93,"author":{"gitId":"ramapriyan912001"},"content":"                .convertListOfJsonAdaptedIndividualAmountsToExpenseMap(","lastModifiedDate":"2021-10-27"},{"lineNumber":94,"author":{"gitId":"ramapriyan912001"},"content":"                        TypicalIndividualAmounts.VALID_JSON_ADAPTED_INDIVIDUAL_AMOUNTS_ABC","lastModifiedDate":"2021-10-27"},{"lineNumber":95,"author":{"gitId":"ramapriyan912001"},"content":"                ));","lastModifiedDate":"2021-10-27"},{"lineNumber":96,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":97,"author":{"gitId":"ramapriyan912001"},"content":"        assertEquals(TypicalIndividualAmounts.VALID_EXPENSE_MAP_DE, StorageUtil","lastModifiedDate":"2021-10-27"},{"lineNumber":98,"author":{"gitId":"ramapriyan912001"},"content":"                .convertListOfJsonAdaptedIndividualAmountsToExpenseMap(","lastModifiedDate":"2021-10-27"},{"lineNumber":99,"author":{"gitId":"ramapriyan912001"},"content":"                        TypicalIndividualAmounts.VALID_JSON_ADAPTED_INDIVIDUAL_AMOUNTS_DE","lastModifiedDate":"2021-10-27"},{"lineNumber":100,"author":{"gitId":"ramapriyan912001"},"content":"                ));","lastModifiedDate":"2021-10-27"},{"lineNumber":101,"author":{"gitId":"ramapriyan912001"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":102,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":103,"author":{"gitId":"ramapriyan912001"},"content":"    @Test","lastModifiedDate":"2021-10-27"},{"lineNumber":104,"author":{"gitId":"ramapriyan912001"},"content":"    public void convertListOfJsonAdaptedIndividualAmountsToExpenseMap_invalidInput_throwsNullPointerException() {","lastModifiedDate":"2021-10-27"},{"lineNumber":105,"author":{"gitId":"ramapriyan912001"},"content":"        assertThrows(NullPointerException.class, () -\u003e","lastModifiedDate":"2021-10-27"},{"lineNumber":106,"author":{"gitId":"ramapriyan912001"},"content":"                StorageUtil.convertListOfJsonAdaptedIndividualAmountsToExpenseMap(null));","lastModifiedDate":"2021-10-27"},{"lineNumber":107,"author":{"gitId":"ramapriyan912001"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":108,"author":{"gitId":"ramapriyan912001"},"content":"}","lastModifiedDate":"2021-10-27"}],"authorContributionMap":{"ramapriyan912001":108}},{"path":"src/test/java/seedu/awe/testutil/AddressBookBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"ramapriyan912001"},"content":"package seedu.awe.testutil;","lastModifiedDate":"2021-10-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"ramapriyan912001"},"content":"import seedu.awe.model.AddressBook;","lastModifiedDate":"2021-10-05"},{"lineNumber":4,"author":{"gitId":"ramapriyan912001"},"content":"import seedu.awe.model.person.Person;","lastModifiedDate":"2021-10-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * A utility class to help with building Addressbook objects.","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Example usage: \u003cbr\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":" *     {@code AddressBook ab \u003d new AddressBookBuilder().withPerson(\"John\", \"Doe\").build();}","lastModifiedDate":"2018-03-29"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class AddressBookBuilder {","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    private AddressBook addressBook;","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public AddressBookBuilder() {","lastModifiedDate":"2017-05-31"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        addressBook \u003d new AddressBook();","lastModifiedDate":"2017-05-31"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public AddressBookBuilder(AddressBook addressBook) {","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        this.addressBook \u003d addressBook;","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Adds a new {@code Person} to the {@code AddressBook} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public AddressBookBuilder withPerson(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        addressBook.addPerson(person);","lastModifiedDate":"2016-09-01"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public AddressBook build() {","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        return addressBook;","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"ramapriyan912001":3,"-":31}},{"path":"src/test/java/seedu/awe/testutil/Assert.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"ramapriyan912001"},"content":"package seedu.awe.testutil;","lastModifiedDate":"2021-10-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-17"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Assertions;","lastModifiedDate":"2019-03-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.function.Executable;","lastModifiedDate":"2019-03-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-03-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-07-17"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * A set of assertion methods useful for writing tests.","lastModifiedDate":"2017-07-17"},{"lineNumber":8,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-07-17"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class Assert {","lastModifiedDate":"2017-07-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"     * Asserts that the {@code executable} throws the {@code expectedType} Exception.","lastModifiedDate":"2019-03-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"     * This is a wrapper method that invokes {@link Assertions#assertThrows(Class, Executable)}, to maintain consistency","lastModifiedDate":"2019-03-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     * with our custom {@link #assertThrows(Class, String, Executable)} method.","lastModifiedDate":"2019-03-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * To standardize API calls in this project, users should use this method instead of","lastModifiedDate":"2019-03-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * {@link Assertions#assertThrows(Class, Executable)}.","lastModifiedDate":"2019-03-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public static void assertThrows(Class\u003c? extends Throwable\u003e expectedType, Executable executable) {","lastModifiedDate":"2019-03-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        Assertions.assertThrows(expectedType, executable);","lastModifiedDate":"2019-03-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-02-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-02-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-02-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Asserts that the {@code executable} throws the {@code expectedType} Exception with the {@code expectedMessage}.","lastModifiedDate":"2019-03-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * If there\u0027s no need for the verification of the exception\u0027s error message, call","lastModifiedDate":"2018-02-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * {@link #assertThrows(Class, Executable)} instead.","lastModifiedDate":"2019-03-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2019-03-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * @see #assertThrows(Class, Executable)","lastModifiedDate":"2019-03-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-02-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public static void assertThrows(Class\u003c? extends Throwable\u003e expectedType, String expectedMessage,","lastModifiedDate":"2019-03-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            Executable executable) {","lastModifiedDate":"2019-03-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        Throwable thrownException \u003d Assertions.assertThrows(expectedType, executable);","lastModifiedDate":"2019-03-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        Assertions.assertEquals(expectedMessage, thrownException.getMessage());","lastModifiedDate":"2019-03-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-17"},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-07-17"}],"authorContributionMap":{"ramapriyan912001":1,"-":33}},{"path":"src/test/java/seedu/awe/testutil/EditPersonDescriptorBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"ramapriyan912001"},"content":"package seedu.awe.testutil;","lastModifiedDate":"2021-10-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-12-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2017-12-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2017-12-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":7,"author":{"gitId":"marcuspeh"},"content":"import seedu.awe.logic.commands.EditContactCommand.EditPersonDescriptor;","lastModifiedDate":"2021-10-11"},{"lineNumber":8,"author":{"gitId":"ramapriyan912001"},"content":"import seedu.awe.model.person.Name;","lastModifiedDate":"2021-10-05"},{"lineNumber":9,"author":{"gitId":"ramapriyan912001"},"content":"import seedu.awe.model.person.Person;","lastModifiedDate":"2021-10-05"},{"lineNumber":10,"author":{"gitId":"ramapriyan912001"},"content":"import seedu.awe.model.person.Phone;","lastModifiedDate":"2021-10-05"},{"lineNumber":11,"author":{"gitId":"ramapriyan912001"},"content":"import seedu.awe.model.tag.Tag;","lastModifiedDate":"2021-10-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-05-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * A utility class to help with building EditPersonDescriptor objects.","lastModifiedDate":"2017-05-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-05-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class EditPersonDescriptorBuilder {","lastModifiedDate":"2017-05-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private EditPersonDescriptor descriptor;","lastModifiedDate":"2017-05-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder() {","lastModifiedDate":"2017-05-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptor();","lastModifiedDate":"2017-05-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder(EditPersonDescriptor descriptor) {","lastModifiedDate":"2017-05-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        this.descriptor \u003d new EditPersonDescriptor(descriptor);","lastModifiedDate":"2017-05-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Returns an {@code EditPersonDescriptor} with fields containing {@code person}\u0027s details","lastModifiedDate":"2017-06-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptor();","lastModifiedDate":"2017-06-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        descriptor.setName(person.getName());","lastModifiedDate":"2017-06-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        descriptor.setPhone(person.getPhone());","lastModifiedDate":"2017-06-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        descriptor.setTags(person.getTags());","lastModifiedDate":"2017-06-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * Sets the {@code Name} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withName(String name) {","lastModifiedDate":"2017-08-15"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        descriptor.setName(new Name(name));","lastModifiedDate":"2017-12-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     * Sets the {@code Phone} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withPhone(String phone) {","lastModifiedDate":"2017-08-15"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        descriptor.setPhone(new Phone(phone));","lastModifiedDate":"2017-12-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * Parses the {@code tags} into a {@code Set\u003cTag\u003e} and set it to the {@code EditPersonDescriptor}","lastModifiedDate":"2017-07-26"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     * that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withTags(String... tags) {","lastModifiedDate":"2017-08-15"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e tagSet \u003d Stream.of(tags).map(Tag::new).collect(Collectors.toSet());","lastModifiedDate":"2017-12-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        descriptor.setTags(tagSet);","lastModifiedDate":"2017-12-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public EditPersonDescriptor build() {","lastModifiedDate":"2017-05-05"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        return descriptor;","lastModifiedDate":"2017-05-05"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":68,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-05"}],"authorContributionMap":{"marcuspeh":1,"ramapriyan912001":5,"-":62}},{"path":"src/test/java/seedu/awe/testutil/ExpenseBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"kheekheekhee"},"content":"package seedu.awe.testutil;","lastModifiedDate":"2021-10-12"},{"lineNumber":2,"author":{"gitId":"kheekheekhee"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":3,"author":{"gitId":"kheekheekhee"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-12"},{"lineNumber":4,"author":{"gitId":"kheekheekhee"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":5,"author":{"gitId":"kheekheekhee"},"content":"import seedu.awe.model.expense.Cost;","lastModifiedDate":"2021-10-12"},{"lineNumber":6,"author":{"gitId":"kheekheekhee"},"content":"import seedu.awe.model.expense.Description;","lastModifiedDate":"2021-10-12"},{"lineNumber":7,"author":{"gitId":"kheekheekhee"},"content":"import seedu.awe.model.expense.Expense;","lastModifiedDate":"2021-10-12"},{"lineNumber":8,"author":{"gitId":"kheekheekhee"},"content":"import seedu.awe.model.person.Person;","lastModifiedDate":"2021-10-12"},{"lineNumber":9,"author":{"gitId":"kheekheekhee"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":10,"author":{"gitId":"kheekheekhee"},"content":"public class ExpenseBuilder {","lastModifiedDate":"2021-10-12"},{"lineNumber":11,"author":{"gitId":"kheekheekhee"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":12,"author":{"gitId":"kheekheekhee"},"content":"    public static final String DEFAULT_COST \u003d \"50\";","lastModifiedDate":"2021-10-12"},{"lineNumber":13,"author":{"gitId":"kheekheekhee"},"content":"    public static final String DEFAULT_DESCRIPTION \u003d \"holiday\";","lastModifiedDate":"2021-10-12"},{"lineNumber":14,"author":{"gitId":"Jingwencloud"},"content":"    public static final Person DEFAULT_PERSON \u003d new PersonBuilder().build();","lastModifiedDate":"2021-10-28"},{"lineNumber":15,"author":{"gitId":"kheekheekhee"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":16,"author":{"gitId":"Jingwencloud"},"content":"    private Person payer;","lastModifiedDate":"2021-10-28"},{"lineNumber":17,"author":{"gitId":"kheekheekhee"},"content":"    private Cost cost;","lastModifiedDate":"2021-10-12"},{"lineNumber":18,"author":{"gitId":"kheekheekhee"},"content":"    private Description description;","lastModifiedDate":"2021-10-12"},{"lineNumber":19,"author":{"gitId":"kheekheekhee"},"content":"    private final ArrayList\u003cPerson\u003e included \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-17"},{"lineNumber":20,"author":{"gitId":"kheekheekhee"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":21,"author":{"gitId":"Jingwencloud"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":22,"author":{"gitId":"kheekheekhee"},"content":"    /**","lastModifiedDate":"2021-10-12"},{"lineNumber":23,"author":{"gitId":"Jingwencloud"},"content":"     * Creates an {@code ExpenseBuilder} with the default details.","lastModifiedDate":"2021-10-28"},{"lineNumber":24,"author":{"gitId":"kheekheekhee"},"content":"     */","lastModifiedDate":"2021-10-12"},{"lineNumber":25,"author":{"gitId":"kheekheekhee"},"content":"    public ExpenseBuilder() {","lastModifiedDate":"2021-10-12"},{"lineNumber":26,"author":{"gitId":"Jingwencloud"},"content":"        payer \u003d DEFAULT_PERSON;","lastModifiedDate":"2021-10-28"},{"lineNumber":27,"author":{"gitId":"kheekheekhee"},"content":"        cost \u003d new Cost(DEFAULT_COST);","lastModifiedDate":"2021-10-12"},{"lineNumber":28,"author":{"gitId":"kheekheekhee"},"content":"        description \u003d new Description(DEFAULT_DESCRIPTION);","lastModifiedDate":"2021-10-12"},{"lineNumber":29,"author":{"gitId":"kheekheekhee"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":30,"author":{"gitId":"kheekheekhee"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":31,"author":{"gitId":"kheekheekhee"},"content":"    /**","lastModifiedDate":"2021-10-12"},{"lineNumber":32,"author":{"gitId":"Jingwencloud"},"content":"     * Initializes the ExpenseBuilder with the data of {@code expenseToCopy}.","lastModifiedDate":"2021-10-28"},{"lineNumber":33,"author":{"gitId":"kheekheekhee"},"content":"     */","lastModifiedDate":"2021-10-12"},{"lineNumber":34,"author":{"gitId":"kheekheekhee"},"content":"    public ExpenseBuilder(Expense expenseToCopy) {","lastModifiedDate":"2021-10-12"},{"lineNumber":35,"author":{"gitId":"Jingwencloud"},"content":"        payer \u003d expenseToCopy.getPayer();","lastModifiedDate":"2021-10-28"},{"lineNumber":36,"author":{"gitId":"kheekheekhee"},"content":"        cost \u003d expenseToCopy.getCost();","lastModifiedDate":"2021-10-12"},{"lineNumber":37,"author":{"gitId":"kheekheekhee"},"content":"        description \u003d expenseToCopy.getDescription();","lastModifiedDate":"2021-10-12"},{"lineNumber":38,"author":{"gitId":"kheekheekhee"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":39,"author":{"gitId":"kheekheekhee"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":40,"author":{"gitId":"Jingwencloud"},"content":"    /**","lastModifiedDate":"2021-10-13"},{"lineNumber":41,"author":{"gitId":"Jingwencloud"},"content":"     * Sets the {@code Description} of the {@code Expense} that we are building.","lastModifiedDate":"2021-10-13"},{"lineNumber":42,"author":{"gitId":"Jingwencloud"},"content":"     *","lastModifiedDate":"2021-10-13"},{"lineNumber":43,"author":{"gitId":"Jingwencloud"},"content":"     * @param description The description of the expense.","lastModifiedDate":"2021-10-13"},{"lineNumber":44,"author":{"gitId":"Jingwencloud"},"content":"     * @return An expensebuilder.","lastModifiedDate":"2021-10-13"},{"lineNumber":45,"author":{"gitId":"Jingwencloud"},"content":"     */","lastModifiedDate":"2021-10-13"},{"lineNumber":46,"author":{"gitId":"Jingwencloud"},"content":"    public ExpenseBuilder withDescription(String description) {","lastModifiedDate":"2021-10-13"},{"lineNumber":47,"author":{"gitId":"Jingwencloud"},"content":"        this.description \u003d new Description(description);","lastModifiedDate":"2021-10-13"},{"lineNumber":48,"author":{"gitId":"Jingwencloud"},"content":"        return this;","lastModifiedDate":"2021-10-13"},{"lineNumber":49,"author":{"gitId":"Jingwencloud"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":50,"author":{"gitId":"Jingwencloud"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":51,"author":{"gitId":"kheekheekhee"},"content":"    /**","lastModifiedDate":"2021-10-12"},{"lineNumber":52,"author":{"gitId":"Jingwencloud"},"content":"     * Sets the {@code payer} of the {@code Expense} that we are building.","lastModifiedDate":"2021-10-28"},{"lineNumber":53,"author":{"gitId":"kheekheekhee"},"content":"     */","lastModifiedDate":"2021-10-12"},{"lineNumber":54,"author":{"gitId":"Jingwencloud"},"content":"    public ExpenseBuilder withPayer(Person payer) {","lastModifiedDate":"2021-10-28"},{"lineNumber":55,"author":{"gitId":"Jingwencloud"},"content":"        this.payer \u003d payer;","lastModifiedDate":"2021-10-28"},{"lineNumber":56,"author":{"gitId":"kheekheekhee"},"content":"        return this;","lastModifiedDate":"2021-10-12"},{"lineNumber":57,"author":{"gitId":"kheekheekhee"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":58,"author":{"gitId":"kheekheekhee"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":59,"author":{"gitId":"kheekheekhee"},"content":"    /**","lastModifiedDate":"2021-10-12"},{"lineNumber":60,"author":{"gitId":"kheekheekhee"},"content":"     * Sets the {@code Cost} of the {@code Expense} that we are building.","lastModifiedDate":"2021-10-12"},{"lineNumber":61,"author":{"gitId":"kheekheekhee"},"content":"     */","lastModifiedDate":"2021-10-12"},{"lineNumber":62,"author":{"gitId":"kheekheekhee"},"content":"    public ExpenseBuilder withCost(String cost) {","lastModifiedDate":"2021-10-12"},{"lineNumber":63,"author":{"gitId":"kheekheekhee"},"content":"        this.cost \u003d new Cost(cost);","lastModifiedDate":"2021-10-12"},{"lineNumber":64,"author":{"gitId":"kheekheekhee"},"content":"        return this;","lastModifiedDate":"2021-10-12"},{"lineNumber":65,"author":{"gitId":"kheekheekhee"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":66,"author":{"gitId":"kheekheekhee"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":67,"author":{"gitId":"kheekheekhee"},"content":"    /**","lastModifiedDate":"2021-10-12"},{"lineNumber":68,"author":{"gitId":"Jingwencloud"},"content":"     * Sets the {@code included} of the {@code Expense} that we are building.","lastModifiedDate":"2021-10-28"},{"lineNumber":69,"author":{"gitId":"kheekheekhee"},"content":"     */","lastModifiedDate":"2021-10-12"},{"lineNumber":70,"author":{"gitId":"kheekheekhee"},"content":"    public ExpenseBuilder withIncluded(Person... persons) {","lastModifiedDate":"2021-10-17"},{"lineNumber":71,"author":{"gitId":"kheekheekhee"},"content":"        for (Person person : persons) {","lastModifiedDate":"2021-10-12"},{"lineNumber":72,"author":{"gitId":"kheekheekhee"},"content":"            this.included.add(new PersonBuilder(person).build());","lastModifiedDate":"2021-10-17"},{"lineNumber":73,"author":{"gitId":"kheekheekhee"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":74,"author":{"gitId":"kheekheekhee"},"content":"        return this;","lastModifiedDate":"2021-10-12"},{"lineNumber":75,"author":{"gitId":"kheekheekhee"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":76,"author":{"gitId":"kheekheekhee"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":77,"author":{"gitId":"kheekheekhee"},"content":"    /**","lastModifiedDate":"2021-10-12"},{"lineNumber":78,"author":{"gitId":"kheekheekhee"},"content":"     * Builds an {@code Expense} class with the relevant information.","lastModifiedDate":"2021-10-12"},{"lineNumber":79,"author":{"gitId":"kheekheekhee"},"content":"     *","lastModifiedDate":"2021-10-12"},{"lineNumber":80,"author":{"gitId":"kheekheekhee"},"content":"     * @return The built Expense class.","lastModifiedDate":"2021-10-12"},{"lineNumber":81,"author":{"gitId":"kheekheekhee"},"content":"     */","lastModifiedDate":"2021-10-12"},{"lineNumber":82,"author":{"gitId":"kheekheekhee"},"content":"    public Expense build() {","lastModifiedDate":"2021-10-12"},{"lineNumber":83,"author":{"gitId":"Jingwencloud"},"content":"        return new Expense(payer, cost, description, included);","lastModifiedDate":"2021-10-28"},{"lineNumber":84,"author":{"gitId":"kheekheekhee"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":85,"author":{"gitId":"kheekheekhee"},"content":"}","lastModifiedDate":"2021-10-12"}],"authorContributionMap":{"Jingwencloud":23,"kheekheekhee":62}},{"path":"src/test/java/seedu/awe/testutil/GroupBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"ramapriyan912001"},"content":"package seedu.awe.testutil;","lastModifiedDate":"2021-10-05"},{"lineNumber":2,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":3,"author":{"gitId":"ramapriyan912001"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-05"},{"lineNumber":4,"author":{"gitId":"ramapriyan912001"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-10-29"},{"lineNumber":5,"author":{"gitId":"ramapriyan912001"},"content":"import java.util.HashSet;","lastModifiedDate":"2021-10-05"},{"lineNumber":6,"author":{"gitId":"ramapriyan912001"},"content":"import java.util.Set;","lastModifiedDate":"2021-10-05"},{"lineNumber":7,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":8,"author":{"gitId":"ramapriyan912001"},"content":"import seedu.awe.model.expense.Expense;","lastModifiedDate":"2021-10-29"},{"lineNumber":9,"author":{"gitId":"ramapriyan912001"},"content":"import seedu.awe.model.group.Group;","lastModifiedDate":"2021-10-05"},{"lineNumber":10,"author":{"gitId":"ramapriyan912001"},"content":"import seedu.awe.model.group.GroupName;","lastModifiedDate":"2021-10-05"},{"lineNumber":11,"author":{"gitId":"ramapriyan912001"},"content":"import seedu.awe.model.person.Person;","lastModifiedDate":"2021-10-05"},{"lineNumber":12,"author":{"gitId":"ramapriyan912001"},"content":"import seedu.awe.model.tag.Tag;","lastModifiedDate":"2021-10-05"},{"lineNumber":13,"author":{"gitId":"ramapriyan912001"},"content":"import seedu.awe.model.util.SampleDataUtil;","lastModifiedDate":"2021-10-05"},{"lineNumber":14,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":15,"author":{"gitId":"ramapriyan912001"},"content":"/**","lastModifiedDate":"2021-10-05"},{"lineNumber":16,"author":{"gitId":"ramapriyan912001"},"content":" * A utility class to help with building Group objects.","lastModifiedDate":"2021-10-05"},{"lineNumber":17,"author":{"gitId":"ramapriyan912001"},"content":" */","lastModifiedDate":"2021-10-05"},{"lineNumber":18,"author":{"gitId":"ramapriyan912001"},"content":"public class GroupBuilder {","lastModifiedDate":"2021-10-05"},{"lineNumber":19,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":20,"author":{"gitId":"ramapriyan912001"},"content":"    public static final String DEFAULT_NAME \u003d \"Bali\";","lastModifiedDate":"2021-10-05"},{"lineNumber":21,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":22,"author":{"gitId":"ramapriyan912001"},"content":"    private GroupName groupName;","lastModifiedDate":"2021-10-05"},{"lineNumber":23,"author":{"gitId":"ramapriyan912001"},"content":"    private final ArrayList\u003cPerson\u003e members \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-05"},{"lineNumber":24,"author":{"gitId":"ramapriyan912001"},"content":"    private Set\u003cTag\u003e tags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2021-10-05"},{"lineNumber":25,"author":{"gitId":"ramapriyan912001"},"content":"    private ArrayList\u003cExpense\u003e expenses \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-29"},{"lineNumber":26,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":27,"author":{"gitId":"ramapriyan912001"},"content":"    /**","lastModifiedDate":"2021-10-05"},{"lineNumber":28,"author":{"gitId":"ramapriyan912001"},"content":"     * Creates a {@code GroupBuilder} with the default details.","lastModifiedDate":"2021-10-05"},{"lineNumber":29,"author":{"gitId":"ramapriyan912001"},"content":"     */","lastModifiedDate":"2021-10-05"},{"lineNumber":30,"author":{"gitId":"ramapriyan912001"},"content":"    public GroupBuilder() {","lastModifiedDate":"2021-10-05"},{"lineNumber":31,"author":{"gitId":"ramapriyan912001"},"content":"        groupName \u003d new GroupName(DEFAULT_NAME);","lastModifiedDate":"2021-10-05"},{"lineNumber":32,"author":{"gitId":"ramapriyan912001"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":33,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":34,"author":{"gitId":"ramapriyan912001"},"content":"    /**","lastModifiedDate":"2021-10-05"},{"lineNumber":35,"author":{"gitId":"ramapriyan912001"},"content":"     * Initializes the GroupBuilder with the data of {@code groupToCopy}.","lastModifiedDate":"2021-10-05"},{"lineNumber":36,"author":{"gitId":"ramapriyan912001"},"content":"     */","lastModifiedDate":"2021-10-05"},{"lineNumber":37,"author":{"gitId":"ramapriyan912001"},"content":"    public GroupBuilder(Group groupToCopy) {","lastModifiedDate":"2021-10-05"},{"lineNumber":38,"author":{"gitId":"ramapriyan912001"},"content":"        groupName \u003d groupToCopy.getGroupName();","lastModifiedDate":"2021-10-05"},{"lineNumber":39,"author":{"gitId":"ramapriyan912001"},"content":"        for (int i \u003d 0; i \u003c groupToCopy.getMembers().size(); i++) {","lastModifiedDate":"2021-10-05"},{"lineNumber":40,"author":{"gitId":"ramapriyan912001"},"content":"            Person personToCopy \u003d groupToCopy.getMembers().get(i);","lastModifiedDate":"2021-10-05"},{"lineNumber":41,"author":{"gitId":"ramapriyan912001"},"content":"            Person copyOfPerson \u003d new PersonBuilder(personToCopy).build();","lastModifiedDate":"2021-10-05"},{"lineNumber":42,"author":{"gitId":"ramapriyan912001"},"content":"            members.add(copyOfPerson);","lastModifiedDate":"2021-10-05"},{"lineNumber":43,"author":{"gitId":"ramapriyan912001"},"content":"        }","lastModifiedDate":"2021-10-05"},{"lineNumber":44,"author":{"gitId":"ramapriyan912001"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":45,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":46,"author":{"gitId":"ramapriyan912001"},"content":"    /**","lastModifiedDate":"2021-10-05"},{"lineNumber":47,"author":{"gitId":"ramapriyan912001"},"content":"     * Sets the {@code GroupName} of the {@code Group} that we are building.","lastModifiedDate":"2021-10-05"},{"lineNumber":48,"author":{"gitId":"ramapriyan912001"},"content":"     */","lastModifiedDate":"2021-10-05"},{"lineNumber":49,"author":{"gitId":"ramapriyan912001"},"content":"    public GroupBuilder withGroupName(String groupName) {","lastModifiedDate":"2021-10-05"},{"lineNumber":50,"author":{"gitId":"ramapriyan912001"},"content":"        this.groupName \u003d new GroupName(groupName);","lastModifiedDate":"2021-10-05"},{"lineNumber":51,"author":{"gitId":"ramapriyan912001"},"content":"        return this;","lastModifiedDate":"2021-10-05"},{"lineNumber":52,"author":{"gitId":"ramapriyan912001"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":53,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":54,"author":{"gitId":"ramapriyan912001"},"content":"    /**","lastModifiedDate":"2021-10-05"},{"lineNumber":55,"author":{"gitId":"ramapriyan912001"},"content":"     * Sets the {@code Person} of the {@code Group} that we are building.","lastModifiedDate":"2021-10-05"},{"lineNumber":56,"author":{"gitId":"ramapriyan912001"},"content":"     */","lastModifiedDate":"2021-10-05"},{"lineNumber":57,"author":{"gitId":"ramapriyan912001"},"content":"    public GroupBuilder withAnotherMember(Person person) {","lastModifiedDate":"2021-10-05"},{"lineNumber":58,"author":{"gitId":"ramapriyan912001"},"content":"        this.members.add(new PersonBuilder(person).build());","lastModifiedDate":"2021-10-05"},{"lineNumber":59,"author":{"gitId":"ramapriyan912001"},"content":"        return this;","lastModifiedDate":"2021-10-05"},{"lineNumber":60,"author":{"gitId":"ramapriyan912001"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":61,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":62,"author":{"gitId":"ramapriyan912001"},"content":"    /**","lastModifiedDate":"2021-10-05"},{"lineNumber":63,"author":{"gitId":"ramapriyan912001"},"content":"     * Sets the {@code List of Person} of the {@code Group} that we are building.","lastModifiedDate":"2021-10-05"},{"lineNumber":64,"author":{"gitId":"ramapriyan912001"},"content":"     */","lastModifiedDate":"2021-10-05"},{"lineNumber":65,"author":{"gitId":"ramapriyan912001"},"content":"    public GroupBuilder withMembers(Person... persons) {","lastModifiedDate":"2021-10-05"},{"lineNumber":66,"author":{"gitId":"ramapriyan912001"},"content":"        for (Person person : persons) {","lastModifiedDate":"2021-10-05"},{"lineNumber":67,"author":{"gitId":"ramapriyan912001"},"content":"            this.members.add(new PersonBuilder(person).build());","lastModifiedDate":"2021-10-05"},{"lineNumber":68,"author":{"gitId":"ramapriyan912001"},"content":"        }","lastModifiedDate":"2021-10-05"},{"lineNumber":69,"author":{"gitId":"ramapriyan912001"},"content":"        return this;","lastModifiedDate":"2021-10-05"},{"lineNumber":70,"author":{"gitId":"ramapriyan912001"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":71,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":72,"author":{"gitId":"ramapriyan912001"},"content":"    /**","lastModifiedDate":"2021-10-05"},{"lineNumber":73,"author":{"gitId":"ramapriyan912001"},"content":"     * Parses the {@code tags} into a {@code Set\u003cTag\u003e} and set it to the {@code Group} that we are building.","lastModifiedDate":"2021-10-05"},{"lineNumber":74,"author":{"gitId":"ramapriyan912001"},"content":"     */","lastModifiedDate":"2021-10-05"},{"lineNumber":75,"author":{"gitId":"ramapriyan912001"},"content":"    public GroupBuilder withTags(String ... tags) {","lastModifiedDate":"2021-10-05"},{"lineNumber":76,"author":{"gitId":"ramapriyan912001"},"content":"        this.tags \u003d SampleDataUtil.getTagSet(tags);","lastModifiedDate":"2021-10-05"},{"lineNumber":77,"author":{"gitId":"ramapriyan912001"},"content":"        return this;","lastModifiedDate":"2021-10-05"},{"lineNumber":78,"author":{"gitId":"ramapriyan912001"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":79,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":80,"author":{"gitId":"ramapriyan912001"},"content":"    public Group build() {","lastModifiedDate":"2021-10-05"},{"lineNumber":81,"author":{"gitId":"ramapriyan912001"},"content":"        return new Group(this.groupName, this.members, this.tags, this.expenses);","lastModifiedDate":"2021-10-29"},{"lineNumber":82,"author":{"gitId":"ramapriyan912001"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":83,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":84,"author":{"gitId":"chrus-chong"},"content":"    /**","lastModifiedDate":"2021-10-05"},{"lineNumber":85,"author":{"gitId":"chrus-chong"},"content":"     * Returns a valid Group object.","lastModifiedDate":"2021-10-05"},{"lineNumber":86,"author":{"gitId":"chrus-chong"},"content":"     *","lastModifiedDate":"2021-10-05"},{"lineNumber":87,"author":{"gitId":"chrus-chong"},"content":"     * @return Group object with default name \"Bali\" and default member \"Amy Bee\".","lastModifiedDate":"2021-10-06"},{"lineNumber":88,"author":{"gitId":"chrus-chong"},"content":"     */","lastModifiedDate":"2021-10-05"},{"lineNumber":89,"author":{"gitId":"chrus-chong"},"content":"    public Group buildValidGroup() {","lastModifiedDate":"2021-10-05"},{"lineNumber":90,"author":{"gitId":"chrus-chong"},"content":"        GroupName bali \u003d new GroupName(\"Bali\");","lastModifiedDate":"2021-10-06"},{"lineNumber":91,"author":{"gitId":"chrus-chong"},"content":"        ArrayList\u003cPerson\u003e members \u003d new ArrayList\u003cPerson\u003e();","lastModifiedDate":"2021-10-05"},{"lineNumber":92,"author":{"gitId":"chrus-chong"},"content":"        members.add(new PersonBuilder().build());","lastModifiedDate":"2021-10-05"},{"lineNumber":93,"author":{"gitId":"chrus-chong"},"content":"        return new Group(bali, members);","lastModifiedDate":"2021-10-06"},{"lineNumber":94,"author":{"gitId":"chrus-chong"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":95,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":96,"author":{"gitId":"chrus-chong"},"content":"    public GroupName getValidGroupName() {","lastModifiedDate":"2021-10-05"},{"lineNumber":97,"author":{"gitId":"chrus-chong"},"content":"        GroupName bali \u003d new GroupName(\"Bali\");","lastModifiedDate":"2021-10-06"},{"lineNumber":98,"author":{"gitId":"chrus-chong"},"content":"        return bali;","lastModifiedDate":"2021-10-06"},{"lineNumber":99,"author":{"gitId":"chrus-chong"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":100,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":101,"author":{"gitId":"chrus-chong"},"content":"    public ArrayList\u003cPerson\u003e getValidMembers() {","lastModifiedDate":"2021-10-05"},{"lineNumber":102,"author":{"gitId":"chrus-chong"},"content":"        ArrayList\u003cPerson\u003e members \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-06"},{"lineNumber":103,"author":{"gitId":"chrus-chong"},"content":"        members.add(new PersonBuilder().build());","lastModifiedDate":"2021-10-05"},{"lineNumber":104,"author":{"gitId":"chrus-chong"},"content":"        return members;","lastModifiedDate":"2021-10-05"},{"lineNumber":105,"author":{"gitId":"chrus-chong"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":106,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":107,"author":{"gitId":"ramapriyan912001"},"content":"    /**","lastModifiedDate":"2021-10-29"},{"lineNumber":108,"author":{"gitId":"ramapriyan912001"},"content":"     * Adds Expenses.","lastModifiedDate":"2021-10-29"},{"lineNumber":109,"author":{"gitId":"ramapriyan912001"},"content":"     * @param expenses expenses to be added","lastModifiedDate":"2021-10-29"},{"lineNumber":110,"author":{"gitId":"ramapriyan912001"},"content":"     * @return Updated GroupBuilder object","lastModifiedDate":"2021-10-29"},{"lineNumber":111,"author":{"gitId":"ramapriyan912001"},"content":"     */","lastModifiedDate":"2021-10-29"},{"lineNumber":112,"author":{"gitId":"ramapriyan912001"},"content":"    public GroupBuilder withExpenses(Expense ...expenses) {","lastModifiedDate":"2021-10-29"},{"lineNumber":113,"author":{"gitId":"ramapriyan912001"},"content":"        this.expenses \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-29"},{"lineNumber":114,"author":{"gitId":"ramapriyan912001"},"content":"        this.expenses.addAll(Arrays.asList(expenses));","lastModifiedDate":"2021-10-29"},{"lineNumber":115,"author":{"gitId":"ramapriyan912001"},"content":"        return this;","lastModifiedDate":"2021-10-29"},{"lineNumber":116,"author":{"gitId":"ramapriyan912001"},"content":"    }","lastModifiedDate":"2021-10-29"},{"lineNumber":117,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":118,"author":{"gitId":"ramapriyan912001"},"content":"    /**","lastModifiedDate":"2021-10-29"},{"lineNumber":119,"author":{"gitId":"ramapriyan912001"},"content":"     * Adds Expense.","lastModifiedDate":"2021-10-29"},{"lineNumber":120,"author":{"gitId":"ramapriyan912001"},"content":"     * @param expense expense to be added","lastModifiedDate":"2021-10-29"},{"lineNumber":121,"author":{"gitId":"ramapriyan912001"},"content":"     * @return Updated GroupBuilder object","lastModifiedDate":"2021-10-29"},{"lineNumber":122,"author":{"gitId":"ramapriyan912001"},"content":"     */","lastModifiedDate":"2021-10-29"},{"lineNumber":123,"author":{"gitId":"ramapriyan912001"},"content":"    public GroupBuilder withExpense(Expense expense) {","lastModifiedDate":"2021-10-29"},{"lineNumber":124,"author":{"gitId":"ramapriyan912001"},"content":"        expenses \u003d new ArrayList\u003c\u003e(expenses);","lastModifiedDate":"2021-10-29"},{"lineNumber":125,"author":{"gitId":"ramapriyan912001"},"content":"        expenses.add(expense);","lastModifiedDate":"2021-10-29"},{"lineNumber":126,"author":{"gitId":"ramapriyan912001"},"content":"        return this;","lastModifiedDate":"2021-10-29"},{"lineNumber":127,"author":{"gitId":"ramapriyan912001"},"content":"    }","lastModifiedDate":"2021-10-29"},{"lineNumber":128,"author":{"gitId":"ramapriyan912001"},"content":"}","lastModifiedDate":"2021-10-05"}],"authorContributionMap":{"chrus-chong":23,"ramapriyan912001":105}},{"path":"src/test/java/seedu/awe/testutil/GroupUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"marcuspeh"},"content":"package seedu.awe.testutil;","lastModifiedDate":"2021-10-12"},{"lineNumber":2,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":3,"author":{"gitId":"marcuspeh"},"content":"import static seedu.awe.logic.parser.CliSyntax.PREFIX_GROUP_NAME;","lastModifiedDate":"2021-10-12"},{"lineNumber":4,"author":{"gitId":"marcuspeh"},"content":"import static seedu.awe.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2021-10-12"},{"lineNumber":5,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":6,"author":{"gitId":"marcuspeh"},"content":"import seedu.awe.logic.commands.CreateGroupCommand;","lastModifiedDate":"2021-10-12"},{"lineNumber":7,"author":{"gitId":"marcuspeh"},"content":"import seedu.awe.model.group.Group;","lastModifiedDate":"2021-10-12"},{"lineNumber":8,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":9,"author":{"gitId":"marcuspeh"},"content":"/**","lastModifiedDate":"2021-10-12"},{"lineNumber":10,"author":{"gitId":"marcuspeh"},"content":" * A utility class for Group.","lastModifiedDate":"2021-10-12"},{"lineNumber":11,"author":{"gitId":"marcuspeh"},"content":" */","lastModifiedDate":"2021-10-12"},{"lineNumber":12,"author":{"gitId":"marcuspeh"},"content":"public class GroupUtil {","lastModifiedDate":"2021-10-12"},{"lineNumber":13,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":14,"author":{"gitId":"marcuspeh"},"content":"    /**","lastModifiedDate":"2021-10-12"},{"lineNumber":15,"author":{"gitId":"marcuspeh"},"content":"     * Returns an add command string for adding the {@code group}.","lastModifiedDate":"2021-10-12"},{"lineNumber":16,"author":{"gitId":"marcuspeh"},"content":"     */","lastModifiedDate":"2021-10-12"},{"lineNumber":17,"author":{"gitId":"marcuspeh"},"content":"    public static String getAddCommand(Group group) {","lastModifiedDate":"2021-10-12"},{"lineNumber":18,"author":{"gitId":"marcuspeh"},"content":"        return CreateGroupCommand.COMMAND_WORD + \" \" + getGroupDetails(group);","lastModifiedDate":"2021-10-12"},{"lineNumber":19,"author":{"gitId":"marcuspeh"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":20,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":21,"author":{"gitId":"marcuspeh"},"content":"    /**","lastModifiedDate":"2021-10-12"},{"lineNumber":22,"author":{"gitId":"marcuspeh"},"content":"     * Returns the part of command string for the given {@code group}\u0027s details.","lastModifiedDate":"2021-10-12"},{"lineNumber":23,"author":{"gitId":"marcuspeh"},"content":"     */","lastModifiedDate":"2021-10-12"},{"lineNumber":24,"author":{"gitId":"marcuspeh"},"content":"    public static String getGroupDetails(Group group) {","lastModifiedDate":"2021-10-12"},{"lineNumber":25,"author":{"gitId":"marcuspeh"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2021-10-12"},{"lineNumber":26,"author":{"gitId":"marcuspeh"},"content":"        sb.append(PREFIX_GROUP_NAME + group.getGroupName().getName() + \" \");","lastModifiedDate":"2021-10-12"},{"lineNumber":27,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":28,"author":{"gitId":"marcuspeh"},"content":"        group.getTags().stream().forEach(","lastModifiedDate":"2021-10-12"},{"lineNumber":29,"author":{"gitId":"marcuspeh"},"content":"            s -\u003e sb.append(PREFIX_TAG + s.tagName + \" \")","lastModifiedDate":"2021-10-12"},{"lineNumber":30,"author":{"gitId":"marcuspeh"},"content":"        );","lastModifiedDate":"2021-10-12"},{"lineNumber":31,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":32,"author":{"gitId":"marcuspeh"},"content":"        return sb.toString();","lastModifiedDate":"2021-10-12"},{"lineNumber":33,"author":{"gitId":"marcuspeh"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":34,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":35,"author":{"gitId":"marcuspeh"},"content":"    /*","lastModifiedDate":"2021-10-12"},{"lineNumber":36,"author":{"gitId":"marcuspeh"},"content":"     * Returns the part of command string for the given {@code EditPersonDescriptor}\u0027s details.","lastModifiedDate":"2021-10-12"},{"lineNumber":37,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":38,"author":{"gitId":"marcuspeh"},"content":"    public static String getEditPersonDescriptorDetails(EditPersonDescriptor descriptor) {","lastModifiedDate":"2021-10-12"},{"lineNumber":39,"author":{"gitId":"marcuspeh"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2021-10-12"},{"lineNumber":40,"author":{"gitId":"marcuspeh"},"content":"        descriptor.getName().ifPresent(name -\u003e sb.append(PREFIX_NAME).append(name.fullName).append(\" \"));","lastModifiedDate":"2021-10-12"},{"lineNumber":41,"author":{"gitId":"marcuspeh"},"content":"        descriptor.getPhone().ifPresent(phone -\u003e sb.append(PREFIX_PHONE).append(phone.value).append(\" \"));","lastModifiedDate":"2021-10-12"},{"lineNumber":42,"author":{"gitId":"marcuspeh"},"content":"        descriptor.getEmail().ifPresent(email -\u003e sb.append(PREFIX_EMAIL).append(email.value).append(\" \"));","lastModifiedDate":"2021-10-12"},{"lineNumber":43,"author":{"gitId":"marcuspeh"},"content":"        descriptor.getAddress().ifPresent(address -\u003e sb.append(PREFIX_ADDRESS).append(address.value).append(\" \"));","lastModifiedDate":"2021-10-12"},{"lineNumber":44,"author":{"gitId":"marcuspeh"},"content":"        if (descriptor.getTags().isPresent()) {","lastModifiedDate":"2021-10-12"},{"lineNumber":45,"author":{"gitId":"marcuspeh"},"content":"            Set\u003cTag\u003e tags \u003d descriptor.getTags().get();","lastModifiedDate":"2021-10-12"},{"lineNumber":46,"author":{"gitId":"marcuspeh"},"content":"            if (tags.isEmpty()) {","lastModifiedDate":"2021-10-12"},{"lineNumber":47,"author":{"gitId":"marcuspeh"},"content":"                sb.append(PREFIX_TAG);","lastModifiedDate":"2021-10-12"},{"lineNumber":48,"author":{"gitId":"marcuspeh"},"content":"            } else {","lastModifiedDate":"2021-10-12"},{"lineNumber":49,"author":{"gitId":"marcuspeh"},"content":"                tags.forEach(s -\u003e sb.append(PREFIX_TAG).append(s.tagName).append(\" \"));","lastModifiedDate":"2021-10-12"},{"lineNumber":50,"author":{"gitId":"marcuspeh"},"content":"            }","lastModifiedDate":"2021-10-12"},{"lineNumber":51,"author":{"gitId":"marcuspeh"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":52,"author":{"gitId":"marcuspeh"},"content":"        return sb.toString();","lastModifiedDate":"2021-10-12"},{"lineNumber":53,"author":{"gitId":"marcuspeh"},"content":"    }*/","lastModifiedDate":"2021-10-12"},{"lineNumber":54,"author":{"gitId":"marcuspeh"},"content":"}","lastModifiedDate":"2021-10-12"}],"authorContributionMap":{"marcuspeh":54}},{"path":"src/test/java/seedu/awe/testutil/ModelBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"chrus-chong"},"content":"package seedu.awe.testutil;","lastModifiedDate":"2021-10-06"},{"lineNumber":2,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":3,"author":{"gitId":"ramapriyan912001"},"content":"import static seedu.awe.testutil.TypicalGroups.AMSTERDAM_WITH_EXPENSES;","lastModifiedDate":"2021-10-29"},{"lineNumber":4,"author":{"gitId":"ramapriyan912001"},"content":"import static seedu.awe.testutil.TypicalGroups.BALI_WITH_EXPENSES;","lastModifiedDate":"2021-10-29"},{"lineNumber":5,"author":{"gitId":"ramapriyan912001"},"content":"import static seedu.awe.testutil.TypicalGroups.CHINA;","lastModifiedDate":"2021-10-07"},{"lineNumber":6,"author":{"gitId":"ramapriyan912001"},"content":"import static seedu.awe.testutil.TypicalGroups.DUBAI;","lastModifiedDate":"2021-10-07"},{"lineNumber":7,"author":{"gitId":"ramapriyan912001"},"content":"import static seedu.awe.testutil.TypicalGroups.HELSINKI;","lastModifiedDate":"2021-10-07"},{"lineNumber":8,"author":{"gitId":"ramapriyan912001"},"content":"import static seedu.awe.testutil.TypicalGroups.INDIA;","lastModifiedDate":"2021-10-07"},{"lineNumber":9,"author":{"gitId":"ramapriyan912001"},"content":"import static seedu.awe.testutil.TypicalGroups.LONDON;","lastModifiedDate":"2021-10-07"},{"lineNumber":10,"author":{"gitId":"ramapriyan912001"},"content":"import static seedu.awe.testutil.TypicalGroups.MALIBU_WITH_EXPENSES;","lastModifiedDate":"2021-10-31"},{"lineNumber":11,"author":{"gitId":"ramapriyan912001"},"content":"import static seedu.awe.testutil.TypicalGroups.OSLO;","lastModifiedDate":"2021-10-07"},{"lineNumber":12,"author":{"gitId":"ramapriyan912001"},"content":"import static seedu.awe.testutil.TypicalGroups.PARIS;","lastModifiedDate":"2021-10-07"},{"lineNumber":13,"author":{"gitId":"ramapriyan912001"},"content":"import static seedu.awe.testutil.TypicalGroups.PERU_WITH_EXPENSES_INVALID;","lastModifiedDate":"2021-10-29"},{"lineNumber":14,"author":{"gitId":"ramapriyan912001"},"content":"import static seedu.awe.testutil.TypicalGroups.RIO_WITH_EXPENSES_INVALID;","lastModifiedDate":"2021-10-29"},{"lineNumber":15,"author":{"gitId":"ramapriyan912001"},"content":"import static seedu.awe.testutil.TypicalGroups.SANTIAGO_WITH_EXPENSES;","lastModifiedDate":"2021-10-31"},{"lineNumber":16,"author":{"gitId":"chrus-chong"},"content":"import static seedu.awe.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2021-10-06"},{"lineNumber":17,"author":{"gitId":"chrus-chong"},"content":"import static seedu.awe.testutil.TypicalPersons.AMY;","lastModifiedDate":"2021-10-06"},{"lineNumber":18,"author":{"gitId":"chrus-chong"},"content":"import static seedu.awe.testutil.TypicalPersons.BENSON;","lastModifiedDate":"2021-10-06"},{"lineNumber":19,"author":{"gitId":"chrus-chong"},"content":"import static seedu.awe.testutil.TypicalPersons.BOB;","lastModifiedDate":"2021-10-06"},{"lineNumber":20,"author":{"gitId":"chrus-chong"},"content":"import static seedu.awe.testutil.TypicalPersons.CARL;","lastModifiedDate":"2021-10-06"},{"lineNumber":21,"author":{"gitId":"chrus-chong"},"content":"import static seedu.awe.testutil.TypicalPersons.DANIEL;","lastModifiedDate":"2021-10-06"},{"lineNumber":22,"author":{"gitId":"chrus-chong"},"content":"import static seedu.awe.testutil.TypicalPersons.ELLE;","lastModifiedDate":"2021-10-06"},{"lineNumber":23,"author":{"gitId":"chrus-chong"},"content":"import static seedu.awe.testutil.TypicalPersons.FIONA;","lastModifiedDate":"2021-10-06"},{"lineNumber":24,"author":{"gitId":"chrus-chong"},"content":"import static seedu.awe.testutil.TypicalPersons.GEORGE;","lastModifiedDate":"2021-10-06"},{"lineNumber":25,"author":{"gitId":"chrus-chong"},"content":"import static seedu.awe.testutil.TypicalPersons.HOON;","lastModifiedDate":"2021-10-06"},{"lineNumber":26,"author":{"gitId":"chrus-chong"},"content":"import static seedu.awe.testutil.TypicalPersons.IDA;","lastModifiedDate":"2021-10-06"},{"lineNumber":27,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":28,"author":{"gitId":"chrus-chong"},"content":"import javafx.collections.transformation.FilteredList;","lastModifiedDate":"2021-10-06"},{"lineNumber":29,"author":{"gitId":"chrus-chong"},"content":"import seedu.awe.model.AddressBook;","lastModifiedDate":"2021-10-06"},{"lineNumber":30,"author":{"gitId":"chrus-chong"},"content":"import seedu.awe.model.Model;","lastModifiedDate":"2021-10-06"},{"lineNumber":31,"author":{"gitId":"chrus-chong"},"content":"import seedu.awe.model.ModelManager;","lastModifiedDate":"2021-10-06"},{"lineNumber":32,"author":{"gitId":"chrus-chong"},"content":"import seedu.awe.model.UserPrefs;","lastModifiedDate":"2021-10-06"},{"lineNumber":33,"author":{"gitId":"chrus-chong"},"content":"import seedu.awe.model.group.Group;","lastModifiedDate":"2021-10-06"},{"lineNumber":34,"author":{"gitId":"ramapriyan912001"},"content":"import seedu.awe.model.group.exceptions.DuplicateGroupException;","lastModifiedDate":"2021-10-07"},{"lineNumber":35,"author":{"gitId":"chrus-chong"},"content":"import seedu.awe.model.person.Person;","lastModifiedDate":"2021-10-06"},{"lineNumber":36,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":37,"author":{"gitId":"chrus-chong"},"content":"/**","lastModifiedDate":"2021-10-06"},{"lineNumber":38,"author":{"gitId":"chrus-chong"},"content":" * A utility class to help with building Person objects.","lastModifiedDate":"2021-10-06"},{"lineNumber":39,"author":{"gitId":"chrus-chong"},"content":" */","lastModifiedDate":"2021-10-06"},{"lineNumber":40,"author":{"gitId":"chrus-chong"},"content":"public class ModelBuilder {","lastModifiedDate":"2021-10-06"},{"lineNumber":41,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":42,"author":{"gitId":"chrus-chong"},"content":"    public static final AddressBook DEFAULT_ADDRESSBOOK \u003d new AddressBook();","lastModifiedDate":"2021-10-06"},{"lineNumber":43,"author":{"gitId":"chrus-chong"},"content":"    public static final UserPrefs DEFAULT_USERPREFS \u003d new UserPrefs();","lastModifiedDate":"2021-10-06"},{"lineNumber":44,"author":{"gitId":"chrus-chong"},"content":"    public static final FilteredList\u003cPerson\u003e DEFAULT_FILTEREDPERSONS \u003d","lastModifiedDate":"2021-10-06"},{"lineNumber":45,"author":{"gitId":"chrus-chong"},"content":"            new FilteredList\u003cPerson\u003e(DEFAULT_ADDRESSBOOK.getPersonList());","lastModifiedDate":"2021-10-06"},{"lineNumber":46,"author":{"gitId":"chrus-chong"},"content":"    public static final FilteredList\u003cGroup\u003e DEFAULT_FILTEREDGROUPS \u003d","lastModifiedDate":"2021-10-06"},{"lineNumber":47,"author":{"gitId":"chrus-chong"},"content":"            new FilteredList\u003cGroup\u003e(DEFAULT_ADDRESSBOOK.getGroupList());","lastModifiedDate":"2021-10-06"},{"lineNumber":48,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":49,"author":{"gitId":"chrus-chong"},"content":"    private AddressBook addressBook;","lastModifiedDate":"2021-10-06"},{"lineNumber":50,"author":{"gitId":"chrus-chong"},"content":"    private UserPrefs userPrefs;","lastModifiedDate":"2021-10-06"},{"lineNumber":51,"author":{"gitId":"chrus-chong"},"content":"    private FilteredList\u003cPerson\u003e filteredPersons;","lastModifiedDate":"2021-10-06"},{"lineNumber":52,"author":{"gitId":"chrus-chong"},"content":"    private FilteredList\u003cGroup\u003e filteredGroups;","lastModifiedDate":"2021-10-06"},{"lineNumber":53,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":54,"author":{"gitId":"chrus-chong"},"content":"    /**","lastModifiedDate":"2021-10-06"},{"lineNumber":55,"author":{"gitId":"chrus-chong"},"content":"     * Creates a {@code ModelBuilder} with the default details.","lastModifiedDate":"2021-10-06"},{"lineNumber":56,"author":{"gitId":"chrus-chong"},"content":"     */","lastModifiedDate":"2021-10-06"},{"lineNumber":57,"author":{"gitId":"chrus-chong"},"content":"    public ModelBuilder() {","lastModifiedDate":"2021-10-06"},{"lineNumber":58,"author":{"gitId":"chrus-chong"},"content":"        addressBook \u003d new AddressBook();","lastModifiedDate":"2021-10-06"},{"lineNumber":59,"author":{"gitId":"chrus-chong"},"content":"        addTypicalPersons(addressBook);","lastModifiedDate":"2021-10-06"},{"lineNumber":60,"author":{"gitId":"ramapriyan912001"},"content":"        addTypicalGroups(addressBook);","lastModifiedDate":"2021-10-07"},{"lineNumber":61,"author":{"gitId":"chrus-chong"},"content":"        userPrefs \u003d DEFAULT_USERPREFS;","lastModifiedDate":"2021-10-06"},{"lineNumber":62,"author":{"gitId":"chrus-chong"},"content":"        filteredPersons \u003d DEFAULT_FILTEREDPERSONS;","lastModifiedDate":"2021-10-06"},{"lineNumber":63,"author":{"gitId":"chrus-chong"},"content":"        filteredGroups \u003d DEFAULT_FILTEREDGROUPS;","lastModifiedDate":"2021-10-06"},{"lineNumber":64,"author":{"gitId":"chrus-chong"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":65,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":66,"author":{"gitId":"chrus-chong"},"content":"    /**","lastModifiedDate":"2021-10-06"},{"lineNumber":67,"author":{"gitId":"chrus-chong"},"content":"     * Initializes the ModelBuilder with the data of {@code ModelToCopy}.","lastModifiedDate":"2021-10-06"},{"lineNumber":68,"author":{"gitId":"chrus-chong"},"content":"     */","lastModifiedDate":"2021-10-06"},{"lineNumber":69,"author":{"gitId":"chrus-chong"},"content":"    public ModelBuilder(Model modelToCopy) {","lastModifiedDate":"2021-10-06"},{"lineNumber":70,"author":{"gitId":"chrus-chong"},"content":"        addressBook \u003d (AddressBook) modelToCopy.getAddressBook();","lastModifiedDate":"2021-10-06"},{"lineNumber":71,"author":{"gitId":"chrus-chong"},"content":"        userPrefs \u003d (UserPrefs) modelToCopy.getUserPrefs();","lastModifiedDate":"2021-10-06"},{"lineNumber":72,"author":{"gitId":"chrus-chong"},"content":"        filteredPersons \u003d (FilteredList\u003cPerson\u003e) modelToCopy.getFilteredPersonList();","lastModifiedDate":"2021-10-06"},{"lineNumber":73,"author":{"gitId":"chrus-chong"},"content":"        filteredGroups \u003d (FilteredList\u003cGroup\u003e) modelToCopy.getFilteredGroupList();","lastModifiedDate":"2021-10-06"},{"lineNumber":74,"author":{"gitId":"chrus-chong"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":75,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":76,"author":{"gitId":"chrus-chong"},"content":"    /**","lastModifiedDate":"2021-10-06"},{"lineNumber":77,"author":{"gitId":"chrus-chong"},"content":"     * Sets the {@code AddressBook} of the {@code Model} that we are building.","lastModifiedDate":"2021-10-06"},{"lineNumber":78,"author":{"gitId":"chrus-chong"},"content":"     */","lastModifiedDate":"2021-10-06"},{"lineNumber":79,"author":{"gitId":"chrus-chong"},"content":"    public ModelBuilder withAddressBook(AddressBook addressBook) {","lastModifiedDate":"2021-10-06"},{"lineNumber":80,"author":{"gitId":"chrus-chong"},"content":"        this.addressBook \u003d addressBook;","lastModifiedDate":"2021-10-06"},{"lineNumber":81,"author":{"gitId":"chrus-chong"},"content":"        return this;","lastModifiedDate":"2021-10-06"},{"lineNumber":82,"author":{"gitId":"chrus-chong"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":83,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":84,"author":{"gitId":"chrus-chong"},"content":"    /**","lastModifiedDate":"2021-10-06"},{"lineNumber":85,"author":{"gitId":"chrus-chong"},"content":"     * Sets the {@code UserPrefs} of the {@code Model} that we are building.","lastModifiedDate":"2021-10-06"},{"lineNumber":86,"author":{"gitId":"chrus-chong"},"content":"     */","lastModifiedDate":"2021-10-06"},{"lineNumber":87,"author":{"gitId":"chrus-chong"},"content":"    public ModelBuilder withUserPrefs(UserPrefs userPrefs) {","lastModifiedDate":"2021-10-06"},{"lineNumber":88,"author":{"gitId":"chrus-chong"},"content":"        this.userPrefs \u003d userPrefs;","lastModifiedDate":"2021-10-06"},{"lineNumber":89,"author":{"gitId":"chrus-chong"},"content":"        return this;","lastModifiedDate":"2021-10-06"},{"lineNumber":90,"author":{"gitId":"chrus-chong"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":91,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":92,"author":{"gitId":"chrus-chong"},"content":"    /**","lastModifiedDate":"2021-10-06"},{"lineNumber":93,"author":{"gitId":"chrus-chong"},"content":"     * Adds all Person attributes from TypicalPersons into the sample addressbook.","lastModifiedDate":"2021-10-06"},{"lineNumber":94,"author":{"gitId":"chrus-chong"},"content":"     *","lastModifiedDate":"2021-10-06"},{"lineNumber":95,"author":{"gitId":"chrus-chong"},"content":"     * @param addressBook AddressBook object to be used for testing purposes.","lastModifiedDate":"2021-10-06"},{"lineNumber":96,"author":{"gitId":"chrus-chong"},"content":"     */","lastModifiedDate":"2021-10-06"},{"lineNumber":97,"author":{"gitId":"chrus-chong"},"content":"    public void addTypicalPersons(AddressBook addressBook) {","lastModifiedDate":"2021-10-06"},{"lineNumber":98,"author":{"gitId":"chrus-chong"},"content":"        addressBook.addPerson(ALICE);","lastModifiedDate":"2021-10-06"},{"lineNumber":99,"author":{"gitId":"chrus-chong"},"content":"        addressBook.addPerson(BENSON);","lastModifiedDate":"2021-10-06"},{"lineNumber":100,"author":{"gitId":"chrus-chong"},"content":"        addressBook.addPerson(CARL);","lastModifiedDate":"2021-10-06"},{"lineNumber":101,"author":{"gitId":"chrus-chong"},"content":"        addressBook.addPerson(DANIEL);","lastModifiedDate":"2021-10-06"},{"lineNumber":102,"author":{"gitId":"chrus-chong"},"content":"        addressBook.addPerson(ELLE);","lastModifiedDate":"2021-10-06"},{"lineNumber":103,"author":{"gitId":"chrus-chong"},"content":"        addressBook.addPerson(FIONA);","lastModifiedDate":"2021-10-06"},{"lineNumber":104,"author":{"gitId":"chrus-chong"},"content":"        addressBook.addPerson(GEORGE);","lastModifiedDate":"2021-10-06"},{"lineNumber":105,"author":{"gitId":"chrus-chong"},"content":"        addressBook.addPerson(HOON);","lastModifiedDate":"2021-10-06"},{"lineNumber":106,"author":{"gitId":"chrus-chong"},"content":"        addressBook.addPerson(IDA);","lastModifiedDate":"2021-10-06"},{"lineNumber":107,"author":{"gitId":"chrus-chong"},"content":"        addressBook.addPerson(AMY);","lastModifiedDate":"2021-10-06"},{"lineNumber":108,"author":{"gitId":"chrus-chong"},"content":"        addressBook.addPerson(BOB);","lastModifiedDate":"2021-10-06"},{"lineNumber":109,"author":{"gitId":"chrus-chong"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":110,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":111,"author":{"gitId":"ramapriyan912001"},"content":"    /**","lastModifiedDate":"2021-10-07"},{"lineNumber":112,"author":{"gitId":"ramapriyan912001"},"content":"     * Adds all Person attributes from TypicalPersons into the sample addressbook.","lastModifiedDate":"2021-10-07"},{"lineNumber":113,"author":{"gitId":"ramapriyan912001"},"content":"     *","lastModifiedDate":"2021-10-07"},{"lineNumber":114,"author":{"gitId":"ramapriyan912001"},"content":"     * @param addressBook AddressBook object to be used for testing purposes.","lastModifiedDate":"2021-10-07"},{"lineNumber":115,"author":{"gitId":"ramapriyan912001"},"content":"     */","lastModifiedDate":"2021-10-07"},{"lineNumber":116,"author":{"gitId":"ramapriyan912001"},"content":"    public void addTypicalGroups(AddressBook addressBook) throws DuplicateGroupException {","lastModifiedDate":"2021-10-07"},{"lineNumber":117,"author":{"gitId":"ramapriyan912001"},"content":"        addressBook.addGroup(AMSTERDAM_WITH_EXPENSES);","lastModifiedDate":"2021-10-29"},{"lineNumber":118,"author":{"gitId":"ramapriyan912001"},"content":"        addressBook.addGroup(BALI_WITH_EXPENSES);","lastModifiedDate":"2021-10-29"},{"lineNumber":119,"author":{"gitId":"ramapriyan912001"},"content":"        addressBook.addGroup(PERU_WITH_EXPENSES_INVALID);","lastModifiedDate":"2021-10-29"},{"lineNumber":120,"author":{"gitId":"ramapriyan912001"},"content":"        addressBook.addGroup(RIO_WITH_EXPENSES_INVALID);","lastModifiedDate":"2021-10-29"},{"lineNumber":121,"author":{"gitId":"ramapriyan912001"},"content":"        addressBook.addGroup(INDIA);","lastModifiedDate":"2021-10-07"},{"lineNumber":122,"author":{"gitId":"ramapriyan912001"},"content":"        addressBook.addGroup(LONDON);","lastModifiedDate":"2021-10-07"},{"lineNumber":123,"author":{"gitId":"ramapriyan912001"},"content":"        addressBook.addGroup(DUBAI);","lastModifiedDate":"2021-10-07"},{"lineNumber":124,"author":{"gitId":"ramapriyan912001"},"content":"        addressBook.addGroup(PARIS);","lastModifiedDate":"2021-10-07"},{"lineNumber":125,"author":{"gitId":"ramapriyan912001"},"content":"        addressBook.addGroup(CHINA);","lastModifiedDate":"2021-10-07"},{"lineNumber":126,"author":{"gitId":"ramapriyan912001"},"content":"        addressBook.addGroup(MALIBU_WITH_EXPENSES);","lastModifiedDate":"2021-10-31"},{"lineNumber":127,"author":{"gitId":"ramapriyan912001"},"content":"        addressBook.addGroup(SANTIAGO_WITH_EXPENSES);","lastModifiedDate":"2021-10-31"},{"lineNumber":128,"author":{"gitId":"ramapriyan912001"},"content":"        addressBook.addGroup(HELSINKI);","lastModifiedDate":"2021-10-07"},{"lineNumber":129,"author":{"gitId":"ramapriyan912001"},"content":"        addressBook.addGroup(OSLO);","lastModifiedDate":"2021-10-07"},{"lineNumber":130,"author":{"gitId":"ramapriyan912001"},"content":"    }","lastModifiedDate":"2021-10-07"},{"lineNumber":131,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":132,"author":{"gitId":"chrus-chong"},"content":"    public Model build() {","lastModifiedDate":"2021-10-06"},{"lineNumber":133,"author":{"gitId":"chrus-chong"},"content":"        return new ModelManager(addressBook, userPrefs);","lastModifiedDate":"2021-10-06"},{"lineNumber":134,"author":{"gitId":"chrus-chong"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":135,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":136,"author":{"gitId":"chrus-chong"},"content":"    public Model buildEmptyModel() {","lastModifiedDate":"2021-10-10"},{"lineNumber":137,"author":{"gitId":"chrus-chong"},"content":"        return new ModelManager(new AddressBook(), new UserPrefs());","lastModifiedDate":"2021-10-10"},{"lineNumber":138,"author":{"gitId":"chrus-chong"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":139,"author":{"gitId":"chrus-chong"},"content":"}","lastModifiedDate":"2021-10-06"},{"lineNumber":140,"author":{"gitId":"chrus-chong"},"content":"","lastModifiedDate":"2021-10-06"}],"authorContributionMap":{"chrus-chong":103,"ramapriyan912001":37}},{"path":"src/test/java/seedu/awe/testutil/PaymentBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"ramapriyan912001"},"content":"package seedu.awe.testutil;","lastModifiedDate":"2021-10-27"},{"lineNumber":2,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":3,"author":{"gitId":"ramapriyan912001"},"content":"import static seedu.awe.testutil.TypicalPayments.ALICE_BOB_PAYMENT;","lastModifiedDate":"2021-10-27"},{"lineNumber":4,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":5,"author":{"gitId":"ramapriyan912001"},"content":"import seedu.awe.model.expense.Cost;","lastModifiedDate":"2021-10-27"},{"lineNumber":6,"author":{"gitId":"ramapriyan912001"},"content":"import seedu.awe.model.payment.Payment;","lastModifiedDate":"2021-10-27"},{"lineNumber":7,"author":{"gitId":"ramapriyan912001"},"content":"import seedu.awe.model.person.Person;","lastModifiedDate":"2021-10-27"},{"lineNumber":8,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":9,"author":{"gitId":"ramapriyan912001"},"content":"public class PaymentBuilder {","lastModifiedDate":"2021-10-27"},{"lineNumber":10,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":11,"author":{"gitId":"ramapriyan912001"},"content":"    private Person payer;","lastModifiedDate":"2021-10-27"},{"lineNumber":12,"author":{"gitId":"ramapriyan912001"},"content":"    private Person payee;","lastModifiedDate":"2021-10-27"},{"lineNumber":13,"author":{"gitId":"ramapriyan912001"},"content":"    private Cost cost;","lastModifiedDate":"2021-10-27"},{"lineNumber":14,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":15,"author":{"gitId":"ramapriyan912001"},"content":"    /**","lastModifiedDate":"2021-10-27"},{"lineNumber":16,"author":{"gitId":"ramapriyan912001"},"content":"     * Constructs PaymentBuilder.","lastModifiedDate":"2021-10-27"},{"lineNumber":17,"author":{"gitId":"ramapriyan912001"},"content":"     */","lastModifiedDate":"2021-10-27"},{"lineNumber":18,"author":{"gitId":"ramapriyan912001"},"content":"    public PaymentBuilder() {","lastModifiedDate":"2021-10-27"},{"lineNumber":19,"author":{"gitId":"ramapriyan912001"},"content":"        payee \u003d ALICE_BOB_PAYMENT.getPayee();","lastModifiedDate":"2021-10-27"},{"lineNumber":20,"author":{"gitId":"ramapriyan912001"},"content":"        payer \u003d ALICE_BOB_PAYMENT.getPayer();","lastModifiedDate":"2021-10-27"},{"lineNumber":21,"author":{"gitId":"ramapriyan912001"},"content":"        cost \u003d ALICE_BOB_PAYMENT.getCost();","lastModifiedDate":"2021-10-27"},{"lineNumber":22,"author":{"gitId":"ramapriyan912001"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":23,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":24,"author":{"gitId":"ramapriyan912001"},"content":"    /**","lastModifiedDate":"2021-10-27"},{"lineNumber":25,"author":{"gitId":"ramapriyan912001"},"content":"     * Sets Payer field.","lastModifiedDate":"2021-10-27"},{"lineNumber":26,"author":{"gitId":"ramapriyan912001"},"content":"     * @param payer Person to set as payer.","lastModifiedDate":"2021-10-27"},{"lineNumber":27,"author":{"gitId":"ramapriyan912001"},"content":"     * @return edited Paymentbuilder","lastModifiedDate":"2021-10-27"},{"lineNumber":28,"author":{"gitId":"ramapriyan912001"},"content":"     */","lastModifiedDate":"2021-10-27"},{"lineNumber":29,"author":{"gitId":"ramapriyan912001"},"content":"    public PaymentBuilder withPayer(Person payer) {","lastModifiedDate":"2021-10-27"},{"lineNumber":30,"author":{"gitId":"ramapriyan912001"},"content":"        this.payer \u003d payer;","lastModifiedDate":"2021-10-27"},{"lineNumber":31,"author":{"gitId":"ramapriyan912001"},"content":"        return this;","lastModifiedDate":"2021-10-27"},{"lineNumber":32,"author":{"gitId":"ramapriyan912001"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":33,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":34,"author":{"gitId":"ramapriyan912001"},"content":"    /**","lastModifiedDate":"2021-10-27"},{"lineNumber":35,"author":{"gitId":"ramapriyan912001"},"content":"     * Sets Payee field.","lastModifiedDate":"2021-10-27"},{"lineNumber":36,"author":{"gitId":"ramapriyan912001"},"content":"     * @param payee Person to set as payee.","lastModifiedDate":"2021-10-27"},{"lineNumber":37,"author":{"gitId":"ramapriyan912001"},"content":"     * @return edited Paymentbuilder","lastModifiedDate":"2021-10-27"},{"lineNumber":38,"author":{"gitId":"ramapriyan912001"},"content":"     */","lastModifiedDate":"2021-10-27"},{"lineNumber":39,"author":{"gitId":"ramapriyan912001"},"content":"    public PaymentBuilder withPayee(Person payee) {","lastModifiedDate":"2021-10-27"},{"lineNumber":40,"author":{"gitId":"ramapriyan912001"},"content":"        this.payee \u003d payee;","lastModifiedDate":"2021-10-27"},{"lineNumber":41,"author":{"gitId":"ramapriyan912001"},"content":"        return this;","lastModifiedDate":"2021-10-27"},{"lineNumber":42,"author":{"gitId":"ramapriyan912001"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":43,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":44,"author":{"gitId":"ramapriyan912001"},"content":"    /**","lastModifiedDate":"2021-10-27"},{"lineNumber":45,"author":{"gitId":"ramapriyan912001"},"content":"     * Sets Cost field.","lastModifiedDate":"2021-10-27"},{"lineNumber":46,"author":{"gitId":"ramapriyan912001"},"content":"     * @param cost Cost to set as cost.","lastModifiedDate":"2021-10-27"},{"lineNumber":47,"author":{"gitId":"ramapriyan912001"},"content":"     * @return edited Paymentbuilder","lastModifiedDate":"2021-10-27"},{"lineNumber":48,"author":{"gitId":"ramapriyan912001"},"content":"     */","lastModifiedDate":"2021-10-27"},{"lineNumber":49,"author":{"gitId":"ramapriyan912001"},"content":"    public PaymentBuilder withCost(Cost cost) {","lastModifiedDate":"2021-10-27"},{"lineNumber":50,"author":{"gitId":"ramapriyan912001"},"content":"        this.cost \u003d cost;","lastModifiedDate":"2021-10-27"},{"lineNumber":51,"author":{"gitId":"ramapriyan912001"},"content":"        return this;","lastModifiedDate":"2021-10-27"},{"lineNumber":52,"author":{"gitId":"ramapriyan912001"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":53,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":54,"author":{"gitId":"ramapriyan912001"},"content":"    /**","lastModifiedDate":"2021-10-27"},{"lineNumber":55,"author":{"gitId":"ramapriyan912001"},"content":"     * Produces payment object.","lastModifiedDate":"2021-10-27"},{"lineNumber":56,"author":{"gitId":"ramapriyan912001"},"content":"     * @return Payment object.","lastModifiedDate":"2021-10-27"},{"lineNumber":57,"author":{"gitId":"ramapriyan912001"},"content":"     */","lastModifiedDate":"2021-10-27"},{"lineNumber":58,"author":{"gitId":"ramapriyan912001"},"content":"    public Payment build() {","lastModifiedDate":"2021-10-27"},{"lineNumber":59,"author":{"gitId":"ramapriyan912001"},"content":"        return new Payment(payer, payee, cost);","lastModifiedDate":"2021-10-27"},{"lineNumber":60,"author":{"gitId":"ramapriyan912001"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":61,"author":{"gitId":"ramapriyan912001"},"content":"}","lastModifiedDate":"2021-10-27"}],"authorContributionMap":{"ramapriyan912001":61}},{"path":"src/test/java/seedu/awe/testutil/PersonBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"ramapriyan912001"},"content":"package seedu.awe.testutil;","lastModifiedDate":"2021-10-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-12-20"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-04-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":6,"author":{"gitId":"ramapriyan912001"},"content":"import seedu.awe.model.person.Name;","lastModifiedDate":"2021-10-05"},{"lineNumber":7,"author":{"gitId":"ramapriyan912001"},"content":"import seedu.awe.model.person.Person;","lastModifiedDate":"2021-10-05"},{"lineNumber":8,"author":{"gitId":"ramapriyan912001"},"content":"import seedu.awe.model.person.Phone;","lastModifiedDate":"2021-10-05"},{"lineNumber":9,"author":{"gitId":"ramapriyan912001"},"content":"import seedu.awe.model.tag.Tag;","lastModifiedDate":"2021-10-05"},{"lineNumber":10,"author":{"gitId":"ramapriyan912001"},"content":"import seedu.awe.model.util.SampleDataUtil;","lastModifiedDate":"2021-10-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * A utility class to help with building Person objects.","lastModifiedDate":"2017-04-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class PersonBuilder {","lastModifiedDate":"2016-09-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_NAME \u003d \"Amy Bee\";","lastModifiedDate":"2020-12-18"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_PHONE \u003d \"85355255\";","lastModifiedDate":"2017-04-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private Name name;","lastModifiedDate":"2017-12-20"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private Phone phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private Set\u003cTag\u003e tags;","lastModifiedDate":"2017-12-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * Creates a {@code PersonBuilder} with the default details.","lastModifiedDate":"2020-05-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public PersonBuilder() {","lastModifiedDate":"2017-08-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        name \u003d new Name(DEFAULT_NAME);","lastModifiedDate":"2017-12-20"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        phone \u003d new Phone(DEFAULT_PHONE);","lastModifiedDate":"2017-12-20"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        tags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2018-03-26"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-11"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Initializes the PersonBuilder with the data of {@code personToCopy}.","lastModifiedDate":"2016-12-11"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-11"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public PersonBuilder(Person personToCopy) {","lastModifiedDate":"2018-01-10"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        name \u003d personToCopy.getName();","lastModifiedDate":"2017-12-20"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        phone \u003d personToCopy.getPhone();","lastModifiedDate":"2017-12-20"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        tags \u003d new HashSet\u003c\u003e(personToCopy.getTags());","lastModifiedDate":"2017-12-20"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-11"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-11"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * Sets the {@code Name} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public PersonBuilder withName(String name) {","lastModifiedDate":"2017-08-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        this.name \u003d new Name(name);","lastModifiedDate":"2017-12-20"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     * Parses the {@code tags} into a {@code Set\u003cTag\u003e} and set it to the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public PersonBuilder withTags(String ... tags) {","lastModifiedDate":"2017-08-15"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        this.tags \u003d SampleDataUtil.getTagSet(tags);","lastModifiedDate":"2017-12-20"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     * Sets the {@code Phone} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public PersonBuilder withPhone(String phone) {","lastModifiedDate":"2017-08-15"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        this.phone \u003d new Phone(phone);","lastModifiedDate":"2017-12-20"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public Person build() {","lastModifiedDate":"2017-04-05"},{"lineNumber":67,"author":{"gitId":"marcuspeh"},"content":"        return new Person(name, phone, tags);","lastModifiedDate":"2021-11-01"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":70,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-03"}],"authorContributionMap":{"marcuspeh":1,"ramapriyan912001":6,"-":63}},{"path":"src/test/java/seedu/awe/testutil/PersonUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"ramapriyan912001"},"content":"package seedu.awe.testutil;","lastModifiedDate":"2021-10-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":3,"author":{"gitId":"ramapriyan912001"},"content":"import static seedu.awe.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2021-10-05"},{"lineNumber":4,"author":{"gitId":"ramapriyan912001"},"content":"import static seedu.awe.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2021-10-05"},{"lineNumber":5,"author":{"gitId":"ramapriyan912001"},"content":"import static seedu.awe.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2021-10-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2018-03-26"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-26"},{"lineNumber":9,"author":{"gitId":"marcuspeh"},"content":"import seedu.awe.logic.commands.AddContactCommand;","lastModifiedDate":"2021-10-11"},{"lineNumber":10,"author":{"gitId":"marcuspeh"},"content":"import seedu.awe.logic.commands.EditContactCommand.EditPersonDescriptor;","lastModifiedDate":"2021-10-11"},{"lineNumber":11,"author":{"gitId":"ramapriyan912001"},"content":"import seedu.awe.model.person.Person;","lastModifiedDate":"2021-10-05"},{"lineNumber":12,"author":{"gitId":"ramapriyan912001"},"content":"import seedu.awe.model.tag.Tag;","lastModifiedDate":"2021-10-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-04-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * A utility class for Person.","lastModifiedDate":"2017-04-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-04-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public class PersonUtil {","lastModifiedDate":"2017-04-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-04-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * Returns an add command string for adding the {@code person}.","lastModifiedDate":"2017-04-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-04-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public static String getAddCommand(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":23,"author":{"gitId":"marcuspeh"},"content":"        return AddContactCommand.COMMAND_WORD + \" \" + getPersonDetails(person);","lastModifiedDate":"2021-10-11"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-04-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-04-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * Returns the part of command string for the given {@code person}\u0027s details.","lastModifiedDate":"2017-04-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-04-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public static String getPersonDetails(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2017-04-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        sb.append(PREFIX_NAME + person.getName().fullName + \" \");","lastModifiedDate":"2017-06-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        sb.append(PREFIX_PHONE + person.getPhone().value + \" \");","lastModifiedDate":"2017-05-09"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        person.getTags().stream().forEach(","lastModifiedDate":"2017-05-09"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            s -\u003e sb.append(PREFIX_TAG + s.tagName + \" \")","lastModifiedDate":"2017-05-09"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        );","lastModifiedDate":"2017-05-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2017-04-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-04-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-26"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-26"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * Returns the part of command string for the given {@code EditPersonDescriptor}\u0027s details.","lastModifiedDate":"2018-03-26"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-26"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public static String getEditPersonDescriptorDetails(EditPersonDescriptor descriptor) {","lastModifiedDate":"2018-03-26"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2018-03-26"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        descriptor.getName().ifPresent(name -\u003e sb.append(PREFIX_NAME).append(name.fullName).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        descriptor.getPhone().ifPresent(phone -\u003e sb.append(PREFIX_PHONE).append(phone.value).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        if (descriptor.getTags().isPresent()) {","lastModifiedDate":"2018-03-26"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            Set\u003cTag\u003e tags \u003d descriptor.getTags().get();","lastModifiedDate":"2018-03-26"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            if (tags.isEmpty()) {","lastModifiedDate":"2018-03-26"},{"lineNumber":49,"author":{"gitId":"-"},"content":"                sb.append(PREFIX_TAG);","lastModifiedDate":"2018-03-26"},{"lineNumber":50,"author":{"gitId":"-"},"content":"            } else {","lastModifiedDate":"2018-03-26"},{"lineNumber":51,"author":{"gitId":"-"},"content":"                tags.forEach(s -\u003e sb.append(PREFIX_TAG).append(s.tagName).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":52,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-03-26"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-03-26"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2018-03-26"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-26"},{"lineNumber":56,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-04-05"}],"authorContributionMap":{"marcuspeh":3,"ramapriyan912001":6,"-":47}},{"path":"src/test/java/seedu/awe/testutil/SerializableTestClass.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"ramapriyan912001"},"content":"package seedu.awe.testutil;","lastModifiedDate":"2021-10-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2016-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2016-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.HashMap;","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * A class used to test serialization and deserialization","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class SerializableTestClass {","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String JSON_STRING_REPRESENTATION \u003d String.format(\"{%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"            + \"  \\\"name\\\" : \\\"This is a test class\\\",%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"            + \"  \\\"listOfLocalDateTimes\\\" : \"","lastModifiedDate":"2016-10-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"            + \"[ \\\"-999999999-01-01T00:00:00\\\", \\\"+999999999-12-31T23:59:59.999999999\\\", \"","lastModifiedDate":"2016-10-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"            + \"\\\"0001-01-01T01:01:00\\\" ],%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"            + \"  \\\"mapOfIntegerToString\\\" : {%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"            + \"    \\\"1\\\" : \\\"One\\\",%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"            + \"    \\\"2\\\" : \\\"Two\\\",%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"            + \"    \\\"3\\\" : \\\"Three\\\"%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"            + \"  }%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"            + \"}\");","lastModifiedDate":"2016-10-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private static final String NAME_TEST_VALUE \u003d \"This is a test class\";","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private String name;","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private List\u003cLocalDateTime\u003e listOfLocalDateTimes;","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private HashMap\u003cInteger, String\u003e mapOfIntegerToString;","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public static String getNameTestValue() {","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        return NAME_TEST_VALUE;","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public static List\u003cLocalDateTime\u003e getListTestValues() {","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        List\u003cLocalDateTime\u003e listOfLocalDateTimes \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        listOfLocalDateTimes.add(LocalDateTime.MIN);","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        listOfLocalDateTimes.add(LocalDateTime.MAX);","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        listOfLocalDateTimes.add(LocalDateTime.of(1, 1, 1, 1, 1));","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        return listOfLocalDateTimes;","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public static HashMap\u003cInteger, String\u003e getHashMapTestValues() {","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        HashMap\u003cInteger, String\u003e mapOfIntegerToString \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        mapOfIntegerToString.put(1, \"One\");","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        mapOfIntegerToString.put(2, \"Two\");","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        mapOfIntegerToString.put(3, \"Three\");","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        return mapOfIntegerToString;","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public void setTestValues() {","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        name \u003d getNameTestValue();","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        listOfLocalDateTimes \u003d getListTestValues();","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        mapOfIntegerToString \u003d getHashMapTestValues();","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public String getName() {","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        return name;","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public List\u003cLocalDateTime\u003e getListOfLocalDateTimes() {","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        return listOfLocalDateTimes;","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public HashMap\u003cInteger, String\u003e getMapOfIntegerToString() {","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        return mapOfIntegerToString;","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"ramapriyan912001":1,"-":71}},{"path":"src/test/java/seedu/awe/testutil/TestUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"ramapriyan912001"},"content":"package seedu.awe.testutil;","lastModifiedDate":"2021-10-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Files;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"ramapriyan912001"},"content":"import seedu.awe.commons.core.index.Index;","lastModifiedDate":"2021-10-05"},{"lineNumber":9,"author":{"gitId":"ramapriyan912001"},"content":"import seedu.awe.model.Model;","lastModifiedDate":"2021-10-05"},{"lineNumber":10,"author":{"gitId":"ramapriyan912001"},"content":"import seedu.awe.model.person.Person;","lastModifiedDate":"2021-10-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * A utility class for test cases.","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class TestUtil {","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * Folder used for temp files created during testing. Ignored by Git.","lastModifiedDate":"2016-10-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private static final Path SANDBOX_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"sandbox\");","lastModifiedDate":"2018-04-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Appends {@code fileName} to the sandbox folder path and returns the resulting path.","lastModifiedDate":"2018-04-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Creates the sandbox folder if it doesn\u0027t exist.","lastModifiedDate":"2016-09-28"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static Path getFilePathInSandboxFolder(String fileName) {","lastModifiedDate":"2018-04-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-28"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            Files.createDirectories(SANDBOX_FOLDER);","lastModifiedDate":"2018-04-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-28"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            throw new RuntimeException(e);","lastModifiedDate":"2016-09-28"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-28"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        return SANDBOX_FOLDER.resolve(fileName);","lastModifiedDate":"2018-04-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-30"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * Returns the middle index of the person in the {@code model}\u0027s person list.","lastModifiedDate":"2017-07-30"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-30"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public static Index getMidIndex(Model model) {","lastModifiedDate":"2017-07-30"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return Index.fromOneBased(model.getFilteredPersonList().size() / 2);","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-30"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-30"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-30"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * Returns the last index of the person in the {@code model}\u0027s person list.","lastModifiedDate":"2017-07-30"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-30"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public static Index getLastIndex(Model model) {","lastModifiedDate":"2017-07-30"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        return Index.fromOneBased(model.getFilteredPersonList().size());","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-30"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-30"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-30"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     * Returns the person in the {@code model}\u0027s person list at {@code index}.","lastModifiedDate":"2017-07-30"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-30"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public static Person getPerson(Model model, Index index) {","lastModifiedDate":"2018-01-10"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        return model.getFilteredPersonList().get(index.getZeroBased());","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-30"},{"lineNumber":55,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"ramapriyan912001":4,"-":51}},{"path":"src/test/java/seedu/awe/testutil/TypicalExpenses.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Jingwencloud"},"content":"package seedu.awe.testutil;","lastModifiedDate":"2021-10-13"},{"lineNumber":2,"author":{"gitId":"Jingwencloud"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":3,"author":{"gitId":"Jingwencloud"},"content":"import static seedu.awe.logic.commands.CommandTestUtil.VALID_COST_BUFFET;","lastModifiedDate":"2021-10-13"},{"lineNumber":4,"author":{"gitId":"Jingwencloud"},"content":"import static seedu.awe.logic.commands.CommandTestUtil.VALID_COST_SOUVENIRS;","lastModifiedDate":"2021-10-13"},{"lineNumber":5,"author":{"gitId":"Jingwencloud"},"content":"import static seedu.awe.logic.commands.CommandTestUtil.VALID_DESCRIPTION_BUFFET;","lastModifiedDate":"2021-10-13"},{"lineNumber":6,"author":{"gitId":"Jingwencloud"},"content":"import static seedu.awe.logic.commands.CommandTestUtil.VALID_DESCRIPTION_SOUVENIRS;","lastModifiedDate":"2021-10-13"},{"lineNumber":7,"author":{"gitId":"Jingwencloud"},"content":"import static seedu.awe.testutil.TypicalGroups.BALI;","lastModifiedDate":"2021-10-13"},{"lineNumber":8,"author":{"gitId":"Jingwencloud"},"content":"import static seedu.awe.testutil.TypicalGroups.HELSINKI;","lastModifiedDate":"2021-10-15"},{"lineNumber":9,"author":{"gitId":"Jingwencloud"},"content":"import static seedu.awe.testutil.TypicalGroups.LONDON;","lastModifiedDate":"2021-10-13"},{"lineNumber":10,"author":{"gitId":"Jingwencloud"},"content":"import static seedu.awe.testutil.TypicalGroups.OSLO;","lastModifiedDate":"2021-10-13"},{"lineNumber":11,"author":{"gitId":"Jingwencloud"},"content":"import static seedu.awe.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2021-10-13"},{"lineNumber":12,"author":{"gitId":"Jingwencloud"},"content":"import static seedu.awe.testutil.TypicalPersons.AMY;","lastModifiedDate":"2021-10-28"},{"lineNumber":13,"author":{"gitId":"Jingwencloud"},"content":"import static seedu.awe.testutil.TypicalPersons.BENSON;","lastModifiedDate":"2021-10-13"},{"lineNumber":14,"author":{"gitId":"Jingwencloud"},"content":"import static seedu.awe.testutil.TypicalPersons.BOB;","lastModifiedDate":"2021-10-28"},{"lineNumber":15,"author":{"gitId":"Jingwencloud"},"content":"import static seedu.awe.testutil.TypicalPersons.CARL;","lastModifiedDate":"2021-10-13"},{"lineNumber":16,"author":{"gitId":"Jingwencloud"},"content":"import static seedu.awe.testutil.TypicalPersons.DANIEL;","lastModifiedDate":"2021-10-13"},{"lineNumber":17,"author":{"gitId":"Jingwencloud"},"content":"import static seedu.awe.testutil.TypicalPersons.ELLE;","lastModifiedDate":"2021-10-13"},{"lineNumber":18,"author":{"gitId":"Jingwencloud"},"content":"import static seedu.awe.testutil.TypicalPersons.FIONA;","lastModifiedDate":"2021-10-13"},{"lineNumber":19,"author":{"gitId":"Jingwencloud"},"content":"import static seedu.awe.testutil.TypicalPersons.GEORGE;","lastModifiedDate":"2021-10-13"},{"lineNumber":20,"author":{"gitId":"Jingwencloud"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":21,"author":{"gitId":"Jingwencloud"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-13"},{"lineNumber":22,"author":{"gitId":"Jingwencloud"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-10-13"},{"lineNumber":23,"author":{"gitId":"Jingwencloud"},"content":"import java.util.List;","lastModifiedDate":"2021-10-13"},{"lineNumber":24,"author":{"gitId":"Jingwencloud"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":25,"author":{"gitId":"Jingwencloud"},"content":"import seedu.awe.model.AddressBook;","lastModifiedDate":"2021-10-13"},{"lineNumber":26,"author":{"gitId":"Jingwencloud"},"content":"import seedu.awe.model.expense.Expense;","lastModifiedDate":"2021-10-13"},{"lineNumber":27,"author":{"gitId":"Jingwencloud"},"content":"import seedu.awe.model.group.Group;","lastModifiedDate":"2021-10-13"},{"lineNumber":28,"author":{"gitId":"Jingwencloud"},"content":"import seedu.awe.model.person.Person;","lastModifiedDate":"2021-10-13"},{"lineNumber":29,"author":{"gitId":"Jingwencloud"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":30,"author":{"gitId":"Jingwencloud"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":31,"author":{"gitId":"Jingwencloud"},"content":"public class TypicalExpenses {","lastModifiedDate":"2021-10-13"},{"lineNumber":32,"author":{"gitId":"Jingwencloud"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":33,"author":{"gitId":"Jingwencloud"},"content":"    public static final Expense HOLIDAY \u003d new ExpenseBuilder().withDescription(\"Holiday\")","lastModifiedDate":"2021-10-13"},{"lineNumber":34,"author":{"gitId":"Jingwencloud"},"content":"            .withCost(\"1000\").withPayer(ALICE).build();","lastModifiedDate":"2021-10-28"},{"lineNumber":35,"author":{"gitId":"Jingwencloud"},"content":"    public static final Expense PIZZA \u003d new ExpenseBuilder().withDescription(\"Pizza\")","lastModifiedDate":"2021-10-13"},{"lineNumber":36,"author":{"gitId":"Jingwencloud"},"content":"            .withCost(\"100\").withPayer(BENSON).build();","lastModifiedDate":"2021-10-28"},{"lineNumber":37,"author":{"gitId":"Jingwencloud"},"content":"    public static final Expense PARTY \u003d new ExpenseBuilder().withDescription(\"Party\")","lastModifiedDate":"2021-10-13"},{"lineNumber":38,"author":{"gitId":"Jingwencloud"},"content":"            .withCost(\"500\").withPayer(CARL).build();","lastModifiedDate":"2021-10-28"},{"lineNumber":39,"author":{"gitId":"Jingwencloud"},"content":"    public static final Expense BIRTHDAY_GIFTS \u003d new ExpenseBuilder().withDescription(\"Birthday Gifts\")","lastModifiedDate":"2021-10-28"},{"lineNumber":40,"author":{"gitId":"Jingwencloud"},"content":"            .withCost(\"60\").withPayer(DANIEL).build();","lastModifiedDate":"2021-10-28"},{"lineNumber":41,"author":{"gitId":"Jingwencloud"},"content":"    public static final Expense DINNER \u003d new ExpenseBuilder().withDescription(\"dinner\")","lastModifiedDate":"2021-10-13"},{"lineNumber":42,"author":{"gitId":"Jingwencloud"},"content":"            .withCost(\"500\").withPayer(ELLE).build();","lastModifiedDate":"2021-10-28"},{"lineNumber":43,"author":{"gitId":"Jingwencloud"},"content":"    public static final Expense TRANSPORTATION \u003d new ExpenseBuilder().withDescription(\"Transportation\")","lastModifiedDate":"2021-10-13"},{"lineNumber":44,"author":{"gitId":"Jingwencloud"},"content":"            .withCost(\"30\").withPayer(FIONA).build();","lastModifiedDate":"2021-10-28"},{"lineNumber":45,"author":{"gitId":"Jingwencloud"},"content":"    public static final Expense MOVIE_TICKETS \u003d new ExpenseBuilder().withDescription(\"Movie Tickets\")","lastModifiedDate":"2021-10-28"},{"lineNumber":46,"author":{"gitId":"Jingwencloud"},"content":"            .withCost(\"70\").withPayer(GEORGE).build();","lastModifiedDate":"2021-10-28"},{"lineNumber":47,"author":{"gitId":"Jingwencloud"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":48,"author":{"gitId":"Jingwencloud"},"content":"    // Manually added - Expense\u0027s details found in {@code CommandTestUtil}","lastModifiedDate":"2021-10-14"},{"lineNumber":49,"author":{"gitId":"Jingwencloud"},"content":"    public static final Expense BUFFET \u003d new ExpenseBuilder().withDescription(VALID_DESCRIPTION_BUFFET)","lastModifiedDate":"2021-10-13"},{"lineNumber":50,"author":{"gitId":"Jingwencloud"},"content":"            .withCost(VALID_COST_BUFFET).withPayer(AMY).build();","lastModifiedDate":"2021-10-28"},{"lineNumber":51,"author":{"gitId":"Jingwencloud"},"content":"    public static final Expense SOUVENIRS \u003d new ExpenseBuilder().withDescription(VALID_DESCRIPTION_SOUVENIRS)","lastModifiedDate":"2021-10-13"},{"lineNumber":52,"author":{"gitId":"Jingwencloud"},"content":"            .withCost(VALID_COST_SOUVENIRS).withPayer(BOB).build();","lastModifiedDate":"2021-10-28"},{"lineNumber":53,"author":{"gitId":"Jingwencloud"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":54,"author":{"gitId":"Jingwencloud"},"content":"    public static final String KEYWORD_MATCHING_BUFFET \u003d \"Buffet\"; // A keyword that matches BUFFET","lastModifiedDate":"2021-10-15"},{"lineNumber":55,"author":{"gitId":"Jingwencloud"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":56,"author":{"gitId":"Jingwencloud"},"content":"    private TypicalExpenses() {","lastModifiedDate":"2021-10-15"},{"lineNumber":57,"author":{"gitId":"Jingwencloud"},"content":"    } // prevents instantiation","lastModifiedDate":"2021-10-15"},{"lineNumber":58,"author":{"gitId":"Jingwencloud"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":59,"author":{"gitId":"Jingwencloud"},"content":"    /**","lastModifiedDate":"2021-10-13"},{"lineNumber":60,"author":{"gitId":"Jingwencloud"},"content":"     * Returns an {@code AddressBook} with all the typical expenses.","lastModifiedDate":"2021-10-14"},{"lineNumber":61,"author":{"gitId":"Jingwencloud"},"content":"     */","lastModifiedDate":"2021-10-13"},{"lineNumber":62,"author":{"gitId":"Jingwencloud"},"content":"    public static AddressBook getTypicalAddressBook() {","lastModifiedDate":"2021-10-13"},{"lineNumber":63,"author":{"gitId":"Jingwencloud"},"content":"        AddressBook ab \u003d new AddressBook();","lastModifiedDate":"2021-10-13"},{"lineNumber":64,"author":{"gitId":"Jingwencloud"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":65,"author":{"gitId":"Jingwencloud"},"content":"        for (Person person : getTypicalPersons()) {","lastModifiedDate":"2021-10-13"},{"lineNumber":66,"author":{"gitId":"Jingwencloud"},"content":"            ab.addPerson(person);","lastModifiedDate":"2021-10-13"},{"lineNumber":67,"author":{"gitId":"Jingwencloud"},"content":"        }","lastModifiedDate":"2021-10-13"},{"lineNumber":68,"author":{"gitId":"Jingwencloud"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":69,"author":{"gitId":"Jingwencloud"},"content":"        for (Group group : getTypicalGroups()) {","lastModifiedDate":"2021-10-13"},{"lineNumber":70,"author":{"gitId":"Jingwencloud"},"content":"            for (Expense expense : getTypicalExpenses(group)) {","lastModifiedDate":"2021-10-15"},{"lineNumber":71,"author":{"gitId":"ramapriyan912001"},"content":"                group \u003d group.addExpense(expense);","lastModifiedDate":"2021-10-20"},{"lineNumber":72,"author":{"gitId":"Jingwencloud"},"content":"            }","lastModifiedDate":"2021-10-13"},{"lineNumber":73,"author":{"gitId":"Jingwencloud"},"content":"            ab.addGroup(group);","lastModifiedDate":"2021-10-13"},{"lineNumber":74,"author":{"gitId":"Jingwencloud"},"content":"        }","lastModifiedDate":"2021-10-13"},{"lineNumber":75,"author":{"gitId":"Jingwencloud"},"content":"        return ab;","lastModifiedDate":"2021-10-13"},{"lineNumber":76,"author":{"gitId":"Jingwencloud"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":77,"author":{"gitId":"Jingwencloud"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":78,"author":{"gitId":"Jingwencloud"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":79,"author":{"gitId":"Jingwencloud"},"content":"    public static List\u003cExpense\u003e getTypicalExpenses(Group group) {","lastModifiedDate":"2021-10-15"},{"lineNumber":80,"author":{"gitId":"Jingwencloud"},"content":"        String groupName \u003d group.getGroupName().toString();","lastModifiedDate":"2021-10-15"},{"lineNumber":81,"author":{"gitId":"Jingwencloud"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":82,"author":{"gitId":"Jingwencloud"},"content":"        switch (groupName) {","lastModifiedDate":"2021-10-15"},{"lineNumber":83,"author":{"gitId":"Jingwencloud"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":84,"author":{"gitId":"Jingwencloud"},"content":"        case \"Bali\":","lastModifiedDate":"2021-10-15"},{"lineNumber":85,"author":{"gitId":"Jingwencloud"},"content":"            return new ArrayList\u003c\u003e(Arrays.asList(BUFFET, SOUVENIRS, HOLIDAY));","lastModifiedDate":"2021-10-15"},{"lineNumber":86,"author":{"gitId":"Jingwencloud"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":87,"author":{"gitId":"Jingwencloud"},"content":"        case \"London\":","lastModifiedDate":"2021-10-15"},{"lineNumber":88,"author":{"gitId":"Jingwencloud"},"content":"            return new ArrayList\u003c\u003e(Arrays.asList(BUFFET, PIZZA, MOVIE_TICKETS));","lastModifiedDate":"2021-10-28"},{"lineNumber":89,"author":{"gitId":"Jingwencloud"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":90,"author":{"gitId":"Jingwencloud"},"content":"        case \"Oslo\":","lastModifiedDate":"2021-10-15"},{"lineNumber":91,"author":{"gitId":"Jingwencloud"},"content":"            return new ArrayList\u003c\u003e(Arrays.asList(PARTY, DINNER, BIRTHDAY_GIFTS));","lastModifiedDate":"2021-10-28"},{"lineNumber":92,"author":{"gitId":"Jingwencloud"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":93,"author":{"gitId":"Jingwencloud"},"content":"        case \"Helsinki\":","lastModifiedDate":"2021-10-15"},{"lineNumber":94,"author":{"gitId":"Jingwencloud"},"content":"            return new ArrayList\u003c\u003e(Arrays.asList(MOVIE_TICKETS, DINNER, BIRTHDAY_GIFTS));","lastModifiedDate":"2021-10-28"},{"lineNumber":95,"author":{"gitId":"Jingwencloud"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":96,"author":{"gitId":"Jingwencloud"},"content":"        default:","lastModifiedDate":"2021-10-15"},{"lineNumber":97,"author":{"gitId":"Jingwencloud"},"content":"            return new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-15"},{"lineNumber":98,"author":{"gitId":"Jingwencloud"},"content":"        }","lastModifiedDate":"2021-10-13"},{"lineNumber":99,"author":{"gitId":"Jingwencloud"},"content":"    }","lastModifiedDate":"2021-10-15"},{"lineNumber":100,"author":{"gitId":"Jingwencloud"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":101,"author":{"gitId":"Jingwencloud"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":102,"author":{"gitId":"Jingwencloud"},"content":"    public static List\u003cGroup\u003e getTypicalGroups() {","lastModifiedDate":"2021-10-13"},{"lineNumber":103,"author":{"gitId":"Jingwencloud"},"content":"        return new ArrayList\u003c\u003e(Arrays.asList(BALI, LONDON, OSLO, HELSINKI));","lastModifiedDate":"2021-10-15"},{"lineNumber":104,"author":{"gitId":"Jingwencloud"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":105,"author":{"gitId":"Jingwencloud"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":106,"author":{"gitId":"Jingwencloud"},"content":"    public static List\u003cPerson\u003e getTypicalPersons() {","lastModifiedDate":"2021-10-13"},{"lineNumber":107,"author":{"gitId":"Jingwencloud"},"content":"        return new ArrayList\u003c\u003e(Arrays.asList(ALICE, BENSON, CARL, DANIEL, ELLE, FIONA, GEORGE));","lastModifiedDate":"2021-10-13"},{"lineNumber":108,"author":{"gitId":"Jingwencloud"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":109,"author":{"gitId":"Jingwencloud"},"content":"}","lastModifiedDate":"2021-10-13"},{"lineNumber":110,"author":{"gitId":"Jingwencloud"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":111,"author":{"gitId":"Jingwencloud"},"content":"","lastModifiedDate":"2021-10-15"},{"lineNumber":112,"author":{"gitId":"Jingwencloud"},"content":"","lastModifiedDate":"2021-10-15"}],"authorContributionMap":{"Jingwencloud":111,"ramapriyan912001":1}},{"path":"src/test/java/seedu/awe/testutil/TypicalGroups.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"ramapriyan912001"},"content":"package seedu.awe.testutil;","lastModifiedDate":"2021-10-05"},{"lineNumber":2,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":3,"author":{"gitId":"ramapriyan912001"},"content":"import static seedu.awe.testutil.TypicalExpenses.DINNER;","lastModifiedDate":"2021-10-29"},{"lineNumber":4,"author":{"gitId":"ramapriyan912001"},"content":"import static seedu.awe.testutil.TypicalExpenses.HOLIDAY;","lastModifiedDate":"2021-10-29"},{"lineNumber":5,"author":{"gitId":"ramapriyan912001"},"content":"import static seedu.awe.testutil.TypicalExpenses.SOUVENIRS;","lastModifiedDate":"2021-10-29"},{"lineNumber":6,"author":{"gitId":"ramapriyan912001"},"content":"import static seedu.awe.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2021-10-05"},{"lineNumber":7,"author":{"gitId":"ramapriyan912001"},"content":"import static seedu.awe.testutil.TypicalPersons.AMY;","lastModifiedDate":"2021-10-05"},{"lineNumber":8,"author":{"gitId":"ramapriyan912001"},"content":"import static seedu.awe.testutil.TypicalPersons.BENSON;","lastModifiedDate":"2021-10-05"},{"lineNumber":9,"author":{"gitId":"ramapriyan912001"},"content":"import static seedu.awe.testutil.TypicalPersons.BOB;","lastModifiedDate":"2021-10-05"},{"lineNumber":10,"author":{"gitId":"ramapriyan912001"},"content":"import static seedu.awe.testutil.TypicalPersons.CARL;","lastModifiedDate":"2021-10-05"},{"lineNumber":11,"author":{"gitId":"ramapriyan912001"},"content":"import static seedu.awe.testutil.TypicalPersons.DANIEL;","lastModifiedDate":"2021-10-05"},{"lineNumber":12,"author":{"gitId":"ramapriyan912001"},"content":"import static seedu.awe.testutil.TypicalPersons.ELLE;","lastModifiedDate":"2021-10-05"},{"lineNumber":13,"author":{"gitId":"ramapriyan912001"},"content":"import static seedu.awe.testutil.TypicalPersons.FIONA;","lastModifiedDate":"2021-10-05"},{"lineNumber":14,"author":{"gitId":"ramapriyan912001"},"content":"import static seedu.awe.testutil.TypicalPersons.GEORGE;","lastModifiedDate":"2021-10-05"},{"lineNumber":15,"author":{"gitId":"ramapriyan912001"},"content":"import static seedu.awe.testutil.TypicalPersons.HOON;","lastModifiedDate":"2021-10-05"},{"lineNumber":16,"author":{"gitId":"ramapriyan912001"},"content":"import static seedu.awe.testutil.TypicalPersons.IDA;","lastModifiedDate":"2021-10-05"},{"lineNumber":17,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":18,"author":{"gitId":"ramapriyan912001"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-05"},{"lineNumber":19,"author":{"gitId":"ramapriyan912001"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-10-05"},{"lineNumber":20,"author":{"gitId":"ramapriyan912001"},"content":"import java.util.List;","lastModifiedDate":"2021-10-05"},{"lineNumber":21,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":22,"author":{"gitId":"ramapriyan912001"},"content":"import seedu.awe.model.AddressBook;","lastModifiedDate":"2021-10-05"},{"lineNumber":23,"author":{"gitId":"ramapriyan912001"},"content":"import seedu.awe.model.expense.Cost;","lastModifiedDate":"2021-10-29"},{"lineNumber":24,"author":{"gitId":"ramapriyan912001"},"content":"import seedu.awe.model.expense.Description;","lastModifiedDate":"2021-10-31"},{"lineNumber":25,"author":{"gitId":"ramapriyan912001"},"content":"import seedu.awe.model.expense.Expense;","lastModifiedDate":"2021-10-29"},{"lineNumber":26,"author":{"gitId":"ramapriyan912001"},"content":"import seedu.awe.model.group.Group;","lastModifiedDate":"2021-10-05"},{"lineNumber":27,"author":{"gitId":"ramapriyan912001"},"content":"import seedu.awe.model.payment.Payment;","lastModifiedDate":"2021-10-29"},{"lineNumber":28,"author":{"gitId":"ramapriyan912001"},"content":"import seedu.awe.model.person.Person;","lastModifiedDate":"2021-10-05"},{"lineNumber":29,"author":{"gitId":"marcuspeh"},"content":"import seedu.awe.model.transactionsummary.TransactionSummary;","lastModifiedDate":"2021-11-01"},{"lineNumber":30,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":31,"author":{"gitId":"ramapriyan912001"},"content":"/**","lastModifiedDate":"2021-10-05"},{"lineNumber":32,"author":{"gitId":"ramapriyan912001"},"content":" * A utility class containing a list of {@code Group} objects to be used in tests.","lastModifiedDate":"2021-10-05"},{"lineNumber":33,"author":{"gitId":"ramapriyan912001"},"content":" */","lastModifiedDate":"2021-10-05"},{"lineNumber":34,"author":{"gitId":"ramapriyan912001"},"content":"public class TypicalGroups {","lastModifiedDate":"2021-10-05"},{"lineNumber":35,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":36,"author":{"gitId":"ramapriyan912001"},"content":"    public static final Group BALI \u003d new GroupBuilder().withGroupName(\"Bali\")","lastModifiedDate":"2021-10-05"},{"lineNumber":37,"author":{"gitId":"ramapriyan912001"},"content":"            .withMembers(ALICE, BOB, AMY)","lastModifiedDate":"2021-10-05"},{"lineNumber":38,"author":{"gitId":"chrus-chong"},"content":"            .build();","lastModifiedDate":"2021-10-06"},{"lineNumber":39,"author":{"gitId":"ramapriyan912001"},"content":"    public static final Group OSLO \u003d new GroupBuilder().withGroupName(\"Oslo\")","lastModifiedDate":"2021-10-05"},{"lineNumber":40,"author":{"gitId":"ramapriyan912001"},"content":"            .withMembers(CARL, ELLE, DANIEL)","lastModifiedDate":"2021-10-05"},{"lineNumber":41,"author":{"gitId":"ramapriyan912001"},"content":"            .withTags(\"friends\").build();","lastModifiedDate":"2021-10-05"},{"lineNumber":42,"author":{"gitId":"ramapriyan912001"},"content":"    public static final Group MALIBU \u003d new GroupBuilder().withGroupName(\"Malibu\")","lastModifiedDate":"2021-10-05"},{"lineNumber":43,"author":{"gitId":"ramapriyan912001"},"content":"            .withMembers(ALICE, ELLE, HOON)","lastModifiedDate":"2021-10-05"},{"lineNumber":44,"author":{"gitId":"ramapriyan912001"},"content":"            .withTags(\"friends\").build();","lastModifiedDate":"2021-10-05"},{"lineNumber":45,"author":{"gitId":"ramapriyan912001"},"content":"    public static final Group INDIA \u003d new GroupBuilder().withGroupName(\"India\")","lastModifiedDate":"2021-10-05"},{"lineNumber":46,"author":{"gitId":"ramapriyan912001"},"content":"            .withMembers(AMY, BOB, BENSON)","lastModifiedDate":"2021-10-05"},{"lineNumber":47,"author":{"gitId":"ramapriyan912001"},"content":"            .withTags(\"friends\").build();","lastModifiedDate":"2021-10-05"},{"lineNumber":48,"author":{"gitId":"ramapriyan912001"},"content":"    public static final Group CHINA \u003d new GroupBuilder().withGroupName(\"China\")","lastModifiedDate":"2021-10-05"},{"lineNumber":49,"author":{"gitId":"ramapriyan912001"},"content":"            .withMembers(IDA, ELLE, AMY)","lastModifiedDate":"2021-10-05"},{"lineNumber":50,"author":{"gitId":"ramapriyan912001"},"content":"            .withTags(\"friends\").build();","lastModifiedDate":"2021-10-05"},{"lineNumber":51,"author":{"gitId":"ramapriyan912001"},"content":"    public static final Group DUBAI \u003d new GroupBuilder().withGroupName(\"Dubai\")","lastModifiedDate":"2021-10-05"},{"lineNumber":52,"author":{"gitId":"ramapriyan912001"},"content":"            .withMembers(FIONA, IDA, GEORGE)","lastModifiedDate":"2021-10-05"},{"lineNumber":53,"author":{"gitId":"ramapriyan912001"},"content":"            .withTags(\"friends\").build();","lastModifiedDate":"2021-10-05"},{"lineNumber":54,"author":{"gitId":"ramapriyan912001"},"content":"    public static final Group DOHA \u003d new GroupBuilder().withGroupName(\"Doha\")","lastModifiedDate":"2021-10-05"},{"lineNumber":55,"author":{"gitId":"ramapriyan912001"},"content":"            .withMembers(FIONA, BENSON, ALICE)","lastModifiedDate":"2021-10-05"},{"lineNumber":56,"author":{"gitId":"ramapriyan912001"},"content":"            .withTags(\"friends\").build();","lastModifiedDate":"2021-10-05"},{"lineNumber":57,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":58,"author":{"gitId":"ramapriyan912001"},"content":"    // Manually added","lastModifiedDate":"2021-10-05"},{"lineNumber":59,"author":{"gitId":"ramapriyan912001"},"content":"    public static final Group LONDON \u003d new GroupBuilder().withGroupName(\"London\")","lastModifiedDate":"2021-10-05"},{"lineNumber":60,"author":{"gitId":"ramapriyan912001"},"content":"            .withMembers(AMY, BENSON, GEORGE)","lastModifiedDate":"2021-10-05"},{"lineNumber":61,"author":{"gitId":"ramapriyan912001"},"content":"            .withTags(\"friends\").build();","lastModifiedDate":"2021-10-05"},{"lineNumber":62,"author":{"gitId":"ramapriyan912001"},"content":"    public static final Group HELSINKI \u003d new GroupBuilder().withGroupName(\"Helsinki\")","lastModifiedDate":"2021-10-05"},{"lineNumber":63,"author":{"gitId":"ramapriyan912001"},"content":"            .withMembers(GEORGE, ELLE, DANIEL)","lastModifiedDate":"2021-10-05"},{"lineNumber":64,"author":{"gitId":"ramapriyan912001"},"content":"            .withTags(\"friends\").build();","lastModifiedDate":"2021-10-05"},{"lineNumber":65,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":66,"author":{"gitId":"ramapriyan912001"},"content":"    // Manually added - Person\u0027s details found in {@code CommandTestUtil}","lastModifiedDate":"2021-10-05"},{"lineNumber":67,"author":{"gitId":"ramapriyan912001"},"content":"    public static final Group PARIS \u003d new GroupBuilder().withGroupName(\"Paris\")","lastModifiedDate":"2021-10-05"},{"lineNumber":68,"author":{"gitId":"ramapriyan912001"},"content":"            .withMembers(HOON, CARL, FIONA)","lastModifiedDate":"2021-10-05"},{"lineNumber":69,"author":{"gitId":"ramapriyan912001"},"content":"            .withTags(\"friends\").build();","lastModifiedDate":"2021-10-05"},{"lineNumber":70,"author":{"gitId":"ramapriyan912001"},"content":"    public static final Group AMSTERDAM \u003d new GroupBuilder().withGroupName(\"Amsterdam\")","lastModifiedDate":"2021-10-05"},{"lineNumber":71,"author":{"gitId":"ramapriyan912001"},"content":"            .withMembers(HOON, IDA, ELLE)","lastModifiedDate":"2021-10-05"},{"lineNumber":72,"author":{"gitId":"ramapriyan912001"},"content":"            .withTags(\"friends\").build();","lastModifiedDate":"2021-10-05"},{"lineNumber":73,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":74,"author":{"gitId":"ramapriyan912001"},"content":"    public static final Group VIENNA_NOT_IN_GROUPS \u003d new GroupBuilder().withGroupName(\"Vienna\")","lastModifiedDate":"2021-10-07"},{"lineNumber":75,"author":{"gitId":"ramapriyan912001"},"content":"            .withMembers(BENSON, IDA, FIONA)","lastModifiedDate":"2021-10-07"},{"lineNumber":76,"author":{"gitId":"ramapriyan912001"},"content":"            .withTags(\"friends\").build();","lastModifiedDate":"2021-10-07"},{"lineNumber":77,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-10-07"},{"lineNumber":78,"author":{"gitId":"ramapriyan912001"},"content":"    public static final Group BALI_WITH_EXPENSES \u003d new GroupBuilder().withGroupName(\"Bali\")","lastModifiedDate":"2021-10-29"},{"lineNumber":79,"author":{"gitId":"ramapriyan912001"},"content":"            .withMembers(ALICE, BOB, AMY)","lastModifiedDate":"2021-10-29"},{"lineNumber":80,"author":{"gitId":"ramapriyan912001"},"content":"            .withExpense(new Expense(HOLIDAY.getPayer(), HOLIDAY.getCost(), HOLIDAY.getDescription(),","lastModifiedDate":"2021-10-29"},{"lineNumber":81,"author":{"gitId":"ramapriyan912001"},"content":"                    BALI.getMembers()))","lastModifiedDate":"2021-10-29"},{"lineNumber":82,"author":{"gitId":"ramapriyan912001"},"content":"            .withExpense(new Expense(SOUVENIRS.getPayer(), SOUVENIRS.getCost(), SOUVENIRS.getDescription(),","lastModifiedDate":"2021-10-29"},{"lineNumber":83,"author":{"gitId":"ramapriyan912001"},"content":"                    BALI.getMembers()))","lastModifiedDate":"2021-10-29"},{"lineNumber":84,"author":{"gitId":"ramapriyan912001"},"content":"            .build();","lastModifiedDate":"2021-10-29"},{"lineNumber":85,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":86,"author":{"gitId":"ramapriyan912001"},"content":"    public static final Group RIO_WITH_EXPENSES_INVALID \u003d new GroupBuilder().withGroupName(\"Rio\")","lastModifiedDate":"2021-10-29"},{"lineNumber":87,"author":{"gitId":"ramapriyan912001"},"content":"            .withMembers(ALICE, BOB, AMY)","lastModifiedDate":"2021-10-29"},{"lineNumber":88,"author":{"gitId":"ramapriyan912001"},"content":"            .withExpenses(HOLIDAY, SOUVENIRS)","lastModifiedDate":"2021-10-29"},{"lineNumber":89,"author":{"gitId":"ramapriyan912001"},"content":"            .build();","lastModifiedDate":"2021-10-29"},{"lineNumber":90,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":91,"author":{"gitId":"ramapriyan912001"},"content":"    public static final List\u003cPayment\u003e BALI_WITH_EXPENSES_PAYMENTS \u003d List.of(","lastModifiedDate":"2021-10-29"},{"lineNumber":92,"author":{"gitId":"ramapriyan912001"},"content":"            new Payment(ALICE, AMY, new Cost(400.00)), new Payment(ALICE, BOB, new Cost(200))","lastModifiedDate":"2021-10-29"},{"lineNumber":93,"author":{"gitId":"ramapriyan912001"},"content":"    );","lastModifiedDate":"2021-10-29"},{"lineNumber":94,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":95,"author":{"gitId":"marcuspeh"},"content":"    public static final List\u003cTransactionSummary\u003e BALI_WITH_TRANSACTION_SUMMARIES \u003d List.of(","lastModifiedDate":"2021-11-01"},{"lineNumber":96,"author":{"gitId":"marcuspeh"},"content":"            new TransactionSummary(ALICE, new Cost(400)),","lastModifiedDate":"2021-11-01"},{"lineNumber":97,"author":{"gitId":"marcuspeh"},"content":"            new TransactionSummary(BOB, new Cost(400)),","lastModifiedDate":"2021-11-01"},{"lineNumber":98,"author":{"gitId":"marcuspeh"},"content":"            new TransactionSummary(AMY, new Cost(400))","lastModifiedDate":"2021-11-01"},{"lineNumber":99,"author":{"gitId":"marcuspeh"},"content":"    );","lastModifiedDate":"2021-11-01"},{"lineNumber":100,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":101,"author":{"gitId":"ramapriyan912001"},"content":"    public static final Expense TEST1 \u003d new Expense(ALICE, new Cost(1000.00), new Description(\"test1\"), List.of(ELLE));","lastModifiedDate":"2021-10-31"},{"lineNumber":102,"author":{"gitId":"ramapriyan912001"},"content":"    public static final Expense TEST2 \u003d new Expense(HOON, new Cost(1000.00), new Description(\"test2\"), List.of(ELLE));","lastModifiedDate":"2021-10-31"},{"lineNumber":103,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":104,"author":{"gitId":"ramapriyan912001"},"content":"    public static final Group MALIBU_WITH_EXPENSES \u003d new GroupBuilder()","lastModifiedDate":"2021-10-31"},{"lineNumber":105,"author":{"gitId":"ramapriyan912001"},"content":"            .withGroupName(MALIBU.getGroupName().getName())","lastModifiedDate":"2021-10-31"},{"lineNumber":106,"author":{"gitId":"ramapriyan912001"},"content":"            .withMembers(ALICE, ELLE, HOON)","lastModifiedDate":"2021-10-31"},{"lineNumber":107,"author":{"gitId":"ramapriyan912001"},"content":"            .withExpenses(TEST1, TEST2)","lastModifiedDate":"2021-10-31"},{"lineNumber":108,"author":{"gitId":"ramapriyan912001"},"content":"            .build();","lastModifiedDate":"2021-10-31"},{"lineNumber":109,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":110,"author":{"gitId":"ramapriyan912001"},"content":"    public static final Expense TEST3 \u003d new Expense(AMY, new Cost(1000.00), new Description(\"test1\"), List.of(HOON));","lastModifiedDate":"2021-10-31"},{"lineNumber":111,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":112,"author":{"gitId":"ramapriyan912001"},"content":"    public static final Group SANTIAGO_WITH_EXPENSES \u003d new GroupBuilder()","lastModifiedDate":"2021-10-31"},{"lineNumber":113,"author":{"gitId":"ramapriyan912001"},"content":"            .withGroupName(\"Santiago\")","lastModifiedDate":"2021-10-31"},{"lineNumber":114,"author":{"gitId":"ramapriyan912001"},"content":"            .withMembers(AMY, HOON)","lastModifiedDate":"2021-10-31"},{"lineNumber":115,"author":{"gitId":"ramapriyan912001"},"content":"            .withExpense(TEST3)","lastModifiedDate":"2021-10-31"},{"lineNumber":116,"author":{"gitId":"ramapriyan912001"},"content":"            .build();","lastModifiedDate":"2021-10-31"},{"lineNumber":117,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":118,"author":{"gitId":"ramapriyan912001"},"content":"    public static final Group AMSTERDAM_WITH_EXPENSES \u003d new GroupBuilder().withGroupName(\"Amsterdam\")","lastModifiedDate":"2021-10-29"},{"lineNumber":119,"author":{"gitId":"ramapriyan912001"},"content":"            .withMembers(HOON, IDA, ELLE)","lastModifiedDate":"2021-10-29"},{"lineNumber":120,"author":{"gitId":"ramapriyan912001"},"content":"            .withExpenses(new Expense(DINNER.getPayer(), DINNER.getCost(), DINNER.getDescription(),","lastModifiedDate":"2021-10-29"},{"lineNumber":121,"author":{"gitId":"ramapriyan912001"},"content":"                    AMSTERDAM.getMembers()))","lastModifiedDate":"2021-10-29"},{"lineNumber":122,"author":{"gitId":"ramapriyan912001"},"content":"            .build();","lastModifiedDate":"2021-10-29"},{"lineNumber":123,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":124,"author":{"gitId":"ramapriyan912001"},"content":"    public static final Group PERU_WITH_EXPENSES_INVALID \u003d new GroupBuilder().withGroupName(\"Peru\")","lastModifiedDate":"2021-10-29"},{"lineNumber":125,"author":{"gitId":"ramapriyan912001"},"content":"            .withMembers(HOON, IDA, ELLE)","lastModifiedDate":"2021-10-29"},{"lineNumber":126,"author":{"gitId":"ramapriyan912001"},"content":"            .withExpenses(DINNER)","lastModifiedDate":"2021-10-29"},{"lineNumber":127,"author":{"gitId":"ramapriyan912001"},"content":"            .build();","lastModifiedDate":"2021-10-29"},{"lineNumber":128,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":129,"author":{"gitId":"ramapriyan912001"},"content":"    public static final List\u003cPayment\u003e AMSTERDAM_WITH_EXPENSES_PAYMENTS \u003d List.of(","lastModifiedDate":"2021-10-29"},{"lineNumber":130,"author":{"gitId":"ramapriyan912001"},"content":"            new Payment(ELLE, HOON, new Cost(166.67)), new Payment(ELLE, IDA, new Cost(166.67))","lastModifiedDate":"2021-10-29"},{"lineNumber":131,"author":{"gitId":"ramapriyan912001"},"content":"    );","lastModifiedDate":"2021-10-29"},{"lineNumber":132,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":133,"author":{"gitId":"ramapriyan912001"},"content":"    public static final Group COLOMBO_WITH_EXPENSES \u003d new GroupBuilder().withGroupName(\"Colombo\")","lastModifiedDate":"2021-10-29"},{"lineNumber":134,"author":{"gitId":"ramapriyan912001"},"content":"            .withMembers(ALICE, BOB, AMY)","lastModifiedDate":"2021-10-29"},{"lineNumber":135,"author":{"gitId":"ramapriyan912001"},"content":"            .withExpenses(HOLIDAY, SOUVENIRS)","lastModifiedDate":"2021-10-29"},{"lineNumber":136,"author":{"gitId":"ramapriyan912001"},"content":"            .build();","lastModifiedDate":"2021-10-29"},{"lineNumber":137,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":138,"author":{"gitId":"ramapriyan912001"},"content":"    public static final Group BUDAPEST_WITH_EXPENSES \u003d new GroupBuilder().withGroupName(\"Budapest\")","lastModifiedDate":"2021-10-29"},{"lineNumber":139,"author":{"gitId":"ramapriyan912001"},"content":"            .withMembers(HOON, IDA, ELLE)","lastModifiedDate":"2021-10-29"},{"lineNumber":140,"author":{"gitId":"ramapriyan912001"},"content":"            .withExpenses(DINNER)","lastModifiedDate":"2021-10-29"},{"lineNumber":141,"author":{"gitId":"ramapriyan912001"},"content":"            .build();","lastModifiedDate":"2021-10-29"},{"lineNumber":142,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":143,"author":{"gitId":"ramapriyan912001"},"content":"    public static final String KEYWORD_MATCHING_MEIER \u003d \"Meier\"; // A keyword that matches MEIER","lastModifiedDate":"2021-10-05"},{"lineNumber":144,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":145,"author":{"gitId":"ramapriyan912001"},"content":"    private TypicalGroups() {} // prevents instantiation","lastModifiedDate":"2021-10-05"},{"lineNumber":146,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":147,"author":{"gitId":"ramapriyan912001"},"content":"    /**","lastModifiedDate":"2021-10-05"},{"lineNumber":148,"author":{"gitId":"ramapriyan912001"},"content":"     * Returns an {@code AddressBook} with all the typical persons and groups.","lastModifiedDate":"2021-10-05"},{"lineNumber":149,"author":{"gitId":"ramapriyan912001"},"content":"     */","lastModifiedDate":"2021-10-05"},{"lineNumber":150,"author":{"gitId":"ramapriyan912001"},"content":"    public static AddressBook getTypicalAddressBook() {","lastModifiedDate":"2021-10-07"},{"lineNumber":151,"author":{"gitId":"ramapriyan912001"},"content":"        AddressBook ab \u003d new AddressBook();","lastModifiedDate":"2021-10-05"},{"lineNumber":152,"author":{"gitId":"ramapriyan912001"},"content":"        for (Person person : getTypicalPersons()) {","lastModifiedDate":"2021-10-05"},{"lineNumber":153,"author":{"gitId":"ramapriyan912001"},"content":"            ab.addPerson(person);","lastModifiedDate":"2021-10-05"},{"lineNumber":154,"author":{"gitId":"ramapriyan912001"},"content":"        }","lastModifiedDate":"2021-10-05"},{"lineNumber":155,"author":{"gitId":"ramapriyan912001"},"content":"        for (Group group : getTypicalGroups()) {","lastModifiedDate":"2021-10-05"},{"lineNumber":156,"author":{"gitId":"ramapriyan912001"},"content":"            ab.addGroup(group);","lastModifiedDate":"2021-10-05"},{"lineNumber":157,"author":{"gitId":"ramapriyan912001"},"content":"        }","lastModifiedDate":"2021-10-05"},{"lineNumber":158,"author":{"gitId":"ramapriyan912001"},"content":"        return ab;","lastModifiedDate":"2021-10-05"},{"lineNumber":159,"author":{"gitId":"ramapriyan912001"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":160,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":161,"author":{"gitId":"ramapriyan912001"},"content":"    public static List\u003cGroup\u003e getTypicalGroups() {","lastModifiedDate":"2021-10-05"},{"lineNumber":162,"author":{"gitId":"marcuspeh"},"content":"        return new ArrayList\u003c\u003e(Arrays.asList(BALI, LONDON, OSLO, HELSINKI, AMSTERDAM, INDIA,","lastModifiedDate":"2021-10-11"},{"lineNumber":163,"author":{"gitId":"ramapriyan912001"},"content":"                DUBAI, PARIS, DOHA, CHINA));","lastModifiedDate":"2021-10-05"},{"lineNumber":164,"author":{"gitId":"ramapriyan912001"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":165,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":166,"author":{"gitId":"ramapriyan912001"},"content":"    public static List\u003cPerson\u003e getTypicalPersons() {","lastModifiedDate":"2021-10-05"},{"lineNumber":167,"author":{"gitId":"ramapriyan912001"},"content":"        return new ArrayList\u003c\u003e(Arrays.asList(ALICE, BENSON, CARL, DANIEL, ELLE, FIONA, GEORGE));","lastModifiedDate":"2021-10-05"},{"lineNumber":168,"author":{"gitId":"ramapriyan912001"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":169,"author":{"gitId":"ramapriyan912001"},"content":"}","lastModifiedDate":"2021-10-05"}],"authorContributionMap":{"marcuspeh":8,"chrus-chong":1,"ramapriyan912001":160}},{"path":"src/test/java/seedu/awe/testutil/TypicalIndexes.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Jingwencloud"},"content":"package seedu.awe.testutil;","lastModifiedDate":"2021-10-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":3,"author":{"gitId":"Jingwencloud"},"content":"import seedu.awe.commons.core.index.Index;","lastModifiedDate":"2021-10-06"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2021-10-06"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * A utility class containing a list of {@code Index} objects to be used in tests.","lastModifiedDate":"2021-10-06"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2021-10-06"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class TypicalIndexes {","lastModifiedDate":"2021-10-06"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    public static final Index INDEX_FIRST_PERSON \u003d Index.fromOneBased(1);","lastModifiedDate":"2021-10-06"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final Index INDEX_SECOND_PERSON \u003d Index.fromOneBased(2);","lastModifiedDate":"2021-10-06"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    public static final Index INDEX_THIRD_PERSON \u003d Index.fromOneBased(3);","lastModifiedDate":"2021-10-06"},{"lineNumber":12,"author":{"gitId":"Jingwencloud"},"content":"    public static final Index INDEX_FIRST_EXPENSE \u003d Index.fromOneBased(1);","lastModifiedDate":"2021-10-28"},{"lineNumber":13,"author":{"gitId":"Jingwencloud"},"content":"    public static final Index INDEX_SECOND_EXPENSE \u003d Index.fromOneBased(2);","lastModifiedDate":"2021-10-28"},{"lineNumber":14,"author":{"gitId":"Jingwencloud"},"content":"    public static final Index INDEX_THIRD_EXPENSE \u003d Index.fromOneBased(3);","lastModifiedDate":"2021-10-28"},{"lineNumber":15,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-10-06"}],"authorContributionMap":{"Jingwencloud":5,"-":10}},{"path":"src/test/java/seedu/awe/testutil/TypicalIndividualAmounts.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"ramapriyan912001"},"content":"package seedu.awe.testutil;","lastModifiedDate":"2021-10-27"},{"lineNumber":2,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":3,"author":{"gitId":"ramapriyan912001"},"content":"import java.util.List;","lastModifiedDate":"2021-10-27"},{"lineNumber":4,"author":{"gitId":"ramapriyan912001"},"content":"import java.util.Map;","lastModifiedDate":"2021-10-27"},{"lineNumber":5,"author":{"gitId":"ramapriyan912001"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2021-10-27"},{"lineNumber":6,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":7,"author":{"gitId":"ramapriyan912001"},"content":"import seedu.awe.model.expense.Cost;","lastModifiedDate":"2021-10-27"},{"lineNumber":8,"author":{"gitId":"ramapriyan912001"},"content":"import seedu.awe.model.expense.IndividualAmount;","lastModifiedDate":"2021-10-27"},{"lineNumber":9,"author":{"gitId":"ramapriyan912001"},"content":"import seedu.awe.model.person.Person;","lastModifiedDate":"2021-10-27"},{"lineNumber":10,"author":{"gitId":"ramapriyan912001"},"content":"import seedu.awe.storage.JsonAdaptedIndividualAmount;","lastModifiedDate":"2021-10-27"},{"lineNumber":11,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":12,"author":{"gitId":"ramapriyan912001"},"content":"public class TypicalIndividualAmounts {","lastModifiedDate":"2021-10-27"},{"lineNumber":13,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":14,"author":{"gitId":"ramapriyan912001"},"content":"    public static final IndividualAmount ALICE_INDIVIDUAL_AMOUNT \u003d new IndividualAmount(TypicalPersons.ALICE, 20.0);","lastModifiedDate":"2021-10-27"},{"lineNumber":15,"author":{"gitId":"ramapriyan912001"},"content":"    public static final IndividualAmount AMY_INDIVIDUAL_AMOUNT \u003d new IndividualAmount(TypicalPersons.AMY, 15.0);","lastModifiedDate":"2021-10-27"},{"lineNumber":16,"author":{"gitId":"ramapriyan912001"},"content":"    public static final IndividualAmount BOB_INDIVIDUAL_AMOUNT \u003d new IndividualAmount(TypicalPersons.BOB, 16.0);","lastModifiedDate":"2021-10-27"},{"lineNumber":17,"author":{"gitId":"ramapriyan912001"},"content":"    public static final IndividualAmount CARL_INDIVIDUAL_AMOUNT \u003d new IndividualAmount(TypicalPersons.CARL, 100.0);","lastModifiedDate":"2021-10-27"},{"lineNumber":18,"author":{"gitId":"ramapriyan912001"},"content":"    public static final IndividualAmount DANIEL_INDIVIDUAL_AMOUNT \u003d","lastModifiedDate":"2021-10-27"},{"lineNumber":19,"author":{"gitId":"ramapriyan912001"},"content":"            new IndividualAmount(TypicalPersons.DANIEL, 999.95);","lastModifiedDate":"2021-10-27"},{"lineNumber":20,"author":{"gitId":"ramapriyan912001"},"content":"    public static final IndividualAmount ELLEL_INDIVIDUAL_AMOUNT \u003d","lastModifiedDate":"2021-10-27"},{"lineNumber":21,"author":{"gitId":"ramapriyan912001"},"content":"            new IndividualAmount(TypicalPersons.ELLE, 17.31);","lastModifiedDate":"2021-10-27"},{"lineNumber":22,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":23,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":24,"author":{"gitId":"ramapriyan912001"},"content":"    public static final List\u003cIndividualAmount\u003e VALID_INDIVIDUAL_AMOUNTS_ABC \u003d List.of(ALICE_INDIVIDUAL_AMOUNT,","lastModifiedDate":"2021-10-27"},{"lineNumber":25,"author":{"gitId":"ramapriyan912001"},"content":"            AMY_INDIVIDUAL_AMOUNT, BOB_INDIVIDUAL_AMOUNT, CARL_INDIVIDUAL_AMOUNT);","lastModifiedDate":"2021-10-27"},{"lineNumber":26,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":27,"author":{"gitId":"ramapriyan912001"},"content":"    public static final List\u003cIndividualAmount\u003e VALID_INDIVIDUAL_AMOUNTS_DE \u003d List.of(DANIEL_INDIVIDUAL_AMOUNT,","lastModifiedDate":"2021-10-27"},{"lineNumber":28,"author":{"gitId":"ramapriyan912001"},"content":"            ELLEL_INDIVIDUAL_AMOUNT);","lastModifiedDate":"2021-10-27"},{"lineNumber":29,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":30,"author":{"gitId":"ramapriyan912001"},"content":"    public static final Map\u003cPerson, Cost\u003e VALID_EXPENSE_MAP_ABC \u003d Map.of(TypicalPersons.ALICE, new Cost(20.0),","lastModifiedDate":"2021-10-27"},{"lineNumber":31,"author":{"gitId":"ramapriyan912001"},"content":"            TypicalPersons.AMY, new Cost(15.0), TypicalPersons.BOB, new Cost(16.0),","lastModifiedDate":"2021-10-27"},{"lineNumber":32,"author":{"gitId":"ramapriyan912001"},"content":"            TypicalPersons.CARL, new Cost(100.0));","lastModifiedDate":"2021-10-27"},{"lineNumber":33,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":34,"author":{"gitId":"ramapriyan912001"},"content":"    public static final Map\u003cPerson, Cost\u003e VALID_EXPENSE_MAP_DE \u003d Map.of(TypicalPersons.DANIEL, new Cost(999.95),","lastModifiedDate":"2021-10-27"},{"lineNumber":35,"author":{"gitId":"ramapriyan912001"},"content":"            TypicalPersons.ELLE, new Cost(17.31));","lastModifiedDate":"2021-10-27"},{"lineNumber":36,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":37,"author":{"gitId":"ramapriyan912001"},"content":"    public static final List\u003cJsonAdaptedIndividualAmount\u003e VALID_JSON_ADAPTED_INDIVIDUAL_AMOUNTS_ABC \u003d","lastModifiedDate":"2021-10-27"},{"lineNumber":38,"author":{"gitId":"ramapriyan912001"},"content":"            VALID_INDIVIDUAL_AMOUNTS_ABC.stream().map(JsonAdaptedIndividualAmount::new).collect(Collectors.toList());","lastModifiedDate":"2021-10-27"},{"lineNumber":39,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":40,"author":{"gitId":"ramapriyan912001"},"content":"    public static final List\u003cJsonAdaptedIndividualAmount\u003e VALID_JSON_ADAPTED_INDIVIDUAL_AMOUNTS_DE \u003d","lastModifiedDate":"2021-10-27"},{"lineNumber":41,"author":{"gitId":"ramapriyan912001"},"content":"            VALID_INDIVIDUAL_AMOUNTS_DE.stream().map(JsonAdaptedIndividualAmount::new).collect(Collectors.toList());","lastModifiedDate":"2021-10-27"},{"lineNumber":42,"author":{"gitId":"ramapriyan912001"},"content":"}","lastModifiedDate":"2021-10-27"}],"authorContributionMap":{"ramapriyan912001":42}},{"path":"src/test/java/seedu/awe/testutil/TypicalPayments.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"ramapriyan912001"},"content":"package seedu.awe.testutil;","lastModifiedDate":"2021-10-27"},{"lineNumber":2,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":3,"author":{"gitId":"ramapriyan912001"},"content":"import java.util.List;","lastModifiedDate":"2021-10-27"},{"lineNumber":4,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":5,"author":{"gitId":"ramapriyan912001"},"content":"import seedu.awe.model.expense.Cost;","lastModifiedDate":"2021-10-27"},{"lineNumber":6,"author":{"gitId":"ramapriyan912001"},"content":"import seedu.awe.model.payment.Payment;","lastModifiedDate":"2021-10-27"},{"lineNumber":7,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":8,"author":{"gitId":"ramapriyan912001"},"content":"public class TypicalPayments {","lastModifiedDate":"2021-10-27"},{"lineNumber":9,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":10,"author":{"gitId":"ramapriyan912001"},"content":"    public static final Cost ALICE_BOB_COST \u003d new Cost(20.10);","lastModifiedDate":"2021-10-27"},{"lineNumber":11,"author":{"gitId":"ramapriyan912001"},"content":"    public static final Cost AMY_ELLE_COST \u003d new Cost(71.34);","lastModifiedDate":"2021-10-27"},{"lineNumber":12,"author":{"gitId":"ramapriyan912001"},"content":"    public static final Cost DANIEL_FIONA_COST \u003d new Cost(65.88);","lastModifiedDate":"2021-10-27"},{"lineNumber":13,"author":{"gitId":"ramapriyan912001"},"content":"    public static final Cost CARL_DANIEL_COST \u003d new Cost(190.59);","lastModifiedDate":"2021-10-27"},{"lineNumber":14,"author":{"gitId":"ramapriyan912001"},"content":"    public static final Cost ALICE_CARL_COST \u003d new Cost(29.08);","lastModifiedDate":"2021-10-27"},{"lineNumber":15,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":16,"author":{"gitId":"ramapriyan912001"},"content":"    public static final Payment ALICE_BOB_PAYMENT \u003d","lastModifiedDate":"2021-10-27"},{"lineNumber":17,"author":{"gitId":"ramapriyan912001"},"content":"            new Payment(TypicalPersons.ALICE, TypicalPersons.BOB, ALICE_BOB_COST);","lastModifiedDate":"2021-10-27"},{"lineNumber":18,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":19,"author":{"gitId":"ramapriyan912001"},"content":"    public static final Payment AMY_ELLE_PAYMENT \u003d","lastModifiedDate":"2021-10-27"},{"lineNumber":20,"author":{"gitId":"ramapriyan912001"},"content":"            new Payment(TypicalPersons.AMY, TypicalPersons.ELLE, AMY_ELLE_COST);","lastModifiedDate":"2021-10-27"},{"lineNumber":21,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":22,"author":{"gitId":"ramapriyan912001"},"content":"    public static final Payment DANIEL_FIONA_PAYMENT \u003d","lastModifiedDate":"2021-10-27"},{"lineNumber":23,"author":{"gitId":"ramapriyan912001"},"content":"            new Payment(TypicalPersons.DANIEL, TypicalPersons.FIONA, DANIEL_FIONA_COST);","lastModifiedDate":"2021-10-27"},{"lineNumber":24,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":25,"author":{"gitId":"ramapriyan912001"},"content":"    public static final Payment CARL_DANIEL_PAYMENT \u003d","lastModifiedDate":"2021-10-27"},{"lineNumber":26,"author":{"gitId":"ramapriyan912001"},"content":"            new Payment(TypicalPersons.CARL, TypicalPersons.DANIEL, CARL_DANIEL_COST);","lastModifiedDate":"2021-10-27"},{"lineNumber":27,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":28,"author":{"gitId":"ramapriyan912001"},"content":"    public static final Payment ALICE_CARL_PAYMENT \u003d","lastModifiedDate":"2021-10-27"},{"lineNumber":29,"author":{"gitId":"ramapriyan912001"},"content":"            new Payment(TypicalPersons.ALICE, TypicalPersons.CARL, ALICE_CARL_COST);","lastModifiedDate":"2021-10-27"},{"lineNumber":30,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":31,"author":{"gitId":"ramapriyan912001"},"content":"    public static final List\u003cPayment\u003e VALID_PAYMENT_LIST \u003d","lastModifiedDate":"2021-10-27"},{"lineNumber":32,"author":{"gitId":"ramapriyan912001"},"content":"            List.of(ALICE_BOB_PAYMENT, ALICE_CARL_PAYMENT, CARL_DANIEL_PAYMENT,","lastModifiedDate":"2021-10-27"},{"lineNumber":33,"author":{"gitId":"ramapriyan912001"},"content":"            DANIEL_FIONA_PAYMENT, AMY_ELLE_PAYMENT);","lastModifiedDate":"2021-10-27"},{"lineNumber":34,"author":{"gitId":"ramapriyan912001"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":35,"author":{"gitId":"ramapriyan912001"},"content":"}","lastModifiedDate":"2021-10-27"}],"authorContributionMap":{"ramapriyan912001":35}},{"path":"src/test/java/seedu/awe/testutil/TypicalPersons.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"ramapriyan912001"},"content":"package seedu.awe.testutil;","lastModifiedDate":"2021-10-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":3,"author":{"gitId":"ramapriyan912001"},"content":"import static seedu.awe.logic.commands.CommandTestUtil.VALID_NAME_AMY;","lastModifiedDate":"2021-10-05"},{"lineNumber":4,"author":{"gitId":"ramapriyan912001"},"content":"import static seedu.awe.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2021-10-05"},{"lineNumber":5,"author":{"gitId":"ramapriyan912001"},"content":"import static seedu.awe.logic.commands.CommandTestUtil.VALID_PHONE_AMY;","lastModifiedDate":"2021-10-05"},{"lineNumber":6,"author":{"gitId":"ramapriyan912001"},"content":"import static seedu.awe.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2021-10-05"},{"lineNumber":7,"author":{"gitId":"ramapriyan912001"},"content":"import static seedu.awe.logic.commands.CommandTestUtil.VALID_TAG_FRIEND;","lastModifiedDate":"2021-10-05"},{"lineNumber":8,"author":{"gitId":"ramapriyan912001"},"content":"import static seedu.awe.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2021-10-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-22"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-08-07"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-08-07"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-08-07"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-07"},{"lineNumber":14,"author":{"gitId":"ramapriyan912001"},"content":"import seedu.awe.model.AddressBook;","lastModifiedDate":"2021-10-05"},{"lineNumber":15,"author":{"gitId":"ramapriyan912001"},"content":"import seedu.awe.model.person.Person;","lastModifiedDate":"2021-10-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * A utility class containing a list of {@code Person} objects to be used in tests.","lastModifiedDate":"2017-08-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class TypicalPersons {","lastModifiedDate":"2017-04-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public static final Person ALICE \u003d new PersonBuilder().withName(\"Alice Pauline\")","lastModifiedDate":"2018-01-10"},{"lineNumber":23,"author":{"gitId":"-"},"content":"            .withPhone(\"94351253\")","lastModifiedDate":"2018-04-19"},{"lineNumber":24,"author":{"gitId":"-"},"content":"            .withTags(\"friends\").build();","lastModifiedDate":"2016-09-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public static final Person BENSON \u003d new PersonBuilder().withName(\"Benson Meier\")","lastModifiedDate":"2018-01-10"},{"lineNumber":26,"author":{"gitId":"marcuspeh"},"content":"            .withPhone(\"98765432\")","lastModifiedDate":"2021-11-01"},{"lineNumber":27,"author":{"gitId":"-"},"content":"            .withTags(\"owesMoney\", \"friends\").build();","lastModifiedDate":"2016-09-13"},{"lineNumber":28,"author":{"gitId":"marcuspeh"},"content":"    public static final Person CARL \u003d new PersonBuilder().withName(\"Carl Kurz\").withPhone(\"95352563\").build();","lastModifiedDate":"2021-11-01"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public static final Person DANIEL \u003d new PersonBuilder().withName(\"Daniel Meier\").withPhone(\"87652533\")","lastModifiedDate":"2018-01-10"},{"lineNumber":30,"author":{"gitId":"marcuspeh"},"content":"            .withTags(\"friends\").build();","lastModifiedDate":"2021-11-01"},{"lineNumber":31,"author":{"gitId":"marcuspeh"},"content":"    public static final Person ELLE \u003d new PersonBuilder().withName(\"Elle Meyer\").withPhone(\"9482224\").build();","lastModifiedDate":"2021-11-01"},{"lineNumber":32,"author":{"gitId":"marcuspeh"},"content":"    public static final Person FIONA \u003d new PersonBuilder().withName(\"Fiona Kunz\").withPhone(\"9482427\").build();","lastModifiedDate":"2021-11-01"},{"lineNumber":33,"author":{"gitId":"marcuspeh"},"content":"    public static final Person GEORGE \u003d new PersonBuilder().withName(\"George Best\").withPhone(\"9482442\").build();","lastModifiedDate":"2021-11-01"},{"lineNumber":34,"author":{"gitId":"chrus-chong"},"content":"    public static final Person NONEXISTENTPERSON \u003d new PersonBuilder().withName(\"Janelle Chua\").withPhone(\"9543442\")","lastModifiedDate":"2021-10-10"},{"lineNumber":35,"author":{"gitId":"marcuspeh"},"content":"            .build();","lastModifiedDate":"2021-11-01"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    // Manually added","lastModifiedDate":"2016-09-13"},{"lineNumber":38,"author":{"gitId":"marcuspeh"},"content":"    public static final Person HOON \u003d new PersonBuilder().withName(\"Hoon Meier\").withPhone(\"8482424\").build();","lastModifiedDate":"2021-11-01"},{"lineNumber":39,"author":{"gitId":"marcuspeh"},"content":"    public static final Person IDA \u003d new PersonBuilder().withName(\"Ida Mueller\").withPhone(\"8482131\").build();","lastModifiedDate":"2021-11-01"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-22"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    // Manually added - Person\u0027s details found in {@code CommandTestUtil}","lastModifiedDate":"2017-08-22"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public static final Person AMY \u003d new PersonBuilder().withName(VALID_NAME_AMY).withPhone(VALID_PHONE_AMY)","lastModifiedDate":"2018-01-10"},{"lineNumber":43,"author":{"gitId":"marcuspeh"},"content":"            .withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2021-11-01"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public static final Person BOB \u003d new PersonBuilder().withName(VALID_NAME_BOB).withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2018-01-10"},{"lineNumber":45,"author":{"gitId":"marcuspeh"},"content":"            .withTags(VALID_TAG_HUSBAND, VALID_TAG_FRIEND).build();","lastModifiedDate":"2021-11-01"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public static final String KEYWORD_MATCHING_MEIER \u003d \"Meier\"; // A keyword that matches MEIER","lastModifiedDate":"2017-09-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    private TypicalPersons() {} // prevents instantiation","lastModifiedDate":"2017-07-20"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-20"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * Returns an {@code AddressBook} with all the typical persons.","lastModifiedDate":"2017-08-05"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public static AddressBook getTypicalAddressBook() {","lastModifiedDate":"2017-08-05"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        AddressBook ab \u003d new AddressBook();","lastModifiedDate":"2017-08-05"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        for (Person person : getTypicalPersons()) {","lastModifiedDate":"2018-01-10"},{"lineNumber":57,"author":{"gitId":"-"},"content":"            ab.addPerson(person);","lastModifiedDate":"2017-08-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        return ab;","lastModifiedDate":"2016-09-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-04"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public static List\u003cPerson\u003e getTypicalPersons() {","lastModifiedDate":"2018-01-10"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        return new ArrayList\u003c\u003e(Arrays.asList(ALICE, BENSON, CARL, DANIEL, ELLE, FIONA, GEORGE));","lastModifiedDate":"2017-08-07"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-08-04"},{"lineNumber":65,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-13"}],"authorContributionMap":{"marcuspeh":11,"chrus-chong":1,"ramapriyan912001":9,"-":44}},{"path":"src/test/java/seedu/awe/testutil/TypicalTransactionSummary.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"marcuspeh"},"content":"package seedu.awe.testutil;","lastModifiedDate":"2021-11-01"},{"lineNumber":2,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":3,"author":{"gitId":"marcuspeh"},"content":"import java.util.List;","lastModifiedDate":"2021-11-01"},{"lineNumber":4,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":5,"author":{"gitId":"marcuspeh"},"content":"import seedu.awe.model.expense.Cost;","lastModifiedDate":"2021-11-01"},{"lineNumber":6,"author":{"gitId":"marcuspeh"},"content":"import seedu.awe.model.transactionsummary.TransactionSummary;","lastModifiedDate":"2021-11-01"},{"lineNumber":7,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":8,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":9,"author":{"gitId":"marcuspeh"},"content":"public class TypicalTransactionSummary {","lastModifiedDate":"2021-11-01"},{"lineNumber":10,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":11,"author":{"gitId":"marcuspeh"},"content":"    public static final Cost ALICE_COST \u003d new Cost(20);","lastModifiedDate":"2021-11-01"},{"lineNumber":12,"author":{"gitId":"marcuspeh"},"content":"    public static final Cost AMY_COST \u003d new Cost(71.34);","lastModifiedDate":"2021-11-01"},{"lineNumber":13,"author":{"gitId":"marcuspeh"},"content":"    public static final Cost DANIEL_COST \u003d new Cost(65.88);","lastModifiedDate":"2021-11-01"},{"lineNumber":14,"author":{"gitId":"marcuspeh"},"content":"    public static final Cost CARL_COST \u003d new Cost(190.59);","lastModifiedDate":"2021-11-01"},{"lineNumber":15,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":16,"author":{"gitId":"marcuspeh"},"content":"    public static final TransactionSummary ALICE_TRANSACTION_SUMMARY \u003d","lastModifiedDate":"2021-11-01"},{"lineNumber":17,"author":{"gitId":"marcuspeh"},"content":"            new TransactionSummary(TypicalPersons.ALICE, ALICE_COST);","lastModifiedDate":"2021-11-01"},{"lineNumber":18,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":19,"author":{"gitId":"marcuspeh"},"content":"    public static final TransactionSummary AMY_TRANSACTION_SUMMARY \u003d","lastModifiedDate":"2021-11-01"},{"lineNumber":20,"author":{"gitId":"marcuspeh"},"content":"            new TransactionSummary(TypicalPersons.AMY, AMY_COST);","lastModifiedDate":"2021-11-01"},{"lineNumber":21,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":22,"author":{"gitId":"marcuspeh"},"content":"    public static final TransactionSummary DANIEL_TRANSACTION_SUMMARY \u003d","lastModifiedDate":"2021-11-01"},{"lineNumber":23,"author":{"gitId":"marcuspeh"},"content":"            new TransactionSummary(TypicalPersons.DANIEL, DANIEL_COST);","lastModifiedDate":"2021-11-01"},{"lineNumber":24,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":25,"author":{"gitId":"marcuspeh"},"content":"    public static final TransactionSummary CARL_TRANSACTION_SUMMARY \u003d","lastModifiedDate":"2021-11-01"},{"lineNumber":26,"author":{"gitId":"marcuspeh"},"content":"            new TransactionSummary(TypicalPersons.CARL, CARL_COST);","lastModifiedDate":"2021-11-01"},{"lineNumber":27,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":28,"author":{"gitId":"marcuspeh"},"content":"    public static final List\u003cTransactionSummary\u003e VALID_TRANSACTION_SUMMARY_LIST \u003d","lastModifiedDate":"2021-11-01"},{"lineNumber":29,"author":{"gitId":"marcuspeh"},"content":"            List.of(ALICE_TRANSACTION_SUMMARY, ALICE_TRANSACTION_SUMMARY, CARL_TRANSACTION_SUMMARY,","lastModifiedDate":"2021-11-01"},{"lineNumber":30,"author":{"gitId":"marcuspeh"},"content":"            DANIEL_TRANSACTION_SUMMARY);","lastModifiedDate":"2021-11-01"},{"lineNumber":31,"author":{"gitId":"marcuspeh"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":32,"author":{"gitId":"marcuspeh"},"content":"}","lastModifiedDate":"2021-11-01"}],"authorContributionMap":{"marcuspeh":32}},{"path":"src/test/java/seedu/awe/ui/TestFxmlObject.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"ramapriyan912001"},"content":"package seedu.awe.ui;","lastModifiedDate":"2021-10-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import javafx.beans.DefaultProperty;","lastModifiedDate":"2016-12-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-12-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * A test object which can be constructed via an FXML file.","lastModifiedDate":"2016-12-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Unlike other JavaFX classes, this class can be constructed without the JavaFX toolkit being initialized.","lastModifiedDate":"2016-12-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-12-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"@DefaultProperty(\"text\")","lastModifiedDate":"2016-12-21"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class TestFxmlObject {","lastModifiedDate":"2016-12-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private String text;","lastModifiedDate":"2016-12-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public TestFxmlObject() {}","lastModifiedDate":"2016-12-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public TestFxmlObject(String text) {","lastModifiedDate":"2016-12-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        setText(text);","lastModifiedDate":"2016-12-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public String getText() {","lastModifiedDate":"2016-12-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        return text;","lastModifiedDate":"2016-12-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void setText(String text) {","lastModifiedDate":"2016-12-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        this.text \u003d text;","lastModifiedDate":"2016-12-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-12-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-04-14"},{"lineNumber":31,"author":{"gitId":"-"},"content":"                || (other instanceof TestFxmlObject // instanceof handles nulls","lastModifiedDate":"2017-04-14"},{"lineNumber":32,"author":{"gitId":"-"},"content":"                        \u0026\u0026 text.equals(((TestFxmlObject) other).getText()));","lastModifiedDate":"2018-08-14"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-21"}],"authorContributionMap":{"ramapriyan912001":1,"-":34}},{"path":"src/test/java/seedu/awe/ui/UiPartTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"ramapriyan912001"},"content":"package seedu.awe.ui;","lastModifiedDate":"2021-10-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"ramapriyan912001"},"content":"import static seedu.awe.testutil.Assert.assertThrows;","lastModifiedDate":"2021-10-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.net.URL;","lastModifiedDate":"2016-12-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2019-04-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-12-21"},{"lineNumber":14,"author":{"gitId":"ramapriyan912001"},"content":"import seedu.awe.MainApp;","lastModifiedDate":"2021-10-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class UiPartTest {","lastModifiedDate":"2016-12-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private static final String MISSING_FILE_PATH \u003d \"UiPartTest/missingFile.fxml\";","lastModifiedDate":"2016-12-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private static final String INVALID_FILE_PATH \u003d \"UiPartTest/invalidFile.fxml\";","lastModifiedDate":"2016-12-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private static final String VALID_FILE_PATH \u003d \"UiPartTest/validFile.fxml\";","lastModifiedDate":"2016-12-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final String VALID_FILE_WITH_FX_ROOT_PATH \u003d \"UiPartTest/validFileWithFxRoot.fxml\";","lastModifiedDate":"2017-11-29"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final TestFxmlObject VALID_FILE_ROOT \u003d new TestFxmlObject(\"Hello World!\");","lastModifiedDate":"2016-12-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public Path testFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public void constructor_nullFileUrl_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new TestUiPart\u003cObject\u003e((URL) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new TestUiPart\u003cObject\u003e((URL) null, new Object()));","lastModifiedDate":"2019-03-14"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public void constructor_missingFileUrl_throwsAssertionError() throws Exception {","lastModifiedDate":"2016-12-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        URL missingFileUrl \u003d new URL(testFolder.toUri().toURL(), MISSING_FILE_PATH);","lastModifiedDate":"2019-04-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertThrows(AssertionError.class, () -\u003e new TestUiPart\u003cObject\u003e(missingFileUrl));","lastModifiedDate":"2019-03-14"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertThrows(AssertionError.class, () -\u003e new TestUiPart\u003cObject\u003e(missingFileUrl, new Object()));","lastModifiedDate":"2019-03-14"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public void constructor_invalidFileUrl_throwsAssertionError() {","lastModifiedDate":"2016-12-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        URL invalidFileUrl \u003d getTestFileUrl(INVALID_FILE_PATH);","lastModifiedDate":"2016-12-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertThrows(AssertionError.class, () -\u003e new TestUiPart\u003cObject\u003e(invalidFileUrl));","lastModifiedDate":"2019-03-14"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertThrows(AssertionError.class, () -\u003e new TestUiPart\u003cObject\u003e(invalidFileUrl, new Object()));","lastModifiedDate":"2019-03-14"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public void constructor_validFileUrl_loadsFile() {","lastModifiedDate":"2016-12-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        URL validFileUrl \u003d getTestFileUrl(VALID_FILE_PATH);","lastModifiedDate":"2016-12-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertEquals(VALID_FILE_ROOT, new TestUiPart\u003cTestFxmlObject\u003e(validFileUrl).getRoot());","lastModifiedDate":"2016-12-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-11-29"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public void constructor_validFileWithFxRootUrl_loadsFile() {","lastModifiedDate":"2017-11-29"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        URL validFileUrl \u003d getTestFileUrl(VALID_FILE_WITH_FX_ROOT_PATH);","lastModifiedDate":"2017-11-29"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        TestFxmlObject root \u003d new TestFxmlObject();","lastModifiedDate":"2017-11-29"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertEquals(VALID_FILE_ROOT, new TestUiPart\u003cTestFxmlObject\u003e(validFileUrl, root).getRoot());","lastModifiedDate":"2017-11-29"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-11-29"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-21"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public void constructor_nullFileName_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new TestUiPart\u003cObject\u003e((String) null));","lastModifiedDate":"2019-03-14"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new TestUiPart\u003cObject\u003e((String) null, new Object()));","lastModifiedDate":"2019-03-14"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-21"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public void constructor_missingFileName_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new TestUiPart\u003cObject\u003e(MISSING_FILE_PATH));","lastModifiedDate":"2019-03-14"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e new TestUiPart\u003cObject\u003e(MISSING_FILE_PATH, new Object()));","lastModifiedDate":"2019-03-14"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-21"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public void constructor_invalidFileName_throwsAssertionError() {","lastModifiedDate":"2016-12-21"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        assertThrows(AssertionError.class, () -\u003e new TestUiPart\u003cObject\u003e(INVALID_FILE_PATH));","lastModifiedDate":"2019-03-14"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        assertThrows(AssertionError.class, () -\u003e new TestUiPart\u003cObject\u003e(INVALID_FILE_PATH, new Object()));","lastModifiedDate":"2019-03-14"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    private URL getTestFileUrl(String testFilePath) {","lastModifiedDate":"2016-12-21"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        String testFilePathInView \u003d \"/view/\" + testFilePath;","lastModifiedDate":"2016-12-21"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        URL testFileUrl \u003d MainApp.class.getResource(testFilePathInView);","lastModifiedDate":"2016-12-21"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assertNotNull(testFileUrl, testFilePathInView + \" does not exist.\");","lastModifiedDate":"2019-03-15"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        return testFileUrl;","lastModifiedDate":"2016-12-21"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-21"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * UiPart used for testing.","lastModifiedDate":"2016-12-21"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     * It should only be used with invalid FXML files or the valid file located at {@link VALID_FILE_PATH}.","lastModifiedDate":"2016-12-21"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-21"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    private static class TestUiPart\u003cT\u003e extends UiPart\u003cT\u003e {","lastModifiedDate":"2016-12-21"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        @FXML","lastModifiedDate":"2016-12-21"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        private TestFxmlObject validFileRoot; // Check that @FXML annotations work","lastModifiedDate":"2016-12-21"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        TestUiPart(URL fxmlFileUrl, T root) {","lastModifiedDate":"2017-11-29"},{"lineNumber":95,"author":{"gitId":"-"},"content":"            super(fxmlFileUrl, root);","lastModifiedDate":"2017-11-29"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-11-29"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        TestUiPart(String fxmlFileName, T root) {","lastModifiedDate":"2017-11-29"},{"lineNumber":99,"author":{"gitId":"-"},"content":"            super(fxmlFileName, root);","lastModifiedDate":"2017-11-29"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-11-29"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        TestUiPart(URL fxmlFileUrl) {","lastModifiedDate":"2016-12-21"},{"lineNumber":103,"author":{"gitId":"-"},"content":"            super(fxmlFileUrl);","lastModifiedDate":"2016-12-21"},{"lineNumber":104,"author":{"gitId":"-"},"content":"            assertEquals(VALID_FILE_ROOT, validFileRoot);","lastModifiedDate":"2016-12-21"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-21"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        TestUiPart(String fxmlFileName) {","lastModifiedDate":"2016-12-21"},{"lineNumber":108,"author":{"gitId":"-"},"content":"            super(fxmlFileName);","lastModifiedDate":"2016-12-21"},{"lineNumber":109,"author":{"gitId":"-"},"content":"            assertEquals(VALID_FILE_ROOT, validFileRoot);","lastModifiedDate":"2016-12-21"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-21"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":114,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-21"}],"authorContributionMap":{"ramapriyan912001":3,"-":111}},{"path":"src/test/resources/view/UiPartTest/validFile.fxml","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-12-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":3,"author":{"gitId":"ramapriyan912001"},"content":"\u003c?import seedu.awe.ui.TestFxmlObject?\u003e","lastModifiedDate":"2021-10-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003cTestFxmlObject xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:id\u003d\"validFileRoot\"\u003eHello World!\u003c/TestFxmlObject\u003e","lastModifiedDate":"2016-12-21"}],"authorContributionMap":{"ramapriyan912001":1,"-":3}},{"path":"src/test/resources/view/UiPartTest/validFileWithFxRoot.fxml","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":3,"author":{"gitId":"ramapriyan912001"},"content":"\u003cfx:root type\u003d\"seedu.awe.ui.TestFxmlObject\" xmlns\u003d\"http://javafx.com/javafx\"","lastModifiedDate":"2021-10-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"         xmlns:fx\u003d\"http://javafx.com/fxml\"\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    \u003ctext\u003eHello World!\u003c/text\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2017-11-29"}],"authorContributionMap":{"ramapriyan912001":1,"-":5}}]
