[{"path":"README.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"david-eom"},"content":"# SociaLite","lastModifiedDate":"2021-10-21"},{"lineNumber":2,"author":{"gitId":"david-eom"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":3,"author":{"gitId":"bnjmnt4n"},"content":"[![CI Status](https://github.com/AY2122S1-CS2103T-F11-4/tp/workflows/Java%20CI/badge.svg)](https://github.com/AY2122S1-CS2103T-F11-4/tp/actions)","lastModifiedDate":"2021-10-01"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"david-eom"},"content":"[![codecov](https://codecov.io/gh/AY2122S1-CS2103T-F11-4/tp/branch/master/graph/badge.svg?token\u003dKPARXU5FYH)](https://codecov.io/gh/AY2122S1-CS2103T-F11-4/tp)","lastModifiedDate":"2021-10-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"![Ui](docs/images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"david-eom"},"content":"**SociaLite** is a project developed for the CS2103T Software Engineering module by [our team](docs/AboutUs.md), based off [AddressBook Level 3](https://github.com/se-edu/addressbook-level3). It is a desktop app for **connecting you with your contacts’ social media pages**, optimized for use via a command line interface (CLI) while still having the benefits of a graphical user interface (GUI). If you can type fast, SociaLite can get you to your contacts’ social media pages faster than traditional GUI apps!","lastModifiedDate":"2021-10-22"},{"lineNumber":10,"author":{"gitId":"david-eom"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":11,"author":{"gitId":"david-eom"},"content":"### Getting Started","lastModifiedDate":"2021-10-22"},{"lineNumber":12,"author":{"gitId":"david-eom"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":13,"author":{"gitId":"david-eom"},"content":"* If you are interested in using SociaLite, check out the [**User Guide**](https://github.com/AY2122S1-CS2103T-F11-4/tp/blob/master/docs/UserGuide.md).","lastModifiedDate":"2021-10-22"},{"lineNumber":14,"author":{"gitId":"david-eom"},"content":"* If you are interested about developing SociaLite, check out the [**Developer Guide**](https://github.com/AY2122S1-CS2103T-F11-4/tp/blob/master/docs/DeveloperGuide.md).","lastModifiedDate":"2021-10-22"}],"authorContributionMap":{"bnjmnt4n":1,"david-eom":9,"-":4}},{"path":"build.gradle","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2016-08-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2017-12-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2017-12-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00274.0.4\u0027","lastModifiedDate":"2019-02-28"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2016-12-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    id \u0027jacoco\u0027","lastModifiedDate":"2020-08-07"},{"lineNumber":7,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-29"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-29"},{"lineNumber":9,"author":{"gitId":"david-eom"},"content":"mainClassName \u003d \u0027socialite.Main\u0027","lastModifiedDate":"2021-10-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"sourceCompatibility \u003d JavaVersion.VERSION_11","lastModifiedDate":"2019-02-20"},{"lineNumber":12,"author":{"gitId":"-"},"content":"targetCompatibility \u003d JavaVersion.VERSION_11","lastModifiedDate":"2019-02-20"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    maven { url \u0027https://oss.sonatype.org/content/repositories/snapshots/\u0027 }","lastModifiedDate":"2018-04-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"checkstyle {","lastModifiedDate":"2016-10-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u00278.29\u0027","lastModifiedDate":"2020-05-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-10-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":23,"author":{"gitId":"david-eom"},"content":"run {","lastModifiedDate":"2021-10-25"},{"lineNumber":24,"author":{"gitId":"david-eom"},"content":"    enableAssertions \u003d true","lastModifiedDate":"2021-10-25"},{"lineNumber":25,"author":{"gitId":"david-eom"},"content":"}","lastModifiedDate":"2021-10-25"},{"lineNumber":26,"author":{"gitId":"david-eom"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2018-03-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2018-03-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    finalizedBy jacocoTestReport","lastModifiedDate":"2020-08-07"},{"lineNumber":30,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-08-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-08-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"task coverage(type: JacocoReport) {","lastModifiedDate":"2020-08-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    sourceDirectories.from files(sourceSets.main.allSource.srcDirs)","lastModifiedDate":"2020-08-07"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    classDirectories.from files(sourceSets.main.output)","lastModifiedDate":"2020-08-07"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    executionData.from files(jacocoTestReport.executionData)","lastModifiedDate":"2020-08-07"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    afterEvaluate {","lastModifiedDate":"2020-08-07"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        classDirectories.from files(classDirectories.files.collect {","lastModifiedDate":"2020-08-07"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            fileTree(dir: it, exclude: [\u0027**/*.jar\u0027])","lastModifiedDate":"2020-08-07"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        })","lastModifiedDate":"2020-08-07"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-08-07"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    reports {","lastModifiedDate":"2020-08-07"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        html.enabled \u003d true","lastModifiedDate":"2020-08-07"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        xml.enabled \u003d true","lastModifiedDate":"2020-08-07"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-08-07"},{"lineNumber":45,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-03-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    String jUnitVersion \u003d \u00275.4.0\u0027","lastModifiedDate":"2019-02-10"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    String javaFxVersion \u003d \u002711\u0027","lastModifiedDate":"2019-02-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-05"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    implementation group: \u0027com.fasterxml.jackson.core\u0027, name: \u0027jackson-databind\u0027, version: \u00272.7.0\u0027","lastModifiedDate":"2018-03-29"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    implementation group: \u0027com.fasterxml.jackson.datatype\u0027, name: \u0027jackson-datatype-jsr310\u0027, version: \u00272.7.4\u0027","lastModifiedDate":"2018-03-29"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-05"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: jUnitVersion","lastModifiedDate":"2018-03-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: jUnitVersion","lastModifiedDate":"2018-03-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-29"},{"lineNumber":72,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2016-08-29"},{"lineNumber":73,"author":{"gitId":"david-eom"},"content":"    archiveName \u003d \u0027socialite.jar\u0027","lastModifiedDate":"2021-10-25"},{"lineNumber":74,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-29"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"defaultTasks \u0027clean\u0027, \u0027test\u0027","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"david-eom":6,"-":70}},{"path":"docs/AboutUs.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: About Us","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"david-eom"},"content":"## Meet our team!","lastModifiedDate":"2021-09-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"david-eom"},"content":"**SociaLite** is a project built for CS2103T Software Engineering.","lastModifiedDate":"2021-09-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-06-17"},{"lineNumber":10,"author":{"gitId":"david-eom"},"content":"We are a team based in the [School of Computing](https://www.comp.nus.edu.sg/), National University of Singapore.","lastModifiedDate":"2021-09-30"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"david-eom"},"content":"### Yan Xiaozhi (David) [\u003cimg src\u003d\"images/github-icon.png\" width\u003d\"40px\"\u003e](https://github.com/david-eom)","lastModifiedDate":"2021-09-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"bnjmnt4n"},"content":"\u003cimg src\u003d\"images/david-eom.png\" width\u003d\"250px\"\u003e","lastModifiedDate":"2021-10-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"* Role: Team Lead","lastModifiedDate":"2021-09-30"},{"lineNumber":17,"author":{"gitId":"david-eom"},"content":"* [Email](mailto:yan_xiaozhi@u.nus.edu)","lastModifiedDate":"2021-09-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"david-eom"},"content":"### Stanley Tan Wen Sheng [\u003cimg src\u003d\"images/github-icon.png\" width\u003d\"40px\"\u003e](https://github.com/stanley-1)","lastModifiedDate":"2021-09-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"bnjmnt4n"},"content":"\u003cimg src\u003d\"images/stanley-1.png\" width\u003d\"250px\"\u003e","lastModifiedDate":"2021-10-29"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":23,"author":{"gitId":"david-eom"},"content":"* Role: Code Quality \u0026 Documentation","lastModifiedDate":"2021-09-30"},{"lineNumber":24,"author":{"gitId":"david-eom"},"content":"* [Email](mailto:stanley.tan@u.nus.edu)","lastModifiedDate":"2021-09-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"david-eom"},"content":"### Zachary Chua Yan Ern [\u003cimg src\u003d\"images/github-icon.png\" width\u003d\"40px\"\u003e](https://github.com/Zacchua)","lastModifiedDate":"2021-09-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"bnjmnt4n"},"content":"\u003cimg src\u003d\"images/zacchua.png\" width\u003d\"250px\"\u003e","lastModifiedDate":"2021-10-29"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":30,"author":{"gitId":"david-eom"},"content":"* Role: Integration \u0026 Code Quality","lastModifiedDate":"2021-09-30"},{"lineNumber":31,"author":{"gitId":"david-eom"},"content":"* [Email](mailto:e0543984@u.nus.edu)","lastModifiedDate":"2021-09-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"david-eom"},"content":"### Tan Siong Min, Benjamin [\u003cimg src\u003d\"images/github-icon.png\" width\u003d\"40px\"\u003e](https://github.com/bnjmnt4n)","lastModifiedDate":"2021-09-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"bnjmnt4n"},"content":"\u003cimg src\u003d\"images/bnjmnt4n.png\" width\u003d\"250px\"\u003e","lastModifiedDate":"2021-10-29"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":37,"author":{"gitId":"david-eom"},"content":"* Role: Testing \u0026 Integration","lastModifiedDate":"2021-09-23"},{"lineNumber":38,"author":{"gitId":"david-eom"},"content":"* [Email](mailto:benjamint@u.nus.edu)","lastModifiedDate":"2021-09-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"david-eom"},"content":"### Tang Swen Yi [\u003cimg src\u003d\"images/github-icon.png\" width\u003d\"40px\"\u003e](https://github.com/EssWhyy)","lastModifiedDate":"2021-09-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"bnjmnt4n"},"content":"\u003cimg src\u003d\"images/esswhyy.png\" width\u003d\"250px\"\u003e","lastModifiedDate":"2021-10-29"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":44,"author":{"gitId":"david-eom"},"content":"* Role: Testing \u0026 Documentation","lastModifiedDate":"2021-09-30"},{"lineNumber":45,"author":{"gitId":"david-eom"},"content":"* [Email](mailto:e0532612@u.nus.edu)","lastModifiedDate":"2021-09-23"}],"authorContributionMap":{"bnjmnt4n":5,"david-eom":17,"-":23}},{"path":"docs/DeveloperGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: Developer Guide","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"stanley-1"},"content":"1. [Acknowledgements](#acknowledgements)","lastModifiedDate":"2021-09-24"},{"lineNumber":8,"author":{"gitId":"stanley-1"},"content":"2. [Setting Up, Getting Started](#setting-up-getting-started)","lastModifiedDate":"2021-09-27"},{"lineNumber":9,"author":{"gitId":"stanley-1"},"content":"3. [Design](#design)","lastModifiedDate":"2021-09-24"},{"lineNumber":10,"author":{"gitId":"stanley-1"},"content":"    1. [Architecture](#architecture)","lastModifiedDate":"2021-09-24"},{"lineNumber":11,"author":{"gitId":"stanley-1"},"content":"    2. [UI Component](#ui)","lastModifiedDate":"2021-09-24"},{"lineNumber":12,"author":{"gitId":"stanley-1"},"content":"    3. [Logic Component](#logic)","lastModifiedDate":"2021-09-24"},{"lineNumber":13,"author":{"gitId":"stanley-1"},"content":"    4. [Model Component](#model)","lastModifiedDate":"2021-09-24"},{"lineNumber":14,"author":{"gitId":"stanley-1"},"content":"    5. [Storage Component](#storage)","lastModifiedDate":"2021-09-24"},{"lineNumber":15,"author":{"gitId":"stanley-1"},"content":"    6. [Common Classes](#common)","lastModifiedDate":"2021-09-24"},{"lineNumber":16,"author":{"gitId":"stanley-1"},"content":"4. [Implementation](#implementation)","lastModifiedDate":"2021-09-24"},{"lineNumber":17,"author":{"gitId":"stanley-1"},"content":"5. [Documentation](#docs)","lastModifiedDate":"2021-09-24"},{"lineNumber":18,"author":{"gitId":"stanley-1"},"content":"6. [Appendix: Requirements](#requirements)","lastModifiedDate":"2021-09-24"},{"lineNumber":19,"author":{"gitId":"stanley-1"},"content":"    1. [Product Scope](#scope)","lastModifiedDate":"2021-09-24"},{"lineNumber":20,"author":{"gitId":"stanley-1"},"content":"    2. [User Stories](#user-stories)","lastModifiedDate":"2021-09-24"},{"lineNumber":21,"author":{"gitId":"stanley-1"},"content":"    3. [Use Cases](#use-cases)","lastModifiedDate":"2021-09-24"},{"lineNumber":22,"author":{"gitId":"stanley-1"},"content":"    4. [Non-Functional Requirements](#nfr)","lastModifiedDate":"2021-09-24"},{"lineNumber":23,"author":{"gitId":"stanley-1"},"content":"    5. [Glossary](#glossary)","lastModifiedDate":"2021-09-24"},{"lineNumber":24,"author":{"gitId":"stanley-1"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":28,"author":{"gitId":"stanley-1"},"content":"## **Acknowledgements** \u003ca name\u003d\"acknowledgements\"\u003e\u003c/a\u003e","lastModifiedDate":"2021-09-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":30,"author":{"gitId":"-"},"content":"* {list here sources of all reused/adapted ideas, code, documentation, and third-party libraries -- include links to the original source as well}","lastModifiedDate":"2021-07-30"},{"lineNumber":31,"author":{"gitId":"stanley-1"},"content":"* Adapted from [_SE-Education_](https://se-education.org/addressbook-level3/DeveloperGuide.html) \u0027s original *AddressBook*","lastModifiedDate":"2021-09-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":33,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-07-30"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"stanley-1"},"content":"## **Setting Up, Getting Started** \u003ca name\u003d\"setting-up-getting-started\"\u003e\u003c/a\u003e","lastModifiedDate":"2021-09-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"stanley-1"},"content":"Refer to the guide [_Setting Up and Getting Started_](SettingUp.md).","lastModifiedDate":"2021-09-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"stanley-1"},"content":"## **Design** \u003ca name\u003d\"design\"\u003e\u003c/a\u003e","lastModifiedDate":"2021-09-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":44,"author":{"gitId":"david-eom"},"content":":bulb: **Tip:** The `.puml` files used to create diagrams in this document can be found in the [diagrams](https://github.com/AY2122S1-CS2103T-F11-4/tp/tree/master/docs/diagrams) folder. Refer to the [_PlantUML Tutorial_ at se-edu/guides](https://se-education.org/guides/tutorials/plantUml.html) to learn how to create and edit diagrams.","lastModifiedDate":"2021-10-21"},{"lineNumber":45,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"stanley-1"},"content":"### Architecture \u003ca name\u003d\"architecture\"\u003e\u003c/a\u003e","lastModifiedDate":"2021-09-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ArchitectureDiagram.png\" width\u003d\"280\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"The ***Architecture Diagram*** given above explains the high-level design of the App.","lastModifiedDate":"2021-07-31"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"Given below is a quick overview of main components and how they interact with each other.","lastModifiedDate":"2021-07-31"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":55,"author":{"gitId":"-"},"content":"**Main components of the architecture**","lastModifiedDate":"2021-07-31"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"david-eom"},"content":"**`Main`** has two classes called [`Main`](https://github.com/AY2122S1-CS2103T-F11-4/tp/blob/master/src/main/java/socialite/Main.java) and [`MainApp`](https://github.com/AY2122S1-CS2103T-F11-4/tp/blob/master/src/main/java/socialite/MainApp.java). It is responsible for,","lastModifiedDate":"2021-10-21"},{"lineNumber":58,"author":{"gitId":"david-eom"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":59,"author":{"gitId":"david-eom"},"content":"* At app launch: Initializes the components in the correct sequence, and connects them with each other.","lastModifiedDate":"2021-10-22"},{"lineNumber":60,"author":{"gitId":"-"},"content":"* At shut down: Shuts down the components and invokes cleanup methods where necessary.","lastModifiedDate":"2020-05-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"[**`Commons`**](#common-classes) represents a collection of classes used by multiple other components.","lastModifiedDate":"2020-05-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"The rest of the App consists of four components.","lastModifiedDate":"2020-05-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"* [**`UI`**](#ui-component): The UI of the App.","lastModifiedDate":"2020-05-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"* [**`Logic`**](#logic-component): The command executor.","lastModifiedDate":"2020-05-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"* [**`Model`**](#model-component): Holds the data of the App in memory.","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"* [**`Storage`**](#storage-component): Reads data from, and writes data to, the hard disk.","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"**How the architecture components interact with each other**","lastModifiedDate":"2020-05-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"The *Sequence Diagram* below shows how the components interact with each other for the scenario where the user issues the command `delete 1`.","lastModifiedDate":"2020-05-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ArchitectureSequenceDiagram.png\" width\u003d\"574\" /\u003e","lastModifiedDate":"2020-06-07"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"Each of the four main components (also shown in the diagram above),","lastModifiedDate":"2021-07-31"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":80,"author":{"gitId":"-"},"content":"* defines its *API* in an `interface` with the same name as the Component.","lastModifiedDate":"2021-07-31"},{"lineNumber":81,"author":{"gitId":"-"},"content":"* implements its functionality using a concrete `{Component Name}Manager` class (which follows the corresponding API `interface` mentioned in the previous point.","lastModifiedDate":"2021-07-31"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":83,"author":{"gitId":"-"},"content":"For example, the `Logic` component defines its API in the `Logic.java` interface and implements its functionality using the `LogicManager.java` class which follows the `Logic` interface. Other components interact with a given component through its interface rather than the concrete class (reason: to prevent outside component\u0027s being coupled to the implementation of a component), as illustrated in the (partial) class diagram below.","lastModifiedDate":"2021-07-31"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":85,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ComponentManagers.png\" width\u003d\"300\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":87,"author":{"gitId":"-"},"content":"The sections below give more details of each component.","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"stanley-1"},"content":"### UI component \u003ca name\u003d\"ui\"\u003e\u003c/a\u003e","lastModifiedDate":"2021-09-24"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"david-eom"},"content":"The **API** of this component is specified in [`Ui.java`](https://github.com/AY2122S1-CS2103T-F11-4/tp/blob/master/src/main/java/seedu/address/ui/Ui.java)","lastModifiedDate":"2021-10-21"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"![Structure of the UI Component](images/UiClassDiagram.png)","lastModifiedDate":"2021-07-31"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"The UI consists of a `MainWindow` that is made up of parts e.g.`CommandBox`, `ResultDisplay`, `PersonListPanel`, `StatusBarFooter` etc. All these, including the `MainWindow`, inherit from the abstract `UiPart` class which captures the commonalities between classes that represent parts of the visible GUI.","lastModifiedDate":"2021-07-31"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":97,"author":{"gitId":"david-eom"},"content":"The `UI` component uses the JavaFx UI framework. The layout of these UI parts are defined in matching `.fxml` files that are in the `src/main/resources/view` folder. For example, the layout of the [`MainWindow`](https://github.com/AY2122S1-CS2103T-F11-4/tp/blob/master/src/main/java/socialite/ui/MainWindow.java) is specified in [`MainWindow.fxml`](https://github.com/AY2122S1-CS2103T-F11-4/tp/blob/master/src/main/resources/view/MainWindow.fxml)","lastModifiedDate":"2021-10-22"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"The `UI` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"* executes user commands using the `Logic` component.","lastModifiedDate":"2021-07-31"},{"lineNumber":102,"author":{"gitId":"-"},"content":"* listens for changes to `Model` data so that the UI can be updated with the modified data.","lastModifiedDate":"2021-07-31"},{"lineNumber":103,"author":{"gitId":"-"},"content":"* keeps a reference to the `Logic` component, because the `UI` relies on the `Logic` to execute commands.","lastModifiedDate":"2021-07-31"},{"lineNumber":104,"author":{"gitId":"-"},"content":"* depends on some classes in the `Model` component, as it displays `Person` object residing in the `Model`.","lastModifiedDate":"2021-07-31"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"stanley-1"},"content":"### Logic component \u003ca name\u003d\"logic\"\u003e\u003c/a\u003e","lastModifiedDate":"2021-09-24"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"david-eom"},"content":"**API** : [`Logic.java`](https://github.com/AY2122S1-CS2103T-F11-4/tp/blob/master/src/main/java/seedu/address/logic/Logic.java)","lastModifiedDate":"2021-10-21"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"Here\u0027s a (partial) class diagram of the `Logic` component:","lastModifiedDate":"2021-07-31"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/LogicClassDiagram.png\" width\u003d\"550\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":114,"author":{"gitId":"-"},"content":"How the `Logic` component works:","lastModifiedDate":"2021-07-31"},{"lineNumber":115,"author":{"gitId":"-"},"content":"1. When `Logic` is called upon to execute a command, it uses the `AddressBookParser` class to parse the user command.","lastModifiedDate":"2021-07-31"},{"lineNumber":116,"author":{"gitId":"-"},"content":"1. This results in a `Command` object (more precisely, an object of one of its subclasses e.g., `AddCommand`) which is executed by the `LogicManager`.","lastModifiedDate":"2021-07-31"},{"lineNumber":117,"author":{"gitId":"-"},"content":"1. The command can communicate with the `Model` when it is executed (e.g. to add a person).","lastModifiedDate":"2021-07-31"},{"lineNumber":118,"author":{"gitId":"-"},"content":"1. The result of the command execution is encapsulated as a `CommandResult` object which is returned back from `Logic`.","lastModifiedDate":"2021-07-31"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":120,"author":{"gitId":"-"},"content":"The Sequence Diagram below illustrates the interactions within the `Logic` component for the `execute(\"delete 1\")` API call.","lastModifiedDate":"2021-07-31"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"![Interactions Inside the Logic Component for the `delete 1` Command](images/DeleteSequenceDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The lifeline for `DeleteCommandParser` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2020-05-23"},{"lineNumber":125,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":127,"author":{"gitId":"-"},"content":"Here are the other classes in `Logic` (omitted from the class diagram above) that are used for parsing a user command:","lastModifiedDate":"2021-07-31"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":129,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ParserClasses.png\" width\u003d\"600\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":131,"author":{"gitId":"-"},"content":"How the parsing works:","lastModifiedDate":"2021-07-31"},{"lineNumber":132,"author":{"gitId":"-"},"content":"* When called upon to parse a user command, the `AddressBookParser` class creates an `XYZCommandParser` (`XYZ` is a placeholder for the specific command name e.g., `AddCommandParser`) which uses the other classes shown above to parse the user command and create a `XYZCommand` object (e.g., `AddCommand`) which the `AddressBookParser` returns back as a `Command` object.","lastModifiedDate":"2021-07-31"},{"lineNumber":133,"author":{"gitId":"-"},"content":"* All `XYZCommandParser` classes (e.g., `AddCommandParser`, `DeleteCommandParser`, ...) inherit from the `Parser` interface so that they can be treated similarly where possible e.g, during testing.","lastModifiedDate":"2021-07-31"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":135,"author":{"gitId":"stanley-1"},"content":"### Model component \u003ca name\u003d\"model\"\u003e\u003c/a\u003e","lastModifiedDate":"2021-09-24"},{"lineNumber":136,"author":{"gitId":"david-eom"},"content":"**API** : [`Model.java`](https://github.com/AY2122S1-CS2103T-F11-4/tp/blob/master/src/main/java/socialite/model/Model.java)","lastModifiedDate":"2021-10-21"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ModelClassDiagram.png\" width\u003d\"450\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":141,"author":{"gitId":"-"},"content":"The `Model` component,","lastModifiedDate":"2021-07-31"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":143,"author":{"gitId":"-"},"content":"* stores the address book data i.e., all `Person` objects (which are contained in a `UniquePersonList` object).","lastModifiedDate":"2021-07-31"},{"lineNumber":144,"author":{"gitId":"-"},"content":"* stores the currently \u0027selected\u0027 `Person` objects (e.g., results of a search query) as a separate _filtered_ list which is exposed to outsiders as an unmodifiable `ObservableList\u003cPerson\u003e` that can be \u0027observed\u0027 e.g. the UI can be bound to this list so that the UI automatically updates when the data in the list change.","lastModifiedDate":"2021-07-31"},{"lineNumber":145,"author":{"gitId":"-"},"content":"* stores a `UserPref` object that represents the user’s preferences. This is exposed to the outside as a `ReadOnlyUserPref` objects.","lastModifiedDate":"2021-07-31"},{"lineNumber":146,"author":{"gitId":"-"},"content":"* does not depend on any of the other three components (as the `Model` represents data entities of the domain, they should make sense on their own without depending on other components)","lastModifiedDate":"2021-07-31"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":148,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** An alternative (arguably, a more OOP) model is given below. It has a `Tag` list in the `AddressBook`, which `Person` references. This allows `AddressBook` to only require one `Tag` object per unique tag, instead of each `Person` needing their own `Tag` objects.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":150,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/BetterModelClassDiagram.png\" width\u003d\"450\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"stanley-1"},"content":"### Storage component \u003ca name\u003d\"storage\"\u003e\u003c/a\u003e","lastModifiedDate":"2021-09-24"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":157,"author":{"gitId":"david-eom"},"content":"**API** : [`Storage.java`](https://github.com/AY2122S1-CS2103T-F11-4/tp/blob/master/src/main/java/socialite/storage/Storage.java)","lastModifiedDate":"2021-10-21"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":159,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/StorageClassDiagram.png\" width\u003d\"550\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":161,"author":{"gitId":"-"},"content":"The `Storage` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":162,"author":{"gitId":"david-eom"},"content":"* can save address book data, user preference data and command history data in json format, and read them back into corresponding objects.","lastModifiedDate":"2021-10-22"},{"lineNumber":163,"author":{"gitId":"david-eom"},"content":"* inherits from `AddressBookStorage`, `UserPrefStorage` and `CommandHistoryStorage` which means it can be treated as any one (if the functionality of only one is needed).","lastModifiedDate":"2021-10-22"},{"lineNumber":164,"author":{"gitId":"-"},"content":"* depends on some classes in the `Model` component (because the `Storage` component\u0027s job is to save/retrieve objects that belong to the `Model`)","lastModifiedDate":"2021-07-21"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":166,"author":{"gitId":"stanley-1"},"content":"### Common classes \u003ca name\u003d\"common\"\u003e\u003c/a\u003e","lastModifiedDate":"2021-09-24"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":168,"author":{"gitId":"david-eom"},"content":"Classes used by multiple components are in the `socialite.commons` package.","lastModifiedDate":"2021-10-21"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":170,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":172,"author":{"gitId":"stanley-1"},"content":"## **Implementation** \u003ca name\u003d\"implementation\"\u003e\u003c/a\u003e","lastModifiedDate":"2021-09-24"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":174,"author":{"gitId":"-"},"content":"This section describes some noteworthy details on how certain features are implemented.","lastModifiedDate":"2020-05-23"},{"lineNumber":175,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":176,"author":{"gitId":"-"},"content":"### \\[Proposed\\] Undo/redo feature","lastModifiedDate":"2020-06-07"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":178,"author":{"gitId":"-"},"content":"#### Proposed Implementation","lastModifiedDate":"2020-05-23"},{"lineNumber":179,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":180,"author":{"gitId":"-"},"content":"The proposed undo/redo mechanism is facilitated by `VersionedAddressBook`. It extends `AddressBook` with an undo/redo history, stored internally as an `addressBookStateList` and `currentStatePointer`. Additionally, it implements the following operations:","lastModifiedDate":"2020-05-23"},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":182,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#commit()` — Saves the current address book state in its history.","lastModifiedDate":"2020-05-23"},{"lineNumber":183,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#undo()` — Restores the previous address book state from its history.","lastModifiedDate":"2020-05-23"},{"lineNumber":184,"author":{"gitId":"-"},"content":"* `VersionedAddressBook#redo()` — Restores a previously undone address book state from its history.","lastModifiedDate":"2020-05-23"},{"lineNumber":185,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":186,"author":{"gitId":"-"},"content":"These operations are exposed in the `Model` interface as `Model#commitAddressBook()`, `Model#undoAddressBook()` and `Model#redoAddressBook()` respectively.","lastModifiedDate":"2020-05-23"},{"lineNumber":187,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":188,"author":{"gitId":"-"},"content":"Given below is an example usage scenario and how the undo/redo mechanism behaves at each step.","lastModifiedDate":"2020-05-23"},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":190,"author":{"gitId":"-"},"content":"Step 1. The user launches the application for the first time. The `VersionedAddressBook` will be initialized with the initial address book state, and the `currentStatePointer` pointing to that single address book state.","lastModifiedDate":"2020-05-23"},{"lineNumber":191,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":192,"author":{"gitId":"-"},"content":"![UndoRedoState0](images/UndoRedoState0.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":193,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":194,"author":{"gitId":"-"},"content":"Step 2. The user executes `delete 5` command to delete the 5th person in the address book. The `delete` command calls `Model#commitAddressBook()`, causing the modified state of the address book after the `delete 5` command executes to be saved in the `addressBookStateList`, and the `currentStatePointer` is shifted to the newly inserted address book state.","lastModifiedDate":"2020-05-23"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":196,"author":{"gitId":"-"},"content":"![UndoRedoState1](images/UndoRedoState1.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":197,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":198,"author":{"gitId":"-"},"content":"Step 3. The user executes `add n/David …​` to add a new person. The `add` command also calls `Model#commitAddressBook()`, causing another modified address book state to be saved into the `addressBookStateList`.","lastModifiedDate":"2020-05-23"},{"lineNumber":199,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":200,"author":{"gitId":"-"},"content":"![UndoRedoState2](images/UndoRedoState2.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":201,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":202,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If a command fails its execution, it will not call `Model#commitAddressBook()`, so the address book state will not be saved into the `addressBookStateList`.","lastModifiedDate":"2020-05-23"},{"lineNumber":203,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":204,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":205,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":206,"author":{"gitId":"-"},"content":"Step 4. The user now decides that adding the person was a mistake, and decides to undo that action by executing the `undo` command. The `undo` command will call `Model#undoAddressBook()`, which will shift the `currentStatePointer` once to the left, pointing it to the previous address book state, and restores the address book to that state.","lastModifiedDate":"2020-05-23"},{"lineNumber":207,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":208,"author":{"gitId":"-"},"content":"![UndoRedoState3](images/UndoRedoState3.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":209,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":210,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If the `currentStatePointer` is at index 0, pointing to the initial AddressBook state, then there are no previous AddressBook states to restore. The `undo` command uses `Model#canUndoAddressBook()` to check if this is the case. If so, it will return an error to the user rather","lastModifiedDate":"2020-05-23"},{"lineNumber":211,"author":{"gitId":"-"},"content":"than attempting to perform the undo.","lastModifiedDate":"2020-05-23"},{"lineNumber":212,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":213,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":214,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":215,"author":{"gitId":"-"},"content":"The following sequence diagram shows how the undo operation works:","lastModifiedDate":"2020-05-23"},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":217,"author":{"gitId":"-"},"content":"![UndoSequenceDiagram](images/UndoSequenceDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":218,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":219,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The lifeline for `UndoCommand` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2020-05-23"},{"lineNumber":220,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":221,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":222,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":223,"author":{"gitId":"-"},"content":"The `redo` command does the opposite — it calls `Model#redoAddressBook()`, which shifts the `currentStatePointer` once to the right, pointing to the previously undone state, and restores the address book to that state.","lastModifiedDate":"2020-05-23"},{"lineNumber":224,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":225,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** If the `currentStatePointer` is at index `addressBookStateList.size() - 1`, pointing to the latest address book state, then there are no undone AddressBook states to restore. The `redo` command uses `Model#canRedoAddressBook()` to check if this is the case. If so, it will return an error to the user rather than attempting to perform the redo.","lastModifiedDate":"2020-05-23"},{"lineNumber":226,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":227,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":228,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":229,"author":{"gitId":"-"},"content":"Step 5. The user then decides to execute the command `list`. Commands that do not modify the address book, such as `list`, will usually not call `Model#commitAddressBook()`, `Model#undoAddressBook()` or `Model#redoAddressBook()`. Thus, the `addressBookStateList` remains unchanged.","lastModifiedDate":"2020-05-23"},{"lineNumber":230,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":231,"author":{"gitId":"-"},"content":"![UndoRedoState4](images/UndoRedoState4.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":232,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":233,"author":{"gitId":"-"},"content":"Step 6. The user executes `clear`, which calls `Model#commitAddressBook()`. Since the `currentStatePointer` is not pointing at the end of the `addressBookStateList`, all address book states after the `currentStatePointer` will be purged. Reason: It no longer makes sense to redo the `add n/David …​` command. This is the behavior that most modern desktop applications follow.","lastModifiedDate":"2020-05-23"},{"lineNumber":234,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":235,"author":{"gitId":"-"},"content":"![UndoRedoState5](images/UndoRedoState5.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":236,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":237,"author":{"gitId":"-"},"content":"The following activity diagram summarizes what happens when a user executes a new command:","lastModifiedDate":"2020-05-23"},{"lineNumber":238,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":239,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/CommitActivityDiagram.png\" width\u003d\"250\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":240,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":241,"author":{"gitId":"-"},"content":"#### Design considerations:","lastModifiedDate":"2021-07-31"},{"lineNumber":242,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":243,"author":{"gitId":"-"},"content":"**Aspect: How undo \u0026 redo executes:**","lastModifiedDate":"2021-07-31"},{"lineNumber":244,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":245,"author":{"gitId":"-"},"content":"* **Alternative 1 (current choice):** Saves the entire address book.","lastModifiedDate":"2020-05-23"},{"lineNumber":246,"author":{"gitId":"-"},"content":"  * Pros: Easy to implement.","lastModifiedDate":"2020-05-23"},{"lineNumber":247,"author":{"gitId":"-"},"content":"  * Cons: May have performance issues in terms of memory usage.","lastModifiedDate":"2020-05-23"},{"lineNumber":248,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":249,"author":{"gitId":"-"},"content":"* **Alternative 2:** Individual command knows how to undo/redo by","lastModifiedDate":"2020-05-23"},{"lineNumber":250,"author":{"gitId":"-"},"content":"  itself.","lastModifiedDate":"2020-05-23"},{"lineNumber":251,"author":{"gitId":"-"},"content":"  * Pros: Will use less memory (e.g. for `delete`, just save the person being deleted).","lastModifiedDate":"2020-05-23"},{"lineNumber":252,"author":{"gitId":"-"},"content":"  * Cons: We must ensure that the implementation of each individual command are correct.","lastModifiedDate":"2020-05-23"},{"lineNumber":253,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":254,"author":{"gitId":"-"},"content":"_{more aspects and alternatives to be added}_","lastModifiedDate":"2020-05-23"},{"lineNumber":255,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":256,"author":{"gitId":"-"},"content":"### \\[Proposed\\] Data archiving","lastModifiedDate":"2020-05-23"},{"lineNumber":257,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":258,"author":{"gitId":"-"},"content":"_{Explain here how the data archiving feature will be implemented}_","lastModifiedDate":"2020-05-23"},{"lineNumber":259,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":260,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":261,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":262,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":263,"author":{"gitId":"stanley-1"},"content":"## **Documentation, logging, testing, configuration, dev-ops** \u003ca name\u003d\"docs\"\u003e\u003c/a\u003e","lastModifiedDate":"2021-09-24"},{"lineNumber":264,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":265,"author":{"gitId":"-"},"content":"* [Documentation guide](Documentation.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":266,"author":{"gitId":"-"},"content":"* [Testing guide](Testing.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":267,"author":{"gitId":"-"},"content":"* [Logging guide](Logging.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":268,"author":{"gitId":"-"},"content":"* [Configuration guide](Configuration.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":269,"author":{"gitId":"-"},"content":"* [DevOps guide](DevOps.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":270,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":271,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":272,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":273,"author":{"gitId":"stanley-1"},"content":"## **Appendix: Requirements** \u003ca name\u003d\"requirements\"\u003e\u003c/a\u003e","lastModifiedDate":"2021-09-24"},{"lineNumber":274,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":275,"author":{"gitId":"stanley-1"},"content":"### Product scope \u003ca name\u003d\"scope\"\u003e\u003c/a\u003e","lastModifiedDate":"2021-09-24"},{"lineNumber":276,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":277,"author":{"gitId":"-"},"content":"**Target user profile**:","lastModifiedDate":"2020-05-23"},{"lineNumber":278,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":279,"author":{"gitId":"stanley-1"},"content":"* avid social media user","lastModifiedDate":"2021-09-24"},{"lineNumber":280,"author":{"gitId":"stanley-1"},"content":"* prefers desktop apps over other types","lastModifiedDate":"2021-09-24"},{"lineNumber":281,"author":{"gitId":"-"},"content":"* prefers typing to mouse interactions","lastModifiedDate":"2020-05-26"},{"lineNumber":282,"author":{"gitId":"stanley-1"},"content":"* needs to manage a significant number of contacts","lastModifiedDate":"2021-09-24"},{"lineNumber":283,"author":{"gitId":"stanley-1"},"content":"* wants to catch up with their contacts’ activities quickly ","lastModifiedDate":"2021-09-24"},{"lineNumber":284,"author":{"gitId":"stanley-1"},"content":"* wants to connect with their followers/friends on various social media platforms through an all-in-one dashboard","lastModifiedDate":"2021-09-24"},{"lineNumber":285,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":286,"author":{"gitId":"stanley-1"},"content":"**Value proposition**: ","lastModifiedDate":"2021-09-24"},{"lineNumber":287,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":288,"author":{"gitId":"stanley-1"},"content":"Our product serves as an integrated dashboard for a user to retrieve the social media activities and account information of his/her contacts. This makes it seamless for the user to interact with his/her contacts instead of having to access each social media account that the contact owns.","lastModifiedDate":"2021-09-24"},{"lineNumber":289,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":290,"author":{"gitId":"stanley-1"},"content":"### User stories \u003ca name\u003d\"user-stories\"\u003e\u003c/a\u003e","lastModifiedDate":"2021-09-24"},{"lineNumber":291,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":292,"author":{"gitId":"-"},"content":"Priorities: High (must have) - `* * *`, Medium (nice to have) - `* *`, Low (unlikely to have) - `*`","lastModifiedDate":"2020-05-23"},{"lineNumber":293,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":294,"author":{"gitId":"stanley-1"},"content":"\u003cbr/\u003e","lastModifiedDate":"2021-09-27"},{"lineNumber":295,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":296,"author":{"gitId":"stanley-1"},"content":"_Core Functionalities_","lastModifiedDate":"2021-09-27"},{"lineNumber":297,"author":{"gitId":"stanley-1"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":298,"author":{"gitId":"stanley-1"},"content":"|Priority| As a / an …​                              | I want to …​                                                                    | So that I can…​                                                                                      |","lastModifiedDate":"2021-09-27"},{"lineNumber":299,"author":{"gitId":"stanley-1"},"content":"|--------| -------------------------------------------- | ---------------------------------------------------------------------------------- | ------------------------------------------------------------------------------------------------------- |","lastModifiedDate":"2021-09-27"},{"lineNumber":300,"author":{"gitId":"stanley-1"},"content":"|`* * *` | beginner user                                | add contacts                                                                       | access my contacts\u0027 details                                                                             |","lastModifiedDate":"2021-09-27"},{"lineNumber":301,"author":{"gitId":"stanley-1"},"content":"|`* * *` | beginner user                                | delete contacts                                                                    | remove irrelevant entries                                                                               |","lastModifiedDate":"2021-09-27"},{"lineNumber":302,"author":{"gitId":"stanley-1"},"content":"|`* * *` | beginner user                                | access the social media handles of my contacts                                     | have quicker access to my contacts\u0027 social media pages                                                  |","lastModifiedDate":"2021-09-27"},{"lineNumber":303,"author":{"gitId":"stanley-1"},"content":"|`* * *` | forgetful user                               | save my contacts\u0027 social media handles                                             | easily access my contact\u0027s social media account without having to recall the exact handle               |","lastModifiedDate":"2021-09-27"},{"lineNumber":304,"author":{"gitId":"Zacchua"},"content":"|`* * *` | user                                         | visit the social media site when I click on the handle                             | easily go to the social media site, without having to switch to the browser while remembering the handle|","lastModifiedDate":"2021-10-21"},{"lineNumber":305,"author":{"gitId":"stanley-1"},"content":"|`* *`   | user                                         | browse a list of all my contacts                                                   | view all my contacts at a glance                                                                        |","lastModifiedDate":"2021-09-27"},{"lineNumber":306,"author":{"gitId":"stanley-1"},"content":"|`*`     | beginner user                                | update contacts                                                                    | modify existing social media handles and add new ones when they are created                             |","lastModifiedDate":"2021-09-27"},{"lineNumber":307,"author":{"gitId":"stanley-1"},"content":"|`*`     | beginner user                                | view the recent feed of my contacts                                                | have more meaningful and frequent interactions with my contacts on multiple platforms                   |","lastModifiedDate":"2021-09-27"},{"lineNumber":308,"author":{"gitId":"stanley-1"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":309,"author":{"gitId":"stanley-1"},"content":"\u003cbr/\u003e","lastModifiedDate":"2021-09-27"},{"lineNumber":310,"author":{"gitId":"stanley-1"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":311,"author":{"gitId":"stanley-1"},"content":"_Guide for New Users_","lastModifiedDate":"2021-09-27"},{"lineNumber":312,"author":{"gitId":"stanley-1"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":313,"author":{"gitId":"stanley-1"},"content":"|Priority| As a / an …​                              | I want to …​                                                                    | So that I can…​                                                                                      |","lastModifiedDate":"2021-09-27"},{"lineNumber":314,"author":{"gitId":"stanley-1"},"content":"|--------| -------------------------------------------- | ---------------------------------------------------------------------------------- | ------------------------------------------------------------------------------------------------------- |","lastModifiedDate":"2021-09-27"},{"lineNumber":315,"author":{"gitId":"stanley-1"},"content":"|`* *`   | new user                                     | view the User Guide                                                                | learn how to use SociaLite comprehensively                                                              |","lastModifiedDate":"2021-10-21"},{"lineNumber":316,"author":{"gitId":"stanley-1"},"content":"|`* *`   | new user                                     | view sample contacts when I initialise the app                                     | try out the features without having to add actual data                                                  |","lastModifiedDate":"2021-09-27"},{"lineNumber":317,"author":{"gitId":"stanley-1"},"content":"|`* *`   | new / returning user                         | access in-app guidance for a specific command                                      | (re)learn the syntax of a selected command without having to open the User Guide via a browser          |","lastModifiedDate":"2021-10-21"},{"lineNumber":318,"author":{"gitId":"stanley-1"},"content":"|`* *`   | new user adopting the app for my own use     | purge all data                                                                     | delete sample contacts and add real data                                                                |","lastModifiedDate":"2021-09-27"},{"lineNumber":319,"author":{"gitId":"stanley-1"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":320,"author":{"gitId":"stanley-1"},"content":"\u003cbr/\u003e","lastModifiedDate":"2021-09-27"},{"lineNumber":321,"author":{"gitId":"stanley-1"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":322,"author":{"gitId":"stanley-1"},"content":"_Organization of Contacts_","lastModifiedDate":"2021-09-27"},{"lineNumber":323,"author":{"gitId":"stanley-1"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":324,"author":{"gitId":"stanley-1"},"content":"| Priority | As a / an …​       | I want to …​                                        | So that I can…​                                               |","lastModifiedDate":"2021-09-27"},{"lineNumber":325,"author":{"gitId":"david-eom"},"content":"| -------- | ----------------- | -------------------------------------------------- | ------------------------------------------------------------ |","lastModifiedDate":"2021-10-22"},{"lineNumber":326,"author":{"gitId":"stanley-1"},"content":"| `* *`    | organized user    | create categories to group my contacts             | organize my list of contacts                                 |","lastModifiedDate":"2021-09-27"},{"lineNumber":327,"author":{"gitId":"stanley-1"},"content":"| `* *`    | organized user    | edit categories as and when required               | repurpose such pre-existing categories                       |","lastModifiedDate":"2021-09-27"},{"lineNumber":328,"author":{"gitId":"stanley-1"},"content":"| `* *`    | organized user    | query a group of contacts                          | have greater ease of access to my frequent contacts and efficiently contact people for similar purposes |","lastModifiedDate":"2021-09-27"},{"lineNumber":329,"author":{"gitId":"david-eom"},"content":"| `*`      | organized user    | delete categories associated with contacts         | declutter my address book when the category is no longer relevant |","lastModifiedDate":"2021-10-22"},{"lineNumber":330,"author":{"gitId":"stanley-1"},"content":"| `*`      | intermediate user | filter contacts based on social media platform     | find out whose social media contacts I have not gotten and request it from them |","lastModifiedDate":"2021-09-27"},{"lineNumber":331,"author":{"gitId":"stanley-1"},"content":"| `*`      | user              | track when I last queried my contact\u0027s information | find out who I have not communicated with for an extended period of time |","lastModifiedDate":"2021-09-27"},{"lineNumber":332,"author":{"gitId":"david-eom"},"content":"| `*`      | user              | navigate through my command history                | make slight adjustments to my last command if I happen to have a typo |","lastModifiedDate":"2021-10-22"},{"lineNumber":333,"author":{"gitId":"stanley-1"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":334,"author":{"gitId":"stanley-1"},"content":"\u003cbr/\u003e","lastModifiedDate":"2021-09-27"},{"lineNumber":335,"author":{"gitId":"stanley-1"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":336,"author":{"gitId":"stanley-1"},"content":"_Ease of Accessibility_","lastModifiedDate":"2021-09-27"},{"lineNumber":337,"author":{"gitId":"stanley-1"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":338,"author":{"gitId":"stanley-1"},"content":"|Priority| As a / an …​                              | I want to …​                                                                    | So that I can…​                                                                                      |","lastModifiedDate":"2021-09-27"},{"lineNumber":339,"author":{"gitId":"stanley-1"},"content":"|--------| -------------------------------------------- | ---------------------------------------------------------------------------------- | ------------------------------------------------------------------------------------------------------- |","lastModifiedDate":"2021-09-27"},{"lineNumber":340,"author":{"gitId":"EssWhyy"},"content":"|`* * *` | user with many contacts                      | find a contact by name, tag or handle                                              | easily find a contact without having to scroll through my entire contact list","lastModifiedDate":"2021-10-23"},{"lineNumber":341,"author":{"gitId":"stanley-1"},"content":"|`* *`   | avid social media user with many connections | be redirected to my chosen contact\u0027s social media platform                         | avoid initialising every social media platform and search for his/her account manually                  |","lastModifiedDate":"2021-09-27"},{"lineNumber":342,"author":{"gitId":"stanley-1"},"content":"|`*`     | expert user                                  | customise the information presented to me when the app is initialised              | view the social media contacts of my close friends quickly without keying in additional prompts         |","lastModifiedDate":"2021-09-27"},{"lineNumber":343,"author":{"gitId":"stanley-1"},"content":"|`*`     | frequent user                                | create keyboard shortcuts/hotkeys                                                  | quickly pull up the social media handles of a contact-of-interest in the least keystrokes possible      |","lastModifiedDate":"2021-09-27"},{"lineNumber":344,"author":{"gitId":"stanley-1"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":345,"author":{"gitId":"stanley-1"},"content":"\u003cbr/\u003e","lastModifiedDate":"2021-09-27"},{"lineNumber":346,"author":{"gitId":"stanley-1"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":347,"author":{"gitId":"stanley-1"},"content":"_Customization of Contacts_","lastModifiedDate":"2021-09-27"},{"lineNumber":348,"author":{"gitId":"stanley-1"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":349,"author":{"gitId":"stanley-1"},"content":"|Priority| As a / an …​                              | I want to …​                                                                    | So that I can…​                                                                                      |","lastModifiedDate":"2021-09-27"},{"lineNumber":350,"author":{"gitId":"stanley-1"},"content":"|--------| -------------------------------------------- | ---------------------------------------------------------------------------------- | ------------------------------------------------------------------------------------------------------- |","lastModifiedDate":"2021-09-27"},{"lineNumber":351,"author":{"gitId":"stanley-1"},"content":"|`*`     | user                                         | add a profile picture for my contacts                                              | better recognize their appearance                                                                       |","lastModifiedDate":"2021-09-27"},{"lineNumber":352,"author":{"gitId":"stanley-1"},"content":"|`*`     | user                                         | add notes about contacts                                                           | recall specific items about my contacts                                                                 |","lastModifiedDate":"2021-09-27"},{"lineNumber":353,"author":{"gitId":"stanley-1"},"content":"|`*`     | user                                         | add dates of special occasions (birthdays/appointments) associated with my contact | view important information of my contacts                                                               |","lastModifiedDate":"2021-09-27"},{"lineNumber":354,"author":{"gitId":"stanley-1"},"content":"|`*`     | user                                         | set reminders for special occasions associated with my contact                     | be alerted of these events                                                                              |","lastModifiedDate":"2021-09-27"},{"lineNumber":355,"author":{"gitId":"stanley-1"},"content":"|`*`     | user                                         | view a dashboard of significant events associated with my contact                  | be reminded of these dates                                                                              |","lastModifiedDate":"2021-09-27"},{"lineNumber":356,"author":{"gitId":"stanley-1"},"content":"|`*`     | user                                         | forward relevant details of an existing contact                                    | easily share such information upon request                                                              |","lastModifiedDate":"2021-09-27"},{"lineNumber":357,"author":{"gitId":"stanley-1"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":358,"author":{"gitId":"stanley-1"},"content":"\u003cbr/\u003e","lastModifiedDate":"2021-09-27"},{"lineNumber":359,"author":{"gitId":"stanley-1"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":360,"author":{"gitId":"stanley-1"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":361,"author":{"gitId":"stanley-1"},"content":"### Use Cases \u003ca name\u003d\"use-cases\"\u003e\u003c/a\u003e","lastModifiedDate":"2021-09-24"},{"lineNumber":362,"author":{"gitId":"stanley-1"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":363,"author":{"gitId":"stanley-1"},"content":"(For all use cases below, the **System** is `SociaLite` and the **Actor** is the `user`, unless specified otherwise)","lastModifiedDate":"2021-09-24"},{"lineNumber":364,"author":{"gitId":"stanley-1"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":365,"author":{"gitId":"stanley-1"},"content":"***Basic Functionalities*** ","lastModifiedDate":"2021-09-24"},{"lineNumber":366,"author":{"gitId":"stanley-1"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":367,"author":{"gitId":"stanley-1"},"content":"**Use Case 01: Add a person**","lastModifiedDate":"2021-09-24"},{"lineNumber":368,"author":{"gitId":"stanley-1"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":369,"author":{"gitId":"stanley-1"},"content":"*MSS*","lastModifiedDate":"2021-09-24"},{"lineNumber":370,"author":{"gitId":"stanley-1"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":371,"author":{"gitId":"stanley-1"},"content":"1.  User requests to add a new contact","lastModifiedDate":"2021-09-24"},{"lineNumber":372,"author":{"gitId":"stanley-1"},"content":"2.  SociaLite adds the contact","lastModifiedDate":"2021-09-24"},{"lineNumber":373,"author":{"gitId":"stanley-1"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":374,"author":{"gitId":"stanley-1"},"content":"    Use case ends.","lastModifiedDate":"2021-09-24"},{"lineNumber":375,"author":{"gitId":"stanley-1"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":376,"author":{"gitId":"stanley-1"},"content":"*Extensions*","lastModifiedDate":"2021-09-24"},{"lineNumber":377,"author":{"gitId":"stanley-1"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":378,"author":{"gitId":"stanley-1"},"content":"* 1a. User\u0027s input does not conform with the specified format.","lastModifiedDate":"2021-09-24"},{"lineNumber":379,"author":{"gitId":"david-eom"},"content":"    ","lastModifiedDate":"2021-10-22"},{"lineNumber":380,"author":{"gitId":"stanley-1"},"content":"    * 1a1. SociaLite shows an error message.","lastModifiedDate":"2021-09-24"},{"lineNumber":381,"author":{"gitId":"stanley-1"},"content":"      ","lastModifiedDate":"2021-09-24"},{"lineNumber":382,"author":{"gitId":"stanley-1"},"content":"        Use case resumes at step 1.","lastModifiedDate":"2021-09-24"},{"lineNumber":383,"author":{"gitId":"stanley-1"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":384,"author":{"gitId":"stanley-1"},"content":"\u003cbr/\u003e","lastModifiedDate":"2021-09-24"},{"lineNumber":385,"author":{"gitId":"stanley-1"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":386,"author":{"gitId":"stanley-1"},"content":"**Use Case 02: List entries in SociaLite**","lastModifiedDate":"2021-09-24"},{"lineNumber":387,"author":{"gitId":"stanley-1"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":388,"author":{"gitId":"stanley-1"},"content":"*MSS*","lastModifiedDate":"2021-09-24"},{"lineNumber":389,"author":{"gitId":"stanley-1"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":390,"author":{"gitId":"stanley-1"},"content":"1.  User requests to list contacts","lastModifiedDate":"2021-09-24"},{"lineNumber":391,"author":{"gitId":"stanley-1"},"content":"2.  SociaLite shows a list of contacts","lastModifiedDate":"2021-09-24"},{"lineNumber":392,"author":{"gitId":"stanley-1"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":393,"author":{"gitId":"stanley-1"},"content":"    Use case ends.","lastModifiedDate":"2021-09-24"},{"lineNumber":394,"author":{"gitId":"stanley-1"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":395,"author":{"gitId":"stanley-1"},"content":"*Extensions*","lastModifiedDate":"2021-09-24"},{"lineNumber":396,"author":{"gitId":"stanley-1"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":397,"author":{"gitId":"stanley-1"},"content":"* 2a. The list is empty.","lastModifiedDate":"2021-09-24"},{"lineNumber":398,"author":{"gitId":"stanley-1"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":399,"author":{"gitId":"stanley-1"},"content":"  Use case ends.","lastModifiedDate":"2021-09-24"},{"lineNumber":400,"author":{"gitId":"stanley-1"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":401,"author":{"gitId":"stanley-1"},"content":"\u003cbr/\u003e","lastModifiedDate":"2021-09-24"},{"lineNumber":402,"author":{"gitId":"stanley-1"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":403,"author":{"gitId":"stanley-1"},"content":"**Use Case 03: Edit entries in SociaLite**","lastModifiedDate":"2021-09-24"},{"lineNumber":404,"author":{"gitId":"stanley-1"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":405,"author":{"gitId":"stanley-1"},"content":"*MSS*","lastModifiedDate":"2021-09-24"},{"lineNumber":406,"author":{"gitId":"stanley-1"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":407,"author":{"gitId":"stanley-1"},"content":"1.  User requests to list contacts","lastModifiedDate":"2021-09-24"},{"lineNumber":408,"author":{"gitId":"stanley-1"},"content":"2.  SociaLite shows a list of contacts","lastModifiedDate":"2021-09-24"},{"lineNumber":409,"author":{"gitId":"stanley-1"},"content":"3.  User requests to edit a specific contact in the list","lastModifiedDate":"2021-09-24"},{"lineNumber":410,"author":{"gitId":"stanley-1"},"content":"4.  SociaLite updates the contact with the specified input","lastModifiedDate":"2021-09-24"},{"lineNumber":411,"author":{"gitId":"stanley-1"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":412,"author":{"gitId":"stanley-1"},"content":"    Use case ends.","lastModifiedDate":"2021-09-24"},{"lineNumber":413,"author":{"gitId":"stanley-1"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":414,"author":{"gitId":"stanley-1"},"content":"*Extensions*","lastModifiedDate":"2021-09-24"},{"lineNumber":415,"author":{"gitId":"stanley-1"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":416,"author":{"gitId":"stanley-1"},"content":"* 2a. The list is empty.","lastModifiedDate":"2021-09-24"},{"lineNumber":417,"author":{"gitId":"stanley-1"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":418,"author":{"gitId":"stanley-1"},"content":"  Use case ends.","lastModifiedDate":"2021-09-24"},{"lineNumber":419,"author":{"gitId":"stanley-1"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":420,"author":{"gitId":"stanley-1"},"content":"* 3a. The given index is invalid.","lastModifiedDate":"2021-09-24"},{"lineNumber":421,"author":{"gitId":"stanley-1"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":422,"author":{"gitId":"stanley-1"},"content":"    * 3a1. SociaLite shows an error message.","lastModifiedDate":"2021-09-24"},{"lineNumber":423,"author":{"gitId":"stanley-1"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":424,"author":{"gitId":"stanley-1"},"content":"      Use case resumes at step 2.","lastModifiedDate":"2021-09-24"},{"lineNumber":425,"author":{"gitId":"stanley-1"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":426,"author":{"gitId":"stanley-1"},"content":"* 3b. User\u0027s input does not conform with the specified format.","lastModifiedDate":"2021-09-24"},{"lineNumber":427,"author":{"gitId":"stanley-1"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":428,"author":{"gitId":"stanley-1"},"content":"    * 3a1. SociaLite shows an error message.","lastModifiedDate":"2021-09-24"},{"lineNumber":429,"author":{"gitId":"stanley-1"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":430,"author":{"gitId":"stanley-1"},"content":"      Use case resumes at step 2.","lastModifiedDate":"2021-09-24"},{"lineNumber":431,"author":{"gitId":"stanley-1"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":432,"author":{"gitId":"stanley-1"},"content":"\u003cbr/\u003e","lastModifiedDate":"2021-09-24"},{"lineNumber":433,"author":{"gitId":"stanley-1"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":434,"author":{"gitId":"stanley-1"},"content":"**Use Case 04: Find a contact**","lastModifiedDate":"2021-09-24"},{"lineNumber":435,"author":{"gitId":"stanley-1"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":436,"author":{"gitId":"stanley-1"},"content":"*MSS*","lastModifiedDate":"2021-09-24"},{"lineNumber":437,"author":{"gitId":"stanley-1"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":438,"author":{"gitId":"stanley-1"},"content":"1.  User requests to locate a specific contact through keywords","lastModifiedDate":"2021-09-24"},{"lineNumber":439,"author":{"gitId":"stanley-1"},"content":"2.  SociaLite shows a list of contacts that matches the given criteria","lastModifiedDate":"2021-09-24"},{"lineNumber":440,"author":{"gitId":"stanley-1"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":441,"author":{"gitId":"stanley-1"},"content":"    Use case ends.","lastModifiedDate":"2021-09-24"},{"lineNumber":442,"author":{"gitId":"stanley-1"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":443,"author":{"gitId":"stanley-1"},"content":"*Extensions*","lastModifiedDate":"2021-09-24"},{"lineNumber":444,"author":{"gitId":"stanley-1"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":445,"author":{"gitId":"stanley-1"},"content":"* 2a. The list is empty as there are no matches found.","lastModifiedDate":"2021-09-24"},{"lineNumber":446,"author":{"gitId":"stanley-1"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":447,"author":{"gitId":"stanley-1"},"content":"  Use case ends.","lastModifiedDate":"2021-09-24"},{"lineNumber":448,"author":{"gitId":"stanley-1"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":449,"author":{"gitId":"stanley-1"},"content":"\u003cbr/\u003e","lastModifiedDate":"2021-09-24"},{"lineNumber":450,"author":{"gitId":"stanley-1"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":451,"author":{"gitId":"stanley-1"},"content":"**Use Case 05: Delete a person**","lastModifiedDate":"2021-09-24"},{"lineNumber":452,"author":{"gitId":"stanley-1"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":453,"author":{"gitId":"stanley-1"},"content":"*MSS*","lastModifiedDate":"2021-09-24"},{"lineNumber":454,"author":{"gitId":"stanley-1"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":455,"author":{"gitId":"stanley-1"},"content":"1.  User requests to list contacts","lastModifiedDate":"2021-09-24"},{"lineNumber":456,"author":{"gitId":"stanley-1"},"content":"2.  SociaLite shows a list of contacts","lastModifiedDate":"2021-09-24"},{"lineNumber":457,"author":{"gitId":"stanley-1"},"content":"3.  User requests to delete a specific contact in the list","lastModifiedDate":"2021-09-24"},{"lineNumber":458,"author":{"gitId":"stanley-1"},"content":"4.  SociaLite deletes the contact","lastModifiedDate":"2021-09-24"},{"lineNumber":459,"author":{"gitId":"stanley-1"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":460,"author":{"gitId":"stanley-1"},"content":"    Use case ends.","lastModifiedDate":"2021-09-24"},{"lineNumber":461,"author":{"gitId":"stanley-1"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":462,"author":{"gitId":"stanley-1"},"content":"*Extensions*","lastModifiedDate":"2021-09-24"},{"lineNumber":463,"author":{"gitId":"stanley-1"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":464,"author":{"gitId":"stanley-1"},"content":"* 2a. The list is empty.","lastModifiedDate":"2021-09-24"},{"lineNumber":465,"author":{"gitId":"stanley-1"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":466,"author":{"gitId":"stanley-1"},"content":"  Use case ends.","lastModifiedDate":"2021-09-24"},{"lineNumber":467,"author":{"gitId":"stanley-1"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":468,"author":{"gitId":"stanley-1"},"content":"* 3a. The given index is invalid.","lastModifiedDate":"2021-09-24"},{"lineNumber":469,"author":{"gitId":"stanley-1"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":470,"author":{"gitId":"stanley-1"},"content":"    * 3a1. SociaLite shows an error message.","lastModifiedDate":"2021-09-24"},{"lineNumber":471,"author":{"gitId":"stanley-1"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":472,"author":{"gitId":"stanley-1"},"content":"      Use case resumes at step 2.","lastModifiedDate":"2021-09-24"},{"lineNumber":473,"author":{"gitId":"stanley-1"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":474,"author":{"gitId":"stanley-1"},"content":"\u003cbr/\u003e","lastModifiedDate":"2021-09-24"},{"lineNumber":475,"author":{"gitId":"stanley-1"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":476,"author":{"gitId":"Zacchua"},"content":"**Use Case 06: Go to social media site**","lastModifiedDate":"2021-10-21"},{"lineNumber":477,"author":{"gitId":"Zacchua"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":478,"author":{"gitId":"Zacchua"},"content":"*MSS*","lastModifiedDate":"2021-10-21"},{"lineNumber":479,"author":{"gitId":"Zacchua"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":480,"author":{"gitId":"Zacchua"},"content":"1.  User requests to list contacts (UC02) or find contact (UC04)","lastModifiedDate":"2021-10-21"},{"lineNumber":481,"author":{"gitId":"Zacchua"},"content":"2. SociaLite returns a list of contacts according to the UC called","lastModifiedDate":"2021-10-21"},{"lineNumber":482,"author":{"gitId":"Zacchua"},"content":"3.  User requests to open handle in browser","lastModifiedDate":"2021-10-21"},{"lineNumber":483,"author":{"gitId":"Zacchua"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":484,"author":{"gitId":"Zacchua"},"content":"    Use case ends.","lastModifiedDate":"2021-10-21"},{"lineNumber":485,"author":{"gitId":"Zacchua"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":486,"author":{"gitId":"Zacchua"},"content":"*Extensions*","lastModifiedDate":"2021-10-21"},{"lineNumber":487,"author":{"gitId":"Zacchua"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":488,"author":{"gitId":"Zacchua"},"content":"* 2a. The list is empty.","lastModifiedDate":"2021-10-21"},{"lineNumber":489,"author":{"gitId":"Zacchua"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":490,"author":{"gitId":"Zacchua"},"content":"  Use case ends.","lastModifiedDate":"2021-10-21"},{"lineNumber":491,"author":{"gitId":"Zacchua"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":492,"author":{"gitId":"Zacchua"},"content":"\u003cbr/\u003e","lastModifiedDate":"2021-10-21"},{"lineNumber":493,"author":{"gitId":"Zacchua"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":494,"author":{"gitId":"stanley-1"},"content":"***Organisation of Contacts***","lastModifiedDate":"2021-09-24"},{"lineNumber":495,"author":{"gitId":"stanley-1"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":496,"author":{"gitId":"Zacchua"},"content":"**Use Case 07: Create new category**","lastModifiedDate":"2021-10-21"},{"lineNumber":497,"author":{"gitId":"stanley-1"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":498,"author":{"gitId":"stanley-1"},"content":"*MSS*","lastModifiedDate":"2021-09-24"},{"lineNumber":499,"author":{"gitId":"stanley-1"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":500,"author":{"gitId":"stanley-1"},"content":"1.  User types in command to create a new category (with category name)","lastModifiedDate":"2021-09-24"},{"lineNumber":501,"author":{"gitId":"stanley-1"},"content":"2.  SociaLite shows a list of contacts","lastModifiedDate":"2021-09-24"},{"lineNumber":502,"author":{"gitId":"stanley-1"},"content":"3.  User can select multiple contacts to add to the category","lastModifiedDate":"2021-09-24"},{"lineNumber":503,"author":{"gitId":"stanley-1"},"content":"4.  User selects `create` button","lastModifiedDate":"2021-09-24"},{"lineNumber":504,"author":{"gitId":"stanley-1"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":505,"author":{"gitId":"stanley-1"},"content":"    Use case ends.","lastModifiedDate":"2021-09-24"},{"lineNumber":506,"author":{"gitId":"stanley-1"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":507,"author":{"gitId":"stanley-1"},"content":"*Extensions*","lastModifiedDate":"2021-09-24"},{"lineNumber":508,"author":{"gitId":"stanley-1"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":509,"author":{"gitId":"stanley-1"},"content":"* 2a. Category exists.","lastModifiedDate":"2021-09-24"},{"lineNumber":510,"author":{"gitId":"stanley-1"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":511,"author":{"gitId":"stanley-1"},"content":"    * 2a1. SociaLite shows an error message.","lastModifiedDate":"2021-09-24"},{"lineNumber":512,"author":{"gitId":"stanley-1"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":513,"author":{"gitId":"stanley-1"},"content":"      Use case ends.","lastModifiedDate":"2021-09-24"},{"lineNumber":514,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":515,"author":{"gitId":"stanley-1"},"content":"\u003cbr/\u003e","lastModifiedDate":"2021-09-24"},{"lineNumber":516,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":517,"author":{"gitId":"Zacchua"},"content":"**Use Case 08: Query categories**","lastModifiedDate":"2021-10-21"},{"lineNumber":518,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":519,"author":{"gitId":"stanley-1"},"content":"*MSS*","lastModifiedDate":"2021-09-24"},{"lineNumber":520,"author":{"gitId":"stanley-1"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":521,"author":{"gitId":"stanley-1"},"content":"1.  User types in `query` command (with category name)","lastModifiedDate":"2021-09-24"},{"lineNumber":522,"author":{"gitId":"stanley-1"},"content":"2.  SociaLite shows a list of contacts in the category specified","lastModifiedDate":"2021-09-24"},{"lineNumber":523,"author":{"gitId":"stanley-1"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":524,"author":{"gitId":"stanley-1"},"content":"    Use case ends.","lastModifiedDate":"2021-09-24"},{"lineNumber":525,"author":{"gitId":"stanley-1"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":526,"author":{"gitId":"stanley-1"},"content":"*Extensions*","lastModifiedDate":"2021-09-24"},{"lineNumber":527,"author":{"gitId":"stanley-1"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":528,"author":{"gitId":"stanley-1"},"content":"* 2a. Category does not exist.","lastModifiedDate":"2021-09-24"},{"lineNumber":529,"author":{"gitId":"stanley-1"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":530,"author":{"gitId":"stanley-1"},"content":"    * 2a1. SociaLite shows an error message.","lastModifiedDate":"2021-09-24"},{"lineNumber":531,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":532,"author":{"gitId":"stanley-1"},"content":"      Use case ends.","lastModifiedDate":"2021-09-24"},{"lineNumber":533,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":534,"author":{"gitId":"stanley-1"},"content":"\u003cbr/\u003e","lastModifiedDate":"2021-09-24"},{"lineNumber":535,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":536,"author":{"gitId":"Zacchua"},"content":"**Use Case 09: Edit categories**","lastModifiedDate":"2021-10-21"},{"lineNumber":537,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":538,"author":{"gitId":"stanley-1"},"content":"*MSS*","lastModifiedDate":"2021-09-24"},{"lineNumber":539,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":540,"author":{"gitId":"stanley-1"},"content":"1.  User enters command to add contact to the category","lastModifiedDate":"2021-09-24"},{"lineNumber":541,"author":{"gitId":"stanley-1"},"content":"2.  SociaLite shows a list of updated contacts in the category","lastModifiedDate":"2021-09-24"},{"lineNumber":542,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":543,"author":{"gitId":"-"},"content":"    Use case ends.","lastModifiedDate":"2021-09-24"},{"lineNumber":544,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":545,"author":{"gitId":"stanley-1"},"content":"\u003cbr/\u003e","lastModifiedDate":"2021-09-24"},{"lineNumber":546,"author":{"gitId":"stanley-1"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":547,"author":{"gitId":"Zacchua"},"content":"**Use Case 10: Delete categories**","lastModifiedDate":"2021-10-21"},{"lineNumber":548,"author":{"gitId":"stanley-1"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":549,"author":{"gitId":"stanley-1"},"content":"*MSS*","lastModifiedDate":"2021-09-24"},{"lineNumber":550,"author":{"gitId":"stanley-1"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":551,"author":{"gitId":"stanley-1"},"content":"1.  User requests to list contacts","lastModifiedDate":"2021-09-24"},{"lineNumber":552,"author":{"gitId":"stanley-1"},"content":"2.  SociaLite shows a list of contacts","lastModifiedDate":"2021-09-24"},{"lineNumber":553,"author":{"gitId":"stanley-1"},"content":"3.  User requests to delete a category tagged to a specific contact in the list","lastModifiedDate":"2021-09-24"},{"lineNumber":554,"author":{"gitId":"stanley-1"},"content":"4.  SociaLite deletes the tag","lastModifiedDate":"2021-09-24"},{"lineNumber":555,"author":{"gitId":"stanley-1"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":556,"author":{"gitId":"stanley-1"},"content":"    Use case ends.","lastModifiedDate":"2021-09-24"},{"lineNumber":557,"author":{"gitId":"stanley-1"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":558,"author":{"gitId":"stanley-1"},"content":"*Extensions*","lastModifiedDate":"2021-09-24"},{"lineNumber":559,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":560,"author":{"gitId":"-"},"content":"* 2a. The list is empty.","lastModifiedDate":"2021-09-24"},{"lineNumber":561,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":562,"author":{"gitId":"-"},"content":"  Use case ends.","lastModifiedDate":"2021-09-24"},{"lineNumber":563,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":564,"author":{"gitId":"-"},"content":"* 3a. The given index is invalid.","lastModifiedDate":"2021-09-24"},{"lineNumber":565,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":566,"author":{"gitId":"stanley-1"},"content":"    * 3a1. SociaLite shows an error message.","lastModifiedDate":"2021-09-24"},{"lineNumber":567,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":568,"author":{"gitId":"-"},"content":"      Use case resumes at step 2.","lastModifiedDate":"2021-09-24"},{"lineNumber":569,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":570,"author":{"gitId":"stanley-1"},"content":"* 3b. The given category does not exist.","lastModifiedDate":"2021-09-24"},{"lineNumber":571,"author":{"gitId":"stanley-1"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":572,"author":{"gitId":"stanley-1"},"content":"    * 3a1. SociaLite shows an error message.","lastModifiedDate":"2021-09-24"},{"lineNumber":573,"author":{"gitId":"stanley-1"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":574,"author":{"gitId":"stanley-1"},"content":"      Use case resumes at step 2.","lastModifiedDate":"2021-09-24"},{"lineNumber":575,"author":{"gitId":"stanley-1"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":576,"author":{"gitId":"stanley-1"},"content":"\u003cbr/\u003e","lastModifiedDate":"2021-09-24"},{"lineNumber":577,"author":{"gitId":"stanley-1"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":578,"author":{"gitId":"Zacchua"},"content":"**Use Case 11: Retrieve last queried contact**","lastModifiedDate":"2021-10-21"},{"lineNumber":579,"author":{"gitId":"stanley-1"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":580,"author":{"gitId":"stanley-1"},"content":"*MSS*","lastModifiedDate":"2021-09-24"},{"lineNumber":581,"author":{"gitId":"stanley-1"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":582,"author":{"gitId":"stanley-1"},"content":"1.  User requests to retrieve the information of the last queried contact","lastModifiedDate":"2021-09-24"},{"lineNumber":583,"author":{"gitId":"stanley-1"},"content":"2.  SociaLite returns the entry that fits this criteria","lastModifiedDate":"2021-09-24"},{"lineNumber":584,"author":{"gitId":"stanley-1"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":585,"author":{"gitId":"stanley-1"},"content":"    Use case ends.","lastModifiedDate":"2021-09-24"},{"lineNumber":586,"author":{"gitId":"stanley-1"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":587,"author":{"gitId":"stanley-1"},"content":"\u003cbr/\u003e","lastModifiedDate":"2021-09-24"},{"lineNumber":588,"author":{"gitId":"stanley-1"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":589,"author":{"gitId":"stanley-1"},"content":"***Customization Tools***","lastModifiedDate":"2021-09-24"},{"lineNumber":590,"author":{"gitId":"stanley-1"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":591,"author":{"gitId":"Zacchua"},"content":"**Use Case 12: Add remark for a specific contact**","lastModifiedDate":"2021-10-21"},{"lineNumber":592,"author":{"gitId":"stanley-1"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":593,"author":{"gitId":"stanley-1"},"content":"*MSS*","lastModifiedDate":"2021-09-24"},{"lineNumber":594,"author":{"gitId":"stanley-1"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":595,"author":{"gitId":"stanley-1"},"content":"1.  User requests to **list contacts (UC02)** or **find contact (UC04)**","lastModifiedDate":"2021-09-24"},{"lineNumber":596,"author":{"gitId":"stanley-1"},"content":"2.  SociaLite returns a list of contacts according to the UC called","lastModifiedDate":"2021-09-24"},{"lineNumber":597,"author":{"gitId":"stanley-1"},"content":"3.  User specifies a remark to be added to the specified contact\u0027s entry","lastModifiedDate":"2021-09-24"},{"lineNumber":598,"author":{"gitId":"stanley-1"},"content":"4.  SociaLite adds a remark to the specified contact\u0027s entry","lastModifiedDate":"2021-09-24"},{"lineNumber":599,"author":{"gitId":"stanley-1"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":600,"author":{"gitId":"stanley-1"},"content":"    Use case ends.","lastModifiedDate":"2021-09-24"},{"lineNumber":601,"author":{"gitId":"stanley-1"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":602,"author":{"gitId":"stanley-1"},"content":"*Extensions*","lastModifiedDate":"2021-09-24"},{"lineNumber":603,"author":{"gitId":"stanley-1"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":604,"author":{"gitId":"stanley-1"},"content":"* 2a. The list is empty.","lastModifiedDate":"2021-09-24"},{"lineNumber":605,"author":{"gitId":"stanley-1"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":606,"author":{"gitId":"stanley-1"},"content":"  Use case ends.","lastModifiedDate":"2021-09-24"},{"lineNumber":607,"author":{"gitId":"stanley-1"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":608,"author":{"gitId":"stanley-1"},"content":"* 3a. The given index is invalid.","lastModifiedDate":"2021-09-24"},{"lineNumber":609,"author":{"gitId":"stanley-1"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":610,"author":{"gitId":"stanley-1"},"content":"    * 3a1. SociaLite shows an error message.","lastModifiedDate":"2021-09-24"},{"lineNumber":611,"author":{"gitId":"stanley-1"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":612,"author":{"gitId":"stanley-1"},"content":"      Use case resumes at step 2.","lastModifiedDate":"2021-09-24"},{"lineNumber":613,"author":{"gitId":"stanley-1"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":614,"author":{"gitId":"stanley-1"},"content":"\u003cbr/\u003e","lastModifiedDate":"2021-09-24"},{"lineNumber":615,"author":{"gitId":"stanley-1"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":616,"author":{"gitId":"Zacchua"},"content":"**Use Case 13: View contact card**","lastModifiedDate":"2021-10-21"},{"lineNumber":617,"author":{"gitId":"stanley-1"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":618,"author":{"gitId":"stanley-1"},"content":"*MSS*","lastModifiedDate":"2021-09-24"},{"lineNumber":619,"author":{"gitId":"stanley-1"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":620,"author":{"gitId":"stanley-1"},"content":"1.  User requests to **list contacts (UC02)** or **find contact (UC04)**","lastModifiedDate":"2021-09-24"},{"lineNumber":621,"author":{"gitId":"stanley-1"},"content":"2.  SociaLite returns a list of contacts according to the UC called","lastModifiedDate":"2021-09-24"},{"lineNumber":622,"author":{"gitId":"stanley-1"},"content":"3.  User specifies the index of his desired contact","lastModifiedDate":"2021-09-24"},{"lineNumber":623,"author":{"gitId":"stanley-1"},"content":"4.  SociaLite opens a contact card which presents all previously stored details associated with the contact","lastModifiedDate":"2021-09-24"},{"lineNumber":624,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":625,"author":{"gitId":"-"},"content":"    Use case ends.","lastModifiedDate":"2020-05-23"},{"lineNumber":626,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":627,"author":{"gitId":"stanley-1"},"content":"*Extensions*","lastModifiedDate":"2021-09-24"},{"lineNumber":628,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":629,"author":{"gitId":"-"},"content":"* 2a. The list is empty.","lastModifiedDate":"2020-05-23"},{"lineNumber":630,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":631,"author":{"gitId":"-"},"content":"  Use case ends.","lastModifiedDate":"2020-05-23"},{"lineNumber":632,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":633,"author":{"gitId":"-"},"content":"* 3a. The given index is invalid.","lastModifiedDate":"2020-05-23"},{"lineNumber":634,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":635,"author":{"gitId":"stanley-1"},"content":"    * 3a1. SociaLite shows an error message.","lastModifiedDate":"2021-09-24"},{"lineNumber":636,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":637,"author":{"gitId":"-"},"content":"      Use case resumes at step 2.","lastModifiedDate":"2020-05-23"},{"lineNumber":638,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":639,"author":{"gitId":"stanley-1"},"content":"\u003cbr/\u003e","lastModifiedDate":"2021-09-24"},{"lineNumber":640,"author":{"gitId":"stanley-1"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":641,"author":{"gitId":"bnjmnt4n"},"content":"**Use Case 14: Add date(s) to contact**","lastModifiedDate":"2021-10-25"},{"lineNumber":642,"author":{"gitId":"EssWhyy"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":643,"author":{"gitId":"bnjmnt4n"},"content":"*MSS*","lastModifiedDate":"2021-10-25"},{"lineNumber":644,"author":{"gitId":"bnjmnt4n"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":645,"author":{"gitId":"bnjmnt4n"},"content":"1.  User requests to **list contacts (UC02)** or **find contact (UC04)**","lastModifiedDate":"2021-10-25"},{"lineNumber":646,"author":{"gitId":"bnjmnt4n"},"content":"2.  SociaLite returns a list of contacts according to the UC called","lastModifiedDate":"2021-10-25"},{"lineNumber":647,"author":{"gitId":"bnjmnt4n"},"content":"3.  User specifies the index of his desired contact, and the dates to be associated with the contact","lastModifiedDate":"2021-10-25"},{"lineNumber":648,"author":{"gitId":"bnjmnt4n"},"content":"4.  SociaLite adds the specified dates to the user\u0027s contact entry","lastModifiedDate":"2021-10-25"},{"lineNumber":649,"author":{"gitId":"bnjmnt4n"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":650,"author":{"gitId":"bnjmnt4n"},"content":"    Use case ends.","lastModifiedDate":"2021-10-25"},{"lineNumber":651,"author":{"gitId":"bnjmnt4n"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":652,"author":{"gitId":"bnjmnt4n"},"content":"*Extensions*","lastModifiedDate":"2021-10-25"},{"lineNumber":653,"author":{"gitId":"bnjmnt4n"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":654,"author":{"gitId":"bnjmnt4n"},"content":"* 2a. The list is empty.","lastModifiedDate":"2021-10-25"},{"lineNumber":655,"author":{"gitId":"bnjmnt4n"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":656,"author":{"gitId":"bnjmnt4n"},"content":"  Use case ends.","lastModifiedDate":"2021-10-25"},{"lineNumber":657,"author":{"gitId":"bnjmnt4n"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":658,"author":{"gitId":"bnjmnt4n"},"content":"* 3a. The given index is invalid.","lastModifiedDate":"2021-10-25"},{"lineNumber":659,"author":{"gitId":"bnjmnt4n"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":660,"author":{"gitId":"bnjmnt4n"},"content":"    * 3a1. SociaLite shows an error message.","lastModifiedDate":"2021-10-25"},{"lineNumber":661,"author":{"gitId":"bnjmnt4n"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":662,"author":{"gitId":"bnjmnt4n"},"content":"      Use case resumes at step 2.","lastModifiedDate":"2021-10-25"},{"lineNumber":663,"author":{"gitId":"bnjmnt4n"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":664,"author":{"gitId":"bnjmnt4n"},"content":"* 3b. The given date(s) do not match the valid date format.","lastModifiedDate":"2021-10-25"},{"lineNumber":665,"author":{"gitId":"bnjmnt4n"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":666,"author":{"gitId":"bnjmnt4n"},"content":"    * 3b1. SociaLite shows an error message.","lastModifiedDate":"2021-10-25"},{"lineNumber":667,"author":{"gitId":"bnjmnt4n"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":668,"author":{"gitId":"bnjmnt4n"},"content":"      Use case resumes at step 2.","lastModifiedDate":"2021-10-25"},{"lineNumber":669,"author":{"gitId":"bnjmnt4n"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":670,"author":{"gitId":"bnjmnt4n"},"content":"\u003cbr/\u003e","lastModifiedDate":"2021-10-25"},{"lineNumber":671,"author":{"gitId":"EssWhyy"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":672,"author":{"gitId":"stanley-1"},"content":"***Help Guide \u0026 Exiting***","lastModifiedDate":"2021-09-24"},{"lineNumber":673,"author":{"gitId":"stanley-1"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":674,"author":{"gitId":"bnjmnt4n"},"content":"**Use Case 15: View User Guide**","lastModifiedDate":"2021-10-25"},{"lineNumber":675,"author":{"gitId":"stanley-1"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":676,"author":{"gitId":"stanley-1"},"content":"*MSS*","lastModifiedDate":"2021-09-24"},{"lineNumber":677,"author":{"gitId":"stanley-1"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":678,"author":{"gitId":"stanley-1"},"content":"1.  User requests to view User Guide","lastModifiedDate":"2021-09-24"},{"lineNumber":679,"author":{"gitId":"stanley-1"},"content":"2.  SociaLite displays a link to User Guide and instructions to obtain in-app guidance for five selected commands","lastModifiedDate":"2021-10-21"},{"lineNumber":680,"author":{"gitId":"stanley-1"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":681,"author":{"gitId":"stanley-1"},"content":"    Use case ends.","lastModifiedDate":"2021-09-24"},{"lineNumber":682,"author":{"gitId":"stanley-1"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":683,"author":{"gitId":"stanley-1"},"content":"\u003cbr/\u003e","lastModifiedDate":"2021-09-24"},{"lineNumber":684,"author":{"gitId":"stanley-1"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":685,"author":{"gitId":"bnjmnt4n"},"content":"**Use Case 16: View in-app guidance for selected commands**","lastModifiedDate":"2021-10-25"},{"lineNumber":686,"author":{"gitId":"stanley-1"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":687,"author":{"gitId":"stanley-1"},"content":"*MSS*","lastModifiedDate":"2021-10-21"},{"lineNumber":688,"author":{"gitId":"stanley-1"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":689,"author":{"gitId":"stanley-1"},"content":"1.  User requests to view in-app guidance for one out of five selected commands","lastModifiedDate":"2021-10-21"},{"lineNumber":690,"author":{"gitId":"stanley-1"},"content":"2.  SociaLite returns an overview and quick guide of the command given as input","lastModifiedDate":"2021-10-21"},{"lineNumber":691,"author":{"gitId":"stanley-1"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":692,"author":{"gitId":"stanley-1"},"content":"    Use case ends.","lastModifiedDate":"2021-10-21"},{"lineNumber":693,"author":{"gitId":"stanley-1"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":694,"author":{"gitId":"stanley-1"},"content":"*Extensions* ","lastModifiedDate":"2021-10-21"},{"lineNumber":695,"author":{"gitId":"stanley-1"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":696,"author":{"gitId":"stanley-1"},"content":"* 1a. The keyword given as input is invalid.","lastModifiedDate":"2021-10-21"},{"lineNumber":697,"author":{"gitId":"stanley-1"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":698,"author":{"gitId":"bnjmnt4n"},"content":"    * 1a1. SociaLite launches HelpWindow for **User Guide (UC15)** by default","lastModifiedDate":"2021-10-25"},{"lineNumber":699,"author":{"gitId":"stanley-1"},"content":"    ","lastModifiedDate":"2021-10-21"},{"lineNumber":700,"author":{"gitId":"stanley-1"},"content":"        Use case ends.","lastModifiedDate":"2021-10-21"},{"lineNumber":701,"author":{"gitId":"stanley-1"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":702,"author":{"gitId":"stanley-1"},"content":"\u003cbr/\u003e","lastModifiedDate":"2021-10-21"},{"lineNumber":703,"author":{"gitId":"stanley-1"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":704,"author":{"gitId":"bnjmnt4n"},"content":"**Use Case 17: Purge contacts stored in SociaLite**","lastModifiedDate":"2021-10-25"},{"lineNumber":705,"author":{"gitId":"stanley-1"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":706,"author":{"gitId":"stanley-1"},"content":"*MSS*","lastModifiedDate":"2021-09-24"},{"lineNumber":707,"author":{"gitId":"stanley-1"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":708,"author":{"gitId":"stanley-1"},"content":"1.  User requests to clear all existing contacts (from demo version)","lastModifiedDate":"2021-09-24"},{"lineNumber":709,"author":{"gitId":"stanley-1"},"content":"2.  SociaLite clears specimen data from memory","lastModifiedDate":"2021-09-24"},{"lineNumber":710,"author":{"gitId":"stanley-1"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":711,"author":{"gitId":"stanley-1"},"content":"    Use case ends.","lastModifiedDate":"2021-09-24"},{"lineNumber":712,"author":{"gitId":"stanley-1"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":713,"author":{"gitId":"stanley-1"},"content":"\u003cbr/\u003e","lastModifiedDate":"2021-09-24"},{"lineNumber":714,"author":{"gitId":"stanley-1"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":715,"author":{"gitId":"bnjmnt4n"},"content":"**Use Case 18: Exit application**","lastModifiedDate":"2021-10-25"},{"lineNumber":716,"author":{"gitId":"stanley-1"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":717,"author":{"gitId":"stanley-1"},"content":"*MSS*","lastModifiedDate":"2021-09-24"},{"lineNumber":718,"author":{"gitId":"stanley-1"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":719,"author":{"gitId":"stanley-1"},"content":"1.  User types in command to exit application","lastModifiedDate":"2021-09-24"},{"lineNumber":720,"author":{"gitId":"stanley-1"},"content":"2.  SociaLite closes","lastModifiedDate":"2021-09-24"},{"lineNumber":721,"author":{"gitId":"stanley-1"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":722,"author":{"gitId":"stanley-1"},"content":"    Use case ends.","lastModifiedDate":"2021-09-24"},{"lineNumber":723,"author":{"gitId":"stanley-1"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":724,"author":{"gitId":"stanley-1"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":725,"author":{"gitId":"EssWhyy"},"content":"***Ease of Accessibility***","lastModifiedDate":"2021-10-23"},{"lineNumber":726,"author":{"gitId":"EssWhyy"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":727,"author":{"gitId":"bnjmnt4n"},"content":"**Use Case 19: Finding a contact in the list**","lastModifiedDate":"2021-10-25"},{"lineNumber":728,"author":{"gitId":"EssWhyy"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":729,"author":{"gitId":"EssWhyy"},"content":"1. User types in the \u0027find\u0027 command with the names, tags and/or handle types to search for ","lastModifiedDate":"2021-10-23"},{"lineNumber":730,"author":{"gitId":"EssWhyy"},"content":"2. Socialite shows all contacts matching all given input keywords in the UI, and the number of contacts found.","lastModifiedDate":"2021-10-23"},{"lineNumber":731,"author":{"gitId":"EssWhyy"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":732,"author":{"gitId":"EssWhyy"},"content":"    Use case ends.","lastModifiedDate":"2021-10-23"},{"lineNumber":733,"author":{"gitId":"EssWhyy"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":734,"author":{"gitId":"EssWhyy"},"content":"*Extensions*","lastModifiedDate":"2021-10-23"},{"lineNumber":735,"author":{"gitId":"EssWhyy"},"content":"* 2a. No contacts match all given keywords, blank list is returned","lastModifiedDate":"2021-10-23"},{"lineNumber":736,"author":{"gitId":"EssWhyy"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":737,"author":{"gitId":"EssWhyy"},"content":"    Use case ends.","lastModifiedDate":"2021-10-23"},{"lineNumber":738,"author":{"gitId":"stanley-1"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":739,"author":{"gitId":"-"},"content":"*{More to be added}*","lastModifiedDate":"2020-05-23"},{"lineNumber":740,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":741,"author":{"gitId":"stanley-1"},"content":"\u003cbr/\u003e","lastModifiedDate":"2021-09-24"},{"lineNumber":742,"author":{"gitId":"stanley-1"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":743,"author":{"gitId":"stanley-1"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":744,"author":{"gitId":"stanley-1"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":745,"author":{"gitId":"stanley-1"},"content":"### Non-Functional Requirements \u003ca name\u003d\"nfr\"\u003e\u003c/a\u003e","lastModifiedDate":"2021-09-24"},{"lineNumber":746,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":747,"author":{"gitId":"-"},"content":"1.  Should work on any _mainstream OS_ as long as it has Java `11` or above installed.","lastModifiedDate":"2020-05-23"},{"lineNumber":748,"author":{"gitId":"-"},"content":"2.  Should be able to hold up to 1000 persons without a noticeable sluggishness in performance for typical usage.","lastModifiedDate":"2020-05-23"},{"lineNumber":749,"author":{"gitId":"david-eom"},"content":"3.  Should be able to keep track of at least 1000 past commands without noticeable lag when tracking past commands.","lastModifiedDate":"2021-10-21"},{"lineNumber":750,"author":{"gitId":"david-eom"},"content":"4.  Should be intuitive enough for users of all technical backgrounds to operate.","lastModifiedDate":"2021-10-21"},{"lineNumber":751,"author":{"gitId":"david-eom"},"content":"5.  A user with above average typing speed for regular English text (i.e. not code, not system admin commands) should be able to accomplish most of the tasks faster using commands than using the mouse.","lastModifiedDate":"2021-10-21"},{"lineNumber":752,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":753,"author":{"gitId":"-"},"content":"*{More to be added}*","lastModifiedDate":"2020-05-23"},{"lineNumber":754,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":755,"author":{"gitId":"stanley-1"},"content":"### Glossary \u003ca name\u003d\"glossary\"\u003e\u003c/a\u003e","lastModifiedDate":"2021-09-24"},{"lineNumber":756,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":757,"author":{"gitId":"-"},"content":"* **Mainstream OS**: Windows, Linux, Unix, OS-X","lastModifiedDate":"2020-05-23"},{"lineNumber":758,"author":{"gitId":"-"},"content":"* **Private contact detail**: A contact detail that is not meant to be shared with others","lastModifiedDate":"2020-05-23"},{"lineNumber":759,"author":{"gitId":"stanley-1"},"content":"* **Social Media**:  Various communication platforms such as Instagram, Facebook, Twitter, TikTok, Telegram","lastModifiedDate":"2021-09-24"},{"lineNumber":760,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":761,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":762,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":763,"author":{"gitId":"-"},"content":"## **Appendix: Instructions for manual testing**","lastModifiedDate":"2020-05-23"},{"lineNumber":764,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":765,"author":{"gitId":"-"},"content":"Given below are instructions to test the app manually.","lastModifiedDate":"2020-05-23"},{"lineNumber":766,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":767,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** These instructions only provide a starting point for testers to work on;","lastModifiedDate":"2020-05-23"},{"lineNumber":768,"author":{"gitId":"-"},"content":"testers are expected to do more *exploratory* testing.","lastModifiedDate":"2020-05-23"},{"lineNumber":769,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":770,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":771,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":772,"author":{"gitId":"-"},"content":"### Launch and shutdown","lastModifiedDate":"2020-05-23"},{"lineNumber":773,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":774,"author":{"gitId":"-"},"content":"1. Initial launch","lastModifiedDate":"2020-05-23"},{"lineNumber":775,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":776,"author":{"gitId":"-"},"content":"   1. Download the jar file and copy into an empty folder","lastModifiedDate":"2020-05-23"},{"lineNumber":777,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":778,"author":{"gitId":"-"},"content":"   1. Double-click the jar file Expected: Shows the GUI with a set of sample contacts. The window size may not be optimum.","lastModifiedDate":"2020-05-23"},{"lineNumber":779,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":780,"author":{"gitId":"-"},"content":"1. Saving window preferences","lastModifiedDate":"2020-05-23"},{"lineNumber":781,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":782,"author":{"gitId":"-"},"content":"   1. Resize the window to an optimum size. Move the window to a different location. Close the window.","lastModifiedDate":"2020-05-23"},{"lineNumber":783,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":784,"author":{"gitId":"-"},"content":"   1. Re-launch the app by double-clicking the jar file.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":785,"author":{"gitId":"-"},"content":"       Expected: The most recent window size and location is retained.","lastModifiedDate":"2020-05-23"},{"lineNumber":786,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":787,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"},{"lineNumber":788,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":789,"author":{"gitId":"-"},"content":"### Deleting a person","lastModifiedDate":"2020-05-23"},{"lineNumber":790,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":791,"author":{"gitId":"-"},"content":"1. Deleting a person while all persons are being shown","lastModifiedDate":"2020-05-23"},{"lineNumber":792,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":793,"author":{"gitId":"-"},"content":"   1. Prerequisites: List all persons using the `list` command. Multiple persons in the list.","lastModifiedDate":"2020-05-23"},{"lineNumber":794,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":795,"author":{"gitId":"-"},"content":"   1. Test case: `delete 1`\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":796,"author":{"gitId":"-"},"content":"      Expected: First contact is deleted from the list. Details of the deleted contact shown in the status message. Timestamp in the status bar is updated.","lastModifiedDate":"2020-05-23"},{"lineNumber":797,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":798,"author":{"gitId":"-"},"content":"   1. Test case: `delete 0`\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":799,"author":{"gitId":"-"},"content":"      Expected: No person is deleted. Error details shown in the status message. Status bar remains the same.","lastModifiedDate":"2020-05-23"},{"lineNumber":800,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":801,"author":{"gitId":"-"},"content":"   1. Other incorrect delete commands to try: `delete`, `delete x`, `...` (where x is larger than the list size)\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":802,"author":{"gitId":"-"},"content":"      Expected: Similar to previous.","lastModifiedDate":"2020-05-23"},{"lineNumber":803,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":804,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"},{"lineNumber":805,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":806,"author":{"gitId":"-"},"content":"### Saving data","lastModifiedDate":"2020-05-23"},{"lineNumber":807,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":808,"author":{"gitId":"-"},"content":"1. Dealing with missing/corrupted data files","lastModifiedDate":"2020-05-23"},{"lineNumber":809,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":810,"author":{"gitId":"-"},"content":"   1. _{explain how to simulate a missing/corrupted file, and the expected behavior}_","lastModifiedDate":"2020-05-23"},{"lineNumber":811,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":812,"author":{"gitId":"-"},"content":"1. _{ more test cases …​ }_","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"Zacchua":26,"EssWhyy":15,"bnjmnt4n":35,"david-eom":19,"-":339,"stanley-1":378}},{"path":"docs/SettingUp.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: Setting up and getting started","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"## Setting up the project in your computer","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-warning\"\u003e:exclamation: **Caution:**","lastModifiedDate":"2020-06-07"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"Follow the steps in the following guide precisely. Things will not work out if you deviate in some steps.","lastModifiedDate":"2020-06-07"},{"lineNumber":17,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"First, **fork** this repo, and **clone** the fork into your computer.","lastModifiedDate":"2020-06-07"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-06-07"},{"lineNumber":21,"author":{"gitId":"-"},"content":"If you plan to use Intellij IDEA (highly recommended):","lastModifiedDate":"2020-06-07"},{"lineNumber":22,"author":{"gitId":"-"},"content":"1. **Configure the JDK**: Follow the guide [_[se-edu/guides] IDEA: Configuring the JDK_](https://se-education.org/guides/tutorials/intellijJdk.html) to to ensure Intellij is configured to use **JDK 11**.","lastModifiedDate":"2020-06-07"},{"lineNumber":23,"author":{"gitId":"-"},"content":"1. **Import the project as a Gradle project**: Follow the guide [_[se-edu/guides] IDEA: Importing a Gradle project_](https://se-education.org/guides/tutorials/intellijImportGradleProject.html) to import the project into IDEA.\u003cbr\u003e","lastModifiedDate":"2020-06-07"},{"lineNumber":24,"author":{"gitId":"-"},"content":"  :exclamation: Note: Importing a Gradle project is slightly different from importing a normal Java project.","lastModifiedDate":"2020-06-07"},{"lineNumber":25,"author":{"gitId":"-"},"content":"1. **Verify the setup**:","lastModifiedDate":"2020-06-07"},{"lineNumber":26,"author":{"gitId":"david-eom"},"content":"   1. Run the `Main` and try a few commands.","lastModifiedDate":"2021-10-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"   1. [Run the tests](Testing.md) to ensure they all pass.","lastModifiedDate":"2020-06-07"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-06-07"},{"lineNumber":29,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"## Before writing code","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"1. **Configure the coding style**","lastModifiedDate":"2020-06-07"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"   If using IDEA, follow the guide [_[se-edu/guides] IDEA: Configuring the code style_](https://se-education.org/guides/tutorials/intellijCodeStyle.html) to set up IDEA\u0027s coding style to match ours.","lastModifiedDate":"2020-09-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"   \u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e:bulb: **Tip:**","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"   Optionally, you can follow the guide [_[se-edu/guides] Using Checkstyle_](https://se-education.org/guides/tutorials/checkstyle.html) to find how to use the CheckStyle within IDEA e.g., to report problems _as_ you write code.","lastModifiedDate":"2020-06-07"},{"lineNumber":40,"author":{"gitId":"-"},"content":"   \u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"1. **Set up CI**","lastModifiedDate":"2020-06-07"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"   This project comes with a GitHub Actions config files (in `.github/workflows` folder). When GitHub detects those files, it will run the CI for your project automatically at each push to the `master` branch or to any PR. No set up required.","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"1. **Learn the design**","lastModifiedDate":"2020-06-07"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"   When you are ready to start coding, we recommend that you get some sense of the overall design by reading about [AddressBook’s architecture](DeveloperGuide.md#architecture).","lastModifiedDate":"2020-06-07"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"1. **Do the tutorials**","lastModifiedDate":"2020-06-07"},{"lineNumber":51,"author":{"gitId":"-"},"content":"   These tutorials will help you get acquainted with the codebase.","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"   * [Tracing code](tutorials/TracingCode.md)","lastModifiedDate":"2020-07-29"},{"lineNumber":54,"author":{"gitId":"-"},"content":"   * [Adding a new command](tutorials/AddRemark.md)","lastModifiedDate":"2020-07-29"},{"lineNumber":55,"author":{"gitId":"-"},"content":"   * [Removing fields](tutorials/RemovingFields.md)","lastModifiedDate":"2021-08-01"}],"authorContributionMap":{"david-eom":1,"-":54}},{"path":"docs/Testing.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: Testing guide","lastModifiedDate":"2020-06-07"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"## Running tests","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"There are two ways to run tests.","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"* **Method 1: Using IntelliJ JUnit test runner**","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"  * To run all tests, right-click on the `src/test/java` folder and choose `Run \u0027All Tests\u0027`","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"  * To run a subset of tests, you can right-click on a test package,","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    test class, or a test and choose `Run \u0027ABC\u0027`","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"* **Method 2: Using Gradle**","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"  * Open a console and run the command `gradlew clean test` (Mac/Linux: `./gradlew clean test`)","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-secondary\"\u003e:link: **Link**: Read [this Gradle Tutorial from the se-edu/guides](https://se-education.org/guides/tutorials/gradle.html) to learn more about using Gradle.","lastModifiedDate":"2020-06-07"},{"lineNumber":23,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"## Types of tests","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"This project has three types of tests:","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"1. *Unit tests* targeting the lowest level methods/classes.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"   e.g. `seedu.address.commons.StringUtilTest`","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"1. *Integration tests* that are checking the integration of multiple code units (those code units are assumed to be working).\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"david-eom"},"content":"   e.g. `StorageManagerTest`","lastModifiedDate":"2021-10-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"1. Hybrids of unit and integration tests. These test are checking multiple code units as well as how the are connected together.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"david-eom"},"content":"   e.g. `LogicManagerTest`","lastModifiedDate":"2021-10-08"}],"authorContributionMap":{"david-eom":2,"-":34}},{"path":"docs/UserGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: User Guide","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"stanley-1"},"content":"Hello there, fellow SociaLites! Welcome to the User Guide for __SociaLite__, a Command Line Interface (CLI) app that connects you with your contact\u0027s social media pages! ","lastModifiedDate":"2021-10-26"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"stanley-1"},"content":"You may be a first-time user trying to set up SociaLite or a returning user hoping to explore advanced features. Fret not, all you need to know about this app can be found in this User Guide!","lastModifiedDate":"2021-10-26"},{"lineNumber":8,"author":{"gitId":"stanley-1"},"content":"Simply follow the path that corresponds to your needs.","lastModifiedDate":"2021-11-01"},{"lineNumber":9,"author":{"gitId":"stanley-1"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":10,"author":{"gitId":"stanley-1"},"content":"| I am a...      | Instructions                                                             |","lastModifiedDate":"2021-11-01"},{"lineNumber":11,"author":{"gitId":"stanley-1"},"content":"| -------------- | ------------------------------------------------------------------------ |","lastModifiedDate":"2021-11-01"},{"lineNumber":12,"author":{"gitId":"stanley-1"},"content":"| new user       | View our [Quick Start](#quick_start) guide to set up SociaLite and try out the features. |","lastModifiedDate":"2021-11-01"},{"lineNumber":13,"author":{"gitId":"stanley-1"},"content":"| returning user | Jump straight to our [Commands](#commands) section to recall how our features work!   |","lastModifiedDate":"2021-11-01"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"stanley-1"},"content":"## Navigation Menu","lastModifiedDate":"2021-11-01"},{"lineNumber":18,"author":{"gitId":"stanley-1"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":19,"author":{"gitId":"stanley-1"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-warning\"\u003e**[Quick Start](#quick_start)**\u003cbr\u003e","lastModifiedDate":"2021-11-01"},{"lineNumber":20,"author":{"gitId":"stanley-1"},"content":"This section teaches you how to install **SociaLite** and includes sample commands for you to try out.","lastModifiedDate":"2021-11-01"},{"lineNumber":21,"author":{"gitId":"stanley-1"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-11-01"},{"lineNumber":22,"author":{"gitId":"stanley-1"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":23,"author":{"gitId":"stanley-1"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-warning\"\u003e**[Standard Notations](#standard_notations)**\u003cbr\u003e","lastModifiedDate":"2021-11-01"},{"lineNumber":24,"author":{"gitId":"stanley-1"},"content":"This section teaches you how to interpret instructions in this User Guide.","lastModifiedDate":"2021-11-01"},{"lineNumber":25,"author":{"gitId":"stanley-1"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-11-01"},{"lineNumber":26,"author":{"gitId":"stanley-1"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":27,"author":{"gitId":"stanley-1"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-warning\"\u003e**[Commands](#commands)**\u003cbr\u003e","lastModifiedDate":"2021-11-01"},{"lineNumber":28,"author":{"gitId":"stanley-1"},"content":"This section gives you comprehensive details of all the commands on SociaLite.","lastModifiedDate":"2021-11-01"},{"lineNumber":29,"author":{"gitId":"stanley-1"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-11-01"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":31,"author":{"gitId":"stanley-1"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-warning\"\u003e**[FAQ](#faq)**\u003cbr\u003e","lastModifiedDate":"2021-11-01"},{"lineNumber":32,"author":{"gitId":"stanley-1"},"content":"This section answers frequently asked questions about SociaLite.","lastModifiedDate":"2021-11-01"},{"lineNumber":33,"author":{"gitId":"stanley-1"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-11-01"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":35,"author":{"gitId":"stanley-1"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-warning\"\u003e**[Command Index](#index)**\u003cbr\u003e","lastModifiedDate":"2021-11-03"},{"lineNumber":36,"author":{"gitId":"stanley-1"},"content":"This section contains a glossary of all the commands and quick examples for reference.","lastModifiedDate":"2021-11-01"},{"lineNumber":37,"author":{"gitId":"stanley-1"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-11-01"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":39,"author":{"gitId":"stanley-1"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-11-01"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"stanley-1"},"content":"## Quick Start \u003ca name\u003d\"quick_start\"\u003e\u003c/a\u003e","lastModifiedDate":"2021-10-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"stanley-1"},"content":"1. Ensure you have `Java 11` or above installed on your Computer.","lastModifiedDate":"2021-10-26"},{"lineNumber":44,"author":{"gitId":"david-eom"},"content":"   If you already have `Java` installed, you might want to type in `java -version` in your command window to ensure you are running on the correct version of `Java`!","lastModifiedDate":"2021-10-31"},{"lineNumber":45,"author":{"gitId":"david-eom"},"content":"   If you don\u0027t have `Java 11`, simply click [here](https://www.oracle.com/java/technologies/downloads/), and navigate to the \"Java SE Development Kit 11.*.**\" section to download the latest Java Development Kit.","lastModifiedDate":"2021-10-31"},{"lineNumber":46,"author":{"gitId":"stanley-1"},"content":"2. Download the latest `socialite.jar` from [here](https://github.com/AY2122S1-CS2103T-F11-4/tp/releases).","lastModifiedDate":"2021-10-26"},{"lineNumber":47,"author":{"gitId":"stanley-1"},"content":"3. Copy the file to the folder you want to use as the _home folder_ for your SociaLite.","lastModifiedDate":"2021-10-26"},{"lineNumber":48,"author":{"gitId":"david-eom"},"content":"4. Double-click the file to start the app. SociaLite should start in a few seconds! The app contains some sample data for you to experiment with to get familiar with the commands.\u003cbr\u003e","lastModifiedDate":"2021-10-31"},{"lineNumber":49,"author":{"gitId":"stanley-1"},"content":"   ![Ui](images/UpdatedUI.png)","lastModifiedDate":"2021-10-25"},{"lineNumber":50,"author":{"gitId":"stanley-1"},"content":"5. Type the command in the command box and press Enter to execute it. e.g. typing **`help`** and pressing Enter will open the help window.\u003cbr\u003e","lastModifiedDate":"2021-10-26"},{"lineNumber":51,"author":{"gitId":"stanley-1"},"content":"   Here are some sample commands to get you started with SociaLite:","lastModifiedDate":"2021-10-26"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":53,"author":{"gitId":"stanley-1"},"content":"   * **`add`** `add n/Alex Yeoh p/87438807 t/friends fb/alex.yeoh ig/alex.yeoh tele/alyeoh tiktok/alex.yeoh`: Adds a contact named `Alex Yeoh` to SociaLite.","lastModifiedDate":"2021-10-26"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":55,"author":{"gitId":"stanley-1"},"content":"   * **`find`** `find Alex` : Searches SociaLite for a contact named `Alex` and displays the contact\u0027s information.","lastModifiedDate":"2021-10-26"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"stanley-1"},"content":"   * **`list`** : Displays all contacts stored on SociaLite.","lastModifiedDate":"2021-10-26"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"stanley-1"},"content":"   * **`edit`** `edit 1 n/Alexis Yeoh` : Edits the name of the contact at the first position of the list to `Alexis Yeoh`.","lastModifiedDate":"2021-10-26"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":61,"author":{"gitId":"stanley-1"},"content":"   * **`delete`** `delete 3` : Deletes the 3rd contact shown in the current list.","lastModifiedDate":"2021-11-03"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":63,"author":{"gitId":"stanley-1"},"content":"   * **`clear`** : Deletes all contacts. You will find this handy when deleting the sample contacts stored on SociaLite.","lastModifiedDate":"2021-10-26"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"   * **`exit`** : Exits the app.","lastModifiedDate":"2020-05-23"},{"lineNumber":66,"author":{"gitId":"stanley-1"},"content":"6. Refer to the [Commands](#commands) below for details of each command.","lastModifiedDate":"2021-11-01"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"stanley-1"},"content":"## Standard Notations \u003ca name\u003d\"standard_notations\"\u003e\u003c/a\u003e ","lastModifiedDate":"2021-11-01"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-info\"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"stanley-1"},"content":"**:information_source: Hold your horses SociaLites! Before you venture any further, here are some standard notations for you to take note of:**\u003cbr\u003e","lastModifiedDate":"2021-10-26"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"stanley-1"},"content":"* You provide words in `UPPER_CASE` as input.\u003cbr\u003e","lastModifiedDate":"2021-10-26"},{"lineNumber":77,"author":{"gitId":"stanley-1"},"content":"  e.g. in `add n/NAME`, `NAME` is an input which can be used as `add n/John Doe`.","lastModifiedDate":"2021-10-26"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"* Items in square brackets are optional.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"  e.g `n/NAME [t/TAG]` can be used as `n/John Doe t/friend` or as `n/John Doe`.","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"stanley-1"},"content":"* Items with `…`​ after them can be used any number of times.\u003cbr\u003e","lastModifiedDate":"2021-10-26"},{"lineNumber":83,"author":{"gitId":"-"},"content":"  e.g. `[t/TAG]…​` can be used as ` ` (i.e. 0 times), `t/friend`, `t/friend t/family` etc.","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"stanley-1"},"content":"* The `|` vertical bar indicates a choice that you have to make between the left and right options.\u003cbr\u003e","lastModifiedDate":"2021-11-03"},{"lineNumber":86,"author":{"gitId":"stanley-1"},"content":"  e.g. in `[date/NAME:YYYY-MM-DD[:monthly|:yearly]]`, you can enter `date/Birthday:2021-01-01:yearly` to indicate an annual event called `Birthday` that repeats on 1 Jan yearly.","lastModifiedDate":"2021-11-03"},{"lineNumber":87,"author":{"gitId":"stanley-1"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":88,"author":{"gitId":"stanley-1"},"content":"* You may type your inputs in any order.\u003cbr\u003e","lastModifiedDate":"2021-10-26"},{"lineNumber":89,"author":{"gitId":"-"},"content":"  e.g. if the command specifies `n/NAME p/PHONE_NUMBER`, `p/PHONE_NUMBER n/NAME` is also acceptable.","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"stanley-1"},"content":"* If an input for a particular field is expected only once in the command but you specified it multiple times, only the last occurrence of the input will be taken.\u003cbr\u003e","lastModifiedDate":"2021-10-26"},{"lineNumber":92,"author":{"gitId":"-"},"content":"  e.g. if you specify `p/12341234 p/56785678`, only `p/56785678` will be taken.","lastModifiedDate":"2021-02-04"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":94,"author":{"gitId":"stanley-1"},"content":"* If you type inputs for commands that do not require any additional information (such as `list`, `exit` and `clear`), they will be ignored.\u003cbr\u003e","lastModifiedDate":"2021-10-26"},{"lineNumber":95,"author":{"gitId":"stanley-1"},"content":"  e.g. if the command specifies `list 123`, it will be interpreted as `list`.","lastModifiedDate":"2021-10-25"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-03"},{"lineNumber":97,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"stanley-1"},"content":"As you explore the features that SociaLite has to offer, look out for these boxes:","lastModifiedDate":"2021-11-01"},{"lineNumber":100,"author":{"gitId":"stanley-1"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":101,"author":{"gitId":"stanley-1"},"content":"The blue boxes tell you the acceptable fields that you can provide for a particular command:","lastModifiedDate":"2021-11-03"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":103,"author":{"gitId":"stanley-1"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2021-11-01"},{"lineNumber":104,"author":{"gitId":"stanley-1"},"content":"**:mag_right: Format:**","lastModifiedDate":"2021-11-01"},{"lineNumber":105,"author":{"gitId":"stanley-1"},"content":"`add n/NAME p/PHONE_NUMBER [t/TAG]…​ [date/NAME:YYYY-MM-DD[:monthly|:yearly]]…​ [fb/FACEBOOK] [ig/INSTAGRAM] [tele/TELEGRAM] [tiktok/TIKTOK] [twitter/TWITTER]`","lastModifiedDate":"2021-11-01"},{"lineNumber":106,"author":{"gitId":"stanley-1"},"content":"* Detail 1","lastModifiedDate":"2021-11-01"},{"lineNumber":107,"author":{"gitId":"stanley-1"},"content":"* Detail 2","lastModifiedDate":"2021-11-01"},{"lineNumber":108,"author":{"gitId":"stanley-1"},"content":"* Detail 3","lastModifiedDate":"2021-11-01"},{"lineNumber":109,"author":{"gitId":"stanley-1"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-11-01"},{"lineNumber":110,"author":{"gitId":"stanley-1"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":111,"author":{"gitId":"stanley-1"},"content":"If you still aren\u0027t sure of how a particular command works, the green boxes provide you with examples that you can try out:","lastModifiedDate":"2021-11-03"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":113,"author":{"gitId":"stanley-1"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-success\"\u003e","lastModifiedDate":"2021-11-01"},{"lineNumber":114,"author":{"gitId":"stanley-1"},"content":"**:heavy_check_mark: Example:** `add n/Alex Yeoh p/87438807 t/friends fb/alex.yeoh ig/alex.yeoh tele/alyeoh tiktok/alex.yeoh date/birthday:2000-01-01:yearly`","lastModifiedDate":"2021-11-01"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":116,"author":{"gitId":"stanley-1"},"content":"Adds a new contact called \"Alex Yeoh\" with phone number \"87438807\" to SociaLite.","lastModifiedDate":"2021-11-01"},{"lineNumber":117,"author":{"gitId":"stanley-1"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-11-01"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":119,"author":{"gitId":"stanley-1"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-10-25"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":121,"author":{"gitId":"stanley-1"},"content":"## Commands \u003ca name\u003d\"commands\"\u003e\u003c/a\u003e","lastModifiedDate":"2021-11-01"},{"lineNumber":122,"author":{"gitId":"stanley-1"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":123,"author":{"gitId":"stanley-1"},"content":"This section provides you with comprehensive details of all the commands available on SociaLite. ","lastModifiedDate":"2021-11-01"},{"lineNumber":124,"author":{"gitId":"stanley-1"},"content":"Simply click on any command below to learn more about it!","lastModifiedDate":"2021-11-01"},{"lineNumber":125,"author":{"gitId":"stanley-1"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":126,"author":{"gitId":"stanley-1"},"content":"| `COMMAND` | Description |","lastModifiedDate":"2021-11-01"},{"lineNumber":127,"author":{"gitId":"stanley-1"},"content":"| --------- | ----------- |","lastModifiedDate":"2021-11-01"},{"lineNumber":128,"author":{"gitId":"stanley-1"},"content":"| [`add n/NAME p/PHONE_NUMBER ...`](#add) | Add a contact |","lastModifiedDate":"2021-11-03"},{"lineNumber":129,"author":{"gitId":"stanley-1"},"content":"| [`list`](#list) | List all contacts |","lastModifiedDate":"2021-11-01"},{"lineNumber":130,"author":{"gitId":"stanley-1"},"content":"| [`CLICK`](#click) | Access a contact\u0027s social media page |","lastModifiedDate":"2021-11-01"},{"lineNumber":131,"author":{"gitId":"stanley-1"},"content":"| [`↑`/`↓`](#scroll) | Track history of commands |","lastModifiedDate":"2021-11-01"},{"lineNumber":132,"author":{"gitId":"stanley-1"},"content":"| [`edit INDEX ...`](#edit) | Edit a contact |","lastModifiedDate":"2021-11-03"},{"lineNumber":133,"author":{"gitId":"stanley-1"},"content":"| [`edit INDEX [t/TAG]`](#edit_tag) | Create / Edit tags for existing contacts |","lastModifiedDate":"2021-11-01"},{"lineNumber":134,"author":{"gitId":"stanley-1"},"content":"| [`edit INDEX t/`](#delete_tag) | Delete all tags from a contact |","lastModifiedDate":"2021-11-01"},{"lineNumber":135,"author":{"gitId":"stanley-1"},"content":"| [`edit INDEX [p/PLATFORM]`](#edit_platform) | Modify social media handles for a contact |","lastModifiedDate":"2021-11-01"},{"lineNumber":136,"author":{"gitId":"stanley-1"},"content":"| [`edit INDEX [date/NAME:YYYY-MM-DD[:monthly|:yearly]]…​`](#edit_dates) | Modify dates for a contact |","lastModifiedDate":"2021-11-03"},{"lineNumber":137,"author":{"gitId":"stanley-1"},"content":"| [`delete INDEX`](#delete) | Delete a contact |","lastModifiedDate":"2021-11-03"},{"lineNumber":138,"author":{"gitId":"stanley-1"},"content":"| [`clear`](#clear) | Delete all contacts |","lastModifiedDate":"2021-11-01"},{"lineNumber":139,"author":{"gitId":"stanley-1"},"content":"| [`find NAME`](#find) | Find a contact by name |","lastModifiedDate":"2021-11-03"},{"lineNumber":140,"author":{"gitId":"stanley-1"},"content":"| [`find t/TAG`](#find_tag) | Find a contact through associated tags |","lastModifiedDate":"2021-11-01"},{"lineNumber":141,"author":{"gitId":"stanley-1"},"content":"| [`find p/PLATFORM`](#find_platform) | Find a contact through associated social media platforms |","lastModifiedDate":"2021-11-01"},{"lineNumber":142,"author":{"gitId":"stanley-1"},"content":"| [`picture INDEX`](#picture) | Modify profile picture of a contact |","lastModifiedDate":"2021-11-03"},{"lineNumber":143,"author":{"gitId":"stanley-1"},"content":"| [`share INDEX`](#share) | Copy contact information to system clipboard |","lastModifiedDate":"2021-11-03"},{"lineNumber":144,"author":{"gitId":"stanley-1"},"content":"| [`pin INDEX`](#pin) | Pin contact card on the top of the person list |","lastModifiedDate":"2021-11-03"},{"lineNumber":145,"author":{"gitId":"stanley-1"},"content":"| [`unpin INDEX`](#unpin) | Unpin contact card from the top of the person list |","lastModifiedDate":"2021-11-03"},{"lineNumber":146,"author":{"gitId":"stanley-1"},"content":"| [`remark INDEX r/[TEXT]`](#remark) | Add special notes about a contact |","lastModifiedDate":"2021-11-03"},{"lineNumber":147,"author":{"gitId":"stanley-1"},"content":"| [`help`](#help) | Access User Guide |","lastModifiedDate":"2021-11-01"},{"lineNumber":148,"author":{"gitId":"stanley-1"},"content":"| [`help COMMAND`](#help_command) | Access in-app guidance for selected commands |","lastModifiedDate":"2021-11-01"},{"lineNumber":149,"author":{"gitId":"stanley-1"},"content":"| [`exit`](#exit) | Exit the program |","lastModifiedDate":"2021-11-01"},{"lineNumber":150,"author":{"gitId":"stanley-1"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"stanley-1"},"content":"### Add a person: `add n/NAME p/PHONE_NUMBER ...` \u003ca name\u003d\"add\"\u003e\u003c/a\u003e","lastModifiedDate":"2021-11-03"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":154,"author":{"gitId":"-"},"content":"Adds a person to the address book.","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":156,"author":{"gitId":"stanley-1"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2021-11-01"},{"lineNumber":157,"author":{"gitId":"stanley-1"},"content":"**:mag_right: Format:**","lastModifiedDate":"2021-11-01"},{"lineNumber":158,"author":{"gitId":"stanley-1"},"content":"`add n/NAME p/PHONE_NUMBER [t/TAG]…​ [date/NAME:YYYY-MM-DD[:monthly|:yearly]]…​ [fb/FACEBOOK] [ig/INSTAGRAM] [tele/TELEGRAM] [tiktok/TIKTOK] [twitter/TWITTER]`","lastModifiedDate":"2021-11-01"},{"lineNumber":159,"author":{"gitId":"stanley-1"},"content":"* A person can have any number of tags and dates (including 0).","lastModifiedDate":"2021-11-01"},{"lineNumber":160,"author":{"gitId":"stanley-1"},"content":"* To add a contact to SociaLite, you need to provide the **name** and a **unique phone number** for the person!","lastModifiedDate":"2021-11-03"},{"lineNumber":161,"author":{"gitId":"stanley-1"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-11-01"},{"lineNumber":162,"author":{"gitId":"stanley-1"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":163,"author":{"gitId":"stanley-1"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-success\"\u003e","lastModifiedDate":"2021-11-01"},{"lineNumber":164,"author":{"gitId":"stanley-1"},"content":"**:heavy_check_mark: Example:** `add n/Alex Yeoh p/87438807 t/friends fb/alex.yeoh ig/alex.yeoh tele/alyeoh tiktok/alex.yeoh date/birthday:2000-01-01:yearly`","lastModifiedDate":"2021-11-01"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":166,"author":{"gitId":"stanley-1"},"content":"Adds a new contact called \"Alex Yeoh\" with phone number \"87438807\" to SociaLite.","lastModifiedDate":"2021-11-01"},{"lineNumber":167,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":169,"author":{"gitId":"stanley-1"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-success\"\u003e","lastModifiedDate":"2021-11-01"},{"lineNumber":170,"author":{"gitId":"stanley-1"},"content":"**:heavy_check_mark: Example:** `add n/Charlotte Oliveiro p/93210284 t/neighbours fb/charlotte.oli tele/olichar twitter/charolive date/wedding anniversary:2020-01-01:yearly`","lastModifiedDate":"2021-11-01"},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":172,"author":{"gitId":"stanley-1"},"content":"Adds a new contact called \"Charlotte Oliveiro\" with phone number \"93210284\" to SociaLite.","lastModifiedDate":"2021-11-01"},{"lineNumber":173,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-11-01"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":175,"author":{"gitId":"stanley-1"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-10-25"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":177,"author":{"gitId":"stanley-1"},"content":"### List all persons : `list` \u003ca name\u003d\"list\"\u003e\u003c/a\u003e","lastModifiedDate":"2021-11-01"},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":179,"author":{"gitId":"-"},"content":"Shows a list of all persons in the address book.","lastModifiedDate":"2020-05-23"},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":181,"author":{"gitId":"stanley-1"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2021-11-01"},{"lineNumber":182,"author":{"gitId":"stanley-1"},"content":"**:mag_right: Format:**","lastModifiedDate":"2021-11-01"},{"lineNumber":183,"author":{"gitId":"stanley-1"},"content":"`list`","lastModifiedDate":"2021-11-01"},{"lineNumber":184,"author":{"gitId":"stanley-1"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-11-01"},{"lineNumber":185,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":186,"author":{"gitId":"stanley-1"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-10-25"},{"lineNumber":187,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":188,"author":{"gitId":"stanley-1"},"content":"### Access a contact\u0027s social media page \u003ca name\u003d\"click\"\u003e\u003c/a\u003e","lastModifiedDate":"2021-11-01"},{"lineNumber":189,"author":{"gitId":"stanley-1"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":190,"author":{"gitId":"stanley-1"},"content":"Clicking on a contact\u0027s social media handle will immediately launch the user\u0027s default browser and open the contact\u0027s social media profile.","lastModifiedDate":"2021-11-01"},{"lineNumber":191,"author":{"gitId":"stanley-1"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":192,"author":{"gitId":"stanley-1"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-success\"\u003e","lastModifiedDate":"2021-11-01"},{"lineNumber":193,"author":{"gitId":"stanley-1"},"content":"**:heavy_check_mark: Example:** ","lastModifiedDate":"2021-11-01"},{"lineNumber":194,"author":{"gitId":"stanley-1"},"content":"Clicking on `@tan.david` launches the user\u0027s default browser and brings the user to David Tan\u0027s Facebook page.","lastModifiedDate":"2021-11-01"},{"lineNumber":195,"author":{"gitId":"stanley-1"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":196,"author":{"gitId":"stanley-1"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-11-01"},{"lineNumber":197,"author":{"gitId":"stanley-1"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":198,"author":{"gitId":"stanley-1"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-11-01"},{"lineNumber":199,"author":{"gitId":"stanley-1"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":200,"author":{"gitId":"stanley-1"},"content":"### Track history of commands: `↑` or `↓` arrow keys \u003ca name\u003d\"scroll\"\u003e\u003c/a\u003e","lastModifiedDate":"2021-11-01"},{"lineNumber":201,"author":{"gitId":"stanley-1"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":202,"author":{"gitId":"stanley-1"},"content":"Scroll through your history of commands using the `↑` or `↓` arrow keys.","lastModifiedDate":"2021-11-01"},{"lineNumber":203,"author":{"gitId":"stanley-1"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":204,"author":{"gitId":"stanley-1"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2021-11-01"},{"lineNumber":205,"author":{"gitId":"stanley-1"},"content":"**:mag_right: Format:**","lastModifiedDate":"2021-11-01"},{"lineNumber":206,"author":{"gitId":"stanley-1"},"content":"`↑` or `↓`","lastModifiedDate":"2021-11-01"},{"lineNumber":207,"author":{"gitId":"stanley-1"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-11-01"},{"lineNumber":208,"author":{"gitId":"stanley-1"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":209,"author":{"gitId":"stanley-1"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-success\"\u003e","lastModifiedDate":"2021-11-01"},{"lineNumber":210,"author":{"gitId":"stanley-1"},"content":"**:heavy_check_mark: Example:** `↑` backtracks to the previous command provided as input.","lastModifiedDate":"2021-11-01"},{"lineNumber":211,"author":{"gitId":"stanley-1"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":212,"author":{"gitId":"stanley-1"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-11-01"},{"lineNumber":213,"author":{"gitId":"stanley-1"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":214,"author":{"gitId":"stanley-1"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-success\"\u003e","lastModifiedDate":"2021-11-01"},{"lineNumber":215,"author":{"gitId":"stanley-1"},"content":"**:heavy_check_mark: Example:** `↓` advances to subsequent commands stored in history.","lastModifiedDate":"2021-11-01"},{"lineNumber":216,"author":{"gitId":"stanley-1"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":217,"author":{"gitId":"stanley-1"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-11-01"},{"lineNumber":218,"author":{"gitId":"stanley-1"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":219,"author":{"gitId":"stanley-1"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-11-01"},{"lineNumber":220,"author":{"gitId":"stanley-1"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":221,"author":{"gitId":"stanley-1"},"content":"### Edit a person : `edit INDEX ...` \u003ca name\u003d\"edit\"\u003e\u003c/a\u003e","lastModifiedDate":"2021-11-03"},{"lineNumber":222,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":223,"author":{"gitId":"-"},"content":"Edits an existing person in the address book.","lastModifiedDate":"2020-05-23"},{"lineNumber":224,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":225,"author":{"gitId":"stanley-1"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2021-11-01"},{"lineNumber":226,"author":{"gitId":"stanley-1"},"content":"**:mag_right: Format:**","lastModifiedDate":"2021-11-01"},{"lineNumber":227,"author":{"gitId":"stanley-1"},"content":"`edit INDEX [n/NAME] [p/PHONE] [r/REMARK] [t/TAG]…​ [date/NAME:YYYY-MM-DD[:monthly|:yearly]]…​ [fb/FACEBOOK] [ig/INSTAGRAM] [tele/TELEGRAM] [tiktok/TIKTOK] [twitter/TWITTER]`","lastModifiedDate":"2021-11-01"},{"lineNumber":228,"author":{"gitId":"stanley-1"},"content":"* Edits the person at the specified `INDEX`. The index refers to the index number shown in the displayed person list. ","lastModifiedDate":"2021-11-01"},{"lineNumber":229,"author":{"gitId":"stanley-1"},"content":"* The index **must be a positive integer** 1, 2, 3, …​","lastModifiedDate":"2021-11-01"},{"lineNumber":230,"author":{"gitId":"-"},"content":"* At least one of the optional fields must be provided.","lastModifiedDate":"2020-05-23"},{"lineNumber":231,"author":{"gitId":"stanley-1"},"content":"* Users can opt to change any fields associated with a contact as long as they prepend the argument with the corresponding flags according to the format above.","lastModifiedDate":"2021-10-25"},{"lineNumber":232,"author":{"gitId":"-"},"content":"* Existing values will be updated to the input values.","lastModifiedDate":"2020-05-23"},{"lineNumber":233,"author":{"gitId":"-"},"content":"* When editing tags, the existing tags of the person will be removed i.e adding of tags is not cumulative.","lastModifiedDate":"2020-05-23"},{"lineNumber":234,"author":{"gitId":"-"},"content":"* You can remove all the person’s tags by typing `t/` without","lastModifiedDate":"2020-05-23"},{"lineNumber":235,"author":{"gitId":"-"},"content":"    specifying any tags after it.","lastModifiedDate":"2020-05-23"},{"lineNumber":236,"author":{"gitId":"bnjmnt4n"},"content":"* When editing dates, all existing dates of the person will be removed i.e adding of dates is not cumulative.","lastModifiedDate":"2021-10-23"},{"lineNumber":237,"author":{"gitId":"bnjmnt4n"},"content":"* You can remove all the person’s dates by typing `date/` without","lastModifiedDate":"2021-10-23"},{"lineNumber":238,"author":{"gitId":"bnjmnt4n"},"content":"  specifying any tags after it.","lastModifiedDate":"2021-10-23"},{"lineNumber":239,"author":{"gitId":"stanley-1"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-11-01"},{"lineNumber":240,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":241,"author":{"gitId":"stanley-1"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-success\"\u003e","lastModifiedDate":"2021-11-01"},{"lineNumber":242,"author":{"gitId":"stanley-1"},"content":"**:heavy_check_mark: Example:** `edit 1 p/91234567 fb/Yalex19` ","lastModifiedDate":"2021-11-01"},{"lineNumber":243,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":244,"author":{"gitId":"stanley-1"},"content":"Edits the phone number and Facebook handle of the 1st person to be `91234567` and `Yalex19` respectively.","lastModifiedDate":"2021-11-01"},{"lineNumber":245,"author":{"gitId":"stanley-1"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-11-01"},{"lineNumber":246,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":247,"author":{"gitId":"stanley-1"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-success\"\u003e","lastModifiedDate":"2021-11-01"},{"lineNumber":248,"author":{"gitId":"stanley-1"},"content":"**:heavy_check_mark: Example:** `edit 2 n/Betsy Crower t/`","lastModifiedDate":"2021-11-01"},{"lineNumber":249,"author":{"gitId":"stanley-1"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":250,"author":{"gitId":"stanley-1"},"content":"Edits the name of the 2nd person to be `Betsy Crower` and clears all existing tags.","lastModifiedDate":"2021-11-01"},{"lineNumber":251,"author":{"gitId":"stanley-1"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-11-01"},{"lineNumber":252,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":253,"author":{"gitId":"stanley-1"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-10-25"},{"lineNumber":254,"author":{"gitId":"stanley-1"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":255,"author":{"gitId":"stanley-1"},"content":"### Create / Edit tags for existing contacts: `edit INDEX [t/TAG]...` \u003ca name\u003d\"edit_tag\"\u003e\u003c/a\u003e","lastModifiedDate":"2021-11-01"},{"lineNumber":256,"author":{"gitId":"stanley-1"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":257,"author":{"gitId":"stanley-1"},"content":"Modifies tags that are associated with existing contacts in the address book.","lastModifiedDate":"2021-10-25"},{"lineNumber":258,"author":{"gitId":"stanley-1"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":259,"author":{"gitId":"stanley-1"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2021-11-01"},{"lineNumber":260,"author":{"gitId":"stanley-1"},"content":"**:mag_right: Format:**","lastModifiedDate":"2021-11-01"},{"lineNumber":261,"author":{"gitId":"stanley-1"},"content":"`edit INDEX [t/TAG]...`","lastModifiedDate":"2021-11-01"},{"lineNumber":262,"author":{"gitId":"stanley-1"},"content":"* Adds new tags to persons who did not have tags associated with them when they were first added to SociaLite.","lastModifiedDate":"2021-10-25"},{"lineNumber":263,"author":{"gitId":"stanley-1"},"content":"* Deletes all existing tags for the person at the specified `INDEX` and replaces them with tags specified in `[t/TAG]...`","lastModifiedDate":"2021-10-25"},{"lineNumber":264,"author":{"gitId":"Zacchua"},"content":"* The index refers to the index number shown in the displayed person list.","lastModifiedDate":"2021-09-24"},{"lineNumber":265,"author":{"gitId":"Zacchua"},"content":"* The index **must be a positive integer** 1, 2, 3, …​","lastModifiedDate":"2021-10-02"},{"lineNumber":266,"author":{"gitId":"stanley-1"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-11-01"},{"lineNumber":267,"author":{"gitId":"Zacchua"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":268,"author":{"gitId":"stanley-1"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-success\"\u003e","lastModifiedDate":"2021-11-01"},{"lineNumber":269,"author":{"gitId":"stanley-1"},"content":"**:heavy_check_mark: Example:** `edit 1 t/family`","lastModifiedDate":"2021-11-01"},{"lineNumber":270,"author":{"gitId":"stanley-1"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":271,"author":{"gitId":"stanley-1"},"content":"Creates a tag called `family` for the first person in the address book.","lastModifiedDate":"2021-11-01"},{"lineNumber":272,"author":{"gitId":"stanley-1"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-11-01"},{"lineNumber":273,"author":{"gitId":"stanley-1"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":274,"author":{"gitId":"stanley-1"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-success\"\u003e","lastModifiedDate":"2021-11-01"},{"lineNumber":275,"author":{"gitId":"stanley-1"},"content":"**:heavy_check_mark: Example:** `edit 2 t/friend t/neighbour`","lastModifiedDate":"2021-11-01"},{"lineNumber":276,"author":{"gitId":"stanley-1"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":277,"author":{"gitId":"stanley-1"},"content":"Creates tags called `friend` and `neighbour` for the second person in the address book.","lastModifiedDate":"2021-11-01"},{"lineNumber":278,"author":{"gitId":"stanley-1"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-11-01"},{"lineNumber":279,"author":{"gitId":"Zacchua"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":280,"author":{"gitId":"stanley-1"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-10-25"},{"lineNumber":281,"author":{"gitId":"Zacchua"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":282,"author":{"gitId":"stanley-1"},"content":"### Delete tags associated with contacts: `edit INDEX t/` \u003ca name\u003d\"delete_tag\"\u003e\u003c/a\u003e","lastModifiedDate":"2021-11-01"},{"lineNumber":283,"author":{"gitId":"Zacchua"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":284,"author":{"gitId":"Zacchua"},"content":"Deletes tags that are associated with contacts in the address book.","lastModifiedDate":"2021-09-24"},{"lineNumber":285,"author":{"gitId":"Zacchua"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":286,"author":{"gitId":"stanley-1"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2021-11-01"},{"lineNumber":287,"author":{"gitId":"stanley-1"},"content":"**:mag_right: Format:**","lastModifiedDate":"2021-11-01"},{"lineNumber":288,"author":{"gitId":"stanley-1"},"content":"`edit INDEX t/`","lastModifiedDate":"2021-11-01"},{"lineNumber":289,"author":{"gitId":"stanley-1"},"content":"* Deletes all categories tagged to the person at the specified `INDEX`.","lastModifiedDate":"2021-10-25"},{"lineNumber":290,"author":{"gitId":"Zacchua"},"content":"* The index refers to the index number shown in the displayed person list.","lastModifiedDate":"2021-09-24"},{"lineNumber":291,"author":{"gitId":"Zacchua"},"content":"* The index **must be a positive integer** 1, 2, 3, …​","lastModifiedDate":"2021-10-02"},{"lineNumber":292,"author":{"gitId":"stanley-1"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-11-01"},{"lineNumber":293,"author":{"gitId":"Zacchua"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":294,"author":{"gitId":"stanley-1"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-success\"\u003e","lastModifiedDate":"2021-11-01"},{"lineNumber":295,"author":{"gitId":"stanley-1"},"content":"**:heavy_check_mark: Example:** `edit 2 t/` ","lastModifiedDate":"2021-11-01"},{"lineNumber":296,"author":{"gitId":"stanley-1"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":297,"author":{"gitId":"stanley-1"},"content":"Deletes all tags associated with the 2nd person in the address book.","lastModifiedDate":"2021-11-01"},{"lineNumber":298,"author":{"gitId":"stanley-1"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-11-01"},{"lineNumber":299,"author":{"gitId":"Zacchua"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":300,"author":{"gitId":"stanley-1"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-10-25"},{"lineNumber":301,"author":{"gitId":"Zacchua"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":302,"author":{"gitId":"stanley-1"},"content":"### Add / Edit social media handles for existing contacts: `edit INDEX [fb/FACEBOOK] [ig/INSTAGRAM] [tele/TELEGRAM] [tiktok/TIKTOK] [twitter/TWITTER]` \u003ca name\u003d\"edit_platform\"\u003e\u003c/a\u003e","lastModifiedDate":"2021-11-01"},{"lineNumber":303,"author":{"gitId":"stanley-1"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":304,"author":{"gitId":"stanley-1"},"content":"Modifies social media handles that are associated with existing contacts in the address book.","lastModifiedDate":"2021-10-25"},{"lineNumber":305,"author":{"gitId":"Zacchua"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":306,"author":{"gitId":"stanley-1"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2021-11-01"},{"lineNumber":307,"author":{"gitId":"stanley-1"},"content":"**:mag_right: Format:**","lastModifiedDate":"2021-11-01"},{"lineNumber":308,"author":{"gitId":"stanley-1"},"content":"`edit INDEX [fb/FACEBOOK] [ig/INSTAGRAM] [tele/TELEGRAM] [tiktok/TIKTOK] [twitter/TWITTER]`","lastModifiedDate":"2021-11-01"},{"lineNumber":309,"author":{"gitId":"stanley-1"},"content":"* Adds a new handle for contacts who did not have that specific handle pegged with them when they were first added to SociaLite.","lastModifiedDate":"2021-10-25"},{"lineNumber":310,"author":{"gitId":"stanley-1"},"content":"* Replaces the handle for the person at the specified `INDEX` according to the flag and input provided.","lastModifiedDate":"2021-10-25"},{"lineNumber":311,"author":{"gitId":"stanley-1"},"content":"* The index refers to the index number shown in the displayed person list.","lastModifiedDate":"2021-10-25"},{"lineNumber":312,"author":{"gitId":"stanley-1"},"content":"* The index **must be a positive integer** 1, 2, 3, …​","lastModifiedDate":"2021-10-25"},{"lineNumber":313,"author":{"gitId":"stanley-1"},"content":"* The flag refers to any of the following: `fb/` `ig/` `tele/` `tiktok/` `twitter/`","lastModifiedDate":"2021-10-25"},{"lineNumber":314,"author":{"gitId":"stanley-1"},"content":"* User input after the given flag represents the new social media handle associated with the contact.","lastModifiedDate":"2021-10-25"},{"lineNumber":315,"author":{"gitId":"stanley-1"},"content":"* Only social media handles specified as input will be altered. Other social media handles remain unchanged.","lastModifiedDate":"2021-10-25"},{"lineNumber":316,"author":{"gitId":"stanley-1"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-11-01"},{"lineNumber":317,"author":{"gitId":"Zacchua"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":318,"author":{"gitId":"stanley-1"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-success\"\u003e","lastModifiedDate":"2021-11-01"},{"lineNumber":319,"author":{"gitId":"stanley-1"},"content":"**:heavy_check_mark: Example:** `edit 1 fb/alvin.chipmunk` ","lastModifiedDate":"2021-11-01"},{"lineNumber":320,"author":{"gitId":"stanley-1"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":321,"author":{"gitId":"stanley-1"},"content":"Adds the Facebook handle `alvin.chipmunk` to the first person in the displayed person list.","lastModifiedDate":"2021-11-01"},{"lineNumber":322,"author":{"gitId":"stanley-1"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-11-01"},{"lineNumber":323,"author":{"gitId":"stanley-1"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":324,"author":{"gitId":"stanley-1"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-success\"\u003e","lastModifiedDate":"2021-11-01"},{"lineNumber":325,"author":{"gitId":"stanley-1"},"content":"**:heavy_check_mark: Example:** `edit 1 tele/alv_1_N` ","lastModifiedDate":"2021-11-01"},{"lineNumber":326,"author":{"gitId":"stanley-1"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":327,"author":{"gitId":"stanley-1"},"content":"Adds the Telegram handle called `alv_1_N` to the first person in the displayed person list. The Facebook handle that was previously added is unaffected.","lastModifiedDate":"2021-11-01"},{"lineNumber":328,"author":{"gitId":"stanley-1"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-11-01"},{"lineNumber":329,"author":{"gitId":"Zacchua"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":330,"author":{"gitId":"stanley-1"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-10-25"},{"lineNumber":331,"author":{"gitId":"Zacchua"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":332,"author":{"gitId":"stanley-1"},"content":"### Add / Edit dates of occasions associated with contacts: `edit INDEX [date/NAME:YYYY-MM-DD[:monthly|:yearly]]…​` \u003ca name\u003d\"edit_dates\"\u003e\u003c/a\u003e","lastModifiedDate":"2021-11-01"},{"lineNumber":333,"author":{"gitId":"stanley-1"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":334,"author":{"gitId":"stanley-1"},"content":"Adds / Edits dates of occasions (birthdays, appointments) associated with a contact.","lastModifiedDate":"2021-11-01"},{"lineNumber":335,"author":{"gitId":"bnjmnt4n"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":336,"author":{"gitId":"stanley-1"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2021-11-01"},{"lineNumber":337,"author":{"gitId":"stanley-1"},"content":"**:mag_right: Format:**","lastModifiedDate":"2021-11-01"},{"lineNumber":338,"author":{"gitId":"stanley-1"},"content":"`edit INDEX [date/NAME:YYYY-MM-DD[:monthly|:yearly]]…​`","lastModifiedDate":"2021-11-01"},{"lineNumber":339,"author":{"gitId":"bnjmnt4n"},"content":"* Adds a date for the contact at the specified `INDEX`.","lastModifiedDate":"2021-10-29"},{"lineNumber":340,"author":{"gitId":"bnjmnt4n"},"content":"* The index refers to the index number shown in the displayed person list.","lastModifiedDate":"2021-10-29"},{"lineNumber":341,"author":{"gitId":"bnjmnt4n"},"content":"* The index **must be a positive integer** 1, 2, 3, …​","lastModifiedDate":"2021-10-29"},{"lineNumber":342,"author":{"gitId":"bnjmnt4n"},"content":"* Dates can have a name to associate them with a specific event (eg. Birthday, Meetup, Anniversary).","lastModifiedDate":"2021-10-29"},{"lineNumber":343,"author":{"gitId":"bnjmnt4n"},"content":"* Date must be presented in `YYYY-MM-DD` format.","lastModifiedDate":"2021-10-29"},{"lineNumber":344,"author":{"gitId":"bnjmnt4n"},"content":"* Dates can be recurring, either monthly or yearly, by adding `:monthly` or `:yearly` behind the date.","lastModifiedDate":"2021-10-29"},{"lineNumber":345,"author":{"gitId":"bnjmnt4n"},"content":"* Each call of `edit INDEX [date/NAME:YYYY-MM-DD[:monthly|:yearly]]…​` will replace all previous dates.","lastModifiedDate":"2021-10-29"},{"lineNumber":346,"author":{"gitId":"bnjmnt4n"},"content":"* Using the command `edit INDEX date/` will remove all dates from the user.","lastModifiedDate":"2021-10-29"},{"lineNumber":347,"author":{"gitId":"bnjmnt4n"},"content":"* Upcoming dates (within 7 days) will be highlighted in the user interface.","lastModifiedDate":"2021-10-29"},{"lineNumber":348,"author":{"gitId":"stanley-1"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-11-01"},{"lineNumber":349,"author":{"gitId":"bnjmnt4n"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":350,"author":{"gitId":"stanley-1"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-success\"\u003e","lastModifiedDate":"2021-11-01"},{"lineNumber":351,"author":{"gitId":"stanley-1"},"content":"**:heavy_check_mark: Example:** `list` followed by `edit 1 date/Meeting:2021-09-14` ","lastModifiedDate":"2021-11-01"},{"lineNumber":352,"author":{"gitId":"stanley-1"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":353,"author":{"gitId":"stanley-1"},"content":"Adds the event “Meeting” which falls on 14 Sep 2021, to Annie Baker’s listing in the app.","lastModifiedDate":"2021-11-01"},{"lineNumber":354,"author":{"gitId":"stanley-1"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-11-01"},{"lineNumber":355,"author":{"gitId":"stanley-1"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":356,"author":{"gitId":"stanley-1"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-success\"\u003e","lastModifiedDate":"2021-11-01"},{"lineNumber":357,"author":{"gitId":"stanley-1"},"content":"**:heavy_check_mark: Example:** `find Annie` followed by `edit 1 date/Lunch Appointment:2021-10-10` ","lastModifiedDate":"2021-11-01"},{"lineNumber":358,"author":{"gitId":"stanley-1"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":359,"author":{"gitId":"stanley-1"},"content":"Adds the event “Lunch Appointment” which falls on 10 Oct 2021 to Annie Baker’s listing.","lastModifiedDate":"2021-11-01"},{"lineNumber":360,"author":{"gitId":"stanley-1"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-11-01"},{"lineNumber":361,"author":{"gitId":"bnjmnt4n"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":362,"author":{"gitId":"stanley-1"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-11-01"},{"lineNumber":363,"author":{"gitId":"stanley-1"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":364,"author":{"gitId":"stanley-1"},"content":"### Delete a person : `delete INDEX` \u003ca name\u003d\"delete\"\u003e\u003c/a\u003e","lastModifiedDate":"2021-11-03"},{"lineNumber":365,"author":{"gitId":"stanley-1"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":366,"author":{"gitId":"stanley-1"},"content":"Deletes the specified person from the address book.","lastModifiedDate":"2021-11-01"},{"lineNumber":367,"author":{"gitId":"stanley-1"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":368,"author":{"gitId":"stanley-1"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2021-11-01"},{"lineNumber":369,"author":{"gitId":"stanley-1"},"content":"**:mag_right: Format:**","lastModifiedDate":"2021-11-01"},{"lineNumber":370,"author":{"gitId":"stanley-1"},"content":"`delete INDEX`","lastModifiedDate":"2021-11-01"},{"lineNumber":371,"author":{"gitId":"stanley-1"},"content":"* Deletes the person at the specified `INDEX`.","lastModifiedDate":"2021-11-01"},{"lineNumber":372,"author":{"gitId":"stanley-1"},"content":"* The index refers to the index number shown in the displayed person list.","lastModifiedDate":"2021-11-01"},{"lineNumber":373,"author":{"gitId":"stanley-1"},"content":"* The index **must be a positive integer** 1, 2, 3, …​","lastModifiedDate":"2021-11-01"},{"lineNumber":374,"author":{"gitId":"stanley-1"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-11-01"},{"lineNumber":375,"author":{"gitId":"stanley-1"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":376,"author":{"gitId":"stanley-1"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-success\"\u003e","lastModifiedDate":"2021-11-01"},{"lineNumber":377,"author":{"gitId":"stanley-1"},"content":"**:heavy_check_mark: Example:** `list` followed by `delete 2` ","lastModifiedDate":"2021-11-01"},{"lineNumber":378,"author":{"gitId":"stanley-1"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":379,"author":{"gitId":"stanley-1"},"content":"Deletes the 2nd person in the address book.","lastModifiedDate":"2021-11-01"},{"lineNumber":380,"author":{"gitId":"stanley-1"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-11-01"},{"lineNumber":381,"author":{"gitId":"stanley-1"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":382,"author":{"gitId":"stanley-1"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-success\"\u003e","lastModifiedDate":"2021-11-01"},{"lineNumber":383,"author":{"gitId":"stanley-1"},"content":"**:heavy_check_mark: Example:** `find Betsy` followed by `delete 1` ","lastModifiedDate":"2021-11-01"},{"lineNumber":384,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":385,"author":{"gitId":"stanley-1"},"content":"Deletes the 1st person in the results of the `find` command.","lastModifiedDate":"2021-11-01"},{"lineNumber":386,"author":{"gitId":"stanley-1"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-11-01"},{"lineNumber":387,"author":{"gitId":"stanley-1"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":388,"author":{"gitId":"stanley-1"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-11-01"},{"lineNumber":389,"author":{"gitId":"stanley-1"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":390,"author":{"gitId":"stanley-1"},"content":"### Remove all data: `clear` \u003ca name\u003d\"clear\"\u003e\u003c/a\u003e","lastModifiedDate":"2021-11-01"},{"lineNumber":391,"author":{"gitId":"stanley-1"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":392,"author":{"gitId":"stanley-1"},"content":"Removes all contacts in the app.","lastModifiedDate":"2021-11-01"},{"lineNumber":393,"author":{"gitId":"stanley-1"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":394,"author":{"gitId":"stanley-1"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2021-11-01"},{"lineNumber":395,"author":{"gitId":"stanley-1"},"content":"**:mag_right: Format:**","lastModifiedDate":"2021-11-01"},{"lineNumber":396,"author":{"gitId":"stanley-1"},"content":"`clear`","lastModifiedDate":"2021-11-01"},{"lineNumber":397,"author":{"gitId":"stanley-1"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-11-01"},{"lineNumber":398,"author":{"gitId":"stanley-1"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":399,"author":{"gitId":"stanley-1"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-warning\"\u003e:exclamation: **Caution:**","lastModifiedDate":"2021-11-01"},{"lineNumber":400,"author":{"gitId":"stanley-1"},"content":"Please be mindful that entering this command will wipe out all your contacts stored in SociaLite!","lastModifiedDate":"2021-11-01"},{"lineNumber":401,"author":{"gitId":"stanley-1"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-11-01"},{"lineNumber":402,"author":{"gitId":"stanley-1"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":403,"author":{"gitId":"stanley-1"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-11-01"},{"lineNumber":404,"author":{"gitId":"stanley-1"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":405,"author":{"gitId":"stanley-1"},"content":"### Locate contacts by name: `find NAME` \u003ca name\u003d\"find\"\u003e\u003c/a\u003e","lastModifiedDate":"2021-11-03"},{"lineNumber":406,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":407,"author":{"gitId":"stanley-1"},"content":"Finds persons whose names contain any of the given keywords.","lastModifiedDate":"2021-11-01"},{"lineNumber":408,"author":{"gitId":"stanley-1"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":409,"author":{"gitId":"stanley-1"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2021-11-01"},{"lineNumber":410,"author":{"gitId":"stanley-1"},"content":"**:mag_right: Format:**","lastModifiedDate":"2021-11-01"},{"lineNumber":411,"author":{"gitId":"stanley-1"},"content":"`find NAME [MORE_KEYWORDS]`","lastModifiedDate":"2021-11-03"},{"lineNumber":412,"author":{"gitId":"-"},"content":"* The search is case-insensitive. e.g `hans` will match `Hans`","lastModifiedDate":"2021-11-01"},{"lineNumber":413,"author":{"gitId":"-"},"content":"* The order of the keywords does not matter. e.g. `Hans Bo` will match `Bo Hans`","lastModifiedDate":"2021-11-01"},{"lineNumber":414,"author":{"gitId":"stanley-1"},"content":"* Partial matches will be displayed as results as well. e.g. `Han` will match `Hans`","lastModifiedDate":"2021-11-01"},{"lineNumber":415,"author":{"gitId":"stanley-1"},"content":"* Only the name is searched when no flags are provided as input.","lastModifiedDate":"2021-11-01"},{"lineNumber":416,"author":{"gitId":"stanley-1"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-11-01"},{"lineNumber":417,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":418,"author":{"gitId":"stanley-1"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-success\"\u003e","lastModifiedDate":"2021-11-01"},{"lineNumber":419,"author":{"gitId":"stanley-1"},"content":"**:heavy_check_mark: Example:** `find david`","lastModifiedDate":"2021-11-01"},{"lineNumber":420,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":421,"author":{"gitId":"stanley-1"},"content":"Returns `David Li` and `David Tan` \u003cbr\u003e","lastModifiedDate":"2021-11-01"},{"lineNumber":422,"author":{"gitId":"stanley-1"},"content":"![result for \u0027find david\u0027](images/findDavidResult.png)","lastModifiedDate":"2021-11-01"},{"lineNumber":423,"author":{"gitId":"stanley-1"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-11-01"},{"lineNumber":424,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":425,"author":{"gitId":"stanley-1"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-11-01"},{"lineNumber":426,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":427,"author":{"gitId":"stanley-1"},"content":"### Query contacts based on tags: `find t/TAG` \u003ca name\u003d\"find_tag\"\u003e\u003c/a\u003e","lastModifiedDate":"2021-11-01"},{"lineNumber":428,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":429,"author":{"gitId":"stanley-1"},"content":"Displays the contacts that are associated with a particular tag.","lastModifiedDate":"2021-11-01"},{"lineNumber":430,"author":{"gitId":"stanley-1"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":431,"author":{"gitId":"stanley-1"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2021-11-01"},{"lineNumber":432,"author":{"gitId":"stanley-1"},"content":"**:mag_right: Format:**","lastModifiedDate":"2021-11-01"},{"lineNumber":433,"author":{"gitId":"stanley-1"},"content":"`find t/TAG`","lastModifiedDate":"2021-11-01"},{"lineNumber":434,"author":{"gitId":"stanley-1"},"content":"* Queries all contacts that are tied to `TAG`.","lastModifiedDate":"2021-11-01"},{"lineNumber":435,"author":{"gitId":"stanley-1"},"content":"* The tag must be existent and associated with certain contacts in the address book.","lastModifiedDate":"2021-11-01"},{"lineNumber":436,"author":{"gitId":"stanley-1"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-11-01"},{"lineNumber":437,"author":{"gitId":"stanley-1"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":438,"author":{"gitId":"stanley-1"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-success\"\u003e","lastModifiedDate":"2021-11-01"},{"lineNumber":439,"author":{"gitId":"stanley-1"},"content":"**:heavy_check_mark: Example:** `find t/family` ","lastModifiedDate":"2021-11-01"},{"lineNumber":440,"author":{"gitId":"stanley-1"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":441,"author":{"gitId":"stanley-1"},"content":"Checks all contacts in the address book which the user categorizes as “family”.","lastModifiedDate":"2021-11-01"},{"lineNumber":442,"author":{"gitId":"stanley-1"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-11-01"},{"lineNumber":443,"author":{"gitId":"stanley-1"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":444,"author":{"gitId":"stanley-1"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-success\"\u003e","lastModifiedDate":"2021-11-01"},{"lineNumber":445,"author":{"gitId":"stanley-1"},"content":"**:heavy_check_mark: Example:** `find t/work` ","lastModifiedDate":"2021-11-01"},{"lineNumber":446,"author":{"gitId":"stanley-1"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":447,"author":{"gitId":"stanley-1"},"content":"Checks all contacts in the address book which the user categorizes as “work”.","lastModifiedDate":"2021-11-01"},{"lineNumber":448,"author":{"gitId":"stanley-1"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-11-01"},{"lineNumber":449,"author":{"gitId":"stanley-1"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":450,"author":{"gitId":"stanley-1"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-11-01"},{"lineNumber":451,"author":{"gitId":"stanley-1"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":452,"author":{"gitId":"stanley-1"},"content":"### Query contacts based on social media platform: `find p/PLATFORM` \u003ca name\u003d\"find_platform\"\u003e\u003c/a\u003e","lastModifiedDate":"2021-11-01"},{"lineNumber":453,"author":{"gitId":"Zacchua"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":454,"author":{"gitId":"stanley-1"},"content":"Show all contacts with their handles on the particular social media platform.","lastModifiedDate":"2021-10-25"},{"lineNumber":455,"author":{"gitId":"stanley-1"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":456,"author":{"gitId":"stanley-1"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2021-11-01"},{"lineNumber":457,"author":{"gitId":"stanley-1"},"content":"**:mag_right: Format:**","lastModifiedDate":"2021-11-01"},{"lineNumber":458,"author":{"gitId":"stanley-1"},"content":"`find p/PLATFORM`","lastModifiedDate":"2021-11-01"},{"lineNumber":459,"author":{"gitId":"stanley-1"},"content":"* The social media platform must be supported by SociaLite, e.g. `facebook`, `instagram`, `telegram`, `tiktok`, `twitter`.","lastModifiedDate":"2021-10-25"},{"lineNumber":460,"author":{"gitId":"stanley-1"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-11-01"},{"lineNumber":461,"author":{"gitId":"stanley-1"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":462,"author":{"gitId":"stanley-1"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-success\"\u003e","lastModifiedDate":"2021-11-01"},{"lineNumber":463,"author":{"gitId":"stanley-1"},"content":"**:heavy_check_mark: Example:** `find p/instagram` ","lastModifiedDate":"2021-11-01"},{"lineNumber":464,"author":{"gitId":"stanley-1"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":465,"author":{"gitId":"stanley-1"},"content":"Returns all contacts who have an Instagram handle pegged with them.","lastModifiedDate":"2021-11-01"},{"lineNumber":466,"author":{"gitId":"stanley-1"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-11-01"},{"lineNumber":467,"author":{"gitId":"stanley-1"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":468,"author":{"gitId":"stanley-1"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-success\"\u003e","lastModifiedDate":"2021-11-01"},{"lineNumber":469,"author":{"gitId":"stanley-1"},"content":"**:heavy_check_mark: Example:** `find p/twitter` ","lastModifiedDate":"2021-11-01"},{"lineNumber":470,"author":{"gitId":"Zacchua"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":471,"author":{"gitId":"stanley-1"},"content":"Returns all contacts who have a Twitter handle pegged with them.","lastModifiedDate":"2021-11-01"},{"lineNumber":472,"author":{"gitId":"stanley-1"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-11-01"},{"lineNumber":473,"author":{"gitId":"stanley-1"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":474,"author":{"gitId":"david-eom"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-10-27"},{"lineNumber":475,"author":{"gitId":"david-eom"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":476,"author":{"gitId":"stanley-1"},"content":"### Add / Change a profile picture: `picture INDEX` \u003ca name\u003d\"picture\"\u003e\u003c/a\u003e","lastModifiedDate":"2021-11-03"},{"lineNumber":477,"author":{"gitId":"stanley-1"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":478,"author":{"gitId":"stanley-1"},"content":"Adds a profile picture to an existing contact or changes the existing profile picture if available.","lastModifiedDate":"2021-11-01"},{"lineNumber":479,"author":{"gitId":"stanley-1"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":480,"author":{"gitId":"stanley-1"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2021-11-01"},{"lineNumber":481,"author":{"gitId":"stanley-1"},"content":"**:mag_right: Format:**","lastModifiedDate":"2021-11-01"},{"lineNumber":482,"author":{"gitId":"stanley-1"},"content":"`picture INDEX`","lastModifiedDate":"2021-11-01"},{"lineNumber":483,"author":{"gitId":"stanley-1"},"content":"* Opens file browser allowing you to choose any .jpg or .png file as the profile picture.","lastModifiedDate":"2021-11-01"},{"lineNumber":484,"author":{"gitId":"stanley-1"},"content":"* Adds the selected picture to the contact at the specified `INDEX`.","lastModifiedDate":"2021-11-01"},{"lineNumber":485,"author":{"gitId":"-"},"content":"* The index refers to the index number shown in the displayed person list.","lastModifiedDate":"2021-11-01"},{"lineNumber":486,"author":{"gitId":"-"},"content":"* The index **must be a positive integer** 1, 2, 3, …​","lastModifiedDate":"2021-11-01"},{"lineNumber":487,"author":{"gitId":"stanley-1"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-11-01"},{"lineNumber":488,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":489,"author":{"gitId":"stanley-1"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-success\"\u003e","lastModifiedDate":"2021-11-01"},{"lineNumber":490,"author":{"gitId":"stanley-1"},"content":"**:heavy_check_mark: Example:** `list` followed by `picture 1` ","lastModifiedDate":"2021-11-01"},{"lineNumber":491,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":492,"author":{"gitId":"stanley-1"},"content":"Opens the file browser to let you choose a picture to add to Annie Baker’s listing in the app.","lastModifiedDate":"2021-11-01"},{"lineNumber":493,"author":{"gitId":"stanley-1"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-11-01"},{"lineNumber":494,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":495,"author":{"gitId":"stanley-1"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-success\"\u003e","lastModifiedDate":"2021-11-01"},{"lineNumber":496,"author":{"gitId":"stanley-1"},"content":"**:heavy_check_mark: Example:** `find Charlie` followed by `picture 1` ","lastModifiedDate":"2021-11-01"},{"lineNumber":497,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":498,"author":{"gitId":"stanley-1"},"content":"Opens the file browser to let you choose a picture to add to Charlie Decker’s listing in the app.","lastModifiedDate":"2021-11-01"},{"lineNumber":499,"author":{"gitId":"stanley-1"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-11-01"},{"lineNumber":500,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":501,"author":{"gitId":"stanley-1"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-11-01"},{"lineNumber":502,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":503,"author":{"gitId":"stanley-1"},"content":"### Share a contact card: `share INDEX` \u003ca name\u003d\"share\"\u003e\u003c/a\u003e","lastModifiedDate":"2021-11-03"},{"lineNumber":504,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":505,"author":{"gitId":"david-eom"},"content":"Copies the contact card of the specified person to the system clipboard. The user can paste the plain text in an email or text message and forward the contact card to others thereafter.","lastModifiedDate":"2021-10-31"},{"lineNumber":506,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":507,"author":{"gitId":"david-eom"},"content":"Alternatively, the user can click on the \"Share\" button at the top-right hand corner of the contact card that he/she would like to share instead of entering the command.","lastModifiedDate":"2021-10-31"},{"lineNumber":508,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":509,"author":{"gitId":"stanley-1"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2021-11-01"},{"lineNumber":510,"author":{"gitId":"stanley-1"},"content":"**:mag_right: Format:**","lastModifiedDate":"2021-11-01"},{"lineNumber":511,"author":{"gitId":"stanley-1"},"content":"`share INDEX`","lastModifiedDate":"2021-11-01"},{"lineNumber":512,"author":{"gitId":"david-eom"},"content":"* Copies the contact card of the person at the specified `INDEX` to the system clipboard.","lastModifiedDate":"2021-10-27"},{"lineNumber":513,"author":{"gitId":"david-eom"},"content":"* The index refers to the index number shown in the displayed person list.","lastModifiedDate":"2021-10-27"},{"lineNumber":514,"author":{"gitId":"david-eom"},"content":"* The index **must be a positive integer** 1, 2, 3, …​","lastModifiedDate":"2021-10-27"},{"lineNumber":515,"author":{"gitId":"stanley-1"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-11-01"},{"lineNumber":516,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":517,"author":{"gitId":"stanley-1"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-success\"\u003e","lastModifiedDate":"2021-11-01"},{"lineNumber":518,"author":{"gitId":"stanley-1"},"content":"**:heavy_check_mark: Example:** `list` followed by `share 2` ","lastModifiedDate":"2021-11-01"},{"lineNumber":519,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":520,"author":{"gitId":"stanley-1"},"content":"Copies the information of the second contact in the list displayed by SociaLite.","lastModifiedDate":"2021-11-01"},{"lineNumber":521,"author":{"gitId":"stanley-1"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-11-01"},{"lineNumber":522,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":523,"author":{"gitId":"stanley-1"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-success\"\u003e","lastModifiedDate":"2021-11-01"},{"lineNumber":524,"author":{"gitId":"stanley-1"},"content":"**:heavy_check_mark: Example:** Clicking on the \"Share\" button of Annie Baker\u0027s name card copies her contact information.","lastModifiedDate":"2021-11-01"},{"lineNumber":525,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-11-01"},{"lineNumber":526,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":527,"author":{"gitId":"david-eom"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-10-31"},{"lineNumber":528,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":529,"author":{"gitId":"stanley-1"},"content":"### Pin a contact card: `pin INDEX` \u003ca name\u003d\"pin\"\u003e\u003c/a\u003e","lastModifiedDate":"2021-11-03"},{"lineNumber":530,"author":{"gitId":"david-eom"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":531,"author":{"gitId":"david-eom"},"content":"Affixes the contact card of the specified person onto the top of the person list. Pinned contact cards will be alphabetically ordered.","lastModifiedDate":"2021-10-31"},{"lineNumber":532,"author":{"gitId":"david-eom"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":533,"author":{"gitId":"david-eom"},"content":"Alternatively, the user can click on the \"Pin\" button at the top-right hand corner of the contact card that he/she would like to pin instead of entering the command.","lastModifiedDate":"2021-10-31"},{"lineNumber":534,"author":{"gitId":"david-eom"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":535,"author":{"gitId":"stanley-1"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2021-11-01"},{"lineNumber":536,"author":{"gitId":"stanley-1"},"content":"**:mag_right: Format:**","lastModifiedDate":"2021-11-01"},{"lineNumber":537,"author":{"gitId":"stanley-1"},"content":"`pin INDEX`","lastModifiedDate":"2021-11-01"},{"lineNumber":538,"author":{"gitId":"david-eom"},"content":"* Pins the contact card of the person at the specified `INDEX` at the top of the person list.","lastModifiedDate":"2021-10-31"},{"lineNumber":539,"author":{"gitId":"david-eom"},"content":"* The index refers to the index number shown in the displayed person list.","lastModifiedDate":"2021-10-31"},{"lineNumber":540,"author":{"gitId":"david-eom"},"content":"* The index **must be a positive integer** 1, 2, 3, ...","lastModifiedDate":"2021-10-31"},{"lineNumber":541,"author":{"gitId":"david-eom"},"content":"* The contact card must **not** be previously pinned.","lastModifiedDate":"2021-10-31"},{"lineNumber":542,"author":{"gitId":"stanley-1"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-11-01"},{"lineNumber":543,"author":{"gitId":"stanley-1"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":544,"author":{"gitId":"stanley-1"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-success\"\u003e","lastModifiedDate":"2021-11-01"},{"lineNumber":545,"author":{"gitId":"stanley-1"},"content":"**:heavy_check_mark: Example:** `list` followed by `pin 3`","lastModifiedDate":"2021-11-01"},{"lineNumber":546,"author":{"gitId":"david-eom"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":547,"author":{"gitId":"stanley-1"},"content":"Provided no contact card has been pinned yet, the above command places the third contact in the list displayed by ","lastModifiedDate":"2021-11-01"},{"lineNumber":548,"author":{"gitId":"stanley-1"},"content":"SociaLite, at the top  of the person list along with other pinned contacts.","lastModifiedDate":"2021-11-01"},{"lineNumber":549,"author":{"gitId":"stanley-1"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-11-01"},{"lineNumber":550,"author":{"gitId":"david-eom"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":551,"author":{"gitId":"stanley-1"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-success\"\u003e","lastModifiedDate":"2021-11-01"},{"lineNumber":552,"author":{"gitId":"stanley-1"},"content":"**:heavy_check_mark: Example:** Clicking on the \"Pin\" button of Annie Baker\u0027s name card affixes her contact card onto the top of the person list.","lastModifiedDate":"2021-11-01"},{"lineNumber":553,"author":{"gitId":"stanley-1"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-11-01"},{"lineNumber":554,"author":{"gitId":"david-eom"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":555,"author":{"gitId":"david-eom"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-10-31"},{"lineNumber":556,"author":{"gitId":"david-eom"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":557,"author":{"gitId":"stanley-1"},"content":"### Unpin a contact card: `unpin INDEX` \u003ca name\u003d\"unpin\"\u003e\u003c/a\u003e","lastModifiedDate":"2021-11-03"},{"lineNumber":558,"author":{"gitId":"david-eom"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":559,"author":{"gitId":"david-eom"},"content":"Removes the contact card of the specified person from the top of the person list.","lastModifiedDate":"2021-10-31"},{"lineNumber":560,"author":{"gitId":"david-eom"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":561,"author":{"gitId":"david-eom"},"content":"Alternatively, the user can click on the \"Unpin\" button at the top-right hand corner of the contact card that he/she would like to unpin instead of entering the command.","lastModifiedDate":"2021-10-31"},{"lineNumber":562,"author":{"gitId":"david-eom"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":563,"author":{"gitId":"stanley-1"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2021-11-01"},{"lineNumber":564,"author":{"gitId":"stanley-1"},"content":"**:mag_right: Format:**","lastModifiedDate":"2021-11-01"},{"lineNumber":565,"author":{"gitId":"stanley-1"},"content":"`unpin INDEX`","lastModifiedDate":"2021-11-01"},{"lineNumber":566,"author":{"gitId":"david-eom"},"content":"* Unpins the contact card of the person at the specified `INDEX` at the top of the person list.","lastModifiedDate":"2021-10-31"},{"lineNumber":567,"author":{"gitId":"david-eom"},"content":"* The index refers to the index number shown in the displayed person list.","lastModifiedDate":"2021-10-31"},{"lineNumber":568,"author":{"gitId":"david-eom"},"content":"* The index **must be a positive integer** 1, 2, 3, ...","lastModifiedDate":"2021-10-31"},{"lineNumber":569,"author":{"gitId":"david-eom"},"content":"* The contact card must be previously pinned.","lastModifiedDate":"2021-10-31"},{"lineNumber":570,"author":{"gitId":"stanley-1"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-11-01"},{"lineNumber":571,"author":{"gitId":"david-eom"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":572,"author":{"gitId":"stanley-1"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-success\"\u003e","lastModifiedDate":"2021-11-01"},{"lineNumber":573,"author":{"gitId":"stanley-1"},"content":"**:heavy_check_mark: Example:** `list` followed by `unpin 2` ","lastModifiedDate":"2021-11-01"},{"lineNumber":574,"author":{"gitId":"stanley-1"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":575,"author":{"gitId":"stanley-1"},"content":"Provided the first 4 contact cards are the pinned contact cards, the above command unpins the second contact in the list displayed by SociaLite.","lastModifiedDate":"2021-11-01"},{"lineNumber":576,"author":{"gitId":"stanley-1"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-11-01"},{"lineNumber":577,"author":{"gitId":"david-eom"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":578,"author":{"gitId":"stanley-1"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-success\"\u003e","lastModifiedDate":"2021-11-01"},{"lineNumber":579,"author":{"gitId":"stanley-1"},"content":"**:heavy_check_mark: Example:** Clicking on the \"Unpin\" button of Charlie Decker\u0027s name unpins his contact card if it was previously pinned.","lastModifiedDate":"2021-11-01"},{"lineNumber":580,"author":{"gitId":"stanley-1"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-11-01"},{"lineNumber":581,"author":{"gitId":"david-eom"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":582,"author":{"gitId":"stanley-1"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-11-01"},{"lineNumber":583,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":584,"author":{"gitId":"stanley-1"},"content":"### Add remarks about a specific contact: `remark INDEX r/[TEXT]` \u003ca name\u003d\"remark\"\u003e\u003c/a\u003e","lastModifiedDate":"2021-11-03"},{"lineNumber":585,"author":{"gitId":"Zacchua"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":586,"author":{"gitId":"Zacchua"},"content":"Adds special notes about a contact.","lastModifiedDate":"2021-09-24"},{"lineNumber":587,"author":{"gitId":"Zacchua"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":588,"author":{"gitId":"stanley-1"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2021-11-01"},{"lineNumber":589,"author":{"gitId":"stanley-1"},"content":"**:mag_right: Format:**","lastModifiedDate":"2021-11-01"},{"lineNumber":590,"author":{"gitId":"stanley-1"},"content":"`remark INDEX r/[TEXT]`","lastModifiedDate":"2021-11-01"},{"lineNumber":591,"author":{"gitId":"Zacchua"},"content":"* Adds a note about the contact at the specified `INDEX`.","lastModifiedDate":"2021-09-24"},{"lineNumber":592,"author":{"gitId":"Zacchua"},"content":"* The index refers to the index number shown in the displayed person list.","lastModifiedDate":"2021-09-24"},{"lineNumber":593,"author":{"gitId":"Zacchua"},"content":"* The index **must be a positive integer** 1, 2, 3, …​","lastModifiedDate":"2021-10-02"},{"lineNumber":594,"author":{"gitId":"stanley-1"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-11-01"},{"lineNumber":595,"author":{"gitId":"stanley-1"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":596,"author":{"gitId":"stanley-1"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-success\"\u003e","lastModifiedDate":"2021-11-01"},{"lineNumber":597,"author":{"gitId":"stanley-1"},"content":"**:heavy_check_mark: Example:** `list` followed by `remark 2 r/Doesn’t like vegetables`","lastModifiedDate":"2021-11-01"},{"lineNumber":598,"author":{"gitId":"Zacchua"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":599,"author":{"gitId":"stanley-1"},"content":"Adds the remark “Doesn’t like vegetables” to Charlie Decker’s listing in the address book.","lastModifiedDate":"2021-11-01"},{"lineNumber":600,"author":{"gitId":"stanley-1"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-11-01"},{"lineNumber":601,"author":{"gitId":"stanley-1"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":602,"author":{"gitId":"stanley-1"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-success\"\u003e","lastModifiedDate":"2021-11-01"},{"lineNumber":603,"author":{"gitId":"stanley-1"},"content":"**:heavy_check_mark: Example:** `find Annie` followed by `remark 1 r/Loves peas`","lastModifiedDate":"2021-11-01"},{"lineNumber":604,"author":{"gitId":"stanley-1"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":605,"author":{"gitId":"stanley-1"},"content":"Adds the remark “Loves peas” to Annie Baker’s listing in the app.","lastModifiedDate":"2021-11-01"},{"lineNumber":606,"author":{"gitId":"stanley-1"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-11-01"},{"lineNumber":607,"author":{"gitId":"Zacchua"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":608,"author":{"gitId":"stanley-1"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-10-25"},{"lineNumber":609,"author":{"gitId":"Zacchua"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":610,"author":{"gitId":"stanley-1"},"content":"### View help: `help` \u003ca name\u003d\"help\"\u003e\u003c/a\u003e","lastModifiedDate":"2021-11-01"},{"lineNumber":611,"author":{"gitId":"Zacchua"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":612,"author":{"gitId":"stanley-1"},"content":"Shows a message explaining how to access the User Guide or obtain in-app guidance for selected commands.","lastModifiedDate":"2021-11-01"},{"lineNumber":613,"author":{"gitId":"Zacchua"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":614,"author":{"gitId":"stanley-1"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2021-11-01"},{"lineNumber":615,"author":{"gitId":"stanley-1"},"content":"**:mag_right: Format:**","lastModifiedDate":"2021-11-01"},{"lineNumber":616,"author":{"gitId":"stanley-1"},"content":"`help`","lastModifiedDate":"2021-11-01"},{"lineNumber":617,"author":{"gitId":"stanley-1"},"content":"![result for \u0027help\u0027](images/HelpBox.png)","lastModifiedDate":"2021-11-01"},{"lineNumber":618,"author":{"gitId":"stanley-1"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-11-01"},{"lineNumber":619,"author":{"gitId":"stanley-1"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":620,"author":{"gitId":"stanley-1"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-10-25"},{"lineNumber":621,"author":{"gitId":"stanley-1"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":622,"author":{"gitId":"stanley-1"},"content":"### View in-app guidance: `help COMMAND` \u003ca name\u003d\"help_command\"\u003e\u003c/a\u003e","lastModifiedDate":"2021-11-01"},{"lineNumber":623,"author":{"gitId":"stanley-1"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":624,"author":{"gitId":"stanley-1"},"content":"Displays concise instructions for users to learn the given `COMMAND`\u0027s function.","lastModifiedDate":"2021-10-25"},{"lineNumber":625,"author":{"gitId":"stanley-1"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":626,"author":{"gitId":"stanley-1"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2021-11-01"},{"lineNumber":627,"author":{"gitId":"stanley-1"},"content":"**:mag_right: Format:**","lastModifiedDate":"2021-11-01"},{"lineNumber":628,"author":{"gitId":"stanley-1"},"content":"`help COMMAND`","lastModifiedDate":"2021-11-01"},{"lineNumber":629,"author":{"gitId":"stanley-1"},"content":"* Acceptable keywords to use in `COMMAND`: `add` `delete` `edit` `find` `remark` `share` `picture` `pin` `unpin`","lastModifiedDate":"2021-10-30"},{"lineNumber":630,"author":{"gitId":"stanley-1"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-11-01"},{"lineNumber":631,"author":{"gitId":"stanley-1"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":632,"author":{"gitId":"stanley-1"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-success\"\u003e","lastModifiedDate":"2021-11-01"},{"lineNumber":633,"author":{"gitId":"stanley-1"},"content":"**:heavy_check_mark: Example:** `help add` ","lastModifiedDate":"2021-11-01"},{"lineNumber":634,"author":{"gitId":"stanley-1"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":635,"author":{"gitId":"stanley-1"},"content":"Displays a concise guide on how to use the `add` command.","lastModifiedDate":"2021-11-01"},{"lineNumber":636,"author":{"gitId":"stanley-1"},"content":"![result for \u0027help\u0027](images/HelpAdd.png)","lastModifiedDate":"2021-11-01"},{"lineNumber":637,"author":{"gitId":"stanley-1"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-11-01"},{"lineNumber":638,"author":{"gitId":"stanley-1"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":639,"author":{"gitId":"stanley-1"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-success\"\u003e","lastModifiedDate":"2021-11-01"},{"lineNumber":640,"author":{"gitId":"stanley-1"},"content":"**:heavy_check_mark: Example:** `help edit` ","lastModifiedDate":"2021-11-01"},{"lineNumber":641,"author":{"gitId":"stanley-1"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":642,"author":{"gitId":"stanley-1"},"content":"Displays a concise guide on how to use the `edit` command.","lastModifiedDate":"2021-11-01"},{"lineNumber":643,"author":{"gitId":"stanley-1"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-11-01"},{"lineNumber":644,"author":{"gitId":"stanley-1"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":645,"author":{"gitId":"stanley-1"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-10-25"},{"lineNumber":646,"author":{"gitId":"stanley-1"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":647,"author":{"gitId":"stanley-1"},"content":"### Exit the program : `exit` \u003ca name\u003d\"exit\"\u003e\u003c/a\u003e","lastModifiedDate":"2021-11-01"},{"lineNumber":648,"author":{"gitId":"Zacchua"},"content":"","lastModifiedDate":"2021-09-24"},{"lineNumber":649,"author":{"gitId":"stanley-1"},"content":"Exits the program.","lastModifiedDate":"2021-11-01"},{"lineNumber":650,"author":{"gitId":"stanley-1"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":651,"author":{"gitId":"stanley-1"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2021-11-01"},{"lineNumber":652,"author":{"gitId":"stanley-1"},"content":"**:mag_right: Format:**","lastModifiedDate":"2021-11-01"},{"lineNumber":653,"author":{"gitId":"stanley-1"},"content":"`exit`","lastModifiedDate":"2021-11-01"},{"lineNumber":654,"author":{"gitId":"stanley-1"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-11-01"},{"lineNumber":655,"author":{"gitId":"david-eom"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":656,"author":{"gitId":"stanley-1"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-10-25"},{"lineNumber":657,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":658,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":659,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":660,"author":{"gitId":"Zacchua"},"content":"## FAQ \u003ca name\u003d\"faq\"\u003e\u003c/a\u003e","lastModifiedDate":"2021-09-24"},{"lineNumber":661,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":662,"author":{"gitId":"stanley-1"},"content":"**Q**: How is my data saved?\u003cbr\u003e","lastModifiedDate":"2021-11-01"},{"lineNumber":663,"author":{"gitId":"stanley-1"},"content":"**A**: SociaLite data are saved in the hard disk automatically after any command that alters the data. There is no need to save manually.","lastModifiedDate":"2021-11-01"},{"lineNumber":664,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":665,"author":{"gitId":"-"},"content":"**Q**: How do I transfer my data to another Computer?\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":666,"author":{"gitId":"Zacchua"},"content":"**A**: Install the app in the other computer and overwrite the empty data file it creates with the file that contains the data of your previous SociaLite home folder.","lastModifiedDate":"2021-09-26"},{"lineNumber":667,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":668,"author":{"gitId":"stanley-1"},"content":"**Q**: Can I edit my data?\u003cbr\u003e","lastModifiedDate":"2021-11-01"},{"lineNumber":669,"author":{"gitId":"stanley-1"},"content":"**A**: SociaLite data are saved as a JSON file `\u003cJAR file location\u003e/data/SociaLite.json`. Advanced users are welcome to update data directly by editing that data file.","lastModifiedDate":"2021-11-03"},{"lineNumber":670,"author":{"gitId":"stanley-1"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-warning\"\u003e:exclamation: **Caution:**","lastModifiedDate":"2021-11-01"},{"lineNumber":671,"author":{"gitId":"stanley-1"},"content":"If your changes to the data file makes its format invalid, SociaLite will discard all data and start with an empty data file at the next run.","lastModifiedDate":"2021-11-01"},{"lineNumber":672,"author":{"gitId":"stanley-1"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-11-01"},{"lineNumber":673,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":674,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":675,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":676,"author":{"gitId":"stanley-1"},"content":"## Command Index \u003ca name\u003d\"index\"\u003e\u003c/a\u003e","lastModifiedDate":"2021-11-03"},{"lineNumber":677,"author":{"gitId":"stanley-1"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":678,"author":{"gitId":"stanley-1"},"content":"Action | Format | Example (if any)","lastModifiedDate":"2021-11-03"},{"lineNumber":679,"author":{"gitId":"stanley-1"},"content":"--------|------------------|--------------------","lastModifiedDate":"2021-11-03"},{"lineNumber":680,"author":{"gitId":"stanley-1"},"content":"**Access Social Media Page** | Click on social media handle | ","lastModifiedDate":"2021-11-03"},{"lineNumber":681,"author":{"gitId":"stanley-1"},"content":"**Add** | `add n/NAME p/PHONE_NUMBER [t/TAG]…​ [date/NAME:YYYY-MM-DD[:monthly|:yearly]]…​ [fb/FACEBOOK] [ig/INSTAGRAM] [tele/TELEGRAM] [tiktok/TIKTOK] [twitter/TWITTER]` | `add n/Alex Yeoh p/87438807 t/friends fb/alex.yeoh ig/alex.yeoh tele/alyeoh tiktok/alex.yeoh`","lastModifiedDate":"2021-11-03"},{"lineNumber":682,"author":{"gitId":"stanley-1"},"content":"**Add / Edit Categories** | `edit INDEX [t/TAG]...` | `edit 1 t/Friends`","lastModifiedDate":"2021-11-03"},{"lineNumber":683,"author":{"gitId":"stanley-1"},"content":"**Add / Edit Dates** | `edit INDEX [date/NAME:YYYY-MM-DD[:monthly|:yearly]]…​` | `edit 1 date/Meeting:2021-09-14`","lastModifiedDate":"2021-11-03"},{"lineNumber":684,"author":{"gitId":"stanley-1"},"content":"**Add / Edit Profile Picture** | `picture INDEX` | `picture 1`","lastModifiedDate":"2021-11-03"},{"lineNumber":685,"author":{"gitId":"stanley-1"},"content":"**Add / Edit Social Media Handles** | `edit INDEX [p/PLATFORM]` | `edit 1 fb/Alv1n.y`","lastModifiedDate":"2021-11-03"},{"lineNumber":686,"author":{"gitId":"stanley-1"},"content":"**Add Remark** | `remark INDEX r/[TEXT]` | `remark 1 r/Likes to swim`","lastModifiedDate":"2021-11-03"},{"lineNumber":687,"author":{"gitId":"stanley-1"},"content":"**Delete** | `delete INDEX`| `delete 3`","lastModifiedDate":"2021-11-03"},{"lineNumber":688,"author":{"gitId":"stanley-1"},"content":"**Delete All Categories** | `edit INDEX t/` | `edit 1 t/`","lastModifiedDate":"2021-11-03"},{"lineNumber":689,"author":{"gitId":"stanley-1"},"content":"**Delete All Data** | `clear` |","lastModifiedDate":"2021-11-03"},{"lineNumber":690,"author":{"gitId":"stanley-1"},"content":"**Edit** | `edit INDEX [n/NAME] [p/PHONE] [r/REMARK] [t/TAG]…​ [date/NAME:YYYY-MM-DD[:monthly|:yearly]]…​ [fb/FACEBOOK] [ig/INSTAGRAM] [tele/TELEGRAM] [tiktok/TIKTOK] [twitter/TWITTER]` | `edit 1 p/91234567 fb/Yalex19`","lastModifiedDate":"2021-11-03"},{"lineNumber":691,"author":{"gitId":"stanley-1"},"content":"**Exit** | `exit` |","lastModifiedDate":"2021-11-03"},{"lineNumber":692,"author":{"gitId":"stanley-1"},"content":"**Find Contacts by Category** | `find t/TAG` | `find t/Friends`","lastModifiedDate":"2021-11-03"},{"lineNumber":693,"author":{"gitId":"stanley-1"},"content":"**Find Contacts by Name** | `find NAME [MORE_KEYWORDS]`| `find James Jake`","lastModifiedDate":"2021-11-03"},{"lineNumber":694,"author":{"gitId":"stanley-1"},"content":"**Find Contacts by Platform** | `find p/PLATFORM` | `find p/facebook`","lastModifiedDate":"2021-11-03"},{"lineNumber":695,"author":{"gitId":"stanley-1"},"content":"**List** | `list` |","lastModifiedDate":"2021-11-03"},{"lineNumber":696,"author":{"gitId":"stanley-1"},"content":"**Pin Contact** | `pin INDEX` | `pin 4`","lastModifiedDate":"2021-11-03"},{"lineNumber":697,"author":{"gitId":"stanley-1"},"content":"**Share Contact** | `share INDEX` | `share 2`","lastModifiedDate":"2021-11-03"},{"lineNumber":698,"author":{"gitId":"stanley-1"},"content":"**Track History** | `UP` or `DOWN` arrow keys |","lastModifiedDate":"2021-11-03"},{"lineNumber":699,"author":{"gitId":"stanley-1"},"content":"**Unpin Contact** | `unpin INDEX` | `unpin 1`","lastModifiedDate":"2021-11-03"},{"lineNumber":700,"author":{"gitId":"stanley-1"},"content":"**View Help** | `help` |","lastModifiedDate":"2021-11-03"},{"lineNumber":701,"author":{"gitId":"stanley-1"},"content":"**View In-App Guidance** | `help COMMAND` | `help add`","lastModifiedDate":"2021-11-03"}],"authorContributionMap":{"Zacchua":33,"bnjmnt4n":15,"david-eom":38,"-":111,"stanley-1":504}},{"path":"docs/diagrams/ModelClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam arrowColor MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam classBackgroundColor MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Package Model \u003c\u003cRectangle\u003e\u003e{","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"Interface ReadOnlyAddressBook \u003c\u003cInterface\u003e\u003e","lastModifiedDate":"2019-07-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"Interface ReadOnlyUserPrefs \u003c\u003cInterface\u003e\u003e","lastModifiedDate":"2021-05-13"},{"lineNumber":10,"author":{"gitId":"david-eom"},"content":"Interface ReadOnlyCommandHistory \u003c\u003cInterface\u003e\u003e","lastModifiedDate":"2021-10-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"Interface Model \u003c\u003cInterface\u003e\u003e","lastModifiedDate":"2019-07-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"Class AddressBook","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"Class ReadOnlyAddressBook","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"david-eom"},"content":"Class CommandHistory","lastModifiedDate":"2021-10-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":"Class Model","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"Class ModelManager","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"Class UserPrefs","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"Class ReadOnlyUserPrefs","lastModifiedDate":"2019-07-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"david-eom"},"content":"Class \"{abstract}\\nHandle\" as Handle","lastModifiedDate":"2021-10-22"},{"lineNumber":21,"author":{"gitId":"-"},"content":"Class UniquePersonList","lastModifiedDate":"2021-07-31"},{"lineNumber":22,"author":{"gitId":"-"},"content":"Class Person","lastModifiedDate":"2019-07-03"},{"lineNumber":23,"author":{"gitId":"-"},"content":"Class Name","lastModifiedDate":"2019-07-03"},{"lineNumber":24,"author":{"gitId":"-"},"content":"Class Phone","lastModifiedDate":"2019-07-03"},{"lineNumber":25,"author":{"gitId":"david-eom"},"content":"Class Remark","lastModifiedDate":"2021-10-22"},{"lineNumber":26,"author":{"gitId":"-"},"content":"Class Tag","lastModifiedDate":"2019-07-03"},{"lineNumber":27,"author":{"gitId":"david-eom"},"content":"Class Facebook","lastModifiedDate":"2021-10-22"},{"lineNumber":28,"author":{"gitId":"david-eom"},"content":"Class Instagram","lastModifiedDate":"2021-10-22"},{"lineNumber":29,"author":{"gitId":"david-eom"},"content":"Class Telegram","lastModifiedDate":"2021-10-22"},{"lineNumber":30,"author":{"gitId":"david-eom"},"content":"Class TikTok","lastModifiedDate":"2021-10-22"},{"lineNumber":31,"author":{"gitId":"david-eom"},"content":"Class Twitter","lastModifiedDate":"2021-10-22"},{"lineNumber":32,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"Class HiddenOutside #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":35,"author":{"gitId":"-"},"content":"HiddenOutside ..\u003e Model","lastModifiedDate":"2019-07-03"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":37,"author":{"gitId":"david-eom"},"content":"Model .d.\u003e ReadOnlyAddressBook","lastModifiedDate":"2021-10-22"},{"lineNumber":38,"author":{"gitId":"david-eom"},"content":"Model .d.\u003e ReadOnlyUserPrefs","lastModifiedDate":"2021-10-22"},{"lineNumber":39,"author":{"gitId":"david-eom"},"content":"Model .d.\u003e ReadOnlyCommandHistory","lastModifiedDate":"2021-10-22"},{"lineNumber":40,"author":{"gitId":"david-eom"},"content":"ReadOnlyAddressBook -[hidden]r\u003e ReadOnlyUserPrefs","lastModifiedDate":"2021-10-22"},{"lineNumber":41,"author":{"gitId":"david-eom"},"content":"ReadOnlyUserPrefs -[hidden]r\u003e ReadOnlyCommandHistory","lastModifiedDate":"2021-10-22"},{"lineNumber":42,"author":{"gitId":"david-eom"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":43,"author":{"gitId":"david-eom"},"content":"AddressBook .u.|\u003e ReadOnlyAddressBook","lastModifiedDate":"2021-10-22"},{"lineNumber":44,"author":{"gitId":"david-eom"},"content":"UserPrefs .u.|\u003e ReadOnlyUserPrefs","lastModifiedDate":"2021-10-22"},{"lineNumber":45,"author":{"gitId":"david-eom"},"content":"CommandHistory .u.|\u003e ReadOnlyCommandHistory","lastModifiedDate":"2021-10-22"},{"lineNumber":46,"author":{"gitId":"david-eom"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":47,"author":{"gitId":"david-eom"},"content":"ModelManager -u-\u003e \"1\" AddressBook","lastModifiedDate":"2021-10-22"},{"lineNumber":48,"author":{"gitId":"david-eom"},"content":"ModelManager -u-\u003e \"1\" UserPrefs","lastModifiedDate":"2021-10-22"},{"lineNumber":49,"author":{"gitId":"david-eom"},"content":"ModelManager -u-\u003e \"1\" CommandHistory","lastModifiedDate":"2021-10-22"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":51,"author":{"gitId":"david-eom"},"content":"ModelManager ....u|\u003e Model","lastModifiedDate":"2021-10-22"},{"lineNumber":52,"author":{"gitId":"david-eom"},"content":"ModelManager ---\u003e\"~* filtered\" Person","lastModifiedDate":"2021-10-22"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":54,"author":{"gitId":"-"},"content":"AddressBook *--\u003e \"1\" UniquePersonList","lastModifiedDate":"2019-07-30"},{"lineNumber":55,"author":{"gitId":"david-eom"},"content":"UniquePersonList -r\u003e \"~* all\" Person","lastModifiedDate":"2021-10-22"},{"lineNumber":56,"author":{"gitId":"david-eom"},"content":"UniquePersonList -[hidden]-\u003e AddressBook","lastModifiedDate":"2021-10-22"},{"lineNumber":57,"author":{"gitId":"david-eom"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":58,"author":{"gitId":"david-eom"},"content":"Person *----\u003e Name","lastModifiedDate":"2021-10-22"},{"lineNumber":59,"author":{"gitId":"david-eom"},"content":"Person *----\u003e Phone","lastModifiedDate":"2021-10-22"},{"lineNumber":60,"author":{"gitId":"david-eom"},"content":"Person *----\u003e \"*\" Tag","lastModifiedDate":"2021-10-22"},{"lineNumber":61,"author":{"gitId":"david-eom"},"content":"Person *----\u003e Remark","lastModifiedDate":"2021-10-22"},{"lineNumber":62,"author":{"gitId":"david-eom"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":63,"author":{"gitId":"david-eom"},"content":"Person *--\u003e Facebook","lastModifiedDate":"2021-10-22"},{"lineNumber":64,"author":{"gitId":"david-eom"},"content":"Person *--\u003e Instagram","lastModifiedDate":"2021-10-22"},{"lineNumber":65,"author":{"gitId":"david-eom"},"content":"Person *--\u003e Telegram","lastModifiedDate":"2021-10-22"},{"lineNumber":66,"author":{"gitId":"david-eom"},"content":"Person *--\u003e TikTok","lastModifiedDate":"2021-10-22"},{"lineNumber":67,"author":{"gitId":"david-eom"},"content":"Person *--\u003eTwitter","lastModifiedDate":"2021-10-22"},{"lineNumber":68,"author":{"gitId":"david-eom"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":69,"author":{"gitId":"david-eom"},"content":"Facebook -d-|\u003e Handle","lastModifiedDate":"2021-10-22"},{"lineNumber":70,"author":{"gitId":"david-eom"},"content":"Instagram -d-|\u003e Handle","lastModifiedDate":"2021-10-22"},{"lineNumber":71,"author":{"gitId":"david-eom"},"content":"Telegram -d-|\u003e Handle","lastModifiedDate":"2021-10-22"},{"lineNumber":72,"author":{"gitId":"david-eom"},"content":"TikTok -d-|\u003e Handle","lastModifiedDate":"2021-10-22"},{"lineNumber":73,"author":{"gitId":"david-eom"},"content":"Twitter -d-|\u003e Handle","lastModifiedDate":"2021-10-22"},{"lineNumber":74,"author":{"gitId":"david-eom"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":75,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"david-eom":44,"-":31}},{"path":"docs/diagrams/StorageClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam arrowColor STORAGE_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam classBackgroundColor STORAGE_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"package Storage{","lastModifiedDate":"2021-07-31"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":9,"author":{"gitId":"-"},"content":"Interface Storage \u003c\u003cInterface\u003e\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":10,"author":{"gitId":"-"},"content":"Class StorageManager","lastModifiedDate":"2019-07-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":12,"author":{"gitId":"-"},"content":"package \"AddressBook Storage\" #F4F6F6{","lastModifiedDate":"2021-07-31"},{"lineNumber":13,"author":{"gitId":"-"},"content":"Interface AddressBookStorage \u003c\u003cInterface\u003e\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":14,"author":{"gitId":"-"},"content":"Class JsonAddressBookStorage","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"Class JsonSerializableAddressBook","lastModifiedDate":"2021-07-31"},{"lineNumber":16,"author":{"gitId":"-"},"content":"Class JsonAdaptedPerson","lastModifiedDate":"2021-07-31"},{"lineNumber":17,"author":{"gitId":"-"},"content":"Class JsonAdaptedTag","lastModifiedDate":"2021-07-31"},{"lineNumber":18,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-07-31"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":20,"author":{"gitId":"david-eom"},"content":"package \"CommandHistory Storage\" #F4F6F6{","lastModifiedDate":"2021-10-22"},{"lineNumber":21,"author":{"gitId":"david-eom"},"content":"Interface CommandHistoryStorage \u003c\u003cInterface\u003e\u003e","lastModifiedDate":"2021-10-22"},{"lineNumber":22,"author":{"gitId":"david-eom"},"content":"Class JsonCommandHistoryStorage","lastModifiedDate":"2021-10-22"},{"lineNumber":23,"author":{"gitId":"david-eom"},"content":"Class JsonSerializableCommandHistory","lastModifiedDate":"2021-10-22"},{"lineNumber":24,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-07-31"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":26,"author":{"gitId":"david-eom"},"content":"package \"UserPrefs Storage\" #F4F6F6{","lastModifiedDate":"2021-10-22"},{"lineNumber":27,"author":{"gitId":"david-eom"},"content":"Interface UserPrefsStorage \u003c\u003cInterface\u003e\u003e","lastModifiedDate":"2021-10-22"},{"lineNumber":28,"author":{"gitId":"david-eom"},"content":"Class JsonUserPrefsStorage","lastModifiedDate":"2021-10-22"},{"lineNumber":29,"author":{"gitId":"david-eom"},"content":"}","lastModifiedDate":"2021-10-22"},{"lineNumber":30,"author":{"gitId":"david-eom"},"content":"}","lastModifiedDate":"2021-10-22"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":33,"author":{"gitId":"david-eom"},"content":"Class HiddenOutside #FFFFFF","lastModifiedDate":"2021-10-22"},{"lineNumber":34,"author":{"gitId":"david-eom"},"content":"HiddenOutside .right.\u003e Storage","lastModifiedDate":"2021-10-22"},{"lineNumber":35,"author":{"gitId":"david-eom"},"content":"StorageManager ..|\u003e Storage","lastModifiedDate":"2021-10-22"},{"lineNumber":36,"author":{"gitId":"david-eom"},"content":"StorageManager .[hidden]up.\u003e Storage","lastModifiedDate":"2021-10-22"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":38,"author":{"gitId":"-"},"content":"JsonAddressBookStorage .up.|\u003e AddressBookStorage","lastModifiedDate":"2021-07-31"},{"lineNumber":39,"author":{"gitId":"david-eom"},"content":"JsonAddressBookStorage .down.\u003e JsonSerializableAddressBook","lastModifiedDate":"2021-10-22"},{"lineNumber":40,"author":{"gitId":"david-eom"},"content":"JsonSerializableAddressBook -down-\u003e \"*\" JsonAdaptedPerson","lastModifiedDate":"2021-10-22"},{"lineNumber":41,"author":{"gitId":"david-eom"},"content":"JsonAdaptedPerson -down-\u003e \"*\" JsonAdaptedTag","lastModifiedDate":"2021-10-22"},{"lineNumber":42,"author":{"gitId":"david-eom"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":43,"author":{"gitId":"david-eom"},"content":"JsonUserPrefsStorage .up.|\u003e UserPrefsStorage","lastModifiedDate":"2021-10-22"},{"lineNumber":44,"author":{"gitId":"david-eom"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":45,"author":{"gitId":"david-eom"},"content":"JsonCommandHistoryStorage .up.|\u003e CommandHistoryStorage","lastModifiedDate":"2021-10-22"},{"lineNumber":46,"author":{"gitId":"david-eom"},"content":"JsonCommandHistoryStorage .down.\u003e JsonSerializableCommandHistory","lastModifiedDate":"2021-10-22"},{"lineNumber":47,"author":{"gitId":"david-eom"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":48,"author":{"gitId":"david-eom"},"content":"StorageManager ---\u003e \"1\" UserPrefsStorage","lastModifiedDate":"2021-10-22"},{"lineNumber":49,"author":{"gitId":"david-eom"},"content":"StorageManager ---\u003e \"1\" AddressBookStorage","lastModifiedDate":"2021-10-22"},{"lineNumber":50,"author":{"gitId":"david-eom"},"content":"StorageManager ---\u003e \"1\" CommandHistoryStorage","lastModifiedDate":"2021-10-22"},{"lineNumber":51,"author":{"gitId":"david-eom"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":52,"author":{"gitId":"david-eom"},"content":"Storage ----|\u003e UserPrefsStorage","lastModifiedDate":"2021-10-22"},{"lineNumber":53,"author":{"gitId":"david-eom"},"content":"Storage ----|\u003e AddressBookStorage","lastModifiedDate":"2021-10-22"},{"lineNumber":54,"author":{"gitId":"david-eom"},"content":"Storage ----|\u003e CommandHistoryStorage","lastModifiedDate":"2021-10-22"},{"lineNumber":55,"author":{"gitId":"david-eom"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":56,"author":{"gitId":"david-eom"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":58,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"david-eom":31,"-":27}},{"path":"docs/index.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"EssWhyy"},"content":"title: SociaLite","lastModifiedDate":"2021-10-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"david-eom"},"content":"# SociaLite","lastModifiedDate":"2021-10-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"[![CI Status](https://github.com/AY2122S1-CS2103T-F11-4/tp/workflows/Java%20CI/badge.svg)](https://github.com/AY2122S1-CS2103T-F11-4/tp/actions)","lastModifiedDate":"2021-10-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"[![codecov](https://codecov.io/gh/AY2122S1-CS2103T-F11-4/tp/branch/master/graph/badge.svg?token\u003dKPARXU5FYH)](https://codecov.io/gh/AY2122S1-CS2103T-F11-4/tp)","lastModifiedDate":"2021-10-21"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"![Ui](images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"david-eom"},"content":"**SociaLite** is a project developed for the CS2103T Software Engineering module by [our team](docs/AboutUs.md), based off [AddressBook Level 3](https://github.com/se-edu/addressbook-level3). It is a desktop app for **connecting you with your contacts’ social media pages**, optimized for use via a command line interface (CLI) while still having the benefits of a graphical user interface (GUI). If you can type fast, SociaLite can get you to your contacts’ social media pages faster than traditional GUI apps!","lastModifiedDate":"2021-10-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":15,"author":{"gitId":"david-eom"},"content":"### Getting Started","lastModifiedDate":"2021-10-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"david-eom"},"content":"* If you are interested in using SociaLite, check out the [**User Guide**](https://github.com/AY2122S1-CS2103T-F11-4/tp/blob/master/docs/UserGuide.md).","lastModifiedDate":"2021-10-22"},{"lineNumber":18,"author":{"gitId":"david-eom"},"content":"* If you are interested about developing SociaLite, check out the [**Developer Guide**](https://github.com/AY2122S1-CS2103T-F11-4/tp/blob/master/docs/DeveloperGuide.md).","lastModifiedDate":"2021-10-22"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"EssWhyy":1,"david-eom":5,"-":13}},{"path":"docs/tutorials/AddRemark.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-07-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-07-29"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: \"Tutorial: Adding a command\"","lastModifiedDate":"2020-07-29"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-07-29"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":6,"author":{"gitId":"-"},"content":"Let\u0027s walk you through the implementation of a new command — `remark`.","lastModifiedDate":"2020-07-29"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":8,"author":{"gitId":"-"},"content":"This command allows users of the AddressBook application to add optional remarks to people in their address book and edit it if required. The command should have the following format:","lastModifiedDate":"2020-07-29"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":10,"author":{"gitId":"-"},"content":"`remark INDEX r/REMARK` (e.g., `remark 2 r/Likes baseball`)","lastModifiedDate":"2020-07-29"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":12,"author":{"gitId":"-"},"content":"We’ll assume that you have already set up the development environment as outlined in the Developer’s Guide.","lastModifiedDate":"2020-07-29"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":"## Create a new `remark` command","lastModifiedDate":"2020-07-29"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":17,"author":{"gitId":"-"},"content":"Looking in the `logic.command` package, you will notice that each existing command have their own class. All the commands inherit from the abstract class `Command` which means that they must override `execute()`. Each `Command` returns an instance of `CommandResult` upon success and `CommandResult#feedbackToUser` is printed to the `ResultDisplay`.","lastModifiedDate":"2020-07-29"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":19,"author":{"gitId":"-"},"content":"Let’s start by creating a new `RemarkCommand` class in the `src/main/java/seedu/address/logic/command` directory.","lastModifiedDate":"2020-07-29"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"For now, let’s keep `RemarkCommand` as simple as possible and print some output. We accomplish that by returning a `CommandResult` with an accompanying message.","lastModifiedDate":"2020-07-29"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":23,"author":{"gitId":"-"},"content":"**`RemarkCommand.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":25,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":26,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2020-07-29"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":28,"author":{"gitId":"david-eom"},"content":"import Model;","lastModifiedDate":"2021-10-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":30,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-07-29"},{"lineNumber":31,"author":{"gitId":"-"},"content":" * Changes the remark of an existing person in the address book.","lastModifiedDate":"2020-07-29"},{"lineNumber":32,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-07-29"},{"lineNumber":33,"author":{"gitId":"-"},"content":"public class RemarkCommand extends Command {","lastModifiedDate":"2020-07-29"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"remark\";","lastModifiedDate":"2020-07-29"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2020-07-29"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return new CommandResult(\"Hello from remark\");","lastModifiedDate":"2020-07-29"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":41,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":42,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":44,"author":{"gitId":"-"},"content":"### Hook `RemarkCommand` into the application","lastModifiedDate":"2020-07-29"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":46,"author":{"gitId":"-"},"content":"Now that we have our `RemarkCommand` ready to be executed, we need to update `AddressBookParser#parseCommand()` to recognize the `remark` keyword. Add the new command to the `switch` block by creating a new `case` that returns a new instance of `RemarkCommand`.","lastModifiedDate":"2020-07-29"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":48,"author":{"gitId":"-"},"content":"You can refer to the changes in this [diff](https://github.com/se-edu/addressbook-level3/commit/35eb7286f18a029d39cb7a29df8f172a001e4fd8#diff-34ace715a8a8d2e5a66e71289f017b47).","lastModifiedDate":"2020-07-29"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":50,"author":{"gitId":"-"},"content":"### Run the application","lastModifiedDate":"2020-07-29"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":52,"author":{"gitId":"-"},"content":"Run `Main#main` and try out your new `RemarkCommand`. If everything went well, you should see something like this:","lastModifiedDate":"2020-07-29"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":54,"author":{"gitId":"-"},"content":"![Output displayed](../images/add-remark/RemarkHello.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":56,"author":{"gitId":"-"},"content":"## Change `RemarkCommand` to throw an exception","lastModifiedDate":"2020-07-29"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":58,"author":{"gitId":"-"},"content":"While we have successfully printed a message to `ResultDisplay`, the command does not do what it is supposed to do. Let’s change the command to throw a `CommandException` to accurately reflect that our command is still a work in progress.","lastModifiedDate":"2020-12-12"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":60,"author":{"gitId":"-"},"content":"![The relationship between RemarkCommand and Command](../images/add-remark/CommandInterface.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":62,"author":{"gitId":"-"},"content":"Following the convention in other commands, we add relevant messages as constants and use them.","lastModifiedDate":"2020-07-29"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":64,"author":{"gitId":"-"},"content":"**`RemarkCommand.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":66,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2021-08-01"},{"lineNumber":68,"author":{"gitId":"-"},"content":"            + \": Edits the remark of the person identified \"","lastModifiedDate":"2021-08-01"},{"lineNumber":69,"author":{"gitId":"-"},"content":"            + \"by the index number used in the last person listing. \"","lastModifiedDate":"2020-07-29"},{"lineNumber":70,"author":{"gitId":"-"},"content":"            + \"Existing remark will be overwritten by the input.\\n\"","lastModifiedDate":"2020-07-29"},{"lineNumber":71,"author":{"gitId":"-"},"content":"            + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2020-07-29"},{"lineNumber":72,"author":{"gitId":"-"},"content":"            + \"r/ [REMARK]\\n\"","lastModifiedDate":"2020-07-29"},{"lineNumber":73,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2020-07-29"},{"lineNumber":74,"author":{"gitId":"-"},"content":"            + \"r/ Likes to swim.\";","lastModifiedDate":"2020-07-29"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_NOT_IMPLEMENTED_YET \u003d","lastModifiedDate":"2021-08-01"},{"lineNumber":77,"author":{"gitId":"-"},"content":"            \"Remark command not implemented yet\";","lastModifiedDate":"2021-08-01"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2020-07-29"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        throw new CommandException(MESSAGE_NOT_IMPLEMENTED_YET);","lastModifiedDate":"2020-07-29"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":83,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":85,"author":{"gitId":"-"},"content":"## Enhancing `RemarkCommand`","lastModifiedDate":"2020-07-29"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":87,"author":{"gitId":"-"},"content":"Let’s change `RemarkCommand` to parse input from the user.","lastModifiedDate":"2020-07-29"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":89,"author":{"gitId":"-"},"content":"### Make the command accept parameters","lastModifiedDate":"2020-07-29"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":91,"author":{"gitId":"-"},"content":"We start by modifying the constructor of `RemarkCommand` to accept an `Index` and a `String`. While we are at it, let’s change the error message to echo the values. While this is not a replacement for tests, it is an obvious way to tell if our code is functioning as intended.","lastModifiedDate":"2020-07-29"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":93,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":94,"author":{"gitId":"david-eom"},"content":"import static CollectionUtil.requireAllNonNull;","lastModifiedDate":"2021-10-08"},{"lineNumber":95,"author":{"gitId":"-"},"content":"//...","lastModifiedDate":"2020-07-29"},{"lineNumber":96,"author":{"gitId":"-"},"content":"public class RemarkCommand extends Command {","lastModifiedDate":"2020-07-29"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    //...","lastModifiedDate":"2020-07-29"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_ARGUMENTS \u003d \"Index: %1$d, Remark: %2$s\";","lastModifiedDate":"2020-07-29"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    private final Index index;","lastModifiedDate":"2020-07-29"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    private final String remark;","lastModifiedDate":"2020-07-29"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-07-29"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     * @param index of the person in the filtered person list to edit the remark","lastModifiedDate":"2020-07-29"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     * @param remark of the person to be updated to","lastModifiedDate":"2020-07-29"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-07-29"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    public RemarkCommand(Index index, String remark) {","lastModifiedDate":"2020-07-29"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        requireAllNonNull(index, remark);","lastModifiedDate":"2020-07-29"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        this.index \u003d index;","lastModifiedDate":"2020-07-29"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        this.remark \u003d remark;","lastModifiedDate":"2020-07-29"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2020-07-29"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        throw new CommandException(","lastModifiedDate":"2021-08-01"},{"lineNumber":116,"author":{"gitId":"-"},"content":"                String.format(MESSAGE_ARGUMENTS, index.getOneBased(), remark));","lastModifiedDate":"2021-08-01"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2020-07-29"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2020-07-29"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2020-07-29"},{"lineNumber":123,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2020-07-29"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-07-29"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2020-07-29"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        if (!(other instanceof RemarkCommand)) {","lastModifiedDate":"2020-07-29"},{"lineNumber":128,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2020-07-29"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-07-29"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2020-07-29"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        RemarkCommand e \u003d (RemarkCommand) other;","lastModifiedDate":"2020-07-29"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        return index.equals(e.index)","lastModifiedDate":"2020-07-29"},{"lineNumber":134,"author":{"gitId":"-"},"content":"                \u0026\u0026 remark.equals(e.remark);","lastModifiedDate":"2020-07-29"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":136,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":137,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":139,"author":{"gitId":"-"},"content":"Your code should look something like [this](https://github.com/se-edu/addressbook-level3/commit/35eb7286f18a029d39cb7a29df8f172a001e4fd8#diff-34ace715a8a8d2e5a66e71289f017b47) after you are done.","lastModifiedDate":"2020-07-29"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":141,"author":{"gitId":"-"},"content":"### Parse user input","lastModifiedDate":"2020-07-29"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":143,"author":{"gitId":"-"},"content":"Now let’s move on to writing a parser that will extract the index and remark from the input provided by the user.","lastModifiedDate":"2020-07-29"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":145,"author":{"gitId":"-"},"content":"Create a `RemarkCommandParser` class in the `seedu.address.logic.parser` package. The class must extend the `Parser` interface.","lastModifiedDate":"2020-07-29"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":147,"author":{"gitId":"-"},"content":"![The relationship between Parser and RemarkCommandParser](../images/add-remark/ParserInterface.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":149,"author":{"gitId":"-"},"content":"Thankfully, `ArgumentTokenizer#tokenize()` makes it trivial to parse user input. Let’s take a look at the JavaDoc provided for the function to understand what it does.","lastModifiedDate":"2020-07-29"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":151,"author":{"gitId":"-"},"content":"**`ArgumentTokenizer.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":153,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":154,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-07-29"},{"lineNumber":155,"author":{"gitId":"-"},"content":" * Tokenizes an arguments string and returns an {@code ArgumentMultimap}","lastModifiedDate":"2020-07-29"},{"lineNumber":156,"author":{"gitId":"-"},"content":" * object that maps prefixes to their respective argument values. Only the","lastModifiedDate":"2020-07-29"},{"lineNumber":157,"author":{"gitId":"-"},"content":" * given prefixes will be recognized in the arguments string.","lastModifiedDate":"2020-07-29"},{"lineNumber":158,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2020-07-29"},{"lineNumber":159,"author":{"gitId":"-"},"content":" * @param argsString Arguments string of the form:","lastModifiedDate":"2020-07-29"},{"lineNumber":160,"author":{"gitId":"-"},"content":" * {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}","lastModifiedDate":"2020-07-29"},{"lineNumber":161,"author":{"gitId":"-"},"content":" * @param prefixes   Prefixes to tokenize the arguments string with","lastModifiedDate":"2020-07-29"},{"lineNumber":162,"author":{"gitId":"-"},"content":" * @return           ArgumentMultimap object that maps prefixes to their","lastModifiedDate":"2020-07-29"},{"lineNumber":163,"author":{"gitId":"-"},"content":" * arguments","lastModifiedDate":"2020-07-29"},{"lineNumber":164,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-07-29"},{"lineNumber":165,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":167,"author":{"gitId":"-"},"content":"We can tell `ArgumentTokenizer#tokenize()` to look out for our new prefix `r/` and it will return us an instance of `ArgumentMultimap`. Now let’s find out what we need to do in order to obtain the Index and String that we need. Let’s look through `ArgumentMultimap` :","lastModifiedDate":"2020-07-29"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":169,"author":{"gitId":"-"},"content":"**`ArgumentMultimap.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":171,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":172,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-07-29"},{"lineNumber":173,"author":{"gitId":"-"},"content":" * Returns the last value of {@code prefix}.","lastModifiedDate":"2020-07-29"},{"lineNumber":174,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-07-29"},{"lineNumber":175,"author":{"gitId":"-"},"content":"public Optional\u003cString\u003e getValue(Prefix prefix) {","lastModifiedDate":"2020-07-29"},{"lineNumber":176,"author":{"gitId":"-"},"content":"    List\u003cString\u003e values \u003d getAllValues(prefix);","lastModifiedDate":"2020-07-29"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    return values.isEmpty() ? Optional.empty() :","lastModifiedDate":"2020-07-29"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        Optional.of(values.get(values.size() - 1));","lastModifiedDate":"2020-07-29"},{"lineNumber":179,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":180,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":182,"author":{"gitId":"-"},"content":"This appears to be what we need to get a String of the remark. But what about the Index? Let\u0027s take a quick peek at existing `Command` that uses an index to see how it is done.","lastModifiedDate":"2020-07-29"},{"lineNumber":183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":184,"author":{"gitId":"-"},"content":"**`DeleteCommandParser.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":185,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":186,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":187,"author":{"gitId":"-"},"content":"Index index \u003d ParserUtil.parseIndex(args);","lastModifiedDate":"2020-07-29"},{"lineNumber":188,"author":{"gitId":"-"},"content":"return new DeleteCommand(index);","lastModifiedDate":"2020-07-29"},{"lineNumber":189,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":191,"author":{"gitId":"-"},"content":"There appears to be another utility class that obtains an `Index` from the input provided by the user.","lastModifiedDate":"2020-07-29"},{"lineNumber":192,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":193,"author":{"gitId":"-"},"content":"Now that we have the know-how to extract the data that we need from the user’s input, we can parse the user command and create a new instance of `RemarkCommand`, as given below.","lastModifiedDate":"2020-07-29"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":195,"author":{"gitId":"-"},"content":"**`RemarkCommandParser.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":197,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":198,"author":{"gitId":"-"},"content":"public RemarkCommand parse(String args) throws ParseException {","lastModifiedDate":"2020-07-29"},{"lineNumber":199,"author":{"gitId":"-"},"content":"    requireNonNull(args);","lastModifiedDate":"2020-07-29"},{"lineNumber":200,"author":{"gitId":"-"},"content":"    ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(args,","lastModifiedDate":"2020-07-29"},{"lineNumber":201,"author":{"gitId":"-"},"content":"        PREFIX_REMARK);","lastModifiedDate":"2020-07-29"},{"lineNumber":202,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":203,"author":{"gitId":"-"},"content":"    Index index;","lastModifiedDate":"2020-07-29"},{"lineNumber":204,"author":{"gitId":"-"},"content":"    try {","lastModifiedDate":"2020-07-29"},{"lineNumber":205,"author":{"gitId":"-"},"content":"        index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2020-07-29"},{"lineNumber":206,"author":{"gitId":"-"},"content":"    } catch (IllegalValueException ive) {","lastModifiedDate":"2020-07-29"},{"lineNumber":207,"author":{"gitId":"-"},"content":"        throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2020-07-29"},{"lineNumber":208,"author":{"gitId":"-"},"content":"            RemarkCommand.MESSAGE_USAGE), ive);","lastModifiedDate":"2020-07-29"},{"lineNumber":209,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":210,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":211,"author":{"gitId":"-"},"content":"    String remark \u003d argMultimap.getValue(PREFIX_REMARK).orElse(\"\");","lastModifiedDate":"2020-07-29"},{"lineNumber":212,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":213,"author":{"gitId":"-"},"content":"    return new RemarkCommand(index, remark);","lastModifiedDate":"2020-07-29"},{"lineNumber":214,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":215,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":217,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":218,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":219,"author":{"gitId":"-"},"content":":information_source: Don’t forget to update `AddressBookParser` to use our new `RemarkCommandParser`!","lastModifiedDate":"2020-07-29"},{"lineNumber":220,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":221,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":222,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":223,"author":{"gitId":"-"},"content":"If you are stuck, check out the sample","lastModifiedDate":"2020-07-29"},{"lineNumber":224,"author":{"gitId":"-"},"content":"[here](https://github.com/se-edu/addressbook-level3/commit/dc6d5139d08f6403da0ec624ea32bd79a2ae0cbf#diff-fc19ecee89c3732a62fbc8c840250508).","lastModifiedDate":"2020-07-29"},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":226,"author":{"gitId":"-"},"content":"## Add `Remark` to the model","lastModifiedDate":"2020-07-29"},{"lineNumber":227,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":228,"author":{"gitId":"-"},"content":"Now that we have all the information that we need, let’s lay the groundwork for propagating the remarks added into the in-memory storage of person data. We achieve that by working with the `Person` model. Each field in a Person is implemented as a separate class (e.g. a `Name` object represents the person’s name). That means we should add a `Remark` class so that we can use a `Remark` object to represent a remark given to a person.","lastModifiedDate":"2020-07-29"},{"lineNumber":229,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":230,"author":{"gitId":"-"},"content":"### Add a new `Remark` class","lastModifiedDate":"2020-07-29"},{"lineNumber":231,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":232,"author":{"gitId":"-"},"content":"Create a new `Remark` in `seedu.address.model.person`. Since a `Remark` is a field that is similar to `Address`, we can reuse a significant bit of code.","lastModifiedDate":"2020-07-29"},{"lineNumber":233,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":234,"author":{"gitId":"-"},"content":"A copy-paste and search-replace later, you should have something like [this](https://github.com/se-edu/addressbook-level3/commit/4516e099699baa9e2d51801bd26f016d812dedcc#diff-af2f075d24dfcd333876f0fbce321f25). Note how `Remark` has no constrains and thus does not require input","lastModifiedDate":"2020-07-29"},{"lineNumber":235,"author":{"gitId":"-"},"content":"validation.","lastModifiedDate":"2020-07-29"},{"lineNumber":236,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":237,"author":{"gitId":"-"},"content":"### Make use of `Remark`","lastModifiedDate":"2020-07-29"},{"lineNumber":238,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":239,"author":{"gitId":"-"},"content":"Let’s change `RemarkCommand` and `RemarkCommandParser` to use the new `Remark` class instead of plain `String`. These should be relatively simple changes.","lastModifiedDate":"2020-07-29"},{"lineNumber":240,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":241,"author":{"gitId":"-"},"content":"## Add a placeholder element for remark to the UI","lastModifiedDate":"2020-07-29"},{"lineNumber":242,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":243,"author":{"gitId":"-"},"content":"Without getting too deep into `fxml`, let’s go on a 5 minute adventure to get some placeholder text to show up for each person.","lastModifiedDate":"2020-07-29"},{"lineNumber":244,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":245,"author":{"gitId":"david-eom"},"content":"Simply add the following to [`PersonCard`](https://github.com/se-edu/addressbook-level3/commit/850b78879582f38accb05dd20c245963c65ea599#diff-0c6b6abcfac8c205e075294f25e851fe).","lastModifiedDate":"2021-10-08"},{"lineNumber":246,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":247,"author":{"gitId":"-"},"content":"**`PersonCard.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":248,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":249,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":250,"author":{"gitId":"-"},"content":"@FXML","lastModifiedDate":"2020-07-29"},{"lineNumber":251,"author":{"gitId":"-"},"content":"private Label remark;","lastModifiedDate":"2020-07-29"},{"lineNumber":252,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":253,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":254,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":255,"author":{"gitId":"-"},"content":"`@FXML` is an annotation that marks a private or protected field and makes it accessible to FXML. It might sound like Greek to you right now, don’t worry — we will get back to it later.","lastModifiedDate":"2020-07-29"},{"lineNumber":256,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":257,"author":{"gitId":"-"},"content":"Then insert the following into [`main/resources/view/PersonListCard.fxml`](https://github.com/se-edu/addressbook-level3/commit/850b78879582f38accb05dd20c245963c65ea599#diff-12580431f55d7880578aa4c16f249e71).","lastModifiedDate":"2020-07-29"},{"lineNumber":258,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":259,"author":{"gitId":"-"},"content":"**`PersonListCard.fxml`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":260,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":261,"author":{"gitId":"-"},"content":"``` xml","lastModifiedDate":"2020-07-29"},{"lineNumber":262,"author":{"gitId":"-"},"content":"\u003cLabel fx:id\u003d\"remark\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$remark\" /\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":263,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":264,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":265,"author":{"gitId":"-"},"content":"That’s it! Fire up the application again and you should see something like this:","lastModifiedDate":"2020-07-29"},{"lineNumber":266,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":267,"author":{"gitId":"-"},"content":"![$remark shows up in each entry](../images/add-remark/$Remark.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":268,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":269,"author":{"gitId":"-"},"content":"## Modify `Person` to support a `Remark` field","lastModifiedDate":"2020-07-29"},{"lineNumber":270,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":271,"author":{"gitId":"-"},"content":"Since `PersonCard` displays data from a `Person`, we need to update `Person` to get our `Remark` displayed!","lastModifiedDate":"2020-07-29"},{"lineNumber":272,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":273,"author":{"gitId":"-"},"content":"### Modify `Person`","lastModifiedDate":"2020-07-29"},{"lineNumber":274,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":275,"author":{"gitId":"-"},"content":"We change the constructor of `Person` to take a `Remark`. We will also need to define new fields and accessors accordingly to store our new addition.","lastModifiedDate":"2020-07-29"},{"lineNumber":276,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":277,"author":{"gitId":"-"},"content":"### Update other usages of `Person`","lastModifiedDate":"2020-07-29"},{"lineNumber":278,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":279,"author":{"gitId":"-"},"content":"Unfortunately, a change to `Person` will cause other commands to break, you will have to modify these commands to use the updated `Person`!","lastModifiedDate":"2020-07-29"},{"lineNumber":280,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":281,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":282,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":283,"author":{"gitId":"-"},"content":":bulb: Use the `Find Usages` feature in IntelliJ IDEA on the `Person` class to find these commands.","lastModifiedDate":"2020-07-29"},{"lineNumber":284,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":285,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":286,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":287,"author":{"gitId":"-"},"content":"Refer to [this commit](https://github.com/se-edu/addressbook-level3/commit/ce998c37e65b92d35c91d28c7822cd139c2c0a5c) and check that you have got everything in order!","lastModifiedDate":"2020-07-29"},{"lineNumber":288,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":289,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":290,"author":{"gitId":"-"},"content":"## Updating Storage","lastModifiedDate":"2020-07-29"},{"lineNumber":291,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":292,"author":{"gitId":"-"},"content":"AddressBook stores data by serializing `JsonAdaptedPerson` into `json` with the help of an external library — Jackson. Let’s update `JsonAdaptedPerson` to work with our new `Person`!","lastModifiedDate":"2020-07-29"},{"lineNumber":293,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":294,"author":{"gitId":"-"},"content":"While the changes to code may be minimal, the test data will have to be updated as well.","lastModifiedDate":"2020-07-29"},{"lineNumber":295,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":296,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-warning\"\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":297,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":298,"author":{"gitId":"-"},"content":":exclamation: You must delete AddressBook’s storage file located at `/data/addressbook.json` before running it! Not doing so will cause AddressBook to default to an empty address book!","lastModifiedDate":"2020-07-29"},{"lineNumber":299,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":300,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-07-29"},{"lineNumber":301,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":302,"author":{"gitId":"-"},"content":"Check out [this commit](https://github.com/se-edu/addressbook-level3/commit/556cbd0e03ff224d7a68afba171ad2eb0ce56bbf)","lastModifiedDate":"2020-07-29"},{"lineNumber":303,"author":{"gitId":"-"},"content":"to see what the changes entail.","lastModifiedDate":"2020-07-29"},{"lineNumber":304,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":305,"author":{"gitId":"-"},"content":"## Finalizing the UI","lastModifiedDate":"2020-07-29"},{"lineNumber":306,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":307,"author":{"gitId":"-"},"content":"Now that we have finalized the `Person` class and its dependencies, we can now bind the `Remark` field to the UI.","lastModifiedDate":"2020-07-29"},{"lineNumber":308,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":309,"author":{"gitId":"-"},"content":"Just add [this one line of code!](https://github.com/se-edu/addressbook-level3/commit/5b98fee11b6b3f5749b6b943c4f3bd3aa049b692)","lastModifiedDate":"2020-07-29"},{"lineNumber":310,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":311,"author":{"gitId":"-"},"content":"**`PersonCard.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":312,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":313,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":314,"author":{"gitId":"-"},"content":"public PersonCard(Person person, int displayedIndex) {","lastModifiedDate":"2020-07-29"},{"lineNumber":315,"author":{"gitId":"-"},"content":"    //...","lastModifiedDate":"2020-07-29"},{"lineNumber":316,"author":{"gitId":"-"},"content":"    remark.setText(person.getRemark().value);","lastModifiedDate":"2020-07-29"},{"lineNumber":317,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-07-29"},{"lineNumber":318,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":319,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":320,"author":{"gitId":"-"},"content":"![The remark label is bound properly!](../images/add-remark/RemarkBound.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":321,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":322,"author":{"gitId":"-"},"content":"## Putting everything together","lastModifiedDate":"2020-07-29"},{"lineNumber":323,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":324,"author":{"gitId":"-"},"content":"After the previous step, we notice a peculiar regression — we went from displaying something to nothing at all. However, this is expected behavior as we are yet to update the `RemarkCommand` to make use of the code we\u0027ve been adding in the last few steps.","lastModifiedDate":"2020-07-29"},{"lineNumber":325,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":326,"author":{"gitId":"-"},"content":"### Update `RemarkCommand` and `RemarkCommandParser`","lastModifiedDate":"2020-07-29"},{"lineNumber":327,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":328,"author":{"gitId":"-"},"content":"In this last step, we modify `RemarkCommand#execute()` to change the `Remark` of a `Person`. Since all fields in a `Person` are immutable, we create a new instance of a `Person` with the values that we want and","lastModifiedDate":"2020-07-29"},{"lineNumber":329,"author":{"gitId":"-"},"content":"save it with `Model#setPerson()`.","lastModifiedDate":"2020-07-29"},{"lineNumber":330,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":331,"author":{"gitId":"-"},"content":"**`RemarkCommand.java`:**","lastModifiedDate":"2020-07-29"},{"lineNumber":332,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":333,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-07-29"},{"lineNumber":334,"author":{"gitId":"-"},"content":"//...","lastModifiedDate":"2020-07-29"},{"lineNumber":335,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_ADD_REMARK_SUCCESS \u003d \"Added remark to Person: %1$s\";","lastModifiedDate":"2020-07-29"},{"lineNumber":336,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DELETE_REMARK_SUCCESS \u003d \"Removed remark from Person: %1$s\";","lastModifiedDate":"2020-07-29"},{"lineNumber":337,"author":{"gitId":"-"},"content":"//...","lastModifiedDate":"2020-07-29"},{"lineNumber":338,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2020-07-29"},{"lineNumber":339,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2020-07-29"},{"lineNumber":340,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2020-07-29"},{"lineNumber":341,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":342,"author":{"gitId":"-"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2020-07-29"},{"lineNumber":343,"author":{"gitId":"-"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2020-07-29"},{"lineNumber":344,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-07-29"},{"lineNumber":345,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":346,"author":{"gitId":"-"},"content":"        Person personToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2020-07-29"},{"lineNumber":347,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d new Person(","lastModifiedDate":"2021-08-01"},{"lineNumber":348,"author":{"gitId":"-"},"content":"                personToEdit.getName(), personToEdit.getPhone(), personToEdit.getEmail(),","lastModifiedDate":"2021-08-01"},{"lineNumber":349,"author":{"gitId":"-"},"content":"                personToEdit.getAddress(), remark, personToEdit.getTags());","lastModifiedDate":"2020-07-29"},{"lineNumber":350,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":351,"author":{"gitId":"-"},"content":"        model.setPerson(personToEdit, editedPerson);","lastModifiedDate":"2020-07-29"},{"lineNumber":352,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2020-07-29"},{"lineNumber":353,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":354,"author":{"gitId":"-"},"content":"        return new CommandResult(generateSuccessMessage(editedPerson));","lastModifiedDate":"2020-07-29"},{"lineNumber":355,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":356,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":357,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-07-29"},{"lineNumber":358,"author":{"gitId":"-"},"content":"     * Generates a command execution success message based on whether","lastModifiedDate":"2021-08-01"},{"lineNumber":359,"author":{"gitId":"-"},"content":"     * the remark is added to or removed from","lastModifiedDate":"2021-08-01"},{"lineNumber":360,"author":{"gitId":"-"},"content":"     * {@code personToEdit}.","lastModifiedDate":"2020-07-29"},{"lineNumber":361,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-07-29"},{"lineNumber":362,"author":{"gitId":"-"},"content":"    private String generateSuccessMessage(Person personToEdit) {","lastModifiedDate":"2020-07-29"},{"lineNumber":363,"author":{"gitId":"-"},"content":"        String message \u003d !remark.value.isEmpty() ? MESSAGE_ADD_REMARK_SUCCESS : MESSAGE_DELETE_REMARK_SUCCESS;","lastModifiedDate":"2020-07-29"},{"lineNumber":364,"author":{"gitId":"-"},"content":"        return String.format(message, personToEdit);","lastModifiedDate":"2020-07-29"},{"lineNumber":365,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-07-29"},{"lineNumber":366,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-07-29"},{"lineNumber":367,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":368,"author":{"gitId":"-"},"content":"![Congratulations!](../images/add-remark/RemarkComplete.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":369,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":370,"author":{"gitId":"-"},"content":"## Writing tests","lastModifiedDate":"2020-07-29"},{"lineNumber":371,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":372,"author":{"gitId":"-"},"content":"Tests are crucial to ensuring that bugs don’t slip into the codebase unnoticed. This is especially true for large code bases where a change might lead to unintended behavior.","lastModifiedDate":"2020-07-29"},{"lineNumber":373,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":374,"author":{"gitId":"-"},"content":"Let’s verify the correctness of our code by writing some tests!","lastModifiedDate":"2020-07-29"},{"lineNumber":375,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":376,"author":{"gitId":"-"},"content":"Of course you can simply add the test cases manually, like you\u0027ve been doing all along this tutorial. The result would be like the test cases in [here](https://github.com/se-edu/addressbook-level3/commit/fac8f3fd855d55831ca0cc73313b5943d49d4d6e#diff-d749de38392f7ea504da7824641ba8d9). Alternatively, you can get the help of IntelliJ to generate the skeletons of the test cases, as explained in the next section.","lastModifiedDate":"2021-08-01"},{"lineNumber":377,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-01"},{"lineNumber":378,"author":{"gitId":"-"},"content":"### Automatically generating tests","lastModifiedDate":"2020-07-29"},{"lineNumber":379,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":380,"author":{"gitId":"-"},"content":"The goal is to write effective and efficient tests to ensure that `RemarkCommand#execute()` behaves as expected.","lastModifiedDate":"2020-07-29"},{"lineNumber":381,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":382,"author":{"gitId":"-"},"content":"The convention for test names is `methodName_testScenario_expectedResult`. An example would be","lastModifiedDate":"2020-07-29"},{"lineNumber":383,"author":{"gitId":"-"},"content":"`execute_filteredList_success`.","lastModifiedDate":"2020-07-29"},{"lineNumber":384,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":385,"author":{"gitId":"-"},"content":"Let’s create a test for `RemarkCommand#execute()` to test that adding a remark works. On `IntelliJ IDEA` you can bring up the context menu and choose to `Go To` \\\u003e `Test` or use the appropriate keyboard shortcut.","lastModifiedDate":"2020-07-29"},{"lineNumber":386,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":387,"author":{"gitId":"-"},"content":"![Using the context menu to jump to tests](../images/add-remark/ContextMenu.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":388,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":389,"author":{"gitId":"-"},"content":"Then, create a test for the `execute` method.","lastModifiedDate":"2020-07-29"},{"lineNumber":390,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":391,"author":{"gitId":"-"},"content":"![Creating a test for `execute`.](../images/add-remark/CreateTest.png)","lastModifiedDate":"2020-07-29"},{"lineNumber":392,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":393,"author":{"gitId":"-"},"content":"Following convention, let’s change the name of the generated method to `execute_addRemarkUnfilteredList_success`.","lastModifiedDate":"2020-07-29"},{"lineNumber":394,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":395,"author":{"gitId":"-"},"content":"Let’s use the utility functions provided in `CommandTestUtil`. The functions ensure that commands produce the expected `CommandResult` and output the correct message. In this case, `CommandTestUtil#assertCommandSuccess` is the best fit as we are testing that a `RemarkCommand` will successfully add a `Remark`.","lastModifiedDate":"2020-07-29"},{"lineNumber":396,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":397,"author":{"gitId":"-"},"content":"You should end up with a test that looks something like [this](https://github.com/se-edu/addressbook-level3/commit/fac8f3fd855d55831ca0cc73313b5943d49d4d6e#diff-d749de38392f7ea504da7824641ba8d9).","lastModifiedDate":"2020-07-29"},{"lineNumber":398,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":399,"author":{"gitId":"-"},"content":"## Conclusion","lastModifiedDate":"2020-07-29"},{"lineNumber":400,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-07-29"},{"lineNumber":401,"author":{"gitId":"-"},"content":"This concludes the tutorial for adding a new `Command` to AddressBook.","lastModifiedDate":"2020-07-29"}],"authorContributionMap":{"david-eom":3,"-":398}},{"path":"docs/tutorials/RemovingFields.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: \"Tutorial: Removing Fields\"","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003e Perfection is achieved, not when there is nothing more to add, but when there is nothing left to take away.","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003e —  Antoine de Saint-Exupery","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"When working on an existing code base, you will most likely find that some features that are no longer necessary.","lastModifiedDate":"2021-08-01"},{"lineNumber":11,"author":{"gitId":"-"},"content":"This tutorial aims to give you some practice on such a code \u0027removal\u0027 activity by removing the `address` field from `Person` class.","lastModifiedDate":"2021-08-01"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-01"},{"lineNumber":13,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-success\"\u003e","lastModifiedDate":"2021-08-01"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-08-01"},{"lineNumber":15,"author":{"gitId":"-"},"content":"**If you have done the [Add `remark` command tutorial](AddRemark.html)  already**, you should know where the code had to be updated to add the field `remark`. From that experience, you can deduce where the code needs to be changed to _remove_ that field too. The removing of the `address` field can be done similarly.","lastModifiedDate":"2021-08-01"},{"lineNumber":16,"author":{"gitId":"-"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-08-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"\u003cbr\u003e","lastModifiedDate":"2021-08-01"},{"lineNumber":18,"author":{"gitId":"-"},"content":"However, if you have no such prior knowledge, removing a field can take a quite a bit of detective work. This tutorial takes you through that process. **At least have a read even if you don\u0027t actually do the steps yourself.**","lastModifiedDate":"2021-08-01"},{"lineNumber":19,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-08-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"## Safely deleting `Address`","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"IntelliJ IDEA provides a refactoring tool that can identify *most* parts of a removal easily. Let’s try to use it as much as we can.","lastModifiedDate":"2021-08-01"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"### Assisted refactoring","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"david-eom"},"content":"The `address` field in `Person` is actually an instance of the `Address` class. Since removing the `Address` class will break the application, we start by identifying `Address`\u0027s usages. This allows us to see code that depends on `Address` to function properly and edit them on a case-by-case basis. Right-click the `Address` class and select `Refactor` \\\u003e `Safe Delete` through the menu.","lastModifiedDate":"2021-10-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"* :bulb: To make things simpler, you can unselect the options `Search in comments and strings` and `Search for text occurrences`","lastModifiedDate":"2021-08-01"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"![Usages detected](../images/remove/UnsafeDelete.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"Choose to `View Usages` and you should be presented with a list of `Safe Delete Conflicts`. These conflicts describe locations in which the `Address` class is used.","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"![List of conflicts](../images/remove/SafeDeleteConflicts.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"Remove usages of `Address` by performing `Safe Delete`s on each entry i.e., double-click on the entry (which takes you to the code in concern, right-click on that entity, and choose `Refactor` -\u003e `Safe delete` as before). You will need to exercise discretion when removing usages of `Address`. Functions like `ParserUtil#parseAddress()` can be safely removed but its usages must be removed as well. Other usages like in `EditPersonDescriptor` may require more careful inspection.","lastModifiedDate":"2021-08-01"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"Let’s try removing references to `Address` in `EditPersonDescriptor`.","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"1. Safe delete the field `address` in `EditPersonDescriptor`.","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"1. Select `Yes` when prompted to remove getters and setters.","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"1. Select `View Usages` again.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"   ![UnsafeDeleteOnField](../images/remove/UnsafeDeleteOnField.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"1. Remove the usages of `address` and select `Do refactor` when you are done.","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"   \u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"   :bulb: **Tip:** Removing usages may result in errors. Exercise discretion and fix them. For example, removing the `address` field from the `Person` class will require you to modify its constructor.","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"   \u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"1. Repeat the steps for the remaining usages of `Address`","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"After you are done, verify that the application still works by compiling and running it again.","lastModifiedDate":"2020-05-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"### Manual refactoring","lastModifiedDate":"2020-05-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"Unfortunately, there are usages of `Address` that IntelliJ IDEA cannot identify. You can find them by searching for instances of the word `address` in your code (`Edit` \\\u003e `Find` \\\u003e `Find in path`).","lastModifiedDate":"2020-05-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"Places of interest to look out for would be resources used by the application. `main/resources` contains images and `fxml` files used by the application and `test/resources` contains test data. For example, there is a `$address` in each `PersonCard` that has not been removed nor identified.","lastModifiedDate":"2020-05-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"![$address](../images/remove/$address.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"A quick look at the `PersonCard` class and its `fxml` file quickly reveals why it slipped past the automated refactoring.","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"**`PersonCard.java`**","lastModifiedDate":"2020-05-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":"...","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"@FXML","lastModifiedDate":"2020-05-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"private Label address;","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"...","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"**`PersonCard.fxml`**","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"``` xml","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"...","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"\u003cLabel fx:id\u003d\"phone\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$phone\" /\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"\u003cLabel fx:id\u003d\"address\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$address\" /\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"\u003cLabel fx:id\u003d\"email\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$email\" /\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"...","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"After removing the `Label`, we can proceed to formally test our code. If everything went well, you should have most of your tests pass. Fix any remaining errors until the tests all pass.","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"## Tidying up","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"At this point, your application is working as intended and all your tests are passing. What’s left to do is to clean up references to `Address` in test data and documentation.","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"In `src/test/data/`, data meant for testing purposes are stored. While keeping the `address` field in the json files does not cause the tests to fail, it is not good practice to let cruft from old features accumulate.","lastModifiedDate":"2020-05-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"**`invalidPersonAddressBook.json`:**","lastModifiedDate":"2020-05-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"```json","lastModifiedDate":"2020-05-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"{","lastModifiedDate":"2020-05-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":"  \"persons\": [ {","lastModifiedDate":"2020-05-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    \"name\": \"Person with invalid name field: Ha!ns Mu@ster\",","lastModifiedDate":"2020-05-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    \"phone\": \"9482424\",","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    \"email\": \"hans@example.com\",","lastModifiedDate":"2020-05-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    \"address\": \"4th street\"","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"  } ]","lastModifiedDate":"2020-05-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2020-05-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":"You can go through each individual `json` file and manually remove the `address` field.","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"david-eom":1,"-":111}},{"path":"docs/tutorials/TracingCode.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: \"Tutorial: Tracing code\"","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003e Indeed, the ratio of time spent reading versus writing is well over 10 to 1. We are constantly reading old code as part of the effort to write new code. …​\\[Therefore,\\] making it easy to read makes it easier to write.","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003e —  Robert C. Martin Clean Code: A Handbook of Agile Software Craftsmanship","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"When trying to understand an unfamiliar code base, one common strategy used is to trace some representative execution path through the code base. One easy way to trace an execution path is to use a debugger to step through the code. In this tutorial, you will be using the IntelliJ IDEA’s debugger to trace the execution path of a specific user command.","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"## Before we start","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"Before we jump into the code, it is useful to get an idea of the overall structure and the high-level behavior of the application. This is provided in the \u0027Architecture\u0027 section of the developer guide. In particular, the architecture diagram (reproduced below), tells us that the App consists of several components.","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"![ArchitectureDiagram](../images/ArchitectureDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"It also has a sequence diagram (reproduced below) that tells us how a command propagates through the App.","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"../images/ArchitectureSequenceDiagram.png\" width\u003d\"550\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"Note how the diagram shows only the execution flows _between_ the main components. That is, it does not show details of the execution path *inside* each component. By hiding those details, the diagram aims to inform the reader about the overall execution path of a command without overwhelming the reader with too much details. In this tutorial, you aim to find those omitted details so that you get a more in-depth understanding of how the code works.","lastModifiedDate":"2021-07-31"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"Before we proceed, ensure that you have done the following:","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"1. Read the [*Architecture* section of the DG](../DeveloperGuide.md#architecture)","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"1. Set up the project in Intellij IDEA","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"1. Learn basic debugging features of Intellij IDEA","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"   * If you are using a different IDE, we\u0027ll leave it to you to figure out the equivalent feature to use in your IDE.","lastModifiedDate":"2021-07-31"},{"lineNumber":32,"author":{"gitId":"-"},"content":"   * If you are not using an IDE, we\u0027ll let you figure out how to achieve the same using your coding toolchain.","lastModifiedDate":"2021-07-31"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"## Setting a breakpoint","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"As you know, the first step of debugging is to put in a breakpoint where you want the debugger to pause the execution. For example, if you are trying to understand how the App starts up, you would put a breakpoint in the first statement of the `main` method.","lastModifiedDate":"2021-07-31"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"In our case, we would want to begin the tracing at the very point where the App start processing user input (i.e., somewhere in the UI component), and then trace through how the execution proceeds through the UI component. However, the execution path through a GUI is often somewhat obscure due to various *event-driven mechanisms* used by GUI frameworks, which happens to be the case here too. Therefore, let us put the breakpoint where the `UI` transfers control to the `Logic` component.","lastModifiedDate":"2021-07-31"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"../images/ArchitectureSequenceDiagram.png\" width\u003d\"550\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":42,"author":{"gitId":"david-eom"},"content":"According to the sequence diagram you saw earlier (and repeated above for reference), the `UI` component yields control to the `Logic` component through a method named `execute`. Searching through the code base for an `execute()` method that belongs to the `Logic` component yields a promising candidate in `Logic`.","lastModifiedDate":"2021-10-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":44,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"../images/tracing/searchResultsForExecuteMethod.png\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":46,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":48,"author":{"gitId":"-"},"content":":bulb: **Intellij Tip:** The [\u0027**Search Everywhere**\u0027 feature](https://www.jetbrains.com/help/idea/searching-everywhere.html) can be used here. In particular, the \u0027**Find Symbol**\u0027 (\u0027Symbol\u0027 here refers to methods, variables, classes etc.) variant of that feature is quite useful here as we are looking for a _method_ named `execute`, not simply the text `execute`.","lastModifiedDate":"2021-07-31"},{"lineNumber":49,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":51,"author":{"gitId":"david-eom"},"content":"A quick look at the `Logic` (an extract given below) confirms that this indeed might be what we’re looking for.","lastModifiedDate":"2021-10-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":53,"author":{"gitId":"-"},"content":"```java","lastModifiedDate":"2021-07-31"},{"lineNumber":54,"author":{"gitId":"-"},"content":"public interface Logic {","lastModifiedDate":"2021-07-31"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-07-31"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2021-07-31"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     * @param commandText The command as entered by the user.","lastModifiedDate":"2021-07-31"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     * @return the result of the command execution.","lastModifiedDate":"2021-07-31"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     * @throws CommandException If an error occurs during command execution.","lastModifiedDate":"2021-07-31"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     * @throws ParseException If an error occurs during parsing.","lastModifiedDate":"2021-07-31"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-07-31"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    CommandResult execute(String commandText) throws CommandException, ParseException;","lastModifiedDate":"2021-07-31"},{"lineNumber":63,"author":{"gitId":"-"},"content":"...","lastModifiedDate":"2021-07-31"},{"lineNumber":64,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-07-31"},{"lineNumber":65,"author":{"gitId":"-"},"content":"```","lastModifiedDate":"2021-07-31"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":67,"author":{"gitId":"-"},"content":"But apparently, this is an interface, not a concrete implementation.","lastModifiedDate":"2021-07-31"},{"lineNumber":68,"author":{"gitId":"-"},"content":"That should be fine because the [Architecture section of the Developer Guide](../DeveloperGuide.html#architecture) tells us that components interact through interfaces. Here\u0027s the relevant diagram:","lastModifiedDate":"2021-07-31"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":70,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"../images/ComponentManagers.png\" width\u003d\"300\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":72,"author":{"gitId":"-"},"content":"Next, let\u0027s find out which statement(s) in the `UI` code is calling this method, thus transferring control from the `UI` to the `Logic`.","lastModifiedDate":"2021-07-31"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":74,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":76,"author":{"gitId":"-"},"content":":bulb: **Intellij Tip:** The [\u0027**Find Usages**\u0027 feature](https://www.jetbrains.com/help/idea/find-highlight-usages.html#find-usages) can find from which parts of the code a class/method/variable is being used.","lastModifiedDate":"2021-07-31"},{"lineNumber":77,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"![`Find Usages` tool window. `Edit` \\\u003e `Find` \\\u003e `Find Usages`.](../images/tracing/FindUsages.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"Bingo\\! `MainWindow#executeCommand()` seems to be exactly what we’re looking for\\!","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"Now let’s set the breakpoint. First, double-click the item to reach the corresponding code. Once there, click on the left gutter to set a breakpoint, as shown below.","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":" ![LeftGutter](../images/tracing/LeftGutter.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"## Tracing the execution path","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":"Recall from the User Guide that the `edit` command has the format: `edit INDEX [n/NAME] [p/PHONE] [e/EMAIL] [a/ADDRESS] [t/TAG]…​` For this tutorial we will be issuing the command `edit 1 n/Alice Yeoh`.","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":":bulb: **Tip:** Over the course of the debugging session, you will encounter every major component in the application. Try to keep track of what happens inside the component and where the execution transfers to another component.","lastModifiedDate":"2021-07-31"},{"lineNumber":93,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"1. To start the debugging session, simply `Run` \\\u003e `Debug Main`","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"1. When the GUI appears, enter `edit 1 n/Alice Yeoh` into the command box and press `Enter`.","lastModifiedDate":"2021-07-31"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"1. The Debugger tool window should show up and show something like this:\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":100,"author":{"gitId":"-"},"content":"   ![DebuggerStep1](../images/tracing/DebuggerStep1.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"1. Use the _Show execution point_ feature to jump to the line of code that we stopped at:\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":103,"author":{"gitId":"-"},"content":"   ![ShowExecutionPoint](../images/tracing/ShowExecutionPoint.png)\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":104,"author":{"gitId":"-"},"content":"   `CommandResult commandResult \u003d logic.execute(commandText);` is the line that you end up at (i.e., the place where we put the breakpoint).","lastModifiedDate":"2021-07-31"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"1. We are interested in the `logic.execute(commandText)` portion of that line so let’s _Step in_ into that method call:\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    ![StepInto](../images/tracing/StepInto.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"1. We end up in `LogicManager#execute()` (not `Logic#execute` -- but this is expected because we know the `execute()` method in the `Logic` interface is actually implemented by the `LogicManager` class). Let’s take a look at the body of the method. Given below is the same code, with additional explanatory comments.","lastModifiedDate":"2021-07-31"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"   **LogicManager\\#execute().**","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":113,"author":{"gitId":"-"},"content":"   ``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":114,"author":{"gitId":"-"},"content":"   @Override","lastModifiedDate":"2020-05-23"},{"lineNumber":115,"author":{"gitId":"-"},"content":"   public CommandResult execute(String commandText)","lastModifiedDate":"2020-05-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"           throws CommandException, ParseException {","lastModifiedDate":"2020-05-23"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        //Logging, safe to ignore","lastModifiedDate":"2020-05-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        logger.info(\"----------------[USER COMMAND][\" + commandText + \"]\");","lastModifiedDate":"2020-05-23"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        CommandResult commandResult;","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        //Parse user input from String to a Command","lastModifiedDate":"2020-05-23"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        Command command \u003d addressBookParser.parseCommand(commandText);","lastModifiedDate":"2020-05-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        //Executes the Command and stores the result","lastModifiedDate":"2020-05-23"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        commandResult \u003d command.execute(model);","lastModifiedDate":"2020-05-23"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2020-05-23"},{"lineNumber":128,"author":{"gitId":"-"},"content":"            //We can deduce that the previous line of code modifies model in some way","lastModifiedDate":"2020-05-23"},{"lineNumber":129,"author":{"gitId":"-"},"content":"            // since it\u0027s being stored here.","lastModifiedDate":"2020-05-23"},{"lineNumber":130,"author":{"gitId":"-"},"content":"            storage.saveAddressBook(model.getAddressBook());","lastModifiedDate":"2020-05-23"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2020-05-23"},{"lineNumber":132,"author":{"gitId":"-"},"content":"            throw new CommandException(FILE_OPS_ERROR_MESSAGE + ioe, ioe);","lastModifiedDate":"2020-05-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-05-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        return commandResult;","lastModifiedDate":"2020-05-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":139,"author":{"gitId":"-"},"content":"1. `LogicManager#execute()` appears to delegate most of the heavy lifting to other components. Let’s take a closer look at each one.","lastModifiedDate":"2020-05-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":141,"author":{"gitId":"-"},"content":"1. _Step over_ the logging code since it is of no interest to us now.","lastModifiedDate":"2021-07-31"},{"lineNumber":142,"author":{"gitId":"-"},"content":"   ![StepOver](../images/tracing/StepOver.png)","lastModifiedDate":"2021-07-31"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":144,"author":{"gitId":"-"},"content":"1. _Step into_ the line where user input in parsed from a String to a Command, which should bring you to the `AddressBookParser#parseCommand()` method (partial code given below):","lastModifiedDate":"2021-07-31"},{"lineNumber":145,"author":{"gitId":"-"},"content":"   ``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":146,"author":{"gitId":"-"},"content":"   public Command parseCommand(String userInput) throws ParseException {","lastModifiedDate":"2020-05-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"       ...","lastModifiedDate":"2020-05-23"},{"lineNumber":148,"author":{"gitId":"-"},"content":"       final String commandWord \u003d matcher.group(\"commandWord\");","lastModifiedDate":"2020-05-23"},{"lineNumber":149,"author":{"gitId":"-"},"content":"       final String arguments \u003d matcher.group(\"arguments\");","lastModifiedDate":"2020-05-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"       ...","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"1. _Step over_ the statements in that method until you reach the `switch` statement. The \u0027Variables\u0027 window now shows the value of both `commandWord` and `arguments`:\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    ![Variables](../images/tracing/Variables.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":156,"author":{"gitId":"-"},"content":"1. We see that the value of `commandWord` is now `edit` but `arguments` is still not processed in any meaningful way.","lastModifiedDate":"2020-05-23"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":158,"author":{"gitId":"-"},"content":"1. Stepping through the `switch` block, we end up at a call to `EditCommandParser().parse()` as expected (because the command we typed is an edit command).","lastModifiedDate":"2021-07-31"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    ``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    ...","lastModifiedDate":"2020-05-23"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    case EditCommand.COMMAND_WORD:","lastModifiedDate":"2020-05-23"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        return new EditCommandParser().parse(arguments);","lastModifiedDate":"2020-05-23"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    ...","lastModifiedDate":"2020-05-23"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    ```","lastModifiedDate":"2020-05-23"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":167,"author":{"gitId":"-"},"content":"1. Let’s see what `EditCommandParser#parse()` does by stepping into it. You might have to click the \u0027step into\u0027 button multiple times here because there are two method calls in that statement: `EditCommandParser()` and `parse()`.","lastModifiedDate":"2021-07-31"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":169,"author":{"gitId":"-"},"content":"   \u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e:bulb: **Intellij Tip:** Sometimes, you might end up stepping into functions that are not of interest. Simply use the `step out` button to get out of them!","lastModifiedDate":"2021-07-31"},{"lineNumber":170,"author":{"gitId":"-"},"content":"   \u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":172,"author":{"gitId":"-"},"content":"1. Stepping through the method shows that it calls `ArgumentTokenizer#tokenize()` and `ParserUtil#parseIndex()` to obtain the arguments and index required.","lastModifiedDate":"2021-07-31"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":174,"author":{"gitId":"-"},"content":"1. The rest of the method seems to exhaustively check for the existence of each possible parameter of the `edit` command and store any possible changes in an `EditPersonDescriptor`. Recall that we can verify the contents of `editPersonDesciptor` through the \u0027Variables\u0027 window.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":175,"author":{"gitId":"-"},"content":"   ![EditCommand](../images/tracing/EditCommand.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":177,"author":{"gitId":"-"},"content":"1. As you just traced through some code involved in parsing a command, you can take a look at this class diagram to see where the various parsing-related classes you encountered fit into the design of the `Logic` component.","lastModifiedDate":"2021-07-31"},{"lineNumber":178,"author":{"gitId":"-"},"content":"   \u003cimg src\u003d\"../images/ParserClasses.png\" width\u003d\"600\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":179,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":180,"author":{"gitId":"-"},"content":"1. Let’s continue stepping through until we return to `LogicManager#execute()`.","lastModifiedDate":"2020-05-23"},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":182,"author":{"gitId":"-"},"content":"    The sequence diagram below shows the details of the execution path through the Logic component. Does the execution path you traced in the code so far match the diagram?\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":183,"author":{"gitId":"-"},"content":"    ![Tracing an `edit` command through the Logic component](../images/tracing/LogicSequenceDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":185,"author":{"gitId":"-"},"content":"1. Now, step over until you read the statement that calls the `execute()` method of the `EditCommand` object received, and step into that `execute()` method (partial code given below):","lastModifiedDate":"2021-07-31"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":187,"author":{"gitId":"-"},"content":"   **`EditCommand#execute()`:**","lastModifiedDate":"2021-07-31"},{"lineNumber":188,"author":{"gitId":"-"},"content":"   ``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":189,"author":{"gitId":"-"},"content":"   @Override","lastModifiedDate":"2020-05-23"},{"lineNumber":190,"author":{"gitId":"-"},"content":"   public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2020-05-23"},{"lineNumber":191,"author":{"gitId":"-"},"content":"       ...","lastModifiedDate":"2020-05-23"},{"lineNumber":192,"author":{"gitId":"-"},"content":"       Person personToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2020-05-23"},{"lineNumber":193,"author":{"gitId":"-"},"content":"       Person editedPerson \u003d createEditedPerson(personToEdit, editPersonDescriptor);","lastModifiedDate":"2020-05-23"},{"lineNumber":194,"author":{"gitId":"-"},"content":"       if (!personToEdit.isSamePerson(editedPerson) \u0026\u0026 model.hasPerson(editedPerson)) {","lastModifiedDate":"2020-05-23"},{"lineNumber":195,"author":{"gitId":"-"},"content":"           throw new CommandException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2020-05-23"},{"lineNumber":196,"author":{"gitId":"-"},"content":"       }","lastModifiedDate":"2020-05-23"},{"lineNumber":197,"author":{"gitId":"-"},"content":"       model.setPerson(personToEdit, editedPerson);","lastModifiedDate":"2020-05-23"},{"lineNumber":198,"author":{"gitId":"-"},"content":"       model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2020-05-23"},{"lineNumber":199,"author":{"gitId":"-"},"content":"       return new CommandResult(String.format(MESSAGE_EDIT_PERSON_SUCCESS, editedPerson));","lastModifiedDate":"2020-05-23"},{"lineNumber":200,"author":{"gitId":"-"},"content":"   }","lastModifiedDate":"2020-05-23"},{"lineNumber":201,"author":{"gitId":"-"},"content":"   ```","lastModifiedDate":"2020-05-23"},{"lineNumber":202,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":203,"author":{"gitId":"-"},"content":"1. As suspected, `command#execute()` does indeed make changes to the `model` object. Specifically,","lastModifiedDate":"2021-07-31"},{"lineNumber":204,"author":{"gitId":"-"},"content":"   * it uses the `setPerson()` method (defined in the interface `Model` and implemented in `ModelManager` as per the usual pattern) to update the person data.","lastModifiedDate":"2021-07-31"},{"lineNumber":205,"author":{"gitId":"-"},"content":"   * it uses the `updateFilteredPersonList` method to ask the `Model` to populate the \u0027filtered list\u0027 with _all_ persons.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":206,"author":{"gitId":"-"},"content":"     FYI, The \u0027filtered list\u0027 is the list of persons resulting from the most recent operation that will be shown to the user immediately after. For the `edit` command, we populate it with all the persons so that the user can see the edited person along with all other persons. If this was a `find` command, we would be setting that list to contain the search results instead.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":207,"author":{"gitId":"-"},"content":"     To provide some context, given below is the class diagram of the `Model` component. See if you can figure out where the \u0027filtered list\u0027 of persons is being tracked.","lastModifiedDate":"2021-07-31"},{"lineNumber":208,"author":{"gitId":"-"},"content":"     \u003cimg src\u003d\"../images/ModelClassDiagram.png\" width\u003d\"450\" /\u003e\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":209,"author":{"gitId":"-"},"content":"   * :bulb: This may be a good time to read through the [`Model` component section of the DG](../DeveloperGuide.html#model-component)","lastModifiedDate":"2021-07-31"},{"lineNumber":210,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":211,"author":{"gitId":"-"},"content":"1. As you step through the rest of the statements in the `EditCommand#execute()` method, you\u0027ll see that it creates a `CommandResult` object (containing information about the result of the execution) and returns it.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":212,"author":{"gitId":"-"},"content":"   Advancing the debugger by one more step should take you back to the middle of the `LogicManager#execute()` method.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":213,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":214,"author":{"gitId":"-"},"content":"1. Given that you have already seen quite a few classes in the `Logic` component in action, see if you can identify in this partial class diagram some of the classes you\u0027ve encountered so far, and see how they fit into the class structure of the `Logic` component:","lastModifiedDate":"2021-07-31"},{"lineNumber":215,"author":{"gitId":"-"},"content":"    \u003cimg src\u003d\"../images/LogicClassDiagram.png\" width\u003d\"550\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":216,"author":{"gitId":"-"},"content":"   * :bulb: This may be a good time to read through the [`Logic` component section of the DG](../DeveloperGuide.html#logic-component)","lastModifiedDate":"2021-07-31"},{"lineNumber":217,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":218,"author":{"gitId":"-"},"content":"1. Similar to before, you can step over/into statements in the `LogicManager#execute()` method to examine how the control is transferred to the `Storage` component and what happens inside that component.","lastModifiedDate":"2021-07-31"},{"lineNumber":219,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":220,"author":{"gitId":"-"},"content":"   \u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e:bulb: **Intellij Tip:** When trying to step into a statement such as `storage.saveAddressBook(model.getAddressBook())` which contains multiple method calls, Intellij will let you choose (by clicking) which one you want to step into.","lastModifiedDate":"2021-07-31"},{"lineNumber":221,"author":{"gitId":"-"},"content":"   \u003c/div\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":222,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":223,"author":{"gitId":"-"},"content":"1.  As you step through the code inside the `Storage` component, you will eventually arrive at the `JsonAddressBook#saveAddressBook()` method which calls the `JsonSerializableAddressBook` constructor, to create an object that can be _serialized_ (i.e., stored in storage medium) in JSON format. That constructor is given below (with added line breaks for easier readability):","lastModifiedDate":"2021-07-31"},{"lineNumber":224,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":225,"author":{"gitId":"-"},"content":"    **`JsonSerializableAddressBook` constructor:**","lastModifiedDate":"2021-07-31"},{"lineNumber":226,"author":{"gitId":"-"},"content":"    ``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":227,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-23"},{"lineNumber":228,"author":{"gitId":"-"},"content":"     * Converts a given {@code ReadOnlyAddressBook} into this class for Jackson use.","lastModifiedDate":"2020-05-23"},{"lineNumber":229,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2020-05-23"},{"lineNumber":230,"author":{"gitId":"-"},"content":"     * @param source future changes to this will not affect the created","lastModifiedDate":"2020-05-23"},{"lineNumber":231,"author":{"gitId":"-"},"content":"     * {@code JsonSerializableAddressBook}.","lastModifiedDate":"2020-05-23"},{"lineNumber":232,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-23"},{"lineNumber":233,"author":{"gitId":"-"},"content":"    public JsonSerializableAddressBook(ReadOnlyAddressBook source) {","lastModifiedDate":"2020-05-23"},{"lineNumber":234,"author":{"gitId":"-"},"content":"        persons.addAll(","lastModifiedDate":"2020-05-23"},{"lineNumber":235,"author":{"gitId":"-"},"content":"            source.getPersonList()","lastModifiedDate":"2020-05-23"},{"lineNumber":236,"author":{"gitId":"-"},"content":"                  .stream()","lastModifiedDate":"2020-05-23"},{"lineNumber":237,"author":{"gitId":"-"},"content":"                  .map(JsonAdaptedPerson::new)","lastModifiedDate":"2020-05-23"},{"lineNumber":238,"author":{"gitId":"-"},"content":"                  .collect(Collectors.toList()));","lastModifiedDate":"2020-05-23"},{"lineNumber":239,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":240,"author":{"gitId":"-"},"content":"    ```","lastModifiedDate":"2020-05-23"},{"lineNumber":241,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":242,"author":{"gitId":"-"},"content":"1. It appears that a `JsonAdaptedPerson` is created for each `Person` and then added to the `JsonSerializableAddressBook`.","lastModifiedDate":"2020-05-23"},{"lineNumber":243,"author":{"gitId":"-"},"content":"   This is because regular Java objects need to go through an _adaptation_ for them to be suitable to be saved in JSON format.","lastModifiedDate":"2021-07-31"},{"lineNumber":244,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":245,"author":{"gitId":"-"},"content":"1. While you are stepping through the classes in the `Storage` component, here is the component\u0027s class diagram to help you understand how those classes fit into the structure of the component.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":246,"author":{"gitId":"-"},"content":"   \u003cimg src\u003d\"../images/StorageClassDiagram.png\" width\u003d\"550\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":247,"author":{"gitId":"-"},"content":"   * :bulb: This may be a good time to read through the [`Storage` component section of the DG](../DeveloperGuide.html#storage-component)","lastModifiedDate":"2021-07-31"},{"lineNumber":248,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":249,"author":{"gitId":"-"},"content":"1. We can continue to step through until you reach the end of the `LogicManager#execute()` method and return to the `MainWindow#executeCommand()` method (the place where we put the original breakpoint).","lastModifiedDate":"2021-07-31"},{"lineNumber":250,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":251,"author":{"gitId":"-"},"content":"1. Stepping into `resultDisplay.setFeedbackToUser(commandResult.getFeedbackToUser());`, we end up in:","lastModifiedDate":"2021-07-31"},{"lineNumber":252,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":253,"author":{"gitId":"-"},"content":"    **`ResultDisplay#setFeedbackToUser()`**","lastModifiedDate":"2021-07-31"},{"lineNumber":254,"author":{"gitId":"-"},"content":"    ``` java","lastModifiedDate":"2020-05-23"},{"lineNumber":255,"author":{"gitId":"-"},"content":"    public void setFeedbackToUser(String feedbackToUser) {","lastModifiedDate":"2020-05-23"},{"lineNumber":256,"author":{"gitId":"-"},"content":"        requireNonNull(feedbackToUser);","lastModifiedDate":"2020-05-23"},{"lineNumber":257,"author":{"gitId":"-"},"content":"        resultDisplay.setText(feedbackToUser);","lastModifiedDate":"2020-05-23"},{"lineNumber":258,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":259,"author":{"gitId":"-"},"content":"    ```","lastModifiedDate":"2020-05-23"},{"lineNumber":260,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":261,"author":{"gitId":"-"},"content":"1. Finally, you can step through until you reach the end of`MainWindow#executeCommand()`.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":262,"author":{"gitId":"-"},"content":"   :bulb: This may be a good time to read through the [`UI` component section of the DG](../DeveloperGuide.html#ui-component)","lastModifiedDate":"2021-07-31"},{"lineNumber":263,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":264,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":265,"author":{"gitId":"-"},"content":"## Conclusion","lastModifiedDate":"2020-05-23"},{"lineNumber":266,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":267,"author":{"gitId":"-"},"content":"In this tutorial, we traced a valid edit command from raw user input to the result being displayed to the user. From this tutorial, you learned more about how the various components work together to produce a response to a user command.","lastModifiedDate":"2021-07-31"},{"lineNumber":268,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":269,"author":{"gitId":"-"},"content":"Here are some quick questions you can try to answer based on your execution path tracing. In some cases, you can do further tracing for the given commands to find exactly what happens.","lastModifiedDate":"2021-07-31"},{"lineNumber":270,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":271,"author":{"gitId":"-"},"content":"1.  In this tutorial, we traced the \"happy path\" (i.e., no errors). What","lastModifiedDate":"2020-05-23"},{"lineNumber":272,"author":{"gitId":"-"},"content":"    do you think will happen if we traced the following commands","lastModifiedDate":"2020-05-23"},{"lineNumber":273,"author":{"gitId":"-"},"content":"    instead? What exceptions do you think will be thrown (if any), where","lastModifiedDate":"2020-05-23"},{"lineNumber":274,"author":{"gitId":"-"},"content":"    will the exceptions be thrown and where will they be handled?","lastModifiedDate":"2020-05-23"},{"lineNumber":275,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":276,"author":{"gitId":"-"},"content":"    1.  `redit 1 n/Alice Yu`","lastModifiedDate":"2020-05-23"},{"lineNumber":277,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":278,"author":{"gitId":"-"},"content":"    2.  `edit 0 n/Alice Yu`","lastModifiedDate":"2020-05-23"},{"lineNumber":279,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":280,"author":{"gitId":"-"},"content":"    3.  `edit 1 n/Alex Yeoh`","lastModifiedDate":"2020-05-23"},{"lineNumber":281,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":282,"author":{"gitId":"-"},"content":"    4.  `edit 1`","lastModifiedDate":"2020-05-23"},{"lineNumber":283,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":284,"author":{"gitId":"-"},"content":"    5.  `edit 1 n/アリス ユー`","lastModifiedDate":"2020-05-23"},{"lineNumber":285,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":286,"author":{"gitId":"-"},"content":"    6.  `edit 1 t/one t/two t/three t/one`","lastModifiedDate":"2020-05-23"},{"lineNumber":287,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":288,"author":{"gitId":"-"},"content":"2.  What components will you have to modify to perform the following","lastModifiedDate":"2020-05-23"},{"lineNumber":289,"author":{"gitId":"-"},"content":"    enhancements to the application?","lastModifiedDate":"2020-05-23"},{"lineNumber":290,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":291,"author":{"gitId":"-"},"content":"    1.  Make command words case-insensitive","lastModifiedDate":"2020-05-23"},{"lineNumber":292,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":293,"author":{"gitId":"-"},"content":"    2.  Allow `delete` to remove more than one index at a time","lastModifiedDate":"2020-05-23"},{"lineNumber":294,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":295,"author":{"gitId":"-"},"content":"    3.  Save the address book in the CSV format instead","lastModifiedDate":"2020-05-23"},{"lineNumber":296,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":297,"author":{"gitId":"-"},"content":"    4.  Add a new command","lastModifiedDate":"2020-05-23"},{"lineNumber":298,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":299,"author":{"gitId":"-"},"content":"    5.  Add a new field to `Person`","lastModifiedDate":"2020-05-23"},{"lineNumber":300,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":301,"author":{"gitId":"-"},"content":"    6.  Add a new entity to the address book","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"david-eom":2,"-":299}},{"path":"src/main/java/socialite/AppParameters.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"david-eom"},"content":"package socialite;","lastModifiedDate":"2021-10-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Map;","lastModifiedDate":"2018-04-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2018-04-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.application.Application;","lastModifiedDate":"2018-04-21"},{"lineNumber":10,"author":{"gitId":"david-eom"},"content":"import socialite.commons.core.LogsCenter;","lastModifiedDate":"2021-10-08"},{"lineNumber":11,"author":{"gitId":"david-eom"},"content":"import socialite.commons.util.FileUtil;","lastModifiedDate":"2021-10-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-04-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Represents the parsed command-line parameters given to the application.","lastModifiedDate":"2018-04-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-04-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class AppParameters {","lastModifiedDate":"2018-04-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(AppParameters.class);","lastModifiedDate":"2018-04-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private Path configPath;","lastModifiedDate":"2018-04-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public Path getConfigPath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        return configPath;","lastModifiedDate":"2018-04-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public void setConfigPath(Path configPath) {","lastModifiedDate":"2018-04-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        this.configPath \u003d configPath;","lastModifiedDate":"2018-04-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Parses the application command-line parameters.","lastModifiedDate":"2018-04-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static AppParameters parse(Application.Parameters parameters) {","lastModifiedDate":"2018-04-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        AppParameters appParameters \u003d new AppParameters();","lastModifiedDate":"2018-04-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        Map\u003cString, String\u003e namedParameters \u003d parameters.getNamed();","lastModifiedDate":"2018-04-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        String configPathParameter \u003d namedParameters.get(\"config\");","lastModifiedDate":"2018-04-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        if (configPathParameter !\u003d null \u0026\u0026 !FileUtil.isValidPath(configPathParameter)) {","lastModifiedDate":"2018-04-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            logger.warning(\"Invalid config path \" + configPathParameter + \". Using default config path.\");","lastModifiedDate":"2018-04-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            configPathParameter \u003d null;","lastModifiedDate":"2018-04-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        appParameters.setConfigPath(configPathParameter !\u003d null ? Paths.get(configPathParameter) : null);","lastModifiedDate":"2018-04-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        return appParameters;","lastModifiedDate":"2018-04-21"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-04-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2018-04-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2018-04-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-04-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        if (!(other instanceof AppParameters)) {","lastModifiedDate":"2018-04-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-04-21"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        AppParameters otherAppParameters \u003d (AppParameters) other;","lastModifiedDate":"2018-04-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        return Objects.equals(getConfigPath(), otherAppParameters.getConfigPath());","lastModifiedDate":"2018-04-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-04-21"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2018-04-21"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        return configPath.hashCode();","lastModifiedDate":"2018-04-21"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":64,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-04-21"}],"authorContributionMap":{"david-eom":3,"-":61}},{"path":"src/main/java/socialite/Main.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"david-eom"},"content":"package socialite;","lastModifiedDate":"2021-10-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import javafx.application.Application;","lastModifiedDate":"2019-02-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2019-02-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * The main entry point to the application.","lastModifiedDate":"2019-02-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2019-02-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * This is a workaround for the following error when MainApp is made the","lastModifiedDate":"2019-02-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * entry point of the application:","lastModifiedDate":"2019-02-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2019-02-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":" *     Error: JavaFX runtime components are missing, and are required to run this application","lastModifiedDate":"2019-02-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2019-02-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * The reason is that MainApp extends Application. In that case, the","lastModifiedDate":"2019-02-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * LauncherHelper will check for the javafx.graphics module to be present","lastModifiedDate":"2019-02-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * as a named module. We don\u0027t use JavaFX via the module system so it can\u0027t","lastModifiedDate":"2019-02-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * find the javafx.graphics module, and so the launch is aborted.","lastModifiedDate":"2019-02-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2019-02-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * By having a separate main class (Main) that doesn\u0027t extend Application","lastModifiedDate":"2019-02-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * to be the entry point of the application, we avoid this issue.","lastModifiedDate":"2019-02-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2019-02-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"public class Main {","lastModifiedDate":"2019-02-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public static void main(String[] args) {","lastModifiedDate":"2019-02-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        Application.launch(MainApp.class, args);","lastModifiedDate":"2019-02-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-02-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-02-08"}],"authorContributionMap":{"david-eom":1,"-":24}},{"path":"src/main/java/socialite/MainApp.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"david-eom"},"content":"package socialite;","lastModifiedDate":"2021-10-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.application.Application;","lastModifiedDate":"2016-08-26"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-26"},{"lineNumber":10,"author":{"gitId":"david-eom"},"content":"import socialite.commons.core.Config;","lastModifiedDate":"2021-10-08"},{"lineNumber":11,"author":{"gitId":"david-eom"},"content":"import socialite.commons.core.LogsCenter;","lastModifiedDate":"2021-10-08"},{"lineNumber":12,"author":{"gitId":"david-eom"},"content":"import socialite.commons.core.Version;","lastModifiedDate":"2021-10-08"},{"lineNumber":13,"author":{"gitId":"david-eom"},"content":"import socialite.commons.exceptions.DataConversionException;","lastModifiedDate":"2021-10-08"},{"lineNumber":14,"author":{"gitId":"david-eom"},"content":"import socialite.commons.util.ConfigUtil;","lastModifiedDate":"2021-10-08"},{"lineNumber":15,"author":{"gitId":"david-eom"},"content":"import socialite.commons.util.StringUtil;","lastModifiedDate":"2021-10-08"},{"lineNumber":16,"author":{"gitId":"david-eom"},"content":"import socialite.logic.Logic;","lastModifiedDate":"2021-10-08"},{"lineNumber":17,"author":{"gitId":"david-eom"},"content":"import socialite.logic.LogicManager;","lastModifiedDate":"2021-10-08"},{"lineNumber":18,"author":{"gitId":"david-eom"},"content":"import socialite.model.AddressBook;","lastModifiedDate":"2021-10-08"},{"lineNumber":19,"author":{"gitId":"david-eom"},"content":"import socialite.model.CommandHistory;","lastModifiedDate":"2021-10-21"},{"lineNumber":20,"author":{"gitId":"david-eom"},"content":"import socialite.model.Model;","lastModifiedDate":"2021-10-08"},{"lineNumber":21,"author":{"gitId":"david-eom"},"content":"import socialite.model.ModelManager;","lastModifiedDate":"2021-10-08"},{"lineNumber":22,"author":{"gitId":"david-eom"},"content":"import socialite.model.ReadOnlyAddressBook;","lastModifiedDate":"2021-10-08"},{"lineNumber":23,"author":{"gitId":"david-eom"},"content":"import socialite.model.ReadOnlyCommandHistory;","lastModifiedDate":"2021-10-21"},{"lineNumber":24,"author":{"gitId":"david-eom"},"content":"import socialite.model.ReadOnlyUserPrefs;","lastModifiedDate":"2021-10-08"},{"lineNumber":25,"author":{"gitId":"david-eom"},"content":"import socialite.model.UserPrefs;","lastModifiedDate":"2021-10-08"},{"lineNumber":26,"author":{"gitId":"david-eom"},"content":"import socialite.model.util.SampleDataUtil;","lastModifiedDate":"2021-10-08"},{"lineNumber":27,"author":{"gitId":"david-eom"},"content":"import socialite.storage.AddressBookStorage;","lastModifiedDate":"2021-10-08"},{"lineNumber":28,"author":{"gitId":"david-eom"},"content":"import socialite.storage.CommandHistoryStorage;","lastModifiedDate":"2021-10-21"},{"lineNumber":29,"author":{"gitId":"david-eom"},"content":"import socialite.storage.JsonAddressBookStorage;","lastModifiedDate":"2021-10-08"},{"lineNumber":30,"author":{"gitId":"david-eom"},"content":"import socialite.storage.JsonCommandHistoryStorage;","lastModifiedDate":"2021-10-21"},{"lineNumber":31,"author":{"gitId":"david-eom"},"content":"import socialite.storage.JsonUserPrefsStorage;","lastModifiedDate":"2021-10-08"},{"lineNumber":32,"author":{"gitId":"Zacchua"},"content":"import socialite.storage.ProfilePictureStorage;","lastModifiedDate":"2021-10-24"},{"lineNumber":33,"author":{"gitId":"Zacchua"},"content":"import socialite.storage.ProfilePictureStorageManager;","lastModifiedDate":"2021-10-24"},{"lineNumber":34,"author":{"gitId":"david-eom"},"content":"import socialite.storage.Storage;","lastModifiedDate":"2021-10-08"},{"lineNumber":35,"author":{"gitId":"david-eom"},"content":"import socialite.storage.StorageManager;","lastModifiedDate":"2021-10-08"},{"lineNumber":36,"author":{"gitId":"david-eom"},"content":"import socialite.storage.UserPrefsStorage;","lastModifiedDate":"2021-10-08"},{"lineNumber":37,"author":{"gitId":"david-eom"},"content":"import socialite.ui.Ui;","lastModifiedDate":"2021-10-08"},{"lineNumber":38,"author":{"gitId":"david-eom"},"content":"import socialite.ui.UiManager;","lastModifiedDate":"2021-10-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":" * Runs the application.","lastModifiedDate":"2019-02-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"public class MainApp extends Application {","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public static final Version VERSION \u003d new Version(0, 2, 0, true);","lastModifiedDate":"2021-08-30"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(MainApp.class);","lastModifiedDate":"2017-04-01"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    protected Ui ui;","lastModifiedDate":"2016-09-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    protected Logic logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    protected Storage storage;","lastModifiedDate":"2016-09-25"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    protected Model model;","lastModifiedDate":"2016-09-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    protected Config config;","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public void init() throws Exception {","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        logger.info(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d[ Initializing AddressBook ]\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");","lastModifiedDate":"2016-09-29"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        super.init();","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        AppParameters appParameters \u003d AppParameters.parse(getParameters());","lastModifiedDate":"2018-04-21"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        config \u003d initConfig(appParameters.getConfigPath());","lastModifiedDate":"2018-04-21"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        UserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(config.getUserPrefsFilePath());","lastModifiedDate":"2017-02-25"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d initPrefs(userPrefsStorage);","lastModifiedDate":"2018-12-06"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        AddressBookStorage addressBookStorage \u003d new JsonAddressBookStorage(userPrefs.getAddressBookFilePath());","lastModifiedDate":"2018-11-27"},{"lineNumber":66,"author":{"gitId":"david-eom"},"content":"        CommandHistoryStorage commandHistoryStorage \u003d","lastModifiedDate":"2021-10-21"},{"lineNumber":67,"author":{"gitId":"david-eom"},"content":"                new JsonCommandHistoryStorage(userPrefs.getCommandHistoryFilePath());","lastModifiedDate":"2021-10-21"},{"lineNumber":68,"author":{"gitId":"Zacchua"},"content":"        ProfilePictureStorage profilePictureStorage \u003d ProfilePictureStorageManager.getInstance();","lastModifiedDate":"2021-10-25"},{"lineNumber":69,"author":{"gitId":"Zacchua"},"content":"        storage \u003d new StorageManager(","lastModifiedDate":"2021-10-25"},{"lineNumber":70,"author":{"gitId":"Zacchua"},"content":"                addressBookStorage, userPrefsStorage, commandHistoryStorage, profilePictureStorage);","lastModifiedDate":"2021-10-25"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        initLogging(config);","lastModifiedDate":"2016-09-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        model \u003d initModelManager(storage, userPrefs);","lastModifiedDate":"2016-09-25"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        ui \u003d new UiManager(logic);","lastModifiedDate":"2018-12-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     * Returns a {@code ModelManager} with the data from {@code storage}\u0027s address book and {@code userPrefs}. \u003cbr\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     * The data from the sample address book will be used instead if {@code storage}\u0027s address book is not found,","lastModifiedDate":"2017-08-16"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     * or an empty address book will be used instead if errors occur when reading {@code storage}\u0027s address book.","lastModifiedDate":"2017-08-16"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    private Model initModelManager(Storage storage, ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        Optional\u003cReadOnlyAddressBook\u003e addressBookOptional;","lastModifiedDate":"2016-09-24"},{"lineNumber":88,"author":{"gitId":"david-eom"},"content":"        ReadOnlyAddressBook initialAddressBook;","lastModifiedDate":"2021-10-21"},{"lineNumber":89,"author":{"gitId":"david-eom"},"content":"        Optional\u003cReadOnlyCommandHistory\u003e commandHistoryOptional;","lastModifiedDate":"2021-10-21"},{"lineNumber":90,"author":{"gitId":"david-eom"},"content":"        ReadOnlyCommandHistory initialCommandHistory;","lastModifiedDate":"2021-10-21"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":92,"author":{"gitId":"-"},"content":"            addressBookOptional \u003d storage.readAddressBook();","lastModifiedDate":"2016-09-25"},{"lineNumber":93,"author":{"gitId":"david-eom"},"content":"            if (addressBookOptional.isEmpty()) {","lastModifiedDate":"2021-10-21"},{"lineNumber":94,"author":{"gitId":"david-eom"},"content":"                logger.info(\"AddressBook file not found. Will be starting with a sample AddressBook\");","lastModifiedDate":"2021-10-21"},{"lineNumber":95,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-09-24"},{"lineNumber":96,"author":{"gitId":"david-eom"},"content":"            initialAddressBook \u003d addressBookOptional.orElseGet(SampleDataUtil::getSampleAddressBook);","lastModifiedDate":"2021-10-21"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        } catch (DataConversionException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":98,"author":{"gitId":"david-eom"},"content":"            logger.warning(\"AddressBook file not in the correct format. Will be starting with an empty AddressBook\");","lastModifiedDate":"2021-10-21"},{"lineNumber":99,"author":{"gitId":"david-eom"},"content":"            initialAddressBook \u003d new AddressBook();","lastModifiedDate":"2021-10-21"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-10-01"},{"lineNumber":101,"author":{"gitId":"david-eom"},"content":"            logger.warning(\"Problem while reading from the AddressBook. Will be starting with an empty AddressBook\");","lastModifiedDate":"2021-10-21"},{"lineNumber":102,"author":{"gitId":"david-eom"},"content":"            initialAddressBook \u003d new AddressBook();","lastModifiedDate":"2021-10-21"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":105,"author":{"gitId":"david-eom"},"content":"        try {","lastModifiedDate":"2021-10-21"},{"lineNumber":106,"author":{"gitId":"david-eom"},"content":"            commandHistoryOptional \u003d storage.readCommandHistory();","lastModifiedDate":"2021-10-21"},{"lineNumber":107,"author":{"gitId":"david-eom"},"content":"            if (commandHistoryOptional.isEmpty()) {","lastModifiedDate":"2021-10-21"},{"lineNumber":108,"author":{"gitId":"david-eom"},"content":"                logger.info(\"CommandHistory file not found. Will be starting with a new CommandHistory\");","lastModifiedDate":"2021-10-21"},{"lineNumber":109,"author":{"gitId":"david-eom"},"content":"            }","lastModifiedDate":"2021-10-21"},{"lineNumber":110,"author":{"gitId":"david-eom"},"content":"            initialCommandHistory \u003d commandHistoryOptional.orElseGet(SampleDataUtil::getSampleCommandHistory);","lastModifiedDate":"2021-10-21"},{"lineNumber":111,"author":{"gitId":"david-eom"},"content":"        } catch (DataConversionException e) {","lastModifiedDate":"2021-10-21"},{"lineNumber":112,"author":{"gitId":"david-eom"},"content":"            logger.warning(","lastModifiedDate":"2021-10-21"},{"lineNumber":113,"author":{"gitId":"david-eom"},"content":"                    \"CommandHistory file not in the correct format. Will be starting with an empty CommandHistory\");","lastModifiedDate":"2021-10-21"},{"lineNumber":114,"author":{"gitId":"david-eom"},"content":"            initialCommandHistory \u003d new CommandHistory();","lastModifiedDate":"2021-10-21"},{"lineNumber":115,"author":{"gitId":"david-eom"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-10-21"},{"lineNumber":116,"author":{"gitId":"david-eom"},"content":"            logger.warning(","lastModifiedDate":"2021-10-21"},{"lineNumber":117,"author":{"gitId":"david-eom"},"content":"                    \"Problem while reading from the CommandHistory. Will be starting with an empty CommandHistory\");","lastModifiedDate":"2021-10-21"},{"lineNumber":118,"author":{"gitId":"david-eom"},"content":"            initialCommandHistory \u003d new CommandHistory();","lastModifiedDate":"2021-10-21"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":121,"author":{"gitId":"Zacchua"},"content":"        return new ModelManager(initialAddressBook, userPrefs, initialCommandHistory);","lastModifiedDate":"2021-10-27"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    private void initLogging(Config config) {","lastModifiedDate":"2016-09-24"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        LogsCenter.init(config);","lastModifiedDate":"2016-09-23"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":129,"author":{"gitId":"-"},"content":"     * Returns a {@code Config} using the file at {@code configFilePath}. \u003cbr\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":130,"author":{"gitId":"-"},"content":"     * The default file path {@code Config#DEFAULT_CONFIG_FILE} will be used instead","lastModifiedDate":"2017-08-16"},{"lineNumber":131,"author":{"gitId":"-"},"content":"     * if {@code configFilePath} is null.","lastModifiedDate":"2017-08-16"},{"lineNumber":132,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    protected Config initConfig(Path configFilePath) {","lastModifiedDate":"2018-04-21"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        Config initializedConfig;","lastModifiedDate":"2016-09-24"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        Path configFilePathUsed;","lastModifiedDate":"2018-04-21"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        configFilePathUsed \u003d Config.DEFAULT_CONFIG_FILE;","lastModifiedDate":"2016-09-24"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        if (configFilePath !\u003d null) {","lastModifiedDate":"2016-09-24"},{"lineNumber":140,"author":{"gitId":"-"},"content":"            logger.info(\"Custom Config file specified \" + configFilePath);","lastModifiedDate":"2016-09-24"},{"lineNumber":141,"author":{"gitId":"-"},"content":"            configFilePathUsed \u003d configFilePath;","lastModifiedDate":"2016-09-24"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        logger.info(\"Using config file : \" + configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":147,"author":{"gitId":"-"},"content":"            Optional\u003cConfig\u003e configOptional \u003d ConfigUtil.readConfig(configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":148,"author":{"gitId":"-"},"content":"            initializedConfig \u003d configOptional.orElse(new Config());","lastModifiedDate":"2016-09-24"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        } catch (DataConversionException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":150,"author":{"gitId":"-"},"content":"            logger.warning(\"Config file at \" + configFilePathUsed + \" is not in the correct format. \"","lastModifiedDate":"2017-05-22"},{"lineNumber":151,"author":{"gitId":"-"},"content":"                    + \"Using default config properties\");","lastModifiedDate":"2017-05-22"},{"lineNumber":152,"author":{"gitId":"-"},"content":"            initializedConfig \u003d new Config();","lastModifiedDate":"2016-09-24"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        //Update config file in case it was missing to begin with or there are new/unused fields","lastModifiedDate":"2016-09-24"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":157,"author":{"gitId":"-"},"content":"            ConfigUtil.saveConfig(initializedConfig, configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":159,"author":{"gitId":"-"},"content":"            logger.warning(\"Failed to save config file : \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        return initializedConfig;","lastModifiedDate":"2016-09-24"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":165,"author":{"gitId":"-"},"content":"     * Returns a {@code UserPrefs} using the file at {@code storage}\u0027s user prefs file path,","lastModifiedDate":"2017-08-16"},{"lineNumber":166,"author":{"gitId":"-"},"content":"     * or a new {@code UserPrefs} with default configuration if errors occur when","lastModifiedDate":"2017-08-16"},{"lineNumber":167,"author":{"gitId":"-"},"content":"     * reading from the file.","lastModifiedDate":"2017-08-16"},{"lineNumber":168,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    protected UserPrefs initPrefs(UserPrefsStorage storage) {","lastModifiedDate":"2017-02-25"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        Path prefsFilePath \u003d storage.getUserPrefsFilePath();","lastModifiedDate":"2018-04-21"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        logger.info(\"Using prefs file : \" + prefsFilePath);","lastModifiedDate":"2016-09-24"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        UserPrefs initializedPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":175,"author":{"gitId":"-"},"content":"            Optional\u003cUserPrefs\u003e prefsOptional \u003d storage.readUserPrefs();","lastModifiedDate":"2016-09-25"},{"lineNumber":176,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d prefsOptional.orElse(new UserPrefs());","lastModifiedDate":"2016-09-24"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        } catch (DataConversionException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":178,"author":{"gitId":"-"},"content":"            logger.warning(\"UserPrefs file at \" + prefsFilePath + \" is not in the correct format. \"","lastModifiedDate":"2017-05-22"},{"lineNumber":179,"author":{"gitId":"-"},"content":"                    + \"Using default user prefs\");","lastModifiedDate":"2017-05-22"},{"lineNumber":180,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":182,"author":{"gitId":"-"},"content":"            logger.warning(\"Problem while reading from the file. Will be starting with an empty AddressBook\");","lastModifiedDate":"2016-10-12"},{"lineNumber":183,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":184,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":185,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":186,"author":{"gitId":"-"},"content":"        //Update prefs file in case it was missing to begin with or there are new/unused fields","lastModifiedDate":"2016-09-24"},{"lineNumber":187,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":188,"author":{"gitId":"-"},"content":"            storage.saveUserPrefs(initializedPrefs);","lastModifiedDate":"2016-09-25"},{"lineNumber":189,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":190,"author":{"gitId":"-"},"content":"            logger.warning(\"Failed to save config file : \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":191,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":192,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":193,"author":{"gitId":"-"},"content":"        return initializedPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":194,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":196,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":197,"author":{"gitId":"-"},"content":"    public void start(Stage primaryStage) {","lastModifiedDate":"2016-08-08"},{"lineNumber":198,"author":{"gitId":"-"},"content":"        logger.info(\"Starting AddressBook \" + MainApp.VERSION);","lastModifiedDate":"2016-09-29"},{"lineNumber":199,"author":{"gitId":"-"},"content":"        ui.start(primaryStage);","lastModifiedDate":"2016-09-25"},{"lineNumber":200,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":201,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":202,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":203,"author":{"gitId":"-"},"content":"    public void stop() {","lastModifiedDate":"2016-08-08"},{"lineNumber":204,"author":{"gitId":"-"},"content":"        logger.info(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d [ Stopping Address Book ] \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");","lastModifiedDate":"2016-09-29"},{"lineNumber":205,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":206,"author":{"gitId":"david-eom"},"content":"            storage.saveAddressBook(model.getAddressBook());","lastModifiedDate":"2021-10-21"},{"lineNumber":207,"author":{"gitId":"david-eom"},"content":"            storage.saveCommandHistory(model.getCommandHistory());","lastModifiedDate":"2021-10-21"},{"lineNumber":208,"author":{"gitId":"-"},"content":"            storage.saveUserPrefs(model.getUserPrefs());","lastModifiedDate":"2018-12-06"},{"lineNumber":209,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":210,"author":{"gitId":"-"},"content":"            logger.severe(\"Failed to save preferences \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":211,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":212,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-26"},{"lineNumber":213,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"Zacchua":6,"david-eom":56,"-":151}},{"path":"src/main/java/socialite/commons/core/Config.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"david-eom"},"content":"package socialite.commons.core;","lastModifiedDate":"2021-10-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2016-09-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Level;","lastModifiedDate":"2016-09-09"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Config values used by the app","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class Config {","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final Path DEFAULT_CONFIG_FILE \u003d Paths.get(\"config.json\");","lastModifiedDate":"2018-04-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    // Config values customizable through config file","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private Level logLevel \u003d Level.INFO;","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private Path userPrefsFilePath \u003d Paths.get(\"preferences.json\");","lastModifiedDate":"2018-04-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public Level getLogLevel() {","lastModifiedDate":"2016-09-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        return logLevel;","lastModifiedDate":"2016-09-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public void setLogLevel(Level logLevel) {","lastModifiedDate":"2016-09-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        this.logLevel \u003d logLevel;","lastModifiedDate":"2016-09-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public Path getUserPrefsFilePath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        return userPrefsFilePath;","lastModifiedDate":"2016-09-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public void setUserPrefsFilePath(Path userPrefsFilePath) {","lastModifiedDate":"2018-04-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        this.userPrefsFilePath \u003d userPrefsFilePath;","lastModifiedDate":"2016-09-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2016-09-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2016-09-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        if (!(other instanceof Config)) { //this handles null as well.","lastModifiedDate":"2016-09-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2016-09-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        Config o \u003d (Config) other;","lastModifiedDate":"2016-09-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        return Objects.equals(logLevel, o.logLevel)","lastModifiedDate":"2018-12-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"                \u0026\u0026 Objects.equals(userPrefsFilePath, o.userPrefsFilePath);","lastModifiedDate":"2017-02-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        return Objects.hash(logLevel, userPrefsFilePath);","lastModifiedDate":"2018-12-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-09-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2016-09-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        sb.append(\"Current log level : \" + logLevel);","lastModifiedDate":"2018-12-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        sb.append(\"\\nPreference file Location : \" + userPrefsFilePath);","lastModifiedDate":"2016-09-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2016-09-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"david-eom":1,"-":62}},{"path":"src/main/java/socialite/commons/core/GuiSettings.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"david-eom"},"content":"package socialite.commons.core;","lastModifiedDate":"2021-10-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.awt.Point;","lastModifiedDate":"2017-01-18"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.io.Serializable;","lastModifiedDate":"2016-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2016-09-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * A Serializable class that contains the GUI settings.","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Guarantees: immutable.","lastModifiedDate":"2018-11-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class GuiSettings implements Serializable {","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    private static final double DEFAULT_HEIGHT \u003d 600;","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private static final double DEFAULT_WIDTH \u003d 740;","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private final double windowWidth;","lastModifiedDate":"2018-11-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private final double windowHeight;","lastModifiedDate":"2018-11-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private final Point windowCoordinates;","lastModifiedDate":"2018-11-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * Constructs a {@code GuiSettings} with the default height, width and position.","lastModifiedDate":"2020-05-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public GuiSettings() {","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        windowWidth \u003d DEFAULT_WIDTH;","lastModifiedDate":"2018-08-14"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        windowHeight \u003d DEFAULT_HEIGHT;","lastModifiedDate":"2018-08-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        windowCoordinates \u003d null; // null represent no coordinates","lastModifiedDate":"2018-08-14"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Constructs a {@code GuiSettings} with the specified height, width and position.","lastModifiedDate":"2020-05-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public GuiSettings(double windowWidth, double windowHeight, int xPosition, int yPosition) {","lastModifiedDate":"2018-11-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        this.windowWidth \u003d windowWidth;","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        this.windowHeight \u003d windowHeight;","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        windowCoordinates \u003d new Point(xPosition, yPosition);","lastModifiedDate":"2018-08-14"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public double getWindowWidth() {","lastModifiedDate":"2018-11-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return windowWidth;","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public double getWindowHeight() {","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        return windowHeight;","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public Point getWindowCoordinates() {","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        return windowCoordinates !\u003d null ? new Point(windowCoordinates) : null;","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2016-09-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2016-09-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        if (!(other instanceof GuiSettings)) { //this handles null as well.","lastModifiedDate":"2016-09-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2016-09-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        GuiSettings o \u003d (GuiSettings) other;","lastModifiedDate":"2016-09-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        return windowWidth \u003d\u003d o.windowWidth","lastModifiedDate":"2018-11-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"                \u0026\u0026 windowHeight \u003d\u003d o.windowHeight","lastModifiedDate":"2018-11-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"                \u0026\u0026 Objects.equals(windowCoordinates, o.windowCoordinates);","lastModifiedDate":"2018-11-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        return Objects.hash(windowWidth, windowHeight, windowCoordinates);","lastModifiedDate":"2016-09-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-09-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2016-09-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        sb.append(\"Width : \" + windowWidth + \"\\n\");","lastModifiedDate":"2016-09-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        sb.append(\"Height : \" + windowHeight + \"\\n\");","lastModifiedDate":"2016-09-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        sb.append(\"Position : \" + windowCoordinates);","lastModifiedDate":"2016-09-24"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2016-09-24"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"david-eom":1,"-":78}},{"path":"src/main/java/socialite/commons/core/LogsCenter.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"david-eom"},"content":"package socialite.commons.core;","lastModifiedDate":"2021-10-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-09-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.logging.ConsoleHandler;","lastModifiedDate":"2017-01-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.FileHandler;","lastModifiedDate":"2017-01-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.logging.Level;","lastModifiedDate":"2017-01-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.logging.SimpleFormatter;","lastModifiedDate":"2017-01-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Configures and manages loggers and handlers, including their logging level","lastModifiedDate":"2016-09-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * Named {@link Logger}s can be obtained from this class\u003cbr\u003e","lastModifiedDate":"2016-09-29"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * These loggers have been configured to output messages to the console and a {@code .log} file by default,","lastModifiedDate":"2016-09-29"},{"lineNumber":15,"author":{"gitId":"-"},"content":" *   at the {@code INFO} level. A new {@code .log} file with a new numbering will be created after the log","lastModifiedDate":"2016-09-29"},{"lineNumber":16,"author":{"gitId":"-"},"content":" *   file reaches 5MB big, up to a maximum of 5 files.\u003cbr\u003e","lastModifiedDate":"2016-09-29"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class LogsCenter {","lastModifiedDate":"2016-09-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private static final int MAX_FILE_COUNT \u003d 5;","lastModifiedDate":"2016-09-28"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private static final int MAX_FILE_SIZE_IN_BYTES \u003d (int) (Math.pow(2, 20) * 5); // 5MB","lastModifiedDate":"2016-09-28"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final String LOG_FILE \u003d \"addressbook.log\";","lastModifiedDate":"2016-09-28"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static Level currentLogLevel \u003d Level.INFO;","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(LogsCenter.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private static FileHandler fileHandler;","lastModifiedDate":"2016-09-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private static ConsoleHandler consoleHandler;","lastModifiedDate":"2016-09-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-29"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * Initializes with a custom log level (specified in the {@code config} object)","lastModifiedDate":"2016-09-29"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Loggers obtained *AFTER* this initialization will have their logging level changed\u003cbr\u003e","lastModifiedDate":"2016-09-29"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Logging levels for existing loggers will only be updated if the logger with the same name","lastModifiedDate":"2016-10-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * is requested again from the LogsCenter.","lastModifiedDate":"2016-10-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-29"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public static void init(Config config) {","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        currentLogLevel \u003d config.getLogLevel();","lastModifiedDate":"2016-09-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        logger.info(\"currentLogLevel: \" + currentLogLevel);","lastModifiedDate":"2016-09-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-29"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * Creates a logger with the given name.","lastModifiedDate":"2017-03-20"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-29"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public static Logger getLogger(String name) {","lastModifiedDate":"2016-09-28"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        Logger logger \u003d Logger.getLogger(name);","lastModifiedDate":"2016-09-28"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        logger.setUseParentHandlers(false);","lastModifiedDate":"2016-09-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        removeHandlers(logger);","lastModifiedDate":"2016-09-28"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        addConsoleHandler(logger);","lastModifiedDate":"2016-09-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        addFileHandler(logger);","lastModifiedDate":"2016-09-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        return Logger.getLogger(name);","lastModifiedDate":"2016-09-28"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-16"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * Creates a Logger for the given class name.","lastModifiedDate":"2017-01-16"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-16"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public static \u003cT\u003e Logger getLogger(Class\u003cT\u003e clazz) {","lastModifiedDate":"2017-01-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        if (clazz \u003d\u003d null) {","lastModifiedDate":"2017-04-05"},{"lineNumber":57,"author":{"gitId":"-"},"content":"            return Logger.getLogger(\"\");","lastModifiedDate":"2017-04-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-04-05"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        return getLogger(clazz.getSimpleName());","lastModifiedDate":"2017-01-16"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-16"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * Adds the {@code consoleHandler} to the {@code logger}. \u003cbr\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * Creates the {@code consoleHandler} if it is null.","lastModifiedDate":"2017-08-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    private static void addConsoleHandler(Logger logger) {","lastModifiedDate":"2016-09-09"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        if (consoleHandler \u003d\u003d null) {","lastModifiedDate":"2017-04-05"},{"lineNumber":68,"author":{"gitId":"-"},"content":"            consoleHandler \u003d createConsoleHandler();","lastModifiedDate":"2017-04-05"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-04-05"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        logger.addHandler(consoleHandler);","lastModifiedDate":"2016-09-09"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     * Remove all the handlers from {@code logger}.","lastModifiedDate":"2017-08-16"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    private static void removeHandlers(Logger logger) {","lastModifiedDate":"2016-09-28"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        Arrays.stream(logger.getHandlers())","lastModifiedDate":"2018-01-21"},{"lineNumber":78,"author":{"gitId":"-"},"content":"                .forEach(logger::removeHandler);","lastModifiedDate":"2018-01-21"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-28"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     * Adds the {@code fileHandler} to the {@code logger}. \u003cbr\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     * Creates {@code fileHandler} if it is null.","lastModifiedDate":"2017-08-16"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    private static void addFileHandler(Logger logger) {","lastModifiedDate":"2016-09-09"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-09"},{"lineNumber":87,"author":{"gitId":"-"},"content":"            if (fileHandler \u003d\u003d null) {","lastModifiedDate":"2017-04-05"},{"lineNumber":88,"author":{"gitId":"-"},"content":"                fileHandler \u003d createFileHandler();","lastModifiedDate":"2017-04-05"},{"lineNumber":89,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-04-05"},{"lineNumber":90,"author":{"gitId":"-"},"content":"            logger.addHandler(fileHandler);","lastModifiedDate":"2016-09-09"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-09"},{"lineNumber":92,"author":{"gitId":"-"},"content":"            logger.warning(\"Error adding file handler for logger.\");","lastModifiedDate":"2016-09-09"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     * Creates a {@code FileHandler} for the log file.","lastModifiedDate":"2017-08-16"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     * @throws IOException if there are problems opening the file.","lastModifiedDate":"2017-08-16"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    private static FileHandler createFileHandler() throws IOException {","lastModifiedDate":"2016-09-09"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        FileHandler fileHandler \u003d new FileHandler(LOG_FILE, MAX_FILE_SIZE_IN_BYTES, MAX_FILE_COUNT, true);","lastModifiedDate":"2016-09-28"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        fileHandler.setFormatter(new SimpleFormatter());","lastModifiedDate":"2016-09-09"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        fileHandler.setLevel(currentLogLevel);","lastModifiedDate":"2016-09-09"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        return fileHandler;","lastModifiedDate":"2016-09-09"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    private static ConsoleHandler createConsoleHandler() {","lastModifiedDate":"2016-09-09"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        ConsoleHandler consoleHandler \u003d new ConsoleHandler();","lastModifiedDate":"2016-09-09"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        consoleHandler.setLevel(currentLogLevel);","lastModifiedDate":"2016-09-09"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        return consoleHandler;","lastModifiedDate":"2016-09-09"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"david-eom":1,"-":111}},{"path":"src/main/java/socialite/commons/core/Messages.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"david-eom"},"content":"package socialite.commons.core;","lastModifiedDate":"2021-10-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Container for user visible messages.","lastModifiedDate":"2016-08-24"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class Messages {","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"stanley-1"},"content":"    public static final String MESSAGE_UNKNOWN_COMMAND \u003d \"Unknown command. \\nEnter \u0027help\u0027 for guidance.\";","lastModifiedDate":"2021-10-20"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_COMMAND_FORMAT \u003d \"Invalid command format! \\n%1$s\";","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_PERSON_DISPLAYED_INDEX \u003d \"The person index provided is invalid\";","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_PERSONS_LISTED_OVERVIEW \u003d \"%1$d persons listed!\";","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":13,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"david-eom":1,"-":11,"stanley-1":1}},{"path":"src/main/java/socialite/commons/core/Version.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"david-eom"},"content":"package socialite.commons.core;","lastModifiedDate":"2021-10-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2016-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2016-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonValue;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Represents a version with major, minor and patch number","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class Version implements Comparable\u003cVersion\u003e {","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public static final String VERSION_REGEX \u003d \"V(\\\\d+)\\\\.(\\\\d+)\\\\.(\\\\d+)(ea)?\";","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private static final String EXCEPTION_STRING_NOT_VERSION \u003d \"String is not a valid Version. %s\";","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private static final Pattern VERSION_PATTERN \u003d Pattern.compile(VERSION_REGEX);","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private final int major;","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private final int minor;","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private final int patch;","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private final boolean isEarlyAccess;","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * Constructs a {@code Version} with the given version details.","lastModifiedDate":"2020-05-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public Version(int major, int minor, int patch, boolean isEarlyAccess) {","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        this.major \u003d major;","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        this.minor \u003d minor;","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        this.patch \u003d patch;","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        this.isEarlyAccess \u003d isEarlyAccess;","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public int getMajor() {","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        return major;","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public int getMinor() {","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        return minor;","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public int getPatch() {","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        return patch;","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public boolean isEarlyAccess() {","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        return isEarlyAccess;","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * Parses a version number string in the format V1.2.3.","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * @param versionString version number string","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * @return a Version object","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public static Version fromString(String versionString) throws IllegalArgumentException {","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        Matcher versionMatcher \u003d VERSION_PATTERN.matcher(versionString);","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        if (!versionMatcher.find()) {","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"            throw new IllegalArgumentException(String.format(EXCEPTION_STRING_NOT_VERSION, versionString));","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        return new Version(Integer.parseInt(versionMatcher.group(1)),","lastModifiedDate":"2016-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"                Integer.parseInt(versionMatcher.group(2)),","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"                Integer.parseInt(versionMatcher.group(3)),","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"                versionMatcher.group(4) \u003d\u003d null ? false : true);","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    @JsonValue","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        return String.format(\"V%d.%d.%d%s\", major, minor, patch, isEarlyAccess ? \"ea\" : \"\");","lastModifiedDate":"2016-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public int compareTo(Version other) {","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        if (major !\u003d other.major) {","lastModifiedDate":"2018-08-14"},{"lineNumber":78,"author":{"gitId":"-"},"content":"            return major - other.major;","lastModifiedDate":"2018-08-14"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-22"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        if (minor !\u003d other.minor) {","lastModifiedDate":"2018-08-14"},{"lineNumber":81,"author":{"gitId":"-"},"content":"            return minor - other.minor;","lastModifiedDate":"2018-08-14"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-22"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        if (patch !\u003d other.patch) {","lastModifiedDate":"2018-08-14"},{"lineNumber":84,"author":{"gitId":"-"},"content":"            return patch - other.patch;","lastModifiedDate":"2018-08-14"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-22"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        if (isEarlyAccess \u003d\u003d other.isEarlyAccess()) {","lastModifiedDate":"2018-08-14"},{"lineNumber":87,"author":{"gitId":"-"},"content":"            return 0;","lastModifiedDate":"2017-05-22"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-22"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        if (isEarlyAccess) {","lastModifiedDate":"2018-08-14"},{"lineNumber":90,"author":{"gitId":"-"},"content":"            return -1;","lastModifiedDate":"2017-05-22"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-22"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        return 1;","lastModifiedDate":"2017-05-22"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2016-08-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        if (obj \u003d\u003d null) {","lastModifiedDate":"2016-08-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2016-08-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        if (!(obj instanceof Version)) {","lastModifiedDate":"2016-08-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2016-08-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        final Version other \u003d (Version) obj;","lastModifiedDate":"2016-08-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        return compareTo(other) \u003d\u003d 0;","lastModifiedDate":"2018-08-14"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-08"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        String hash \u003d String.format(\"%03d%03d%03d\", major, minor, patch);","lastModifiedDate":"2016-08-08"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        if (!isEarlyAccess) {","lastModifiedDate":"2016-08-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"            hash \u003d \"1\" + hash;","lastModifiedDate":"2016-08-08"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        return Integer.parseInt(hash);","lastModifiedDate":"2016-08-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"david-eom":1,"-":115}},{"path":"src/main/java/socialite/commons/core/index/Index.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"david-eom"},"content":"package socialite.commons.core.index;","lastModifiedDate":"2021-10-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-05-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Represents a zero-based or one-based index.","lastModifiedDate":"2017-05-24"},{"lineNumber":5,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2017-05-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * {@code Index} should be used right from the start (when parsing in a new user input), so that if the current","lastModifiedDate":"2017-05-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * component wants to communicate with another component, it can send an {@code Index} to avoid having to know what","lastModifiedDate":"2017-05-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * base the other component is using for its index. However, after receiving the {@code Index}, that component can","lastModifiedDate":"2017-05-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * convert it back to an int if the index will not be passed to a different component again.","lastModifiedDate":"2017-05-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-05-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class Index {","lastModifiedDate":"2017-05-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private int zeroBasedIndex;","lastModifiedDate":"2017-05-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * Index can only be created by calling {@link Index#fromZeroBased(int)} or","lastModifiedDate":"2017-05-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * {@link Index#fromOneBased(int)}.","lastModifiedDate":"2017-05-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private Index(int zeroBasedIndex) {","lastModifiedDate":"2017-05-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        if (zeroBasedIndex \u003c 0) {","lastModifiedDate":"2017-05-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"            throw new IndexOutOfBoundsException();","lastModifiedDate":"2017-05-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        this.zeroBasedIndex \u003d zeroBasedIndex;","lastModifiedDate":"2017-05-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public int getZeroBased() {","lastModifiedDate":"2017-05-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        return zeroBasedIndex;","lastModifiedDate":"2017-05-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public int getOneBased() {","lastModifiedDate":"2017-05-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        return zeroBasedIndex + 1;","lastModifiedDate":"2017-05-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Creates a new {@code Index} using a zero-based index.","lastModifiedDate":"2017-05-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static Index fromZeroBased(int zeroBasedIndex) {","lastModifiedDate":"2017-05-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        return new Index(zeroBasedIndex);","lastModifiedDate":"2017-05-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * Creates a new {@code Index} using a one-based index.","lastModifiedDate":"2017-05-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public static Index fromOneBased(int oneBasedIndex) {","lastModifiedDate":"2017-05-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        return new Index(oneBasedIndex - 1);","lastModifiedDate":"2017-05-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-05-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-05-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"                || (other instanceof Index // instanceof handles nulls","lastModifiedDate":"2017-05-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"                \u0026\u0026 zeroBasedIndex \u003d\u003d ((Index) other).zeroBasedIndex); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-24"}],"authorContributionMap":{"david-eom":1,"-":53}},{"path":"src/main/java/socialite/commons/exceptions/DataConversionException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"david-eom"},"content":"package socialite.commons.exceptions;","lastModifiedDate":"2021-10-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Represents an error during conversion of data from one format to another","lastModifiedDate":"2016-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class DataConversionException extends Exception {","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    public DataConversionException(Exception cause) {","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"        super(cause);","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"david-eom":1,"-":10}},{"path":"src/main/java/socialite/commons/exceptions/IllegalValueException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"david-eom"},"content":"package socialite.commons.exceptions;","lastModifiedDate":"2021-10-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Signals that some given data does not fulfill some constraints.","lastModifiedDate":"2016-08-24"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class IllegalValueException extends Exception {","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"     * @param message should contain relevant information on the failed constraint(s)","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public IllegalValueException(String message) {","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"        super(message);","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * @param message should contain relevant information on the failed constraint(s)","lastModifiedDate":"2017-03-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * @param cause of the main exception","lastModifiedDate":"2017-03-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public IllegalValueException(String message, Throwable cause) {","lastModifiedDate":"2017-03-11"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        super(message, cause);","lastModifiedDate":"2017-03-11"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"david-eom":1,"-":20}},{"path":"src/main/java/socialite/commons/util/AppUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"david-eom"},"content":"package socialite.commons.util;","lastModifiedDate":"2021-10-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2016-08-18"},{"lineNumber":6,"author":{"gitId":"david-eom"},"content":"import socialite.MainApp;","lastModifiedDate":"2021-10-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * A container for App specific utility functions","lastModifiedDate":"2016-08-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class AppUtil {","lastModifiedDate":"2016-08-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     * Gets an {@code Image} from the specified path.","lastModifiedDate":"2020-05-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public static Image getImage(String imagePath) {","lastModifiedDate":"2016-08-18"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        requireNonNull(imagePath);","lastModifiedDate":"2017-05-15"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        return new Image(MainApp.class.getResourceAsStream(imagePath));","lastModifiedDate":"2016-08-18"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * Checks that {@code condition} is true. Used for validating arguments to methods.","lastModifiedDate":"2017-05-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @throws IllegalArgumentException if {@code condition} is false.","lastModifiedDate":"2017-05-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-15"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static void checkArgument(Boolean condition) {","lastModifiedDate":"2017-05-15"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        if (!condition) {","lastModifiedDate":"2017-05-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            throw new IllegalArgumentException();","lastModifiedDate":"2017-05-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-15"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-15"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Checks that {@code condition} is true. Used for validating arguments to methods.","lastModifiedDate":"2017-05-15"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-15"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * @throws IllegalArgumentException with {@code errorMessage} if {@code condition} is false.","lastModifiedDate":"2017-05-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-15"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public static void checkArgument(Boolean condition, String errorMessage) {","lastModifiedDate":"2017-05-15"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        if (!condition) {","lastModifiedDate":"2017-05-15"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            throw new IllegalArgumentException(errorMessage);","lastModifiedDate":"2017-05-15"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-15"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-15"},{"lineNumber":42,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"david-eom":2,"-":40}},{"path":"src/main/java/socialite/commons/util/CollectionUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"david-eom"},"content":"package socialite.commons.util;","lastModifiedDate":"2021-10-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-06-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2017-01-30"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2016-12-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Utility methods related to Collections","lastModifiedDate":"2016-09-30"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class CollectionUtil {","lastModifiedDate":"2016-09-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    /** @see #requireAllNonNull(Collection) */","lastModifiedDate":"2017-05-19"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public static void requireAllNonNull(Object... items) {","lastModifiedDate":"2017-05-19"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        requireNonNull(items);","lastModifiedDate":"2017-06-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        Stream.of(items).forEach(Objects::requireNonNull);","lastModifiedDate":"2017-05-19"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * Throws NullPointerException if {@code items} or any element of {@code items} is null.","lastModifiedDate":"2017-05-19"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public static void requireAllNonNull(Collection\u003c?\u003e items) {","lastModifiedDate":"2017-05-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        requireNonNull(items);","lastModifiedDate":"2017-06-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        items.forEach(Objects::requireNonNull);","lastModifiedDate":"2017-05-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Returns true if {@code items} contain any elements that are non-null.","lastModifiedDate":"2017-06-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static boolean isAnyNonNull(Object... items) {","lastModifiedDate":"2017-06-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return items !\u003d null \u0026\u0026 Arrays.stream(items).anyMatch(Objects::nonNull);","lastModifiedDate":"2017-06-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"david-eom":1,"-":34}},{"path":"src/main/java/socialite/commons/util/ConfigUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"david-eom"},"content":"package socialite.commons.util;","lastModifiedDate":"2021-10-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-09-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2016-09-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":7,"author":{"gitId":"david-eom"},"content":"import socialite.commons.core.Config;","lastModifiedDate":"2021-10-08"},{"lineNumber":8,"author":{"gitId":"david-eom"},"content":"import socialite.commons.exceptions.DataConversionException;","lastModifiedDate":"2021-10-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * A class for accessing the Config File.","lastModifiedDate":"2016-09-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class ConfigUtil {","lastModifiedDate":"2016-09-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public static Optional\u003cConfig\u003e readConfig(Path configFilePath) throws DataConversionException {","lastModifiedDate":"2018-04-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        return JsonUtil.readJsonFile(configFilePath, Config.class);","lastModifiedDate":"2016-10-07"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public static void saveConfig(Config config, Path configFilePath) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        JsonUtil.saveJsonFile(config, configFilePath);","lastModifiedDate":"2016-10-07"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-24"}],"authorContributionMap":{"david-eom":3,"-":20}},{"path":"src/main/java/socialite/commons/util/FileUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"david-eom"},"content":"package socialite.commons.util;","lastModifiedDate":"2021-10-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Files;","lastModifiedDate":"2016-08-26"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.InvalidPathException;","lastModifiedDate":"2018-04-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Writes and reads files","lastModifiedDate":"2016-10-07"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class FileUtil {","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private static final String CHARSET \u003d \"UTF-8\";","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public static boolean isFileExists(Path file) {","lastModifiedDate":"2018-04-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        return Files.exists(file) \u0026\u0026 Files.isRegularFile(file);","lastModifiedDate":"2018-04-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * Returns true if {@code path} can be converted into a {@code Path} via {@link Paths#get(String)},","lastModifiedDate":"2018-04-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * otherwise returns false.","lastModifiedDate":"2018-04-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * @param path A string representing the file path. Cannot be null.","lastModifiedDate":"2018-04-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public static boolean isValidPath(String path) {","lastModifiedDate":"2018-04-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-04-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"            Paths.get(path);","lastModifiedDate":"2018-04-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        } catch (InvalidPathException ipe) {","lastModifiedDate":"2018-04-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-04-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        return true;","lastModifiedDate":"2018-04-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Creates a file if it does not exist along with its missing parent directories.","lastModifiedDate":"2017-08-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * @throws IOException if the file or directory cannot be created.","lastModifiedDate":"2017-08-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public static void createIfMissing(Path file) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        if (!isFileExists(file)) {","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            createFile(file);","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * Creates a file if it does not exist along with its missing parent directories.","lastModifiedDate":"2018-04-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public static void createFile(Path file) throws IOException {","lastModifiedDate":"2018-04-15"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        if (Files.exists(file)) {","lastModifiedDate":"2018-04-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            return;","lastModifiedDate":"2018-04-15"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        createParentDirsOfFile(file);","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        Files.createFile(file);","lastModifiedDate":"2018-04-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     * Creates parent directories of file if it has a parent directory","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public static void createParentDirsOfFile(Path file) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        Path parentDir \u003d file.getParent();","lastModifiedDate":"2018-04-21"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        if (parentDir !\u003d null) {","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"            Files.createDirectories(parentDir);","lastModifiedDate":"2018-04-21"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     * Assumes file exists","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public static String readFromFile(Path file) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        return new String(Files.readAllBytes(file), CHARSET);","lastModifiedDate":"2018-04-21"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     * Writes given string to a file.","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     * Will create the file if it does not exist yet.","lastModifiedDate":"2016-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public static void writeToFile(Path file, String content) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        Files.write(file, content.getBytes(CHARSET));","lastModifiedDate":"2018-04-21"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"david-eom":1,"-":82}},{"path":"src/main/java/socialite/commons/util/JsonUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"david-eom"},"content":"package socialite.commons.util;","lastModifiedDate":"2021-10-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Files;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.logging.Level;","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonAutoDetect;","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.PropertyAccessor;","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.core.JsonProcessingException;","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.DeserializationContext;","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.DeserializationFeature;","lastModifiedDate":"2016-09-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.ObjectMapper;","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.SerializationFeature;","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.deser.std.FromStringDeserializer;","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.module.SimpleModule;","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.databind.ser.std.ToStringSerializer;","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":23,"author":{"gitId":"david-eom"},"content":"import socialite.commons.core.LogsCenter;","lastModifiedDate":"2021-10-08"},{"lineNumber":24,"author":{"gitId":"david-eom"},"content":"import socialite.commons.exceptions.DataConversionException;","lastModifiedDate":"2021-10-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":" * Converts a Java object instance to JSON and vice versa","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"public class JsonUtil {","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(JsonUtil.class);","lastModifiedDate":"2016-10-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private static ObjectMapper objectMapper \u003d new ObjectMapper().findAndRegisterModules()","lastModifiedDate":"2016-10-19"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            .configure(SerializationFeature.WRITE_DATES_AS_TIMESTAMPS, false)","lastModifiedDate":"2016-10-19"},{"lineNumber":35,"author":{"gitId":"-"},"content":"            .configure(DeserializationFeature.FAIL_ON_UNKNOWN_PROPERTIES, false)","lastModifiedDate":"2016-10-19"},{"lineNumber":36,"author":{"gitId":"-"},"content":"            .setVisibility(PropertyAccessor.ALL, JsonAutoDetect.Visibility.NONE)","lastModifiedDate":"2016-10-19"},{"lineNumber":37,"author":{"gitId":"-"},"content":"            .setVisibility(PropertyAccessor.FIELD, JsonAutoDetect.Visibility.ANY)","lastModifiedDate":"2016-10-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            .registerModule(new SimpleModule(\"SimpleModule\")","lastModifiedDate":"2016-10-19"},{"lineNumber":39,"author":{"gitId":"-"},"content":"                    .addSerializer(Level.class, new ToStringSerializer())","lastModifiedDate":"2016-10-19"},{"lineNumber":40,"author":{"gitId":"-"},"content":"                    .addDeserializer(Level.class, new LevelDeserializer(Level.class)));","lastModifiedDate":"2016-10-19"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    static \u003cT\u003e void serializeObjectToJsonFile(Path jsonFile, T objectToSerialize) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        FileUtil.writeToFile(jsonFile, toJsonString(objectToSerialize));","lastModifiedDate":"2016-10-07"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-07"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    static \u003cT\u003e T deserializeObjectFromJsonFile(Path jsonFile, Class\u003cT\u003e classOfObjectToDeserialize)","lastModifiedDate":"2018-04-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            throws IOException {","lastModifiedDate":"2016-10-07"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        return fromJsonString(FileUtil.readFromFile(jsonFile), classOfObjectToDeserialize);","lastModifiedDate":"2016-10-07"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-07"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-07"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * Returns the Json object from the given file or {@code Optional.empty()} object if the file is not found.","lastModifiedDate":"2016-10-07"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * If any values are missing from the file, default values will be used, as long as the file is a valid json file.","lastModifiedDate":"2016-10-07"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * @param filePath cannot be null.","lastModifiedDate":"2016-10-07"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * @param classOfObjectToDeserialize Json file has to correspond to the structure in the class given here.","lastModifiedDate":"2016-10-07"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * @throws DataConversionException if the file format is not as expected.","lastModifiedDate":"2016-10-07"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-07"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public static \u003cT\u003e Optional\u003cT\u003e readJsonFile(","lastModifiedDate":"2016-10-07"},{"lineNumber":59,"author":{"gitId":"-"},"content":"            Path filePath, Class\u003cT\u003e classOfObjectToDeserialize) throws DataConversionException {","lastModifiedDate":"2018-04-21"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2017-05-15"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        if (!Files.exists(filePath)) {","lastModifiedDate":"2018-04-21"},{"lineNumber":63,"author":{"gitId":"-"},"content":"            logger.info(\"Json file \" + filePath + \" not found\");","lastModifiedDate":"2018-04-21"},{"lineNumber":64,"author":{"gitId":"-"},"content":"            return Optional.empty();","lastModifiedDate":"2016-10-07"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-07"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        T jsonFile;","lastModifiedDate":"2016-10-07"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-10-07"},{"lineNumber":70,"author":{"gitId":"-"},"content":"            jsonFile \u003d deserializeObjectFromJsonFile(filePath, classOfObjectToDeserialize);","lastModifiedDate":"2018-04-21"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-10-07"},{"lineNumber":72,"author":{"gitId":"-"},"content":"            logger.warning(\"Error reading from jsonFile file \" + filePath + \": \" + e);","lastModifiedDate":"2018-04-21"},{"lineNumber":73,"author":{"gitId":"-"},"content":"            throw new DataConversionException(e);","lastModifiedDate":"2016-10-07"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-07"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        return Optional.of(jsonFile);","lastModifiedDate":"2016-10-07"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-07"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-07"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * Saves the Json object to the specified file.","lastModifiedDate":"2016-10-07"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     * Overwrites existing file if it exists, creates a new file if it doesn\u0027t.","lastModifiedDate":"2016-10-07"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     * @param jsonFile cannot be null","lastModifiedDate":"2016-10-07"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     * @param filePath cannot be null","lastModifiedDate":"2016-10-07"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     * @throws IOException if there was an error during writing to the file","lastModifiedDate":"2016-10-07"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-07"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public static \u003cT\u003e void saveJsonFile(T jsonFile, Path filePath) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2017-05-15"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        requireNonNull(jsonFile);","lastModifiedDate":"2017-05-15"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        serializeObjectToJsonFile(filePath, jsonFile);","lastModifiedDate":"2018-04-21"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-07"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-19"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     * Converts a given string representation of a JSON data to instance of a class","lastModifiedDate":"2016-10-19"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     * @param \u003cT\u003e The generic type to create an instance of","lastModifiedDate":"2016-10-19"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     * @return The instance of T with the specified values in the JSON string","lastModifiedDate":"2016-10-19"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-19"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    public static \u003cT\u003e T fromJsonString(String json, Class\u003cT\u003e instanceClass) throws IOException {","lastModifiedDate":"2016-10-19"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        return objectMapper.readValue(json, instanceClass);","lastModifiedDate":"2016-10-19"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-19"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-19"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     * Converts a given instance of a class into its JSON data string representation","lastModifiedDate":"2016-10-19"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     * @param instance The T object to be converted into the JSON string","lastModifiedDate":"2016-10-19"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     * @param \u003cT\u003e The generic type to create an instance of","lastModifiedDate":"2016-10-19"},{"lineNumber":107,"author":{"gitId":"-"},"content":"     * @return JSON data representation of the given class instance, in string","lastModifiedDate":"2016-10-19"},{"lineNumber":108,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-19"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    public static \u003cT\u003e String toJsonString(T instance) throws JsonProcessingException {","lastModifiedDate":"2016-10-19"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        return objectMapper.writerWithDefaultPrettyPrinter().writeValueAsString(instance);","lastModifiedDate":"2016-10-19"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-19"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":114,"author":{"gitId":"-"},"content":"     * Contains methods that retrieve logging level from serialized string.","lastModifiedDate":"2017-08-16"},{"lineNumber":115,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    private static class LevelDeserializer extends FromStringDeserializer\u003cLevel\u003e {","lastModifiedDate":"2016-08-08"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        protected LevelDeserializer(Class\u003c?\u003e vc) {","lastModifiedDate":"2016-08-08"},{"lineNumber":119,"author":{"gitId":"-"},"content":"            super(vc);","lastModifiedDate":"2016-08-08"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        protected Level _deserialize(String value, DeserializationContext ctxt) {","lastModifiedDate":"2018-08-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"            return getLoggingLevel(value);","lastModifiedDate":"2016-08-08"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2016-08-08"},{"lineNumber":128,"author":{"gitId":"-"},"content":"         * Gets the logging level that matches loggingLevelString","lastModifiedDate":"2016-08-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":"         * \u003cp\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":130,"author":{"gitId":"-"},"content":"         * Returns null if there are no matches","lastModifiedDate":"2016-08-08"},{"lineNumber":131,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2016-08-08"},{"lineNumber":132,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-08-08"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        private Level getLoggingLevel(String loggingLevelString) {","lastModifiedDate":"2016-08-08"},{"lineNumber":134,"author":{"gitId":"-"},"content":"            return Level.parse(loggingLevelString);","lastModifiedDate":"2016-09-09"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        public Class\u003cLevel\u003e handledType() {","lastModifiedDate":"2016-08-08"},{"lineNumber":139,"author":{"gitId":"-"},"content":"            return Level.class;","lastModifiedDate":"2016-08-08"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":143,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"david-eom":3,"-":140}},{"path":"src/main/java/socialite/commons/util/StringUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"david-eom"},"content":"package socialite.commons.util;","lastModifiedDate":"2021-10-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"david-eom"},"content":"import static socialite.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2021-10-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.io.PrintWriter;","lastModifiedDate":"2016-09-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.io.StringWriter;","lastModifiedDate":"2016-09-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Helper functions for handling strings.","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class StringUtil {","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * Returns true if the {@code sentence} contains the {@code word}.","lastModifiedDate":"2016-10-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     *   Ignores case, but a full word match is required.","lastModifiedDate":"2016-10-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     *   \u003cbr\u003eexamples:\u003cpre\u003e","lastModifiedDate":"2016-10-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     *       containsWordIgnoreCase(\"ABc def\", \"abc\") \u003d\u003d true","lastModifiedDate":"2016-10-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     *       containsWordIgnoreCase(\"ABc def\", \"DEF\") \u003d\u003d true","lastModifiedDate":"2016-10-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     *       containsWordIgnoreCase(\"ABc def\", \"AB\") \u003d\u003d false //not a full word match","lastModifiedDate":"2016-10-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     *       \u003c/pre\u003e","lastModifiedDate":"2016-10-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * @param sentence cannot be null","lastModifiedDate":"2016-10-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @param word cannot be null, cannot be empty, must be a single word","lastModifiedDate":"2016-10-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static boolean containsWordIgnoreCase(String sentence, String word) {","lastModifiedDate":"2016-10-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        requireNonNull(sentence);","lastModifiedDate":"2017-05-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        requireNonNull(word);","lastModifiedDate":"2017-05-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        String preppedWord \u003d word.trim();","lastModifiedDate":"2016-10-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        checkArgument(!preppedWord.isEmpty(), \"Word parameter cannot be empty\");","lastModifiedDate":"2017-05-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        checkArgument(preppedWord.split(\"\\\\s+\").length \u003d\u003d 1, \"Word parameter should be a single word\");","lastModifiedDate":"2017-05-15"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        String preppedSentence \u003d sentence;","lastModifiedDate":"2016-10-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        String[] wordsInPreppedSentence \u003d preppedSentence.split(\"\\\\s+\");","lastModifiedDate":"2016-10-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        return Arrays.stream(wordsInPreppedSentence)","lastModifiedDate":"2018-01-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"                .anyMatch(preppedWord::equalsIgnoreCase);","lastModifiedDate":"2018-01-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * Returns a detailed message of the t, including the stack trace.","lastModifiedDate":"2016-09-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public static String getDetails(Throwable t) {","lastModifiedDate":"2016-09-21"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        requireNonNull(t);","lastModifiedDate":"2017-05-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        StringWriter sw \u003d new StringWriter();","lastModifiedDate":"2016-09-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        t.printStackTrace(new PrintWriter(sw));","lastModifiedDate":"2016-09-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        return t.getMessage() + \"\\n\" + sw.toString();","lastModifiedDate":"2016-09-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-22"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * Returns true if {@code s} represents a non-zero unsigned integer","lastModifiedDate":"2017-06-02"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * e.g. 1, 2, 3, ..., {@code Integer.MAX_VALUE} \u003cbr\u003e","lastModifiedDate":"2017-06-02"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * Will return false for any other non-null string input","lastModifiedDate":"2017-06-02"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * e.g. empty string, \"-1\", \"0\", \"+1\", and \" 2 \" (untrimmed), \"3 0\" (contains whitespace), \"1 a\" (contains letters)","lastModifiedDate":"2017-06-02"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * @throws NullPointerException if {@code s} is null.","lastModifiedDate":"2017-06-02"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-22"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public static boolean isNonZeroUnsignedInteger(String s) {","lastModifiedDate":"2017-06-02"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        requireNonNull(s);","lastModifiedDate":"2017-06-02"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-06-02"},{"lineNumber":62,"author":{"gitId":"-"},"content":"            int value \u003d Integer.parseInt(s);","lastModifiedDate":"2017-06-02"},{"lineNumber":63,"author":{"gitId":"-"},"content":"            return value \u003e 0 \u0026\u0026 !s.startsWith(\"+\"); // \"+1\" is successfully parsed by Integer#parseInt(String)","lastModifiedDate":"2017-06-02"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        } catch (NumberFormatException nfe) {","lastModifiedDate":"2017-06-02"},{"lineNumber":65,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-06-02"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-06-02"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":68,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"david-eom":2,"-":66}},{"path":"src/main/java/socialite/logic/Logic.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"david-eom"},"content":"package socialite.logic;","lastModifiedDate":"2021-10-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-09-25"},{"lineNumber":6,"author":{"gitId":"david-eom"},"content":"import socialite.commons.core.GuiSettings;","lastModifiedDate":"2021-10-08"},{"lineNumber":7,"author":{"gitId":"david-eom"},"content":"import socialite.logic.commands.CommandResult;","lastModifiedDate":"2021-10-08"},{"lineNumber":8,"author":{"gitId":"david-eom"},"content":"import socialite.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-10-08"},{"lineNumber":9,"author":{"gitId":"david-eom"},"content":"import socialite.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-10-08"},{"lineNumber":10,"author":{"gitId":"david-eom"},"content":"import socialite.model.Model;","lastModifiedDate":"2021-10-08"},{"lineNumber":11,"author":{"gitId":"david-eom"},"content":"import socialite.model.ReadOnlyAddressBook;","lastModifiedDate":"2021-10-08"},{"lineNumber":12,"author":{"gitId":"david-eom"},"content":"import socialite.model.ReadOnlyCommandHistory;","lastModifiedDate":"2021-10-21"},{"lineNumber":13,"author":{"gitId":"david-eom"},"content":"import socialite.model.person.Person;","lastModifiedDate":"2021-10-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * API of the Logic component","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public interface Logic {","lastModifiedDate":"2016-09-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2016-09-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * @param commandText The command as entered by the user.","lastModifiedDate":"2016-09-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * @return the result of the command execution.","lastModifiedDate":"2016-09-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * @throws CommandException If an error occurs during command execution.","lastModifiedDate":"2017-02-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @throws ParseException If an error occurs during parsing.","lastModifiedDate":"2017-03-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    CommandResult execute(String commandText) throws CommandException, ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Returns the AddressBook.","lastModifiedDate":"2018-12-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-12-03"},{"lineNumber":31,"author":{"gitId":"david-eom"},"content":"     * @see Model#getAddressBook()","lastModifiedDate":"2021-10-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    ReadOnlyAddressBook getAddressBook();","lastModifiedDate":"2018-12-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-03"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    /** Returns an unmodifiable view of the filtered list of persons */","lastModifiedDate":"2017-09-01"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    ObservableList\u003cPerson\u003e getFilteredPersonList();","lastModifiedDate":"2018-01-10"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-26"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 address book file path.","lastModifiedDate":"2018-11-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    Path getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     * Set the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    void setGuiSettings(GuiSettings guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"david-eom"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":53,"author":{"gitId":"david-eom"},"content":"    ReadOnlyCommandHistory getCommandHistory();","lastModifiedDate":"2021-10-21"},{"lineNumber":54,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"david-eom":12,"-":42}},{"path":"src/main/java/socialite/logic/LogicManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"david-eom"},"content":"package socialite.logic;","lastModifiedDate":"2021-10-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-12-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-09-24"},{"lineNumber":8,"author":{"gitId":"david-eom"},"content":"import socialite.commons.core.GuiSettings;","lastModifiedDate":"2021-10-08"},{"lineNumber":9,"author":{"gitId":"david-eom"},"content":"import socialite.commons.core.LogsCenter;","lastModifiedDate":"2021-10-08"},{"lineNumber":10,"author":{"gitId":"david-eom"},"content":"import socialite.logic.commands.Command;","lastModifiedDate":"2021-10-08"},{"lineNumber":11,"author":{"gitId":"david-eom"},"content":"import socialite.logic.commands.CommandResult;","lastModifiedDate":"2021-10-08"},{"lineNumber":12,"author":{"gitId":"david-eom"},"content":"import socialite.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-10-08"},{"lineNumber":13,"author":{"gitId":"david-eom"},"content":"import socialite.logic.parser.AddressBookParser;","lastModifiedDate":"2021-10-08"},{"lineNumber":14,"author":{"gitId":"david-eom"},"content":"import socialite.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-10-08"},{"lineNumber":15,"author":{"gitId":"david-eom"},"content":"import socialite.model.Model;","lastModifiedDate":"2021-10-08"},{"lineNumber":16,"author":{"gitId":"david-eom"},"content":"import socialite.model.ReadOnlyAddressBook;","lastModifiedDate":"2021-10-08"},{"lineNumber":17,"author":{"gitId":"david-eom"},"content":"import socialite.model.ReadOnlyCommandHistory;","lastModifiedDate":"2021-10-21"},{"lineNumber":18,"author":{"gitId":"david-eom"},"content":"import socialite.model.person.Person;","lastModifiedDate":"2021-10-08"},{"lineNumber":19,"author":{"gitId":"david-eom"},"content":"import socialite.storage.Storage;","lastModifiedDate":"2021-10-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * The main LogicManager of the app.","lastModifiedDate":"2016-09-22"},{"lineNumber":23,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"public class LogicManager implements Logic {","lastModifiedDate":"2018-12-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public static final String FILE_OPS_ERROR_MESSAGE \u003d \"Could not save data to file: \";","lastModifiedDate":"2018-12-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(LogicManager.class);","lastModifiedDate":"2016-09-29"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private final Model model;","lastModifiedDate":"2016-09-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private final Storage storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private final AddressBookParser addressBookParser;","lastModifiedDate":"2017-07-07"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * Constructs a {@code LogicManager} with the given {@code Model} and {@code Storage}.","lastModifiedDate":"2020-05-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public LogicManager(Model model, Storage storage) {","lastModifiedDate":"2018-12-09"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        this.model \u003d model;","lastModifiedDate":"2016-09-25"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        this.storage \u003d storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        addressBookParser \u003d new AddressBookParser();","lastModifiedDate":"2018-01-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public CommandResult execute(String commandText) throws CommandException, ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        logger.info(\"----------------[USER COMMAND][\" + commandText + \"]\");","lastModifiedDate":"2016-09-29"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":44,"author":{"gitId":"david-eom"},"content":"        model.addCommandToHistory(commandText);","lastModifiedDate":"2021-10-22"},{"lineNumber":45,"author":{"gitId":"david-eom"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        CommandResult commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        Command command \u003d addressBookParser.parseCommand(commandText);","lastModifiedDate":"2021-10-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        commandResult \u003d command.execute(model);","lastModifiedDate":"2019-01-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-12-09"},{"lineNumber":51,"author":{"gitId":"david-eom"},"content":"            storage.saveCommandHistory(model.getCommandHistory());","lastModifiedDate":"2021-10-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"            storage.saveAddressBook(model.getAddressBook());","lastModifiedDate":"2018-12-09"},{"lineNumber":53,"author":{"gitId":"Zacchua"},"content":"            storage.syncProfilePictures(model.getProfilePictureEditDescriptor());","lastModifiedDate":"2021-10-27"},{"lineNumber":54,"author":{"gitId":"Zacchua"},"content":"            model.clearProfilePictureModel();","lastModifiedDate":"2021-10-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2018-12-09"},{"lineNumber":56,"author":{"gitId":"-"},"content":"            throw new CommandException(FILE_OPS_ERROR_MESSAGE + ioe, ioe);","lastModifiedDate":"2018-12-09"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        return commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-12-03"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2018-12-03"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        return model.getAddressBook();","lastModifiedDate":"2018-12-03"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-03"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-03"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        return model.getFilteredPersonList();","lastModifiedDate":"2016-09-25"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-29"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        return model.getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        return model.getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        model.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":86,"author":{"gitId":"david-eom"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":87,"author":{"gitId":"david-eom"},"content":"    @Override","lastModifiedDate":"2021-10-21"},{"lineNumber":88,"author":{"gitId":"david-eom"},"content":"    public ReadOnlyCommandHistory getCommandHistory() {","lastModifiedDate":"2021-10-21"},{"lineNumber":89,"author":{"gitId":"david-eom"},"content":"        return model.getCommandHistory();","lastModifiedDate":"2021-10-21"},{"lineNumber":90,"author":{"gitId":"david-eom"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":91,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"Zacchua":2,"david-eom":21,"-":68}},{"path":"src/main/java/socialite/logic/commands/AddCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"david-eom"},"content":"package socialite.logic.commands;","lastModifiedDate":"2021-10-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"bnjmnt4n"},"content":"import static socialite.logic.parser.CliSyntax.PREFIX_DATE;","lastModifiedDate":"2021-10-23"},{"lineNumber":5,"author":{"gitId":"bnjmnt4n"},"content":"import static socialite.logic.parser.CliSyntax.PREFIX_FACEBOOK;","lastModifiedDate":"2021-10-23"},{"lineNumber":6,"author":{"gitId":"bnjmnt4n"},"content":"import static socialite.logic.parser.CliSyntax.PREFIX_INSTAGRAM;","lastModifiedDate":"2021-10-23"},{"lineNumber":7,"author":{"gitId":"bnjmnt4n"},"content":"import static socialite.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2021-10-23"},{"lineNumber":8,"author":{"gitId":"bnjmnt4n"},"content":"import static socialite.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2021-10-23"},{"lineNumber":9,"author":{"gitId":"bnjmnt4n"},"content":"import static socialite.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2021-10-23"},{"lineNumber":10,"author":{"gitId":"bnjmnt4n"},"content":"import static socialite.logic.parser.CliSyntax.PREFIX_TELEGRAM;","lastModifiedDate":"2021-10-23"},{"lineNumber":11,"author":{"gitId":"bnjmnt4n"},"content":"import static socialite.logic.parser.CliSyntax.PREFIX_TIKTOK;","lastModifiedDate":"2021-10-23"},{"lineNumber":12,"author":{"gitId":"bnjmnt4n"},"content":"import static socialite.logic.parser.CliSyntax.PREFIX_TWITTER;","lastModifiedDate":"2021-10-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":14,"author":{"gitId":"david-eom"},"content":"import socialite.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-10-08"},{"lineNumber":15,"author":{"gitId":"david-eom"},"content":"import socialite.model.Model;","lastModifiedDate":"2021-10-08"},{"lineNumber":16,"author":{"gitId":"david-eom"},"content":"import socialite.model.person.Person;","lastModifiedDate":"2021-10-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * Adds a person to the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"public class AddCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"add\";","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"stanley-1"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Adds a person to the address book. \\n\"","lastModifiedDate":"2021-10-20"},{"lineNumber":26,"author":{"gitId":"-"},"content":"            + \"Parameters: \"","lastModifiedDate":"2017-06-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"            + PREFIX_NAME + \"NAME \"","lastModifiedDate":"2017-06-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            + PREFIX_PHONE + \"PHONE \"","lastModifiedDate":"2017-05-09"},{"lineNumber":29,"author":{"gitId":"david-eom"},"content":"            + \"[\" + PREFIX_TAG + \"TAG]... \"","lastModifiedDate":"2021-10-08"},{"lineNumber":30,"author":{"gitId":"stanley-1"},"content":"            + \"[\" + PREFIX_FACEBOOK + \"FACEBOOK] \"","lastModifiedDate":"2021-10-12"},{"lineNumber":31,"author":{"gitId":"david-eom"},"content":"            + \"[\" + PREFIX_INSTAGRAM + \"INSTAGRAM] \"","lastModifiedDate":"2021-10-12"},{"lineNumber":32,"author":{"gitId":"Zacchua"},"content":"            + \"[\" + PREFIX_TELEGRAM + \"TELEGRAM] \"","lastModifiedDate":"2021-10-13"},{"lineNumber":33,"author":{"gitId":"Zacchua"},"content":"            + \"[\" + PREFIX_TIKTOK + \"TIKTOK] \"","lastModifiedDate":"2021-10-13"},{"lineNumber":34,"author":{"gitId":"bnjmnt4n"},"content":"            + \"[\" + PREFIX_TWITTER + \"TWITTER] \"","lastModifiedDate":"2021-10-23"},{"lineNumber":35,"author":{"gitId":"bnjmnt4n"},"content":"            + \"[\" + PREFIX_DATE + \"NAME:YYYY-MM-DD]...\\n\"","lastModifiedDate":"2021-10-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" \"","lastModifiedDate":"2017-06-06"},{"lineNumber":37,"author":{"gitId":"-"},"content":"            + PREFIX_NAME + \"John Doe \"","lastModifiedDate":"2017-06-06"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            + PREFIX_PHONE + \"98765432 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            + PREFIX_TAG + \"friends \"","lastModifiedDate":"2017-05-09"},{"lineNumber":40,"author":{"gitId":"Zacchua"},"content":"            + PREFIX_TAG + \"owesMoney \"","lastModifiedDate":"2021-10-12"},{"lineNumber":41,"author":{"gitId":"stanley-1"},"content":"            + PREFIX_FACEBOOK + \"john.doe \"","lastModifiedDate":"2021-10-12"},{"lineNumber":42,"author":{"gitId":"david-eom"},"content":"            + PREFIX_INSTAGRAM + \"john.doe \"","lastModifiedDate":"2021-10-12"},{"lineNumber":43,"author":{"gitId":"Zacchua"},"content":"            + PREFIX_TELEGRAM + \"johndoe \"","lastModifiedDate":"2021-10-13"},{"lineNumber":44,"author":{"gitId":"Zacchua"},"content":"            + PREFIX_TIKTOK + \"johndoe \"","lastModifiedDate":"2021-10-13"},{"lineNumber":45,"author":{"gitId":"bnjmnt4n"},"content":"            + PREFIX_TWITTER + \"johndoe \"","lastModifiedDate":"2021-10-23"},{"lineNumber":46,"author":{"gitId":"bnjmnt4n"},"content":"            + PREFIX_DATE + \"birthday:2000-01-01 \"","lastModifiedDate":"2021-10-23"},{"lineNumber":47,"author":{"gitId":"bnjmnt4n"},"content":"            + PREFIX_DATE + \"ord:2020-01-01\";","lastModifiedDate":"2021-10-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"New person added: %1$s\";","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"stanley-1"},"content":"    public static final String MESSAGE_DUPLICATE_PERSON \u003d","lastModifiedDate":"2021-11-01"},{"lineNumber":51,"author":{"gitId":"stanley-1"},"content":"            \"A contact with the same phone number already exists in the address book!\";","lastModifiedDate":"2021-11-01"},{"lineNumber":52,"author":{"gitId":"stanley-1"},"content":"    public static final String MESSAGE_HELP_GUIDE \u003d \"Enter \u0027help add\u0027 for in-app guidance.\";","lastModifiedDate":"2021-10-20"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    private final Person toAdd;","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     * Creates an AddCommand to add the specified {@code Person}","lastModifiedDate":"2018-01-10"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public AddCommand(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        requireNonNull(person);","lastModifiedDate":"2018-01-10"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        toAdd \u003d person;","lastModifiedDate":"2018-01-10"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2017-05-15"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        if (model.hasPerson(toAdd)) {","lastModifiedDate":"2018-08-07"},{"lineNumber":69,"author":{"gitId":"-"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2018-08-07"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        model.addPerson(toAdd);","lastModifiedDate":"2016-09-25"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, toAdd));","lastModifiedDate":"2016-08-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-22"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-22"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-06-22"},{"lineNumber":79,"author":{"gitId":"-"},"content":"                || (other instanceof AddCommand // instanceof handles nulls","lastModifiedDate":"2017-06-22"},{"lineNumber":80,"author":{"gitId":"-"},"content":"                \u0026\u0026 toAdd.equals(((AddCommand) other).toAdd));","lastModifiedDate":"2017-06-22"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-22"},{"lineNumber":82,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"Zacchua":5,"bnjmnt4n":14,"david-eom":7,"-":50,"stanley-1":6}},{"path":"src/main/java/socialite/logic/commands/ClearCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"david-eom"},"content":"package socialite.logic.commands;","lastModifiedDate":"2021-10-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"david-eom"},"content":"import socialite.model.AddressBook;","lastModifiedDate":"2021-10-08"},{"lineNumber":6,"author":{"gitId":"david-eom"},"content":"import socialite.model.Model;","lastModifiedDate":"2021-10-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Clears the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class ClearCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"clear\";","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Address book has been cleared!\";","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2017-05-15"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        model.setAddressBook(new AddressBook());","lastModifiedDate":"2018-11-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        return new CommandResult(MESSAGE_SUCCESS);","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"david-eom":3,"-":20}},{"path":"src/main/java/socialite/logic/commands/Command.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"david-eom"},"content":"package socialite.logic.commands;","lastModifiedDate":"2021-10-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"david-eom"},"content":"import socialite.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-10-08"},{"lineNumber":4,"author":{"gitId":"david-eom"},"content":"import socialite.model.Model;","lastModifiedDate":"2021-10-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Represents a command with hidden internal logic and the ability to be executed.","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public abstract class Command {","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result message.","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     * @param model {@code Model} which the command should operate on.","lastModifiedDate":"2018-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * @return feedback message of the operation result for display","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * @throws CommandException If an error occurs during command execution.","lastModifiedDate":"2017-02-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public abstract CommandResult execute(Model model) throws CommandException;","lastModifiedDate":"2019-01-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"david-eom":3,"-":17}},{"path":"src/main/java/socialite/logic/commands/CommandResult.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"david-eom"},"content":"package socialite.logic.commands;","lastModifiedDate":"2021-10-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2018-12-09"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Represents the result of a command execution.","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class CommandResult {","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private final String feedbackToUser;","lastModifiedDate":"2018-12-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"david-eom"},"content":"    /** Check if the command falls under the following categories. */","lastModifiedDate":"2021-10-28"},{"lineNumber":15,"author":{"gitId":"david-eom"},"content":"    private final boolean isHelpCommand;","lastModifiedDate":"2021-10-28"},{"lineNumber":16,"author":{"gitId":"david-eom"},"content":"    private final boolean isExitCommand;","lastModifiedDate":"2021-10-28"},{"lineNumber":17,"author":{"gitId":"Zacchua"},"content":"    private final boolean isPictureCommand;","lastModifiedDate":"2021-10-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * Constructs a {@code CommandResult} with the specified fields.","lastModifiedDate":"2018-12-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":22,"author":{"gitId":"david-eom"},"content":"    public CommandResult(","lastModifiedDate":"2021-10-28"},{"lineNumber":23,"author":{"gitId":"david-eom"},"content":"            String feedbackToUser, boolean isHelpCommand, boolean isExitCommand, boolean isPictureCommand","lastModifiedDate":"2021-10-28"},{"lineNumber":24,"author":{"gitId":"david-eom"},"content":"    ) {","lastModifiedDate":"2021-10-28"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        this.feedbackToUser \u003d requireNonNull(feedbackToUser);","lastModifiedDate":"2017-05-15"},{"lineNumber":26,"author":{"gitId":"david-eom"},"content":"        this.isHelpCommand \u003d isHelpCommand;","lastModifiedDate":"2021-10-28"},{"lineNumber":27,"author":{"gitId":"david-eom"},"content":"        this.isExitCommand \u003d isExitCommand;","lastModifiedDate":"2021-10-28"},{"lineNumber":28,"author":{"gitId":"Zacchua"},"content":"        this.isPictureCommand \u003d isPictureCommand;","lastModifiedDate":"2021-10-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * Constructs a {@code CommandResult} with the specified {@code feedbackToUser},","lastModifiedDate":"2018-12-09"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * and other fields set to their default value.","lastModifiedDate":"2018-12-09"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public CommandResult(String feedbackToUser) {","lastModifiedDate":"2018-12-09"},{"lineNumber":36,"author":{"gitId":"Zacchua"},"content":"        this(feedbackToUser, false, false, false);","lastModifiedDate":"2021-10-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public String getFeedbackToUser() {","lastModifiedDate":"2018-12-09"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        return feedbackToUser;","lastModifiedDate":"2018-12-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":43,"author":{"gitId":"david-eom"},"content":"    public boolean isHelpCommand() {","lastModifiedDate":"2021-10-28"},{"lineNumber":44,"author":{"gitId":"david-eom"},"content":"        return isHelpCommand;","lastModifiedDate":"2021-10-28"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":47,"author":{"gitId":"david-eom"},"content":"    public boolean isExitCommand() {","lastModifiedDate":"2021-10-28"},{"lineNumber":48,"author":{"gitId":"david-eom"},"content":"        return isExitCommand;","lastModifiedDate":"2021-10-28"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":51,"author":{"gitId":"Zacchua"},"content":"    public boolean isPictureCommand() {","lastModifiedDate":"2021-10-27"},{"lineNumber":52,"author":{"gitId":"Zacchua"},"content":"        return this.isPictureCommand;","lastModifiedDate":"2021-10-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-12-09"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2018-12-09"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2018-12-09"},{"lineNumber":58,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-12-09"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2018-12-09"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        if (!(other instanceof CommandResult)) {","lastModifiedDate":"2018-12-09"},{"lineNumber":63,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-12-09"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        CommandResult otherCommandResult \u003d (CommandResult) other;","lastModifiedDate":"2018-12-09"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        return feedbackToUser.equals(otherCommandResult.feedbackToUser)","lastModifiedDate":"2018-12-09"},{"lineNumber":68,"author":{"gitId":"david-eom"},"content":"                \u0026\u0026 isHelpCommand \u003d\u003d otherCommandResult.isHelpCommand","lastModifiedDate":"2021-10-28"},{"lineNumber":69,"author":{"gitId":"david-eom"},"content":"                \u0026\u0026 isExitCommand \u003d\u003d otherCommandResult.isExitCommand;","lastModifiedDate":"2021-10-28"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-12-09"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2018-12-09"},{"lineNumber":74,"author":{"gitId":"david-eom"},"content":"        return Objects.hash(feedbackToUser, isHelpCommand, isExitCommand);","lastModifiedDate":"2021-10-28"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":77,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"Zacchua":5,"david-eom":16,"-":56}},{"path":"src/main/java/socialite/logic/commands/DeleteCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"david-eom"},"content":"package socialite.logic.commands;","lastModifiedDate":"2021-10-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-09-01"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":7,"author":{"gitId":"david-eom"},"content":"import socialite.commons.core.Messages;","lastModifiedDate":"2021-10-08"},{"lineNumber":8,"author":{"gitId":"david-eom"},"content":"import socialite.commons.core.index.Index;","lastModifiedDate":"2021-10-08"},{"lineNumber":9,"author":{"gitId":"david-eom"},"content":"import socialite.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-10-08"},{"lineNumber":10,"author":{"gitId":"david-eom"},"content":"import socialite.model.Model;","lastModifiedDate":"2021-10-08"},{"lineNumber":11,"author":{"gitId":"david-eom"},"content":"import socialite.model.person.Person;","lastModifiedDate":"2021-10-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Deletes a person identified using it\u0027s displayed index from the address book.","lastModifiedDate":"2018-04-01"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class DeleteCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"delete\";","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"            + \": Deletes the person identified by the index number used in the displayed person list.\\n\"","lastModifiedDate":"2018-04-01"},{"lineNumber":22,"author":{"gitId":"-"},"content":"            + \"Parameters: INDEX (must be a positive integer)\\n\"","lastModifiedDate":"2016-09-29"},{"lineNumber":23,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1\";","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DELETE_PERSON_SUCCESS \u003d \"Deleted Person: %1$s\";","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"stanley-1"},"content":"    public static final String MESSAGE_HELP_GUIDE \u003d \"Enter \u0027help delete\u0027 for in-app guidance.\";","lastModifiedDate":"2021-10-20"},{"lineNumber":28,"author":{"gitId":"stanley-1"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private final Index targetIndex;","lastModifiedDate":"2017-06-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public DeleteCommand(Index targetIndex) {","lastModifiedDate":"2017-05-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        this.targetIndex \u003d targetIndex;","lastModifiedDate":"2016-09-22"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2018-04-19"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        if (targetIndex.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2018-04-19"},{"lineNumber":41,"author":{"gitId":"-"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2018-04-19"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        Person personToDelete \u003d lastShownList.get(targetIndex.getZeroBased());","lastModifiedDate":"2018-04-19"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        model.deletePerson(personToDelete);","lastModifiedDate":"2016-09-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        return new CommandResult(String.format(MESSAGE_DELETE_PERSON_SUCCESS, personToDelete));","lastModifiedDate":"2016-09-22"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-06-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"                || (other instanceof DeleteCommand // instanceof handles nulls","lastModifiedDate":"2017-06-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"                \u0026\u0026 targetIndex.equals(((DeleteCommand) other).targetIndex)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"david-eom":6,"-":47,"stanley-1":2}},{"path":"src/main/java/socialite/logic/commands/EditCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"david-eom"},"content":"package socialite.logic.commands;","lastModifiedDate":"2021-10-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"bnjmnt4n"},"content":"import static socialite.logic.parser.CliSyntax.PREFIX_DATE;","lastModifiedDate":"2021-10-23"},{"lineNumber":5,"author":{"gitId":"stanley-1"},"content":"import static socialite.logic.parser.CliSyntax.PREFIX_FACEBOOK;","lastModifiedDate":"2021-10-11"},{"lineNumber":6,"author":{"gitId":"stanley-1"},"content":"import static socialite.logic.parser.CliSyntax.PREFIX_INSTAGRAM;","lastModifiedDate":"2021-10-11"},{"lineNumber":7,"author":{"gitId":"david-eom"},"content":"import static socialite.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2021-10-08"},{"lineNumber":8,"author":{"gitId":"david-eom"},"content":"import static socialite.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2021-10-08"},{"lineNumber":9,"author":{"gitId":"Zacchua"},"content":"import static socialite.logic.parser.CliSyntax.PREFIX_REMARK;","lastModifiedDate":"2021-10-13"},{"lineNumber":10,"author":{"gitId":"david-eom"},"content":"import static socialite.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2021-10-08"},{"lineNumber":11,"author":{"gitId":"david-eom"},"content":"import static socialite.logic.parser.CliSyntax.PREFIX_TELEGRAM;","lastModifiedDate":"2021-10-08"},{"lineNumber":12,"author":{"gitId":"Zacchua"},"content":"import static socialite.logic.parser.CliSyntax.PREFIX_TIKTOK;","lastModifiedDate":"2021-10-12"},{"lineNumber":13,"author":{"gitId":"Zacchua"},"content":"import static socialite.logic.parser.CliSyntax.PREFIX_TWITTER;","lastModifiedDate":"2021-10-11"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2018-01-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-01-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-12-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2016-12-26"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":21,"author":{"gitId":"david-eom"},"content":"import socialite.commons.core.Messages;","lastModifiedDate":"2021-10-08"},{"lineNumber":22,"author":{"gitId":"david-eom"},"content":"import socialite.commons.core.index.Index;","lastModifiedDate":"2021-10-08"},{"lineNumber":23,"author":{"gitId":"david-eom"},"content":"import socialite.commons.util.CollectionUtil;","lastModifiedDate":"2021-10-08"},{"lineNumber":24,"author":{"gitId":"david-eom"},"content":"import socialite.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-10-08"},{"lineNumber":25,"author":{"gitId":"david-eom"},"content":"import socialite.model.Model;","lastModifiedDate":"2021-10-08"},{"lineNumber":26,"author":{"gitId":"stanley-1"},"content":"import socialite.model.handle.Facebook;","lastModifiedDate":"2021-10-11"},{"lineNumber":27,"author":{"gitId":"stanley-1"},"content":"import socialite.model.handle.Instagram;","lastModifiedDate":"2021-10-11"},{"lineNumber":28,"author":{"gitId":"david-eom"},"content":"import socialite.model.handle.Telegram;","lastModifiedDate":"2021-10-08"},{"lineNumber":29,"author":{"gitId":"Zacchua"},"content":"import socialite.model.handle.TikTok;","lastModifiedDate":"2021-10-12"},{"lineNumber":30,"author":{"gitId":"Zacchua"},"content":"import socialite.model.handle.Twitter;","lastModifiedDate":"2021-10-11"},{"lineNumber":31,"author":{"gitId":"bnjmnt4n"},"content":"import socialite.model.person.Dates;","lastModifiedDate":"2021-10-21"},{"lineNumber":32,"author":{"gitId":"david-eom"},"content":"import socialite.model.person.Name;","lastModifiedDate":"2021-10-08"},{"lineNumber":33,"author":{"gitId":"david-eom"},"content":"import socialite.model.person.Person;","lastModifiedDate":"2021-10-08"},{"lineNumber":34,"author":{"gitId":"david-eom"},"content":"import socialite.model.person.Phone;","lastModifiedDate":"2021-10-08"},{"lineNumber":35,"author":{"gitId":"Zacchua"},"content":"import socialite.model.person.ProfilePicture;","lastModifiedDate":"2021-10-27"},{"lineNumber":36,"author":{"gitId":"EssWhyy"},"content":"import socialite.model.person.Remark;","lastModifiedDate":"2021-10-12"},{"lineNumber":37,"author":{"gitId":"david-eom"},"content":"import socialite.model.tag.Tag;","lastModifiedDate":"2021-10-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":39,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-12-26"},{"lineNumber":40,"author":{"gitId":"-"},"content":" * Edits the details of an existing person in the address book.","lastModifiedDate":"2016-12-26"},{"lineNumber":41,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-12-26"},{"lineNumber":42,"author":{"gitId":"-"},"content":"public class EditCommand extends Command {","lastModifiedDate":"2018-04-19"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"edit\";","lastModifiedDate":"2016-12-26"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Edits the details of the person identified \"","lastModifiedDate":"2016-12-26"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            + \"by the index number used in the displayed person list. \"","lastModifiedDate":"2018-04-01"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            + \"Existing values will be overwritten by the input values.\\n\"","lastModifiedDate":"2016-12-26"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2017-06-06"},{"lineNumber":50,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_NAME + \"NAME] \"","lastModifiedDate":"2017-06-06"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_PHONE + \"PHONE] \"","lastModifiedDate":"2017-05-09"},{"lineNumber":52,"author":{"gitId":"Zacchua"},"content":"            + \"[\" + PREFIX_REMARK + \"REMARK] \"","lastModifiedDate":"2021-10-13"},{"lineNumber":53,"author":{"gitId":"david-eom"},"content":"            + \"[\" + PREFIX_TAG + \"TAG]... \"","lastModifiedDate":"2021-10-08"},{"lineNumber":54,"author":{"gitId":"stanley-1"},"content":"            + \"[\" + PREFIX_FACEBOOK + \"FACEBOOK] \"","lastModifiedDate":"2021-10-12"},{"lineNumber":55,"author":{"gitId":"david-eom"},"content":"            + \"[\" + PREFIX_INSTAGRAM + \"INSTAGRAM] \"","lastModifiedDate":"2021-10-12"},{"lineNumber":56,"author":{"gitId":"Zacchua"},"content":"            + \"[\" + PREFIX_TELEGRAM + \"TELEGRAM] \"","lastModifiedDate":"2021-10-13"},{"lineNumber":57,"author":{"gitId":"Zacchua"},"content":"            + \"[\" + PREFIX_TIKTOK + \"TIKTOK] \"","lastModifiedDate":"2021-10-12"},{"lineNumber":58,"author":{"gitId":"bnjmnt4n"},"content":"            + \"[\" + PREFIX_TWITTER + \"TWITTER] \"","lastModifiedDate":"2021-10-23"},{"lineNumber":59,"author":{"gitId":"bnjmnt4n"},"content":"            + \"[\" + PREFIX_DATE + \"NAME:YYYY-MM-DD]...\\n\"","lastModifiedDate":"2021-10-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":61,"author":{"gitId":"bnjmnt4n"},"content":"            + PREFIX_PHONE + \"91234567 \";","lastModifiedDate":"2021-10-12"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_EDIT_PERSON_SUCCESS \u003d \"Edited Person: %1$s\";","lastModifiedDate":"2016-12-26"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_NOT_EDITED \u003d \"At least one field to edit must be provided.\";","lastModifiedDate":"2016-12-26"},{"lineNumber":65,"author":{"gitId":"stanley-1"},"content":"    public static final String MESSAGE_DUPLICATE_PERSON \u003d","lastModifiedDate":"2021-11-01"},{"lineNumber":66,"author":{"gitId":"stanley-1"},"content":"            \"A contact with the same phone number already exists in the address book!\";","lastModifiedDate":"2021-11-01"},{"lineNumber":67,"author":{"gitId":"stanley-1"},"content":"    public static final String MESSAGE_HELP_GUIDE \u003d \"Enter \u0027help edit\u0027 for in-app guidance.\";","lastModifiedDate":"2021-10-20"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    private final Index index;","lastModifiedDate":"2017-05-25"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    private final EditPersonDescriptor editPersonDescriptor;","lastModifiedDate":"2016-12-26"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     * @param index of the person in the filtered person list to edit","lastModifiedDate":"2017-05-25"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     * @param editPersonDescriptor details to edit the person with","lastModifiedDate":"2016-12-26"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public EditCommand(Index index, EditPersonDescriptor editPersonDescriptor) {","lastModifiedDate":"2017-05-25"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        requireNonNull(index);","lastModifiedDate":"2017-05-25"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        requireNonNull(editPersonDescriptor);","lastModifiedDate":"2017-05-15"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        this.index \u003d index;","lastModifiedDate":"2017-05-25"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        this.editPersonDescriptor \u003d new EditPersonDescriptor(editPersonDescriptor);","lastModifiedDate":"2016-12-26"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-26"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2018-04-19"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2018-04-19"},{"lineNumber":90,"author":{"gitId":"-"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2018-04-19"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        Person personToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2018-04-19"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d createEditedPerson(personToEdit, editPersonDescriptor);","lastModifiedDate":"2018-04-19"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        if (!personToEdit.isSamePerson(editedPerson) \u0026\u0026 model.hasPerson(editedPerson)) {","lastModifiedDate":"2018-08-07"},{"lineNumber":97,"author":{"gitId":"-"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2018-08-07"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        model.setPerson(personToEdit, editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":101,"author":{"gitId":"david-eom"},"content":"        model.updateFilteredPersonList(Model.PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2021-10-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        return new CommandResult(String.format(MESSAGE_EDIT_PERSON_SUCCESS, editedPerson));","lastModifiedDate":"2017-08-05"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     * Creates and returns a {@code Person} with the details of {@code personToEdit}","lastModifiedDate":"2016-12-26"},{"lineNumber":107,"author":{"gitId":"-"},"content":"     * edited with {@code editPersonDescriptor}.","lastModifiedDate":"2016-12-26"},{"lineNumber":108,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    private static Person createEditedPerson(Person personToEdit, EditPersonDescriptor editPersonDescriptor) {","lastModifiedDate":"2018-01-10"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        assert personToEdit !\u003d null;","lastModifiedDate":"2016-12-26"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        Name updatedName \u003d editPersonDescriptor.getName().orElse(personToEdit.getName());","lastModifiedDate":"2017-06-21"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        Phone updatedPhone \u003d editPersonDescriptor.getPhone().orElse(personToEdit.getPhone());","lastModifiedDate":"2017-06-21"},{"lineNumber":114,"author":{"gitId":"Zacchua"},"content":"        Remark updatedRemark \u003d editPersonDescriptor.getRemark().orElse(personToEdit.getRemark());","lastModifiedDate":"2021-10-13"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e updatedTags \u003d editPersonDescriptor.getTags().orElse(personToEdit.getTags());","lastModifiedDate":"2017-06-21"},{"lineNumber":116,"author":{"gitId":"Zacchua"},"content":"        ProfilePicture profilePicture \u003d personToEdit.getProfilePicture();","lastModifiedDate":"2021-10-27"},{"lineNumber":117,"author":{"gitId":"stanley-1"},"content":"        Facebook updatedFacebook \u003d editPersonDescriptor.getFacebook().orElse(personToEdit.getFacebook());","lastModifiedDate":"2021-10-11"},{"lineNumber":118,"author":{"gitId":"stanley-1"},"content":"        Instagram updatedInstagram \u003d editPersonDescriptor.getInstagram().orElse(personToEdit.getInstagram());","lastModifiedDate":"2021-10-11"},{"lineNumber":119,"author":{"gitId":"david-eom"},"content":"        Telegram updatedTelegram \u003d editPersonDescriptor.getTelegram().orElse(personToEdit.getTelegram());","lastModifiedDate":"2021-10-08"},{"lineNumber":120,"author":{"gitId":"Zacchua"},"content":"        Twitter updatedTwitter \u003d editPersonDescriptor.getTwitter().orElse(personToEdit.getTwitter());","lastModifiedDate":"2021-10-12"},{"lineNumber":121,"author":{"gitId":"Zacchua"},"content":"        TikTok updatedTikTok \u003d editPersonDescriptor.getTikTok().orElse(personToEdit.getTiktok());","lastModifiedDate":"2021-10-12"},{"lineNumber":122,"author":{"gitId":"bnjmnt4n"},"content":"        Dates updatedDates \u003d editPersonDescriptor.getDates().orElse(personToEdit.getDates());","lastModifiedDate":"2021-10-21"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":124,"author":{"gitId":"Zacchua"},"content":"        Person editedPerson \u003d new Person(updatedName, updatedPhone, updatedRemark, updatedTags, updatedFacebook,","lastModifiedDate":"2021-10-27"},{"lineNumber":125,"author":{"gitId":"Zacchua"},"content":"                updatedInstagram, updatedTelegram, updatedTikTok, updatedTwitter, updatedDates);","lastModifiedDate":"2021-10-27"},{"lineNumber":126,"author":{"gitId":"Zacchua"},"content":"        editedPerson.setProfilePicture(profilePicture.value);","lastModifiedDate":"2021-10-27"},{"lineNumber":127,"author":{"gitId":"Zacchua"},"content":"        return editedPerson;","lastModifiedDate":"2021-10-27"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-08"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-05-08"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2017-05-08"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2017-05-08"},{"lineNumber":134,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-05-08"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-08"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-05-08"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        if (!(other instanceof EditCommand)) {","lastModifiedDate":"2017-05-08"},{"lineNumber":139,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-05-08"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-08"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2017-05-08"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        EditCommand e \u003d (EditCommand) other;","lastModifiedDate":"2017-05-08"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        return index.equals(e.index)","lastModifiedDate":"2017-05-25"},{"lineNumber":145,"author":{"gitId":"-"},"content":"                \u0026\u0026 editPersonDescriptor.equals(e.editPersonDescriptor);","lastModifiedDate":"2018-04-19"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-08"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":149,"author":{"gitId":"-"},"content":"     * Stores the details to edit the person with. Each non-empty field value will replace the","lastModifiedDate":"2016-12-26"},{"lineNumber":150,"author":{"gitId":"-"},"content":"     * corresponding field value of the person.","lastModifiedDate":"2016-12-26"},{"lineNumber":151,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    public static class EditPersonDescriptor {","lastModifiedDate":"2016-12-26"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        private Name name;","lastModifiedDate":"2017-06-21"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        private Phone phone;","lastModifiedDate":"2017-06-21"},{"lineNumber":155,"author":{"gitId":"Zacchua"},"content":"        private Remark remark;","lastModifiedDate":"2021-10-13"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        private Set\u003cTag\u003e tags;","lastModifiedDate":"2017-06-21"},{"lineNumber":157,"author":{"gitId":"Zacchua"},"content":"        private ProfilePicture profilePicture;","lastModifiedDate":"2021-10-27"},{"lineNumber":158,"author":{"gitId":"stanley-1"},"content":"        private Facebook facebook;","lastModifiedDate":"2021-10-11"},{"lineNumber":159,"author":{"gitId":"stanley-1"},"content":"        private Instagram instagram;","lastModifiedDate":"2021-10-11"},{"lineNumber":160,"author":{"gitId":"david-eom"},"content":"        private Telegram telegram;","lastModifiedDate":"2021-10-08"},{"lineNumber":161,"author":{"gitId":"Zacchua"},"content":"        private TikTok tiktok;","lastModifiedDate":"2021-10-12"},{"lineNumber":162,"author":{"gitId":"Zacchua"},"content":"        private Twitter twitter;","lastModifiedDate":"2021-10-12"},{"lineNumber":163,"author":{"gitId":"bnjmnt4n"},"content":"        private Dates dates;","lastModifiedDate":"2021-10-21"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        public EditPersonDescriptor() {}","lastModifiedDate":"2016-12-26"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":168,"author":{"gitId":"-"},"content":"         * Copy constructor.","lastModifiedDate":"2018-01-11"},{"lineNumber":169,"author":{"gitId":"-"},"content":"         * A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2018-01-11"},{"lineNumber":170,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        public EditPersonDescriptor(EditPersonDescriptor toCopy) {","lastModifiedDate":"2016-12-26"},{"lineNumber":172,"author":{"gitId":"-"},"content":"            setName(toCopy.name);","lastModifiedDate":"2018-01-15"},{"lineNumber":173,"author":{"gitId":"-"},"content":"            setPhone(toCopy.phone);","lastModifiedDate":"2018-01-15"},{"lineNumber":174,"author":{"gitId":"Zacchua"},"content":"            setRemark(toCopy.remark);","lastModifiedDate":"2021-10-13"},{"lineNumber":175,"author":{"gitId":"-"},"content":"            setTags(toCopy.tags);","lastModifiedDate":"2018-01-11"},{"lineNumber":176,"author":{"gitId":"Zacchua"},"content":"            setProfilePicture(toCopy.profilePicture);","lastModifiedDate":"2021-10-27"},{"lineNumber":177,"author":{"gitId":"stanley-1"},"content":"            setFacebook(toCopy.facebook);","lastModifiedDate":"2021-10-11"},{"lineNumber":178,"author":{"gitId":"stanley-1"},"content":"            setInstagram(toCopy.instagram);","lastModifiedDate":"2021-10-11"},{"lineNumber":179,"author":{"gitId":"david-eom"},"content":"            setTelegram(toCopy.telegram);","lastModifiedDate":"2021-10-08"},{"lineNumber":180,"author":{"gitId":"Zacchua"},"content":"            setTikTok(toCopy.tiktok);","lastModifiedDate":"2021-10-12"},{"lineNumber":181,"author":{"gitId":"Zacchua"},"content":"            setTwitter(toCopy.twitter);","lastModifiedDate":"2021-10-12"},{"lineNumber":182,"author":{"gitId":"bnjmnt4n"},"content":"            setDates(toCopy.dates);","lastModifiedDate":"2021-10-21"},{"lineNumber":183,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":185,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2016-12-26"},{"lineNumber":186,"author":{"gitId":"-"},"content":"         * Returns true if at least one field is edited.","lastModifiedDate":"2016-12-26"},{"lineNumber":187,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-12-26"},{"lineNumber":188,"author":{"gitId":"-"},"content":"        public boolean isAnyFieldEdited() {","lastModifiedDate":"2016-12-26"},{"lineNumber":189,"author":{"gitId":"bnjmnt4n"},"content":"            return CollectionUtil.isAnyNonNull(name, phone, remark, tags, facebook, instagram,","lastModifiedDate":"2021-10-15"},{"lineNumber":190,"author":{"gitId":"bnjmnt4n"},"content":"                    telegram, tiktok, twitter, dates);","lastModifiedDate":"2021-10-21"},{"lineNumber":191,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":192,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":193,"author":{"gitId":"-"},"content":"        public void setName(Name name) {","lastModifiedDate":"2017-06-21"},{"lineNumber":194,"author":{"gitId":"-"},"content":"            this.name \u003d name;","lastModifiedDate":"2017-06-21"},{"lineNumber":195,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":197,"author":{"gitId":"-"},"content":"        public Optional\u003cName\u003e getName() {","lastModifiedDate":"2016-12-26"},{"lineNumber":198,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(name);","lastModifiedDate":"2017-06-21"},{"lineNumber":199,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":200,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":201,"author":{"gitId":"-"},"content":"        public void setPhone(Phone phone) {","lastModifiedDate":"2017-06-21"},{"lineNumber":202,"author":{"gitId":"-"},"content":"            this.phone \u003d phone;","lastModifiedDate":"2017-06-21"},{"lineNumber":203,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":204,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":205,"author":{"gitId":"-"},"content":"        public Optional\u003cPhone\u003e getPhone() {","lastModifiedDate":"2016-12-26"},{"lineNumber":206,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(phone);","lastModifiedDate":"2017-06-21"},{"lineNumber":207,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":208,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":209,"author":{"gitId":"Zacchua"},"content":"        public void setRemark(Remark remark) {","lastModifiedDate":"2021-10-13"},{"lineNumber":210,"author":{"gitId":"Zacchua"},"content":"            this.remark \u003d remark;","lastModifiedDate":"2021-10-13"},{"lineNumber":211,"author":{"gitId":"Zacchua"},"content":"        }","lastModifiedDate":"2021-10-13"},{"lineNumber":212,"author":{"gitId":"Zacchua"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":213,"author":{"gitId":"Zacchua"},"content":"        public Optional\u003cRemark\u003e getRemark() {","lastModifiedDate":"2021-10-13"},{"lineNumber":214,"author":{"gitId":"Zacchua"},"content":"            return Optional.ofNullable(remark);","lastModifiedDate":"2021-10-13"},{"lineNumber":215,"author":{"gitId":"Zacchua"},"content":"        }","lastModifiedDate":"2021-10-13"},{"lineNumber":216,"author":{"gitId":"Zacchua"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":217,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":218,"author":{"gitId":"-"},"content":"         * Sets {@code tags} to this object\u0027s {@code tags}.","lastModifiedDate":"2018-01-11"},{"lineNumber":219,"author":{"gitId":"-"},"content":"         * A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2018-01-11"},{"lineNumber":220,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":221,"author":{"gitId":"-"},"content":"        public void setTags(Set\u003cTag\u003e tags) {","lastModifiedDate":"2017-06-21"},{"lineNumber":222,"author":{"gitId":"-"},"content":"            this.tags \u003d (tags !\u003d null) ? new HashSet\u003c\u003e(tags) : null;","lastModifiedDate":"2018-01-11"},{"lineNumber":223,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":224,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":225,"author":{"gitId":"Zacchua"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":226,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":227,"author":{"gitId":"-"},"content":"         * Returns an unmodifiable tag set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2018-01-11"},{"lineNumber":228,"author":{"gitId":"-"},"content":"         * if modification is attempted.","lastModifiedDate":"2018-01-11"},{"lineNumber":229,"author":{"gitId":"-"},"content":"         * Returns {@code Optional#empty()} if {@code tags} is null.","lastModifiedDate":"2018-01-11"},{"lineNumber":230,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":231,"author":{"gitId":"-"},"content":"        public Optional\u003cSet\u003cTag\u003e\u003e getTags() {","lastModifiedDate":"2017-03-07"},{"lineNumber":232,"author":{"gitId":"-"},"content":"            return (tags !\u003d null) ? Optional.of(Collections.unmodifiableSet(tags)) : Optional.empty();","lastModifiedDate":"2018-01-11"},{"lineNumber":233,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":234,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":235,"author":{"gitId":"Zacchua"},"content":"        public void setProfilePicture(ProfilePicture profilePicture) {","lastModifiedDate":"2021-10-27"},{"lineNumber":236,"author":{"gitId":"Zacchua"},"content":"            this.profilePicture \u003d profilePicture;","lastModifiedDate":"2021-10-27"},{"lineNumber":237,"author":{"gitId":"Zacchua"},"content":"        }","lastModifiedDate":"2021-10-27"},{"lineNumber":238,"author":{"gitId":"Zacchua"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":239,"author":{"gitId":"Zacchua"},"content":"        public ProfilePicture getProfilePicture() {","lastModifiedDate":"2021-10-27"},{"lineNumber":240,"author":{"gitId":"Zacchua"},"content":"            return this.profilePicture;","lastModifiedDate":"2021-10-27"},{"lineNumber":241,"author":{"gitId":"Zacchua"},"content":"        }","lastModifiedDate":"2021-10-27"},{"lineNumber":242,"author":{"gitId":"stanley-1"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":243,"author":{"gitId":"stanley-1"},"content":"        public void setInstagram(Instagram instagram) {","lastModifiedDate":"2021-10-11"},{"lineNumber":244,"author":{"gitId":"stanley-1"},"content":"            this.instagram \u003d instagram;","lastModifiedDate":"2021-10-11"},{"lineNumber":245,"author":{"gitId":"stanley-1"},"content":"        }","lastModifiedDate":"2021-10-11"},{"lineNumber":246,"author":{"gitId":"stanley-1"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":247,"author":{"gitId":"stanley-1"},"content":"        public Optional\u003cInstagram\u003e getInstagram() {","lastModifiedDate":"2021-10-11"},{"lineNumber":248,"author":{"gitId":"stanley-1"},"content":"            return Optional.ofNullable(instagram);","lastModifiedDate":"2021-10-11"},{"lineNumber":249,"author":{"gitId":"stanley-1"},"content":"        }","lastModifiedDate":"2021-10-11"},{"lineNumber":250,"author":{"gitId":"stanley-1"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":251,"author":{"gitId":"stanley-1"},"content":"        public void setFacebook(Facebook facebook) {","lastModifiedDate":"2021-10-11"},{"lineNumber":252,"author":{"gitId":"stanley-1"},"content":"            this.facebook \u003d facebook;","lastModifiedDate":"2021-10-11"},{"lineNumber":253,"author":{"gitId":"stanley-1"},"content":"        }","lastModifiedDate":"2021-10-11"},{"lineNumber":254,"author":{"gitId":"stanley-1"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":255,"author":{"gitId":"stanley-1"},"content":"        public Optional\u003cFacebook\u003e getFacebook() {","lastModifiedDate":"2021-10-11"},{"lineNumber":256,"author":{"gitId":"stanley-1"},"content":"            return Optional.ofNullable(facebook);","lastModifiedDate":"2021-10-11"},{"lineNumber":257,"author":{"gitId":"stanley-1"},"content":"        }","lastModifiedDate":"2021-10-11"},{"lineNumber":258,"author":{"gitId":"stanley-1"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":259,"author":{"gitId":"david-eom"},"content":"        public void setTelegram(Telegram telegram) {","lastModifiedDate":"2021-10-08"},{"lineNumber":260,"author":{"gitId":"david-eom"},"content":"            this.telegram \u003d telegram;","lastModifiedDate":"2021-10-08"},{"lineNumber":261,"author":{"gitId":"david-eom"},"content":"        }","lastModifiedDate":"2021-10-08"},{"lineNumber":262,"author":{"gitId":"david-eom"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":263,"author":{"gitId":"david-eom"},"content":"        public Optional\u003cTelegram\u003e getTelegram() {","lastModifiedDate":"2021-10-08"},{"lineNumber":264,"author":{"gitId":"david-eom"},"content":"            return Optional.ofNullable(telegram);","lastModifiedDate":"2021-10-09"},{"lineNumber":265,"author":{"gitId":"david-eom"},"content":"        }","lastModifiedDate":"2021-10-08"},{"lineNumber":266,"author":{"gitId":"david-eom"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":267,"author":{"gitId":"Zacchua"},"content":"        public void setTikTok(TikTok tiktok) {","lastModifiedDate":"2021-10-12"},{"lineNumber":268,"author":{"gitId":"Zacchua"},"content":"            this.tiktok \u003d tiktok;","lastModifiedDate":"2021-10-12"},{"lineNumber":269,"author":{"gitId":"Zacchua"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":270,"author":{"gitId":"Zacchua"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":271,"author":{"gitId":"Zacchua"},"content":"        public Optional\u003cTikTok\u003e getTikTok() {","lastModifiedDate":"2021-10-12"},{"lineNumber":272,"author":{"gitId":"Zacchua"},"content":"            return Optional.ofNullable(this.tiktok);","lastModifiedDate":"2021-10-12"},{"lineNumber":273,"author":{"gitId":"Zacchua"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":274,"author":{"gitId":"Zacchua"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":275,"author":{"gitId":"Zacchua"},"content":"        public void setTwitter(Twitter twitter) {","lastModifiedDate":"2021-10-12"},{"lineNumber":276,"author":{"gitId":"Zacchua"},"content":"            this.twitter \u003d twitter;","lastModifiedDate":"2021-10-12"},{"lineNumber":277,"author":{"gitId":"Zacchua"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":278,"author":{"gitId":"Zacchua"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":279,"author":{"gitId":"Zacchua"},"content":"        public Optional\u003cTwitter\u003e getTwitter() {","lastModifiedDate":"2021-10-12"},{"lineNumber":280,"author":{"gitId":"Zacchua"},"content":"            return Optional.ofNullable(this.twitter);","lastModifiedDate":"2021-10-12"},{"lineNumber":281,"author":{"gitId":"Zacchua"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":282,"author":{"gitId":"Zacchua"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":283,"author":{"gitId":"bnjmnt4n"},"content":"        public void setDates(Dates dates) {","lastModifiedDate":"2021-10-21"},{"lineNumber":284,"author":{"gitId":"bnjmnt4n"},"content":"            this.dates \u003d dates;","lastModifiedDate":"2021-10-21"},{"lineNumber":285,"author":{"gitId":"bnjmnt4n"},"content":"        }","lastModifiedDate":"2021-10-21"},{"lineNumber":286,"author":{"gitId":"bnjmnt4n"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":287,"author":{"gitId":"bnjmnt4n"},"content":"        public Optional\u003cDates\u003e getDates() {","lastModifiedDate":"2021-10-21"},{"lineNumber":288,"author":{"gitId":"bnjmnt4n"},"content":"            return Optional.ofNullable(this.dates);","lastModifiedDate":"2021-10-21"},{"lineNumber":289,"author":{"gitId":"bnjmnt4n"},"content":"        }","lastModifiedDate":"2021-10-21"},{"lineNumber":290,"author":{"gitId":"bnjmnt4n"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":291,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-05"},{"lineNumber":292,"author":{"gitId":"-"},"content":"        public boolean equals(Object other) {","lastModifiedDate":"2017-05-05"},{"lineNumber":293,"author":{"gitId":"-"},"content":"            // short circuit if same object","lastModifiedDate":"2017-05-05"},{"lineNumber":294,"author":{"gitId":"-"},"content":"            if (other \u003d\u003d this) {","lastModifiedDate":"2017-05-05"},{"lineNumber":295,"author":{"gitId":"-"},"content":"                return true;","lastModifiedDate":"2017-05-05"},{"lineNumber":296,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-05-05"},{"lineNumber":297,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":298,"author":{"gitId":"-"},"content":"            // instanceof handles nulls","lastModifiedDate":"2017-05-05"},{"lineNumber":299,"author":{"gitId":"-"},"content":"            if (!(other instanceof EditPersonDescriptor)) {","lastModifiedDate":"2017-05-05"},{"lineNumber":300,"author":{"gitId":"-"},"content":"                return false;","lastModifiedDate":"2017-05-05"},{"lineNumber":301,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-05-05"},{"lineNumber":302,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":303,"author":{"gitId":"-"},"content":"            // state check","lastModifiedDate":"2017-05-05"},{"lineNumber":304,"author":{"gitId":"-"},"content":"            EditPersonDescriptor e \u003d (EditPersonDescriptor) other;","lastModifiedDate":"2017-05-05"},{"lineNumber":305,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-21"},{"lineNumber":306,"author":{"gitId":"-"},"content":"            return getName().equals(e.getName())","lastModifiedDate":"2017-06-21"},{"lineNumber":307,"author":{"gitId":"-"},"content":"                    \u0026\u0026 getPhone().equals(e.getPhone())","lastModifiedDate":"2017-06-21"},{"lineNumber":308,"author":{"gitId":"Zacchua"},"content":"                    \u0026\u0026 getRemark().equals(e.getRemark())","lastModifiedDate":"2021-10-13"},{"lineNumber":309,"author":{"gitId":"Zacchua"},"content":"                    \u0026\u0026 getTags().equals(e.getTags())","lastModifiedDate":"2021-10-12"},{"lineNumber":310,"author":{"gitId":"stanley-1"},"content":"                    \u0026\u0026 getFacebook().equals(e.getFacebook())","lastModifiedDate":"2021-10-12"},{"lineNumber":311,"author":{"gitId":"david-eom"},"content":"                    \u0026\u0026 getInstagram().equals(e.getInstagram())","lastModifiedDate":"2021-10-12"},{"lineNumber":312,"author":{"gitId":"Zacchua"},"content":"                    \u0026\u0026 getTelegram().equals(e.getTelegram())","lastModifiedDate":"2021-10-13"},{"lineNumber":313,"author":{"gitId":"Zacchua"},"content":"                    \u0026\u0026 getTikTok().equals(e.getTikTok())","lastModifiedDate":"2021-10-12"},{"lineNumber":314,"author":{"gitId":"bnjmnt4n"},"content":"                    \u0026\u0026 getTwitter().equals(e.getTwitter())","lastModifiedDate":"2021-10-21"},{"lineNumber":315,"author":{"gitId":"bnjmnt4n"},"content":"                    \u0026\u0026 getDates().equals(e.getDates());","lastModifiedDate":"2021-10-21"},{"lineNumber":316,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-05"},{"lineNumber":317,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":318,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-26"}],"authorContributionMap":{"Zacchua":61,"EssWhyy":1,"bnjmnt4n":20,"david-eom":30,"-":174,"stanley-1":32}},{"path":"src/main/java/socialite/logic/commands/ExitCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"david-eom"},"content":"package socialite.logic.commands;","lastModifiedDate":"2021-10-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":3,"author":{"gitId":"david-eom"},"content":"import socialite.model.Model;","lastModifiedDate":"2021-10-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-22"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Terminates the program.","lastModifiedDate":"2016-09-22"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-22"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class ExitCommand extends Command {","lastModifiedDate":"2016-09-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"exit\";","lastModifiedDate":"2016-09-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_EXIT_ACKNOWLEDGEMENT \u003d \"Exiting Address Book as requested ...\";","lastModifiedDate":"2016-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":16,"author":{"gitId":"Zacchua"},"content":"        return new CommandResult(MESSAGE_EXIT_ACKNOWLEDGEMENT, false, true, false);","lastModifiedDate":"2021-10-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":19,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-22"}],"authorContributionMap":{"Zacchua":1,"david-eom":2,"-":16}},{"path":"src/main/java/socialite/logic/commands/FindCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"david-eom"},"content":"package socialite.logic.commands;","lastModifiedDate":"2021-10-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":5,"author":{"gitId":"david-eom"},"content":"import socialite.commons.core.Messages;","lastModifiedDate":"2021-10-08"},{"lineNumber":6,"author":{"gitId":"david-eom"},"content":"import socialite.model.Model;","lastModifiedDate":"2021-10-08"},{"lineNumber":7,"author":{"gitId":"david-eom"},"content":"import socialite.model.person.ContainsKeywordsPredicate;","lastModifiedDate":"2021-10-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-22"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Finds and lists all persons in address book whose name contains any of the argument keywords.","lastModifiedDate":"2016-09-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Keyword matching is case insensitive.","lastModifiedDate":"2018-04-01"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class FindCommand extends Command {","lastModifiedDate":"2016-09-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"find\";","lastModifiedDate":"2016-09-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":17,"author":{"gitId":"EssWhyy"},"content":"    public static final String MESSAGE_HELP_GUIDE \u003d \"Enter \u0027help find\u0027 for in-app guidance.\";","lastModifiedDate":"2021-10-22"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":19,"author":{"gitId":"EssWhyy"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Filters contacts containing ALL keywords listed.\\n\"","lastModifiedDate":"2021-10-22"},{"lineNumber":20,"author":{"gitId":"EssWhyy"},"content":"            + \"Keywords can be in the form of tags (prefix with \u0027t/\u0027), \"","lastModifiedDate":"2021-10-22"},{"lineNumber":21,"author":{"gitId":"EssWhyy"},"content":"            + \"handles (prefix with \u0027p/\u0027), and names (no prefix needed).\\n\"","lastModifiedDate":"2021-10-18"},{"lineNumber":22,"author":{"gitId":"EssWhyy"},"content":"            + \"Parameters: find [KEYWORDS]; \"","lastModifiedDate":"2021-10-22"},{"lineNumber":23,"author":{"gitId":"EssWhyy"},"content":"            + \"Example: \" + COMMAND_WORD + \" alice t/colleagues p/instagram\";","lastModifiedDate":"2021-10-22"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":25,"author":{"gitId":"david-eom"},"content":"    private final ContainsKeywordsPredicate predicate;","lastModifiedDate":"2021-10-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":27,"author":{"gitId":"david-eom"},"content":"    public FindCommand(ContainsKeywordsPredicate predicate) {","lastModifiedDate":"2021-10-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        this.predicate \u003d predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-22"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(predicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        return new CommandResult(","lastModifiedDate":"2018-04-01"},{"lineNumber":36,"author":{"gitId":"-"},"content":"                String.format(Messages.MESSAGE_PERSONS_LISTED_OVERVIEW, model.getFilteredPersonList().size()));","lastModifiedDate":"2018-04-01"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-06-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"                || (other instanceof FindCommand // instanceof handles nulls","lastModifiedDate":"2017-06-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"                \u0026\u0026 predicate.equals(((FindCommand) other).predicate)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-22"}],"authorContributionMap":{"EssWhyy":6,"david-eom":6,"-":33}},{"path":"src/main/java/socialite/logic/commands/HelpCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"david-eom"},"content":"package socialite.logic.commands;","lastModifiedDate":"2021-10-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"stanley-1"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-19"},{"lineNumber":4,"author":{"gitId":"stanley-1"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":5,"author":{"gitId":"david-eom"},"content":"import socialite.model.Model;","lastModifiedDate":"2021-10-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-31"},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Format full help instructions for every command for display.","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class HelpCommand extends Command {","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"help\";","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Shows program usage instructions.\\n\"","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"            + \"Example: \" + COMMAND_WORD;","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public static final String SHOWING_HELP_MESSAGE \u003d \"Opened help window.\";","lastModifiedDate":"2016-08-31"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-31"},{"lineNumber":19,"author":{"gitId":"stanley-1"},"content":"    public static final String GENERIC_RESPONSE \u003d \"default\";","lastModifiedDate":"2021-10-19"},{"lineNumber":20,"author":{"gitId":"stanley-1"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":21,"author":{"gitId":"stanley-1"},"content":"    private final String answer;","lastModifiedDate":"2021-10-19"},{"lineNumber":22,"author":{"gitId":"stanley-1"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":23,"author":{"gitId":"stanley-1"},"content":"    /**","lastModifiedDate":"2021-10-19"},{"lineNumber":24,"author":{"gitId":"stanley-1"},"content":"     * Creates a HelpCommand with the formulated response.","lastModifiedDate":"2021-10-19"},{"lineNumber":25,"author":{"gitId":"stanley-1"},"content":"     * @param response Response determined by HelpCommandParser","lastModifiedDate":"2021-10-19"},{"lineNumber":26,"author":{"gitId":"stanley-1"},"content":"     */","lastModifiedDate":"2021-10-19"},{"lineNumber":27,"author":{"gitId":"stanley-1"},"content":"    public HelpCommand(String response) {","lastModifiedDate":"2021-10-19"},{"lineNumber":28,"author":{"gitId":"stanley-1"},"content":"        requireNonNull(response);","lastModifiedDate":"2021-10-19"},{"lineNumber":29,"author":{"gitId":"stanley-1"},"content":"        answer \u003d response;","lastModifiedDate":"2021-10-19"},{"lineNumber":30,"author":{"gitId":"stanley-1"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":31,"author":{"gitId":"stanley-1"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":34,"author":{"gitId":"stanley-1"},"content":"        requireNonNull(answer);","lastModifiedDate":"2021-10-19"},{"lineNumber":35,"author":{"gitId":"stanley-1"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":36,"author":{"gitId":"david-eom"},"content":"        if (answer.equals(GENERIC_RESPONSE)) {","lastModifiedDate":"2021-10-28"},{"lineNumber":37,"author":{"gitId":"Zacchua"},"content":"            return new CommandResult(SHOWING_HELP_MESSAGE, true, false, false);","lastModifiedDate":"2021-10-27"},{"lineNumber":38,"author":{"gitId":"stanley-1"},"content":"        } else {","lastModifiedDate":"2021-10-19"},{"lineNumber":39,"author":{"gitId":"stanley-1"},"content":"            return new CommandResult(answer);","lastModifiedDate":"2021-10-19"},{"lineNumber":40,"author":{"gitId":"stanley-1"},"content":"        }","lastModifiedDate":"2021-10-19"},{"lineNumber":41,"author":{"gitId":"stanley-1"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":42,"author":{"gitId":"stanley-1"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":43,"author":{"gitId":"stanley-1"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":44,"author":{"gitId":"stanley-1"},"content":"    @Override","lastModifiedDate":"2021-10-19"},{"lineNumber":45,"author":{"gitId":"stanley-1"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-19"},{"lineNumber":46,"author":{"gitId":"stanley-1"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-10-19"},{"lineNumber":47,"author":{"gitId":"stanley-1"},"content":"                || (other instanceof HelpCommand // instanceof handles nulls","lastModifiedDate":"2021-10-19"},{"lineNumber":48,"author":{"gitId":"stanley-1"},"content":"                \u0026\u0026 answer.equals(((HelpCommand) other).answer));","lastModifiedDate":"2021-10-19"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"Zacchua":1,"david-eom":3,"-":18,"stanley-1":28}},{"path":"src/main/java/socialite/logic/commands/ListCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"david-eom"},"content":"package socialite.logic.commands;","lastModifiedDate":"2021-10-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":5,"author":{"gitId":"david-eom"},"content":"import socialite.model.Model;","lastModifiedDate":"2021-10-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Lists all persons in the address book to the user.","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class ListCommand extends Command {","lastModifiedDate":"2016-09-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String COMMAND_WORD \u003d \"list\";","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Listed all persons\";","lastModifiedDate":"2016-09-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":20,"author":{"gitId":"david-eom"},"content":"        model.updateFilteredPersonList(Model.PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2021-10-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        return new CommandResult(MESSAGE_SUCCESS);","lastModifiedDate":"2016-09-22"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"david-eom":3,"-":20}},{"path":"src/main/java/socialite/logic/commands/PictureCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Zacchua"},"content":"package socialite.logic.commands;","lastModifiedDate":"2021-10-24"},{"lineNumber":2,"author":{"gitId":"Zacchua"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":3,"author":{"gitId":"Zacchua"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-26"},{"lineNumber":4,"author":{"gitId":"Zacchua"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":5,"author":{"gitId":"Zacchua"},"content":"import java.io.File;","lastModifiedDate":"2021-10-26"},{"lineNumber":6,"author":{"gitId":"Zacchua"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2021-10-26"},{"lineNumber":7,"author":{"gitId":"Zacchua"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-10-26"},{"lineNumber":8,"author":{"gitId":"Zacchua"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-10-27"},{"lineNumber":9,"author":{"gitId":"Zacchua"},"content":"import java.util.List;","lastModifiedDate":"2021-10-26"},{"lineNumber":10,"author":{"gitId":"Zacchua"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":11,"author":{"gitId":"Zacchua"},"content":"import socialite.commons.core.Messages;","lastModifiedDate":"2021-10-24"},{"lineNumber":12,"author":{"gitId":"Zacchua"},"content":"import socialite.commons.core.index.Index;","lastModifiedDate":"2021-10-24"},{"lineNumber":13,"author":{"gitId":"Zacchua"},"content":"import socialite.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-10-24"},{"lineNumber":14,"author":{"gitId":"Zacchua"},"content":"import socialite.model.Model;","lastModifiedDate":"2021-10-24"},{"lineNumber":15,"author":{"gitId":"Zacchua"},"content":"import socialite.model.person.Person;","lastModifiedDate":"2021-10-24"},{"lineNumber":16,"author":{"gitId":"Zacchua"},"content":"import socialite.model.person.ProfilePicture;","lastModifiedDate":"2021-10-24"},{"lineNumber":17,"author":{"gitId":"Zacchua"},"content":"import socialite.ui.MainWindow;","lastModifiedDate":"2021-11-01"},{"lineNumber":18,"author":{"gitId":"Zacchua"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":19,"author":{"gitId":"Zacchua"},"content":"public class PictureCommand extends Command {","lastModifiedDate":"2021-10-24"},{"lineNumber":20,"author":{"gitId":"Zacchua"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":21,"author":{"gitId":"Zacchua"},"content":"    public static final String COMMAND_WORD \u003d \"picture\";","lastModifiedDate":"2021-10-24"},{"lineNumber":22,"author":{"gitId":"Zacchua"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2021-10-27"},{"lineNumber":23,"author":{"gitId":"Zacchua"},"content":"            + \": Adds a profile picture to the person identified by the index number\"","lastModifiedDate":"2021-10-27"},{"lineNumber":24,"author":{"gitId":"Zacchua"},"content":"            + \" used in the displayed person list.\\n\"","lastModifiedDate":"2021-10-27"},{"lineNumber":25,"author":{"gitId":"Zacchua"},"content":"            + \"Parameters: INDEX (must be a positive integer)\\n\"","lastModifiedDate":"2021-10-27"},{"lineNumber":26,"author":{"gitId":"Zacchua"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1\";","lastModifiedDate":"2021-10-27"},{"lineNumber":27,"author":{"gitId":"Zacchua"},"content":"    public static final String MESSAGE_HELP_GUIDE \u003d","lastModifiedDate":"2021-10-27"},{"lineNumber":28,"author":{"gitId":"Zacchua"},"content":"            \"Enter picture INDEX to add a profile picture to the person at INDEX\";","lastModifiedDate":"2021-10-27"},{"lineNumber":29,"author":{"gitId":"Zacchua"},"content":"    private final Index index;","lastModifiedDate":"2021-10-24"},{"lineNumber":30,"author":{"gitId":"Zacchua"},"content":"    private final boolean useGui;","lastModifiedDate":"2021-11-01"},{"lineNumber":31,"author":{"gitId":"Zacchua"},"content":"    private File picture;","lastModifiedDate":"2021-11-01"},{"lineNumber":32,"author":{"gitId":"Zacchua"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":33,"author":{"gitId":"Zacchua"},"content":"    /**","lastModifiedDate":"2021-10-26"},{"lineNumber":34,"author":{"gitId":"Zacchua"},"content":"     * Creates a command that adds a picture to a person","lastModifiedDate":"2021-10-26"},{"lineNumber":35,"author":{"gitId":"Zacchua"},"content":"     * @param index Index of person to add picture to","lastModifiedDate":"2021-10-26"},{"lineNumber":36,"author":{"gitId":"Zacchua"},"content":"     */","lastModifiedDate":"2021-10-26"},{"lineNumber":37,"author":{"gitId":"Zacchua"},"content":"    public PictureCommand(Index index, boolean useGui) {","lastModifiedDate":"2021-11-01"},{"lineNumber":38,"author":{"gitId":"Zacchua"},"content":"        requireNonNull(index);","lastModifiedDate":"2021-10-24"},{"lineNumber":39,"author":{"gitId":"Zacchua"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":40,"author":{"gitId":"Zacchua"},"content":"        this.index \u003d index;","lastModifiedDate":"2021-10-24"},{"lineNumber":41,"author":{"gitId":"Zacchua"},"content":"        this.useGui \u003d useGui;","lastModifiedDate":"2021-11-01"},{"lineNumber":42,"author":{"gitId":"Zacchua"},"content":"    }","lastModifiedDate":"2021-11-01"},{"lineNumber":43,"author":{"gitId":"Zacchua"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":44,"author":{"gitId":"Zacchua"},"content":"    /**","lastModifiedDate":"2021-11-01"},{"lineNumber":45,"author":{"gitId":"Zacchua"},"content":"     * Constructor with a provided picture used for testing","lastModifiedDate":"2021-11-01"},{"lineNumber":46,"author":{"gitId":"Zacchua"},"content":"     */","lastModifiedDate":"2021-11-01"},{"lineNumber":47,"author":{"gitId":"Zacchua"},"content":"    public PictureCommand(Index index, boolean useGui, File picture) {","lastModifiedDate":"2021-11-01"},{"lineNumber":48,"author":{"gitId":"Zacchua"},"content":"        requireNonNull(index);","lastModifiedDate":"2021-11-01"},{"lineNumber":49,"author":{"gitId":"Zacchua"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":50,"author":{"gitId":"Zacchua"},"content":"        this.index \u003d index;","lastModifiedDate":"2021-11-01"},{"lineNumber":51,"author":{"gitId":"Zacchua"},"content":"        this.useGui \u003d useGui;","lastModifiedDate":"2021-11-01"},{"lineNumber":52,"author":{"gitId":"Zacchua"},"content":"        this.picture \u003d picture;","lastModifiedDate":"2021-11-01"},{"lineNumber":53,"author":{"gitId":"Zacchua"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":54,"author":{"gitId":"Zacchua"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":55,"author":{"gitId":"Zacchua"},"content":"    @Override","lastModifiedDate":"2021-10-24"},{"lineNumber":56,"author":{"gitId":"Zacchua"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2021-10-24"},{"lineNumber":57,"author":{"gitId":"Zacchua"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-10-24"},{"lineNumber":58,"author":{"gitId":"Zacchua"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2021-10-24"},{"lineNumber":59,"author":{"gitId":"Zacchua"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":60,"author":{"gitId":"Zacchua"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2021-10-24"},{"lineNumber":61,"author":{"gitId":"Zacchua"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2021-10-24"},{"lineNumber":62,"author":{"gitId":"Zacchua"},"content":"        }","lastModifiedDate":"2021-10-24"},{"lineNumber":63,"author":{"gitId":"Zacchua"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":64,"author":{"gitId":"Zacchua"},"content":"        Person personToAddPic \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2021-10-24"},{"lineNumber":65,"author":{"gitId":"Zacchua"},"content":"        if (useGui) {","lastModifiedDate":"2021-11-01"},{"lineNumber":66,"author":{"gitId":"Zacchua"},"content":"            picture \u003d getPic();","lastModifiedDate":"2021-11-01"},{"lineNumber":67,"author":{"gitId":"Zacchua"},"content":"        }","lastModifiedDate":"2021-11-01"},{"lineNumber":68,"author":{"gitId":"Zacchua"},"content":"        if (picture \u003d\u003d null) {","lastModifiedDate":"2021-11-01"},{"lineNumber":69,"author":{"gitId":"Zacchua"},"content":"            return new CommandResult(\"Command aborted\");","lastModifiedDate":"2021-11-01"},{"lineNumber":70,"author":{"gitId":"Zacchua"},"content":"        }","lastModifiedDate":"2021-11-01"},{"lineNumber":71,"author":{"gitId":"Zacchua"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":72,"author":{"gitId":"Zacchua"},"content":"        Person personWithPic \u003d addPicToPerson(personToAddPic, picture, model);","lastModifiedDate":"2021-10-26"},{"lineNumber":73,"author":{"gitId":"Zacchua"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":74,"author":{"gitId":"Zacchua"},"content":"        model.setPerson(personToAddPic, personWithPic);","lastModifiedDate":"2021-10-24"},{"lineNumber":75,"author":{"gitId":"Zacchua"},"content":"        model.updateFilteredPersonList(Model.PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2021-10-24"},{"lineNumber":76,"author":{"gitId":"Zacchua"},"content":"        return new CommandResult(\"picture added\", false, false, true);","lastModifiedDate":"2021-10-27"},{"lineNumber":77,"author":{"gitId":"Zacchua"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":78,"author":{"gitId":"Zacchua"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":79,"author":{"gitId":"Zacchua"},"content":"    private File getPic() {","lastModifiedDate":"2021-11-01"},{"lineNumber":80,"author":{"gitId":"Zacchua"},"content":"        MainWindow window \u003d MainWindow.getWindow();","lastModifiedDate":"2021-11-01"},{"lineNumber":81,"author":{"gitId":"Zacchua"},"content":"        File file \u003d window.getFile();","lastModifiedDate":"2021-11-01"},{"lineNumber":82,"author":{"gitId":"Zacchua"},"content":"        return file;","lastModifiedDate":"2021-11-01"},{"lineNumber":83,"author":{"gitId":"Zacchua"},"content":"    }","lastModifiedDate":"2021-11-01"},{"lineNumber":84,"author":{"gitId":"Zacchua"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":85,"author":{"gitId":"Zacchua"},"content":"    private Person addPicToPerson(Person person, File file, Model model) {","lastModifiedDate":"2021-10-26"},{"lineNumber":86,"author":{"gitId":"Zacchua"},"content":"        if (!person.getProfilePicture().equals(ProfilePicture.DEFAULT_PICTURE)) {","lastModifiedDate":"2021-10-24"},{"lineNumber":87,"author":{"gitId":"Zacchua"},"content":"            // delete file if not default picture","lastModifiedDate":"2021-10-26"},{"lineNumber":88,"author":{"gitId":"Zacchua"},"content":"            model.deleteProfilePicture(person.getProfilePicture().value);","lastModifiedDate":"2021-10-26"},{"lineNumber":89,"author":{"gitId":"Zacchua"},"content":"        }","lastModifiedDate":"2021-10-24"},{"lineNumber":90,"author":{"gitId":"Zacchua"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":91,"author":{"gitId":"Zacchua"},"content":"        // add new file, change person\u0027s profile picture","lastModifiedDate":"2021-10-26"},{"lineNumber":92,"author":{"gitId":"Zacchua"},"content":"        String filename \u003d LocalDateTime.now().format(DateTimeFormatter.ofPattern(\"yyyy-MM-dd HH_mm_ss\"));","lastModifiedDate":"2021-10-27"},{"lineNumber":93,"author":{"gitId":"Zacchua"},"content":"        model.saveProfilePicture(file, filename);","lastModifiedDate":"2021-10-26"},{"lineNumber":94,"author":{"gitId":"Zacchua"},"content":"        person.setProfilePicture(Paths.get(filename));","lastModifiedDate":"2021-10-26"},{"lineNumber":95,"author":{"gitId":"Zacchua"},"content":"        return person;","lastModifiedDate":"2021-10-24"},{"lineNumber":96,"author":{"gitId":"Zacchua"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":97,"author":{"gitId":"Zacchua"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":98,"author":{"gitId":"Zacchua"},"content":"}","lastModifiedDate":"2021-10-24"}],"authorContributionMap":{"Zacchua":98}},{"path":"src/main/java/socialite/logic/commands/PinCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"david-eom"},"content":"package socialite.logic.commands;","lastModifiedDate":"2021-10-29"},{"lineNumber":2,"author":{"gitId":"david-eom"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":3,"author":{"gitId":"david-eom"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-29"},{"lineNumber":4,"author":{"gitId":"david-eom"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":5,"author":{"gitId":"david-eom"},"content":"import java.util.List;","lastModifiedDate":"2021-10-29"},{"lineNumber":6,"author":{"gitId":"david-eom"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":7,"author":{"gitId":"david-eom"},"content":"import socialite.commons.core.Messages;","lastModifiedDate":"2021-10-29"},{"lineNumber":8,"author":{"gitId":"david-eom"},"content":"import socialite.commons.core.index.Index;","lastModifiedDate":"2021-10-29"},{"lineNumber":9,"author":{"gitId":"david-eom"},"content":"import socialite.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-10-29"},{"lineNumber":10,"author":{"gitId":"david-eom"},"content":"import socialite.model.Model;","lastModifiedDate":"2021-10-29"},{"lineNumber":11,"author":{"gitId":"david-eom"},"content":"import socialite.model.person.Person;","lastModifiedDate":"2021-10-29"},{"lineNumber":12,"author":{"gitId":"david-eom"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":13,"author":{"gitId":"david-eom"},"content":"public class PinCommand extends Command {","lastModifiedDate":"2021-10-29"},{"lineNumber":14,"author":{"gitId":"david-eom"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":15,"author":{"gitId":"david-eom"},"content":"    public static final String COMMAND_WORD \u003d \"pin\";","lastModifiedDate":"2021-10-29"},{"lineNumber":16,"author":{"gitId":"david-eom"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":17,"author":{"gitId":"david-eom"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2021-10-29"},{"lineNumber":18,"author":{"gitId":"david-eom"},"content":"            + \": Pins the person identified by the index number used in the displayed person list \"","lastModifiedDate":"2021-10-29"},{"lineNumber":19,"author":{"gitId":"david-eom"},"content":"            + \"at the top of the address book if it is not already pinned.\\n\"","lastModifiedDate":"2021-10-29"},{"lineNumber":20,"author":{"gitId":"david-eom"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1\";","lastModifiedDate":"2021-10-29"},{"lineNumber":21,"author":{"gitId":"david-eom"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":22,"author":{"gitId":"david-eom"},"content":"    public static final String MESSAGE_PIN_PERSON_SUCCESS \u003d \"Pinned Person: %1$s\";","lastModifiedDate":"2021-10-29"},{"lineNumber":23,"author":{"gitId":"david-eom"},"content":"    public static final String MESSAGE_PERSON_ALREADY_PINNED \u003d \"This person has already been pinned.\";","lastModifiedDate":"2021-10-29"},{"lineNumber":24,"author":{"gitId":"david-eom"},"content":"    public static final String MESSAGE_HELP_GUIDE \u003d \"Enter \u0027help pin\u0027 for in-app guidance.\";","lastModifiedDate":"2021-10-29"},{"lineNumber":25,"author":{"gitId":"david-eom"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":26,"author":{"gitId":"david-eom"},"content":"    private final Index targetIndex;","lastModifiedDate":"2021-10-29"},{"lineNumber":27,"author":{"gitId":"david-eom"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":28,"author":{"gitId":"david-eom"},"content":"    public PinCommand(Index targetIndex) {","lastModifiedDate":"2021-10-29"},{"lineNumber":29,"author":{"gitId":"david-eom"},"content":"        this.targetIndex \u003d targetIndex;","lastModifiedDate":"2021-10-29"},{"lineNumber":30,"author":{"gitId":"david-eom"},"content":"    }","lastModifiedDate":"2021-10-29"},{"lineNumber":31,"author":{"gitId":"david-eom"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":32,"author":{"gitId":"david-eom"},"content":"    @Override","lastModifiedDate":"2021-10-29"},{"lineNumber":33,"author":{"gitId":"david-eom"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2021-10-29"},{"lineNumber":34,"author":{"gitId":"david-eom"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-10-29"},{"lineNumber":35,"author":{"gitId":"david-eom"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2021-10-29"},{"lineNumber":36,"author":{"gitId":"david-eom"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":37,"author":{"gitId":"david-eom"},"content":"        if (targetIndex.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2021-10-29"},{"lineNumber":38,"author":{"gitId":"david-eom"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2021-10-29"},{"lineNumber":39,"author":{"gitId":"david-eom"},"content":"        }","lastModifiedDate":"2021-10-29"},{"lineNumber":40,"author":{"gitId":"david-eom"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":41,"author":{"gitId":"david-eom"},"content":"        Person personToPin \u003d lastShownList.get(targetIndex.getZeroBased());","lastModifiedDate":"2021-10-29"},{"lineNumber":42,"author":{"gitId":"david-eom"},"content":"        if (personToPin.isPinned()) {","lastModifiedDate":"2021-10-29"},{"lineNumber":43,"author":{"gitId":"david-eom"},"content":"            throw new CommandException(MESSAGE_PERSON_ALREADY_PINNED);","lastModifiedDate":"2021-10-29"},{"lineNumber":44,"author":{"gitId":"david-eom"},"content":"        }","lastModifiedDate":"2021-10-29"},{"lineNumber":45,"author":{"gitId":"david-eom"},"content":"        personToPin.pin();","lastModifiedDate":"2021-10-29"},{"lineNumber":46,"author":{"gitId":"david-eom"},"content":"        model.updateFilteredPersonList(Model.PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2021-10-29"},{"lineNumber":47,"author":{"gitId":"david-eom"},"content":"        return new CommandResult(String.format(MESSAGE_PIN_PERSON_SUCCESS, personToPin));","lastModifiedDate":"2021-10-29"},{"lineNumber":48,"author":{"gitId":"david-eom"},"content":"    }","lastModifiedDate":"2021-10-29"},{"lineNumber":49,"author":{"gitId":"david-eom"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":50,"author":{"gitId":"david-eom"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":51,"author":{"gitId":"david-eom"},"content":"    @Override","lastModifiedDate":"2021-10-29"},{"lineNumber":52,"author":{"gitId":"david-eom"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-29"},{"lineNumber":53,"author":{"gitId":"david-eom"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-10-29"},{"lineNumber":54,"author":{"gitId":"david-eom"},"content":"                || (other instanceof PinCommand // instanceof handles nulls","lastModifiedDate":"2021-10-29"},{"lineNumber":55,"author":{"gitId":"david-eom"},"content":"                \u0026\u0026 targetIndex.equals(((PinCommand) other).targetIndex)); // state check","lastModifiedDate":"2021-10-29"},{"lineNumber":56,"author":{"gitId":"david-eom"},"content":"    }","lastModifiedDate":"2021-10-29"},{"lineNumber":57,"author":{"gitId":"david-eom"},"content":"}","lastModifiedDate":"2021-10-29"}],"authorContributionMap":{"david-eom":57}},{"path":"src/main/java/socialite/logic/commands/RemarkCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"EssWhyy"},"content":"package socialite.logic.commands;","lastModifiedDate":"2021-10-12"},{"lineNumber":2,"author":{"gitId":"EssWhyy"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":3,"author":{"gitId":"EssWhyy"},"content":"import static socialite.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2021-10-12"},{"lineNumber":4,"author":{"gitId":"david-eom"},"content":"import static socialite.logic.parser.CliSyntax.PREFIX_REMARK;","lastModifiedDate":"2021-10-13"},{"lineNumber":5,"author":{"gitId":"EssWhyy"},"content":"import static socialite.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2021-10-12"},{"lineNumber":6,"author":{"gitId":"EssWhyy"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":7,"author":{"gitId":"EssWhyy"},"content":"import java.util.List;","lastModifiedDate":"2021-10-12"},{"lineNumber":8,"author":{"gitId":"EssWhyy"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":9,"author":{"gitId":"EssWhyy"},"content":"import socialite.commons.core.Messages;","lastModifiedDate":"2021-10-12"},{"lineNumber":10,"author":{"gitId":"EssWhyy"},"content":"import socialite.commons.core.index.Index;","lastModifiedDate":"2021-10-12"},{"lineNumber":11,"author":{"gitId":"EssWhyy"},"content":"import socialite.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-10-12"},{"lineNumber":12,"author":{"gitId":"EssWhyy"},"content":"import socialite.model.Model;","lastModifiedDate":"2021-10-12"},{"lineNumber":13,"author":{"gitId":"EssWhyy"},"content":"import socialite.model.person.Person;","lastModifiedDate":"2021-10-12"},{"lineNumber":14,"author":{"gitId":"EssWhyy"},"content":"import socialite.model.person.Remark;","lastModifiedDate":"2021-10-12"},{"lineNumber":15,"author":{"gitId":"EssWhyy"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":16,"author":{"gitId":"EssWhyy"},"content":"/**","lastModifiedDate":"2021-10-12"},{"lineNumber":17,"author":{"gitId":"EssWhyy"},"content":" * Changes the remark of an existing person in the address book.","lastModifiedDate":"2021-10-12"},{"lineNumber":18,"author":{"gitId":"EssWhyy"},"content":" */","lastModifiedDate":"2021-10-12"},{"lineNumber":19,"author":{"gitId":"EssWhyy"},"content":"public class RemarkCommand extends Command {","lastModifiedDate":"2021-10-12"},{"lineNumber":20,"author":{"gitId":"EssWhyy"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":21,"author":{"gitId":"EssWhyy"},"content":"    public static final String COMMAND_WORD \u003d \"remark\";","lastModifiedDate":"2021-10-12"},{"lineNumber":22,"author":{"gitId":"EssWhyy"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":23,"author":{"gitId":"EssWhyy"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Edits the remark of the person identified \"","lastModifiedDate":"2021-10-12"},{"lineNumber":24,"author":{"gitId":"EssWhyy"},"content":"            + \"by the index number used in the last person listing. \"","lastModifiedDate":"2021-10-12"},{"lineNumber":25,"author":{"gitId":"EssWhyy"},"content":"            + \"Existing remark will be overwritten by the input.\\n\"","lastModifiedDate":"2021-10-12"},{"lineNumber":26,"author":{"gitId":"EssWhyy"},"content":"            + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2021-10-12"},{"lineNumber":27,"author":{"gitId":"EssWhyy"},"content":"            + PREFIX_REMARK + \"[REMARK]\\n\"","lastModifiedDate":"2021-10-12"},{"lineNumber":28,"author":{"gitId":"EssWhyy"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2021-10-12"},{"lineNumber":29,"author":{"gitId":"EssWhyy"},"content":"            + PREFIX_REMARK + \"Likes to swim.\";","lastModifiedDate":"2021-10-12"},{"lineNumber":30,"author":{"gitId":"EssWhyy"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":31,"author":{"gitId":"EssWhyy"},"content":"    public static final String MESSAGE_ADD_REMARK_SUCCESS \u003d \"Added remark to Person: %1$s\";","lastModifiedDate":"2021-10-12"},{"lineNumber":32,"author":{"gitId":"EssWhyy"},"content":"    public static final String MESSAGE_DELETE_REMARK_SUCCESS \u003d \"Removed remark from Person: %1$s\";","lastModifiedDate":"2021-10-12"},{"lineNumber":33,"author":{"gitId":"stanley-1"},"content":"    public static final String MESSAGE_HELP_GUIDE \u003d \"Enter \u0027help remark\u0027 for in-app guidance.\";","lastModifiedDate":"2021-10-20"},{"lineNumber":34,"author":{"gitId":"EssWhyy"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":35,"author":{"gitId":"EssWhyy"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":36,"author":{"gitId":"EssWhyy"},"content":"    private final Index index;","lastModifiedDate":"2021-10-12"},{"lineNumber":37,"author":{"gitId":"EssWhyy"},"content":"    private final Remark remark;","lastModifiedDate":"2021-10-12"},{"lineNumber":38,"author":{"gitId":"EssWhyy"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":39,"author":{"gitId":"EssWhyy"},"content":"    /**","lastModifiedDate":"2021-10-12"},{"lineNumber":40,"author":{"gitId":"EssWhyy"},"content":"     * @param index  of the person in the filtered person list to edit the remark","lastModifiedDate":"2021-10-12"},{"lineNumber":41,"author":{"gitId":"EssWhyy"},"content":"     * @param remark of the person to be updated to","lastModifiedDate":"2021-10-12"},{"lineNumber":42,"author":{"gitId":"EssWhyy"},"content":"     */","lastModifiedDate":"2021-10-12"},{"lineNumber":43,"author":{"gitId":"EssWhyy"},"content":"    public RemarkCommand(Index index, Remark remark) {","lastModifiedDate":"2021-10-12"},{"lineNumber":44,"author":{"gitId":"EssWhyy"},"content":"        requireAllNonNull(index, remark);","lastModifiedDate":"2021-10-12"},{"lineNumber":45,"author":{"gitId":"EssWhyy"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":46,"author":{"gitId":"EssWhyy"},"content":"        this.index \u003d index;","lastModifiedDate":"2021-10-12"},{"lineNumber":47,"author":{"gitId":"EssWhyy"},"content":"        this.remark \u003d remark;","lastModifiedDate":"2021-10-12"},{"lineNumber":48,"author":{"gitId":"EssWhyy"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":49,"author":{"gitId":"EssWhyy"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":50,"author":{"gitId":"EssWhyy"},"content":"    @Override","lastModifiedDate":"2021-10-12"},{"lineNumber":51,"author":{"gitId":"EssWhyy"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":52,"author":{"gitId":"EssWhyy"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2021-10-12"},{"lineNumber":53,"author":{"gitId":"EssWhyy"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2021-10-12"},{"lineNumber":54,"author":{"gitId":"EssWhyy"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":55,"author":{"gitId":"EssWhyy"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2021-10-12"},{"lineNumber":56,"author":{"gitId":"EssWhyy"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2021-10-12"},{"lineNumber":57,"author":{"gitId":"EssWhyy"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":58,"author":{"gitId":"EssWhyy"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":59,"author":{"gitId":"EssWhyy"},"content":"        Person personToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2021-10-12"},{"lineNumber":60,"author":{"gitId":"bnjmnt4n"},"content":"        Person editedPerson \u003d new Person(personToEdit.getName(), personToEdit.getPhone(), remark,","lastModifiedDate":"2021-10-15"},{"lineNumber":61,"author":{"gitId":"bnjmnt4n"},"content":"                personToEdit.getTags(), personToEdit.getFacebook(), personToEdit.getInstagram(),","lastModifiedDate":"2021-10-15"},{"lineNumber":62,"author":{"gitId":"bnjmnt4n"},"content":"                personToEdit.getTelegram(), personToEdit.getTiktok(), personToEdit.getTwitter(),","lastModifiedDate":"2021-10-21"},{"lineNumber":63,"author":{"gitId":"bnjmnt4n"},"content":"                personToEdit.getDates());","lastModifiedDate":"2021-10-21"},{"lineNumber":64,"author":{"gitId":"EssWhyy"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":65,"author":{"gitId":"EssWhyy"},"content":"        model.setPerson(personToEdit, editedPerson);","lastModifiedDate":"2021-10-12"},{"lineNumber":66,"author":{"gitId":"EssWhyy"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2021-10-12"},{"lineNumber":67,"author":{"gitId":"EssWhyy"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":68,"author":{"gitId":"EssWhyy"},"content":"        return new CommandResult(generateSuccessMessage(editedPerson));","lastModifiedDate":"2021-10-12"},{"lineNumber":69,"author":{"gitId":"EssWhyy"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":70,"author":{"gitId":"EssWhyy"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":71,"author":{"gitId":"EssWhyy"},"content":"    /**","lastModifiedDate":"2021-10-12"},{"lineNumber":72,"author":{"gitId":"EssWhyy"},"content":"     * Generates a command execution success message based on whether the remark is added to or removed from","lastModifiedDate":"2021-10-12"},{"lineNumber":73,"author":{"gitId":"EssWhyy"},"content":"     * {@code personToEdit}.","lastModifiedDate":"2021-10-12"},{"lineNumber":74,"author":{"gitId":"EssWhyy"},"content":"     */","lastModifiedDate":"2021-10-12"},{"lineNumber":75,"author":{"gitId":"EssWhyy"},"content":"    private String generateSuccessMessage(Person personToEdit) {","lastModifiedDate":"2021-10-12"},{"lineNumber":76,"author":{"gitId":"david-eom"},"content":"        String message \u003d remark.get() !\u003d null ? MESSAGE_ADD_REMARK_SUCCESS : MESSAGE_DELETE_REMARK_SUCCESS;","lastModifiedDate":"2021-10-22"},{"lineNumber":77,"author":{"gitId":"EssWhyy"},"content":"        return String.format(message, personToEdit);","lastModifiedDate":"2021-10-12"},{"lineNumber":78,"author":{"gitId":"EssWhyy"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":79,"author":{"gitId":"EssWhyy"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":80,"author":{"gitId":"EssWhyy"},"content":"    @Override","lastModifiedDate":"2021-10-12"},{"lineNumber":81,"author":{"gitId":"EssWhyy"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-12"},{"lineNumber":82,"author":{"gitId":"EssWhyy"},"content":"        // short circuit if same object","lastModifiedDate":"2021-10-12"},{"lineNumber":83,"author":{"gitId":"EssWhyy"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2021-10-12"},{"lineNumber":84,"author":{"gitId":"EssWhyy"},"content":"            return true;","lastModifiedDate":"2021-10-12"},{"lineNumber":85,"author":{"gitId":"EssWhyy"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":86,"author":{"gitId":"EssWhyy"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":87,"author":{"gitId":"EssWhyy"},"content":"        // instanceof handles nulls","lastModifiedDate":"2021-10-12"},{"lineNumber":88,"author":{"gitId":"EssWhyy"},"content":"        if (!(other instanceof RemarkCommand)) {","lastModifiedDate":"2021-10-12"},{"lineNumber":89,"author":{"gitId":"EssWhyy"},"content":"            return false;","lastModifiedDate":"2021-10-12"},{"lineNumber":90,"author":{"gitId":"EssWhyy"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":91,"author":{"gitId":"EssWhyy"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":92,"author":{"gitId":"EssWhyy"},"content":"        // state check","lastModifiedDate":"2021-10-12"},{"lineNumber":93,"author":{"gitId":"EssWhyy"},"content":"        RemarkCommand e \u003d (RemarkCommand) other;","lastModifiedDate":"2021-10-12"},{"lineNumber":94,"author":{"gitId":"EssWhyy"},"content":"        return index.equals(e.index)","lastModifiedDate":"2021-10-12"},{"lineNumber":95,"author":{"gitId":"EssWhyy"},"content":"                \u0026\u0026 remark.equals(e.remark);","lastModifiedDate":"2021-10-12"},{"lineNumber":96,"author":{"gitId":"EssWhyy"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":97,"author":{"gitId":"EssWhyy"},"content":"}","lastModifiedDate":"2021-10-12"},{"lineNumber":98,"author":{"gitId":"EssWhyy"},"content":"","lastModifiedDate":"2021-10-12"}],"authorContributionMap":{"EssWhyy":91,"bnjmnt4n":4,"david-eom":2,"stanley-1":1}},{"path":"src/main/java/socialite/logic/commands/ShareCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"david-eom"},"content":"package socialite.logic.commands;","lastModifiedDate":"2021-10-25"},{"lineNumber":2,"author":{"gitId":"david-eom"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":3,"author":{"gitId":"david-eom"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":4,"author":{"gitId":"david-eom"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-25"},{"lineNumber":5,"author":{"gitId":"david-eom"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":6,"author":{"gitId":"david-eom"},"content":"import java.awt.Toolkit;","lastModifiedDate":"2021-10-25"},{"lineNumber":7,"author":{"gitId":"david-eom"},"content":"import java.awt.datatransfer.Clipboard;","lastModifiedDate":"2021-10-25"},{"lineNumber":8,"author":{"gitId":"david-eom"},"content":"import java.awt.datatransfer.StringSelection;","lastModifiedDate":"2021-10-25"},{"lineNumber":9,"author":{"gitId":"david-eom"},"content":"import java.util.List;","lastModifiedDate":"2021-10-25"},{"lineNumber":10,"author":{"gitId":"david-eom"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":11,"author":{"gitId":"david-eom"},"content":"import socialite.commons.core.Messages;","lastModifiedDate":"2021-10-25"},{"lineNumber":12,"author":{"gitId":"david-eom"},"content":"import socialite.commons.core.index.Index;","lastModifiedDate":"2021-10-25"},{"lineNumber":13,"author":{"gitId":"david-eom"},"content":"import socialite.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-10-25"},{"lineNumber":14,"author":{"gitId":"david-eom"},"content":"import socialite.model.Model;","lastModifiedDate":"2021-10-25"},{"lineNumber":15,"author":{"gitId":"david-eom"},"content":"import socialite.model.person.Person;","lastModifiedDate":"2021-10-25"},{"lineNumber":16,"author":{"gitId":"david-eom"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":17,"author":{"gitId":"david-eom"},"content":"/**","lastModifiedDate":"2021-10-25"},{"lineNumber":18,"author":{"gitId":"david-eom"},"content":" * Copies a person\u0027s contact info to the system clipboard using its displayed index from the address book.","lastModifiedDate":"2021-10-27"},{"lineNumber":19,"author":{"gitId":"david-eom"},"content":" */","lastModifiedDate":"2021-10-25"},{"lineNumber":20,"author":{"gitId":"david-eom"},"content":"public class ShareCommand extends Command {","lastModifiedDate":"2021-10-25"},{"lineNumber":21,"author":{"gitId":"david-eom"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":22,"author":{"gitId":"david-eom"},"content":"    public static final String COMMAND_WORD \u003d \"share\";","lastModifiedDate":"2021-10-25"},{"lineNumber":23,"author":{"gitId":"david-eom"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":24,"author":{"gitId":"david-eom"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2021-10-25"},{"lineNumber":25,"author":{"gitId":"david-eom"},"content":"            + \": Copies a person\u0027s contact info to the system clipboard \"","lastModifiedDate":"2021-10-27"},{"lineNumber":26,"author":{"gitId":"david-eom"},"content":"            + \"by the index number used in the displayed person list.\\n\"","lastModifiedDate":"2021-10-25"},{"lineNumber":27,"author":{"gitId":"david-eom"},"content":"            + \"Parameters: INDEX (must be a positive integer)\\n\"","lastModifiedDate":"2021-10-25"},{"lineNumber":28,"author":{"gitId":"david-eom"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1\";","lastModifiedDate":"2021-10-25"},{"lineNumber":29,"author":{"gitId":"david-eom"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":30,"author":{"gitId":"david-eom"},"content":"    public static final String MESSAGE_SHARE_PERSON_SUCCESS \u003d \"Copied to the Clipboard:\\n\"","lastModifiedDate":"2021-10-25"},{"lineNumber":31,"author":{"gitId":"david-eom"},"content":"            + \"%1$s\\n\";","lastModifiedDate":"2021-10-25"},{"lineNumber":32,"author":{"gitId":"david-eom"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":33,"author":{"gitId":"david-eom"},"content":"    public static final String MESSAGE_SHARE_PERSON_TEMPLATE \u003d \"Here are the social media handles for %1$s!\\n\"","lastModifiedDate":"2021-10-25"},{"lineNumber":34,"author":{"gitId":"david-eom"},"content":"            + \"%2$s\\n\"","lastModifiedDate":"2021-10-25"},{"lineNumber":35,"author":{"gitId":"david-eom"},"content":"            + \"Hey, have you tried SociaLite? I have enjoyed using it, you should check it out too!\\n\"","lastModifiedDate":"2021-10-25"},{"lineNumber":36,"author":{"gitId":"david-eom"},"content":"            + \"https://ay2122s1-cs2103t-f11-4.github.io/tp/\";","lastModifiedDate":"2021-10-25"},{"lineNumber":37,"author":{"gitId":"david-eom"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":38,"author":{"gitId":"david-eom"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":39,"author":{"gitId":"david-eom"},"content":"    public static final String MESSAGE_HELP_GUIDE \u003d \"Enter \u0027help share\u0027 for in-app guidance.\";","lastModifiedDate":"2021-10-25"},{"lineNumber":40,"author":{"gitId":"david-eom"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":41,"author":{"gitId":"david-eom"},"content":"    private final Index targetIndex;","lastModifiedDate":"2021-10-25"},{"lineNumber":42,"author":{"gitId":"david-eom"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":43,"author":{"gitId":"david-eom"},"content":"    public ShareCommand(Index targetIndex) {","lastModifiedDate":"2021-10-25"},{"lineNumber":44,"author":{"gitId":"david-eom"},"content":"        this.targetIndex \u003d targetIndex;","lastModifiedDate":"2021-10-25"},{"lineNumber":45,"author":{"gitId":"david-eom"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":46,"author":{"gitId":"david-eom"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":47,"author":{"gitId":"david-eom"},"content":"    @Override","lastModifiedDate":"2021-10-25"},{"lineNumber":48,"author":{"gitId":"david-eom"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2021-10-25"},{"lineNumber":49,"author":{"gitId":"david-eom"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-10-25"},{"lineNumber":50,"author":{"gitId":"david-eom"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2021-10-25"},{"lineNumber":51,"author":{"gitId":"david-eom"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":52,"author":{"gitId":"david-eom"},"content":"        if (targetIndex.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2021-10-25"},{"lineNumber":53,"author":{"gitId":"david-eom"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2021-10-25"},{"lineNumber":54,"author":{"gitId":"david-eom"},"content":"        }","lastModifiedDate":"2021-10-25"},{"lineNumber":55,"author":{"gitId":"david-eom"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":56,"author":{"gitId":"david-eom"},"content":"        String contactInfo \u003d lastShownList.get(targetIndex.getZeroBased()).toSharingString();","lastModifiedDate":"2021-10-25"},{"lineNumber":57,"author":{"gitId":"david-eom"},"content":"        String feedbackToUser \u003d String.format(MESSAGE_SHARE_PERSON_SUCCESS, contactInfo);","lastModifiedDate":"2021-10-25"},{"lineNumber":58,"author":{"gitId":"david-eom"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":59,"author":{"gitId":"david-eom"},"content":"        // Copy the message to the system clipboard","lastModifiedDate":"2021-10-25"},{"lineNumber":60,"author":{"gitId":"david-eom"},"content":"        StringSelection stringSelection \u003d new StringSelection(contactInfo);","lastModifiedDate":"2021-10-25"},{"lineNumber":61,"author":{"gitId":"david-eom"},"content":"        Clipboard clipboard \u003d Toolkit.getDefaultToolkit().getSystemClipboard();","lastModifiedDate":"2021-10-25"},{"lineNumber":62,"author":{"gitId":"david-eom"},"content":"        clipboard.setContents(stringSelection, null);","lastModifiedDate":"2021-10-25"},{"lineNumber":63,"author":{"gitId":"david-eom"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":64,"author":{"gitId":"david-eom"},"content":"        return new CommandResult(feedbackToUser);","lastModifiedDate":"2021-10-25"},{"lineNumber":65,"author":{"gitId":"david-eom"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":66,"author":{"gitId":"david-eom"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":67,"author":{"gitId":"david-eom"},"content":"    @Override","lastModifiedDate":"2021-10-25"},{"lineNumber":68,"author":{"gitId":"david-eom"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-25"},{"lineNumber":69,"author":{"gitId":"david-eom"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-10-25"},{"lineNumber":70,"author":{"gitId":"david-eom"},"content":"                || (other instanceof ShareCommand // instanceof handles nulls","lastModifiedDate":"2021-10-25"},{"lineNumber":71,"author":{"gitId":"david-eom"},"content":"                \u0026\u0026 targetIndex.equals(((ShareCommand) other).targetIndex)); // state check","lastModifiedDate":"2021-10-25"},{"lineNumber":72,"author":{"gitId":"david-eom"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":73,"author":{"gitId":"david-eom"},"content":"}","lastModifiedDate":"2021-10-25"}],"authorContributionMap":{"david-eom":73}},{"path":"src/main/java/socialite/logic/commands/UnpinCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"david-eom"},"content":"package socialite.logic.commands;","lastModifiedDate":"2021-10-29"},{"lineNumber":2,"author":{"gitId":"david-eom"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":3,"author":{"gitId":"david-eom"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-29"},{"lineNumber":4,"author":{"gitId":"david-eom"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":5,"author":{"gitId":"david-eom"},"content":"import java.util.List;","lastModifiedDate":"2021-10-29"},{"lineNumber":6,"author":{"gitId":"david-eom"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":7,"author":{"gitId":"david-eom"},"content":"import socialite.commons.core.Messages;","lastModifiedDate":"2021-10-29"},{"lineNumber":8,"author":{"gitId":"david-eom"},"content":"import socialite.commons.core.index.Index;","lastModifiedDate":"2021-10-29"},{"lineNumber":9,"author":{"gitId":"david-eom"},"content":"import socialite.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-10-29"},{"lineNumber":10,"author":{"gitId":"david-eom"},"content":"import socialite.model.Model;","lastModifiedDate":"2021-10-29"},{"lineNumber":11,"author":{"gitId":"david-eom"},"content":"import socialite.model.person.Person;","lastModifiedDate":"2021-10-29"},{"lineNumber":12,"author":{"gitId":"david-eom"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":13,"author":{"gitId":"david-eom"},"content":"public class UnpinCommand extends Command {","lastModifiedDate":"2021-10-29"},{"lineNumber":14,"author":{"gitId":"david-eom"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":15,"author":{"gitId":"david-eom"},"content":"    public static final String COMMAND_WORD \u003d \"unpin\";","lastModifiedDate":"2021-10-29"},{"lineNumber":16,"author":{"gitId":"david-eom"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":17,"author":{"gitId":"david-eom"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD","lastModifiedDate":"2021-10-29"},{"lineNumber":18,"author":{"gitId":"david-eom"},"content":"            + \": Unpins the person identified by the index number used in the displayed person list \"","lastModifiedDate":"2021-10-29"},{"lineNumber":19,"author":{"gitId":"david-eom"},"content":"            + \"at the top of the address book if it is already pinned.\\n\"","lastModifiedDate":"2021-10-29"},{"lineNumber":20,"author":{"gitId":"david-eom"},"content":"            + \"Example: \" + COMMAND_WORD + \" 1\";","lastModifiedDate":"2021-10-29"},{"lineNumber":21,"author":{"gitId":"david-eom"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":22,"author":{"gitId":"david-eom"},"content":"    public static final String MESSAGE_UNPIN_PERSON_SUCCESS \u003d \"Unpinned Person: %1$s\";","lastModifiedDate":"2021-10-29"},{"lineNumber":23,"author":{"gitId":"david-eom"},"content":"    public static final String MESSAGE_PERSON_NOT_PINNED \u003d \"This person is not pinned yet.\";","lastModifiedDate":"2021-10-29"},{"lineNumber":24,"author":{"gitId":"david-eom"},"content":"    public static final String MESSAGE_HELP_GUIDE \u003d \"Enter \u0027help unpin\u0027 for in-app guidance.\";","lastModifiedDate":"2021-10-29"},{"lineNumber":25,"author":{"gitId":"david-eom"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":26,"author":{"gitId":"david-eom"},"content":"    private final Index targetIndex;","lastModifiedDate":"2021-10-29"},{"lineNumber":27,"author":{"gitId":"david-eom"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":28,"author":{"gitId":"david-eom"},"content":"    public UnpinCommand(Index targetIndex) {","lastModifiedDate":"2021-10-29"},{"lineNumber":29,"author":{"gitId":"david-eom"},"content":"        this.targetIndex \u003d targetIndex;","lastModifiedDate":"2021-10-29"},{"lineNumber":30,"author":{"gitId":"david-eom"},"content":"    }","lastModifiedDate":"2021-10-29"},{"lineNumber":31,"author":{"gitId":"david-eom"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":32,"author":{"gitId":"david-eom"},"content":"    @Override","lastModifiedDate":"2021-10-29"},{"lineNumber":33,"author":{"gitId":"david-eom"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2021-10-29"},{"lineNumber":34,"author":{"gitId":"david-eom"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-10-29"},{"lineNumber":35,"author":{"gitId":"david-eom"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2021-10-29"},{"lineNumber":36,"author":{"gitId":"david-eom"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":37,"author":{"gitId":"david-eom"},"content":"        if (targetIndex.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2021-10-29"},{"lineNumber":38,"author":{"gitId":"david-eom"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2021-10-29"},{"lineNumber":39,"author":{"gitId":"david-eom"},"content":"        }","lastModifiedDate":"2021-10-29"},{"lineNumber":40,"author":{"gitId":"david-eom"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":41,"author":{"gitId":"david-eom"},"content":"        Person personToUnpin \u003d lastShownList.get(targetIndex.getZeroBased());","lastModifiedDate":"2021-10-29"},{"lineNumber":42,"author":{"gitId":"david-eom"},"content":"        if (!personToUnpin.isPinned()) {","lastModifiedDate":"2021-10-29"},{"lineNumber":43,"author":{"gitId":"david-eom"},"content":"            throw new CommandException(MESSAGE_PERSON_NOT_PINNED);","lastModifiedDate":"2021-10-29"},{"lineNumber":44,"author":{"gitId":"david-eom"},"content":"        }","lastModifiedDate":"2021-10-29"},{"lineNumber":45,"author":{"gitId":"david-eom"},"content":"        personToUnpin.unpin();","lastModifiedDate":"2021-10-29"},{"lineNumber":46,"author":{"gitId":"david-eom"},"content":"        model.updateFilteredPersonList(Model.PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2021-10-29"},{"lineNumber":47,"author":{"gitId":"david-eom"},"content":"        return new CommandResult(String.format(MESSAGE_UNPIN_PERSON_SUCCESS, personToUnpin));","lastModifiedDate":"2021-10-29"},{"lineNumber":48,"author":{"gitId":"david-eom"},"content":"    }","lastModifiedDate":"2021-10-29"},{"lineNumber":49,"author":{"gitId":"david-eom"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":50,"author":{"gitId":"david-eom"},"content":"    @Override","lastModifiedDate":"2021-10-29"},{"lineNumber":51,"author":{"gitId":"david-eom"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-29"},{"lineNumber":52,"author":{"gitId":"david-eom"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-10-29"},{"lineNumber":53,"author":{"gitId":"david-eom"},"content":"                || (other instanceof UnpinCommand // instanceof handles nulls","lastModifiedDate":"2021-10-29"},{"lineNumber":54,"author":{"gitId":"david-eom"},"content":"                \u0026\u0026 targetIndex.equals(((UnpinCommand) other).targetIndex)); // state check","lastModifiedDate":"2021-10-29"},{"lineNumber":55,"author":{"gitId":"david-eom"},"content":"    }","lastModifiedDate":"2021-10-29"},{"lineNumber":56,"author":{"gitId":"david-eom"},"content":"}","lastModifiedDate":"2021-10-29"}],"authorContributionMap":{"david-eom":56}},{"path":"src/main/java/socialite/logic/commands/exceptions/CommandException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"david-eom"},"content":"package socialite.logic.commands.exceptions;","lastModifiedDate":"2021-10-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Represents an error which occurs during execution of a {@link Command}.","lastModifiedDate":"2017-02-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class CommandException extends Exception {","lastModifiedDate":"2017-02-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    public CommandException(String message) {","lastModifiedDate":"2017-02-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"        super(message);","lastModifiedDate":"2017-02-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":12,"author":{"gitId":"-"},"content":"     * Constructs a new {@code CommandException} with the specified detail {@code message} and {@code cause}.","lastModifiedDate":"2018-08-06"},{"lineNumber":13,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public CommandException(String message, Throwable cause) {","lastModifiedDate":"2018-08-06"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        super(message, cause);","lastModifiedDate":"2018-08-06"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-05"}],"authorContributionMap":{"david-eom":1,"-":16}},{"path":"src/main/java/socialite/logic/parser/AddCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"david-eom"},"content":"package socialite.logic.parser;","lastModifiedDate":"2021-10-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":3,"author":{"gitId":"bnjmnt4n"},"content":"import static socialite.logic.parser.CliSyntax.PREFIX_DATE;","lastModifiedDate":"2021-10-23"},{"lineNumber":4,"author":{"gitId":"stanley-1"},"content":"import static socialite.logic.parser.CliSyntax.PREFIX_FACEBOOK;","lastModifiedDate":"2021-10-11"},{"lineNumber":5,"author":{"gitId":"stanley-1"},"content":"import static socialite.logic.parser.CliSyntax.PREFIX_INSTAGRAM;","lastModifiedDate":"2021-10-11"},{"lineNumber":6,"author":{"gitId":"david-eom"},"content":"import static socialite.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2021-10-08"},{"lineNumber":7,"author":{"gitId":"david-eom"},"content":"import static socialite.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2021-10-08"},{"lineNumber":8,"author":{"gitId":"Zacchua"},"content":"import static socialite.logic.parser.CliSyntax.PREFIX_REMARK;","lastModifiedDate":"2021-10-13"},{"lineNumber":9,"author":{"gitId":"david-eom"},"content":"import static socialite.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2021-10-08"},{"lineNumber":10,"author":{"gitId":"Zacchua"},"content":"import static socialite.logic.parser.CliSyntax.PREFIX_TELEGRAM;","lastModifiedDate":"2021-10-13"},{"lineNumber":11,"author":{"gitId":"Zacchua"},"content":"import static socialite.logic.parser.CliSyntax.PREFIX_TIKTOK;","lastModifiedDate":"2021-10-12"},{"lineNumber":12,"author":{"gitId":"Zacchua"},"content":"import static socialite.logic.parser.CliSyntax.PREFIX_TWITTER;","lastModifiedDate":"2021-10-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":14,"author":{"gitId":"bnjmnt4n"},"content":"import java.util.Set;","lastModifiedDate":"2021-10-22"},{"lineNumber":15,"author":{"gitId":"bnjmnt4n"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2021-10-22"},{"lineNumber":16,"author":{"gitId":"bnjmnt4n"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":17,"author":{"gitId":"david-eom"},"content":"import socialite.commons.core.Messages;","lastModifiedDate":"2021-10-08"},{"lineNumber":18,"author":{"gitId":"david-eom"},"content":"import socialite.logic.commands.AddCommand;","lastModifiedDate":"2021-10-08"},{"lineNumber":19,"author":{"gitId":"david-eom"},"content":"import socialite.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-10-08"},{"lineNumber":20,"author":{"gitId":"stanley-1"},"content":"import socialite.model.handle.Facebook;","lastModifiedDate":"2021-10-11"},{"lineNumber":21,"author":{"gitId":"stanley-1"},"content":"import socialite.model.handle.Instagram;","lastModifiedDate":"2021-10-11"},{"lineNumber":22,"author":{"gitId":"david-eom"},"content":"import socialite.model.handle.Telegram;","lastModifiedDate":"2021-10-08"},{"lineNumber":23,"author":{"gitId":"Zacchua"},"content":"import socialite.model.handle.TikTok;","lastModifiedDate":"2021-10-12"},{"lineNumber":24,"author":{"gitId":"Zacchua"},"content":"import socialite.model.handle.Twitter;","lastModifiedDate":"2021-10-11"},{"lineNumber":25,"author":{"gitId":"bnjmnt4n"},"content":"import socialite.model.person.Dates;","lastModifiedDate":"2021-10-21"},{"lineNumber":26,"author":{"gitId":"david-eom"},"content":"import socialite.model.person.Name;","lastModifiedDate":"2021-10-08"},{"lineNumber":27,"author":{"gitId":"david-eom"},"content":"import socialite.model.person.Person;","lastModifiedDate":"2021-10-08"},{"lineNumber":28,"author":{"gitId":"david-eom"},"content":"import socialite.model.person.Phone;","lastModifiedDate":"2021-10-08"},{"lineNumber":29,"author":{"gitId":"EssWhyy"},"content":"import socialite.model.person.Remark;","lastModifiedDate":"2021-10-12"},{"lineNumber":30,"author":{"gitId":"david-eom"},"content":"import socialite.model.tag.Tag;","lastModifiedDate":"2021-10-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new AddCommand object","lastModifiedDate":"2017-02-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"public class AddCommandParser implements Parser\u003cAddCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the AddCommand","lastModifiedDate":"2017-02-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * and returns an AddCommand object for execution.","lastModifiedDate":"2017-02-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public AddCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2017-03-20"},{"lineNumber":44,"author":{"gitId":"david-eom"},"content":"                ArgumentTokenizer.tokenize(","lastModifiedDate":"2021-10-08"},{"lineNumber":45,"author":{"gitId":"bnjmnt4n"},"content":"                        args, PREFIX_NAME, PREFIX_PHONE, PREFIX_REMARK, PREFIX_TAG,","lastModifiedDate":"2021-10-15"},{"lineNumber":46,"author":{"gitId":"bnjmnt4n"},"content":"                        PREFIX_FACEBOOK, PREFIX_INSTAGRAM, PREFIX_TELEGRAM, PREFIX_TIKTOK, PREFIX_TWITTER,","lastModifiedDate":"2021-10-22"},{"lineNumber":47,"author":{"gitId":"bnjmnt4n"},"content":"                        PREFIX_DATE);","lastModifiedDate":"2021-10-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":49,"author":{"gitId":"bnjmnt4n"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_NAME, PREFIX_PHONE)","lastModifiedDate":"2021-10-12"},{"lineNumber":50,"author":{"gitId":"-"},"content":"                || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2017-12-23"},{"lineNumber":51,"author":{"gitId":"stanley-1"},"content":"            throw new ParseException(String.format(","lastModifiedDate":"2021-10-20"},{"lineNumber":52,"author":{"gitId":"stanley-1"},"content":"                    Messages.MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_HELP_GUIDE));","lastModifiedDate":"2021-10-20"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-17"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        Name name \u003d ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        Phone phone \u003d ParserUtil.parsePhone(argMultimap.getValue(PREFIX_PHONE).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":57,"author":{"gitId":"david-eom"},"content":"        Remark remark \u003d ParserUtil.parseRemark(argMultimap.getValue(PREFIX_REMARK).orElse(null));","lastModifiedDate":"2021-10-22"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e tagList \u003d ParserUtil.parseTags(argMultimap.getAllValues(PREFIX_TAG));","lastModifiedDate":"2017-03-17"},{"lineNumber":59,"author":{"gitId":"Zacchua"},"content":"        Facebook facebook \u003d ParserUtil.parseFacebook(argMultimap.getValue(PREFIX_FACEBOOK).orElse(null));","lastModifiedDate":"2021-10-14"},{"lineNumber":60,"author":{"gitId":"Zacchua"},"content":"        Instagram instagram \u003d ParserUtil.parseInstagram(argMultimap.getValue(PREFIX_INSTAGRAM).orElse(null));","lastModifiedDate":"2021-10-14"},{"lineNumber":61,"author":{"gitId":"Zacchua"},"content":"        Telegram telegram \u003d ParserUtil.parseTelegram(argMultimap.getValue(PREFIX_TELEGRAM).orElse(null));","lastModifiedDate":"2021-10-14"},{"lineNumber":62,"author":{"gitId":"Zacchua"},"content":"        TikTok tiktok \u003d ParserUtil.parseTikTok(argMultimap.getValue(PREFIX_TIKTOK).orElse(null));","lastModifiedDate":"2021-10-14"},{"lineNumber":63,"author":{"gitId":"Zacchua"},"content":"        Twitter twitter \u003d ParserUtil.parseTwitter(argMultimap.getValue(PREFIX_TWITTER).orElse(null));","lastModifiedDate":"2021-10-14"},{"lineNumber":64,"author":{"gitId":"bnjmnt4n"},"content":"        Dates dates \u003d ParserUtil.parseDates(argMultimap.getAllValues(PREFIX_DATE));","lastModifiedDate":"2021-10-23"},{"lineNumber":65,"author":{"gitId":"bnjmnt4n"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":66,"author":{"gitId":"bnjmnt4n"},"content":"        Person person \u003d new Person(name, phone, remark, tagList, facebook,","lastModifiedDate":"2021-10-15"},{"lineNumber":67,"author":{"gitId":"bnjmnt4n"},"content":"                instagram, telegram, tiktok, twitter, dates);","lastModifiedDate":"2021-10-21"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        return new AddCommand(person);","lastModifiedDate":"2017-03-17"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-17"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2017-03-17"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2017-03-17"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-17"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2017-03-17"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2017-03-17"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-17"},{"lineNumber":79,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-05"}],"authorContributionMap":{"Zacchua":11,"EssWhyy":1,"bnjmnt4n":13,"david-eom":14,"-":34,"stanley-1":6}},{"path":"src/main/java/socialite/logic/parser/AddressBookParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"david-eom"},"content":"package socialite.logic.parser;","lastModifiedDate":"2021-10-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"david-eom"},"content":"import socialite.commons.core.Messages;","lastModifiedDate":"2021-10-08"},{"lineNumber":7,"author":{"gitId":"david-eom"},"content":"import socialite.logic.commands.AddCommand;","lastModifiedDate":"2021-10-08"},{"lineNumber":8,"author":{"gitId":"david-eom"},"content":"import socialite.logic.commands.ClearCommand;","lastModifiedDate":"2021-10-08"},{"lineNumber":9,"author":{"gitId":"david-eom"},"content":"import socialite.logic.commands.Command;","lastModifiedDate":"2021-10-08"},{"lineNumber":10,"author":{"gitId":"david-eom"},"content":"import socialite.logic.commands.DeleteCommand;","lastModifiedDate":"2021-10-08"},{"lineNumber":11,"author":{"gitId":"david-eom"},"content":"import socialite.logic.commands.EditCommand;","lastModifiedDate":"2021-10-08"},{"lineNumber":12,"author":{"gitId":"david-eom"},"content":"import socialite.logic.commands.ExitCommand;","lastModifiedDate":"2021-10-08"},{"lineNumber":13,"author":{"gitId":"david-eom"},"content":"import socialite.logic.commands.FindCommand;","lastModifiedDate":"2021-10-08"},{"lineNumber":14,"author":{"gitId":"david-eom"},"content":"import socialite.logic.commands.HelpCommand;","lastModifiedDate":"2021-10-08"},{"lineNumber":15,"author":{"gitId":"david-eom"},"content":"import socialite.logic.commands.ListCommand;","lastModifiedDate":"2021-10-08"},{"lineNumber":16,"author":{"gitId":"Zacchua"},"content":"import socialite.logic.commands.PictureCommand;","lastModifiedDate":"2021-10-26"},{"lineNumber":17,"author":{"gitId":"david-eom"},"content":"import socialite.logic.commands.PinCommand;","lastModifiedDate":"2021-10-29"},{"lineNumber":18,"author":{"gitId":"EssWhyy"},"content":"import socialite.logic.commands.RemarkCommand;","lastModifiedDate":"2021-10-12"},{"lineNumber":19,"author":{"gitId":"david-eom"},"content":"import socialite.logic.commands.ShareCommand;","lastModifiedDate":"2021-10-25"},{"lineNumber":20,"author":{"gitId":"david-eom"},"content":"import socialite.logic.commands.UnpinCommand;","lastModifiedDate":"2021-10-29"},{"lineNumber":21,"author":{"gitId":"david-eom"},"content":"import socialite.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-10-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":" * Parses user input.","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"public class AddressBookParser {","lastModifiedDate":"2017-07-07"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Used for initial separation of command word and args.","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private static final Pattern BASIC_COMMAND_FORMAT \u003d Pattern.compile(\"(?\u003ccommandWord\u003e\\\\S+)(?\u003carguments\u003e.*)\");","lastModifiedDate":"2016-09-22"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Parses user input into command for execution.","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * @param userInput full user input string","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * @return the command based on the user input","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public Command parseCommand(String userInput) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        final Matcher matcher \u003d BASIC_COMMAND_FORMAT.matcher(userInput.trim());","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        if (!matcher.matches()) {","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"david-eom"},"content":"            throw new ParseException(String.format(Messages.MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-10-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        final String commandWord \u003d matcher.group(\"commandWord\");","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        final String arguments \u003d matcher.group(\"arguments\");","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        switch (commandWord) {","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        case AddCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            return new AddCommandParser().parse(arguments);","lastModifiedDate":"2017-02-05"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        case EditCommand.COMMAND_WORD:","lastModifiedDate":"2016-12-21"},{"lineNumber":54,"author":{"gitId":"-"},"content":"            return new EditCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        case DeleteCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"            return new DeleteCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        case ClearCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":60,"author":{"gitId":"-"},"content":"            return new ClearCommand();","lastModifiedDate":"2016-09-21"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        case FindCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":63,"author":{"gitId":"-"},"content":"            return new FindCommandParser().parse(arguments);","lastModifiedDate":"2017-01-26"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        case ListCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":66,"author":{"gitId":"-"},"content":"            return new ListCommand();","lastModifiedDate":"2016-09-21"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        case ExitCommand.COMMAND_WORD:","lastModifiedDate":"2016-08-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"            return new ExitCommand();","lastModifiedDate":"2016-08-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        case HelpCommand.COMMAND_WORD:","lastModifiedDate":"2016-08-26"},{"lineNumber":72,"author":{"gitId":"stanley-1"},"content":"            return new HelpCommandParser().parse(arguments);","lastModifiedDate":"2021-10-19"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":74,"author":{"gitId":"EssWhyy"},"content":"        case RemarkCommand.COMMAND_WORD:","lastModifiedDate":"2021-10-12"},{"lineNumber":75,"author":{"gitId":"EssWhyy"},"content":"            return new RemarkCommandParser().parse(arguments);","lastModifiedDate":"2021-10-12"},{"lineNumber":76,"author":{"gitId":"EssWhyy"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":77,"author":{"gitId":"david-eom"},"content":"        case ShareCommand.COMMAND_WORD:","lastModifiedDate":"2021-10-25"},{"lineNumber":78,"author":{"gitId":"david-eom"},"content":"            return new ShareCommandParser().parse(arguments);","lastModifiedDate":"2021-10-25"},{"lineNumber":79,"author":{"gitId":"david-eom"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":80,"author":{"gitId":"Zacchua"},"content":"        case PictureCommand.COMMAND_WORD:","lastModifiedDate":"2021-10-24"},{"lineNumber":81,"author":{"gitId":"Zacchua"},"content":"            return new PictureCommandParser().parse(arguments);","lastModifiedDate":"2021-10-27"},{"lineNumber":82,"author":{"gitId":"EssWhyy"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":83,"author":{"gitId":"david-eom"},"content":"        case PinCommand.COMMAND_WORD:","lastModifiedDate":"2021-10-29"},{"lineNumber":84,"author":{"gitId":"david-eom"},"content":"            return new PinCommandParser().parse(arguments);","lastModifiedDate":"2021-10-29"},{"lineNumber":85,"author":{"gitId":"david-eom"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":86,"author":{"gitId":"david-eom"},"content":"        case UnpinCommand.COMMAND_WORD:","lastModifiedDate":"2021-10-29"},{"lineNumber":87,"author":{"gitId":"david-eom"},"content":"            return new UnpinCommandParser().parse(arguments);","lastModifiedDate":"2021-10-29"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        default:","lastModifiedDate":"2016-08-26"},{"lineNumber":90,"author":{"gitId":"david-eom"},"content":"            throw new ParseException(Messages.MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2021-10-08"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":94,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"Zacchua":3,"EssWhyy":5,"david-eom":25,"-":60,"stanley-1":1}},{"path":"src/main/java/socialite/logic/parser/ArgumentMultimap.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"david-eom"},"content":"package socialite.logic.parser;","lastModifiedDate":"2021-10-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-03-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.HashMap;","lastModifiedDate":"2017-03-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-03-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Map;","lastModifiedDate":"2017-03-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-03-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-03-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Stores mapping of prefixes to their respective arguments.","lastModifiedDate":"2017-03-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Each key may be associated with multiple argument values.","lastModifiedDate":"2017-03-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Values for a given key are stored in a list, and the insertion ordering is maintained.","lastModifiedDate":"2017-03-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * Keys are unique, but the list of argument values may contain duplicate argument values, i.e. the same argument value","lastModifiedDate":"2017-03-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * can be inserted multiple times for the same prefix.","lastModifiedDate":"2017-03-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-03-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class ArgumentMultimap {","lastModifiedDate":"2017-03-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    /** Prefixes mapped to their respective arguments**/","lastModifiedDate":"2017-03-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private final Map\u003cPrefix, List\u003cString\u003e\u003e argMultimap \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2017-03-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * Associates the specified argument value with {@code prefix} key in this map.","lastModifiedDate":"2017-03-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * If the map previously contained a mapping for the key, the new value is appended to the list of existing values.","lastModifiedDate":"2017-03-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * @param prefix   Prefix key with which the specified argument value is to be associated","lastModifiedDate":"2017-03-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * @param argValue Argument value to be associated with the specified prefix key","lastModifiedDate":"2017-03-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public void put(Prefix prefix, String argValue) {","lastModifiedDate":"2017-03-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        List\u003cString\u003e argValues \u003d getAllValues(prefix);","lastModifiedDate":"2017-03-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        argValues.add(argValue);","lastModifiedDate":"2017-03-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        argMultimap.put(prefix, argValues);","lastModifiedDate":"2017-03-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Returns the last value of {@code prefix}.","lastModifiedDate":"2017-03-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public Optional\u003cString\u003e getValue(Prefix prefix) {","lastModifiedDate":"2017-03-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        List\u003cString\u003e values \u003d getAllValues(prefix);","lastModifiedDate":"2017-03-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return values.isEmpty() ? Optional.empty() : Optional.of(values.get(values.size() - 1));","lastModifiedDate":"2017-03-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * Returns all values of {@code prefix}.","lastModifiedDate":"2017-03-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     * If the prefix does not exist or has no values, this will return an empty list.","lastModifiedDate":"2017-03-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * Modifying the returned list will not affect the underlying data structure of the ArgumentMultimap.","lastModifiedDate":"2017-03-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public List\u003cString\u003e getAllValues(Prefix prefix) {","lastModifiedDate":"2017-03-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        if (!argMultimap.containsKey(prefix)) {","lastModifiedDate":"2017-03-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            return new ArrayList\u003c\u003e();","lastModifiedDate":"2017-03-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        return new ArrayList\u003c\u003e(argMultimap.get(prefix));","lastModifiedDate":"2017-03-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * Returns the preamble (text before the first valid prefix). Trims any leading/trailing spaces.","lastModifiedDate":"2017-03-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public String getPreamble() {","lastModifiedDate":"2017-03-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        return getValue(new Prefix(\"\")).orElse(\"\");","lastModifiedDate":"2017-03-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-08"}],"authorContributionMap":{"david-eom":1,"-":59}},{"path":"src/main/java/socialite/logic/parser/ArgumentTokenizer.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"david-eom"},"content":"package socialite.logic.parser;","lastModifiedDate":"2021-10-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-01-18"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-01-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-01-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-10-16"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Tokenizes arguments string of the form: {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}\u003cbr\u003e","lastModifiedDate":"2016-10-16"},{"lineNumber":10,"author":{"gitId":"-"},"content":" *     e.g. {@code some preamble text t/ 11.00 t/12.00 k/ m/ July}  where prefixes are {@code t/ k/ m/}.\u003cbr\u003e","lastModifiedDate":"2017-05-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * 1. An argument\u0027s value can be an empty string e.g. the value of {@code k/} in the above example.\u003cbr\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * 2. Leading and trailing whitespaces of an argument value will be discarded.\u003cbr\u003e","lastModifiedDate":"2016-10-16"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * 3. An argument may be repeated and all its values will be accumulated e.g. the value of {@code t/}","lastModifiedDate":"2017-05-19"},{"lineNumber":14,"author":{"gitId":"-"},"content":" *    in the above example.\u003cbr\u003e","lastModifiedDate":"2016-10-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-10-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class ArgumentTokenizer {","lastModifiedDate":"2016-10-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * Tokenizes an arguments string and returns an {@code ArgumentMultimap} object that maps prefixes to their","lastModifiedDate":"2017-03-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * respective argument values. Only the given prefixes will be recognized in the arguments string.","lastModifiedDate":"2017-03-20"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * @param argsString Arguments string of the form: {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}","lastModifiedDate":"2017-03-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * @param prefixes   Prefixes to tokenize the arguments string with","lastModifiedDate":"2017-03-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @return           ArgumentMultimap object that maps prefixes to their arguments","lastModifiedDate":"2017-03-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static ArgumentMultimap tokenize(String argsString, Prefix... prefixes) {","lastModifiedDate":"2017-03-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        List\u003cPrefixPosition\u003e positions \u003d findAllPrefixPositions(argsString, prefixes);","lastModifiedDate":"2017-03-20"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        return extractArguments(argsString, positions);","lastModifiedDate":"2017-03-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * Finds all zero-based prefix positions in the given arguments string.","lastModifiedDate":"2017-03-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * @param argsString Arguments string of the form: {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}","lastModifiedDate":"2017-03-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * @param prefixes   Prefixes to find in the arguments string","lastModifiedDate":"2017-03-20"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * @return           List of zero-based prefix positions in the given arguments string","lastModifiedDate":"2017-03-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private static List\u003cPrefixPosition\u003e findAllPrefixPositions(String argsString, Prefix... prefixes) {","lastModifiedDate":"2017-03-20"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return Arrays.stream(prefixes)","lastModifiedDate":"2018-01-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"                .flatMap(prefix -\u003e findPrefixPositions(argsString, prefix).stream())","lastModifiedDate":"2018-01-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"                .collect(Collectors.toList());","lastModifiedDate":"2018-01-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * {@see findAllPrefixPositions}","lastModifiedDate":"2017-03-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    private static List\u003cPrefixPosition\u003e findPrefixPositions(String argsString, Prefix prefix) {","lastModifiedDate":"2017-03-20"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        List\u003cPrefixPosition\u003e positions \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2016-10-16"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        int prefixPosition \u003d findPrefixPosition(argsString, prefix.getPrefix(), 0);","lastModifiedDate":"2017-05-19"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        while (prefixPosition !\u003d -1) {","lastModifiedDate":"2017-05-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"            PrefixPosition extendedPrefix \u003d new PrefixPosition(prefix, prefixPosition);","lastModifiedDate":"2017-05-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            positions.add(extendedPrefix);","lastModifiedDate":"2016-10-16"},{"lineNumber":54,"author":{"gitId":"-"},"content":"            prefixPosition \u003d findPrefixPosition(argsString, prefix.getPrefix(), prefixPosition);","lastModifiedDate":"2017-05-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        return positions;","lastModifiedDate":"2016-10-16"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-19"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     * Returns the index of the first occurrence of {@code prefix} in","lastModifiedDate":"2017-05-19"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * {@code argsString} starting from index {@code fromIndex}. An occurrence","lastModifiedDate":"2017-05-19"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * is valid if there is a whitespace before {@code prefix}. Returns -1 if no","lastModifiedDate":"2017-05-19"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * such occurrence can be found.","lastModifiedDate":"2017-05-19"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-19"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     * E.g if {@code argsString} \u003d \"e/hip/900\", {@code prefix} \u003d \"p/\" and","lastModifiedDate":"2017-05-19"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     * {@code fromIndex} \u003d 0, this method returns -1 as there are no valid","lastModifiedDate":"2017-05-19"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     * occurrences of \"p/\" with whitespace before it. However, if","lastModifiedDate":"2017-05-19"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     * {@code argsString} \u003d \"e/hi p/900\", {@code prefix} \u003d \"p/\" and","lastModifiedDate":"2017-05-19"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     * {@code fromIndex} \u003d 0, this method returns 5.","lastModifiedDate":"2017-05-19"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-19"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    private static int findPrefixPosition(String argsString, String prefix, int fromIndex) {","lastModifiedDate":"2017-05-19"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        int prefixIndex \u003d argsString.indexOf(\" \" + prefix, fromIndex);","lastModifiedDate":"2017-05-19"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        return prefixIndex \u003d\u003d -1 ? -1","lastModifiedDate":"2017-05-19"},{"lineNumber":75,"author":{"gitId":"-"},"content":"                : prefixIndex + 1; // +1 as offset for whitespace","lastModifiedDate":"2017-05-19"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-19"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * Extracts prefixes and their argument values, and returns an {@code ArgumentMultimap} object that maps the","lastModifiedDate":"2017-03-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * extracted prefixes to their respective arguments. Prefixes are extracted based on their zero-based positions in","lastModifiedDate":"2017-03-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     * {@code argsString}.","lastModifiedDate":"2017-03-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     * @param argsString      Arguments string of the form: {@code preamble \u003cprefix\u003evalue \u003cprefix\u003evalue ...}","lastModifiedDate":"2017-03-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     * @param prefixPositions Zero-based positions of all prefixes in {@code argsString}","lastModifiedDate":"2017-03-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     * @return                ArgumentMultimap object that maps prefixes to their arguments","lastModifiedDate":"2017-03-08"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    private static ArgumentMultimap extractArguments(String argsString, List\u003cPrefixPosition\u003e prefixPositions) {","lastModifiedDate":"2017-03-20"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        // Sort by start position","lastModifiedDate":"2016-10-16"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        prefixPositions.sort((prefix1, prefix2) -\u003e prefix1.getStartPosition() - prefix2.getStartPosition());","lastModifiedDate":"2016-10-16"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        // Insert a PrefixPosition to represent the preamble","lastModifiedDate":"2016-10-16"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        PrefixPosition preambleMarker \u003d new PrefixPosition(new Prefix(\"\"), 0);","lastModifiedDate":"2016-10-16"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        prefixPositions.add(0, preambleMarker);","lastModifiedDate":"2016-10-16"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        // Add a dummy PrefixPosition to represent the end of the string","lastModifiedDate":"2016-10-16"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        PrefixPosition endPositionMarker \u003d new PrefixPosition(new Prefix(\"\"), argsString.length());","lastModifiedDate":"2016-10-16"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        prefixPositions.add(endPositionMarker);","lastModifiedDate":"2016-10-16"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        // Map prefixes to their argument values (if any)","lastModifiedDate":"2017-03-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d new ArgumentMultimap();","lastModifiedDate":"2017-03-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        for (int i \u003d 0; i \u003c prefixPositions.size() - 1; i++) {","lastModifiedDate":"2016-10-16"},{"lineNumber":103,"author":{"gitId":"-"},"content":"            // Extract and store prefixes and their arguments","lastModifiedDate":"2017-03-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"            Prefix argPrefix \u003d prefixPositions.get(i).getPrefix();","lastModifiedDate":"2017-03-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"            String argValue \u003d extractArgumentValue(argsString, prefixPositions.get(i), prefixPositions.get(i + 1));","lastModifiedDate":"2016-10-16"},{"lineNumber":106,"author":{"gitId":"-"},"content":"            argMultimap.put(argPrefix, argValue);","lastModifiedDate":"2017-03-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-16"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        return argMultimap;","lastModifiedDate":"2017-03-08"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":113,"author":{"gitId":"-"},"content":"     * Returns the trimmed value of the argument in the arguments string specified by {@code currentPrefixPosition}.","lastModifiedDate":"2017-03-08"},{"lineNumber":114,"author":{"gitId":"-"},"content":"     * The end position of the value is determined by {@code nextPrefixPosition}.","lastModifiedDate":"2017-03-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    private static String extractArgumentValue(String argsString,","lastModifiedDate":"2017-03-20"},{"lineNumber":117,"author":{"gitId":"-"},"content":"                                        PrefixPosition currentPrefixPosition,","lastModifiedDate":"2016-10-16"},{"lineNumber":118,"author":{"gitId":"-"},"content":"                                        PrefixPosition nextPrefixPosition) {","lastModifiedDate":"2016-10-16"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        Prefix prefix \u003d currentPrefixPosition.getPrefix();","lastModifiedDate":"2016-10-16"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        int valueStartPos \u003d currentPrefixPosition.getStartPosition() + prefix.getPrefix().length();","lastModifiedDate":"2016-10-16"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        String value \u003d argsString.substring(valueStartPos, nextPrefixPosition.getStartPosition());","lastModifiedDate":"2016-10-16"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        return value.trim();","lastModifiedDate":"2016-10-16"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":128,"author":{"gitId":"-"},"content":"     * Represents a prefix\u0027s position in an arguments string.","lastModifiedDate":"2017-03-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-19"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    private static class PrefixPosition {","lastModifiedDate":"2017-03-20"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        private int startPosition;","lastModifiedDate":"2016-10-19"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        private final Prefix prefix;","lastModifiedDate":"2016-10-19"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        PrefixPosition(Prefix prefix, int startPosition) {","lastModifiedDate":"2016-10-19"},{"lineNumber":135,"author":{"gitId":"-"},"content":"            this.prefix \u003d prefix;","lastModifiedDate":"2016-10-19"},{"lineNumber":136,"author":{"gitId":"-"},"content":"            this.startPosition \u003d startPosition;","lastModifiedDate":"2016-10-19"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-19"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        int getStartPosition() {","lastModifiedDate":"2016-10-19"},{"lineNumber":140,"author":{"gitId":"-"},"content":"            return startPosition;","lastModifiedDate":"2018-08-14"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-19"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        Prefix getPrefix() {","lastModifiedDate":"2016-10-19"},{"lineNumber":144,"author":{"gitId":"-"},"content":"            return prefix;","lastModifiedDate":"2018-08-14"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-19"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-19"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":148,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-10-16"}],"authorContributionMap":{"david-eom":1,"-":147}},{"path":"src/main/java/socialite/logic/parser/CliSyntax.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"david-eom"},"content":"package socialite.logic.parser;","lastModifiedDate":"2021-10-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Contains Command Line Interface (CLI) syntax definitions common to multiple commands","lastModifiedDate":"2017-02-11"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class CliSyntax {","lastModifiedDate":"2017-02-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    /* Prefix definitions */","lastModifiedDate":"2017-02-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_NAME \u003d new Prefix(\"n/\");","lastModifiedDate":"2017-06-06"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_PHONE \u003d new Prefix(\"p/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_TAG \u003d new Prefix(\"t/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":12,"author":{"gitId":"EssWhyy"},"content":"    public static final Prefix PREFIX_REMARK \u003d new Prefix(\"r/\");","lastModifiedDate":"2021-10-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":14,"author":{"gitId":"stanley-1"},"content":"    /* Social media handle prefix definitions */","lastModifiedDate":"2021-10-12"},{"lineNumber":15,"author":{"gitId":"stanley-1"},"content":"    public static final Prefix PREFIX_FACEBOOK \u003d new Prefix(\"fb/\");","lastModifiedDate":"2021-10-11"},{"lineNumber":16,"author":{"gitId":"stanley-1"},"content":"    public static final Prefix PREFIX_INSTAGRAM \u003d new Prefix(\"ig/\");","lastModifiedDate":"2021-10-11"},{"lineNumber":17,"author":{"gitId":"david-eom"},"content":"    public static final Prefix PREFIX_TELEGRAM \u003d new Prefix(\"tele/\");","lastModifiedDate":"2021-10-08"},{"lineNumber":18,"author":{"gitId":"Zacchua"},"content":"    public static final Prefix PREFIX_TIKTOK \u003d new Prefix(\"tiktok/\");","lastModifiedDate":"2021-10-12"},{"lineNumber":19,"author":{"gitId":"Zacchua"},"content":"    public static final Prefix PREFIX_TWITTER \u003d new Prefix(\"twitter/\");","lastModifiedDate":"2021-10-11"},{"lineNumber":20,"author":{"gitId":"bnjmnt4n"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":21,"author":{"gitId":"bnjmnt4n"},"content":"    /* Used to indicate important dates for the person */","lastModifiedDate":"2021-10-23"},{"lineNumber":22,"author":{"gitId":"bnjmnt4n"},"content":"    public static final Prefix PREFIX_DATE \u003d new Prefix(\"date/\");","lastModifiedDate":"2021-10-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-11"}],"authorContributionMap":{"Zacchua":2,"EssWhyy":1,"bnjmnt4n":3,"david-eom":2,"-":12,"stanley-1":3}},{"path":"src/main/java/socialite/logic/parser/DeleteCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"david-eom"},"content":"package socialite.logic.parser;","lastModifiedDate":"2021-10-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":3,"author":{"gitId":"david-eom"},"content":"import socialite.commons.core.Messages;","lastModifiedDate":"2021-10-08"},{"lineNumber":4,"author":{"gitId":"david-eom"},"content":"import socialite.commons.core.index.Index;","lastModifiedDate":"2021-10-08"},{"lineNumber":5,"author":{"gitId":"david-eom"},"content":"import socialite.logic.commands.DeleteCommand;","lastModifiedDate":"2021-10-08"},{"lineNumber":6,"author":{"gitId":"david-eom"},"content":"import socialite.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-10-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-01-26"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new DeleteCommand object","lastModifiedDate":"2017-01-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-01-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class DeleteCommandParser implements Parser\u003cDeleteCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the DeleteCommand","lastModifiedDate":"2017-01-26"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * and returns a DeleteCommand object for execution.","lastModifiedDate":"2019-05-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public DeleteCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-05-15"},{"lineNumber":20,"author":{"gitId":"-"},"content":"            Index index \u003d ParserUtil.parseIndex(args);","lastModifiedDate":"2017-05-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"            return new DeleteCommand(index);","lastModifiedDate":"2017-05-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2018-07-10"},{"lineNumber":23,"author":{"gitId":"-"},"content":"            throw new ParseException(","lastModifiedDate":"2017-03-11"},{"lineNumber":24,"author":{"gitId":"stanley-1"},"content":"                    String.format(Messages.MESSAGE_INVALID_COMMAND_FORMAT, DeleteCommand.MESSAGE_HELP_GUIDE), pe);","lastModifiedDate":"2021-10-20"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":28,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-26"}],"authorContributionMap":{"david-eom":5,"-":22,"stanley-1":1}},{"path":"src/main/java/socialite/logic/parser/EditCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"david-eom"},"content":"package socialite.logic.parser;","lastModifiedDate":"2021-10-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"bnjmnt4n"},"content":"import static socialite.logic.parser.CliSyntax.PREFIX_DATE;","lastModifiedDate":"2021-10-23"},{"lineNumber":5,"author":{"gitId":"stanley-1"},"content":"import static socialite.logic.parser.CliSyntax.PREFIX_FACEBOOK;","lastModifiedDate":"2021-10-11"},{"lineNumber":6,"author":{"gitId":"stanley-1"},"content":"import static socialite.logic.parser.CliSyntax.PREFIX_INSTAGRAM;","lastModifiedDate":"2021-10-11"},{"lineNumber":7,"author":{"gitId":"Zacchua"},"content":"import static socialite.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2021-10-11"},{"lineNumber":8,"author":{"gitId":"Zacchua"},"content":"import static socialite.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2021-10-11"},{"lineNumber":9,"author":{"gitId":"Zacchua"},"content":"import static socialite.logic.parser.CliSyntax.PREFIX_REMARK;","lastModifiedDate":"2021-10-13"},{"lineNumber":10,"author":{"gitId":"Zacchua"},"content":"import static socialite.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2021-10-11"},{"lineNumber":11,"author":{"gitId":"david-eom"},"content":"import static socialite.logic.parser.CliSyntax.PREFIX_TELEGRAM;","lastModifiedDate":"2021-10-08"},{"lineNumber":12,"author":{"gitId":"Zacchua"},"content":"import static socialite.logic.parser.CliSyntax.PREFIX_TIKTOK;","lastModifiedDate":"2021-10-12"},{"lineNumber":13,"author":{"gitId":"Zacchua"},"content":"import static socialite.logic.parser.CliSyntax.PREFIX_TWITTER;","lastModifiedDate":"2021-10-11"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2017-01-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-01-26"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":20,"author":{"gitId":"david-eom"},"content":"import socialite.commons.core.Messages;","lastModifiedDate":"2021-10-08"},{"lineNumber":21,"author":{"gitId":"david-eom"},"content":"import socialite.commons.core.index.Index;","lastModifiedDate":"2021-10-08"},{"lineNumber":22,"author":{"gitId":"david-eom"},"content":"import socialite.logic.commands.EditCommand;","lastModifiedDate":"2021-10-08"},{"lineNumber":23,"author":{"gitId":"david-eom"},"content":"import socialite.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-10-08"},{"lineNumber":24,"author":{"gitId":"bnjmnt4n"},"content":"import socialite.model.person.Dates;","lastModifiedDate":"2021-10-23"},{"lineNumber":25,"author":{"gitId":"david-eom"},"content":"import socialite.model.tag.Tag;","lastModifiedDate":"2021-10-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":27,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-01-26"},{"lineNumber":28,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new EditCommand object","lastModifiedDate":"2017-01-26"},{"lineNumber":29,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-01-26"},{"lineNumber":30,"author":{"gitId":"-"},"content":"public class EditCommandParser implements Parser\u003cEditCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the EditCommand","lastModifiedDate":"2017-01-26"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * and returns an EditCommand object for execution.","lastModifiedDate":"2017-01-26"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public EditCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        requireNonNull(args);","lastModifiedDate":"2017-05-15"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2017-03-20"},{"lineNumber":40,"author":{"gitId":"david-eom"},"content":"                ArgumentTokenizer.tokenize(","lastModifiedDate":"2021-10-08"},{"lineNumber":41,"author":{"gitId":"bnjmnt4n"},"content":"                        args, PREFIX_NAME, PREFIX_PHONE, PREFIX_REMARK, PREFIX_TAG, PREFIX_FACEBOOK,","lastModifiedDate":"2021-10-15"},{"lineNumber":42,"author":{"gitId":"bnjmnt4n"},"content":"                        PREFIX_INSTAGRAM, PREFIX_TELEGRAM, PREFIX_TIKTOK, PREFIX_TWITTER, PREFIX_DATE","lastModifiedDate":"2021-10-23"},{"lineNumber":43,"author":{"gitId":"david-eom"},"content":"                );","lastModifiedDate":"2021-10-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        Index index;","lastModifiedDate":"2017-05-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-05-15"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2017-06-06"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2018-07-10"},{"lineNumber":50,"author":{"gitId":"david-eom"},"content":"            throw new ParseException(","lastModifiedDate":"2021-10-08"},{"lineNumber":51,"author":{"gitId":"stanley-1"},"content":"                    String.format(Messages.MESSAGE_INVALID_COMMAND_FORMAT, EditCommand.MESSAGE_HELP_GUIDE), pe","lastModifiedDate":"2021-10-20"},{"lineNumber":52,"author":{"gitId":"david-eom"},"content":"            );","lastModifiedDate":"2021-10-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":55,"author":{"gitId":"david-eom"},"content":"        EditCommand.EditPersonDescriptor editPersonDescriptor \u003d new EditCommand.EditPersonDescriptor();","lastModifiedDate":"2021-10-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_NAME).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":57,"author":{"gitId":"-"},"content":"            editPersonDescriptor.setName(ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get()));","lastModifiedDate":"2018-07-10"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_PHONE).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":60,"author":{"gitId":"-"},"content":"            editPersonDescriptor.setPhone(ParserUtil.parsePhone(argMultimap.getValue(PREFIX_PHONE).get()));","lastModifiedDate":"2018-07-10"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":62,"author":{"gitId":"Zacchua"},"content":"        if (argMultimap.getValue(PREFIX_REMARK).isPresent()) {","lastModifiedDate":"2021-10-13"},{"lineNumber":63,"author":{"gitId":"david-eom"},"content":"            editPersonDescriptor.setRemark(ParserUtil.parseRemark(","lastModifiedDate":"2021-10-22"},{"lineNumber":64,"author":{"gitId":"david-eom"},"content":"                    argMultimap.getValue(PREFIX_REMARK).orElse(null)));","lastModifiedDate":"2021-10-22"},{"lineNumber":65,"author":{"gitId":"Zacchua"},"content":"        }","lastModifiedDate":"2021-10-13"},{"lineNumber":66,"author":{"gitId":"Zacchua"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":67,"author":{"gitId":"Zacchua"},"content":"        if (argMultimap.getValue(PREFIX_TIKTOK).isPresent()) {","lastModifiedDate":"2021-10-12"},{"lineNumber":68,"author":{"gitId":"Zacchua"},"content":"            editPersonDescriptor.setTikTok(ParserUtil.parseTikTok(","lastModifiedDate":"2021-10-14"},{"lineNumber":69,"author":{"gitId":"Zacchua"},"content":"                    argMultimap.getValue(PREFIX_TIKTOK).orElse(null)));","lastModifiedDate":"2021-10-14"},{"lineNumber":70,"author":{"gitId":"Zacchua"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":71,"author":{"gitId":"Zacchua"},"content":"        if (argMultimap.getValue(PREFIX_TWITTER).isPresent()) {","lastModifiedDate":"2021-10-11"},{"lineNumber":72,"author":{"gitId":"Zacchua"},"content":"            editPersonDescriptor.setTwitter(ParserUtil.parseTwitter(","lastModifiedDate":"2021-10-14"},{"lineNumber":73,"author":{"gitId":"Zacchua"},"content":"                    argMultimap.getValue(PREFIX_TWITTER).orElse(null)));","lastModifiedDate":"2021-10-14"},{"lineNumber":74,"author":{"gitId":"Zacchua"},"content":"        }","lastModifiedDate":"2021-10-11"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        parseTagsForEdit(argMultimap.getAllValues(PREFIX_TAG)).ifPresent(editPersonDescriptor::setTags);","lastModifiedDate":"2017-06-21"},{"lineNumber":76,"author":{"gitId":"bnjmnt4n"},"content":"        parseDatesForEdit(argMultimap.getAllValues(PREFIX_DATE)).ifPresent(editPersonDescriptor::setDates);","lastModifiedDate":"2021-10-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":78,"author":{"gitId":"stanley-1"},"content":"        if (argMultimap.getValue(PREFIX_INSTAGRAM).isPresent()) {","lastModifiedDate":"2021-10-11"},{"lineNumber":79,"author":{"gitId":"Zacchua"},"content":"            editPersonDescriptor.setInstagram(ParserUtil.parseInstagram(","lastModifiedDate":"2021-10-14"},{"lineNumber":80,"author":{"gitId":"Zacchua"},"content":"                    argMultimap.getValue(PREFIX_INSTAGRAM).orElse(null)));","lastModifiedDate":"2021-10-14"},{"lineNumber":81,"author":{"gitId":"stanley-1"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":82,"author":{"gitId":"stanley-1"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":83,"author":{"gitId":"stanley-1"},"content":"        if (argMultimap.getValue(PREFIX_FACEBOOK).isPresent()) {","lastModifiedDate":"2021-10-11"},{"lineNumber":84,"author":{"gitId":"Zacchua"},"content":"            editPersonDescriptor.setFacebook(ParserUtil.parseFacebook(","lastModifiedDate":"2021-10-14"},{"lineNumber":85,"author":{"gitId":"Zacchua"},"content":"                    argMultimap.getValue(PREFIX_FACEBOOK).orElse(null)));","lastModifiedDate":"2021-10-14"},{"lineNumber":86,"author":{"gitId":"stanley-1"},"content":"        }","lastModifiedDate":"2021-10-11"},{"lineNumber":87,"author":{"gitId":"stanley-1"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":88,"author":{"gitId":"david-eom"},"content":"        if (argMultimap.getValue(PREFIX_TELEGRAM).isPresent()) {","lastModifiedDate":"2021-10-08"},{"lineNumber":89,"author":{"gitId":"Zacchua"},"content":"            editPersonDescriptor.setTelegram(ParserUtil.parseTelegram(","lastModifiedDate":"2021-10-14"},{"lineNumber":90,"author":{"gitId":"Zacchua"},"content":"                    argMultimap.getValue(PREFIX_TELEGRAM).orElse(null)));","lastModifiedDate":"2021-10-14"},{"lineNumber":91,"author":{"gitId":"david-eom"},"content":"        }","lastModifiedDate":"2021-10-08"},{"lineNumber":92,"author":{"gitId":"david-eom"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        if (!editPersonDescriptor.isAnyFieldEdited()) {","lastModifiedDate":"2017-01-26"},{"lineNumber":94,"author":{"gitId":"-"},"content":"            throw new ParseException(EditCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2017-03-11"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        return new EditCommand(index, editPersonDescriptor);","lastModifiedDate":"2017-05-15"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     * Parses {@code Collection\u003cString\u003e tags} into a {@code Set\u003cTag\u003e} if {@code tags} is non-empty.","lastModifiedDate":"2017-03-07"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     * If {@code tags} contain only one element which is an empty string, it will be parsed into a","lastModifiedDate":"2017-01-26"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     * {@code Set\u003cTag\u003e} containing zero tags.","lastModifiedDate":"2017-03-07"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    private Optional\u003cSet\u003cTag\u003e\u003e parseTagsForEdit(Collection\u003cString\u003e tags) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        assert tags !\u003d null;","lastModifiedDate":"2017-01-26"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        if (tags.isEmpty()) {","lastModifiedDate":"2017-01-26"},{"lineNumber":109,"author":{"gitId":"-"},"content":"            return Optional.empty();","lastModifiedDate":"2017-01-26"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        Collection\u003cString\u003e tagSet \u003d tags.size() \u003d\u003d 1 \u0026\u0026 tags.contains(\"\") ? Collections.emptySet() : tags;","lastModifiedDate":"2017-01-26"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        return Optional.of(ParserUtil.parseTags(tagSet));","lastModifiedDate":"2017-01-26"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":115,"author":{"gitId":"bnjmnt4n"},"content":"    /**","lastModifiedDate":"2021-10-23"},{"lineNumber":116,"author":{"gitId":"bnjmnt4n"},"content":"     * Parses {@code Collection\u003cString\u003e dates} into {@code Dates} if {@code tags} is non-empty.","lastModifiedDate":"2021-10-23"},{"lineNumber":117,"author":{"gitId":"bnjmnt4n"},"content":"     * If {@code dates} contain only one element which is an empty string, it will be parsed into an","lastModifiedDate":"2021-10-23"},{"lineNumber":118,"author":{"gitId":"bnjmnt4n"},"content":"     * empty {@code Dates} object.","lastModifiedDate":"2021-10-23"},{"lineNumber":119,"author":{"gitId":"bnjmnt4n"},"content":"     */","lastModifiedDate":"2021-10-23"},{"lineNumber":120,"author":{"gitId":"bnjmnt4n"},"content":"    private Optional\u003cDates\u003e parseDatesForEdit(Collection\u003cString\u003e dates) throws ParseException {","lastModifiedDate":"2021-10-23"},{"lineNumber":121,"author":{"gitId":"bnjmnt4n"},"content":"        assert dates !\u003d null;","lastModifiedDate":"2021-10-23"},{"lineNumber":122,"author":{"gitId":"bnjmnt4n"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":123,"author":{"gitId":"bnjmnt4n"},"content":"        if (dates.isEmpty()) {","lastModifiedDate":"2021-10-23"},{"lineNumber":124,"author":{"gitId":"bnjmnt4n"},"content":"            return Optional.empty();","lastModifiedDate":"2021-10-23"},{"lineNumber":125,"author":{"gitId":"bnjmnt4n"},"content":"        }","lastModifiedDate":"2021-10-23"},{"lineNumber":126,"author":{"gitId":"bnjmnt4n"},"content":"        Collection\u003cString\u003e datesSet \u003d dates.size() \u003d\u003d 1 \u0026\u0026 dates.contains(\"\") ? Collections.emptySet() : dates;","lastModifiedDate":"2021-10-23"},{"lineNumber":127,"author":{"gitId":"bnjmnt4n"},"content":"        return Optional.of(ParserUtil.parseDates(datesSet));","lastModifiedDate":"2021-10-23"},{"lineNumber":128,"author":{"gitId":"bnjmnt4n"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":129,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-26"}],"authorContributionMap":{"Zacchua":23,"bnjmnt4n":19,"david-eom":17,"-":61,"stanley-1":9}},{"path":"src/main/java/socialite/logic/parser/FindCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"david-eom"},"content":"package socialite.logic.parser;","lastModifiedDate":"2021-10-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-01-26"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":5,"author":{"gitId":"david-eom"},"content":"import socialite.commons.core.Messages;","lastModifiedDate":"2021-10-08"},{"lineNumber":6,"author":{"gitId":"david-eom"},"content":"import socialite.logic.commands.FindCommand;","lastModifiedDate":"2021-10-08"},{"lineNumber":7,"author":{"gitId":"david-eom"},"content":"import socialite.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-10-08"},{"lineNumber":8,"author":{"gitId":"david-eom"},"content":"import socialite.model.person.ContainsKeywordsPredicate;","lastModifiedDate":"2021-10-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-01-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * Parses input arguments and creates a new FindCommand object","lastModifiedDate":"2017-01-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-01-26"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class FindCommandParser implements Parser\u003cFindCommand\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * Parses the given {@code String} of arguments in the context of the FindCommand","lastModifiedDate":"2017-01-26"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * and returns a FindCommand object for execution.","lastModifiedDate":"2019-05-11"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public FindCommand parse(String args) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        String trimmedArgs \u003d args.trim();","lastModifiedDate":"2017-02-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        if (trimmedArgs.isEmpty()) {","lastModifiedDate":"2017-02-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"            throw new ParseException(","lastModifiedDate":"2017-03-11"},{"lineNumber":24,"author":{"gitId":"stanley-1"},"content":"                    String.format(Messages.MESSAGE_INVALID_COMMAND_FORMAT, FindCommand.MESSAGE_HELP_GUIDE));","lastModifiedDate":"2021-10-20"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        String[] nameKeywords \u003d trimmedArgs.split(\"\\\\s+\");","lastModifiedDate":"2017-06-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":29,"author":{"gitId":"david-eom"},"content":"        return new FindCommand(new ContainsKeywordsPredicate(Arrays.asList(nameKeywords)));","lastModifiedDate":"2021-10-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":32,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-26"}],"authorContributionMap":{"david-eom":6,"-":25,"stanley-1":1}},{"path":"src/main/java/socialite/logic/parser/HelpCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"stanley-1"},"content":"package socialite.logic.parser;","lastModifiedDate":"2021-10-19"},{"lineNumber":2,"author":{"gitId":"stanley-1"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":3,"author":{"gitId":"stanley-1"},"content":"import socialite.logic.commands.AddCommand;","lastModifiedDate":"2021-10-19"},{"lineNumber":4,"author":{"gitId":"stanley-1"},"content":"import socialite.logic.commands.DeleteCommand;","lastModifiedDate":"2021-10-19"},{"lineNumber":5,"author":{"gitId":"stanley-1"},"content":"import socialite.logic.commands.EditCommand;","lastModifiedDate":"2021-10-19"},{"lineNumber":6,"author":{"gitId":"stanley-1"},"content":"import socialite.logic.commands.FindCommand;","lastModifiedDate":"2021-10-19"},{"lineNumber":7,"author":{"gitId":"stanley-1"},"content":"import socialite.logic.commands.HelpCommand;","lastModifiedDate":"2021-10-19"},{"lineNumber":8,"author":{"gitId":"david-eom"},"content":"import socialite.logic.commands.PictureCommand;","lastModifiedDate":"2021-10-28"},{"lineNumber":9,"author":{"gitId":"david-eom"},"content":"import socialite.logic.commands.PinCommand;","lastModifiedDate":"2021-10-29"},{"lineNumber":10,"author":{"gitId":"stanley-1"},"content":"import socialite.logic.commands.RemarkCommand;","lastModifiedDate":"2021-10-19"},{"lineNumber":11,"author":{"gitId":"david-eom"},"content":"import socialite.logic.commands.ShareCommand;","lastModifiedDate":"2021-10-25"},{"lineNumber":12,"author":{"gitId":"david-eom"},"content":"import socialite.logic.commands.UnpinCommand;","lastModifiedDate":"2021-10-29"},{"lineNumber":13,"author":{"gitId":"stanley-1"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":14,"author":{"gitId":"stanley-1"},"content":"/**","lastModifiedDate":"2021-10-19"},{"lineNumber":15,"author":{"gitId":"stanley-1"},"content":" * Parses input arguments (if any) and creates a new HelpCommand object","lastModifiedDate":"2021-10-19"},{"lineNumber":16,"author":{"gitId":"stanley-1"},"content":" */","lastModifiedDate":"2021-10-19"},{"lineNumber":17,"author":{"gitId":"stanley-1"},"content":"public class HelpCommandParser implements Parser\u003cHelpCommand\u003e {","lastModifiedDate":"2021-10-19"},{"lineNumber":18,"author":{"gitId":"stanley-1"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":19,"author":{"gitId":"stanley-1"},"content":"    public static final String INVALID_KEYWORD \u003d \"default\";","lastModifiedDate":"2021-10-19"},{"lineNumber":20,"author":{"gitId":"stanley-1"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":21,"author":{"gitId":"stanley-1"},"content":"    /**","lastModifiedDate":"2021-10-19"},{"lineNumber":22,"author":{"gitId":"stanley-1"},"content":"     * Parses the given {@code String} of arguments in the context of the HelpCommand","lastModifiedDate":"2021-10-19"},{"lineNumber":23,"author":{"gitId":"stanley-1"},"content":"     * and returns a HelpCommand object for execution.","lastModifiedDate":"2021-10-19"},{"lineNumber":24,"author":{"gitId":"stanley-1"},"content":"     */","lastModifiedDate":"2021-10-19"},{"lineNumber":25,"author":{"gitId":"stanley-1"},"content":"    public HelpCommand parse(String args) {","lastModifiedDate":"2021-10-19"},{"lineNumber":26,"author":{"gitId":"stanley-1"},"content":"        String trimmedArgs \u003d args.trim();","lastModifiedDate":"2021-10-19"},{"lineNumber":27,"author":{"gitId":"stanley-1"},"content":"        if (trimmedArgs.isEmpty()) {","lastModifiedDate":"2021-10-19"},{"lineNumber":28,"author":{"gitId":"stanley-1"},"content":"            return new HelpCommand(INVALID_KEYWORD);","lastModifiedDate":"2021-10-19"},{"lineNumber":29,"author":{"gitId":"stanley-1"},"content":"        }","lastModifiedDate":"2021-10-19"},{"lineNumber":30,"author":{"gitId":"stanley-1"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":31,"author":{"gitId":"stanley-1"},"content":"        switch(trimmedArgs) {","lastModifiedDate":"2021-10-19"},{"lineNumber":32,"author":{"gitId":"stanley-1"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":33,"author":{"gitId":"stanley-1"},"content":"        case AddCommand.COMMAND_WORD:","lastModifiedDate":"2021-10-19"},{"lineNumber":34,"author":{"gitId":"stanley-1"},"content":"            return new HelpCommand(AddCommand.MESSAGE_USAGE);","lastModifiedDate":"2021-10-19"},{"lineNumber":35,"author":{"gitId":"stanley-1"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":36,"author":{"gitId":"stanley-1"},"content":"        case DeleteCommand.COMMAND_WORD:","lastModifiedDate":"2021-10-19"},{"lineNumber":37,"author":{"gitId":"stanley-1"},"content":"            return new HelpCommand(DeleteCommand.MESSAGE_USAGE);","lastModifiedDate":"2021-10-19"},{"lineNumber":38,"author":{"gitId":"stanley-1"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":39,"author":{"gitId":"stanley-1"},"content":"        case EditCommand.COMMAND_WORD:","lastModifiedDate":"2021-10-19"},{"lineNumber":40,"author":{"gitId":"stanley-1"},"content":"            return new HelpCommand(EditCommand.MESSAGE_USAGE);","lastModifiedDate":"2021-10-19"},{"lineNumber":41,"author":{"gitId":"stanley-1"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":42,"author":{"gitId":"stanley-1"},"content":"        case FindCommand.COMMAND_WORD:","lastModifiedDate":"2021-10-19"},{"lineNumber":43,"author":{"gitId":"stanley-1"},"content":"            return new HelpCommand(FindCommand.MESSAGE_USAGE);","lastModifiedDate":"2021-10-19"},{"lineNumber":44,"author":{"gitId":"stanley-1"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":45,"author":{"gitId":"stanley-1"},"content":"        case RemarkCommand.COMMAND_WORD:","lastModifiedDate":"2021-10-19"},{"lineNumber":46,"author":{"gitId":"stanley-1"},"content":"            return new HelpCommand(RemarkCommand.MESSAGE_USAGE);","lastModifiedDate":"2021-10-19"},{"lineNumber":47,"author":{"gitId":"stanley-1"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":48,"author":{"gitId":"david-eom"},"content":"        case ShareCommand.COMMAND_WORD:","lastModifiedDate":"2021-10-25"},{"lineNumber":49,"author":{"gitId":"david-eom"},"content":"            return new HelpCommand(ShareCommand.MESSAGE_USAGE);","lastModifiedDate":"2021-10-25"},{"lineNumber":50,"author":{"gitId":"david-eom"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":51,"author":{"gitId":"david-eom"},"content":"        case PictureCommand.COMMAND_WORD:","lastModifiedDate":"2021-10-28"},{"lineNumber":52,"author":{"gitId":"david-eom"},"content":"            return new HelpCommand(PictureCommand.MESSAGE_USAGE);","lastModifiedDate":"2021-10-28"},{"lineNumber":53,"author":{"gitId":"david-eom"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":54,"author":{"gitId":"david-eom"},"content":"        case PinCommand.COMMAND_WORD:","lastModifiedDate":"2021-10-29"},{"lineNumber":55,"author":{"gitId":"david-eom"},"content":"            return new HelpCommand(PinCommand.MESSAGE_USAGE);","lastModifiedDate":"2021-10-29"},{"lineNumber":56,"author":{"gitId":"david-eom"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":57,"author":{"gitId":"david-eom"},"content":"        case UnpinCommand.COMMAND_WORD:","lastModifiedDate":"2021-10-29"},{"lineNumber":58,"author":{"gitId":"david-eom"},"content":"            return new HelpCommand(UnpinCommand.MESSAGE_USAGE);","lastModifiedDate":"2021-10-29"},{"lineNumber":59,"author":{"gitId":"david-eom"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":60,"author":{"gitId":"stanley-1"},"content":"        default:","lastModifiedDate":"2021-10-19"},{"lineNumber":61,"author":{"gitId":"stanley-1"},"content":"            return new HelpCommand(INVALID_KEYWORD);","lastModifiedDate":"2021-10-19"},{"lineNumber":62,"author":{"gitId":"stanley-1"},"content":"        }","lastModifiedDate":"2021-10-19"},{"lineNumber":63,"author":{"gitId":"stanley-1"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":64,"author":{"gitId":"stanley-1"},"content":"}","lastModifiedDate":"2021-10-19"}],"authorContributionMap":{"david-eom":16,"stanley-1":48}},{"path":"src/main/java/socialite/logic/parser/Parser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"david-eom"},"content":"package socialite.logic.parser;","lastModifiedDate":"2021-10-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":3,"author":{"gitId":"david-eom"},"content":"import socialite.logic.commands.Command;","lastModifiedDate":"2021-10-08"},{"lineNumber":4,"author":{"gitId":"david-eom"},"content":"import socialite.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-10-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-07-06"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Represents a Parser that is able to parse user input into a {@code Command} of type {@code T}.","lastModifiedDate":"2017-07-06"},{"lineNumber":8,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-07-06"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public interface Parser\u003cT extends Command\u003e {","lastModifiedDate":"2017-07-06"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-06"},{"lineNumber":12,"author":{"gitId":"-"},"content":"     * Parses {@code userInput} into a command and returns it.","lastModifiedDate":"2017-07-06"},{"lineNumber":13,"author":{"gitId":"-"},"content":"     * @throws ParseException if {@code userInput} does not conform the expected format","lastModifiedDate":"2017-07-06"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-06"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    T parse(String userInput) throws ParseException;","lastModifiedDate":"2017-07-06"},{"lineNumber":16,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-07-06"}],"authorContributionMap":{"david-eom":3,"-":13}},{"path":"src/main/java/socialite/logic/parser/ParserUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"david-eom"},"content":"package socialite.logic.parser;","lastModifiedDate":"2021-10-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2017-02-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-02-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-02-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":9,"author":{"gitId":"david-eom"},"content":"import socialite.commons.core.index.Index;","lastModifiedDate":"2021-10-08"},{"lineNumber":10,"author":{"gitId":"david-eom"},"content":"import socialite.commons.util.StringUtil;","lastModifiedDate":"2021-10-08"},{"lineNumber":11,"author":{"gitId":"david-eom"},"content":"import socialite.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-10-08"},{"lineNumber":12,"author":{"gitId":"stanley-1"},"content":"import socialite.model.handle.Facebook;","lastModifiedDate":"2021-10-11"},{"lineNumber":13,"author":{"gitId":"stanley-1"},"content":"import socialite.model.handle.Instagram;","lastModifiedDate":"2021-10-11"},{"lineNumber":14,"author":{"gitId":"david-eom"},"content":"import socialite.model.handle.Telegram;","lastModifiedDate":"2021-10-08"},{"lineNumber":15,"author":{"gitId":"Zacchua"},"content":"import socialite.model.handle.TikTok;","lastModifiedDate":"2021-10-12"},{"lineNumber":16,"author":{"gitId":"Zacchua"},"content":"import socialite.model.handle.Twitter;","lastModifiedDate":"2021-10-11"},{"lineNumber":17,"author":{"gitId":"bnjmnt4n"},"content":"import socialite.model.person.Date;","lastModifiedDate":"2021-10-23"},{"lineNumber":18,"author":{"gitId":"bnjmnt4n"},"content":"import socialite.model.person.Dates;","lastModifiedDate":"2021-10-21"},{"lineNumber":19,"author":{"gitId":"david-eom"},"content":"import socialite.model.person.Name;","lastModifiedDate":"2021-10-08"},{"lineNumber":20,"author":{"gitId":"david-eom"},"content":"import socialite.model.person.Phone;","lastModifiedDate":"2021-10-08"},{"lineNumber":21,"author":{"gitId":"Zacchua"},"content":"import socialite.model.person.Remark;","lastModifiedDate":"2021-10-13"},{"lineNumber":22,"author":{"gitId":"david-eom"},"content":"import socialite.model.tag.Tag;","lastModifiedDate":"2021-10-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":24,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":" * Contains utility methods used for parsing strings in the various *Parser classes.","lastModifiedDate":"2017-07-18"},{"lineNumber":26,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11"},{"lineNumber":27,"author":{"gitId":"-"},"content":"public class ParserUtil {","lastModifiedDate":"2017-02-11"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_INDEX \u003d \"Index is not a non-zero unsigned integer.\";","lastModifiedDate":"2017-06-02"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-11"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * Parses {@code oneBasedIndex} into an {@code Index} and returns it. Leading and trailing whitespaces will be","lastModifiedDate":"2017-05-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * trimmed.","lastModifiedDate":"2017-05-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * @throws ParseException if the specified index is invalid (not non-zero unsigned integer).","lastModifiedDate":"2018-07-10"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-11"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public static Index parseIndex(String oneBasedIndex) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        String trimmedIndex \u003d oneBasedIndex.trim();","lastModifiedDate":"2017-05-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        if (!StringUtil.isNonZeroUnsignedInteger(trimmedIndex)) {","lastModifiedDate":"2017-06-02"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            throw new ParseException(MESSAGE_INVALID_INDEX);","lastModifiedDate":"2018-07-10"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-02-11"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        return Index.fromOneBased(Integer.parseInt(trimmedIndex));","lastModifiedDate":"2017-05-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-11"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-29"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * Parses a {@code String name} into a {@code Name}.","lastModifiedDate":"2017-05-29"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-29"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-29"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code name} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-29"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public static Name parseName(String name) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        requireNonNull(name);","lastModifiedDate":"2017-05-29"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        String trimmedName \u003d name.trim();","lastModifiedDate":"2017-05-29"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        if (!Name.isValidName(trimmedName)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":54,"author":{"gitId":"-"},"content":"            throw new ParseException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        return new Name(trimmedName);","lastModifiedDate":"2017-05-29"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-29"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-29"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     * Parses a {@code String phone} into a {@code Phone}.","lastModifiedDate":"2017-05-30"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code phone} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public static Phone parsePhone(String phone) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        requireNonNull(phone);","lastModifiedDate":"2017-05-30"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        String trimmedPhone \u003d phone.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        if (!Phone.isValidPhone(trimmedPhone)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":69,"author":{"gitId":"-"},"content":"            throw new ParseException(Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        return new Phone(trimmedPhone);","lastModifiedDate":"2017-05-30"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":74,"author":{"gitId":"Zacchua"},"content":"    /**","lastModifiedDate":"2021-10-13"},{"lineNumber":75,"author":{"gitId":"Zacchua"},"content":"     * Parses a {@code String remark} into an {@code Remark}.","lastModifiedDate":"2021-10-13"},{"lineNumber":76,"author":{"gitId":"Zacchua"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2021-10-13"},{"lineNumber":77,"author":{"gitId":"Zacchua"},"content":"     */","lastModifiedDate":"2021-10-13"},{"lineNumber":78,"author":{"gitId":"Zacchua"},"content":"    public static Remark parseRemark(String remark) {","lastModifiedDate":"2021-10-14"},{"lineNumber":79,"author":{"gitId":"david-eom"},"content":"        if (remark \u003d\u003d null || remark.equals(\"\")) {","lastModifiedDate":"2021-10-22"},{"lineNumber":80,"author":{"gitId":"david-eom"},"content":"            return new Remark(null);","lastModifiedDate":"2021-10-22"},{"lineNumber":81,"author":{"gitId":"david-eom"},"content":"        }","lastModifiedDate":"2021-10-22"},{"lineNumber":82,"author":{"gitId":"Zacchua"},"content":"        String trimmedRemark \u003d remark.trim();","lastModifiedDate":"2021-10-13"},{"lineNumber":83,"author":{"gitId":"Zacchua"},"content":"        return new Remark(trimmedRemark);","lastModifiedDate":"2021-10-13"},{"lineNumber":84,"author":{"gitId":"Zacchua"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":85,"author":{"gitId":"Zacchua"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     * Parses a {@code String tag} into a {@code Tag}.","lastModifiedDate":"2017-05-30"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code tag} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    public static Tag parseTag(String tag) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        requireNonNull(tag);","lastModifiedDate":"2017-05-30"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        String trimmedTag \u003d tag.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        if (!Tag.isValidTagName(trimmedTag)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":96,"author":{"gitId":"-"},"content":"            throw new ParseException(Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        return new Tag(trimmedTag);","lastModifiedDate":"2017-05-30"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-11"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     * Parses {@code Collection\u003cString\u003e tags} into a {@code Set\u003cTag\u003e}.","lastModifiedDate":"2017-03-07"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-11"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    public static Set\u003cTag\u003e parseTags(Collection\u003cString\u003e tags) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        requireNonNull(tags);","lastModifiedDate":"2017-05-15"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        final Set\u003cTag\u003e tagSet \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2017-02-11"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        for (String tagName : tags) {","lastModifiedDate":"2017-02-11"},{"lineNumber":108,"author":{"gitId":"-"},"content":"            tagSet.add(parseTag(tagName));","lastModifiedDate":"2017-05-30"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-02-11"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        return tagSet;","lastModifiedDate":"2017-03-07"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-11"},{"lineNumber":112,"author":{"gitId":"Zacchua"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":113,"author":{"gitId":"stanley-1"},"content":"    /**","lastModifiedDate":"2021-10-11"},{"lineNumber":114,"author":{"gitId":"stanley-1"},"content":"     * Parses a {@code String handle} into a {@code Facebook}.","lastModifiedDate":"2021-10-11"},{"lineNumber":115,"author":{"gitId":"stanley-1"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2021-10-11"},{"lineNumber":116,"author":{"gitId":"stanley-1"},"content":"     *","lastModifiedDate":"2021-10-11"},{"lineNumber":117,"author":{"gitId":"stanley-1"},"content":"     * @throws ParseException if the given {@code handle} is invalid for Facebook.","lastModifiedDate":"2021-10-11"},{"lineNumber":118,"author":{"gitId":"stanley-1"},"content":"     */","lastModifiedDate":"2021-10-11"},{"lineNumber":119,"author":{"gitId":"stanley-1"},"content":"    public static Facebook parseFacebook(String handle) throws ParseException {","lastModifiedDate":"2021-10-11"},{"lineNumber":120,"author":{"gitId":"Zacchua"},"content":"        if (handle \u003d\u003d null || handle.equals(\"\")) {","lastModifiedDate":"2021-10-14"},{"lineNumber":121,"author":{"gitId":"Zacchua"},"content":"            return new Facebook(null);","lastModifiedDate":"2021-10-14"},{"lineNumber":122,"author":{"gitId":"Zacchua"},"content":"        }","lastModifiedDate":"2021-10-14"},{"lineNumber":123,"author":{"gitId":"stanley-1"},"content":"        String trimmedHandle \u003d handle.trim();","lastModifiedDate":"2021-10-11"},{"lineNumber":124,"author":{"gitId":"stanley-1"},"content":"        if (!Facebook.isValidHandle(trimmedHandle)) {","lastModifiedDate":"2021-10-11"},{"lineNumber":125,"author":{"gitId":"stanley-1"},"content":"            throw new ParseException(Facebook.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-11"},{"lineNumber":126,"author":{"gitId":"stanley-1"},"content":"        }","lastModifiedDate":"2021-10-11"},{"lineNumber":127,"author":{"gitId":"stanley-1"},"content":"        return new Facebook(trimmedHandle);","lastModifiedDate":"2021-10-11"},{"lineNumber":128,"author":{"gitId":"stanley-1"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":129,"author":{"gitId":"stanley-1"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":130,"author":{"gitId":"stanley-1"},"content":"    /**","lastModifiedDate":"2021-10-11"},{"lineNumber":131,"author":{"gitId":"stanley-1"},"content":"     * Parses a {@code String handle} into a {@code Instagram}.","lastModifiedDate":"2021-10-11"},{"lineNumber":132,"author":{"gitId":"stanley-1"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2021-10-11"},{"lineNumber":133,"author":{"gitId":"stanley-1"},"content":"     *","lastModifiedDate":"2021-10-11"},{"lineNumber":134,"author":{"gitId":"stanley-1"},"content":"     * @throws ParseException if the given {@code handle} is invalid for Instagram.","lastModifiedDate":"2021-10-11"},{"lineNumber":135,"author":{"gitId":"stanley-1"},"content":"     */","lastModifiedDate":"2021-10-11"},{"lineNumber":136,"author":{"gitId":"stanley-1"},"content":"    public static Instagram parseInstagram(String handle) throws ParseException {","lastModifiedDate":"2021-10-11"},{"lineNumber":137,"author":{"gitId":"Zacchua"},"content":"        if (handle \u003d\u003d null || handle.equals(\"\")) {","lastModifiedDate":"2021-10-14"},{"lineNumber":138,"author":{"gitId":"Zacchua"},"content":"            return new Instagram(null);","lastModifiedDate":"2021-10-14"},{"lineNumber":139,"author":{"gitId":"Zacchua"},"content":"        }","lastModifiedDate":"2021-10-14"},{"lineNumber":140,"author":{"gitId":"stanley-1"},"content":"        String trimmedHandle \u003d handle.trim();","lastModifiedDate":"2021-10-11"},{"lineNumber":141,"author":{"gitId":"stanley-1"},"content":"        if (!Instagram.isValidHandle(trimmedHandle)) {","lastModifiedDate":"2021-10-11"},{"lineNumber":142,"author":{"gitId":"stanley-1"},"content":"            throw new ParseException(Instagram.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-11"},{"lineNumber":143,"author":{"gitId":"stanley-1"},"content":"        }","lastModifiedDate":"2021-10-11"},{"lineNumber":144,"author":{"gitId":"stanley-1"},"content":"        return new Instagram(trimmedHandle);","lastModifiedDate":"2021-10-11"},{"lineNumber":145,"author":{"gitId":"stanley-1"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":146,"author":{"gitId":"david-eom"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":147,"author":{"gitId":"david-eom"},"content":"    /**","lastModifiedDate":"2021-10-08"},{"lineNumber":148,"author":{"gitId":"david-eom"},"content":"     * Parses a {@code String handle} into a {@code Telegram}.","lastModifiedDate":"2021-10-08"},{"lineNumber":149,"author":{"gitId":"david-eom"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2021-10-08"},{"lineNumber":150,"author":{"gitId":"david-eom"},"content":"     *","lastModifiedDate":"2021-10-08"},{"lineNumber":151,"author":{"gitId":"david-eom"},"content":"     * @throws ParseException if the given {@code handle} is invalid for Telegram.","lastModifiedDate":"2021-10-08"},{"lineNumber":152,"author":{"gitId":"david-eom"},"content":"     */","lastModifiedDate":"2021-10-08"},{"lineNumber":153,"author":{"gitId":"david-eom"},"content":"    public static Telegram parseTelegram(String handle) throws ParseException {","lastModifiedDate":"2021-10-08"},{"lineNumber":154,"author":{"gitId":"Zacchua"},"content":"        if (handle \u003d\u003d null || handle.equals(\"\")) {","lastModifiedDate":"2021-10-14"},{"lineNumber":155,"author":{"gitId":"Zacchua"},"content":"            return new Telegram(null);","lastModifiedDate":"2021-10-14"},{"lineNumber":156,"author":{"gitId":"Zacchua"},"content":"        }","lastModifiedDate":"2021-10-14"},{"lineNumber":157,"author":{"gitId":"david-eom"},"content":"        String trimmedHandle \u003d handle.trim();","lastModifiedDate":"2021-10-08"},{"lineNumber":158,"author":{"gitId":"david-eom"},"content":"        if (!Telegram.isValidHandle(trimmedHandle)) {","lastModifiedDate":"2021-10-08"},{"lineNumber":159,"author":{"gitId":"david-eom"},"content":"            throw new ParseException(Telegram.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-08"},{"lineNumber":160,"author":{"gitId":"david-eom"},"content":"        }","lastModifiedDate":"2021-10-08"},{"lineNumber":161,"author":{"gitId":"david-eom"},"content":"        return new Telegram(trimmedHandle);","lastModifiedDate":"2021-10-08"},{"lineNumber":162,"author":{"gitId":"david-eom"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":163,"author":{"gitId":"Zacchua"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":164,"author":{"gitId":"Zacchua"},"content":"    /**","lastModifiedDate":"2021-10-12"},{"lineNumber":165,"author":{"gitId":"Zacchua"},"content":"     * Parses a {@code String twitter} into an {@code Twitter}.","lastModifiedDate":"2021-10-12"},{"lineNumber":166,"author":{"gitId":"Zacchua"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2021-10-12"},{"lineNumber":167,"author":{"gitId":"Zacchua"},"content":"     *","lastModifiedDate":"2021-10-12"},{"lineNumber":168,"author":{"gitId":"Zacchua"},"content":"     * @param twitter twtter handle to add","lastModifiedDate":"2021-10-12"},{"lineNumber":169,"author":{"gitId":"Zacchua"},"content":"     * @return the created Twitter object","lastModifiedDate":"2021-10-12"},{"lineNumber":170,"author":{"gitId":"Zacchua"},"content":"     * @throws ParseException if the given {@code twitter} is invalid","lastModifiedDate":"2021-10-12"},{"lineNumber":171,"author":{"gitId":"Zacchua"},"content":"     */","lastModifiedDate":"2021-10-12"},{"lineNumber":172,"author":{"gitId":"Zacchua"},"content":"    public static Twitter parseTwitter(String twitter) throws ParseException {","lastModifiedDate":"2021-10-12"},{"lineNumber":173,"author":{"gitId":"Zacchua"},"content":"        if (twitter \u003d\u003d null || twitter.equals(\"\")) {","lastModifiedDate":"2021-10-14"},{"lineNumber":174,"author":{"gitId":"Zacchua"},"content":"            return new Twitter(null);","lastModifiedDate":"2021-10-14"},{"lineNumber":175,"author":{"gitId":"Zacchua"},"content":"        }","lastModifiedDate":"2021-10-14"},{"lineNumber":176,"author":{"gitId":"Zacchua"},"content":"        String trimmedTwitter \u003d twitter.trim();","lastModifiedDate":"2021-10-12"},{"lineNumber":177,"author":{"gitId":"Zacchua"},"content":"        if (!Twitter.isValidHandle(trimmedTwitter)) {","lastModifiedDate":"2021-10-12"},{"lineNumber":178,"author":{"gitId":"Zacchua"},"content":"            throw new ParseException(Twitter.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-12"},{"lineNumber":179,"author":{"gitId":"Zacchua"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":180,"author":{"gitId":"Zacchua"},"content":"        return new Twitter(trimmedTwitter);","lastModifiedDate":"2021-10-12"},{"lineNumber":181,"author":{"gitId":"Zacchua"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":182,"author":{"gitId":"Zacchua"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":183,"author":{"gitId":"Zacchua"},"content":"    /**","lastModifiedDate":"2021-10-12"},{"lineNumber":184,"author":{"gitId":"Zacchua"},"content":"     * Parses a {@code String tiktok} into an {@code TikTok}.","lastModifiedDate":"2021-10-12"},{"lineNumber":185,"author":{"gitId":"Zacchua"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2021-10-12"},{"lineNumber":186,"author":{"gitId":"Zacchua"},"content":"     *","lastModifiedDate":"2021-10-12"},{"lineNumber":187,"author":{"gitId":"Zacchua"},"content":"     * @param tiktok tiktok handle to add","lastModifiedDate":"2021-10-12"},{"lineNumber":188,"author":{"gitId":"Zacchua"},"content":"     * @return the created TikTok object","lastModifiedDate":"2021-10-12"},{"lineNumber":189,"author":{"gitId":"Zacchua"},"content":"     * @throws ParseException if the given {@code tiktok} is invalid","lastModifiedDate":"2021-10-12"},{"lineNumber":190,"author":{"gitId":"Zacchua"},"content":"     */","lastModifiedDate":"2021-10-12"},{"lineNumber":191,"author":{"gitId":"Zacchua"},"content":"    public static TikTok parseTikTok(String tiktok) throws ParseException {","lastModifiedDate":"2021-10-12"},{"lineNumber":192,"author":{"gitId":"Zacchua"},"content":"        if (tiktok \u003d\u003d null || tiktok.equals(\"\")) {","lastModifiedDate":"2021-10-14"},{"lineNumber":193,"author":{"gitId":"Zacchua"},"content":"            return new TikTok(null);","lastModifiedDate":"2021-10-14"},{"lineNumber":194,"author":{"gitId":"Zacchua"},"content":"        }","lastModifiedDate":"2021-10-14"},{"lineNumber":195,"author":{"gitId":"Zacchua"},"content":"        String trimmedTikTok \u003d tiktok.trim();","lastModifiedDate":"2021-10-12"},{"lineNumber":196,"author":{"gitId":"Zacchua"},"content":"        if (!TikTok.isValidHandle(trimmedTikTok)) {","lastModifiedDate":"2021-10-12"},{"lineNumber":197,"author":{"gitId":"Zacchua"},"content":"            throw new ParseException(TikTok.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-12"},{"lineNumber":198,"author":{"gitId":"Zacchua"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":199,"author":{"gitId":"Zacchua"},"content":"        return new TikTok(trimmedTikTok);","lastModifiedDate":"2021-10-12"},{"lineNumber":200,"author":{"gitId":"Zacchua"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":201,"author":{"gitId":"bnjmnt4n"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":202,"author":{"gitId":"bnjmnt4n"},"content":"    /**","lastModifiedDate":"2021-10-21"},{"lineNumber":203,"author":{"gitId":"bnjmnt4n"},"content":"     * Parses a {@code String date} into a {@code Date}.","lastModifiedDate":"2021-10-23"},{"lineNumber":204,"author":{"gitId":"bnjmnt4n"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2021-10-21"},{"lineNumber":205,"author":{"gitId":"bnjmnt4n"},"content":"     *","lastModifiedDate":"2021-10-21"},{"lineNumber":206,"author":{"gitId":"bnjmnt4n"},"content":"     * @throws ParseException if the given {@code date} is invalid.","lastModifiedDate":"2021-10-23"},{"lineNumber":207,"author":{"gitId":"bnjmnt4n"},"content":"     */","lastModifiedDate":"2021-10-23"},{"lineNumber":208,"author":{"gitId":"bnjmnt4n"},"content":"    public static Date parseDate(String date) throws ParseException {","lastModifiedDate":"2021-10-23"},{"lineNumber":209,"author":{"gitId":"bnjmnt4n"},"content":"        requireNonNull(date);","lastModifiedDate":"2021-10-23"},{"lineNumber":210,"author":{"gitId":"bnjmnt4n"},"content":"        String trimmedDate \u003d date.trim();","lastModifiedDate":"2021-10-23"},{"lineNumber":211,"author":{"gitId":"bnjmnt4n"},"content":"        if (!Date.isValidDate(trimmedDate)) {","lastModifiedDate":"2021-10-23"},{"lineNumber":212,"author":{"gitId":"bnjmnt4n"},"content":"            throw new ParseException(Date.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-23"},{"lineNumber":213,"author":{"gitId":"bnjmnt4n"},"content":"        }","lastModifiedDate":"2021-10-23"},{"lineNumber":214,"author":{"gitId":"bnjmnt4n"},"content":"        return new Date(trimmedDate);","lastModifiedDate":"2021-10-23"},{"lineNumber":215,"author":{"gitId":"bnjmnt4n"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":216,"author":{"gitId":"bnjmnt4n"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":217,"author":{"gitId":"bnjmnt4n"},"content":"    /**","lastModifiedDate":"2021-10-23"},{"lineNumber":218,"author":{"gitId":"bnjmnt4n"},"content":"     * Parses a {@code Collection\u003cString\u003e dates} into a {@code Dates} object.","lastModifiedDate":"2021-10-23"},{"lineNumber":219,"author":{"gitId":"bnjmnt4n"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2021-10-23"},{"lineNumber":220,"author":{"gitId":"bnjmnt4n"},"content":"     *","lastModifiedDate":"2021-10-23"},{"lineNumber":221,"author":{"gitId":"bnjmnt4n"},"content":"     * @param datesCollection the dates to add","lastModifiedDate":"2021-10-23"},{"lineNumber":222,"author":{"gitId":"bnjmnt4n"},"content":"     * @return the created Dates object","lastModifiedDate":"2021-10-21"},{"lineNumber":223,"author":{"gitId":"bnjmnt4n"},"content":"     * @throws ParseException if the given {@code dates} is invalid","lastModifiedDate":"2021-10-21"},{"lineNumber":224,"author":{"gitId":"bnjmnt4n"},"content":"     */","lastModifiedDate":"2021-10-21"},{"lineNumber":225,"author":{"gitId":"bnjmnt4n"},"content":"    public static Dates parseDates(Collection\u003cString\u003e datesCollection) throws ParseException {","lastModifiedDate":"2021-10-23"},{"lineNumber":226,"author":{"gitId":"bnjmnt4n"},"content":"        requireNonNull(datesCollection);","lastModifiedDate":"2021-10-23"},{"lineNumber":227,"author":{"gitId":"bnjmnt4n"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":228,"author":{"gitId":"bnjmnt4n"},"content":"        final Dates dates \u003d new Dates();","lastModifiedDate":"2021-10-23"},{"lineNumber":229,"author":{"gitId":"bnjmnt4n"},"content":"        for (String date : datesCollection) {","lastModifiedDate":"2021-10-23"},{"lineNumber":230,"author":{"gitId":"bnjmnt4n"},"content":"            dates.addDate(parseDate(date));","lastModifiedDate":"2021-10-23"},{"lineNumber":231,"author":{"gitId":"bnjmnt4n"},"content":"        }","lastModifiedDate":"2021-10-21"},{"lineNumber":232,"author":{"gitId":"bnjmnt4n"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":233,"author":{"gitId":"bnjmnt4n"},"content":"        return dates;","lastModifiedDate":"2021-10-23"},{"lineNumber":234,"author":{"gitId":"bnjmnt4n"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":235,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-11"}],"authorContributionMap":{"Zacchua":60,"bnjmnt4n":36,"david-eom":25,"-":85,"stanley-1":29}},{"path":"src/main/java/socialite/logic/parser/PictureCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Zacchua"},"content":"package socialite.logic.parser;","lastModifiedDate":"2021-10-24"},{"lineNumber":2,"author":{"gitId":"Zacchua"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":3,"author":{"gitId":"Zacchua"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-26"},{"lineNumber":4,"author":{"gitId":"Zacchua"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":5,"author":{"gitId":"Zacchua"},"content":"import socialite.commons.core.Messages;","lastModifiedDate":"2021-10-27"},{"lineNumber":6,"author":{"gitId":"Zacchua"},"content":"import socialite.commons.core.index.Index;","lastModifiedDate":"2021-10-24"},{"lineNumber":7,"author":{"gitId":"Zacchua"},"content":"import socialite.logic.commands.PictureCommand;","lastModifiedDate":"2021-10-24"},{"lineNumber":8,"author":{"gitId":"Zacchua"},"content":"import socialite.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-10-24"},{"lineNumber":9,"author":{"gitId":"Zacchua"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":10,"author":{"gitId":"Zacchua"},"content":"public class PictureCommandParser implements Parser\u003cPictureCommand\u003e {","lastModifiedDate":"2021-10-24"},{"lineNumber":11,"author":{"gitId":"Zacchua"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":12,"author":{"gitId":"Zacchua"},"content":"    @Override","lastModifiedDate":"2021-10-26"},{"lineNumber":13,"author":{"gitId":"Zacchua"},"content":"    public PictureCommand parse(String args) throws ParseException {","lastModifiedDate":"2021-10-27"},{"lineNumber":14,"author":{"gitId":"Zacchua"},"content":"        requireNonNull(args);","lastModifiedDate":"2021-10-24"},{"lineNumber":15,"author":{"gitId":"Zacchua"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":16,"author":{"gitId":"Zacchua"},"content":"        Index index;","lastModifiedDate":"2021-10-24"},{"lineNumber":17,"author":{"gitId":"Zacchua"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":18,"author":{"gitId":"Zacchua"},"content":"        try {","lastModifiedDate":"2021-10-24"},{"lineNumber":19,"author":{"gitId":"Zacchua"},"content":"            index \u003d ParserUtil.parseIndex(args);","lastModifiedDate":"2021-10-24"},{"lineNumber":20,"author":{"gitId":"Zacchua"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2021-10-24"},{"lineNumber":21,"author":{"gitId":"Zacchua"},"content":"            throw new ParseException(","lastModifiedDate":"2021-10-27"},{"lineNumber":22,"author":{"gitId":"Zacchua"},"content":"                    String.format(Messages.MESSAGE_INVALID_COMMAND_FORMAT, PictureCommand.MESSAGE_HELP_GUIDE), pe);","lastModifiedDate":"2021-10-27"},{"lineNumber":23,"author":{"gitId":"Zacchua"},"content":"        }","lastModifiedDate":"2021-10-24"},{"lineNumber":24,"author":{"gitId":"Zacchua"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":25,"author":{"gitId":"Zacchua"},"content":"        return new PictureCommand(index, true);","lastModifiedDate":"2021-11-01"},{"lineNumber":26,"author":{"gitId":"Zacchua"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":27,"author":{"gitId":"Zacchua"},"content":"}","lastModifiedDate":"2021-10-24"}],"authorContributionMap":{"Zacchua":27}},{"path":"src/main/java/socialite/logic/parser/PinCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"david-eom"},"content":"package socialite.logic.parser;","lastModifiedDate":"2021-10-29"},{"lineNumber":2,"author":{"gitId":"david-eom"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":3,"author":{"gitId":"david-eom"},"content":"import socialite.commons.core.Messages;","lastModifiedDate":"2021-10-29"},{"lineNumber":4,"author":{"gitId":"david-eom"},"content":"import socialite.commons.core.index.Index;","lastModifiedDate":"2021-10-29"},{"lineNumber":5,"author":{"gitId":"david-eom"},"content":"import socialite.logic.commands.PinCommand;","lastModifiedDate":"2021-10-29"},{"lineNumber":6,"author":{"gitId":"david-eom"},"content":"import socialite.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-10-29"},{"lineNumber":7,"author":{"gitId":"david-eom"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":8,"author":{"gitId":"david-eom"},"content":"/**","lastModifiedDate":"2021-10-29"},{"lineNumber":9,"author":{"gitId":"david-eom"},"content":" * Parses input arguments and creates a new PinCommand object","lastModifiedDate":"2021-10-29"},{"lineNumber":10,"author":{"gitId":"david-eom"},"content":" */","lastModifiedDate":"2021-10-29"},{"lineNumber":11,"author":{"gitId":"david-eom"},"content":"public class PinCommandParser implements Parser\u003cPinCommand\u003e {","lastModifiedDate":"2021-10-29"},{"lineNumber":12,"author":{"gitId":"david-eom"},"content":"    /**","lastModifiedDate":"2021-10-29"},{"lineNumber":13,"author":{"gitId":"david-eom"},"content":"     * Parses the given {@code String} of arguments in the context of the PinCommand","lastModifiedDate":"2021-10-29"},{"lineNumber":14,"author":{"gitId":"david-eom"},"content":"     * and returns a PinCommand object for execution.","lastModifiedDate":"2021-10-29"},{"lineNumber":15,"author":{"gitId":"david-eom"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2021-10-29"},{"lineNumber":16,"author":{"gitId":"david-eom"},"content":"     */","lastModifiedDate":"2021-10-29"},{"lineNumber":17,"author":{"gitId":"david-eom"},"content":"    public PinCommand parse(String args) throws ParseException {","lastModifiedDate":"2021-10-29"},{"lineNumber":18,"author":{"gitId":"david-eom"},"content":"        try {","lastModifiedDate":"2021-10-29"},{"lineNumber":19,"author":{"gitId":"david-eom"},"content":"            Index index \u003d ParserUtil.parseIndex(args);","lastModifiedDate":"2021-10-29"},{"lineNumber":20,"author":{"gitId":"david-eom"},"content":"            return new PinCommand(index);","lastModifiedDate":"2021-10-29"},{"lineNumber":21,"author":{"gitId":"david-eom"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2021-10-29"},{"lineNumber":22,"author":{"gitId":"david-eom"},"content":"            throw new ParseException(","lastModifiedDate":"2021-10-29"},{"lineNumber":23,"author":{"gitId":"david-eom"},"content":"                    String.format(Messages.MESSAGE_INVALID_COMMAND_FORMAT, PinCommand.MESSAGE_HELP_GUIDE), pe);","lastModifiedDate":"2021-10-29"},{"lineNumber":24,"author":{"gitId":"david-eom"},"content":"        }","lastModifiedDate":"2021-10-29"},{"lineNumber":25,"author":{"gitId":"david-eom"},"content":"    }","lastModifiedDate":"2021-10-29"},{"lineNumber":26,"author":{"gitId":"david-eom"},"content":"}","lastModifiedDate":"2021-10-29"}],"authorContributionMap":{"david-eom":26}},{"path":"src/main/java/socialite/logic/parser/Prefix.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"david-eom"},"content":"package socialite.logic.parser;","lastModifiedDate":"2021-10-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-03-11"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * A prefix that marks the beginning of an argument in an arguments string.","lastModifiedDate":"2017-03-11"},{"lineNumber":5,"author":{"gitId":"-"},"content":" * E.g. \u0027t/\u0027 in \u0027add James t/ friend\u0027.","lastModifiedDate":"2017-03-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-03-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"public class Prefix {","lastModifiedDate":"2017-03-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    private final String prefix;","lastModifiedDate":"2017-03-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public Prefix(String prefix) {","lastModifiedDate":"2017-03-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"        this.prefix \u003d prefix;","lastModifiedDate":"2017-03-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public String getPrefix() {","lastModifiedDate":"2017-03-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        return prefix;","lastModifiedDate":"2017-03-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2017-05-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        return getPrefix();","lastModifiedDate":"2017-05-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-03-11"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2017-03-11"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        return prefix \u003d\u003d null ? 0 : prefix.hashCode();","lastModifiedDate":"2017-03-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-03-11"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2017-03-11"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        if (!(obj instanceof Prefix)) {","lastModifiedDate":"2017-03-11"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-03-11"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-11"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        if (obj \u003d\u003d this) {","lastModifiedDate":"2017-03-11"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-03-11"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-11"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        Prefix otherPrefix \u003d (Prefix) obj;","lastModifiedDate":"2017-03-11"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        return otherPrefix.getPrefix().equals(getPrefix());","lastModifiedDate":"2017-03-11"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":39,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-11"}],"authorContributionMap":{"david-eom":1,"-":38}},{"path":"src/main/java/socialite/logic/parser/RemarkCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"EssWhyy"},"content":"package socialite.logic.parser;","lastModifiedDate":"2021-10-12"},{"lineNumber":2,"author":{"gitId":"EssWhyy"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":3,"author":{"gitId":"EssWhyy"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-12"},{"lineNumber":4,"author":{"gitId":"EssWhyy"},"content":"import static socialite.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-10-12"},{"lineNumber":5,"author":{"gitId":"EssWhyy"},"content":"import static socialite.logic.parser.CliSyntax.PREFIX_REMARK;","lastModifiedDate":"2021-10-12"},{"lineNumber":6,"author":{"gitId":"EssWhyy"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":7,"author":{"gitId":"EssWhyy"},"content":"import socialite.commons.core.index.Index;","lastModifiedDate":"2021-10-12"},{"lineNumber":8,"author":{"gitId":"EssWhyy"},"content":"import socialite.commons.exceptions.IllegalValueException;","lastModifiedDate":"2021-10-12"},{"lineNumber":9,"author":{"gitId":"EssWhyy"},"content":"import socialite.logic.commands.RemarkCommand;","lastModifiedDate":"2021-10-12"},{"lineNumber":10,"author":{"gitId":"EssWhyy"},"content":"import socialite.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-10-12"},{"lineNumber":11,"author":{"gitId":"EssWhyy"},"content":"import socialite.model.person.Remark;","lastModifiedDate":"2021-10-12"},{"lineNumber":12,"author":{"gitId":"EssWhyy"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":13,"author":{"gitId":"EssWhyy"},"content":"/**","lastModifiedDate":"2021-10-12"},{"lineNumber":14,"author":{"gitId":"EssWhyy"},"content":" * Parses input arguments and creates a new {@code RemarkCommand} object","lastModifiedDate":"2021-10-12"},{"lineNumber":15,"author":{"gitId":"EssWhyy"},"content":" */","lastModifiedDate":"2021-10-12"},{"lineNumber":16,"author":{"gitId":"EssWhyy"},"content":"public class RemarkCommandParser implements Parser\u003cRemarkCommand\u003e {","lastModifiedDate":"2021-10-12"},{"lineNumber":17,"author":{"gitId":"EssWhyy"},"content":"    /**","lastModifiedDate":"2021-10-12"},{"lineNumber":18,"author":{"gitId":"EssWhyy"},"content":"     * Parses the given {@code String} of arguments in the context of the {@code RemarkCommand}","lastModifiedDate":"2021-10-12"},{"lineNumber":19,"author":{"gitId":"EssWhyy"},"content":"     * and returns a {@code RemarkCommand} object for execution.","lastModifiedDate":"2021-10-12"},{"lineNumber":20,"author":{"gitId":"EssWhyy"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2021-10-12"},{"lineNumber":21,"author":{"gitId":"EssWhyy"},"content":"     */","lastModifiedDate":"2021-10-12"},{"lineNumber":22,"author":{"gitId":"EssWhyy"},"content":"    public RemarkCommand parse(String args) throws ParseException {","lastModifiedDate":"2021-10-12"},{"lineNumber":23,"author":{"gitId":"EssWhyy"},"content":"        requireNonNull(args);","lastModifiedDate":"2021-10-12"},{"lineNumber":24,"author":{"gitId":"EssWhyy"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(args, PREFIX_REMARK);","lastModifiedDate":"2021-10-12"},{"lineNumber":25,"author":{"gitId":"EssWhyy"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":26,"author":{"gitId":"EssWhyy"},"content":"        Index index;","lastModifiedDate":"2021-10-12"},{"lineNumber":27,"author":{"gitId":"EssWhyy"},"content":"        try {","lastModifiedDate":"2021-10-12"},{"lineNumber":28,"author":{"gitId":"EssWhyy"},"content":"            index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2021-10-12"},{"lineNumber":29,"author":{"gitId":"EssWhyy"},"content":"        } catch (IllegalValueException ive) {","lastModifiedDate":"2021-10-12"},{"lineNumber":30,"author":{"gitId":"stanley-1"},"content":"            throw new ParseException(String.format(","lastModifiedDate":"2021-10-20"},{"lineNumber":31,"author":{"gitId":"stanley-1"},"content":"                    MESSAGE_INVALID_COMMAND_FORMAT, RemarkCommand.MESSAGE_HELP_GUIDE), ive);","lastModifiedDate":"2021-10-20"},{"lineNumber":32,"author":{"gitId":"EssWhyy"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":33,"author":{"gitId":"EssWhyy"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":34,"author":{"gitId":"david-eom"},"content":"        Remark remark \u003d ParserUtil.parseRemark(argMultimap.getValue(PREFIX_REMARK).orElse(null));","lastModifiedDate":"2021-10-22"},{"lineNumber":35,"author":{"gitId":"EssWhyy"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":36,"author":{"gitId":"david-eom"},"content":"        return new RemarkCommand(index, remark);","lastModifiedDate":"2021-10-22"},{"lineNumber":37,"author":{"gitId":"EssWhyy"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":38,"author":{"gitId":"EssWhyy"},"content":"}","lastModifiedDate":"2021-10-12"}],"authorContributionMap":{"EssWhyy":34,"david-eom":2,"stanley-1":2}},{"path":"src/main/java/socialite/logic/parser/ShareCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"david-eom"},"content":"package socialite.logic.parser;","lastModifiedDate":"2021-10-25"},{"lineNumber":2,"author":{"gitId":"david-eom"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":3,"author":{"gitId":"david-eom"},"content":"import socialite.commons.core.Messages;","lastModifiedDate":"2021-10-25"},{"lineNumber":4,"author":{"gitId":"david-eom"},"content":"import socialite.commons.core.index.Index;","lastModifiedDate":"2021-10-25"},{"lineNumber":5,"author":{"gitId":"david-eom"},"content":"import socialite.logic.commands.ShareCommand;","lastModifiedDate":"2021-10-25"},{"lineNumber":6,"author":{"gitId":"david-eom"},"content":"import socialite.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-10-25"},{"lineNumber":7,"author":{"gitId":"david-eom"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":8,"author":{"gitId":"david-eom"},"content":"/**","lastModifiedDate":"2021-10-25"},{"lineNumber":9,"author":{"gitId":"david-eom"},"content":" * Parses input arguments and creates a new ShareCommand object","lastModifiedDate":"2021-10-25"},{"lineNumber":10,"author":{"gitId":"david-eom"},"content":" */","lastModifiedDate":"2021-10-25"},{"lineNumber":11,"author":{"gitId":"david-eom"},"content":"public class ShareCommandParser implements Parser\u003cShareCommand\u003e {","lastModifiedDate":"2021-10-25"},{"lineNumber":12,"author":{"gitId":"david-eom"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":13,"author":{"gitId":"david-eom"},"content":"    /**","lastModifiedDate":"2021-10-25"},{"lineNumber":14,"author":{"gitId":"david-eom"},"content":"     * Parses the given {@code String} of arguments in the context of the ShareCommand","lastModifiedDate":"2021-10-25"},{"lineNumber":15,"author":{"gitId":"david-eom"},"content":"     * @throws ParseException if the user input does not conform with the expected format","lastModifiedDate":"2021-10-27"},{"lineNumber":16,"author":{"gitId":"david-eom"},"content":"     */","lastModifiedDate":"2021-10-25"},{"lineNumber":17,"author":{"gitId":"david-eom"},"content":"    public ShareCommand parse(String args) throws ParseException {","lastModifiedDate":"2021-10-25"},{"lineNumber":18,"author":{"gitId":"david-eom"},"content":"        try {","lastModifiedDate":"2021-10-25"},{"lineNumber":19,"author":{"gitId":"david-eom"},"content":"            Index index \u003d ParserUtil.parseIndex(args);","lastModifiedDate":"2021-10-25"},{"lineNumber":20,"author":{"gitId":"david-eom"},"content":"            return new ShareCommand(index);","lastModifiedDate":"2021-10-25"},{"lineNumber":21,"author":{"gitId":"david-eom"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2021-10-25"},{"lineNumber":22,"author":{"gitId":"david-eom"},"content":"            throw new ParseException(","lastModifiedDate":"2021-10-25"},{"lineNumber":23,"author":{"gitId":"david-eom"},"content":"                    String.format(Messages.MESSAGE_INVALID_COMMAND_FORMAT, ShareCommand.MESSAGE_HELP_GUIDE), pe);","lastModifiedDate":"2021-10-25"},{"lineNumber":24,"author":{"gitId":"david-eom"},"content":"        }","lastModifiedDate":"2021-10-25"},{"lineNumber":25,"author":{"gitId":"david-eom"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":26,"author":{"gitId":"david-eom"},"content":"}","lastModifiedDate":"2021-10-25"}],"authorContributionMap":{"david-eom":26}},{"path":"src/main/java/socialite/logic/parser/UnpinCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"david-eom"},"content":"package socialite.logic.parser;","lastModifiedDate":"2021-10-29"},{"lineNumber":2,"author":{"gitId":"david-eom"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":3,"author":{"gitId":"david-eom"},"content":"import socialite.commons.core.Messages;","lastModifiedDate":"2021-10-29"},{"lineNumber":4,"author":{"gitId":"david-eom"},"content":"import socialite.commons.core.index.Index;","lastModifiedDate":"2021-10-29"},{"lineNumber":5,"author":{"gitId":"david-eom"},"content":"import socialite.logic.commands.UnpinCommand;","lastModifiedDate":"2021-10-29"},{"lineNumber":6,"author":{"gitId":"david-eom"},"content":"import socialite.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-10-29"},{"lineNumber":7,"author":{"gitId":"david-eom"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":8,"author":{"gitId":"david-eom"},"content":"/**","lastModifiedDate":"2021-10-29"},{"lineNumber":9,"author":{"gitId":"david-eom"},"content":" * Parses input arguments and creates a new PinCommand object","lastModifiedDate":"2021-10-29"},{"lineNumber":10,"author":{"gitId":"david-eom"},"content":" */","lastModifiedDate":"2021-10-29"},{"lineNumber":11,"author":{"gitId":"david-eom"},"content":"public class UnpinCommandParser implements Parser\u003cUnpinCommand\u003e {","lastModifiedDate":"2021-10-29"},{"lineNumber":12,"author":{"gitId":"david-eom"},"content":"    /**","lastModifiedDate":"2021-10-29"},{"lineNumber":13,"author":{"gitId":"david-eom"},"content":"     * Parses the given {@code String} of arguments in the context of the UnpinCommand","lastModifiedDate":"2021-10-29"},{"lineNumber":14,"author":{"gitId":"david-eom"},"content":"     * and returns a UnpinCommand object for execution.","lastModifiedDate":"2021-10-29"},{"lineNumber":15,"author":{"gitId":"david-eom"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2021-10-29"},{"lineNumber":16,"author":{"gitId":"david-eom"},"content":"     */","lastModifiedDate":"2021-10-29"},{"lineNumber":17,"author":{"gitId":"david-eom"},"content":"    public UnpinCommand parse(String args) throws ParseException {","lastModifiedDate":"2021-10-29"},{"lineNumber":18,"author":{"gitId":"david-eom"},"content":"        try {","lastModifiedDate":"2021-10-29"},{"lineNumber":19,"author":{"gitId":"david-eom"},"content":"            Index index \u003d ParserUtil.parseIndex(args);","lastModifiedDate":"2021-10-29"},{"lineNumber":20,"author":{"gitId":"david-eom"},"content":"            return new UnpinCommand(index);","lastModifiedDate":"2021-10-29"},{"lineNumber":21,"author":{"gitId":"david-eom"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2021-10-29"},{"lineNumber":22,"author":{"gitId":"david-eom"},"content":"            throw new ParseException(","lastModifiedDate":"2021-10-29"},{"lineNumber":23,"author":{"gitId":"david-eom"},"content":"                    String.format(Messages.MESSAGE_INVALID_COMMAND_FORMAT, UnpinCommand.MESSAGE_HELP_GUIDE), pe);","lastModifiedDate":"2021-10-29"},{"lineNumber":24,"author":{"gitId":"david-eom"},"content":"        }","lastModifiedDate":"2021-10-29"},{"lineNumber":25,"author":{"gitId":"david-eom"},"content":"    }","lastModifiedDate":"2021-10-29"},{"lineNumber":26,"author":{"gitId":"david-eom"},"content":"}","lastModifiedDate":"2021-10-29"}],"authorContributionMap":{"david-eom":26}},{"path":"src/main/java/socialite/logic/parser/exceptions/ParseException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"david-eom"},"content":"package socialite.logic.parser.exceptions;","lastModifiedDate":"2021-10-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":3,"author":{"gitId":"david-eom"},"content":"import socialite.commons.exceptions.IllegalValueException;","lastModifiedDate":"2021-10-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-03-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Represents a parse error encountered by a parser.","lastModifiedDate":"2017-03-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-03-11"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class ParseException extends IllegalValueException {","lastModifiedDate":"2017-03-11"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public ParseException(String message) {","lastModifiedDate":"2017-03-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"        super(message);","lastModifiedDate":"2017-03-11"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public ParseException(String message, Throwable cause) {","lastModifiedDate":"2017-03-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        super(message, cause);","lastModifiedDate":"2017-03-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-11"}],"authorContributionMap":{"david-eom":2,"-":15}},{"path":"src/main/java/socialite/model/AddressBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"david-eom"},"content":"package socialite.model;","lastModifiedDate":"2021-10-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"david-eom"},"content":"import socialite.model.person.Person;","lastModifiedDate":"2021-10-08"},{"lineNumber":9,"author":{"gitId":"david-eom"},"content":"import socialite.model.person.UniquePersonList;","lastModifiedDate":"2021-10-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Wraps all data at the address-book level","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * Duplicates are not allowed (by .isSamePerson comparison)","lastModifiedDate":"2018-04-19"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class AddressBook implements ReadOnlyAddressBook {","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private final UniquePersonList persons;","lastModifiedDate":"2016-08-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2016-10-19"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * The \u0027unusual\u0027 code block below is a non-static initialization block, sometimes used to avoid duplication","lastModifiedDate":"2019-05-11"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * between constructors. See https://docs.oracle.com/javase/tutorial/java/javaOO/initial.html","lastModifiedDate":"2016-10-19"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-19"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Note that non-static init blocks are not recommended to use. There are other ways to avoid duplication","lastModifiedDate":"2016-10-19"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     *   among constructors.","lastModifiedDate":"2016-10-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    {","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        persons \u003d new UniquePersonList();","lastModifiedDate":"2016-08-26"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public AddressBook() {}","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Creates an AddressBook using the Persons in the {@code toBeCopied}","lastModifiedDate":"2018-03-29"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public AddressBook(ReadOnlyAddressBook toBeCopied) {","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        this();","lastModifiedDate":"2016-12-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        resetData(toBeCopied);","lastModifiedDate":"2016-12-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    //// list overwrite operations","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * Replaces the contents of the person list with {@code persons}.","lastModifiedDate":"2018-08-07"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     * {@code persons} must not contain duplicate persons.","lastModifiedDate":"2018-08-07"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public void setPersons(List\u003cPerson\u003e persons) {","lastModifiedDate":"2018-08-07"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        this.persons.setPersons(persons);","lastModifiedDate":"2016-10-19"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     * Resets the existing data of this {@code AddressBook} with {@code newData}.","lastModifiedDate":"2017-08-16"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public void resetData(ReadOnlyAddressBook newData) {","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        requireNonNull(newData);","lastModifiedDate":"2017-05-15"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-20"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        setPersons(newData.getPersonList());","lastModifiedDate":"2018-03-29"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    //// person-level operations","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * Returns true if a person with the same identity as {@code person} exists in the address book.","lastModifiedDate":"2018-08-06"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-06"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        requireNonNull(person);","lastModifiedDate":"2018-08-06"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        return persons.contains(person);","lastModifiedDate":"2018-08-06"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     * Adds a person to the address book.","lastModifiedDate":"2016-09-21"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     * The person must not already exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public void addPerson(Person p) {","lastModifiedDate":"2018-08-07"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        persons.add(p);","lastModifiedDate":"2018-03-29"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"     * Replaces the given person {@code target} in the list with {@code editedPerson}.","lastModifiedDate":"2018-01-10"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * {@code target} must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * The person identity of {@code editedPerson} must not be the same as another existing person in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-17"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        requireNonNull(editedPerson);","lastModifiedDate":"2018-01-10"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        persons.setPerson(target, editedPerson);","lastModifiedDate":"2018-03-29"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     * Removes {@code key} from this {@code AddressBook}.","lastModifiedDate":"2017-08-16"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     * {@code key} must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    public void removePerson(Person key) {","lastModifiedDate":"2018-08-07"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        persons.remove(key);","lastModifiedDate":"2018-02-28"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":96,"author":{"gitId":"david-eom"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":97,"author":{"gitId":"david-eom"},"content":"    /**","lastModifiedDate":"2021-10-29"},{"lineNumber":98,"author":{"gitId":"david-eom"},"content":"     * Sorts the entries in the {@code AddressBook} by pinned status first, and then alphabetically","lastModifiedDate":"2021-10-29"},{"lineNumber":99,"author":{"gitId":"david-eom"},"content":"     * according to the full name.","lastModifiedDate":"2021-10-29"},{"lineNumber":100,"author":{"gitId":"david-eom"},"content":"     */","lastModifiedDate":"2021-10-29"},{"lineNumber":101,"author":{"gitId":"david-eom"},"content":"    public void sortPersons() {","lastModifiedDate":"2021-10-29"},{"lineNumber":102,"author":{"gitId":"david-eom"},"content":"        persons.sortPersons();","lastModifiedDate":"2021-10-29"},{"lineNumber":103,"author":{"gitId":"david-eom"},"content":"    }","lastModifiedDate":"2021-10-29"},{"lineNumber":104,"author":{"gitId":"david-eom"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":105,"author":{"gitId":"david-eom"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    //// util methods","lastModifiedDate":"2016-08-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-08"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        return persons.asUnmodifiableObservableList().size() + \" persons\";","lastModifiedDate":"2018-04-05"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        // TODO: refine later","lastModifiedDate":"2016-08-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e getPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        return persons.asUnmodifiableObservableList();","lastModifiedDate":"2018-04-05"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-01"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-01"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-21"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-09-21"},{"lineNumber":122,"author":{"gitId":"-"},"content":"                || (other instanceof AddressBook // instanceof handles nulls","lastModifiedDate":"2016-09-21"},{"lineNumber":123,"author":{"gitId":"-"},"content":"                \u0026\u0026 persons.equals(((AddressBook) other).persons));","lastModifiedDate":"2018-08-14"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-21"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        return persons.hashCode();","lastModifiedDate":"2018-03-29"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":130,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"david-eom":13,"-":117}},{"path":"src/main/java/socialite/model/CommandHistory.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"david-eom"},"content":"package socialite.model;","lastModifiedDate":"2021-10-21"},{"lineNumber":2,"author":{"gitId":"david-eom"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":3,"author":{"gitId":"david-eom"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-21"},{"lineNumber":4,"author":{"gitId":"david-eom"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":5,"author":{"gitId":"david-eom"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-21"},{"lineNumber":6,"author":{"gitId":"david-eom"},"content":"import java.util.List;","lastModifiedDate":"2021-10-21"},{"lineNumber":7,"author":{"gitId":"david-eom"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":8,"author":{"gitId":"david-eom"},"content":"public class CommandHistory implements ReadOnlyCommandHistory {","lastModifiedDate":"2021-10-21"},{"lineNumber":9,"author":{"gitId":"david-eom"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":10,"author":{"gitId":"david-eom"},"content":"    private List\u003cString\u003e history;","lastModifiedDate":"2021-10-21"},{"lineNumber":11,"author":{"gitId":"david-eom"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":12,"author":{"gitId":"david-eom"},"content":"    /*","lastModifiedDate":"2021-10-22"},{"lineNumber":13,"author":{"gitId":"david-eom"},"content":"     * This non-static initialization block logic is copied over from AddressBook to avoid duplication","lastModifiedDate":"2021-10-22"},{"lineNumber":14,"author":{"gitId":"david-eom"},"content":"     * between constructors.","lastModifiedDate":"2021-10-22"},{"lineNumber":15,"author":{"gitId":"david-eom"},"content":"     */","lastModifiedDate":"2021-10-22"},{"lineNumber":16,"author":{"gitId":"david-eom"},"content":"    {","lastModifiedDate":"2021-10-21"},{"lineNumber":17,"author":{"gitId":"david-eom"},"content":"        history \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-21"},{"lineNumber":18,"author":{"gitId":"david-eom"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":19,"author":{"gitId":"david-eom"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":20,"author":{"gitId":"david-eom"},"content":"    public CommandHistory() {}","lastModifiedDate":"2021-10-21"},{"lineNumber":21,"author":{"gitId":"david-eom"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":22,"author":{"gitId":"david-eom"},"content":"    /**","lastModifiedDate":"2021-10-21"},{"lineNumber":23,"author":{"gitId":"david-eom"},"content":"     * Creates a CommandHistory using the commands in the {@code toBeCopied}.","lastModifiedDate":"2021-10-21"},{"lineNumber":24,"author":{"gitId":"david-eom"},"content":"     */","lastModifiedDate":"2021-10-21"},{"lineNumber":25,"author":{"gitId":"david-eom"},"content":"    public CommandHistory(ReadOnlyCommandHistory toBeCopied) {","lastModifiedDate":"2021-10-21"},{"lineNumber":26,"author":{"gitId":"david-eom"},"content":"        this();","lastModifiedDate":"2021-10-21"},{"lineNumber":27,"author":{"gitId":"david-eom"},"content":"        resetData(toBeCopied);","lastModifiedDate":"2021-10-21"},{"lineNumber":28,"author":{"gitId":"david-eom"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":29,"author":{"gitId":"david-eom"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":30,"author":{"gitId":"david-eom"},"content":"    /**","lastModifiedDate":"2021-10-21"},{"lineNumber":31,"author":{"gitId":"david-eom"},"content":"     * Resets the existing data of this {@code CommandHistory} with {@code newData}.","lastModifiedDate":"2021-10-21"},{"lineNumber":32,"author":{"gitId":"david-eom"},"content":"     */","lastModifiedDate":"2021-10-21"},{"lineNumber":33,"author":{"gitId":"david-eom"},"content":"    public void resetData(ReadOnlyCommandHistory newData) {","lastModifiedDate":"2021-10-21"},{"lineNumber":34,"author":{"gitId":"david-eom"},"content":"        requireNonNull(newData);","lastModifiedDate":"2021-10-21"},{"lineNumber":35,"author":{"gitId":"david-eom"},"content":"        this.history \u003d newData.getCommandHistory();","lastModifiedDate":"2021-10-21"},{"lineNumber":36,"author":{"gitId":"david-eom"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":37,"author":{"gitId":"david-eom"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":38,"author":{"gitId":"david-eom"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":39,"author":{"gitId":"david-eom"},"content":"    public void addCommand(String command) {","lastModifiedDate":"2021-10-21"},{"lineNumber":40,"author":{"gitId":"david-eom"},"content":"        history.add(command);","lastModifiedDate":"2021-10-21"},{"lineNumber":41,"author":{"gitId":"david-eom"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":42,"author":{"gitId":"david-eom"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":43,"author":{"gitId":"david-eom"},"content":"    @Override","lastModifiedDate":"2021-10-21"},{"lineNumber":44,"author":{"gitId":"david-eom"},"content":"    public List\u003cString\u003e getCommandHistory() {","lastModifiedDate":"2021-10-21"},{"lineNumber":45,"author":{"gitId":"david-eom"},"content":"        return history;","lastModifiedDate":"2021-10-21"},{"lineNumber":46,"author":{"gitId":"david-eom"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":47,"author":{"gitId":"david-eom"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":48,"author":{"gitId":"david-eom"},"content":"    @Override","lastModifiedDate":"2021-10-21"},{"lineNumber":49,"author":{"gitId":"david-eom"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-21"},{"lineNumber":50,"author":{"gitId":"david-eom"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-10-21"},{"lineNumber":51,"author":{"gitId":"david-eom"},"content":"                || (other instanceof CommandHistory) // instanceof handles nulls","lastModifiedDate":"2021-10-21"},{"lineNumber":52,"author":{"gitId":"david-eom"},"content":"                \u0026\u0026 history.equals(((CommandHistory) other).history);","lastModifiedDate":"2021-10-21"},{"lineNumber":53,"author":{"gitId":"david-eom"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":54,"author":{"gitId":"david-eom"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":55,"author":{"gitId":"david-eom"},"content":"    @Override","lastModifiedDate":"2021-10-21"},{"lineNumber":56,"author":{"gitId":"david-eom"},"content":"    public String toString() {","lastModifiedDate":"2021-10-21"},{"lineNumber":57,"author":{"gitId":"david-eom"},"content":"        return this.history.toString();","lastModifiedDate":"2021-10-21"},{"lineNumber":58,"author":{"gitId":"david-eom"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":59,"author":{"gitId":"david-eom"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":60,"author":{"gitId":"david-eom"},"content":"    @Override","lastModifiedDate":"2021-10-21"},{"lineNumber":61,"author":{"gitId":"david-eom"},"content":"    public int hashCode() {","lastModifiedDate":"2021-10-21"},{"lineNumber":62,"author":{"gitId":"david-eom"},"content":"        return history.hashCode();","lastModifiedDate":"2021-10-21"},{"lineNumber":63,"author":{"gitId":"david-eom"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":64,"author":{"gitId":"david-eom"},"content":"}","lastModifiedDate":"2021-10-21"}],"authorContributionMap":{"david-eom":64}},{"path":"src/main/java/socialite/model/Model.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"david-eom"},"content":"package socialite.model;","lastModifiedDate":"2021-10-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"Zacchua"},"content":"import java.io.File;","lastModifiedDate":"2021-10-26"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":8,"author":{"gitId":"david-eom"},"content":"import socialite.commons.core.GuiSettings;","lastModifiedDate":"2021-10-08"},{"lineNumber":9,"author":{"gitId":"david-eom"},"content":"import socialite.model.person.Person;","lastModifiedDate":"2021-10-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * The API of the Model component.","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public interface Model {","lastModifiedDate":"2016-09-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    /** {@code Predicate} that always evaluate to true */","lastModifiedDate":"2017-08-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    Predicate\u003cPerson\u003e PREDICATE_SHOW_ALL_PERSONS \u003d unused -\u003e true;","lastModifiedDate":"2018-01-10"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * Replaces user prefs data with the data in {@code userPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    void setUserPrefs(ReadOnlyUserPrefs userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Returns the user prefs.","lastModifiedDate":"2018-11-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    ReadOnlyUserPrefs getUserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Sets the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    void setGuiSettings(GuiSettings guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 address book file path.","lastModifiedDate":"2018-11-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    Path getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     * Sets the user prefs\u0027 address book file path.","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    void setAddressBookFilePath(Path addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     * Replaces address book data with the data in {@code addressBook}.","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    void setAddressBook(ReadOnlyAddressBook addressBook);","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    /** Returns the AddressBook */","lastModifiedDate":"2016-09-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    ReadOnlyAddressBook getAddressBook();","lastModifiedDate":"2016-09-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     * Returns true if a person with the same identity as {@code person} exists in the address book.","lastModifiedDate":"2018-08-06"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    boolean hasPerson(Person person);","lastModifiedDate":"2018-08-06"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * Deletes the given person.","lastModifiedDate":"2018-08-07"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * The person must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    void deletePerson(Person target);","lastModifiedDate":"2018-08-07"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     * Adds the given person.","lastModifiedDate":"2018-08-07"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     * {@code person} must not already exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    void addPerson(Person person);","lastModifiedDate":"2018-08-07"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     * Replaces the given person {@code target} with {@code editedPerson}.","lastModifiedDate":"2017-06-07"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     * {@code target} must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     * The person identity of {@code editedPerson} must not be the same as another existing person in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    void setPerson(Person target, Person editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    /** Returns an unmodifiable view of the filtered person list */","lastModifiedDate":"2017-09-01"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    ObservableList\u003cPerson\u003e getFilteredPersonList();","lastModifiedDate":"2018-01-10"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-05"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     * Updates the filter of the filtered person list to filter by the given {@code predicate}.","lastModifiedDate":"2017-08-05"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     * @throws NullPointerException if {@code predicate} is null.","lastModifiedDate":"2017-08-05"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-05"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate);","lastModifiedDate":"2018-01-10"},{"lineNumber":88,"author":{"gitId":"david-eom"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":89,"author":{"gitId":"david-eom"},"content":"    /** Returns an unmodifiable command history that the user has entered so far */","lastModifiedDate":"2021-10-21"},{"lineNumber":90,"author":{"gitId":"david-eom"},"content":"    ReadOnlyCommandHistory getCommandHistory();","lastModifiedDate":"2021-10-21"},{"lineNumber":91,"author":{"gitId":"david-eom"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":92,"author":{"gitId":"david-eom"},"content":"    /**","lastModifiedDate":"2021-10-21"},{"lineNumber":93,"author":{"gitId":"david-eom"},"content":"     * Adds the given command to the command history.","lastModifiedDate":"2021-10-21"},{"lineNumber":94,"author":{"gitId":"david-eom"},"content":"     */","lastModifiedDate":"2021-10-21"},{"lineNumber":95,"author":{"gitId":"david-eom"},"content":"    void addCommandToHistory(String command);","lastModifiedDate":"2021-10-22"},{"lineNumber":96,"author":{"gitId":"Zacchua"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":97,"author":{"gitId":"Zacchua"},"content":"    void deleteProfilePicture(Path name);","lastModifiedDate":"2021-10-26"},{"lineNumber":98,"author":{"gitId":"Zacchua"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":99,"author":{"gitId":"Zacchua"},"content":"    void saveProfilePicture(File file, String prefix);","lastModifiedDate":"2021-10-26"},{"lineNumber":100,"author":{"gitId":"Zacchua"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":101,"author":{"gitId":"Zacchua"},"content":"    ProfilePictureSyncModel.ProfilePictureEditDescriptor getProfilePictureEditDescriptor();","lastModifiedDate":"2021-10-27"},{"lineNumber":102,"author":{"gitId":"Zacchua"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":103,"author":{"gitId":"Zacchua"},"content":"    void clearProfilePictureModel();","lastModifiedDate":"2021-10-27"},{"lineNumber":104,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"Zacchua":9,"david-eom":11,"-":84}},{"path":"src/main/java/socialite/model/ModelManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"david-eom"},"content":"package socialite.model;","lastModifiedDate":"2021-10-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-08-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"Zacchua"},"content":"import java.io.File;","lastModifiedDate":"2021-10-26"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.collections.transformation.FilteredList;","lastModifiedDate":"2016-08-26"},{"lineNumber":12,"author":{"gitId":"david-eom"},"content":"import socialite.commons.core.GuiSettings;","lastModifiedDate":"2021-10-08"},{"lineNumber":13,"author":{"gitId":"david-eom"},"content":"import socialite.commons.core.LogsCenter;","lastModifiedDate":"2021-10-08"},{"lineNumber":14,"author":{"gitId":"david-eom"},"content":"import socialite.commons.util.CollectionUtil;","lastModifiedDate":"2021-10-08"},{"lineNumber":15,"author":{"gitId":"david-eom"},"content":"import socialite.model.person.Person;","lastModifiedDate":"2021-10-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * Represents the in-memory model of the address book data.","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class ModelManager implements Model {","lastModifiedDate":"2018-12-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(ModelManager.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private final AddressBook addressBook;","lastModifiedDate":"2019-01-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private final UserPrefs userPrefs;","lastModifiedDate":"2018-12-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private final FilteredList\u003cPerson\u003e filteredPersons;","lastModifiedDate":"2018-01-10"},{"lineNumber":26,"author":{"gitId":"david-eom"},"content":"    private final CommandHistory commandHistory;","lastModifiedDate":"2021-10-21"},{"lineNumber":27,"author":{"gitId":"Zacchua"},"content":"    private final ProfilePictureSyncModel profilePictureSyncModel;","lastModifiedDate":"2021-10-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"david-eom"},"content":"     * Initializes a ModelManager with the given addressBook, userPrefs and commandHistory.","lastModifiedDate":"2021-10-22"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"david-eom"},"content":"    public ModelManager(","lastModifiedDate":"2021-10-21"},{"lineNumber":33,"author":{"gitId":"Zacchua"},"content":"            ReadOnlyAddressBook addressBook,","lastModifiedDate":"2021-10-26"},{"lineNumber":34,"author":{"gitId":"Zacchua"},"content":"            ReadOnlyUserPrefs userPrefs,","lastModifiedDate":"2021-10-26"},{"lineNumber":35,"author":{"gitId":"Zacchua"},"content":"            ReadOnlyCommandHistory commandHistory) {","lastModifiedDate":"2021-10-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        super();","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"david-eom"},"content":"        CollectionUtil.requireAllNonNull(addressBook, userPrefs);","lastModifiedDate":"2021-10-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        this.addressBook \u003d new AddressBook(addressBook);","lastModifiedDate":"2019-01-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        this.userPrefs \u003d new UserPrefs(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        filteredPersons \u003d new FilteredList\u003c\u003e(this.addressBook.getPersonList());","lastModifiedDate":"2019-01-25"},{"lineNumber":42,"author":{"gitId":"david-eom"},"content":"        this.commandHistory \u003d new CommandHistory(commandHistory);","lastModifiedDate":"2021-10-21"},{"lineNumber":43,"author":{"gitId":"Zacchua"},"content":"        this.profilePictureSyncModel \u003d new ProfilePictureSyncModel();","lastModifiedDate":"2021-10-27"},{"lineNumber":44,"author":{"gitId":"Zacchua"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":45,"author":{"gitId":"david-eom"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":46,"author":{"gitId":"david-eom"},"content":"        logger.fine(\"Initializing with:\"","lastModifiedDate":"2021-10-21"},{"lineNumber":47,"author":{"gitId":"david-eom"},"content":"                + \"\\naddress book: \" + addressBook","lastModifiedDate":"2021-10-21"},{"lineNumber":48,"author":{"gitId":"david-eom"},"content":"                + \"\\nuser prefs: \" + userPrefs","lastModifiedDate":"2021-10-21"},{"lineNumber":49,"author":{"gitId":"david-eom"},"content":"                + \"\\ncommand history: \" + commandHistory);","lastModifiedDate":"2021-10-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public ModelManager() {","lastModifiedDate":"2016-09-22"},{"lineNumber":53,"author":{"gitId":"Zacchua"},"content":"        this(new AddressBook(), new UserPrefs(), new CommandHistory());","lastModifiedDate":"2021-10-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d UserPrefs \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2018-11-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        requireNonNull(userPrefs);","lastModifiedDate":"2018-11-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        this.userPrefs.resetData(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2018-11-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        return userPrefs;","lastModifiedDate":"2018-11-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        return userPrefs.getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        requireNonNull(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        return userPrefs.getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2018-11-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        requireNonNull(addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        userPrefs.setAddressBookFilePath(addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d AddressBook \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2018-11-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    public void setAddressBook(ReadOnlyAddressBook addressBook) {","lastModifiedDate":"2018-11-27"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        this.addressBook.resetData(addressBook);","lastModifiedDate":"2019-01-25"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2016-09-21"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        return addressBook;","lastModifiedDate":"2019-01-25"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-08-06"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-15"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        requireNonNull(person);","lastModifiedDate":"2018-08-06"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        return addressBook.hasPerson(person);","lastModifiedDate":"2019-01-25"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    public void deletePerson(Person target) {","lastModifiedDate":"2018-08-15"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        addressBook.removePerson(target);","lastModifiedDate":"2019-01-25"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    public void addPerson(Person person) {","lastModifiedDate":"2018-08-15"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        addressBook.addPerson(person);","lastModifiedDate":"2019-01-25"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2017-08-05"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-26"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-26"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-13"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-17"},{"lineNumber":122,"author":{"gitId":"david-eom"},"content":"        CollectionUtil.requireAllNonNull(target, editedPerson);","lastModifiedDate":"2021-10-08"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        addressBook.setPerson(target, editedPerson);","lastModifiedDate":"2019-01-25"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-13"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Filtered Person List Accessors \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2016-10-12"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-19"},{"lineNumber":130,"author":{"gitId":"-"},"content":"     * Returns an unmodifiable view of the list of {@code Person} backed by the internal list of","lastModifiedDate":"2018-01-10"},{"lineNumber":131,"author":{"gitId":"-"},"content":"     * {@code versionedAddressBook}","lastModifiedDate":"2018-06-11"},{"lineNumber":132,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-19"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        return filteredPersons;","lastModifiedDate":"2018-12-09"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    public void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate) {","lastModifiedDate":"2018-01-10"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        requireNonNull(predicate);","lastModifiedDate":"2017-08-05"},{"lineNumber":141,"author":{"gitId":"david-eom"},"content":"        // Sort the address book","lastModifiedDate":"2021-10-29"},{"lineNumber":142,"author":{"gitId":"david-eom"},"content":"        addressBook.sortPersons();","lastModifiedDate":"2021-10-29"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        filteredPersons.setPredicate(predicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":146,"author":{"gitId":"david-eom"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Command History \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2021-10-21"},{"lineNumber":147,"author":{"gitId":"david-eom"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":148,"author":{"gitId":"david-eom"},"content":"    @Override","lastModifiedDate":"2021-10-21"},{"lineNumber":149,"author":{"gitId":"david-eom"},"content":"    public CommandHistory getCommandHistory() {","lastModifiedDate":"2021-10-21"},{"lineNumber":150,"author":{"gitId":"david-eom"},"content":"        return commandHistory;","lastModifiedDate":"2021-10-21"},{"lineNumber":151,"author":{"gitId":"david-eom"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":152,"author":{"gitId":"david-eom"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":153,"author":{"gitId":"david-eom"},"content":"    @Override","lastModifiedDate":"2021-10-21"},{"lineNumber":154,"author":{"gitId":"david-eom"},"content":"    public void addCommandToHistory(String command) {","lastModifiedDate":"2021-10-22"},{"lineNumber":155,"author":{"gitId":"david-eom"},"content":"        commandHistory.addCommand(command);","lastModifiedDate":"2021-10-21"},{"lineNumber":156,"author":{"gitId":"david-eom"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":157,"author":{"gitId":"david-eom"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":158,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-31"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2017-05-31"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2017-05-31"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        if (obj \u003d\u003d this) {","lastModifiedDate":"2017-05-31"},{"lineNumber":162,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-05-31"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-31"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-05-31"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        if (!(obj instanceof ModelManager)) {","lastModifiedDate":"2017-05-31"},{"lineNumber":167,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-05-31"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-31"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2017-05-31"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        ModelManager other \u003d (ModelManager) obj;","lastModifiedDate":"2017-05-31"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        return addressBook.equals(other.addressBook)","lastModifiedDate":"2019-01-25"},{"lineNumber":173,"author":{"gitId":"-"},"content":"                \u0026\u0026 userPrefs.equals(other.userPrefs)","lastModifiedDate":"2018-11-27"},{"lineNumber":174,"author":{"gitId":"-"},"content":"                \u0026\u0026 filteredPersons.equals(other.filteredPersons);","lastModifiedDate":"2019-01-25"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":177,"author":{"gitId":"Zacchua"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Profile Picture \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2021-10-26"},{"lineNumber":178,"author":{"gitId":"Zacchua"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":179,"author":{"gitId":"Zacchua"},"content":"    @Override","lastModifiedDate":"2021-10-26"},{"lineNumber":180,"author":{"gitId":"Zacchua"},"content":"    public void deleteProfilePicture(Path name) {","lastModifiedDate":"2021-10-26"},{"lineNumber":181,"author":{"gitId":"Zacchua"},"content":"        this.profilePictureSyncModel.deleteProfilePicture(name);","lastModifiedDate":"2021-10-27"},{"lineNumber":182,"author":{"gitId":"Zacchua"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":183,"author":{"gitId":"Zacchua"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":184,"author":{"gitId":"Zacchua"},"content":"    @Override","lastModifiedDate":"2021-10-27"},{"lineNumber":185,"author":{"gitId":"Zacchua"},"content":"    public ProfilePictureSyncModel.ProfilePictureEditDescriptor getProfilePictureEditDescriptor() {","lastModifiedDate":"2021-10-27"},{"lineNumber":186,"author":{"gitId":"Zacchua"},"content":"        return this.profilePictureSyncModel.getProfilePictureEditDescriptor();","lastModifiedDate":"2021-10-27"},{"lineNumber":187,"author":{"gitId":"Zacchua"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":188,"author":{"gitId":"Zacchua"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":189,"author":{"gitId":"Zacchua"},"content":"    @Override","lastModifiedDate":"2021-10-26"},{"lineNumber":190,"author":{"gitId":"Zacchua"},"content":"    public void saveProfilePicture(File file, String name) {","lastModifiedDate":"2021-10-26"},{"lineNumber":191,"author":{"gitId":"Zacchua"},"content":"        this.profilePictureSyncModel.saveProfilePicture(file, name);","lastModifiedDate":"2021-10-27"},{"lineNumber":192,"author":{"gitId":"Zacchua"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":193,"author":{"gitId":"Zacchua"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":194,"author":{"gitId":"Zacchua"},"content":"    @Override","lastModifiedDate":"2021-10-27"},{"lineNumber":195,"author":{"gitId":"Zacchua"},"content":"    public void clearProfilePictureModel() {","lastModifiedDate":"2021-10-27"},{"lineNumber":196,"author":{"gitId":"Zacchua"},"content":"        this.profilePictureSyncModel.clear();","lastModifiedDate":"2021-10-27"},{"lineNumber":197,"author":{"gitId":"Zacchua"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":198,"author":{"gitId":"Zacchua"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":199,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"Zacchua":30,"david-eom":30,"-":139}},{"path":"src/main/java/socialite/model/ProfilePictureSyncModel.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Zacchua"},"content":"package socialite.model;","lastModifiedDate":"2021-10-27"},{"lineNumber":2,"author":{"gitId":"Zacchua"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":3,"author":{"gitId":"Zacchua"},"content":"import java.io.File;","lastModifiedDate":"2021-10-27"},{"lineNumber":4,"author":{"gitId":"Zacchua"},"content":"import java.nio.file.Path;","lastModifiedDate":"2021-10-27"},{"lineNumber":5,"author":{"gitId":"Zacchua"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":6,"author":{"gitId":"Zacchua"},"content":"public class ProfilePictureSyncModel {","lastModifiedDate":"2021-10-27"},{"lineNumber":7,"author":{"gitId":"Zacchua"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":8,"author":{"gitId":"Zacchua"},"content":"    public class ProfilePictureEditDescriptor {","lastModifiedDate":"2021-10-27"},{"lineNumber":9,"author":{"gitId":"Zacchua"},"content":"        public final Path toDelete;","lastModifiedDate":"2021-10-27"},{"lineNumber":10,"author":{"gitId":"Zacchua"},"content":"        public final String dest;","lastModifiedDate":"2021-10-27"},{"lineNumber":11,"author":{"gitId":"Zacchua"},"content":"        public final File source;","lastModifiedDate":"2021-10-27"},{"lineNumber":12,"author":{"gitId":"Zacchua"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":13,"author":{"gitId":"Zacchua"},"content":"        ProfilePictureEditDescriptor(Path toDelete, String dest, File source) {","lastModifiedDate":"2021-10-27"},{"lineNumber":14,"author":{"gitId":"Zacchua"},"content":"            this.toDelete \u003d toDelete;","lastModifiedDate":"2021-10-27"},{"lineNumber":15,"author":{"gitId":"Zacchua"},"content":"            this.dest \u003d dest;","lastModifiedDate":"2021-10-27"},{"lineNumber":16,"author":{"gitId":"Zacchua"},"content":"            this.source \u003d source;","lastModifiedDate":"2021-10-27"},{"lineNumber":17,"author":{"gitId":"Zacchua"},"content":"        }","lastModifiedDate":"2021-10-27"},{"lineNumber":18,"author":{"gitId":"Zacchua"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":19,"author":{"gitId":"Zacchua"},"content":"    private Path toDelete;","lastModifiedDate":"2021-10-27"},{"lineNumber":20,"author":{"gitId":"Zacchua"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":21,"author":{"gitId":"Zacchua"},"content":"    private String dest;","lastModifiedDate":"2021-10-27"},{"lineNumber":22,"author":{"gitId":"Zacchua"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":23,"author":{"gitId":"Zacchua"},"content":"    private File source;","lastModifiedDate":"2021-10-27"},{"lineNumber":24,"author":{"gitId":"Zacchua"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":25,"author":{"gitId":"Zacchua"},"content":"    public void deleteProfilePicture(Path name) {","lastModifiedDate":"2021-10-27"},{"lineNumber":26,"author":{"gitId":"Zacchua"},"content":"        this.toDelete \u003d name;","lastModifiedDate":"2021-10-27"},{"lineNumber":27,"author":{"gitId":"Zacchua"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":28,"author":{"gitId":"Zacchua"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":29,"author":{"gitId":"Zacchua"},"content":"    /**","lastModifiedDate":"2021-10-27"},{"lineNumber":30,"author":{"gitId":"Zacchua"},"content":"     * adds profile picture to model","lastModifiedDate":"2021-10-27"},{"lineNumber":31,"author":{"gitId":"Zacchua"},"content":"     * @param file","lastModifiedDate":"2021-10-27"},{"lineNumber":32,"author":{"gitId":"Zacchua"},"content":"     * @param name","lastModifiedDate":"2021-10-27"},{"lineNumber":33,"author":{"gitId":"Zacchua"},"content":"     */","lastModifiedDate":"2021-10-27"},{"lineNumber":34,"author":{"gitId":"Zacchua"},"content":"    public void saveProfilePicture(File file, String name) {","lastModifiedDate":"2021-10-27"},{"lineNumber":35,"author":{"gitId":"Zacchua"},"content":"        this.dest \u003d name;","lastModifiedDate":"2021-10-27"},{"lineNumber":36,"author":{"gitId":"Zacchua"},"content":"        this.source \u003d file;","lastModifiedDate":"2021-10-27"},{"lineNumber":37,"author":{"gitId":"Zacchua"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":38,"author":{"gitId":"Zacchua"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":39,"author":{"gitId":"Zacchua"},"content":"    public ProfilePictureEditDescriptor getProfilePictureEditDescriptor() {","lastModifiedDate":"2021-10-27"},{"lineNumber":40,"author":{"gitId":"Zacchua"},"content":"        return new ProfilePictureEditDescriptor(this.toDelete, this.dest, this.source);","lastModifiedDate":"2021-10-27"},{"lineNumber":41,"author":{"gitId":"Zacchua"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":42,"author":{"gitId":"Zacchua"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":43,"author":{"gitId":"Zacchua"},"content":"    /**","lastModifiedDate":"2021-10-27"},{"lineNumber":44,"author":{"gitId":"Zacchua"},"content":"     * Resets variables for next picture command","lastModifiedDate":"2021-10-27"},{"lineNumber":45,"author":{"gitId":"Zacchua"},"content":"     */","lastModifiedDate":"2021-10-27"},{"lineNumber":46,"author":{"gitId":"Zacchua"},"content":"    public void clear() {","lastModifiedDate":"2021-10-27"},{"lineNumber":47,"author":{"gitId":"Zacchua"},"content":"        dest \u003d null;","lastModifiedDate":"2021-10-27"},{"lineNumber":48,"author":{"gitId":"Zacchua"},"content":"        source \u003d null;","lastModifiedDate":"2021-10-27"},{"lineNumber":49,"author":{"gitId":"Zacchua"},"content":"        toDelete \u003d null;","lastModifiedDate":"2021-10-27"},{"lineNumber":50,"author":{"gitId":"Zacchua"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":51,"author":{"gitId":"Zacchua"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":52,"author":{"gitId":"Zacchua"},"content":"}","lastModifiedDate":"2021-10-27"}],"authorContributionMap":{"Zacchua":52}},{"path":"src/main/java/socialite/model/ReadOnlyAddressBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"david-eom"},"content":"package socialite.model;","lastModifiedDate":"2021-10-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"david-eom"},"content":"import socialite.model.person.Person;","lastModifiedDate":"2021-10-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Unmodifiable view of an address book","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public interface ReadOnlyAddressBook {","lastModifiedDate":"2019-01-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"     * Returns an unmodifiable view of the persons list.","lastModifiedDate":"2016-12-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"     * This list will not contain any duplicate persons.","lastModifiedDate":"2016-12-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    ObservableList\u003cPerson\u003e getPersonList();","lastModifiedDate":"2018-01-10"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"david-eom":2,"-":15}},{"path":"src/main/java/socialite/model/ReadOnlyCommandHistory.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"david-eom"},"content":"package socialite.model;","lastModifiedDate":"2021-10-21"},{"lineNumber":2,"author":{"gitId":"david-eom"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":3,"author":{"gitId":"david-eom"},"content":"import java.util.List;","lastModifiedDate":"2021-10-21"},{"lineNumber":4,"author":{"gitId":"david-eom"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":5,"author":{"gitId":"david-eom"},"content":"/**","lastModifiedDate":"2021-10-21"},{"lineNumber":6,"author":{"gitId":"david-eom"},"content":" * Unmodifiable view of a command history","lastModifiedDate":"2021-10-21"},{"lineNumber":7,"author":{"gitId":"david-eom"},"content":" */","lastModifiedDate":"2021-10-21"},{"lineNumber":8,"author":{"gitId":"david-eom"},"content":"public interface ReadOnlyCommandHistory {","lastModifiedDate":"2021-10-21"},{"lineNumber":9,"author":{"gitId":"david-eom"},"content":"    /**","lastModifiedDate":"2021-10-21"},{"lineNumber":10,"author":{"gitId":"david-eom"},"content":"     * Returns an immutable history of the past commands.","lastModifiedDate":"2021-10-21"},{"lineNumber":11,"author":{"gitId":"david-eom"},"content":"     */","lastModifiedDate":"2021-10-21"},{"lineNumber":12,"author":{"gitId":"david-eom"},"content":"    List\u003cString\u003e getCommandHistory();","lastModifiedDate":"2021-10-21"},{"lineNumber":13,"author":{"gitId":"david-eom"},"content":"}","lastModifiedDate":"2021-10-21"}],"authorContributionMap":{"david-eom":13}},{"path":"src/main/java/socialite/model/ReadOnlyUserPrefs.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"david-eom"},"content":"package socialite.model;","lastModifiedDate":"2021-10-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"david-eom"},"content":"import socialite.commons.core.GuiSettings;","lastModifiedDate":"2021-10-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-11-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Unmodifiable view of user prefs.","lastModifiedDate":"2018-11-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-11-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public interface ReadOnlyUserPrefs {","lastModifiedDate":"2018-11-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    Path getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":16,"author":{"gitId":"david-eom"},"content":"    Path getCommandHistoryFilePath();","lastModifiedDate":"2021-10-21"},{"lineNumber":17,"author":{"gitId":"david-eom"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-11-27"}],"authorContributionMap":{"david-eom":4,"-":14}},{"path":"src/main/java/socialite/model/UserPrefs.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"david-eom"},"content":"package socialite.model;","lastModifiedDate":"2021-10-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2016-09-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":9,"author":{"gitId":"david-eom"},"content":"import socialite.commons.core.GuiSettings;","lastModifiedDate":"2021-10-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Represents User\u0027s preferences.","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class UserPrefs implements ReadOnlyUserPrefs {","lastModifiedDate":"2018-11-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private GuiSettings guiSettings \u003d new GuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private Path addressBookFilePath \u003d Paths.get(\"data\" , \"addressbook.json\");","lastModifiedDate":"2018-11-27"},{"lineNumber":18,"author":{"gitId":"david-eom"},"content":"    private Path commandHistoryFilePath \u003d Paths.get(\"data\", \"commandhistory.json\");","lastModifiedDate":"2021-10-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-06"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * Creates a {@code UserPrefs} with default values.","lastModifiedDate":"2018-12-06"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-06"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public UserPrefs() {}","lastModifiedDate":"2018-12-06"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * Creates a {@code UserPrefs} with the prefs in {@code userPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public UserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        this();","lastModifiedDate":"2018-12-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        resetData(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-06"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Resets the existing data of this {@code UserPrefs} with {@code newUserPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-06"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public void resetData(ReadOnlyUserPrefs newUserPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        requireNonNull(newUserPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        setGuiSettings(newUserPrefs.getGuiSettings());","lastModifiedDate":"2018-12-06"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        setAddressBookFilePath(newUserPrefs.getAddressBookFilePath());","lastModifiedDate":"2018-12-06"},{"lineNumber":40,"author":{"gitId":"david-eom"},"content":"        setCommandHistoryFilePath(newUserPrefs.getCommandHistoryFilePath());","lastModifiedDate":"2021-10-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-06"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        return guiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        requireNonNull(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        this.guiSettings \u003d guiSettings;","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        return addressBookFilePath;","lastModifiedDate":"2017-02-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2018-04-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        requireNonNull(addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        this.addressBookFilePath \u003d addressBookFilePath;","lastModifiedDate":"2017-02-25"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-25"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":61,"author":{"gitId":"david-eom"},"content":"    public Path getCommandHistoryFilePath() {","lastModifiedDate":"2021-10-21"},{"lineNumber":62,"author":{"gitId":"david-eom"},"content":"        return commandHistoryFilePath;","lastModifiedDate":"2021-10-21"},{"lineNumber":63,"author":{"gitId":"david-eom"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":64,"author":{"gitId":"david-eom"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":65,"author":{"gitId":"david-eom"},"content":"    public void setCommandHistoryFilePath(Path commandHistoryFilePath) {","lastModifiedDate":"2021-10-21"},{"lineNumber":66,"author":{"gitId":"david-eom"},"content":"        requireNonNull(commandHistoryFilePath);","lastModifiedDate":"2021-10-21"},{"lineNumber":67,"author":{"gitId":"david-eom"},"content":"        this.commandHistoryFilePath \u003d commandHistoryFilePath;","lastModifiedDate":"2021-10-21"},{"lineNumber":68,"author":{"gitId":"david-eom"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":69,"author":{"gitId":"david-eom"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2016-09-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2016-09-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        if (!(other instanceof UserPrefs)) { //this handles null as well.","lastModifiedDate":"2016-09-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2016-09-24"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        UserPrefs o \u003d (UserPrefs) other;","lastModifiedDate":"2016-09-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        return guiSettings.equals(o.guiSettings)","lastModifiedDate":"2018-11-27"},{"lineNumber":82,"author":{"gitId":"david-eom"},"content":"                \u0026\u0026 addressBookFilePath.equals(o.addressBookFilePath)","lastModifiedDate":"2021-10-21"},{"lineNumber":83,"author":{"gitId":"david-eom"},"content":"                \u0026\u0026 commandHistoryFilePath.equals(o.commandHistoryFilePath);","lastModifiedDate":"2021-10-21"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-24"},{"lineNumber":88,"author":{"gitId":"david-eom"},"content":"        return Objects.hash(guiSettings, addressBookFilePath, commandHistoryFilePath);","lastModifiedDate":"2021-10-21"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-09-24"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2017-02-25"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        sb.append(\"Gui Settings : \" + guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        sb.append(\"\\nLocal data file location : \" + addressBookFilePath);","lastModifiedDate":"2017-02-25"},{"lineNumber":96,"author":{"gitId":"david-eom"},"content":"        sb.append(\"\\nCommand history file location : \" + commandHistoryFilePath);","lastModifiedDate":"2021-10-21"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2017-02-25"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":100,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"david-eom":17,"-":83}},{"path":"src/main/java/socialite/model/handle/Facebook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"stanley-1"},"content":"package socialite.model.handle;","lastModifiedDate":"2021-10-11"},{"lineNumber":2,"author":{"gitId":"stanley-1"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":3,"author":{"gitId":"Zacchua"},"content":"import java.util.Optional;","lastModifiedDate":"2021-10-14"},{"lineNumber":4,"author":{"gitId":"Zacchua"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":5,"author":{"gitId":"stanley-1"},"content":"import socialite.commons.util.AppUtil;","lastModifiedDate":"2021-10-11"},{"lineNumber":6,"author":{"gitId":"stanley-1"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":7,"author":{"gitId":"stanley-1"},"content":"/**","lastModifiedDate":"2021-10-11"},{"lineNumber":8,"author":{"gitId":"stanley-1"},"content":" * Represents a Person\u0027s Facebook username in SociaLite.","lastModifiedDate":"2021-10-11"},{"lineNumber":9,"author":{"gitId":"stanley-1"},"content":" * Guarantees: immutable; handle is valid as declared in {@link #isValidHandle(String)}","lastModifiedDate":"2021-10-11"},{"lineNumber":10,"author":{"gitId":"stanley-1"},"content":" */","lastModifiedDate":"2021-10-11"},{"lineNumber":11,"author":{"gitId":"Zacchua"},"content":"public class Facebook extends Handle {","lastModifiedDate":"2021-10-16"},{"lineNumber":12,"author":{"gitId":"stanley-1"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":13,"author":{"gitId":"stanley-1"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2021-10-11"},{"lineNumber":14,"author":{"gitId":"stanley-1"},"content":"            \"A Facebook username should only contain alphanumeric characters and full stops.\\n\"","lastModifiedDate":"2021-10-12"},{"lineNumber":15,"author":{"gitId":"stanley-1"},"content":"            + \"It must also be at least 5 characters long.\\n\"","lastModifiedDate":"2021-10-11"},{"lineNumber":16,"author":{"gitId":"stanley-1"},"content":"            + \"Furthermore, it should not contain \\\".com\\\" or \\\".net\\\"\\n\"","lastModifiedDate":"2021-10-12"},{"lineNumber":17,"author":{"gitId":"stanley-1"},"content":"            + \"https://www.facebook.com/help/105399436216001/?helpref\u003duf_share\";","lastModifiedDate":"2021-10-11"},{"lineNumber":18,"author":{"gitId":"stanley-1"},"content":"    public static final String VALIDATION_REGEX \u003d \"^([a-zA-Z0-9.](?!((\\\\.com|\\\\.net))+$)){5,}$\";","lastModifiedDate":"2021-10-12"},{"lineNumber":19,"author":{"gitId":"stanley-1"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":20,"author":{"gitId":"stanley-1"},"content":"    /**","lastModifiedDate":"2021-10-11"},{"lineNumber":21,"author":{"gitId":"stanley-1"},"content":"     * Constructs a {@code Facebook}.","lastModifiedDate":"2021-10-11"},{"lineNumber":22,"author":{"gitId":"stanley-1"},"content":"     *","lastModifiedDate":"2021-10-11"},{"lineNumber":23,"author":{"gitId":"stanley-1"},"content":"     * @param handle A valid Facebook username.","lastModifiedDate":"2021-10-11"},{"lineNumber":24,"author":{"gitId":"stanley-1"},"content":"     */","lastModifiedDate":"2021-10-11"},{"lineNumber":25,"author":{"gitId":"stanley-1"},"content":"    public Facebook(String handle) {","lastModifiedDate":"2021-10-11"},{"lineNumber":26,"author":{"gitId":"Zacchua"},"content":"        if (handle !\u003d null \u0026\u0026 !handle.equals(\"\")) {","lastModifiedDate":"2021-10-14"},{"lineNumber":27,"author":{"gitId":"stanley-1"},"content":"            AppUtil.checkArgument(isValidHandle(handle), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-11"},{"lineNumber":28,"author":{"gitId":"Zacchua"},"content":"        }","lastModifiedDate":"2021-10-14"},{"lineNumber":29,"author":{"gitId":"Zacchua"},"content":"        value \u003d Optional.ofNullable(handle);","lastModifiedDate":"2021-10-14"},{"lineNumber":30,"author":{"gitId":"stanley-1"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":31,"author":{"gitId":"stanley-1"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":32,"author":{"gitId":"stanley-1"},"content":"    /**","lastModifiedDate":"2021-10-11"},{"lineNumber":33,"author":{"gitId":"stanley-1"},"content":"     * Returns if a given input is a valid Facebook username.","lastModifiedDate":"2021-10-11"},{"lineNumber":34,"author":{"gitId":"stanley-1"},"content":"     */","lastModifiedDate":"2021-10-11"},{"lineNumber":35,"author":{"gitId":"stanley-1"},"content":"    public static boolean isValidHandle(String test) {","lastModifiedDate":"2021-10-11"},{"lineNumber":36,"author":{"gitId":"stanley-1"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2021-10-11"},{"lineNumber":37,"author":{"gitId":"stanley-1"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":38,"author":{"gitId":"stanley-1"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":39,"author":{"gitId":"Zacchua"},"content":"    @Override","lastModifiedDate":"2021-10-20"},{"lineNumber":40,"author":{"gitId":"Zacchua"},"content":"    public String getUrl() {","lastModifiedDate":"2021-10-20"},{"lineNumber":41,"author":{"gitId":"Zacchua"},"content":"        return \"https://www.facebook.com/\" + this.get();","lastModifiedDate":"2021-10-22"},{"lineNumber":42,"author":{"gitId":"Zacchua"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":43,"author":{"gitId":"Zacchua"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":44,"author":{"gitId":"stanley-1"},"content":"    @Override","lastModifiedDate":"2021-10-11"},{"lineNumber":45,"author":{"gitId":"stanley-1"},"content":"    public String toString() {","lastModifiedDate":"2021-10-11"},{"lineNumber":46,"author":{"gitId":"Zacchua"},"content":"        return value.orElse(\"\");","lastModifiedDate":"2021-10-14"},{"lineNumber":47,"author":{"gitId":"stanley-1"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":48,"author":{"gitId":"stanley-1"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":49,"author":{"gitId":"stanley-1"},"content":"    @Override","lastModifiedDate":"2021-10-11"},{"lineNumber":50,"author":{"gitId":"stanley-1"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-11"},{"lineNumber":51,"author":{"gitId":"stanley-1"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-10-11"},{"lineNumber":52,"author":{"gitId":"stanley-1"},"content":"                || (other instanceof Facebook // instanceof handles nulls","lastModifiedDate":"2021-10-11"},{"lineNumber":53,"author":{"gitId":"stanley-1"},"content":"                \u0026\u0026 value.equals(((Facebook) other).value)); // state check","lastModifiedDate":"2021-10-11"},{"lineNumber":54,"author":{"gitId":"stanley-1"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":55,"author":{"gitId":"stanley-1"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":56,"author":{"gitId":"stanley-1"},"content":"    @Override","lastModifiedDate":"2021-10-11"},{"lineNumber":57,"author":{"gitId":"stanley-1"},"content":"    public int hashCode() {","lastModifiedDate":"2021-10-11"},{"lineNumber":58,"author":{"gitId":"stanley-1"},"content":"        return value.hashCode();","lastModifiedDate":"2021-10-11"},{"lineNumber":59,"author":{"gitId":"stanley-1"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":60,"author":{"gitId":"stanley-1"},"content":"}","lastModifiedDate":"2021-10-11"}],"authorContributionMap":{"Zacchua":12,"stanley-1":48}},{"path":"src/main/java/socialite/model/handle/Handle.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Zacchua"},"content":"package socialite.model.handle;","lastModifiedDate":"2021-10-16"},{"lineNumber":2,"author":{"gitId":"Zacchua"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":3,"author":{"gitId":"Zacchua"},"content":"import java.util.Optional;","lastModifiedDate":"2021-10-16"},{"lineNumber":4,"author":{"gitId":"Zacchua"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":5,"author":{"gitId":"Zacchua"},"content":"public abstract class Handle {","lastModifiedDate":"2021-10-16"},{"lineNumber":6,"author":{"gitId":"Zacchua"},"content":"    protected Optional\u003cString\u003e value;","lastModifiedDate":"2021-10-16"},{"lineNumber":7,"author":{"gitId":"Zacchua"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":8,"author":{"gitId":"Zacchua"},"content":"    public static enum Platform {","lastModifiedDate":"2021-10-18"},{"lineNumber":9,"author":{"gitId":"Zacchua"},"content":"        FACEBOOK,","lastModifiedDate":"2021-10-18"},{"lineNumber":10,"author":{"gitId":"Zacchua"},"content":"        INSTAGRAM,","lastModifiedDate":"2021-10-18"},{"lineNumber":11,"author":{"gitId":"Zacchua"},"content":"        TELEGRAM,","lastModifiedDate":"2021-10-18"},{"lineNumber":12,"author":{"gitId":"Zacchua"},"content":"        TIKTOK,","lastModifiedDate":"2021-10-18"},{"lineNumber":13,"author":{"gitId":"Zacchua"},"content":"        TWITTER","lastModifiedDate":"2021-10-18"},{"lineNumber":14,"author":{"gitId":"Zacchua"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":15,"author":{"gitId":"Zacchua"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":16,"author":{"gitId":"Zacchua"},"content":"    /**","lastModifiedDate":"2021-10-16"},{"lineNumber":17,"author":{"gitId":"Zacchua"},"content":"     * Getter for value of handle","lastModifiedDate":"2021-10-16"},{"lineNumber":18,"author":{"gitId":"Zacchua"},"content":"     *","lastModifiedDate":"2021-10-16"},{"lineNumber":19,"author":{"gitId":"Zacchua"},"content":"     * @return value of handle if available, null otherwise","lastModifiedDate":"2021-10-16"},{"lineNumber":20,"author":{"gitId":"Zacchua"},"content":"     */","lastModifiedDate":"2021-10-16"},{"lineNumber":21,"author":{"gitId":"Zacchua"},"content":"    public String get() {","lastModifiedDate":"2021-10-16"},{"lineNumber":22,"author":{"gitId":"Zacchua"},"content":"        return this.value.orElse(null);","lastModifiedDate":"2021-10-16"},{"lineNumber":23,"author":{"gitId":"Zacchua"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":24,"author":{"gitId":"Zacchua"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":25,"author":{"gitId":"david-eom"},"content":"    public abstract String getUrl();","lastModifiedDate":"2021-10-23"},{"lineNumber":26,"author":{"gitId":"Zacchua"},"content":"}","lastModifiedDate":"2021-10-16"}],"authorContributionMap":{"Zacchua":25,"david-eom":1}},{"path":"src/main/java/socialite/model/handle/Instagram.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"stanley-1"},"content":"package socialite.model.handle;","lastModifiedDate":"2021-10-11"},{"lineNumber":2,"author":{"gitId":"stanley-1"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":3,"author":{"gitId":"Zacchua"},"content":"import java.util.Optional;","lastModifiedDate":"2021-10-14"},{"lineNumber":4,"author":{"gitId":"Zacchua"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":5,"author":{"gitId":"stanley-1"},"content":"import socialite.commons.util.AppUtil;","lastModifiedDate":"2021-10-11"},{"lineNumber":6,"author":{"gitId":"stanley-1"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":7,"author":{"gitId":"stanley-1"},"content":"/**","lastModifiedDate":"2021-10-11"},{"lineNumber":8,"author":{"gitId":"stanley-1"},"content":" * Represents a Person\u0027s Instagram handle in SociaLite.","lastModifiedDate":"2021-10-11"},{"lineNumber":9,"author":{"gitId":"stanley-1"},"content":" * Guarantees: immutable; handle is valid as declared in {@link #isValidHandle(String)}","lastModifiedDate":"2021-10-11"},{"lineNumber":10,"author":{"gitId":"stanley-1"},"content":" */","lastModifiedDate":"2021-10-11"},{"lineNumber":11,"author":{"gitId":"Zacchua"},"content":"public class Instagram extends Handle {","lastModifiedDate":"2021-10-16"},{"lineNumber":12,"author":{"gitId":"stanley-1"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":13,"author":{"gitId":"stanley-1"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2021-10-11"},{"lineNumber":14,"author":{"gitId":"stanley-1"},"content":"            \"Instagram handles should only contain alphanumeric characters, periods \u0026 underscores.\\n\"","lastModifiedDate":"2021-10-12"},{"lineNumber":15,"author":{"gitId":"stanley-1"},"content":"            + \"A handle is limited to 30 characters and can\u0027t use other punctuation marks.\\n\"","lastModifiedDate":"2021-10-11"},{"lineNumber":16,"author":{"gitId":"stanley-1"},"content":"            + \"https://tinyurl.com/instaHandle\";","lastModifiedDate":"2021-10-11"},{"lineNumber":17,"author":{"gitId":"stanley-1"},"content":"    public static final String VALIDATION_REGEX \u003d \"^[a-zA-Z0-9._]{1,30}$\";","lastModifiedDate":"2021-10-11"},{"lineNumber":18,"author":{"gitId":"stanley-1"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":19,"author":{"gitId":"stanley-1"},"content":"    /**","lastModifiedDate":"2021-10-11"},{"lineNumber":20,"author":{"gitId":"stanley-1"},"content":"     * Constructs a {@code Instagram}.","lastModifiedDate":"2021-10-11"},{"lineNumber":21,"author":{"gitId":"stanley-1"},"content":"     *","lastModifiedDate":"2021-10-11"},{"lineNumber":22,"author":{"gitId":"stanley-1"},"content":"     * @param handle A valid Instagram handle.","lastModifiedDate":"2021-10-11"},{"lineNumber":23,"author":{"gitId":"stanley-1"},"content":"     */","lastModifiedDate":"2021-10-11"},{"lineNumber":24,"author":{"gitId":"stanley-1"},"content":"    public Instagram(String handle) {","lastModifiedDate":"2021-10-11"},{"lineNumber":25,"author":{"gitId":"Zacchua"},"content":"        if (handle !\u003d null \u0026\u0026 !handle.equals(\"\")) {","lastModifiedDate":"2021-10-14"},{"lineNumber":26,"author":{"gitId":"stanley-1"},"content":"            AppUtil.checkArgument(isValidHandle(handle), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-11"},{"lineNumber":27,"author":{"gitId":"Zacchua"},"content":"        }","lastModifiedDate":"2021-10-14"},{"lineNumber":28,"author":{"gitId":"Zacchua"},"content":"        value \u003d Optional.ofNullable(handle);","lastModifiedDate":"2021-10-14"},{"lineNumber":29,"author":{"gitId":"stanley-1"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":30,"author":{"gitId":"stanley-1"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":31,"author":{"gitId":"stanley-1"},"content":"    /**","lastModifiedDate":"2021-10-11"},{"lineNumber":32,"author":{"gitId":"stanley-1"},"content":"     * Returns if a given input is a valid Facebook username.","lastModifiedDate":"2021-10-11"},{"lineNumber":33,"author":{"gitId":"stanley-1"},"content":"     */","lastModifiedDate":"2021-10-11"},{"lineNumber":34,"author":{"gitId":"stanley-1"},"content":"    public static boolean isValidHandle(String test) {","lastModifiedDate":"2021-10-11"},{"lineNumber":35,"author":{"gitId":"stanley-1"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2021-10-11"},{"lineNumber":36,"author":{"gitId":"stanley-1"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":37,"author":{"gitId":"stanley-1"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":38,"author":{"gitId":"Zacchua"},"content":"    @Override","lastModifiedDate":"2021-10-20"},{"lineNumber":39,"author":{"gitId":"Zacchua"},"content":"    public String getUrl() {","lastModifiedDate":"2021-10-20"},{"lineNumber":40,"author":{"gitId":"Zacchua"},"content":"        return \"https://www.instagram.com/\" + this.get();","lastModifiedDate":"2021-10-22"},{"lineNumber":41,"author":{"gitId":"Zacchua"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":42,"author":{"gitId":"Zacchua"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":43,"author":{"gitId":"stanley-1"},"content":"    @Override","lastModifiedDate":"2021-10-11"},{"lineNumber":44,"author":{"gitId":"stanley-1"},"content":"    public String toString() {","lastModifiedDate":"2021-10-11"},{"lineNumber":45,"author":{"gitId":"Zacchua"},"content":"        return value.orElse(\"\");","lastModifiedDate":"2021-10-14"},{"lineNumber":46,"author":{"gitId":"stanley-1"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":47,"author":{"gitId":"stanley-1"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":48,"author":{"gitId":"stanley-1"},"content":"    @Override","lastModifiedDate":"2021-10-11"},{"lineNumber":49,"author":{"gitId":"stanley-1"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-11"},{"lineNumber":50,"author":{"gitId":"stanley-1"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-10-11"},{"lineNumber":51,"author":{"gitId":"stanley-1"},"content":"                || (other instanceof Instagram // instanceof handles nulls","lastModifiedDate":"2021-10-11"},{"lineNumber":52,"author":{"gitId":"stanley-1"},"content":"                \u0026\u0026 value.equals(((Instagram) other).value)); // state check","lastModifiedDate":"2021-10-11"},{"lineNumber":53,"author":{"gitId":"stanley-1"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":54,"author":{"gitId":"stanley-1"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":55,"author":{"gitId":"stanley-1"},"content":"    @Override","lastModifiedDate":"2021-10-11"},{"lineNumber":56,"author":{"gitId":"stanley-1"},"content":"    public int hashCode() {","lastModifiedDate":"2021-10-11"},{"lineNumber":57,"author":{"gitId":"stanley-1"},"content":"        return value.hashCode();","lastModifiedDate":"2021-10-11"},{"lineNumber":58,"author":{"gitId":"stanley-1"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":59,"author":{"gitId":"stanley-1"},"content":"}","lastModifiedDate":"2021-10-11"}],"authorContributionMap":{"Zacchua":12,"stanley-1":47}},{"path":"src/main/java/socialite/model/handle/Telegram.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"david-eom"},"content":"package socialite.model.handle;","lastModifiedDate":"2021-10-08"},{"lineNumber":2,"author":{"gitId":"david-eom"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":3,"author":{"gitId":"Zacchua"},"content":"import java.util.Optional;","lastModifiedDate":"2021-10-14"},{"lineNumber":4,"author":{"gitId":"Zacchua"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":5,"author":{"gitId":"david-eom"},"content":"import socialite.commons.util.AppUtil;","lastModifiedDate":"2021-10-08"},{"lineNumber":6,"author":{"gitId":"david-eom"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":7,"author":{"gitId":"david-eom"},"content":"/**","lastModifiedDate":"2021-10-08"},{"lineNumber":8,"author":{"gitId":"david-eom"},"content":" * Represents a Person\u0027s Telegram handle in SociaLite.","lastModifiedDate":"2021-10-08"},{"lineNumber":9,"author":{"gitId":"david-eom"},"content":" * Guarantees: immutable; handle is valid as declared in {@link #isValidHandle(String)}","lastModifiedDate":"2021-10-08"},{"lineNumber":10,"author":{"gitId":"david-eom"},"content":" */","lastModifiedDate":"2021-10-08"},{"lineNumber":11,"author":{"gitId":"Zacchua"},"content":"public class Telegram extends Handle {","lastModifiedDate":"2021-10-16"},{"lineNumber":12,"author":{"gitId":"david-eom"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":13,"author":{"gitId":"david-eom"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2021-10-08"},{"lineNumber":14,"author":{"gitId":"david-eom"},"content":"            \"Telegram handles should only contain alphanumeric characters and underscores, \"","lastModifiedDate":"2021-10-08"},{"lineNumber":15,"author":{"gitId":"david-eom"},"content":"            + \"and it should be at least 5 characters long.\\n\"","lastModifiedDate":"2021-10-08"},{"lineNumber":16,"author":{"gitId":"david-eom"},"content":"            + \"https://telegram.org/faq#q-what-can-i-use-as-my-username\";","lastModifiedDate":"2021-10-08"},{"lineNumber":17,"author":{"gitId":"david-eom"},"content":"    public static final String VALIDATION_REGEX \u003d \"^[a-zA-Z0-9_]{5,}$\";","lastModifiedDate":"2021-10-08"},{"lineNumber":18,"author":{"gitId":"david-eom"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":19,"author":{"gitId":"david-eom"},"content":"    /**","lastModifiedDate":"2021-10-08"},{"lineNumber":20,"author":{"gitId":"david-eom"},"content":"     * Constructs a {@code Telegram}.","lastModifiedDate":"2021-10-08"},{"lineNumber":21,"author":{"gitId":"david-eom"},"content":"     *","lastModifiedDate":"2021-10-08"},{"lineNumber":22,"author":{"gitId":"david-eom"},"content":"     * @param handle A valid Telegram handle.","lastModifiedDate":"2021-10-08"},{"lineNumber":23,"author":{"gitId":"david-eom"},"content":"     */","lastModifiedDate":"2021-10-08"},{"lineNumber":24,"author":{"gitId":"david-eom"},"content":"    public Telegram(String handle) {","lastModifiedDate":"2021-10-08"},{"lineNumber":25,"author":{"gitId":"Zacchua"},"content":"        if (handle !\u003d null \u0026\u0026 !handle.equals(\"\")) {","lastModifiedDate":"2021-10-14"},{"lineNumber":26,"author":{"gitId":"david-eom"},"content":"            AppUtil.checkArgument(isValidHandle(handle), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-08"},{"lineNumber":27,"author":{"gitId":"Zacchua"},"content":"        }","lastModifiedDate":"2021-10-14"},{"lineNumber":28,"author":{"gitId":"Zacchua"},"content":"        value \u003d Optional.ofNullable(handle);","lastModifiedDate":"2021-10-14"},{"lineNumber":29,"author":{"gitId":"david-eom"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":30,"author":{"gitId":"david-eom"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":31,"author":{"gitId":"david-eom"},"content":"    /**","lastModifiedDate":"2021-10-08"},{"lineNumber":32,"author":{"gitId":"david-eom"},"content":"     * Returns if a given handle is a valid Telegram handle.","lastModifiedDate":"2021-10-08"},{"lineNumber":33,"author":{"gitId":"david-eom"},"content":"     */","lastModifiedDate":"2021-10-08"},{"lineNumber":34,"author":{"gitId":"david-eom"},"content":"    public static boolean isValidHandle(String test) {","lastModifiedDate":"2021-10-08"},{"lineNumber":35,"author":{"gitId":"david-eom"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2021-10-08"},{"lineNumber":36,"author":{"gitId":"david-eom"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":37,"author":{"gitId":"david-eom"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":38,"author":{"gitId":"Zacchua"},"content":"    @Override","lastModifiedDate":"2021-10-20"},{"lineNumber":39,"author":{"gitId":"Zacchua"},"content":"    public String getUrl() {","lastModifiedDate":"2021-10-20"},{"lineNumber":40,"author":{"gitId":"Zacchua"},"content":"        return \"https://www.t.me/\" + this.get();","lastModifiedDate":"2021-10-20"},{"lineNumber":41,"author":{"gitId":"Zacchua"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":42,"author":{"gitId":"Zacchua"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":43,"author":{"gitId":"david-eom"},"content":"    @Override","lastModifiedDate":"2021-10-08"},{"lineNumber":44,"author":{"gitId":"david-eom"},"content":"    public String toString() {","lastModifiedDate":"2021-10-08"},{"lineNumber":45,"author":{"gitId":"Zacchua"},"content":"        return value.orElse(\"\");","lastModifiedDate":"2021-10-14"},{"lineNumber":46,"author":{"gitId":"david-eom"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":47,"author":{"gitId":"david-eom"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":48,"author":{"gitId":"david-eom"},"content":"    @Override","lastModifiedDate":"2021-10-08"},{"lineNumber":49,"author":{"gitId":"david-eom"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-08"},{"lineNumber":50,"author":{"gitId":"david-eom"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-10-08"},{"lineNumber":51,"author":{"gitId":"david-eom"},"content":"                || (other instanceof Telegram // instanceof handles nulls","lastModifiedDate":"2021-10-08"},{"lineNumber":52,"author":{"gitId":"david-eom"},"content":"                \u0026\u0026 value.equals(((Telegram) other).value)); // state check","lastModifiedDate":"2021-10-08"},{"lineNumber":53,"author":{"gitId":"david-eom"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":54,"author":{"gitId":"david-eom"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":55,"author":{"gitId":"david-eom"},"content":"    @Override","lastModifiedDate":"2021-10-08"},{"lineNumber":56,"author":{"gitId":"david-eom"},"content":"    public int hashCode() {","lastModifiedDate":"2021-10-08"},{"lineNumber":57,"author":{"gitId":"david-eom"},"content":"        return value.hashCode();","lastModifiedDate":"2021-10-08"},{"lineNumber":58,"author":{"gitId":"david-eom"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":59,"author":{"gitId":"david-eom"},"content":"}","lastModifiedDate":"2021-10-08"}],"authorContributionMap":{"Zacchua":12,"david-eom":47}},{"path":"src/main/java/socialite/model/handle/TikTok.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Zacchua"},"content":"package socialite.model.handle;","lastModifiedDate":"2021-10-12"},{"lineNumber":2,"author":{"gitId":"Zacchua"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":3,"author":{"gitId":"Zacchua"},"content":"//import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-14"},{"lineNumber":4,"author":{"gitId":"Zacchua"},"content":"import java.util.Optional;","lastModifiedDate":"2021-10-14"},{"lineNumber":5,"author":{"gitId":"Zacchua"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":6,"author":{"gitId":"Zacchua"},"content":"import socialite.commons.util.AppUtil;","lastModifiedDate":"2021-10-12"},{"lineNumber":7,"author":{"gitId":"Zacchua"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":8,"author":{"gitId":"Zacchua"},"content":"public class TikTok extends Handle {","lastModifiedDate":"2021-10-16"},{"lineNumber":9,"author":{"gitId":"Zacchua"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":10,"author":{"gitId":"Zacchua"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Username should only consist of alphanumerical characters, \"","lastModifiedDate":"2021-10-13"},{"lineNumber":11,"author":{"gitId":"Zacchua"},"content":"            + \"underscores and periods, and should not end with period\";","lastModifiedDate":"2021-10-12"},{"lineNumber":12,"author":{"gitId":"Zacchua"},"content":"    public static final String VALIDATION_REGEX \u003d \"^[a-zA-Z0-9._]*[a-zA-Z0-9_]$\";","lastModifiedDate":"2021-10-12"},{"lineNumber":13,"author":{"gitId":"Zacchua"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":14,"author":{"gitId":"Zacchua"},"content":"    /**","lastModifiedDate":"2021-10-12"},{"lineNumber":15,"author":{"gitId":"Zacchua"},"content":"     * Constructor for {@code TikTok} object","lastModifiedDate":"2021-10-12"},{"lineNumber":16,"author":{"gitId":"Zacchua"},"content":"     *","lastModifiedDate":"2021-10-12"},{"lineNumber":17,"author":{"gitId":"Zacchua"},"content":"     * @param value TikTok handle","lastModifiedDate":"2021-10-12"},{"lineNumber":18,"author":{"gitId":"Zacchua"},"content":"     */","lastModifiedDate":"2021-10-12"},{"lineNumber":19,"author":{"gitId":"Zacchua"},"content":"    public TikTok(String value) {","lastModifiedDate":"2021-10-12"},{"lineNumber":20,"author":{"gitId":"Zacchua"},"content":"        if (value !\u003d null \u0026\u0026 !value.equals(\"\")) {","lastModifiedDate":"2021-10-14"},{"lineNumber":21,"author":{"gitId":"Zacchua"},"content":"            AppUtil.checkArgument(isValidHandle(value), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-12"},{"lineNumber":22,"author":{"gitId":"Zacchua"},"content":"        }","lastModifiedDate":"2021-10-14"},{"lineNumber":23,"author":{"gitId":"Zacchua"},"content":"        this.value \u003d Optional.ofNullable(value);","lastModifiedDate":"2021-10-14"},{"lineNumber":24,"author":{"gitId":"Zacchua"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":25,"author":{"gitId":"Zacchua"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":26,"author":{"gitId":"Zacchua"},"content":"    /**","lastModifiedDate":"2021-10-12"},{"lineNumber":27,"author":{"gitId":"Zacchua"},"content":"     * Checks if given tiktok handle is valid","lastModifiedDate":"2021-10-12"},{"lineNumber":28,"author":{"gitId":"Zacchua"},"content":"     */","lastModifiedDate":"2021-10-12"},{"lineNumber":29,"author":{"gitId":"Zacchua"},"content":"    public static boolean isValidHandle(String value) {","lastModifiedDate":"2021-10-12"},{"lineNumber":30,"author":{"gitId":"Zacchua"},"content":"        return value.matches(VALIDATION_REGEX);","lastModifiedDate":"2021-10-12"},{"lineNumber":31,"author":{"gitId":"Zacchua"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":32,"author":{"gitId":"Zacchua"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":33,"author":{"gitId":"Zacchua"},"content":"    @Override","lastModifiedDate":"2021-10-20"},{"lineNumber":34,"author":{"gitId":"Zacchua"},"content":"    public String getUrl() {","lastModifiedDate":"2021-10-20"},{"lineNumber":35,"author":{"gitId":"Zacchua"},"content":"        return \"https://www.tiktok.com/@\" + this.get();","lastModifiedDate":"2021-10-22"},{"lineNumber":36,"author":{"gitId":"Zacchua"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":37,"author":{"gitId":"Zacchua"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":38,"author":{"gitId":"Zacchua"},"content":"    @Override","lastModifiedDate":"2021-10-12"},{"lineNumber":39,"author":{"gitId":"Zacchua"},"content":"    public String toString() {","lastModifiedDate":"2021-10-12"},{"lineNumber":40,"author":{"gitId":"Zacchua"},"content":"        return this.value.orElse(\"\");","lastModifiedDate":"2021-10-14"},{"lineNumber":41,"author":{"gitId":"Zacchua"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":42,"author":{"gitId":"Zacchua"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":43,"author":{"gitId":"Zacchua"},"content":"    @Override","lastModifiedDate":"2021-10-12"},{"lineNumber":44,"author":{"gitId":"Zacchua"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2021-10-12"},{"lineNumber":45,"author":{"gitId":"Zacchua"},"content":"        return this \u003d\u003d obj || (obj instanceof TikTok \u0026\u0026 value.equals(((TikTok) obj).value));","lastModifiedDate":"2021-10-14"},{"lineNumber":46,"author":{"gitId":"Zacchua"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":47,"author":{"gitId":"Zacchua"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":48,"author":{"gitId":"Zacchua"},"content":"    @Override","lastModifiedDate":"2021-10-12"},{"lineNumber":49,"author":{"gitId":"Zacchua"},"content":"    public int hashCode() {","lastModifiedDate":"2021-10-12"},{"lineNumber":50,"author":{"gitId":"Zacchua"},"content":"        return value.hashCode();","lastModifiedDate":"2021-10-12"},{"lineNumber":51,"author":{"gitId":"Zacchua"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":52,"author":{"gitId":"Zacchua"},"content":"}","lastModifiedDate":"2021-10-12"}],"authorContributionMap":{"Zacchua":52}},{"path":"src/main/java/socialite/model/handle/Twitter.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Zacchua"},"content":"package socialite.model.handle;","lastModifiedDate":"2021-10-11"},{"lineNumber":2,"author":{"gitId":"Zacchua"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":3,"author":{"gitId":"Zacchua"},"content":"import java.util.Optional;","lastModifiedDate":"2021-10-14"},{"lineNumber":4,"author":{"gitId":"Zacchua"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":5,"author":{"gitId":"Zacchua"},"content":"import socialite.commons.util.AppUtil;","lastModifiedDate":"2021-10-11"},{"lineNumber":6,"author":{"gitId":"Zacchua"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":7,"author":{"gitId":"Zacchua"},"content":"public class Twitter extends Handle {","lastModifiedDate":"2021-10-16"},{"lineNumber":8,"author":{"gitId":"Zacchua"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":9,"author":{"gitId":"Zacchua"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Handle should only consist of alphanumerical characters \\n\"","lastModifiedDate":"2021-10-12"},{"lineNumber":10,"author":{"gitId":"Zacchua"},"content":"            + \"and underscores, should be between 4-15 characters long\";","lastModifiedDate":"2021-10-11"},{"lineNumber":11,"author":{"gitId":"Zacchua"},"content":"    public static final String VALIDATION_REGEX \u003d \"^[a-zA-Z0-9_]{4,15}$\";","lastModifiedDate":"2021-10-12"},{"lineNumber":12,"author":{"gitId":"Zacchua"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":13,"author":{"gitId":"Zacchua"},"content":"    /**","lastModifiedDate":"2021-10-11"},{"lineNumber":14,"author":{"gitId":"Zacchua"},"content":"     * Constructor for {@code Twitter} object","lastModifiedDate":"2021-10-11"},{"lineNumber":15,"author":{"gitId":"Zacchua"},"content":"     *","lastModifiedDate":"2021-10-11"},{"lineNumber":16,"author":{"gitId":"Zacchua"},"content":"     * @param value Twitter handle","lastModifiedDate":"2021-10-11"},{"lineNumber":17,"author":{"gitId":"Zacchua"},"content":"     */","lastModifiedDate":"2021-10-11"},{"lineNumber":18,"author":{"gitId":"Zacchua"},"content":"    public Twitter(String value) {","lastModifiedDate":"2021-10-11"},{"lineNumber":19,"author":{"gitId":"Zacchua"},"content":"        if (value !\u003d null \u0026\u0026 !value.equals(\"\")) {","lastModifiedDate":"2021-10-14"},{"lineNumber":20,"author":{"gitId":"Zacchua"},"content":"            AppUtil.checkArgument(isValidHandle(value), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-11"},{"lineNumber":21,"author":{"gitId":"Zacchua"},"content":"        }","lastModifiedDate":"2021-10-14"},{"lineNumber":22,"author":{"gitId":"Zacchua"},"content":"        this.value \u003d Optional.ofNullable(value);","lastModifiedDate":"2021-10-14"},{"lineNumber":23,"author":{"gitId":"Zacchua"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":24,"author":{"gitId":"Zacchua"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":25,"author":{"gitId":"Zacchua"},"content":"    /**","lastModifiedDate":"2021-10-11"},{"lineNumber":26,"author":{"gitId":"Zacchua"},"content":"     * Checks if given twitter handle is valid","lastModifiedDate":"2021-10-11"},{"lineNumber":27,"author":{"gitId":"Zacchua"},"content":"     */","lastModifiedDate":"2021-10-11"},{"lineNumber":28,"author":{"gitId":"Zacchua"},"content":"    public static boolean isValidHandle(String value) {","lastModifiedDate":"2021-10-11"},{"lineNumber":29,"author":{"gitId":"Zacchua"},"content":"        return value.matches(VALIDATION_REGEX);","lastModifiedDate":"2021-10-11"},{"lineNumber":30,"author":{"gitId":"Zacchua"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":31,"author":{"gitId":"Zacchua"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":32,"author":{"gitId":"Zacchua"},"content":"    @Override","lastModifiedDate":"2021-10-20"},{"lineNumber":33,"author":{"gitId":"Zacchua"},"content":"    public String getUrl() {","lastModifiedDate":"2021-10-20"},{"lineNumber":34,"author":{"gitId":"Zacchua"},"content":"        return \"https://www.twitter.com/\" + this.get();","lastModifiedDate":"2021-10-22"},{"lineNumber":35,"author":{"gitId":"Zacchua"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":36,"author":{"gitId":"Zacchua"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":37,"author":{"gitId":"Zacchua"},"content":"    @Override","lastModifiedDate":"2021-10-11"},{"lineNumber":38,"author":{"gitId":"Zacchua"},"content":"    public String toString() {","lastModifiedDate":"2021-10-11"},{"lineNumber":39,"author":{"gitId":"Zacchua"},"content":"        return this.value.orElse(\"\");","lastModifiedDate":"2021-10-14"},{"lineNumber":40,"author":{"gitId":"Zacchua"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":41,"author":{"gitId":"Zacchua"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":42,"author":{"gitId":"Zacchua"},"content":"    @Override","lastModifiedDate":"2021-10-11"},{"lineNumber":43,"author":{"gitId":"Zacchua"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2021-10-11"},{"lineNumber":44,"author":{"gitId":"Zacchua"},"content":"        return this \u003d\u003d obj || (obj instanceof Twitter \u0026\u0026 value.equals(((Twitter) obj).value));","lastModifiedDate":"2021-10-14"},{"lineNumber":45,"author":{"gitId":"Zacchua"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":46,"author":{"gitId":"Zacchua"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":47,"author":{"gitId":"Zacchua"},"content":"    @Override","lastModifiedDate":"2021-10-11"},{"lineNumber":48,"author":{"gitId":"Zacchua"},"content":"    public int hashCode() {","lastModifiedDate":"2021-10-11"},{"lineNumber":49,"author":{"gitId":"Zacchua"},"content":"        return value.hashCode();","lastModifiedDate":"2021-10-11"},{"lineNumber":50,"author":{"gitId":"Zacchua"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":51,"author":{"gitId":"Zacchua"},"content":"}","lastModifiedDate":"2021-10-11"}],"authorContributionMap":{"Zacchua":51}},{"path":"src/main/java/socialite/model/person/ContainsKeywordsPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"david-eom"},"content":"package socialite.model.person;","lastModifiedDate":"2021-10-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-12"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":5,"author":{"gitId":"EssWhyy"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2021-10-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":7,"author":{"gitId":"EssWhyy"},"content":"import socialite.model.tag.Tag;","lastModifiedDate":"2021-10-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Tests that a {@code Person}\u0027s {@code Name} matches any of the keywords given.","lastModifiedDate":"2018-01-10"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-12"},{"lineNumber":12,"author":{"gitId":"david-eom"},"content":"public class ContainsKeywordsPredicate implements Predicate\u003cPerson\u003e {","lastModifiedDate":"2021-10-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    private final List\u003cString\u003e keywords;","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"david-eom"},"content":"    public ContainsKeywordsPredicate(List\u003cString\u003e keywords) {","lastModifiedDate":"2021-10-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        this.keywords \u003d keywords;","lastModifiedDate":"2017-06-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"EssWhyy"},"content":"    //helper functions to test person\u0027s name, tags or handles respectively.","lastModifiedDate":"2021-10-19"},{"lineNumber":20,"author":{"gitId":"EssWhyy"},"content":"    private boolean testName(Person person, String keyword) {","lastModifiedDate":"2021-10-18"},{"lineNumber":21,"author":{"gitId":"EssWhyy"},"content":"        String name \u003d person.getName().fullName;","lastModifiedDate":"2021-10-25"},{"lineNumber":22,"author":{"gitId":"EssWhyy"},"content":"        return Pattern.compile(Pattern.quote(keyword), Pattern.CASE_INSENSITIVE).matcher(name).find();","lastModifiedDate":"2021-10-25"},{"lineNumber":23,"author":{"gitId":"EssWhyy"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":24,"author":{"gitId":"EssWhyy"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":25,"author":{"gitId":"EssWhyy"},"content":"    private boolean testTags(Person person, String keyword) {","lastModifiedDate":"2021-10-18"},{"lineNumber":26,"author":{"gitId":"EssWhyy"},"content":"        for (Tag tag : person.getTags()) {","lastModifiedDate":"2021-10-18"},{"lineNumber":27,"author":{"gitId":"EssWhyy"},"content":"            String tagName \u003d tag.tagName;","lastModifiedDate":"2021-10-25"},{"lineNumber":28,"author":{"gitId":"EssWhyy"},"content":"            boolean tagMatches \u003d Pattern.compile(Pattern.quote(keyword), Pattern.CASE_INSENSITIVE)","lastModifiedDate":"2021-10-25"},{"lineNumber":29,"author":{"gitId":"EssWhyy"},"content":"                    .matcher(tagName).find();","lastModifiedDate":"2021-10-25"},{"lineNumber":30,"author":{"gitId":"EssWhyy"},"content":"            if (tagMatches) {","lastModifiedDate":"2021-10-25"},{"lineNumber":31,"author":{"gitId":"EssWhyy"},"content":"                return true;","lastModifiedDate":"2021-10-18"},{"lineNumber":32,"author":{"gitId":"EssWhyy"},"content":"            }","lastModifiedDate":"2021-10-18"},{"lineNumber":33,"author":{"gitId":"EssWhyy"},"content":"        }","lastModifiedDate":"2021-10-18"},{"lineNumber":34,"author":{"gitId":"EssWhyy"},"content":"        //if none of the person\u0027s tags match the keyword.","lastModifiedDate":"2021-10-25"},{"lineNumber":35,"author":{"gitId":"EssWhyy"},"content":"        return false;","lastModifiedDate":"2021-10-18"},{"lineNumber":36,"author":{"gitId":"EssWhyy"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":37,"author":{"gitId":"EssWhyy"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":38,"author":{"gitId":"EssWhyy"},"content":"    private boolean testPlatforms(Person person, String keyword) {","lastModifiedDate":"2021-10-18"},{"lineNumber":39,"author":{"gitId":"EssWhyy"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":40,"author":{"gitId":"EssWhyy"},"content":"        switch (keyword) {","lastModifiedDate":"2021-10-18"},{"lineNumber":41,"author":{"gitId":"EssWhyy"},"content":"        case \"facebook\":","lastModifiedDate":"2021-10-18"},{"lineNumber":42,"author":{"gitId":"EssWhyy"},"content":"            return !(person.getFacebook().get() \u003d\u003d null);","lastModifiedDate":"2021-10-22"},{"lineNumber":43,"author":{"gitId":"EssWhyy"},"content":"        case \"instagram\":","lastModifiedDate":"2021-10-18"},{"lineNumber":44,"author":{"gitId":"EssWhyy"},"content":"            return !(person.getInstagram().get() \u003d\u003d null);","lastModifiedDate":"2021-10-22"},{"lineNumber":45,"author":{"gitId":"EssWhyy"},"content":"        case \"telegram\":","lastModifiedDate":"2021-10-18"},{"lineNumber":46,"author":{"gitId":"EssWhyy"},"content":"            return !(person.getTelegram().get() \u003d\u003d null);","lastModifiedDate":"2021-10-22"},{"lineNumber":47,"author":{"gitId":"EssWhyy"},"content":"        case \"tiktok\":","lastModifiedDate":"2021-10-18"},{"lineNumber":48,"author":{"gitId":"EssWhyy"},"content":"            return !(person.getTiktok().get() \u003d\u003d null);","lastModifiedDate":"2021-10-22"},{"lineNumber":49,"author":{"gitId":"EssWhyy"},"content":"        case \"twitter\":","lastModifiedDate":"2021-10-18"},{"lineNumber":50,"author":{"gitId":"EssWhyy"},"content":"            return !(person.getTwitter().get() \u003d\u003d null);","lastModifiedDate":"2021-10-22"},{"lineNumber":51,"author":{"gitId":"EssWhyy"},"content":"        default:","lastModifiedDate":"2021-10-18"},{"lineNumber":52,"author":{"gitId":"EssWhyy"},"content":"            return false;","lastModifiedDate":"2021-10-18"},{"lineNumber":53,"author":{"gitId":"EssWhyy"},"content":"        }","lastModifiedDate":"2021-10-18"},{"lineNumber":54,"author":{"gitId":"EssWhyy"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":55,"author":{"gitId":"EssWhyy"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":56,"author":{"gitId":"EssWhyy"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-12"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public boolean test(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":59,"author":{"gitId":"EssWhyy"},"content":"        //Tests just one person. For their name, tags or handles.","lastModifiedDate":"2021-10-18"},{"lineNumber":60,"author":{"gitId":"EssWhyy"},"content":"        if (keywords.size() \u003d\u003d 0) {","lastModifiedDate":"2021-10-19"},{"lineNumber":61,"author":{"gitId":"EssWhyy"},"content":"            return false;","lastModifiedDate":"2021-10-19"},{"lineNumber":62,"author":{"gitId":"EssWhyy"},"content":"        }","lastModifiedDate":"2021-10-19"},{"lineNumber":63,"author":{"gitId":"EssWhyy"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":64,"author":{"gitId":"EssWhyy"},"content":"        boolean matchesAll \u003d true;","lastModifiedDate":"2021-10-19"},{"lineNumber":65,"author":{"gitId":"EssWhyy"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":66,"author":{"gitId":"EssWhyy"},"content":"        for (String keyword : keywords) {","lastModifiedDate":"2021-10-19"},{"lineNumber":67,"author":{"gitId":"EssWhyy"},"content":"            if (keyword.startsWith(\"t/\")) {","lastModifiedDate":"2021-10-19"},{"lineNumber":68,"author":{"gitId":"EssWhyy"},"content":"                matchesAll \u003d matchesAll \u0026\u0026 testTags(person, keyword.substring(2));","lastModifiedDate":"2021-10-19"},{"lineNumber":69,"author":{"gitId":"EssWhyy"},"content":"            } else if (keyword.startsWith(\"p/\")) {","lastModifiedDate":"2021-10-18"},{"lineNumber":70,"author":{"gitId":"EssWhyy"},"content":"                matchesAll \u003d matchesAll \u0026\u0026 testPlatforms(person, keyword.substring(2));","lastModifiedDate":"2021-10-19"},{"lineNumber":71,"author":{"gitId":"EssWhyy"},"content":"            } else {","lastModifiedDate":"2021-10-18"},{"lineNumber":72,"author":{"gitId":"EssWhyy"},"content":"                matchesAll \u003d matchesAll \u0026\u0026 testName(person, keyword);","lastModifiedDate":"2021-10-19"},{"lineNumber":73,"author":{"gitId":"EssWhyy"},"content":"            }","lastModifiedDate":"2021-10-18"},{"lineNumber":74,"author":{"gitId":"EssWhyy"},"content":"        }","lastModifiedDate":"2021-10-18"},{"lineNumber":75,"author":{"gitId":"EssWhyy"},"content":"        return matchesAll;","lastModifiedDate":"2021-10-19"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-12"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-12"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-06-12"},{"lineNumber":81,"author":{"gitId":"david-eom"},"content":"                || (other instanceof ContainsKeywordsPredicate // instanceof handles nulls","lastModifiedDate":"2021-10-23"},{"lineNumber":82,"author":{"gitId":"david-eom"},"content":"                \u0026\u0026 keywords.equals(((ContainsKeywordsPredicate) other).keywords)); // state check","lastModifiedDate":"2021-10-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":85,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"EssWhyy":57,"david-eom":5,"-":23}},{"path":"src/main/java/socialite/model/person/Date.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"bnjmnt4n"},"content":"package socialite.model.person;","lastModifiedDate":"2021-10-23"},{"lineNumber":2,"author":{"gitId":"bnjmnt4n"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":3,"author":{"gitId":"bnjmnt4n"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-10-23"},{"lineNumber":4,"author":{"gitId":"bnjmnt4n"},"content":"import java.time.Period;","lastModifiedDate":"2021-10-27"},{"lineNumber":5,"author":{"gitId":"bnjmnt4n"},"content":"import java.util.Comparator;","lastModifiedDate":"2021-10-27"},{"lineNumber":6,"author":{"gitId":"bnjmnt4n"},"content":"import java.util.Objects;","lastModifiedDate":"2021-10-23"},{"lineNumber":7,"author":{"gitId":"bnjmnt4n"},"content":"import java.util.Optional;","lastModifiedDate":"2021-10-27"},{"lineNumber":8,"author":{"gitId":"bnjmnt4n"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2021-10-23"},{"lineNumber":9,"author":{"gitId":"bnjmnt4n"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2021-10-23"},{"lineNumber":10,"author":{"gitId":"bnjmnt4n"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":11,"author":{"gitId":"bnjmnt4n"},"content":"public class Date {","lastModifiedDate":"2021-10-23"},{"lineNumber":12,"author":{"gitId":"bnjmnt4n"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2021-10-23"},{"lineNumber":13,"author":{"gitId":"bnjmnt4n"},"content":"            \"Dates should be formatted as NAME:YYYY-MM-DD or NAME:YYYY-MM-DD:[monthly|yearly] for recurring dates\";","lastModifiedDate":"2021-10-27"},{"lineNumber":14,"author":{"gitId":"bnjmnt4n"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":15,"author":{"gitId":"bnjmnt4n"},"content":"    public static final String VALIDATION_REGEX \u003d","lastModifiedDate":"2021-10-23"},{"lineNumber":16,"author":{"gitId":"bnjmnt4n"},"content":"            \"([\\\\w\\\\s]+):(\\\\d{4})-(\\\\d{2})-(\\\\d{2})(?::(yearly|monthly))?\\\\s*\";","lastModifiedDate":"2021-10-27"},{"lineNumber":17,"author":{"gitId":"bnjmnt4n"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":18,"author":{"gitId":"bnjmnt4n"},"content":"    private String name;","lastModifiedDate":"2021-10-23"},{"lineNumber":19,"author":{"gitId":"bnjmnt4n"},"content":"    private LocalDate date;","lastModifiedDate":"2021-10-23"},{"lineNumber":20,"author":{"gitId":"bnjmnt4n"},"content":"    private String recurrenceInterval;","lastModifiedDate":"2021-10-27"},{"lineNumber":21,"author":{"gitId":"bnjmnt4n"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":22,"author":{"gitId":"bnjmnt4n"},"content":"    /**","lastModifiedDate":"2021-10-23"},{"lineNumber":23,"author":{"gitId":"bnjmnt4n"},"content":"     * Construct a new {@code Date} with a given name and value,","lastModifiedDate":"2021-10-23"},{"lineNumber":24,"author":{"gitId":"bnjmnt4n"},"content":"     * by parsing the input string.","lastModifiedDate":"2021-10-23"},{"lineNumber":25,"author":{"gitId":"bnjmnt4n"},"content":"     * @param date The input string to parse.","lastModifiedDate":"2021-10-23"},{"lineNumber":26,"author":{"gitId":"bnjmnt4n"},"content":"     */","lastModifiedDate":"2021-10-23"},{"lineNumber":27,"author":{"gitId":"bnjmnt4n"},"content":"    public Date(String date) {","lastModifiedDate":"2021-10-23"},{"lineNumber":28,"author":{"gitId":"bnjmnt4n"},"content":"        Pattern pattern \u003d Pattern.compile(VALIDATION_REGEX);","lastModifiedDate":"2021-10-23"},{"lineNumber":29,"author":{"gitId":"bnjmnt4n"},"content":"        Matcher matcher \u003d pattern.matcher(date);","lastModifiedDate":"2021-10-23"},{"lineNumber":30,"author":{"gitId":"bnjmnt4n"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":31,"author":{"gitId":"bnjmnt4n"},"content":"        matcher.find();","lastModifiedDate":"2021-10-23"},{"lineNumber":32,"author":{"gitId":"bnjmnt4n"},"content":"        String name \u003d matcher.group(1);","lastModifiedDate":"2021-10-23"},{"lineNumber":33,"author":{"gitId":"bnjmnt4n"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":34,"author":{"gitId":"bnjmnt4n"},"content":"        int year \u003d Integer.parseInt(matcher.group(2));","lastModifiedDate":"2021-10-27"},{"lineNumber":35,"author":{"gitId":"bnjmnt4n"},"content":"        int month \u003d Integer.parseInt(matcher.group(3));","lastModifiedDate":"2021-10-23"},{"lineNumber":36,"author":{"gitId":"bnjmnt4n"},"content":"        int day \u003d Integer.parseInt(matcher.group(4));","lastModifiedDate":"2021-10-23"},{"lineNumber":37,"author":{"gitId":"bnjmnt4n"},"content":"        String recurring \u003d matcher.group(5);","lastModifiedDate":"2021-10-27"},{"lineNumber":38,"author":{"gitId":"bnjmnt4n"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":39,"author":{"gitId":"bnjmnt4n"},"content":"        this.name \u003d name;","lastModifiedDate":"2021-10-23"},{"lineNumber":40,"author":{"gitId":"bnjmnt4n"},"content":"        this.date \u003d LocalDate.of(year, month, day);","lastModifiedDate":"2021-10-23"},{"lineNumber":41,"author":{"gitId":"bnjmnt4n"},"content":"        this.recurrenceInterval \u003d recurring;","lastModifiedDate":"2021-10-27"},{"lineNumber":42,"author":{"gitId":"bnjmnt4n"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":43,"author":{"gitId":"bnjmnt4n"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":44,"author":{"gitId":"bnjmnt4n"},"content":"    public String getName() {","lastModifiedDate":"2021-10-23"},{"lineNumber":45,"author":{"gitId":"bnjmnt4n"},"content":"        return name;","lastModifiedDate":"2021-10-23"},{"lineNumber":46,"author":{"gitId":"bnjmnt4n"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":47,"author":{"gitId":"bnjmnt4n"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":48,"author":{"gitId":"bnjmnt4n"},"content":"    public LocalDate getDate() {","lastModifiedDate":"2021-10-23"},{"lineNumber":49,"author":{"gitId":"bnjmnt4n"},"content":"        return date;","lastModifiedDate":"2021-10-23"},{"lineNumber":50,"author":{"gitId":"bnjmnt4n"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":51,"author":{"gitId":"bnjmnt4n"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":52,"author":{"gitId":"bnjmnt4n"},"content":"    public Optional\u003cString\u003e getRecurrenceInterval() {","lastModifiedDate":"2021-10-27"},{"lineNumber":53,"author":{"gitId":"bnjmnt4n"},"content":"        return Optional.ofNullable(recurrenceInterval);","lastModifiedDate":"2021-10-27"},{"lineNumber":54,"author":{"gitId":"bnjmnt4n"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":55,"author":{"gitId":"bnjmnt4n"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":56,"author":{"gitId":"bnjmnt4n"},"content":"    /**","lastModifiedDate":"2021-10-27"},{"lineNumber":57,"author":{"gitId":"bnjmnt4n"},"content":"     * Returns the next occurrence of the date after the reference date.","lastModifiedDate":"2021-10-27"},{"lineNumber":58,"author":{"gitId":"bnjmnt4n"},"content":"     * Returns {@code Optional.empty()} for non-recurring dates which occur before the reference date.","lastModifiedDate":"2021-10-27"},{"lineNumber":59,"author":{"gitId":"bnjmnt4n"},"content":"     *","lastModifiedDate":"2021-10-27"},{"lineNumber":60,"author":{"gitId":"bnjmnt4n"},"content":"     * @param referenceDate The reference date.","lastModifiedDate":"2021-10-27"},{"lineNumber":61,"author":{"gitId":"bnjmnt4n"},"content":"     * @return The next occurrence of the date.","lastModifiedDate":"2021-10-27"},{"lineNumber":62,"author":{"gitId":"bnjmnt4n"},"content":"     */","lastModifiedDate":"2021-10-27"},{"lineNumber":63,"author":{"gitId":"bnjmnt4n"},"content":"    public Optional\u003cLocalDate\u003e getNextOccurrence(LocalDate referenceDate) {","lastModifiedDate":"2021-10-27"},{"lineNumber":64,"author":{"gitId":"bnjmnt4n"},"content":"        if (recurrenceInterval \u003d\u003d null) {","lastModifiedDate":"2021-10-27"},{"lineNumber":65,"author":{"gitId":"bnjmnt4n"},"content":"            return date.isBefore(referenceDate) ? Optional.empty() : Optional.of(date);","lastModifiedDate":"2021-10-27"},{"lineNumber":66,"author":{"gitId":"bnjmnt4n"},"content":"        }","lastModifiedDate":"2021-10-27"},{"lineNumber":67,"author":{"gitId":"bnjmnt4n"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":68,"author":{"gitId":"bnjmnt4n"},"content":"        Period interval \u003d getIntervalPeriod(recurrenceInterval);","lastModifiedDate":"2021-10-27"},{"lineNumber":69,"author":{"gitId":"bnjmnt4n"},"content":"        LocalDate newDate \u003d LocalDate.from(date);","lastModifiedDate":"2021-10-27"},{"lineNumber":70,"author":{"gitId":"bnjmnt4n"},"content":"        while (!newDate.isAfter(referenceDate)) {","lastModifiedDate":"2021-10-27"},{"lineNumber":71,"author":{"gitId":"bnjmnt4n"},"content":"            newDate \u003d newDate.plus(interval);","lastModifiedDate":"2021-10-27"},{"lineNumber":72,"author":{"gitId":"bnjmnt4n"},"content":"        }","lastModifiedDate":"2021-10-27"},{"lineNumber":73,"author":{"gitId":"bnjmnt4n"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":74,"author":{"gitId":"bnjmnt4n"},"content":"        return Optional.of(newDate);","lastModifiedDate":"2021-10-27"},{"lineNumber":75,"author":{"gitId":"bnjmnt4n"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":76,"author":{"gitId":"bnjmnt4n"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":77,"author":{"gitId":"bnjmnt4n"},"content":"    /**","lastModifiedDate":"2021-10-23"},{"lineNumber":78,"author":{"gitId":"bnjmnt4n"},"content":"     * Returns true if a given string is a valid sequence of dates.","lastModifiedDate":"2021-10-23"},{"lineNumber":79,"author":{"gitId":"bnjmnt4n"},"content":"     */","lastModifiedDate":"2021-10-23"},{"lineNumber":80,"author":{"gitId":"bnjmnt4n"},"content":"    public static boolean isValidDate(String test) {","lastModifiedDate":"2021-10-23"},{"lineNumber":81,"author":{"gitId":"bnjmnt4n"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2021-10-23"},{"lineNumber":82,"author":{"gitId":"bnjmnt4n"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":83,"author":{"gitId":"bnjmnt4n"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":84,"author":{"gitId":"bnjmnt4n"},"content":"    /**","lastModifiedDate":"2021-10-27"},{"lineNumber":85,"author":{"gitId":"bnjmnt4n"},"content":"     * Returns a comparator which can be used to compare dates.","lastModifiedDate":"2021-10-27"},{"lineNumber":86,"author":{"gitId":"bnjmnt4n"},"content":"     * Dates are compared based on their next occurence, followed by their original date.","lastModifiedDate":"2021-10-27"},{"lineNumber":87,"author":{"gitId":"bnjmnt4n"},"content":"     *","lastModifiedDate":"2021-10-27"},{"lineNumber":88,"author":{"gitId":"bnjmnt4n"},"content":"     * @return a comparator","lastModifiedDate":"2021-10-27"},{"lineNumber":89,"author":{"gitId":"bnjmnt4n"},"content":"     */","lastModifiedDate":"2021-10-27"},{"lineNumber":90,"author":{"gitId":"bnjmnt4n"},"content":"    public static Comparator\u003cDate\u003e getComparator() {","lastModifiedDate":"2021-10-27"},{"lineNumber":91,"author":{"gitId":"bnjmnt4n"},"content":"        Comparator\u003cDate\u003e comparator \u003d Comparator.comparing(date -\u003e date.getNextOccurrence(LocalDate.now())","lastModifiedDate":"2021-10-27"},{"lineNumber":92,"author":{"gitId":"bnjmnt4n"},"content":"                        .orElse(LocalDate.MIN),","lastModifiedDate":"2021-10-27"},{"lineNumber":93,"author":{"gitId":"bnjmnt4n"},"content":"                Comparator.reverseOrder());","lastModifiedDate":"2021-10-27"},{"lineNumber":94,"author":{"gitId":"bnjmnt4n"},"content":"        return comparator.thenComparing(date -\u003e date.getDate(), Comparator.reverseOrder());","lastModifiedDate":"2021-10-27"},{"lineNumber":95,"author":{"gitId":"bnjmnt4n"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":96,"author":{"gitId":"bnjmnt4n"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":97,"author":{"gitId":"bnjmnt4n"},"content":"    private static Period getIntervalPeriod(String recurrenceInterval) {","lastModifiedDate":"2021-10-27"},{"lineNumber":98,"author":{"gitId":"bnjmnt4n"},"content":"        switch (recurrenceInterval) {","lastModifiedDate":"2021-10-27"},{"lineNumber":99,"author":{"gitId":"bnjmnt4n"},"content":"        case \"yearly\":","lastModifiedDate":"2021-10-27"},{"lineNumber":100,"author":{"gitId":"bnjmnt4n"},"content":"            return Period.of(1, 0, 0);","lastModifiedDate":"2021-10-27"},{"lineNumber":101,"author":{"gitId":"bnjmnt4n"},"content":"        case \"monthly\":","lastModifiedDate":"2021-10-27"},{"lineNumber":102,"author":{"gitId":"bnjmnt4n"},"content":"            return Period.of(0, 1, 0);","lastModifiedDate":"2021-10-27"},{"lineNumber":103,"author":{"gitId":"bnjmnt4n"},"content":"        default:","lastModifiedDate":"2021-10-27"},{"lineNumber":104,"author":{"gitId":"bnjmnt4n"},"content":"            return null;","lastModifiedDate":"2021-10-27"},{"lineNumber":105,"author":{"gitId":"bnjmnt4n"},"content":"        }","lastModifiedDate":"2021-10-27"},{"lineNumber":106,"author":{"gitId":"bnjmnt4n"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":107,"author":{"gitId":"bnjmnt4n"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":108,"author":{"gitId":"bnjmnt4n"},"content":"    @Override","lastModifiedDate":"2021-10-23"},{"lineNumber":109,"author":{"gitId":"bnjmnt4n"},"content":"    public String toString() {","lastModifiedDate":"2021-10-23"},{"lineNumber":110,"author":{"gitId":"bnjmnt4n"},"content":"        return name + \": \" + date + (recurrenceInterval \u003d\u003d null ? \"\" : \" (\" + recurrenceInterval + \")\");","lastModifiedDate":"2021-10-27"},{"lineNumber":111,"author":{"gitId":"bnjmnt4n"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":112,"author":{"gitId":"bnjmnt4n"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":113,"author":{"gitId":"bnjmnt4n"},"content":"    @Override","lastModifiedDate":"2021-10-23"},{"lineNumber":114,"author":{"gitId":"bnjmnt4n"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-23"},{"lineNumber":115,"author":{"gitId":"bnjmnt4n"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-10-23"},{"lineNumber":116,"author":{"gitId":"bnjmnt4n"},"content":"                || (other instanceof Date // instanceof handles nulls","lastModifiedDate":"2021-10-23"},{"lineNumber":117,"author":{"gitId":"bnjmnt4n"},"content":"                \u0026\u0026 name.equals(((Date) other).name)","lastModifiedDate":"2021-10-23"},{"lineNumber":118,"author":{"gitId":"bnjmnt4n"},"content":"                \u0026\u0026 date.equals(((Date) other).date)","lastModifiedDate":"2021-10-26"},{"lineNumber":119,"author":{"gitId":"bnjmnt4n"},"content":"                \u0026\u0026 recurrenceInterval \u003d\u003d ((Date) other).recurrenceInterval); // state check","lastModifiedDate":"2021-10-27"},{"lineNumber":120,"author":{"gitId":"bnjmnt4n"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":121,"author":{"gitId":"bnjmnt4n"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":122,"author":{"gitId":"bnjmnt4n"},"content":"    @Override","lastModifiedDate":"2021-10-23"},{"lineNumber":123,"author":{"gitId":"bnjmnt4n"},"content":"    public int hashCode() {","lastModifiedDate":"2021-10-23"},{"lineNumber":124,"author":{"gitId":"bnjmnt4n"},"content":"        return Objects.hash(name, date, recurrenceInterval);","lastModifiedDate":"2021-10-27"},{"lineNumber":125,"author":{"gitId":"bnjmnt4n"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":126,"author":{"gitId":"bnjmnt4n"},"content":"}","lastModifiedDate":"2021-10-23"}],"authorContributionMap":{"bnjmnt4n":126}},{"path":"src/main/java/socialite/model/person/Dates.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"bnjmnt4n"},"content":"package socialite.model.person;","lastModifiedDate":"2021-10-21"},{"lineNumber":2,"author":{"gitId":"bnjmnt4n"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":3,"author":{"gitId":"bnjmnt4n"},"content":"import java.util.HashMap;","lastModifiedDate":"2021-10-21"},{"lineNumber":4,"author":{"gitId":"bnjmnt4n"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":5,"author":{"gitId":"bnjmnt4n"},"content":"public class Dates {","lastModifiedDate":"2021-10-21"},{"lineNumber":6,"author":{"gitId":"david-eom"},"content":"    private final HashMap\u003cString, Date\u003e value;","lastModifiedDate":"2021-10-28"},{"lineNumber":7,"author":{"gitId":"bnjmnt4n"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":8,"author":{"gitId":"bnjmnt4n"},"content":"    public Dates() {","lastModifiedDate":"2021-10-21"},{"lineNumber":9,"author":{"gitId":"bnjmnt4n"},"content":"        value \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2021-10-21"},{"lineNumber":10,"author":{"gitId":"bnjmnt4n"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":11,"author":{"gitId":"bnjmnt4n"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":12,"author":{"gitId":"bnjmnt4n"},"content":"    /**","lastModifiedDate":"2021-10-22"},{"lineNumber":13,"author":{"gitId":"bnjmnt4n"},"content":"     * Creates a new Dates object by copying the given object.","lastModifiedDate":"2021-10-23"},{"lineNumber":14,"author":{"gitId":"bnjmnt4n"},"content":"     * @param originalDates The {@code Dates} object to copy dates from.","lastModifiedDate":"2021-10-23"},{"lineNumber":15,"author":{"gitId":"bnjmnt4n"},"content":"     */","lastModifiedDate":"2021-10-22"},{"lineNumber":16,"author":{"gitId":"bnjmnt4n"},"content":"    public Dates(Dates originalDates) {","lastModifiedDate":"2021-10-21"},{"lineNumber":17,"author":{"gitId":"bnjmnt4n"},"content":"        if (originalDates \u003d\u003d null) {","lastModifiedDate":"2021-10-22"},{"lineNumber":18,"author":{"gitId":"bnjmnt4n"},"content":"            value \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2021-10-22"},{"lineNumber":19,"author":{"gitId":"bnjmnt4n"},"content":"        } else {","lastModifiedDate":"2021-10-22"},{"lineNumber":20,"author":{"gitId":"bnjmnt4n"},"content":"            value \u003d new HashMap\u003c\u003e(originalDates.value);","lastModifiedDate":"2021-10-21"},{"lineNumber":21,"author":{"gitId":"bnjmnt4n"},"content":"        }","lastModifiedDate":"2021-10-21"},{"lineNumber":22,"author":{"gitId":"bnjmnt4n"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":23,"author":{"gitId":"bnjmnt4n"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":24,"author":{"gitId":"bnjmnt4n"},"content":"    public void addDate(Date date) {","lastModifiedDate":"2021-10-23"},{"lineNumber":25,"author":{"gitId":"bnjmnt4n"},"content":"        value.put(date.getName(), date);","lastModifiedDate":"2021-10-23"},{"lineNumber":26,"author":{"gitId":"bnjmnt4n"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":27,"author":{"gitId":"bnjmnt4n"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":28,"author":{"gitId":"david-eom"},"content":"    public HashMap\u003cString, Date\u003e get() {","lastModifiedDate":"2021-10-28"},{"lineNumber":29,"author":{"gitId":"david-eom"},"content":"        return this.value;","lastModifiedDate":"2021-10-28"},{"lineNumber":30,"author":{"gitId":"david-eom"},"content":"    }","lastModifiedDate":"2021-10-28"},{"lineNumber":31,"author":{"gitId":"david-eom"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":32,"author":{"gitId":"bnjmnt4n"},"content":"    @Override","lastModifiedDate":"2021-10-21"},{"lineNumber":33,"author":{"gitId":"bnjmnt4n"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-21"},{"lineNumber":34,"author":{"gitId":"bnjmnt4n"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-10-21"},{"lineNumber":35,"author":{"gitId":"bnjmnt4n"},"content":"                || (other instanceof Dates // instanceof handles nulls","lastModifiedDate":"2021-10-21"},{"lineNumber":36,"author":{"gitId":"bnjmnt4n"},"content":"                \u0026\u0026 value.equals(((Dates) other).value)); // state check","lastModifiedDate":"2021-10-21"},{"lineNumber":37,"author":{"gitId":"bnjmnt4n"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":38,"author":{"gitId":"bnjmnt4n"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":39,"author":{"gitId":"bnjmnt4n"},"content":"    @Override","lastModifiedDate":"2021-10-21"},{"lineNumber":40,"author":{"gitId":"bnjmnt4n"},"content":"    public int hashCode() {","lastModifiedDate":"2021-10-21"},{"lineNumber":41,"author":{"gitId":"bnjmnt4n"},"content":"        return value.hashCode();","lastModifiedDate":"2021-10-21"},{"lineNumber":42,"author":{"gitId":"bnjmnt4n"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":43,"author":{"gitId":"bnjmnt4n"},"content":"}","lastModifiedDate":"2021-10-21"}],"authorContributionMap":{"bnjmnt4n":38,"david-eom":5}},{"path":"src/main/java/socialite/model/person/Name.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"david-eom"},"content":"package socialite.model.person;","lastModifiedDate":"2021-10-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"david-eom"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":5,"author":{"gitId":"david-eom"},"content":"import socialite.commons.util.AppUtil;","lastModifiedDate":"2021-10-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Represents a Person\u0027s name in the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidName(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class Name {","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2018-09-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"            \"Names should only contain alphanumeric characters and spaces, and it should not be blank\";","lastModifiedDate":"2018-04-04"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2017-01-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * The first character of the address must not be a whitespace,","lastModifiedDate":"2017-01-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2017-01-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-16"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d \"[\\\\p{Alnum}][\\\\p{Alnum} ]*\";","lastModifiedDate":"2018-09-22"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public final String fullName;","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * Constructs a {@code Name}.","lastModifiedDate":"2017-05-30"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * @param name A valid name.","lastModifiedDate":"2017-05-30"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public Name(String name) {","lastModifiedDate":"2017-05-30"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        requireNonNull(name);","lastModifiedDate":"2017-05-15"},{"lineNumber":31,"author":{"gitId":"david-eom"},"content":"        AppUtil.checkArgument(isValidName(name), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        fullName \u003d name;","lastModifiedDate":"2018-08-14"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * Returns true if a given string is a valid name.","lastModifiedDate":"2018-04-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public static boolean isValidName(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        return fullName;","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"                || (other instanceof Name // instanceof handles nulls","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"                \u0026\u0026 fullName.equals(((Name) other).fullName)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        return fullName.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"david-eom":4,"-":56}},{"path":"src/main/java/socialite/model/person/Person.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"david-eom"},"content":"package socialite.model.person;","lastModifiedDate":"2021-10-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"Zacchua"},"content":"import java.nio.file.Path;","lastModifiedDate":"2021-10-25"},{"lineNumber":4,"author":{"gitId":"david-eom"},"content":"import java.util.Collection;","lastModifiedDate":"2021-10-28"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-03-07"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-03-26"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"david-eom"},"content":"import socialite.commons.util.CollectionUtil;","lastModifiedDate":"2021-10-08"},{"lineNumber":11,"author":{"gitId":"david-eom"},"content":"import socialite.logic.commands.ShareCommand;","lastModifiedDate":"2021-10-25"},{"lineNumber":12,"author":{"gitId":"stanley-1"},"content":"import socialite.model.handle.Facebook;","lastModifiedDate":"2021-10-11"},{"lineNumber":13,"author":{"gitId":"stanley-1"},"content":"import socialite.model.handle.Instagram;","lastModifiedDate":"2021-10-11"},{"lineNumber":14,"author":{"gitId":"david-eom"},"content":"import socialite.model.handle.Telegram;","lastModifiedDate":"2021-10-08"},{"lineNumber":15,"author":{"gitId":"Zacchua"},"content":"import socialite.model.handle.TikTok;","lastModifiedDate":"2021-10-12"},{"lineNumber":16,"author":{"gitId":"Zacchua"},"content":"import socialite.model.handle.Twitter;","lastModifiedDate":"2021-10-11"},{"lineNumber":17,"author":{"gitId":"david-eom"},"content":"import socialite.model.tag.Tag;","lastModifiedDate":"2021-10-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":" * Represents a Person in the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":" * Guarantees: details are present and not null, field values are validated, immutable.","lastModifiedDate":"2017-12-20"},{"lineNumber":22,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"public class Person {","lastModifiedDate":"2018-01-10"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    // Identity fields","lastModifiedDate":"2018-04-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private final Name name;","lastModifiedDate":"2017-12-20"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private final Phone phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    // Data fields","lastModifiedDate":"2018-04-19"},{"lineNumber":30,"author":{"gitId":"EssWhyy"},"content":"    private final Remark remark;","lastModifiedDate":"2021-10-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private final Set\u003cTag\u003e tags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2018-03-26"},{"lineNumber":32,"author":{"gitId":"Zacchua"},"content":"    private ProfilePicture profilePicture \u003d ProfilePicture.DEFAULT_PICTURE;","lastModifiedDate":"2021-10-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"david-eom"},"content":"    // Social media handle fields","lastModifiedDate":"2021-10-08"},{"lineNumber":35,"author":{"gitId":"stanley-1"},"content":"    private final Facebook facebook;","lastModifiedDate":"2021-10-11"},{"lineNumber":36,"author":{"gitId":"stanley-1"},"content":"    private final Instagram instagram;","lastModifiedDate":"2021-10-11"},{"lineNumber":37,"author":{"gitId":"david-eom"},"content":"    private final Telegram telegram;","lastModifiedDate":"2021-10-08"},{"lineNumber":38,"author":{"gitId":"Zacchua"},"content":"    private final TikTok tiktok;","lastModifiedDate":"2021-10-12"},{"lineNumber":39,"author":{"gitId":"Zacchua"},"content":"    private final Twitter twitter;","lastModifiedDate":"2021-10-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"bnjmnt4n"},"content":"    private final Dates dates;","lastModifiedDate":"2021-10-21"},{"lineNumber":42,"author":{"gitId":"bnjmnt4n"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":43,"author":{"gitId":"david-eom"},"content":"    private boolean isPinned \u003d false;","lastModifiedDate":"2021-10-29"},{"lineNumber":44,"author":{"gitId":"david-eom"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     * Every field must be present and not null.","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"bnjmnt4n"},"content":"    public Person(Name name, Phone phone, Remark remark, Set\u003cTag\u003e tags,","lastModifiedDate":"2021-10-15"},{"lineNumber":49,"author":{"gitId":"bnjmnt4n"},"content":"                  Facebook facebook, Instagram instagram, Telegram telegram, TikTok tiktok, Twitter twitter,","lastModifiedDate":"2021-10-21"},{"lineNumber":50,"author":{"gitId":"bnjmnt4n"},"content":"                  Dates dates) {","lastModifiedDate":"2021-10-21"},{"lineNumber":51,"author":{"gitId":"bnjmnt4n"},"content":"        CollectionUtil.requireAllNonNull(name, phone, tags);","lastModifiedDate":"2021-10-12"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        this.name \u003d name;","lastModifiedDate":"2017-12-20"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":54,"author":{"gitId":"EssWhyy"},"content":"        this.remark \u003d remark;","lastModifiedDate":"2021-10-12"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        this.tags.addAll(tags);","lastModifiedDate":"2018-03-26"},{"lineNumber":56,"author":{"gitId":"stanley-1"},"content":"        this.facebook \u003d facebook;","lastModifiedDate":"2021-10-11"},{"lineNumber":57,"author":{"gitId":"stanley-1"},"content":"        this.instagram \u003d instagram;","lastModifiedDate":"2021-10-11"},{"lineNumber":58,"author":{"gitId":"david-eom"},"content":"        this.telegram \u003d telegram;","lastModifiedDate":"2021-10-08"},{"lineNumber":59,"author":{"gitId":"Zacchua"},"content":"        this.tiktok \u003d tiktok;","lastModifiedDate":"2021-10-12"},{"lineNumber":60,"author":{"gitId":"Zacchua"},"content":"        this.twitter \u003d twitter;","lastModifiedDate":"2021-10-12"},{"lineNumber":61,"author":{"gitId":"bnjmnt4n"},"content":"        this.dates \u003d dates;","lastModifiedDate":"2021-10-21"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public Name getName() {","lastModifiedDate":"2017-07-12"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        return name;","lastModifiedDate":"2017-12-20"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public Phone getPhone() {","lastModifiedDate":"2017-07-12"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        return phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":72,"author":{"gitId":"EssWhyy"},"content":"    public Remark getRemark() {","lastModifiedDate":"2021-10-12"},{"lineNumber":73,"author":{"gitId":"EssWhyy"},"content":"        return remark;","lastModifiedDate":"2021-10-12"},{"lineNumber":74,"author":{"gitId":"EssWhyy"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":75,"author":{"gitId":"EssWhyy"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":76,"author":{"gitId":"Zacchua"},"content":"    public Twitter getTwitter() {","lastModifiedDate":"2021-10-11"},{"lineNumber":77,"author":{"gitId":"Zacchua"},"content":"        return twitter;","lastModifiedDate":"2021-10-11"},{"lineNumber":78,"author":{"gitId":"Zacchua"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":79,"author":{"gitId":"Zacchua"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":80,"author":{"gitId":"Zacchua"},"content":"    public TikTok getTiktok() {","lastModifiedDate":"2021-10-12"},{"lineNumber":81,"author":{"gitId":"Zacchua"},"content":"        return tiktok;","lastModifiedDate":"2021-10-12"},{"lineNumber":82,"author":{"gitId":"Zacchua"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":83,"author":{"gitId":"Zacchua"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-07"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     * Returns an immutable tag set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2017-03-07"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * if modification is attempted.","lastModifiedDate":"2017-03-07"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-07"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    public Set\u003cTag\u003e getTags() {","lastModifiedDate":"2017-03-07"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        return Collections.unmodifiableSet(tags);","lastModifiedDate":"2018-03-26"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":92,"author":{"gitId":"Zacchua"},"content":"    public ProfilePicture getProfilePicture() {","lastModifiedDate":"2021-10-24"},{"lineNumber":93,"author":{"gitId":"Zacchua"},"content":"        return profilePicture;","lastModifiedDate":"2021-10-24"},{"lineNumber":94,"author":{"gitId":"Zacchua"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":95,"author":{"gitId":"Zacchua"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":96,"author":{"gitId":"stanley-1"},"content":"    public Facebook getFacebook() {","lastModifiedDate":"2021-10-11"},{"lineNumber":97,"author":{"gitId":"stanley-1"},"content":"        return facebook;","lastModifiedDate":"2021-10-11"},{"lineNumber":98,"author":{"gitId":"stanley-1"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":99,"author":{"gitId":"stanley-1"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":100,"author":{"gitId":"stanley-1"},"content":"    public Instagram getInstagram() {","lastModifiedDate":"2021-10-11"},{"lineNumber":101,"author":{"gitId":"stanley-1"},"content":"        return instagram;","lastModifiedDate":"2021-10-11"},{"lineNumber":102,"author":{"gitId":"stanley-1"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":103,"author":{"gitId":"stanley-1"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":104,"author":{"gitId":"david-eom"},"content":"    public Telegram getTelegram() {","lastModifiedDate":"2021-10-08"},{"lineNumber":105,"author":{"gitId":"david-eom"},"content":"        return telegram;","lastModifiedDate":"2021-10-08"},{"lineNumber":106,"author":{"gitId":"david-eom"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":107,"author":{"gitId":"david-eom"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":108,"author":{"gitId":"bnjmnt4n"},"content":"    public Dates getDates() {","lastModifiedDate":"2021-10-21"},{"lineNumber":109,"author":{"gitId":"bnjmnt4n"},"content":"        return dates;","lastModifiedDate":"2021-10-21"},{"lineNumber":110,"author":{"gitId":"bnjmnt4n"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":111,"author":{"gitId":"bnjmnt4n"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":112,"author":{"gitId":"Zacchua"},"content":"    public void setProfilePicture(Path value) {","lastModifiedDate":"2021-10-25"},{"lineNumber":113,"author":{"gitId":"Zacchua"},"content":"        this.profilePicture \u003d new ProfilePicture(value);","lastModifiedDate":"2021-10-24"},{"lineNumber":114,"author":{"gitId":"Zacchua"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":116,"author":{"gitId":"stanley-1"},"content":"     * Returns true if both persons have the same name and phone number.","lastModifiedDate":"2021-10-25"},{"lineNumber":117,"author":{"gitId":"stanley-1"},"content":"     * Rationale: Two unique persons can share the same first and last name.","lastModifiedDate":"2021-10-25"},{"lineNumber":118,"author":{"gitId":"stanley-1"},"content":"     * For example, a user might be friends with two different individuals who are named \"Alice Jones\".","lastModifiedDate":"2021-10-25"},{"lineNumber":119,"author":{"gitId":"stanley-1"},"content":"     * However, each Alice Jones will have a different phone number, similar to a unique National ID.","lastModifiedDate":"2021-10-25"},{"lineNumber":120,"author":{"gitId":"stanley-1"},"content":"     * Hence, the phone number shall act as the tiebreaker to differentiate the two individuals instead.","lastModifiedDate":"2021-10-25"},{"lineNumber":121,"author":{"gitId":"stanley-1"},"content":"     * Overall, this method defines a weaker notion of equality between two persons.","lastModifiedDate":"2021-10-25"},{"lineNumber":122,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    public boolean isSamePerson(Person otherPerson) {","lastModifiedDate":"2018-04-19"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        if (otherPerson \u003d\u003d this) {","lastModifiedDate":"2018-04-19"},{"lineNumber":125,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-04-19"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        return otherPerson !\u003d null","lastModifiedDate":"2018-04-19"},{"lineNumber":129,"author":{"gitId":"stanley-1"},"content":"                \u0026\u0026 otherPerson.getPhone().equals(getPhone());","lastModifiedDate":"2021-10-25"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":132,"author":{"gitId":"david-eom"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":133,"author":{"gitId":"david-eom"},"content":"    /**","lastModifiedDate":"2021-10-29"},{"lineNumber":134,"author":{"gitId":"david-eom"},"content":"     * Pinning-related methods","lastModifiedDate":"2021-10-29"},{"lineNumber":135,"author":{"gitId":"david-eom"},"content":"     */","lastModifiedDate":"2021-10-29"},{"lineNumber":136,"author":{"gitId":"david-eom"},"content":"    public boolean isPinned() {","lastModifiedDate":"2021-10-29"},{"lineNumber":137,"author":{"gitId":"david-eom"},"content":"        return isPinned;","lastModifiedDate":"2021-10-29"},{"lineNumber":138,"author":{"gitId":"david-eom"},"content":"    }","lastModifiedDate":"2021-10-29"},{"lineNumber":139,"author":{"gitId":"david-eom"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":140,"author":{"gitId":"david-eom"},"content":"    public void pin() {","lastModifiedDate":"2021-10-29"},{"lineNumber":141,"author":{"gitId":"david-eom"},"content":"        isPinned \u003d true;","lastModifiedDate":"2021-10-29"},{"lineNumber":142,"author":{"gitId":"david-eom"},"content":"    }","lastModifiedDate":"2021-10-29"},{"lineNumber":143,"author":{"gitId":"david-eom"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":144,"author":{"gitId":"david-eom"},"content":"    public void unpin() {","lastModifiedDate":"2021-10-29"},{"lineNumber":145,"author":{"gitId":"david-eom"},"content":"        isPinned \u003d false;","lastModifiedDate":"2021-10-29"},{"lineNumber":146,"author":{"gitId":"david-eom"},"content":"    }","lastModifiedDate":"2021-10-29"},{"lineNumber":147,"author":{"gitId":"david-eom"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":149,"author":{"gitId":"-"},"content":"     * Returns true if both persons have the same identity and data fields.","lastModifiedDate":"2018-04-19"},{"lineNumber":150,"author":{"gitId":"-"},"content":"     * This defines a stronger notion of equality between two persons.","lastModifiedDate":"2018-04-19"},{"lineNumber":151,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2018-01-10"},{"lineNumber":155,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-01-10"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-01-10"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-10"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        if (!(other instanceof Person)) {","lastModifiedDate":"2018-01-10"},{"lineNumber":159,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-01-10"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-01-10"},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-10"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        Person otherPerson \u003d (Person) other;","lastModifiedDate":"2018-01-10"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        return otherPerson.getName().equals(getName())","lastModifiedDate":"2018-08-14"},{"lineNumber":164,"author":{"gitId":"-"},"content":"                \u0026\u0026 otherPerson.getPhone().equals(getPhone())","lastModifiedDate":"2018-08-14"},{"lineNumber":165,"author":{"gitId":"david-eom"},"content":"                \u0026\u0026 otherPerson.getRemark().equals(getRemark())","lastModifiedDate":"2021-10-13"},{"lineNumber":166,"author":{"gitId":"Zacchua"},"content":"                \u0026\u0026 otherPerson.getTags().equals(getTags())","lastModifiedDate":"2021-10-12"},{"lineNumber":167,"author":{"gitId":"Zacchua"},"content":"                \u0026\u0026 otherPerson.getProfilePicture().equals(getProfilePicture())","lastModifiedDate":"2021-10-25"},{"lineNumber":168,"author":{"gitId":"stanley-1"},"content":"                \u0026\u0026 otherPerson.getFacebook().equals(getFacebook())","lastModifiedDate":"2021-10-12"},{"lineNumber":169,"author":{"gitId":"david-eom"},"content":"                \u0026\u0026 otherPerson.getInstagram().equals(getInstagram())","lastModifiedDate":"2021-10-12"},{"lineNumber":170,"author":{"gitId":"Zacchua"},"content":"                \u0026\u0026 otherPerson.getTelegram().equals(getTelegram())","lastModifiedDate":"2021-10-13"},{"lineNumber":171,"author":{"gitId":"Zacchua"},"content":"                \u0026\u0026 otherPerson.getTiktok().equals(getTiktok())","lastModifiedDate":"2021-10-12"},{"lineNumber":172,"author":{"gitId":"david-eom"},"content":"                \u0026\u0026 otherPerson.getTwitter().equals(getTwitter())","lastModifiedDate":"2021-10-28"},{"lineNumber":173,"author":{"gitId":"david-eom"},"content":"                \u0026\u0026 otherPerson.getDates().equals(getDates());","lastModifiedDate":"2021-10-28"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":175,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":176,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        // use this method for custom fields hashing instead of implementing your own","lastModifiedDate":"2016-08-24"},{"lineNumber":179,"author":{"gitId":"david-eom"},"content":"        return Objects.hash(name, phone, remark, tags, facebook, instagram, telegram, tiktok, twitter, dates);","lastModifiedDate":"2021-10-27"},{"lineNumber":180,"author":{"gitId":"david-eom"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":181,"author":{"gitId":"david-eom"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":182,"author":{"gitId":"david-eom"},"content":"    /**","lastModifiedDate":"2021-10-25"},{"lineNumber":183,"author":{"gitId":"david-eom"},"content":"     * Returns a formatted string when user wants to forward the contact using `share` command.","lastModifiedDate":"2021-10-25"},{"lineNumber":184,"author":{"gitId":"david-eom"},"content":"     */","lastModifiedDate":"2021-10-25"},{"lineNumber":185,"author":{"gitId":"david-eom"},"content":"    public String toSharingString() {","lastModifiedDate":"2021-10-25"},{"lineNumber":186,"author":{"gitId":"david-eom"},"content":"        final StringBuilder info \u003d new StringBuilder();","lastModifiedDate":"2021-10-25"},{"lineNumber":187,"author":{"gitId":"david-eom"},"content":"        info.append(\"\\tPhone: \").append(getPhone());","lastModifiedDate":"2021-10-25"},{"lineNumber":188,"author":{"gitId":"david-eom"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":189,"author":{"gitId":"david-eom"},"content":"        if (getFacebook().get() !\u003d null) {","lastModifiedDate":"2021-10-25"},{"lineNumber":190,"author":{"gitId":"david-eom"},"content":"            info.append(\"\\n\\tFacebook: \").append(getFacebook().get());","lastModifiedDate":"2021-10-25"},{"lineNumber":191,"author":{"gitId":"david-eom"},"content":"        }","lastModifiedDate":"2021-10-25"},{"lineNumber":192,"author":{"gitId":"david-eom"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":193,"author":{"gitId":"david-eom"},"content":"        if (getInstagram().get() !\u003d null) {","lastModifiedDate":"2021-10-25"},{"lineNumber":194,"author":{"gitId":"david-eom"},"content":"            info.append(\"\\n\\tInstagram: \").append(getInstagram().get());","lastModifiedDate":"2021-10-25"},{"lineNumber":195,"author":{"gitId":"david-eom"},"content":"        }","lastModifiedDate":"2021-10-25"},{"lineNumber":196,"author":{"gitId":"david-eom"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":197,"author":{"gitId":"david-eom"},"content":"        if (getTelegram().get() !\u003d null) {","lastModifiedDate":"2021-10-25"},{"lineNumber":198,"author":{"gitId":"david-eom"},"content":"            info.append(\"\\n\\tTelegram: \").append(getTelegram().get());","lastModifiedDate":"2021-10-25"},{"lineNumber":199,"author":{"gitId":"david-eom"},"content":"        }","lastModifiedDate":"2021-10-25"},{"lineNumber":200,"author":{"gitId":"david-eom"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":201,"author":{"gitId":"david-eom"},"content":"        if (getTiktok().get() !\u003d null) {","lastModifiedDate":"2021-10-25"},{"lineNumber":202,"author":{"gitId":"david-eom"},"content":"            info.append(\"\\n\\tTikTok: \").append(getTiktok().get());","lastModifiedDate":"2021-10-25"},{"lineNumber":203,"author":{"gitId":"david-eom"},"content":"        }","lastModifiedDate":"2021-10-25"},{"lineNumber":204,"author":{"gitId":"david-eom"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":205,"author":{"gitId":"david-eom"},"content":"        if (getTwitter().get() !\u003d null) {","lastModifiedDate":"2021-10-25"},{"lineNumber":206,"author":{"gitId":"david-eom"},"content":"            info.append(\"\\n\\tTwitter: \").append(getTwitter().get());","lastModifiedDate":"2021-10-25"},{"lineNumber":207,"author":{"gitId":"david-eom"},"content":"        }","lastModifiedDate":"2021-10-25"},{"lineNumber":208,"author":{"gitId":"david-eom"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":209,"author":{"gitId":"david-eom"},"content":"        return String.format(ShareCommand.MESSAGE_SHARE_PERSON_TEMPLATE, getName(), info);","lastModifiedDate":"2021-10-25"},{"lineNumber":210,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":211,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":212,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":213,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":214,"author":{"gitId":"-"},"content":"        final StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2018-01-10"},{"lineNumber":215,"author":{"gitId":"-"},"content":"        builder.append(getName())","lastModifiedDate":"2018-01-10"},{"lineNumber":216,"author":{"gitId":"-"},"content":"                .append(\"; Phone: \")","lastModifiedDate":"2020-12-11"},{"lineNumber":217,"author":{"gitId":"david-eom"},"content":"                .append(getPhone());","lastModifiedDate":"2021-10-22"},{"lineNumber":218,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-12-11"},{"lineNumber":219,"author":{"gitId":"Zacchua"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":220,"author":{"gitId":"david-eom"},"content":"        if (getFacebook().get() !\u003d null) {","lastModifiedDate":"2021-10-22"},{"lineNumber":221,"author":{"gitId":"Zacchua"},"content":"            builder.append(\"; Facebook: \").append(getFacebook().get());","lastModifiedDate":"2021-10-16"},{"lineNumber":222,"author":{"gitId":"stanley-1"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":223,"author":{"gitId":"stanley-1"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":224,"author":{"gitId":"david-eom"},"content":"        if (getInstagram().get() !\u003d null) {","lastModifiedDate":"2021-10-22"},{"lineNumber":225,"author":{"gitId":"Zacchua"},"content":"            builder.append(\"; Instagram: \").append(getInstagram().get());","lastModifiedDate":"2021-10-16"},{"lineNumber":226,"author":{"gitId":"stanley-1"},"content":"        }","lastModifiedDate":"2021-10-11"},{"lineNumber":227,"author":{"gitId":"stanley-1"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":228,"author":{"gitId":"david-eom"},"content":"        if (getTelegram().get() !\u003d null) {","lastModifiedDate":"2021-10-22"},{"lineNumber":229,"author":{"gitId":"Zacchua"},"content":"            builder.append(\"; Telegram: \").append(getTelegram().get());","lastModifiedDate":"2021-10-16"},{"lineNumber":230,"author":{"gitId":"david-eom"},"content":"        }","lastModifiedDate":"2021-10-08"},{"lineNumber":231,"author":{"gitId":"david-eom"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":232,"author":{"gitId":"david-eom"},"content":"        if (getTiktok().get() !\u003d null) {","lastModifiedDate":"2021-10-22"},{"lineNumber":233,"author":{"gitId":"Zacchua"},"content":"            builder.append(\"; TikTok: \").append(getTiktok().get());","lastModifiedDate":"2021-10-16"},{"lineNumber":234,"author":{"gitId":"Zacchua"},"content":"        }","lastModifiedDate":"2021-10-13"},{"lineNumber":235,"author":{"gitId":"Zacchua"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":236,"author":{"gitId":"david-eom"},"content":"        if (getTwitter().get() !\u003d null) {","lastModifiedDate":"2021-10-22"},{"lineNumber":237,"author":{"gitId":"Zacchua"},"content":"            builder.append(\"; Twitter: \").append(getTwitter().get());","lastModifiedDate":"2021-10-16"},{"lineNumber":238,"author":{"gitId":"Zacchua"},"content":"        }","lastModifiedDate":"2021-10-13"},{"lineNumber":239,"author":{"gitId":"Zacchua"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":240,"author":{"gitId":"david-eom"},"content":"        if (getRemark().get() !\u003d null) {","lastModifiedDate":"2021-10-22"},{"lineNumber":241,"author":{"gitId":"david-eom"},"content":"            builder.append(\"; Remark: \").append(getRemark().get());","lastModifiedDate":"2021-10-22"},{"lineNumber":242,"author":{"gitId":"david-eom"},"content":"        }","lastModifiedDate":"2021-10-22"},{"lineNumber":243,"author":{"gitId":"david-eom"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":244,"author":{"gitId":"david-eom"},"content":"        Set\u003cTag\u003e tags \u003d getTags();","lastModifiedDate":"2021-10-22"},{"lineNumber":245,"author":{"gitId":"david-eom"},"content":"        if (!tags.isEmpty()) {","lastModifiedDate":"2021-10-22"},{"lineNumber":246,"author":{"gitId":"david-eom"},"content":"            builder.append(\"; Tags: \");","lastModifiedDate":"2021-10-22"},{"lineNumber":247,"author":{"gitId":"david-eom"},"content":"            tags.forEach(builder::append);","lastModifiedDate":"2021-10-22"},{"lineNumber":248,"author":{"gitId":"david-eom"},"content":"        }","lastModifiedDate":"2021-10-22"},{"lineNumber":249,"author":{"gitId":"david-eom"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":250,"author":{"gitId":"david-eom"},"content":"        Collection\u003cDate\u003e dates \u003d getDates().get().values();","lastModifiedDate":"2021-10-28"},{"lineNumber":251,"author":{"gitId":"david-eom"},"content":"        if (!dates.isEmpty()) {","lastModifiedDate":"2021-10-28"},{"lineNumber":252,"author":{"gitId":"david-eom"},"content":"            builder.append(\"; Dates: \");","lastModifiedDate":"2021-10-28"},{"lineNumber":253,"author":{"gitId":"david-eom"},"content":"            dates.forEach(date -\u003e builder.append(\"[\").append(date).append(\"]\"));","lastModifiedDate":"2021-10-28"},{"lineNumber":254,"author":{"gitId":"david-eom"},"content":"        }","lastModifiedDate":"2021-10-28"},{"lineNumber":255,"author":{"gitId":"david-eom"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":256,"author":{"gitId":"-"},"content":"        return builder.toString();","lastModifiedDate":"2018-01-10"},{"lineNumber":257,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":258,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":259,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"Zacchua":37,"EssWhyy":6,"bnjmnt4n":11,"david-eom":90,"-":89,"stanley-1":26}},{"path":"src/main/java/socialite/model/person/Phone.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"david-eom"},"content":"package socialite.model.person;","lastModifiedDate":"2021-10-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"david-eom"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":5,"author":{"gitId":"david-eom"},"content":"import socialite.commons.util.AppUtil;","lastModifiedDate":"2021-10-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Represents a Person\u0027s phone number in the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidPhone(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class Phone {","lastModifiedDate":"2016-09-21"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2018-09-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":"            \"Phone numbers should only contain numbers, and it should be at least 3 digits long\";","lastModifiedDate":"2018-04-04"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d \"\\\\d{3,}\";","lastModifiedDate":"2018-09-22"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public final String value;","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * Constructs a {@code Phone}.","lastModifiedDate":"2017-05-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * @param phone A valid phone number.","lastModifiedDate":"2017-05-30"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public Phone(String phone) {","lastModifiedDate":"2017-05-30"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        requireNonNull(phone);","lastModifiedDate":"2017-05-15"},{"lineNumber":26,"author":{"gitId":"david-eom"},"content":"        AppUtil.checkArgument(isValidPhone(phone), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        value \u003d phone;","lastModifiedDate":"2018-08-14"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Returns true if a given string is a valid phone number.","lastModifiedDate":"2018-04-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public static boolean isValidPhone(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return value;","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"                || (other instanceof Phone // instanceof handles nulls","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"                \u0026\u0026 value.equals(((Phone) other).value)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        return value.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"david-eom":4,"-":50}},{"path":"src/main/java/socialite/model/person/ProfilePicture.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Zacchua"},"content":"package socialite.model.person;","lastModifiedDate":"2021-10-24"},{"lineNumber":2,"author":{"gitId":"Zacchua"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":3,"author":{"gitId":"Zacchua"},"content":"import java.nio.file.Path;","lastModifiedDate":"2021-10-25"},{"lineNumber":4,"author":{"gitId":"Zacchua"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2021-10-25"},{"lineNumber":5,"author":{"gitId":"Zacchua"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":6,"author":{"gitId":"Zacchua"},"content":"/**","lastModifiedDate":"2021-10-24"},{"lineNumber":7,"author":{"gitId":"Zacchua"},"content":" * Represents a Person\u0027s Profile Picture in address book.","lastModifiedDate":"2021-10-24"},{"lineNumber":8,"author":{"gitId":"Zacchua"},"content":" * Default value is the default profile picture.","lastModifiedDate":"2021-10-24"},{"lineNumber":9,"author":{"gitId":"Zacchua"},"content":" */","lastModifiedDate":"2021-10-24"},{"lineNumber":10,"author":{"gitId":"Zacchua"},"content":"public class ProfilePicture {","lastModifiedDate":"2021-10-24"},{"lineNumber":11,"author":{"gitId":"Zacchua"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":12,"author":{"gitId":"Zacchua"},"content":"    public static final ProfilePicture DEFAULT_PICTURE \u003d new ProfilePicture(","lastModifiedDate":"2021-10-25"},{"lineNumber":13,"author":{"gitId":"Zacchua"},"content":"            Paths.get(\"images\", \"default_profile_picture.png\"));","lastModifiedDate":"2021-10-25"},{"lineNumber":14,"author":{"gitId":"Zacchua"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":15,"author":{"gitId":"Zacchua"},"content":"    public final Path value;","lastModifiedDate":"2021-10-26"},{"lineNumber":16,"author":{"gitId":"Zacchua"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":17,"author":{"gitId":"Zacchua"},"content":"    public ProfilePicture(Path value) {","lastModifiedDate":"2021-10-25"},{"lineNumber":18,"author":{"gitId":"Zacchua"},"content":"        this.value \u003d value;","lastModifiedDate":"2021-10-24"},{"lineNumber":19,"author":{"gitId":"Zacchua"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":20,"author":{"gitId":"Zacchua"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":21,"author":{"gitId":"Zacchua"},"content":"    @Override","lastModifiedDate":"2021-10-25"},{"lineNumber":22,"author":{"gitId":"Zacchua"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-25"},{"lineNumber":23,"author":{"gitId":"Zacchua"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-10-25"},{"lineNumber":24,"author":{"gitId":"Zacchua"},"content":"                || (other instanceof ProfilePicture // instanceof handles nulls","lastModifiedDate":"2021-10-25"},{"lineNumber":25,"author":{"gitId":"Zacchua"},"content":"                \u0026\u0026 value.toString().equals(((ProfilePicture) other).value.toString())); // state check","lastModifiedDate":"2021-10-25"},{"lineNumber":26,"author":{"gitId":"Zacchua"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":27,"author":{"gitId":"Zacchua"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":28,"author":{"gitId":"Zacchua"},"content":"    @Override","lastModifiedDate":"2021-10-26"},{"lineNumber":29,"author":{"gitId":"Zacchua"},"content":"    public String toString() {","lastModifiedDate":"2021-10-26"},{"lineNumber":30,"author":{"gitId":"Zacchua"},"content":"        return this.value.toString();","lastModifiedDate":"2021-10-26"},{"lineNumber":31,"author":{"gitId":"Zacchua"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":32,"author":{"gitId":"Zacchua"},"content":"}","lastModifiedDate":"2021-10-24"}],"authorContributionMap":{"Zacchua":32}},{"path":"src/main/java/socialite/model/person/Remark.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"EssWhyy"},"content":"package socialite.model.person;","lastModifiedDate":"2021-10-12"},{"lineNumber":2,"author":{"gitId":"EssWhyy"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":3,"author":{"gitId":"david-eom"},"content":"import java.util.Optional;","lastModifiedDate":"2021-10-22"},{"lineNumber":4,"author":{"gitId":"EssWhyy"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":5,"author":{"gitId":"EssWhyy"},"content":"/**","lastModifiedDate":"2021-10-12"},{"lineNumber":6,"author":{"gitId":"EssWhyy"},"content":" * Represents a Person\u0027s remark in the address book.","lastModifiedDate":"2021-10-12"},{"lineNumber":7,"author":{"gitId":"EssWhyy"},"content":" * Guarantees: immutable; is always valid","lastModifiedDate":"2021-10-12"},{"lineNumber":8,"author":{"gitId":"EssWhyy"},"content":" */","lastModifiedDate":"2021-10-12"},{"lineNumber":9,"author":{"gitId":"EssWhyy"},"content":"public class Remark {","lastModifiedDate":"2021-10-12"},{"lineNumber":10,"author":{"gitId":"david-eom"},"content":"    public final Optional\u003cString\u003e value;","lastModifiedDate":"2021-10-22"},{"lineNumber":11,"author":{"gitId":"EssWhyy"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":12,"author":{"gitId":"david-eom"},"content":"    /**","lastModifiedDate":"2021-10-13"},{"lineNumber":13,"author":{"gitId":"david-eom"},"content":"     * Constructs a {@code Remark}.","lastModifiedDate":"2021-10-13"},{"lineNumber":14,"author":{"gitId":"david-eom"},"content":"     *","lastModifiedDate":"2021-10-13"},{"lineNumber":15,"author":{"gitId":"david-eom"},"content":"     * @param remark A valid remark.","lastModifiedDate":"2021-10-13"},{"lineNumber":16,"author":{"gitId":"david-eom"},"content":"     */","lastModifiedDate":"2021-10-13"},{"lineNumber":17,"author":{"gitId":"EssWhyy"},"content":"    public Remark(String remark) {","lastModifiedDate":"2021-10-12"},{"lineNumber":18,"author":{"gitId":"david-eom"},"content":"        value \u003d Optional.ofNullable(remark);","lastModifiedDate":"2021-10-22"},{"lineNumber":19,"author":{"gitId":"EssWhyy"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":20,"author":{"gitId":"EssWhyy"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":21,"author":{"gitId":"david-eom"},"content":"    public String get() {","lastModifiedDate":"2021-10-22"},{"lineNumber":22,"author":{"gitId":"david-eom"},"content":"        return this.value.orElse(null);","lastModifiedDate":"2021-10-22"},{"lineNumber":23,"author":{"gitId":"david-eom"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":24,"author":{"gitId":"david-eom"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":25,"author":{"gitId":"david-eom"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":26,"author":{"gitId":"EssWhyy"},"content":"    @Override","lastModifiedDate":"2021-10-12"},{"lineNumber":27,"author":{"gitId":"EssWhyy"},"content":"    public String toString() {","lastModifiedDate":"2021-10-12"},{"lineNumber":28,"author":{"gitId":"david-eom"},"content":"        return value.orElse(\"\");","lastModifiedDate":"2021-10-22"},{"lineNumber":29,"author":{"gitId":"EssWhyy"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":30,"author":{"gitId":"EssWhyy"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":31,"author":{"gitId":"EssWhyy"},"content":"    @Override","lastModifiedDate":"2021-10-12"},{"lineNumber":32,"author":{"gitId":"EssWhyy"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-12"},{"lineNumber":33,"author":{"gitId":"EssWhyy"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-10-12"},{"lineNumber":34,"author":{"gitId":"EssWhyy"},"content":"                || (other instanceof Remark // instanceof handles nulls","lastModifiedDate":"2021-10-12"},{"lineNumber":35,"author":{"gitId":"EssWhyy"},"content":"                \u0026\u0026 value.equals(((Remark) other).value)); // state check","lastModifiedDate":"2021-10-12"},{"lineNumber":36,"author":{"gitId":"EssWhyy"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":37,"author":{"gitId":"EssWhyy"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":38,"author":{"gitId":"EssWhyy"},"content":"    @Override","lastModifiedDate":"2021-10-12"},{"lineNumber":39,"author":{"gitId":"EssWhyy"},"content":"    public int hashCode() {","lastModifiedDate":"2021-10-12"},{"lineNumber":40,"author":{"gitId":"EssWhyy"},"content":"        return value.hashCode();","lastModifiedDate":"2021-10-12"},{"lineNumber":41,"author":{"gitId":"EssWhyy"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":42,"author":{"gitId":"EssWhyy"},"content":"}","lastModifiedDate":"2021-10-12"}],"authorContributionMap":{"EssWhyy":28,"david-eom":14}},{"path":"src/main/java/socialite/model/person/UniquePersonList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"david-eom"},"content":"package socialite.model.person;","lastModifiedDate":"2021-10-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Iterator;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"david-eom"},"content":"import socialite.commons.util.CollectionUtil;","lastModifiedDate":"2021-10-08"},{"lineNumber":11,"author":{"gitId":"david-eom"},"content":"import socialite.model.person.exceptions.DuplicatePersonException;","lastModifiedDate":"2021-10-08"},{"lineNumber":12,"author":{"gitId":"david-eom"},"content":"import socialite.model.person.exceptions.PersonNotFoundException;","lastModifiedDate":"2021-10-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * A list of persons that enforces uniqueness between its elements and does not allow nulls.","lastModifiedDate":"2016-09-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * A person is considered unique by comparing using {@code Person#isSamePerson(Person)}. As such, adding and updating of","lastModifiedDate":"2018-04-19"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * persons uses Person#isSamePerson(Person) for equality so as to ensure that the person being added or updated is","lastModifiedDate":"2018-04-19"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * unique in terms of identity in the UniquePersonList. However, the removal of a person uses Person#equals(Object) so","lastModifiedDate":"2018-04-19"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * as to ensure that the person with exactly the same fields will be removed.","lastModifiedDate":"2018-04-19"},{"lineNumber":20,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":" * Supports a minimal set of list operations.","lastModifiedDate":"2016-09-22"},{"lineNumber":22,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":" * @see Person#isSamePerson(Person)","lastModifiedDate":"2018-04-19"},{"lineNumber":24,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"public class UniquePersonList implements Iterable\u003cPerson\u003e {","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private final ObservableList\u003cPerson\u003e internalList \u003d FXCollections.observableArrayList();","lastModifiedDate":"2016-10-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private final ObservableList\u003cPerson\u003e internalUnmodifiableList \u003d","lastModifiedDate":"2018-12-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            FXCollections.unmodifiableObservableList(internalList);","lastModifiedDate":"2018-12-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * Returns true if the list contains an equivalent person as the given argument.","lastModifiedDate":"2016-09-22"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public boolean contains(Person toCheck) {","lastModifiedDate":"2018-01-10"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        requireNonNull(toCheck);","lastModifiedDate":"2017-05-15"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        return internalList.stream().anyMatch(toCheck::isSamePerson);","lastModifiedDate":"2018-04-19"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * Adds a person to the list.","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * The person must not already exist in the list.","lastModifiedDate":"2018-08-07"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public void add(Person toAdd) {","lastModifiedDate":"2018-08-07"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        requireNonNull(toAdd);","lastModifiedDate":"2017-05-15"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        if (contains(toAdd)) {","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            throw new DuplicatePersonException();","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        internalList.add(toAdd);","lastModifiedDate":"2018-01-10"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * Replaces the person {@code target} in the list with {@code editedPerson}.","lastModifiedDate":"2017-06-07"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * {@code target} must exist in the list.","lastModifiedDate":"2018-08-07"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * The person identity of {@code editedPerson} must not be the same as another existing person in the list.","lastModifiedDate":"2018-08-07"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-07"},{"lineNumber":57,"author":{"gitId":"david-eom"},"content":"        CollectionUtil.requireAllNonNull(target, editedPerson);","lastModifiedDate":"2021-10-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        int index \u003d internalList.indexOf(target);","lastModifiedDate":"2017-06-07"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        if (index \u003d\u003d -1) {","lastModifiedDate":"2017-06-07"},{"lineNumber":61,"author":{"gitId":"-"},"content":"            throw new PersonNotFoundException();","lastModifiedDate":"2017-06-07"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-06-07"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-07"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        if (!target.isSamePerson(editedPerson) \u0026\u0026 contains(editedPerson)) {","lastModifiedDate":"2018-04-19"},{"lineNumber":65,"author":{"gitId":"-"},"content":"            throw new DuplicatePersonException();","lastModifiedDate":"2016-12-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        internalList.set(index, editedPerson);","lastModifiedDate":"2018-01-10"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     * Removes the equivalent person from the list.","lastModifiedDate":"2016-08-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     * The person must exist in the list.","lastModifiedDate":"2018-08-07"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public void remove(Person toRemove) {","lastModifiedDate":"2018-08-07"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        requireNonNull(toRemove);","lastModifiedDate":"2017-05-15"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        if (!internalList.remove(toRemove)) {","lastModifiedDate":"2018-02-28"},{"lineNumber":78,"author":{"gitId":"-"},"content":"            throw new PersonNotFoundException();","lastModifiedDate":"2016-08-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public void setPersons(UniquePersonList replacement) {","lastModifiedDate":"2016-10-19"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        requireNonNull(replacement);","lastModifiedDate":"2018-08-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        internalList.setAll(replacement.internalList);","lastModifiedDate":"2018-08-14"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-19"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     * Replaces the contents of this list with {@code persons}.","lastModifiedDate":"2018-08-07"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     * {@code persons} must not contain duplicate persons.","lastModifiedDate":"2018-08-07"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    public void setPersons(List\u003cPerson\u003e persons) {","lastModifiedDate":"2018-08-07"},{"lineNumber":92,"author":{"gitId":"david-eom"},"content":"        CollectionUtil.requireAllNonNull(persons);","lastModifiedDate":"2021-10-08"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        if (!personsAreUnique(persons)) {","lastModifiedDate":"2018-04-19"},{"lineNumber":94,"author":{"gitId":"-"},"content":"            throw new DuplicatePersonException();","lastModifiedDate":"2018-01-21"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-24"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-21"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        internalList.setAll(persons);","lastModifiedDate":"2018-08-14"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":100,"author":{"gitId":"david-eom"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":101,"author":{"gitId":"david-eom"},"content":"    /**","lastModifiedDate":"2021-10-29"},{"lineNumber":102,"author":{"gitId":"david-eom"},"content":"     * Sorts the contents of this list, by pinned status first, and then alphabetically according to the full name.","lastModifiedDate":"2021-10-29"},{"lineNumber":103,"author":{"gitId":"david-eom"},"content":"     */","lastModifiedDate":"2021-10-29"},{"lineNumber":104,"author":{"gitId":"david-eom"},"content":"    public void sortPersons() {","lastModifiedDate":"2021-10-29"},{"lineNumber":105,"author":{"gitId":"david-eom"},"content":"        internalList.sort((p1, p2) -\u003e {","lastModifiedDate":"2021-10-29"},{"lineNumber":106,"author":{"gitId":"david-eom"},"content":"            if (p1.isPinned() \u003d\u003d p2.isPinned()) {","lastModifiedDate":"2021-10-29"},{"lineNumber":107,"author":{"gitId":"david-eom"},"content":"                String n1 \u003d p1.getName().toString().toLowerCase();","lastModifiedDate":"2021-10-29"},{"lineNumber":108,"author":{"gitId":"david-eom"},"content":"                String n2 \u003d p2.getName().toString().toLowerCase();","lastModifiedDate":"2021-10-29"},{"lineNumber":109,"author":{"gitId":"david-eom"},"content":"                return n1.compareTo(n2);","lastModifiedDate":"2021-10-29"},{"lineNumber":110,"author":{"gitId":"david-eom"},"content":"            } else if (p1.isPinned()) {","lastModifiedDate":"2021-10-29"},{"lineNumber":111,"author":{"gitId":"david-eom"},"content":"                return -1;","lastModifiedDate":"2021-10-29"},{"lineNumber":112,"author":{"gitId":"david-eom"},"content":"            } else {","lastModifiedDate":"2021-10-29"},{"lineNumber":113,"author":{"gitId":"david-eom"},"content":"                return 1;","lastModifiedDate":"2021-10-29"},{"lineNumber":114,"author":{"gitId":"david-eom"},"content":"            }","lastModifiedDate":"2021-10-29"},{"lineNumber":115,"author":{"gitId":"david-eom"},"content":"        });","lastModifiedDate":"2021-10-29"},{"lineNumber":116,"author":{"gitId":"david-eom"},"content":"    }","lastModifiedDate":"2021-10-29"},{"lineNumber":117,"author":{"gitId":"david-eom"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-09-01"},{"lineNumber":119,"author":{"gitId":"-"},"content":"     * Returns the backing list as an unmodifiable {@code ObservableList}.","lastModifiedDate":"2017-09-01"},{"lineNumber":120,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-09-01"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e asUnmodifiableObservableList() {","lastModifiedDate":"2018-04-05"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        return internalUnmodifiableList;","lastModifiedDate":"2018-12-09"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    public Iterator\u003cPerson\u003e iterator() {","lastModifiedDate":"2016-08-24"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        return internalList.iterator();","lastModifiedDate":"2016-08-24"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-21"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-09-21"},{"lineNumber":133,"author":{"gitId":"-"},"content":"                || (other instanceof UniquePersonList // instanceof handles nulls","lastModifiedDate":"2016-09-21"},{"lineNumber":134,"author":{"gitId":"-"},"content":"                        \u0026\u0026 internalList.equals(((UniquePersonList) other).internalList));","lastModifiedDate":"2018-08-14"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-21"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        return internalList.hashCode();","lastModifiedDate":"2016-09-21"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":143,"author":{"gitId":"-"},"content":"     * Returns true if {@code persons} contains only unique persons.","lastModifiedDate":"2018-04-19"},{"lineNumber":144,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    private boolean personsAreUnique(List\u003cPerson\u003e persons) {","lastModifiedDate":"2018-04-19"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        for (int i \u003d 0; i \u003c persons.size() - 1; i++) {","lastModifiedDate":"2018-04-19"},{"lineNumber":147,"author":{"gitId":"-"},"content":"            for (int j \u003d i + 1; j \u003c persons.size(); j++) {","lastModifiedDate":"2018-04-19"},{"lineNumber":148,"author":{"gitId":"-"},"content":"                if (persons.get(i).isSamePerson(persons.get(j))) {","lastModifiedDate":"2018-04-19"},{"lineNumber":149,"author":{"gitId":"-"},"content":"                    return false;","lastModifiedDate":"2018-04-19"},{"lineNumber":150,"author":{"gitId":"-"},"content":"                }","lastModifiedDate":"2018-04-19"},{"lineNumber":151,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-04-19"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        return true;","lastModifiedDate":"2018-04-19"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":155,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"david-eom":24,"-":131}},{"path":"src/main/java/socialite/model/person/exceptions/DuplicatePersonException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"david-eom"},"content":"package socialite.model.person.exceptions;","lastModifiedDate":"2021-10-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-09"},{"lineNumber":4,"author":{"gitId":"stanley-1"},"content":" * Signals that the operation will result in duplicate Persons","lastModifiedDate":"2021-10-25"},{"lineNumber":5,"author":{"gitId":"stanley-1"},"content":" * (Persons are considered duplicates if they have the same","lastModifiedDate":"2021-10-25"},{"lineNumber":6,"author":{"gitId":"stanley-1"},"content":" * phone number).","lastModifiedDate":"2021-11-01"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class DuplicatePersonException extends RuntimeException {","lastModifiedDate":"2018-08-07"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    public DuplicatePersonException() {","lastModifiedDate":"2017-06-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"        super(\"Operation would result in duplicate persons\");","lastModifiedDate":"2017-06-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-09"}],"authorContributionMap":{"david-eom":1,"-":8,"stanley-1":3}},{"path":"src/main/java/socialite/model/person/exceptions/PersonNotFoundException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"david-eom"},"content":"package socialite.model.person.exceptions;","lastModifiedDate":"2021-10-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Signals that the operation is unable to find the specified person.","lastModifiedDate":"2017-06-09"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-09"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class PersonNotFoundException extends RuntimeException {}","lastModifiedDate":"2018-08-07"}],"authorContributionMap":{"david-eom":1,"-":5}},{"path":"src/main/java/socialite/model/tag/Tag.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"david-eom"},"content":"package socialite.model.tag;","lastModifiedDate":"2021-10-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"david-eom"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":5,"author":{"gitId":"david-eom"},"content":"import socialite.commons.util.AppUtil;","lastModifiedDate":"2021-10-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Represents a Tag in the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Guarantees: immutable; name is valid as declared in {@link #isValidTagName(String)}","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class Tag {","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d \"Tags names should be alphanumeric\";","lastModifiedDate":"2018-09-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public static final String VALIDATION_REGEX \u003d \"\\\\p{Alnum}+\";","lastModifiedDate":"2018-09-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public final String tagName;","lastModifiedDate":"2016-10-19"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * Constructs a {@code Tag}.","lastModifiedDate":"2017-05-30"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * @param tagName A valid tag name.","lastModifiedDate":"2017-05-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public Tag(String tagName) {","lastModifiedDate":"2017-05-30"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        requireNonNull(tagName);","lastModifiedDate":"2017-05-30"},{"lineNumber":25,"author":{"gitId":"david-eom"},"content":"        AppUtil.checkArgument(isValidTagName(tagName), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        this.tagName \u003d tagName;","lastModifiedDate":"2017-05-30"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Returns true if a given string is a valid tag name.","lastModifiedDate":"2016-09-22"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static boolean isValidTagName(String test) {","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2018-09-22"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"                || (other instanceof Tag // instanceof handles nulls","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"                \u0026\u0026 tagName.equals(((Tag) other).tagName)); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        return tagName.hashCode();","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     * Format state as text for viewing.","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        return \u0027[\u0027 + tagName + \u0027]\u0027;","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"david-eom":4,"-":51}},{"path":"src/main/java/socialite/model/util/SampleDataUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"david-eom"},"content":"package socialite.model.util;","lastModifiedDate":"2021-10-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-14"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-01-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":7,"author":{"gitId":"david-eom"},"content":"import socialite.model.AddressBook;","lastModifiedDate":"2021-10-08"},{"lineNumber":8,"author":{"gitId":"david-eom"},"content":"import socialite.model.CommandHistory;","lastModifiedDate":"2021-10-21"},{"lineNumber":9,"author":{"gitId":"david-eom"},"content":"import socialite.model.ReadOnlyAddressBook;","lastModifiedDate":"2021-10-08"},{"lineNumber":10,"author":{"gitId":"david-eom"},"content":"import socialite.model.ReadOnlyCommandHistory;","lastModifiedDate":"2021-10-21"},{"lineNumber":11,"author":{"gitId":"stanley-1"},"content":"import socialite.model.handle.Facebook;","lastModifiedDate":"2021-10-11"},{"lineNumber":12,"author":{"gitId":"stanley-1"},"content":"import socialite.model.handle.Instagram;","lastModifiedDate":"2021-10-11"},{"lineNumber":13,"author":{"gitId":"david-eom"},"content":"import socialite.model.handle.Telegram;","lastModifiedDate":"2021-10-08"},{"lineNumber":14,"author":{"gitId":"Zacchua"},"content":"import socialite.model.handle.TikTok;","lastModifiedDate":"2021-10-12"},{"lineNumber":15,"author":{"gitId":"Zacchua"},"content":"import socialite.model.handle.Twitter;","lastModifiedDate":"2021-10-11"},{"lineNumber":16,"author":{"gitId":"bnjmnt4n"},"content":"import socialite.model.person.Dates;","lastModifiedDate":"2021-10-23"},{"lineNumber":17,"author":{"gitId":"david-eom"},"content":"import socialite.model.person.Name;","lastModifiedDate":"2021-10-08"},{"lineNumber":18,"author":{"gitId":"david-eom"},"content":"import socialite.model.person.Person;","lastModifiedDate":"2021-10-08"},{"lineNumber":19,"author":{"gitId":"david-eom"},"content":"import socialite.model.person.Phone;","lastModifiedDate":"2021-10-08"},{"lineNumber":20,"author":{"gitId":"EssWhyy"},"content":"import socialite.model.person.Remark;","lastModifiedDate":"2021-10-12"},{"lineNumber":21,"author":{"gitId":"david-eom"},"content":"import socialite.model.tag.Tag;","lastModifiedDate":"2021-10-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":" * Contains utility methods for populating {@code AddressBook} with sample data.","lastModifiedDate":"2017-08-16"},{"lineNumber":25,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":26,"author":{"gitId":"-"},"content":"public class SampleDataUtil {","lastModifiedDate":"2016-12-20"},{"lineNumber":27,"author":{"gitId":"EssWhyy"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":28,"author":{"gitId":"david-eom"},"content":"    public static final Remark EMPTY_REMARK \u003d new Remark(null);","lastModifiedDate":"2021-10-22"},{"lineNumber":29,"author":{"gitId":"david-eom"},"content":"    public static final Facebook EMPTY_FACEBOOK \u003d new Facebook(null);","lastModifiedDate":"2021-10-22"},{"lineNumber":30,"author":{"gitId":"david-eom"},"content":"    public static final Instagram EMPTY_INSTAGRAM \u003d new Instagram(null);","lastModifiedDate":"2021-10-22"},{"lineNumber":31,"author":{"gitId":"david-eom"},"content":"    public static final Telegram EMPTY_TELEGRAM \u003d new Telegram(null);","lastModifiedDate":"2021-10-22"},{"lineNumber":32,"author":{"gitId":"david-eom"},"content":"    public static final TikTok EMPTY_TIKTOK \u003d new TikTok(null);","lastModifiedDate":"2021-10-22"},{"lineNumber":33,"author":{"gitId":"david-eom"},"content":"    public static final Twitter EMPTY_TWITTER \u003d new Twitter(null);","lastModifiedDate":"2021-10-22"},{"lineNumber":34,"author":{"gitId":"bnjmnt4n"},"content":"    public static final Dates EMPTY_DATES \u003d new Dates();","lastModifiedDate":"2021-10-26"},{"lineNumber":35,"author":{"gitId":"EssWhyy"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public static Person[] getSamplePersons() {","lastModifiedDate":"2016-12-20"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        return new Person[] {","lastModifiedDate":"2016-12-20"},{"lineNumber":38,"author":{"gitId":"bnjmnt4n"},"content":"            new Person(new Name(\"Alex Yeoh\"), new Phone(\"87438807\"), EMPTY_REMARK,","lastModifiedDate":"2021-10-15"},{"lineNumber":39,"author":{"gitId":"david-eom"},"content":"                getTagSet(\"friends\"), new Facebook(\"alex.yeoh\"), new Instagram(\"alex.yeoh\"),","lastModifiedDate":"2021-10-12"},{"lineNumber":40,"author":{"gitId":"bnjmnt4n"},"content":"                new Telegram(\"alyeoh\"), new TikTok(\"alex.yeoh\"), EMPTY_TWITTER,","lastModifiedDate":"2021-10-23"},{"lineNumber":41,"author":{"gitId":"bnjmnt4n"},"content":"                EMPTY_DATES),","lastModifiedDate":"2021-10-26"},{"lineNumber":42,"author":{"gitId":"bnjmnt4n"},"content":"            new Person(new Name(\"Bernice Yu\"), new Phone(\"99272758\"), EMPTY_REMARK,","lastModifiedDate":"2021-10-15"},{"lineNumber":43,"author":{"gitId":"david-eom"},"content":"                getTagSet(\"colleagues\", \"friends\"), new Facebook(\"bern.yu\"),","lastModifiedDate":"2021-10-12"},{"lineNumber":44,"author":{"gitId":"david-eom"},"content":"                EMPTY_INSTAGRAM, new Telegram(\"bern_yu\"),","lastModifiedDate":"2021-10-22"},{"lineNumber":45,"author":{"gitId":"bnjmnt4n"},"content":"                new TikTok(\"bernice.yu\"), new Twitter(\"berniceyu\"), EMPTY_DATES),","lastModifiedDate":"2021-10-26"},{"lineNumber":46,"author":{"gitId":"david-eom"},"content":"            new Person(new Name(\"Charlotte Oliveiro\"), new Phone(\"93210283\"), new Remark(\"Her birthday coming!\"),","lastModifiedDate":"2021-10-22"},{"lineNumber":47,"author":{"gitId":"david-eom"},"content":"                getTagSet(\"neighbours\"), EMPTY_FACEBOOK,","lastModifiedDate":"2021-10-22"},{"lineNumber":48,"author":{"gitId":"Zacchua"},"content":"                new Instagram(\"charlotte.oli\"), new Telegram(\"olichar\"),","lastModifiedDate":"2021-10-13"},{"lineNumber":49,"author":{"gitId":"bnjmnt4n"},"content":"                EMPTY_TIKTOK, new Twitter(\"charolive\"), EMPTY_DATES),","lastModifiedDate":"2021-10-26"},{"lineNumber":50,"author":{"gitId":"bnjmnt4n"},"content":"            new Person(new Name(\"David Li\"), new Phone(\"91031282\"), EMPTY_REMARK,","lastModifiedDate":"2021-10-15"},{"lineNumber":51,"author":{"gitId":"david-eom"},"content":"                getTagSet(\"family\"), new Facebook(\"davey\"),","lastModifiedDate":"2021-10-12"},{"lineNumber":52,"author":{"gitId":"bnjmnt4n"},"content":"                new Instagram(\"davey\"), new Telegram(\"david_li\"), new TikTok(\"david\"), new Twitter(\"david\"),","lastModifiedDate":"2021-10-23"},{"lineNumber":53,"author":{"gitId":"bnjmnt4n"},"content":"                EMPTY_DATES),","lastModifiedDate":"2021-10-26"},{"lineNumber":54,"author":{"gitId":"david-eom"},"content":"            new Person(new Name(\"Irfan Ibrahim\"), new Phone(\"92492021\"), new Remark(\"Outing on Saturday\"),","lastModifiedDate":"2021-10-22"},{"lineNumber":55,"author":{"gitId":"david-eom"},"content":"                getTagSet(\"classmates\"), new Facebook(\"irfan.him\"),","lastModifiedDate":"2021-10-12"},{"lineNumber":56,"author":{"gitId":"Zacchua"},"content":"                new Instagram(\"irfan.him\"), new Telegram(\"irfan_ibrahim\"),","lastModifiedDate":"2021-10-13"},{"lineNumber":57,"author":{"gitId":"bnjmnt4n"},"content":"                new TikTok(\"irfan\"), new Twitter(\"irfanibrahim\"), EMPTY_DATES),","lastModifiedDate":"2021-10-26"},{"lineNumber":58,"author":{"gitId":"bnjmnt4n"},"content":"            new Person(new Name(\"Roy Balakrishnan\"), new Phone(\"92624417\"), EMPTY_REMARK,","lastModifiedDate":"2021-10-15"},{"lineNumber":59,"author":{"gitId":"david-eom"},"content":"                getTagSet(\"colleagues\"), new Facebook(\"balaroy\"),","lastModifiedDate":"2021-10-12"},{"lineNumber":60,"author":{"gitId":"david-eom"},"content":"                new Instagram(\"balaroy\"), EMPTY_TELEGRAM,","lastModifiedDate":"2021-10-22"},{"lineNumber":61,"author":{"gitId":"bnjmnt4n"},"content":"                EMPTY_TIKTOK, new Twitter(\"royB\"), EMPTY_DATES)","lastModifiedDate":"2021-10-26"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        };","lastModifiedDate":"2016-12-20"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-20"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":65,"author":{"gitId":"david-eom"},"content":"    public static String[] getSampleCommands() {","lastModifiedDate":"2021-10-21"},{"lineNumber":66,"author":{"gitId":"david-eom"},"content":"        return new String[] {","lastModifiedDate":"2021-10-21"},{"lineNumber":67,"author":{"gitId":"david-eom"},"content":"            \"list\",","lastModifiedDate":"2021-10-21"},{"lineNumber":68,"author":{"gitId":"david-eom"},"content":"            \"help\",","lastModifiedDate":"2021-10-21"},{"lineNumber":69,"author":{"gitId":"david-eom"},"content":"            \"help add\",","lastModifiedDate":"2021-10-21"},{"lineNumber":70,"author":{"gitId":"david-eom"},"content":"        };","lastModifiedDate":"2021-10-21"},{"lineNumber":71,"author":{"gitId":"david-eom"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":72,"author":{"gitId":"david-eom"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":73,"author":{"gitId":"david-eom"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public static ReadOnlyAddressBook getSampleAddressBook() {","lastModifiedDate":"2016-12-20"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        AddressBook sampleAb \u003d new AddressBook();","lastModifiedDate":"2017-04-07"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        for (Person samplePerson : getSamplePersons()) {","lastModifiedDate":"2016-12-20"},{"lineNumber":77,"author":{"gitId":"-"},"content":"            sampleAb.addPerson(samplePerson);","lastModifiedDate":"2017-04-07"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-20"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        return sampleAb;","lastModifiedDate":"2017-04-07"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-20"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-14"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     * Returns a tag set containing the list of strings given.","lastModifiedDate":"2017-03-14"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-14"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    public static Set\u003cTag\u003e getTagSet(String... strings) {","lastModifiedDate":"2017-05-30"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        return Arrays.stream(strings)","lastModifiedDate":"2018-01-21"},{"lineNumber":87,"author":{"gitId":"-"},"content":"                .map(Tag::new)","lastModifiedDate":"2018-01-21"},{"lineNumber":88,"author":{"gitId":"-"},"content":"                .collect(Collectors.toSet());","lastModifiedDate":"2018-01-21"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-14"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":91,"author":{"gitId":"david-eom"},"content":"    public static ReadOnlyCommandHistory getSampleCommandHistory() {","lastModifiedDate":"2021-10-21"},{"lineNumber":92,"author":{"gitId":"david-eom"},"content":"        CommandHistory sampleCh \u003d new CommandHistory();","lastModifiedDate":"2021-10-21"},{"lineNumber":93,"author":{"gitId":"david-eom"},"content":"        for (String sampleCommand : getSampleCommands()) {","lastModifiedDate":"2021-10-21"},{"lineNumber":94,"author":{"gitId":"david-eom"},"content":"            sampleCh.addCommand(sampleCommand);","lastModifiedDate":"2021-10-21"},{"lineNumber":95,"author":{"gitId":"david-eom"},"content":"        }","lastModifiedDate":"2021-10-21"},{"lineNumber":96,"author":{"gitId":"david-eom"},"content":"        return sampleCh;","lastModifiedDate":"2021-10-21"},{"lineNumber":97,"author":{"gitId":"david-eom"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":98,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-20"}],"authorContributionMap":{"Zacchua":4,"EssWhyy":3,"bnjmnt4n":14,"david-eom":42,"-":33,"stanley-1":2}},{"path":"src/main/java/socialite/storage/AddressBookStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"david-eom"},"content":"package socialite.storage;","lastModifiedDate":"2021-10-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-09-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2016-09-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":7,"author":{"gitId":"david-eom"},"content":"import socialite.commons.exceptions.DataConversionException;","lastModifiedDate":"2021-10-08"},{"lineNumber":8,"author":{"gitId":"david-eom"},"content":"import socialite.model.AddressBook;","lastModifiedDate":"2021-10-08"},{"lineNumber":9,"author":{"gitId":"david-eom"},"content":"import socialite.model.ReadOnlyAddressBook;","lastModifiedDate":"2021-10-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-24"},{"lineNumber":12,"author":{"gitId":"david-eom"},"content":" * Represents a storage for {@link AddressBook}.","lastModifiedDate":"2021-10-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public interface AddressBookStorage {","lastModifiedDate":"2016-09-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * Returns the file path of the data file.","lastModifiedDate":"2016-09-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    Path getAddressBookFilePath();","lastModifiedDate":"2018-04-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * Returns AddressBook data as a {@link ReadOnlyAddressBook}.","lastModifiedDate":"2016-09-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     *   Returns {@code Optional.empty()} if storage file is not found.","lastModifiedDate":"2016-09-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @throws DataConversionException if the data in storage is not in the expected format.","lastModifiedDate":"2016-09-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * @throws IOException if there was any problem when reading from the storage.","lastModifiedDate":"2016-09-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    Optional\u003cReadOnlyAddressBook\u003e readAddressBook() throws DataConversionException, IOException;","lastModifiedDate":"2016-09-28"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-01"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * @see #getAddressBookFilePath()","lastModifiedDate":"2016-10-01"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-01"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    Optional\u003cReadOnlyAddressBook\u003e readAddressBook(Path filePath) throws DataConversionException, IOException;","lastModifiedDate":"2018-04-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-01"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Saves the given {@link ReadOnlyAddressBook} to the storage.","lastModifiedDate":"2016-09-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * @param addressBook cannot be null.","lastModifiedDate":"2016-09-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * @throws IOException if there was any problem writing to the file.","lastModifiedDate":"2016-09-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    void saveAddressBook(ReadOnlyAddressBook addressBook) throws IOException;","lastModifiedDate":"2016-09-28"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-01"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * @see #saveAddressBook(ReadOnlyAddressBook)","lastModifiedDate":"2016-10-01"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-01"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    void saveAddressBook(ReadOnlyAddressBook addressBook, Path filePath) throws IOException;","lastModifiedDate":"2018-04-21"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-01"},{"lineNumber":46,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-24"}],"authorContributionMap":{"david-eom":5,"-":41}},{"path":"src/main/java/socialite/storage/CommandHistoryStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"david-eom"},"content":"package socialite.storage;","lastModifiedDate":"2021-10-21"},{"lineNumber":2,"author":{"gitId":"david-eom"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":3,"author":{"gitId":"david-eom"},"content":"import java.io.IOException;","lastModifiedDate":"2021-10-21"},{"lineNumber":4,"author":{"gitId":"david-eom"},"content":"import java.nio.file.Path;","lastModifiedDate":"2021-10-21"},{"lineNumber":5,"author":{"gitId":"david-eom"},"content":"import java.util.Optional;","lastModifiedDate":"2021-10-21"},{"lineNumber":6,"author":{"gitId":"david-eom"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":7,"author":{"gitId":"david-eom"},"content":"import socialite.commons.exceptions.DataConversionException;","lastModifiedDate":"2021-10-21"},{"lineNumber":8,"author":{"gitId":"david-eom"},"content":"import socialite.model.ReadOnlyCommandHistory;","lastModifiedDate":"2021-10-21"},{"lineNumber":9,"author":{"gitId":"david-eom"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":10,"author":{"gitId":"david-eom"},"content":"/**","lastModifiedDate":"2021-10-21"},{"lineNumber":11,"author":{"gitId":"david-eom"},"content":" * Represents a storage for {@link ReadOnlyCommandHistory}.","lastModifiedDate":"2021-10-21"},{"lineNumber":12,"author":{"gitId":"david-eom"},"content":" */","lastModifiedDate":"2021-10-21"},{"lineNumber":13,"author":{"gitId":"david-eom"},"content":"public interface CommandHistoryStorage {","lastModifiedDate":"2021-10-21"},{"lineNumber":14,"author":{"gitId":"david-eom"},"content":"    /**","lastModifiedDate":"2021-10-21"},{"lineNumber":15,"author":{"gitId":"david-eom"},"content":"     * Returns the file path of the CommandHistory data file.","lastModifiedDate":"2021-10-21"},{"lineNumber":16,"author":{"gitId":"david-eom"},"content":"     */","lastModifiedDate":"2021-10-21"},{"lineNumber":17,"author":{"gitId":"david-eom"},"content":"    Path getCommandHistoryFilePath();","lastModifiedDate":"2021-10-21"},{"lineNumber":18,"author":{"gitId":"david-eom"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":19,"author":{"gitId":"david-eom"},"content":"    Optional\u003cReadOnlyCommandHistory\u003e readCommandHistory() throws DataConversionException, IOException;","lastModifiedDate":"2021-10-21"},{"lineNumber":20,"author":{"gitId":"david-eom"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":21,"author":{"gitId":"david-eom"},"content":"    Optional\u003cReadOnlyCommandHistory\u003e readCommandHistory(Path filePath) throws DataConversionException, IOException;","lastModifiedDate":"2021-10-21"},{"lineNumber":22,"author":{"gitId":"david-eom"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":23,"author":{"gitId":"david-eom"},"content":"    void saveCommandHistory(ReadOnlyCommandHistory commandHistory) throws IOException;","lastModifiedDate":"2021-10-21"},{"lineNumber":24,"author":{"gitId":"david-eom"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":25,"author":{"gitId":"david-eom"},"content":"    void saveCommandHistory(ReadOnlyCommandHistory commandHistory, Path filePath) throws IOException;","lastModifiedDate":"2021-10-21"},{"lineNumber":26,"author":{"gitId":"david-eom"},"content":"}","lastModifiedDate":"2021-10-21"}],"authorContributionMap":{"david-eom":26}},{"path":"src/main/java/socialite/storage/JsonAdaptedDate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"bnjmnt4n"},"content":"package socialite.storage;","lastModifiedDate":"2021-10-23"},{"lineNumber":2,"author":{"gitId":"bnjmnt4n"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":3,"author":{"gitId":"bnjmnt4n"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-10-23"},{"lineNumber":4,"author":{"gitId":"bnjmnt4n"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-10-23"},{"lineNumber":5,"author":{"gitId":"bnjmnt4n"},"content":"import java.util.Optional;","lastModifiedDate":"2021-10-27"},{"lineNumber":6,"author":{"gitId":"bnjmnt4n"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":7,"author":{"gitId":"bnjmnt4n"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2021-10-23"},{"lineNumber":8,"author":{"gitId":"bnjmnt4n"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2021-10-23"},{"lineNumber":9,"author":{"gitId":"bnjmnt4n"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":10,"author":{"gitId":"bnjmnt4n"},"content":"import socialite.commons.exceptions.IllegalValueException;","lastModifiedDate":"2021-10-23"},{"lineNumber":11,"author":{"gitId":"bnjmnt4n"},"content":"import socialite.model.person.Date;","lastModifiedDate":"2021-10-23"},{"lineNumber":12,"author":{"gitId":"bnjmnt4n"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":13,"author":{"gitId":"bnjmnt4n"},"content":"/**","lastModifiedDate":"2021-10-23"},{"lineNumber":14,"author":{"gitId":"bnjmnt4n"},"content":" * Jackson-friendly version of {@link Date}.","lastModifiedDate":"2021-10-23"},{"lineNumber":15,"author":{"gitId":"bnjmnt4n"},"content":" */","lastModifiedDate":"2021-10-23"},{"lineNumber":16,"author":{"gitId":"bnjmnt4n"},"content":"class JsonAdaptedDate {","lastModifiedDate":"2021-10-23"},{"lineNumber":17,"author":{"gitId":"bnjmnt4n"},"content":"    private static final DateTimeFormatter DATE_FORMATTER \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd\");","lastModifiedDate":"2021-10-27"},{"lineNumber":18,"author":{"gitId":"bnjmnt4n"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":19,"author":{"gitId":"bnjmnt4n"},"content":"    private final String name;","lastModifiedDate":"2021-10-23"},{"lineNumber":20,"author":{"gitId":"bnjmnt4n"},"content":"    private final LocalDate date;","lastModifiedDate":"2021-10-23"},{"lineNumber":21,"author":{"gitId":"bnjmnt4n"},"content":"    private final String recurrenceInterval;","lastModifiedDate":"2021-10-27"},{"lineNumber":22,"author":{"gitId":"bnjmnt4n"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":23,"author":{"gitId":"bnjmnt4n"},"content":"    /**","lastModifiedDate":"2021-10-23"},{"lineNumber":24,"author":{"gitId":"bnjmnt4n"},"content":"     * Constructs a {@code JsonAdaptedTag} with the given {@code name}.","lastModifiedDate":"2021-10-23"},{"lineNumber":25,"author":{"gitId":"bnjmnt4n"},"content":"     */","lastModifiedDate":"2021-10-23"},{"lineNumber":26,"author":{"gitId":"bnjmnt4n"},"content":"    @JsonCreator","lastModifiedDate":"2021-10-23"},{"lineNumber":27,"author":{"gitId":"bnjmnt4n"},"content":"    public JsonAdaptedDate(@JsonProperty(\"name\") String name, @JsonProperty(\"date\") LocalDate date,","lastModifiedDate":"2021-10-27"},{"lineNumber":28,"author":{"gitId":"bnjmnt4n"},"content":"                           @JsonProperty(\"recurrenceInterval\") String recurrenceInterval) {","lastModifiedDate":"2021-10-27"},{"lineNumber":29,"author":{"gitId":"bnjmnt4n"},"content":"        this.name \u003d name;","lastModifiedDate":"2021-10-23"},{"lineNumber":30,"author":{"gitId":"bnjmnt4n"},"content":"        this.date \u003d date;","lastModifiedDate":"2021-10-23"},{"lineNumber":31,"author":{"gitId":"bnjmnt4n"},"content":"        this.recurrenceInterval \u003d recurrenceInterval;","lastModifiedDate":"2021-10-27"},{"lineNumber":32,"author":{"gitId":"bnjmnt4n"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":33,"author":{"gitId":"bnjmnt4n"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":34,"author":{"gitId":"bnjmnt4n"},"content":"    /**","lastModifiedDate":"2021-10-23"},{"lineNumber":35,"author":{"gitId":"bnjmnt4n"},"content":"     * Converts a given {@code Date} into this class for Jackson use.","lastModifiedDate":"2021-10-23"},{"lineNumber":36,"author":{"gitId":"bnjmnt4n"},"content":"     */","lastModifiedDate":"2021-10-23"},{"lineNumber":37,"author":{"gitId":"bnjmnt4n"},"content":"    public JsonAdaptedDate(Date source) {","lastModifiedDate":"2021-10-23"},{"lineNumber":38,"author":{"gitId":"bnjmnt4n"},"content":"        name \u003d source.getName();","lastModifiedDate":"2021-10-23"},{"lineNumber":39,"author":{"gitId":"bnjmnt4n"},"content":"        date \u003d source.getDate();","lastModifiedDate":"2021-10-23"},{"lineNumber":40,"author":{"gitId":"bnjmnt4n"},"content":"        recurrenceInterval \u003d source.getRecurrenceInterval().orElse(null);","lastModifiedDate":"2021-10-27"},{"lineNumber":41,"author":{"gitId":"bnjmnt4n"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":42,"author":{"gitId":"bnjmnt4n"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":43,"author":{"gitId":"bnjmnt4n"},"content":"    /**","lastModifiedDate":"2021-10-23"},{"lineNumber":44,"author":{"gitId":"bnjmnt4n"},"content":"     * Converts this Jackson-friendly adapted date object into the model\u0027s {@code Date} object.","lastModifiedDate":"2021-10-23"},{"lineNumber":45,"author":{"gitId":"bnjmnt4n"},"content":"     *","lastModifiedDate":"2021-10-23"},{"lineNumber":46,"author":{"gitId":"bnjmnt4n"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted Date.","lastModifiedDate":"2021-10-23"},{"lineNumber":47,"author":{"gitId":"bnjmnt4n"},"content":"     */","lastModifiedDate":"2021-10-23"},{"lineNumber":48,"author":{"gitId":"bnjmnt4n"},"content":"    public Date toModelType() throws IllegalValueException {","lastModifiedDate":"2021-10-23"},{"lineNumber":49,"author":{"gitId":"bnjmnt4n"},"content":"        String constructedDate \u003d name + \":\" + DATE_FORMATTER.format(date)","lastModifiedDate":"2021-10-27"},{"lineNumber":50,"author":{"gitId":"bnjmnt4n"},"content":"                + Optional.ofNullable(recurrenceInterval).map(interval -\u003e \":\" + interval).orElse(\"\");","lastModifiedDate":"2021-10-27"},{"lineNumber":51,"author":{"gitId":"bnjmnt4n"},"content":"        if (!Date.isValidDate(constructedDate)) {","lastModifiedDate":"2021-10-23"},{"lineNumber":52,"author":{"gitId":"bnjmnt4n"},"content":"            throw new IllegalValueException(Date.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-23"},{"lineNumber":53,"author":{"gitId":"bnjmnt4n"},"content":"        }","lastModifiedDate":"2021-10-23"},{"lineNumber":54,"author":{"gitId":"bnjmnt4n"},"content":"        return new Date(constructedDate);","lastModifiedDate":"2021-10-23"},{"lineNumber":55,"author":{"gitId":"bnjmnt4n"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":56,"author":{"gitId":"bnjmnt4n"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":57,"author":{"gitId":"bnjmnt4n"},"content":"}","lastModifiedDate":"2021-10-23"}],"authorContributionMap":{"bnjmnt4n":57}},{"path":"src/main/java/socialite/storage/JsonAdaptedPerson.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"david-eom"},"content":"package socialite.storage;","lastModifiedDate":"2021-10-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"Zacchua"},"content":"import java.nio.file.Path;","lastModifiedDate":"2021-10-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"david-eom"},"content":"import socialite.commons.exceptions.IllegalValueException;","lastModifiedDate":"2021-10-08"},{"lineNumber":14,"author":{"gitId":"stanley-1"},"content":"import socialite.model.handle.Facebook;","lastModifiedDate":"2021-10-11"},{"lineNumber":15,"author":{"gitId":"stanley-1"},"content":"import socialite.model.handle.Instagram;","lastModifiedDate":"2021-10-11"},{"lineNumber":16,"author":{"gitId":"david-eom"},"content":"import socialite.model.handle.Telegram;","lastModifiedDate":"2021-10-08"},{"lineNumber":17,"author":{"gitId":"Zacchua"},"content":"import socialite.model.handle.TikTok;","lastModifiedDate":"2021-10-12"},{"lineNumber":18,"author":{"gitId":"Zacchua"},"content":"import socialite.model.handle.Twitter;","lastModifiedDate":"2021-10-11"},{"lineNumber":19,"author":{"gitId":"bnjmnt4n"},"content":"import socialite.model.person.Dates;","lastModifiedDate":"2021-10-21"},{"lineNumber":20,"author":{"gitId":"david-eom"},"content":"import socialite.model.person.Name;","lastModifiedDate":"2021-10-08"},{"lineNumber":21,"author":{"gitId":"david-eom"},"content":"import socialite.model.person.Person;","lastModifiedDate":"2021-10-08"},{"lineNumber":22,"author":{"gitId":"david-eom"},"content":"import socialite.model.person.Phone;","lastModifiedDate":"2021-10-08"},{"lineNumber":23,"author":{"gitId":"EssWhyy"},"content":"import socialite.model.person.Remark;","lastModifiedDate":"2021-10-12"},{"lineNumber":24,"author":{"gitId":"david-eom"},"content":"import socialite.model.tag.Tag;","lastModifiedDate":"2021-10-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":" * Jackson-friendly version of {@link Person}.","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"class JsonAdaptedPerson {","lastModifiedDate":"2018-12-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public static final String MISSING_FIELD_MESSAGE_FORMAT \u003d \"Person\u0027s %s field is missing!\";","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private final String name;","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private final String phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"EssWhyy"},"content":"    private final String remark;","lastModifiedDate":"2021-10-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private final List\u003cJsonAdaptedTag\u003e tagged \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"stanley-1"},"content":"    private final String facebook;","lastModifiedDate":"2021-10-11"},{"lineNumber":38,"author":{"gitId":"stanley-1"},"content":"    private final String instagram;","lastModifiedDate":"2021-10-11"},{"lineNumber":39,"author":{"gitId":"david-eom"},"content":"    private final String telegram;","lastModifiedDate":"2021-10-08"},{"lineNumber":40,"author":{"gitId":"Zacchua"},"content":"    private final String tiktok;","lastModifiedDate":"2021-10-12"},{"lineNumber":41,"author":{"gitId":"Zacchua"},"content":"    private final String twitter;","lastModifiedDate":"2021-10-11"},{"lineNumber":42,"author":{"gitId":"bnjmnt4n"},"content":"    private final List\u003cJsonAdaptedDate\u003e dates \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-23"},{"lineNumber":43,"author":{"gitId":"Zacchua"},"content":"    private final Path profilePic;","lastModifiedDate":"2021-10-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     * Constructs a {@code JsonAdaptedPerson} with the given person details.","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public JsonAdaptedPerson(@JsonProperty(\"name\") String name, @JsonProperty(\"phone\") String phone,","lastModifiedDate":"2018-08-13"},{"lineNumber":50,"author":{"gitId":"david-eom"},"content":"            @JsonProperty(\"remark\") String remark, @JsonProperty(\"tagged\") List\u003cJsonAdaptedTag\u003e tagged,","lastModifiedDate":"2021-10-13"},{"lineNumber":51,"author":{"gitId":"Zacchua"},"content":"            @JsonProperty(\"profilePic\") String profilePic,","lastModifiedDate":"2021-10-24"},{"lineNumber":52,"author":{"gitId":"david-eom"},"content":"            @JsonProperty(\"facebook\") String facebook, @JsonProperty(\"instagram\") String instagram,","lastModifiedDate":"2021-10-13"},{"lineNumber":53,"author":{"gitId":"Zacchua"},"content":"            @JsonProperty(\"telegram\") String telegram, @JsonProperty(\"tiktok\") String tiktok,","lastModifiedDate":"2021-10-14"},{"lineNumber":54,"author":{"gitId":"bnjmnt4n"},"content":"            @JsonProperty(\"twitter\") String twitter, @JsonProperty(\"dates\") List\u003cJsonAdaptedDate\u003e dates) {","lastModifiedDate":"2021-10-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        this.name \u003d name;","lastModifiedDate":"2018-08-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":57,"author":{"gitId":"EssWhyy"},"content":"        this.remark \u003d remark;","lastModifiedDate":"2021-10-12"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        if (tagged !\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"            this.tagged.addAll(tagged);","lastModifiedDate":"2018-08-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":61,"author":{"gitId":"Zacchua"},"content":"        this.profilePic \u003d Path.of(profilePic);","lastModifiedDate":"2021-10-25"},{"lineNumber":62,"author":{"gitId":"stanley-1"},"content":"        this.facebook \u003d facebook;","lastModifiedDate":"2021-10-11"},{"lineNumber":63,"author":{"gitId":"stanley-1"},"content":"        this.instagram \u003d instagram;","lastModifiedDate":"2021-10-11"},{"lineNumber":64,"author":{"gitId":"david-eom"},"content":"        this.telegram \u003d telegram;","lastModifiedDate":"2021-10-08"},{"lineNumber":65,"author":{"gitId":"Zacchua"},"content":"        this.tiktok \u003d tiktok;","lastModifiedDate":"2021-10-12"},{"lineNumber":66,"author":{"gitId":"Zacchua"},"content":"        this.twitter \u003d twitter;","lastModifiedDate":"2021-10-12"},{"lineNumber":67,"author":{"gitId":"bnjmnt4n"},"content":"        if (dates !\u003d null) {","lastModifiedDate":"2021-10-23"},{"lineNumber":68,"author":{"gitId":"bnjmnt4n"},"content":"            this.dates.addAll(dates);","lastModifiedDate":"2021-10-23"},{"lineNumber":69,"author":{"gitId":"bnjmnt4n"},"content":"        }","lastModifiedDate":"2021-10-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     * Converts a given {@code Person} into this class for Jackson use.","lastModifiedDate":"2018-08-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public JsonAdaptedPerson(Person source) {","lastModifiedDate":"2018-08-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        name \u003d source.getName().fullName;","lastModifiedDate":"2018-08-13"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        phone \u003d source.getPhone().value;","lastModifiedDate":"2018-08-13"},{"lineNumber":78,"author":{"gitId":"david-eom"},"content":"        remark \u003d source.getRemark().get();","lastModifiedDate":"2021-10-22"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        tagged.addAll(source.getTags().stream()","lastModifiedDate":"2018-08-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"                .map(JsonAdaptedTag::new)","lastModifiedDate":"2018-08-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"                .collect(Collectors.toList()));","lastModifiedDate":"2018-08-13"},{"lineNumber":82,"author":{"gitId":"Zacchua"},"content":"        profilePic \u003d source.getProfilePicture().value;","lastModifiedDate":"2021-10-24"},{"lineNumber":83,"author":{"gitId":"Zacchua"},"content":"        facebook \u003d source.getFacebook().get();","lastModifiedDate":"2021-10-16"},{"lineNumber":84,"author":{"gitId":"Zacchua"},"content":"        instagram \u003d source.getInstagram().get();","lastModifiedDate":"2021-10-16"},{"lineNumber":85,"author":{"gitId":"Zacchua"},"content":"        telegram \u003d source.getTelegram().get();","lastModifiedDate":"2021-10-16"},{"lineNumber":86,"author":{"gitId":"Zacchua"},"content":"        tiktok \u003d source.getTiktok().get();","lastModifiedDate":"2021-10-16"},{"lineNumber":87,"author":{"gitId":"Zacchua"},"content":"        twitter \u003d source.getTwitter().get();","lastModifiedDate":"2021-10-16"},{"lineNumber":88,"author":{"gitId":"david-eom"},"content":"        dates.addAll(source.getDates().get().values().stream()","lastModifiedDate":"2021-10-28"},{"lineNumber":89,"author":{"gitId":"bnjmnt4n"},"content":"                .map(JsonAdaptedDate::new)","lastModifiedDate":"2021-10-23"},{"lineNumber":90,"author":{"gitId":"bnjmnt4n"},"content":"                .collect(Collectors.toList()));","lastModifiedDate":"2021-10-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     * Converts this Jackson-friendly adapted person object into the model\u0027s {@code Person} object.","lastModifiedDate":"2018-08-13"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted person.","lastModifiedDate":"2018-08-13"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    public Person toModelType() throws IllegalValueException {","lastModifiedDate":"2018-08-13"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        final List\u003cTag\u003e personTags \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2018-08-13"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        for (JsonAdaptedTag tag : tagged) {","lastModifiedDate":"2018-08-13"},{"lineNumber":101,"author":{"gitId":"-"},"content":"            personTags.add(tag.toModelType());","lastModifiedDate":"2018-08-13"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        if (name \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":105,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        if (!Name.isValidName(name)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":108,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        final Name modelName \u003d new Name(name);","lastModifiedDate":"2018-08-13"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        if (phone \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":113,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Phone.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        if (!Phone.isValidPhone(phone)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":116,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        final Phone modelPhone \u003d new Phone(phone);","lastModifiedDate":"2018-08-13"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":120,"author":{"gitId":"EssWhyy"},"content":"        final Remark modelRemark \u003d new Remark(remark);","lastModifiedDate":"2021-10-12"},{"lineNumber":121,"author":{"gitId":"EssWhyy"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":122,"author":{"gitId":"Zacchua"},"content":"        final Set\u003cTag\u003e modelTags \u003d new HashSet\u003c\u003e(personTags);","lastModifiedDate":"2021-10-12"},{"lineNumber":123,"author":{"gitId":"Zacchua"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":124,"author":{"gitId":"Zacchua"},"content":"        if (facebook !\u003d null \u0026\u0026 !facebook.equals(\"\") \u0026\u0026 !Facebook.isValidHandle(facebook)) {","lastModifiedDate":"2021-10-14"},{"lineNumber":125,"author":{"gitId":"stanley-1"},"content":"            throw new IllegalValueException(Facebook.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-11"},{"lineNumber":126,"author":{"gitId":"stanley-1"},"content":"        }","lastModifiedDate":"2021-10-11"},{"lineNumber":127,"author":{"gitId":"Zacchua"},"content":"        final Facebook modelFacebook \u003d new Facebook(facebook);","lastModifiedDate":"2021-10-14"},{"lineNumber":128,"author":{"gitId":"stanley-1"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":129,"author":{"gitId":"Zacchua"},"content":"        if (instagram !\u003d null \u0026\u0026 !instagram.equals(\"\") \u0026\u0026 !Instagram.isValidHandle(instagram)) {","lastModifiedDate":"2021-10-14"},{"lineNumber":130,"author":{"gitId":"stanley-1"},"content":"            throw new IllegalValueException(Instagram.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-11"},{"lineNumber":131,"author":{"gitId":"stanley-1"},"content":"        }","lastModifiedDate":"2021-10-11"},{"lineNumber":132,"author":{"gitId":"Zacchua"},"content":"        final Instagram modelInstagram \u003d new Instagram(instagram);","lastModifiedDate":"2021-10-14"},{"lineNumber":133,"author":{"gitId":"stanley-1"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":134,"author":{"gitId":"Zacchua"},"content":"        if (telegram !\u003d null \u0026\u0026 !telegram.equals(\"\") \u0026\u0026 !Telegram.isValidHandle(telegram)) {","lastModifiedDate":"2021-10-14"},{"lineNumber":135,"author":{"gitId":"david-eom"},"content":"            throw new IllegalValueException(Telegram.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-08"},{"lineNumber":136,"author":{"gitId":"david-eom"},"content":"        }","lastModifiedDate":"2021-10-08"},{"lineNumber":137,"author":{"gitId":"Zacchua"},"content":"        final Telegram modelTelegram \u003d new Telegram(telegram);","lastModifiedDate":"2021-10-14"},{"lineNumber":138,"author":{"gitId":"david-eom"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":139,"author":{"gitId":"Zacchua"},"content":"        if (twitter !\u003d null \u0026\u0026 !twitter.equals(\"\") \u0026\u0026 !Twitter.isValidHandle(twitter)) {","lastModifiedDate":"2021-10-14"},{"lineNumber":140,"author":{"gitId":"Zacchua"},"content":"            throw new IllegalValueException(Twitter.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-11"},{"lineNumber":141,"author":{"gitId":"Zacchua"},"content":"        }","lastModifiedDate":"2021-10-11"},{"lineNumber":142,"author":{"gitId":"Zacchua"},"content":"        final Twitter modeTwitter \u003d new Twitter(twitter);","lastModifiedDate":"2021-10-11"},{"lineNumber":143,"author":{"gitId":"Zacchua"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":144,"author":{"gitId":"Zacchua"},"content":"        if (tiktok !\u003d null \u0026\u0026 !tiktok.equals(\"\") \u0026\u0026 !TikTok.isValidHandle(tiktok)) {","lastModifiedDate":"2021-10-14"},{"lineNumber":145,"author":{"gitId":"Zacchua"},"content":"            throw new IllegalValueException(TikTok.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-12"},{"lineNumber":146,"author":{"gitId":"Zacchua"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":147,"author":{"gitId":"Zacchua"},"content":"        final TikTok modelTikTok \u003d new TikTok(tiktok);","lastModifiedDate":"2021-10-12"},{"lineNumber":148,"author":{"gitId":"Zacchua"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":149,"author":{"gitId":"bnjmnt4n"},"content":"        final Dates modelDates \u003d new Dates();","lastModifiedDate":"2021-10-23"},{"lineNumber":150,"author":{"gitId":"bnjmnt4n"},"content":"        for (JsonAdaptedDate date : dates) {","lastModifiedDate":"2021-10-23"},{"lineNumber":151,"author":{"gitId":"bnjmnt4n"},"content":"            modelDates.addDate(date.toModelType());","lastModifiedDate":"2021-10-23"},{"lineNumber":152,"author":{"gitId":"bnjmnt4n"},"content":"        }","lastModifiedDate":"2021-10-23"},{"lineNumber":153,"author":{"gitId":"Zacchua"},"content":"        Person modelPerson \u003d new Person(modelName, modelPhone, modelRemark, modelTags, modelFacebook,","lastModifiedDate":"2021-10-24"},{"lineNumber":154,"author":{"gitId":"bnjmnt4n"},"content":"                modelInstagram, modelTelegram, modelTikTok, modeTwitter, modelDates);","lastModifiedDate":"2021-10-21"},{"lineNumber":155,"author":{"gitId":"Zacchua"},"content":"        modelPerson.setProfilePicture(profilePic);","lastModifiedDate":"2021-10-24"},{"lineNumber":156,"author":{"gitId":"Zacchua"},"content":"        return modelPerson;","lastModifiedDate":"2021-10-24"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":158,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"Zacchua":38,"EssWhyy":5,"bnjmnt4n":13,"david-eom":16,"-":74,"stanley-1":12}},{"path":"src/main/java/socialite/storage/JsonAdaptedTag.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"david-eom"},"content":"package socialite.storage;","lastModifiedDate":"2021-10-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonValue;","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"david-eom"},"content":"import socialite.commons.exceptions.IllegalValueException;","lastModifiedDate":"2021-10-08"},{"lineNumber":7,"author":{"gitId":"david-eom"},"content":"import socialite.model.tag.Tag;","lastModifiedDate":"2021-10-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Jackson-friendly version of {@link Tag}.","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"class JsonAdaptedTag {","lastModifiedDate":"2018-12-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private final String tagName;","lastModifiedDate":"2018-08-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * Constructs a {@code JsonAdaptedTag} with the given {@code tagName}.","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public JsonAdaptedTag(String tagName) {","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        this.tagName \u003d tagName;","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * Converts a given {@code Tag} into this class for Jackson use.","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public JsonAdaptedTag(Tag source) {","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        tagName \u003d source.tagName;","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @JsonValue","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public String getTagName() {","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return tagName;","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * Converts this Jackson-friendly adapted tag object into the model\u0027s {@code Tag} object.","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted tag.","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public Tag toModelType() throws IllegalValueException {","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        if (!Tag.isValidTagName(tagName)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        return new Tag(tagName);","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"david-eom":3,"-":45}},{"path":"src/main/java/socialite/storage/JsonAddressBookStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"david-eom"},"content":"package socialite.storage;","lastModifiedDate":"2021-10-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"david-eom"},"content":"import socialite.commons.core.LogsCenter;","lastModifiedDate":"2021-10-08"},{"lineNumber":11,"author":{"gitId":"david-eom"},"content":"import socialite.commons.exceptions.DataConversionException;","lastModifiedDate":"2021-10-08"},{"lineNumber":12,"author":{"gitId":"david-eom"},"content":"import socialite.commons.exceptions.IllegalValueException;","lastModifiedDate":"2021-10-08"},{"lineNumber":13,"author":{"gitId":"david-eom"},"content":"import socialite.commons.util.FileUtil;","lastModifiedDate":"2021-10-08"},{"lineNumber":14,"author":{"gitId":"david-eom"},"content":"import socialite.commons.util.JsonUtil;","lastModifiedDate":"2021-10-08"},{"lineNumber":15,"author":{"gitId":"david-eom"},"content":"import socialite.model.ReadOnlyAddressBook;","lastModifiedDate":"2021-10-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * A class to access AddressBook data stored as a json file on the hard disk.","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class JsonAddressBookStorage implements AddressBookStorage {","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(JsonAddressBookStorage.class);","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private Path filePath;","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public JsonAddressBookStorage(Path filePath) {","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"david-eom"},"content":"    @Override","lastModifiedDate":"2021-10-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        return filePath;","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public Optional\u003cReadOnlyAddressBook\u003e readAddressBook() throws DataConversionException {","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        return readAddressBook(filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * Similar to {@link #readAddressBook()}.","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * @param filePath location of the data. Cannot be null.","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     * @throws DataConversionException if the file is not in the correct format.","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"david-eom"},"content":"    @Override","lastModifiedDate":"2021-10-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public Optional\u003cReadOnlyAddressBook\u003e readAddressBook(Path filePath) throws DataConversionException {","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        Optional\u003cJsonSerializableAddressBook\u003e jsonAddressBook \u003d JsonUtil.readJsonFile(","lastModifiedDate":"2018-08-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"                filePath, JsonSerializableAddressBook.class);","lastModifiedDate":"2018-08-13"},{"lineNumber":52,"author":{"gitId":"david-eom"},"content":"        if (jsonAddressBook.isEmpty()) {","lastModifiedDate":"2021-10-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            return Optional.empty();","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-08-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"            return Optional.of(jsonAddressBook.get().toModelType());","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        } catch (IllegalValueException ive) {","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"            logger.info(\"Illegal values found in \" + filePath + \": \" + ive.getMessage());","lastModifiedDate":"2018-08-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"            throw new DataConversionException(ive);","lastModifiedDate":"2018-08-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-08-13"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public void saveAddressBook(ReadOnlyAddressBook addressBook) throws IOException {","lastModifiedDate":"2018-08-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        saveAddressBook(addressBook, filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     * Similar to {@link #saveAddressBook(ReadOnlyAddressBook)}.","lastModifiedDate":"2018-08-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     * @param filePath location of the data. Cannot be null.","lastModifiedDate":"2018-08-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public void saveAddressBook(ReadOnlyAddressBook addressBook, Path filePath) throws IOException {","lastModifiedDate":"2018-08-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        requireNonNull(addressBook);","lastModifiedDate":"2018-08-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        FileUtil.createIfMissing(filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        JsonUtil.saveJsonFile(new JsonSerializableAddressBook(addressBook), filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"david-eom":10,"-":72}},{"path":"src/main/java/socialite/storage/JsonCommandHistoryStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"david-eom"},"content":"package socialite.storage;","lastModifiedDate":"2021-10-21"},{"lineNumber":2,"author":{"gitId":"david-eom"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":3,"author":{"gitId":"david-eom"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-21"},{"lineNumber":4,"author":{"gitId":"david-eom"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":5,"author":{"gitId":"david-eom"},"content":"import java.io.IOException;","lastModifiedDate":"2021-10-21"},{"lineNumber":6,"author":{"gitId":"david-eom"},"content":"import java.nio.file.Path;","lastModifiedDate":"2021-10-21"},{"lineNumber":7,"author":{"gitId":"david-eom"},"content":"import java.util.Optional;","lastModifiedDate":"2021-10-21"},{"lineNumber":8,"author":{"gitId":"david-eom"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":9,"author":{"gitId":"david-eom"},"content":"import socialite.commons.exceptions.DataConversionException;","lastModifiedDate":"2021-10-21"},{"lineNumber":10,"author":{"gitId":"david-eom"},"content":"import socialite.commons.util.FileUtil;","lastModifiedDate":"2021-10-21"},{"lineNumber":11,"author":{"gitId":"david-eom"},"content":"import socialite.commons.util.JsonUtil;","lastModifiedDate":"2021-10-21"},{"lineNumber":12,"author":{"gitId":"david-eom"},"content":"import socialite.model.ReadOnlyCommandHistory;","lastModifiedDate":"2021-10-21"},{"lineNumber":13,"author":{"gitId":"david-eom"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":14,"author":{"gitId":"david-eom"},"content":"/**","lastModifiedDate":"2021-10-21"},{"lineNumber":15,"author":{"gitId":"david-eom"},"content":" * A class to access CommandHistory data stored as a json file on the hard disk.","lastModifiedDate":"2021-10-21"},{"lineNumber":16,"author":{"gitId":"david-eom"},"content":" */","lastModifiedDate":"2021-10-21"},{"lineNumber":17,"author":{"gitId":"david-eom"},"content":"public class JsonCommandHistoryStorage implements CommandHistoryStorage {","lastModifiedDate":"2021-10-21"},{"lineNumber":18,"author":{"gitId":"david-eom"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":19,"author":{"gitId":"david-eom"},"content":"    private Path filePath;","lastModifiedDate":"2021-10-21"},{"lineNumber":20,"author":{"gitId":"david-eom"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":21,"author":{"gitId":"david-eom"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":22,"author":{"gitId":"david-eom"},"content":"    public JsonCommandHistoryStorage(Path filePath) {","lastModifiedDate":"2021-10-21"},{"lineNumber":23,"author":{"gitId":"david-eom"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2021-10-21"},{"lineNumber":24,"author":{"gitId":"david-eom"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":25,"author":{"gitId":"david-eom"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":26,"author":{"gitId":"david-eom"},"content":"    @Override","lastModifiedDate":"2021-10-21"},{"lineNumber":27,"author":{"gitId":"david-eom"},"content":"    public Path getCommandHistoryFilePath() {","lastModifiedDate":"2021-10-21"},{"lineNumber":28,"author":{"gitId":"david-eom"},"content":"        return filePath;","lastModifiedDate":"2021-10-21"},{"lineNumber":29,"author":{"gitId":"david-eom"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":30,"author":{"gitId":"david-eom"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":31,"author":{"gitId":"david-eom"},"content":"    @Override","lastModifiedDate":"2021-10-21"},{"lineNumber":32,"author":{"gitId":"david-eom"},"content":"    public Optional\u003cReadOnlyCommandHistory\u003e readCommandHistory() throws DataConversionException {","lastModifiedDate":"2021-10-21"},{"lineNumber":33,"author":{"gitId":"david-eom"},"content":"        return readCommandHistory(filePath);","lastModifiedDate":"2021-10-21"},{"lineNumber":34,"author":{"gitId":"david-eom"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":35,"author":{"gitId":"david-eom"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":36,"author":{"gitId":"david-eom"},"content":"    @Override","lastModifiedDate":"2021-10-21"},{"lineNumber":37,"author":{"gitId":"david-eom"},"content":"    public Optional\u003cReadOnlyCommandHistory\u003e readCommandHistory(Path filePath) throws DataConversionException {","lastModifiedDate":"2021-10-21"},{"lineNumber":38,"author":{"gitId":"david-eom"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2021-10-21"},{"lineNumber":39,"author":{"gitId":"david-eom"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":40,"author":{"gitId":"david-eom"},"content":"        Optional\u003cJsonSerializableCommandHistory\u003e jsonCommandHistory \u003d JsonUtil.readJsonFile(","lastModifiedDate":"2021-10-21"},{"lineNumber":41,"author":{"gitId":"david-eom"},"content":"                filePath, JsonSerializableCommandHistory.class);","lastModifiedDate":"2021-10-21"},{"lineNumber":42,"author":{"gitId":"david-eom"},"content":"        if (jsonCommandHistory.isEmpty()) {","lastModifiedDate":"2021-10-21"},{"lineNumber":43,"author":{"gitId":"david-eom"},"content":"            return Optional.empty();","lastModifiedDate":"2021-10-21"},{"lineNumber":44,"author":{"gitId":"david-eom"},"content":"        }","lastModifiedDate":"2021-10-21"},{"lineNumber":45,"author":{"gitId":"david-eom"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":46,"author":{"gitId":"david-eom"},"content":"        return Optional.of(jsonCommandHistory.get().toModelType());","lastModifiedDate":"2021-10-21"},{"lineNumber":47,"author":{"gitId":"david-eom"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":48,"author":{"gitId":"david-eom"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":49,"author":{"gitId":"david-eom"},"content":"    @Override","lastModifiedDate":"2021-10-21"},{"lineNumber":50,"author":{"gitId":"david-eom"},"content":"    public void saveCommandHistory(ReadOnlyCommandHistory commandHistory) throws IOException {","lastModifiedDate":"2021-10-21"},{"lineNumber":51,"author":{"gitId":"david-eom"},"content":"        saveCommandHistory(commandHistory, filePath);","lastModifiedDate":"2021-10-21"},{"lineNumber":52,"author":{"gitId":"david-eom"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":53,"author":{"gitId":"david-eom"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":54,"author":{"gitId":"david-eom"},"content":"    @Override","lastModifiedDate":"2021-10-21"},{"lineNumber":55,"author":{"gitId":"david-eom"},"content":"    public void saveCommandHistory(ReadOnlyCommandHistory commandHistory, Path filePath) throws IOException {","lastModifiedDate":"2021-10-21"},{"lineNumber":56,"author":{"gitId":"david-eom"},"content":"        requireNonNull(commandHistory);","lastModifiedDate":"2021-10-21"},{"lineNumber":57,"author":{"gitId":"david-eom"},"content":"        requireNonNull(filePath);","lastModifiedDate":"2021-10-21"},{"lineNumber":58,"author":{"gitId":"david-eom"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":59,"author":{"gitId":"david-eom"},"content":"        FileUtil.createIfMissing(filePath);","lastModifiedDate":"2021-10-21"},{"lineNumber":60,"author":{"gitId":"david-eom"},"content":"        JsonUtil.saveJsonFile(new JsonSerializableCommandHistory(commandHistory), filePath);","lastModifiedDate":"2021-10-21"},{"lineNumber":61,"author":{"gitId":"david-eom"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":62,"author":{"gitId":"david-eom"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":63,"author":{"gitId":"david-eom"},"content":"}","lastModifiedDate":"2021-10-21"}],"authorContributionMap":{"david-eom":63}},{"path":"src/main/java/socialite/storage/JsonSerializableAddressBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"david-eom"},"content":"package socialite.storage;","lastModifiedDate":"2021-10-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonRootName;","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"david-eom"},"content":"import socialite.commons.exceptions.IllegalValueException;","lastModifiedDate":"2021-10-08"},{"lineNumber":12,"author":{"gitId":"david-eom"},"content":"import socialite.model.AddressBook;","lastModifiedDate":"2021-10-08"},{"lineNumber":13,"author":{"gitId":"david-eom"},"content":"import socialite.model.ReadOnlyAddressBook;","lastModifiedDate":"2021-10-08"},{"lineNumber":14,"author":{"gitId":"david-eom"},"content":"import socialite.model.person.Person;","lastModifiedDate":"2021-10-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * An Immutable AddressBook that is serializable to JSON format.","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"@JsonRootName(value \u003d \"addressbook\")","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"class JsonSerializableAddressBook {","lastModifiedDate":"2018-12-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DUPLICATE_PERSON \u003d \"Persons list contains duplicate person(s).\";","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private final List\u003cJsonAdaptedPerson\u003e persons \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * Constructs a {@code JsonSerializableAddressBook} with the given persons.","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public JsonSerializableAddressBook(@JsonProperty(\"persons\") List\u003cJsonAdaptedPerson\u003e persons) {","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        this.persons.addAll(persons);","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Converts a given {@code ReadOnlyAddressBook} into this class for Jackson use.","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * @param source future changes to this will not affect the created {@code JsonSerializableAddressBook}.","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public JsonSerializableAddressBook(ReadOnlyAddressBook source) {","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        persons.addAll(source.getPersonList().stream().map(JsonAdaptedPerson::new).collect(Collectors.toList()));","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     * Converts this address book into the model\u0027s {@code AddressBook} object.","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     * @throws IllegalValueException if there were any data constraints violated.","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public AddressBook toModelType() throws IllegalValueException {","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        AddressBook addressBook \u003d new AddressBook();","lastModifiedDate":"2018-08-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        for (JsonAdaptedPerson jsonAdaptedPerson : persons) {","lastModifiedDate":"2018-08-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            Person person \u003d jsonAdaptedPerson.toModelType();","lastModifiedDate":"2018-08-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"            if (addressBook.hasPerson(person)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"                throw new IllegalValueException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-08-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            addressBook.addPerson(person);","lastModifiedDate":"2018-08-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        return addressBook;","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"david-eom":5,"-":55}},{"path":"src/main/java/socialite/storage/JsonSerializableCommandHistory.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"david-eom"},"content":"package socialite.storage;","lastModifiedDate":"2021-10-21"},{"lineNumber":2,"author":{"gitId":"david-eom"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":3,"author":{"gitId":"david-eom"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-21"},{"lineNumber":4,"author":{"gitId":"david-eom"},"content":"import java.util.List;","lastModifiedDate":"2021-10-21"},{"lineNumber":5,"author":{"gitId":"david-eom"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":6,"author":{"gitId":"david-eom"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2021-10-21"},{"lineNumber":7,"author":{"gitId":"david-eom"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2021-10-21"},{"lineNumber":8,"author":{"gitId":"david-eom"},"content":"import com.fasterxml.jackson.annotation.JsonRootName;","lastModifiedDate":"2021-10-21"},{"lineNumber":9,"author":{"gitId":"david-eom"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":10,"author":{"gitId":"david-eom"},"content":"import socialite.model.CommandHistory;","lastModifiedDate":"2021-10-21"},{"lineNumber":11,"author":{"gitId":"david-eom"},"content":"import socialite.model.ReadOnlyCommandHistory;","lastModifiedDate":"2021-10-21"},{"lineNumber":12,"author":{"gitId":"david-eom"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":13,"author":{"gitId":"david-eom"},"content":"/**","lastModifiedDate":"2021-10-21"},{"lineNumber":14,"author":{"gitId":"david-eom"},"content":" * An immutable CommandHistory that is serializable to JSON format.","lastModifiedDate":"2021-10-21"},{"lineNumber":15,"author":{"gitId":"david-eom"},"content":" */","lastModifiedDate":"2021-10-21"},{"lineNumber":16,"author":{"gitId":"david-eom"},"content":"@JsonRootName(value \u003d \"history\")","lastModifiedDate":"2021-10-21"},{"lineNumber":17,"author":{"gitId":"david-eom"},"content":"public class JsonSerializableCommandHistory {","lastModifiedDate":"2021-10-21"},{"lineNumber":18,"author":{"gitId":"david-eom"},"content":"    private final List\u003cString\u003e history \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-22"},{"lineNumber":19,"author":{"gitId":"david-eom"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":20,"author":{"gitId":"david-eom"},"content":"    @JsonCreator","lastModifiedDate":"2021-10-21"},{"lineNumber":21,"author":{"gitId":"david-eom"},"content":"    public JsonSerializableCommandHistory(@JsonProperty(\"history\") List\u003cString\u003e history) {","lastModifiedDate":"2021-10-21"},{"lineNumber":22,"author":{"gitId":"david-eom"},"content":"        this.history.addAll(history);","lastModifiedDate":"2021-10-21"},{"lineNumber":23,"author":{"gitId":"david-eom"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":24,"author":{"gitId":"david-eom"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":25,"author":{"gitId":"david-eom"},"content":"    public JsonSerializableCommandHistory(ReadOnlyCommandHistory source) {","lastModifiedDate":"2021-10-21"},{"lineNumber":26,"author":{"gitId":"david-eom"},"content":"        history.addAll(source.getCommandHistory());","lastModifiedDate":"2021-10-21"},{"lineNumber":27,"author":{"gitId":"david-eom"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":28,"author":{"gitId":"david-eom"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":29,"author":{"gitId":"david-eom"},"content":"    /**","lastModifiedDate":"2021-10-21"},{"lineNumber":30,"author":{"gitId":"david-eom"},"content":"     * Converts this command history into the model\u0027s {@code CommandHistory} object.","lastModifiedDate":"2021-10-21"},{"lineNumber":31,"author":{"gitId":"david-eom"},"content":"     */","lastModifiedDate":"2021-10-21"},{"lineNumber":32,"author":{"gitId":"david-eom"},"content":"    public CommandHistory toModelType() {","lastModifiedDate":"2021-10-21"},{"lineNumber":33,"author":{"gitId":"david-eom"},"content":"        CommandHistory commandHistory \u003d new CommandHistory();","lastModifiedDate":"2021-10-21"},{"lineNumber":34,"author":{"gitId":"david-eom"},"content":"        for (String command : history) {","lastModifiedDate":"2021-10-21"},{"lineNumber":35,"author":{"gitId":"david-eom"},"content":"            commandHistory.addCommand(command);","lastModifiedDate":"2021-10-21"},{"lineNumber":36,"author":{"gitId":"david-eom"},"content":"        }","lastModifiedDate":"2021-10-21"},{"lineNumber":37,"author":{"gitId":"david-eom"},"content":"        return commandHistory;","lastModifiedDate":"2021-10-21"},{"lineNumber":38,"author":{"gitId":"david-eom"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":39,"author":{"gitId":"david-eom"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":40,"author":{"gitId":"david-eom"},"content":"}","lastModifiedDate":"2021-10-21"}],"authorContributionMap":{"david-eom":40}},{"path":"src/main/java/socialite/storage/JsonUserPrefsStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"david-eom"},"content":"package socialite.storage;","lastModifiedDate":"2021-10-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"david-eom"},"content":"import socialite.commons.exceptions.DataConversionException;","lastModifiedDate":"2021-10-08"},{"lineNumber":8,"author":{"gitId":"david-eom"},"content":"import socialite.commons.util.JsonUtil;","lastModifiedDate":"2021-10-08"},{"lineNumber":9,"author":{"gitId":"david-eom"},"content":"import socialite.model.ReadOnlyUserPrefs;","lastModifiedDate":"2021-10-08"},{"lineNumber":10,"author":{"gitId":"david-eom"},"content":"import socialite.model.UserPrefs;","lastModifiedDate":"2021-10-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * A class to access UserPrefs stored in the hard disk as a json file","lastModifiedDate":"2016-09-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class JsonUserPrefsStorage implements UserPrefsStorage {","lastModifiedDate":"2016-10-01"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private Path filePath;","lastModifiedDate":"2018-04-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public JsonUserPrefsStorage(Path filePath) {","lastModifiedDate":"2018-04-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        this.filePath \u003d filePath;","lastModifiedDate":"2016-09-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-02-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public Path getUserPrefsFilePath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        return filePath;","lastModifiedDate":"2017-02-15"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-15"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public Optional\u003cUserPrefs\u003e readUserPrefs() throws DataConversionException {","lastModifiedDate":"2018-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        return readUserPrefs(filePath);","lastModifiedDate":"2016-09-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Similar to {@link #readUserPrefs()}","lastModifiedDate":"2016-09-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * @param prefsFilePath location of the data. Cannot be null.","lastModifiedDate":"2016-09-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * @throws DataConversionException if the file format is not as expected.","lastModifiedDate":"2016-09-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public Optional\u003cUserPrefs\u003e readUserPrefs(Path prefsFilePath) throws DataConversionException {","lastModifiedDate":"2018-04-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return JsonUtil.readJsonFile(prefsFilePath, UserPrefs.class);","lastModifiedDate":"2016-10-07"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-10-07"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public void saveUserPrefs(ReadOnlyUserPrefs userPrefs) throws IOException {","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        JsonUtil.saveJsonFile(userPrefs, filePath);","lastModifiedDate":"2016-10-07"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-24"}],"authorContributionMap":{"david-eom":5,"-":42}},{"path":"src/main/java/socialite/storage/ProfilePictureStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Zacchua"},"content":"package socialite.storage;","lastModifiedDate":"2021-10-24"},{"lineNumber":2,"author":{"gitId":"Zacchua"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":3,"author":{"gitId":"Zacchua"},"content":"import java.io.File;","lastModifiedDate":"2021-10-24"},{"lineNumber":4,"author":{"gitId":"Zacchua"},"content":"import java.nio.file.Path;","lastModifiedDate":"2021-10-24"},{"lineNumber":5,"author":{"gitId":"Zacchua"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":6,"author":{"gitId":"Zacchua"},"content":"import socialite.model.ProfilePictureSyncModel;","lastModifiedDate":"2021-10-27"},{"lineNumber":7,"author":{"gitId":"Zacchua"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":8,"author":{"gitId":"Zacchua"},"content":"public interface ProfilePictureStorage {","lastModifiedDate":"2021-10-24"},{"lineNumber":9,"author":{"gitId":"Zacchua"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":10,"author":{"gitId":"Zacchua"},"content":"    /**","lastModifiedDate":"2021-10-24"},{"lineNumber":11,"author":{"gitId":"Zacchua"},"content":"     * Returns the folder path containing all profile pictures","lastModifiedDate":"2021-10-24"},{"lineNumber":12,"author":{"gitId":"Zacchua"},"content":"     *","lastModifiedDate":"2021-10-24"},{"lineNumber":13,"author":{"gitId":"Zacchua"},"content":"     * @return path to folder containing profile pictures","lastModifiedDate":"2021-10-24"},{"lineNumber":14,"author":{"gitId":"Zacchua"},"content":"     */","lastModifiedDate":"2021-10-24"},{"lineNumber":15,"author":{"gitId":"Zacchua"},"content":"    Path getProfilePictureFolderPath();","lastModifiedDate":"2021-10-24"},{"lineNumber":16,"author":{"gitId":"Zacchua"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":17,"author":{"gitId":"Zacchua"},"content":"    void deleteProfilePicture(Path name);","lastModifiedDate":"2021-10-25"},{"lineNumber":18,"author":{"gitId":"Zacchua"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":19,"author":{"gitId":"Zacchua"},"content":"    void saveProfilePicture(File profilePicture, String prefix);","lastModifiedDate":"2021-10-25"},{"lineNumber":20,"author":{"gitId":"Zacchua"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":21,"author":{"gitId":"Zacchua"},"content":"    void syncProfilePictures(ProfilePictureSyncModel.ProfilePictureEditDescriptor profilePictureEditDescriptor);","lastModifiedDate":"2021-10-27"},{"lineNumber":22,"author":{"gitId":"Zacchua"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":23,"author":{"gitId":"Zacchua"},"content":"}","lastModifiedDate":"2021-10-24"}],"authorContributionMap":{"Zacchua":23}},{"path":"src/main/java/socialite/storage/ProfilePictureStorageManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Zacchua"},"content":"package socialite.storage;","lastModifiedDate":"2021-10-24"},{"lineNumber":2,"author":{"gitId":"Zacchua"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":3,"author":{"gitId":"Zacchua"},"content":"import java.io.File;","lastModifiedDate":"2021-10-24"},{"lineNumber":4,"author":{"gitId":"Zacchua"},"content":"import java.io.IOException;","lastModifiedDate":"2021-10-24"},{"lineNumber":5,"author":{"gitId":"Zacchua"},"content":"import java.nio.file.Files;","lastModifiedDate":"2021-10-24"},{"lineNumber":6,"author":{"gitId":"Zacchua"},"content":"import java.nio.file.Path;","lastModifiedDate":"2021-10-24"},{"lineNumber":7,"author":{"gitId":"Zacchua"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2021-10-24"},{"lineNumber":8,"author":{"gitId":"Zacchua"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":9,"author":{"gitId":"Zacchua"},"content":"import socialite.model.ProfilePictureSyncModel;","lastModifiedDate":"2021-10-27"},{"lineNumber":10,"author":{"gitId":"Zacchua"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":11,"author":{"gitId":"Zacchua"},"content":"public class ProfilePictureStorageManager implements ProfilePictureStorage {","lastModifiedDate":"2021-10-24"},{"lineNumber":12,"author":{"gitId":"Zacchua"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":13,"author":{"gitId":"Zacchua"},"content":"    public static final Path PROFILE_PIC_FOLDER_PATH \u003d Paths.get(","lastModifiedDate":"2021-10-24"},{"lineNumber":14,"author":{"gitId":"Zacchua"},"content":"            \"data\", \"profilepictures\");","lastModifiedDate":"2021-10-25"},{"lineNumber":15,"author":{"gitId":"Zacchua"},"content":"    private static ProfilePictureStorageManager instance;","lastModifiedDate":"2021-10-26"},{"lineNumber":16,"author":{"gitId":"Zacchua"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":17,"author":{"gitId":"Zacchua"},"content":"    private ProfilePictureStorageManager() {","lastModifiedDate":"2021-10-25"},{"lineNumber":18,"author":{"gitId":"Zacchua"},"content":"        if (!Files.exists(PROFILE_PIC_FOLDER_PATH)) {","lastModifiedDate":"2021-10-24"},{"lineNumber":19,"author":{"gitId":"Zacchua"},"content":"            try {","lastModifiedDate":"2021-10-24"},{"lineNumber":20,"author":{"gitId":"Zacchua"},"content":"                Files.createDirectories(PROFILE_PIC_FOLDER_PATH);","lastModifiedDate":"2021-10-26"},{"lineNumber":21,"author":{"gitId":"Zacchua"},"content":"            } catch (IOException ioe) {","lastModifiedDate":"2021-10-24"},{"lineNumber":22,"author":{"gitId":"Zacchua"},"content":"                System.out.println(ioe.toString());","lastModifiedDate":"2021-10-24"},{"lineNumber":23,"author":{"gitId":"Zacchua"},"content":"            }","lastModifiedDate":"2021-10-24"},{"lineNumber":24,"author":{"gitId":"Zacchua"},"content":"        }","lastModifiedDate":"2021-10-24"},{"lineNumber":25,"author":{"gitId":"Zacchua"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":26,"author":{"gitId":"Zacchua"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":27,"author":{"gitId":"Zacchua"},"content":"    @Override","lastModifiedDate":"2021-10-24"},{"lineNumber":28,"author":{"gitId":"Zacchua"},"content":"    public Path getProfilePictureFolderPath() {","lastModifiedDate":"2021-10-24"},{"lineNumber":29,"author":{"gitId":"Zacchua"},"content":"        return PROFILE_PIC_FOLDER_PATH;","lastModifiedDate":"2021-10-24"},{"lineNumber":30,"author":{"gitId":"Zacchua"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":31,"author":{"gitId":"Zacchua"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":32,"author":{"gitId":"Zacchua"},"content":"    public static ProfilePictureStorageManager getInstance() {","lastModifiedDate":"2021-10-25"},{"lineNumber":33,"author":{"gitId":"Zacchua"},"content":"        if (instance \u003d\u003d null) {","lastModifiedDate":"2021-10-25"},{"lineNumber":34,"author":{"gitId":"Zacchua"},"content":"            instance \u003d new ProfilePictureStorageManager();","lastModifiedDate":"2021-10-25"},{"lineNumber":35,"author":{"gitId":"Zacchua"},"content":"        }","lastModifiedDate":"2021-10-25"},{"lineNumber":36,"author":{"gitId":"Zacchua"},"content":"        return instance;","lastModifiedDate":"2021-10-25"},{"lineNumber":37,"author":{"gitId":"Zacchua"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":38,"author":{"gitId":"Zacchua"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":39,"author":{"gitId":"Zacchua"},"content":"    @Override","lastModifiedDate":"2021-10-27"},{"lineNumber":40,"author":{"gitId":"Zacchua"},"content":"    public void syncProfilePictures(","lastModifiedDate":"2021-10-27"},{"lineNumber":41,"author":{"gitId":"Zacchua"},"content":"            ProfilePictureSyncModel.ProfilePictureEditDescriptor profilePictureEditDescription) {","lastModifiedDate":"2021-10-27"},{"lineNumber":42,"author":{"gitId":"Zacchua"},"content":"        saveProfilePicture(profilePictureEditDescription.source, profilePictureEditDescription.dest);","lastModifiedDate":"2021-10-27"},{"lineNumber":43,"author":{"gitId":"Zacchua"},"content":"        deleteProfilePicture(profilePictureEditDescription.toDelete);","lastModifiedDate":"2021-10-27"},{"lineNumber":44,"author":{"gitId":"Zacchua"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":45,"author":{"gitId":"Zacchua"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":46,"author":{"gitId":"Zacchua"},"content":"    @Override","lastModifiedDate":"2021-10-24"},{"lineNumber":47,"author":{"gitId":"Zacchua"},"content":"    public void deleteProfilePicture(Path name) {","lastModifiedDate":"2021-10-25"},{"lineNumber":48,"author":{"gitId":"Zacchua"},"content":"        if (name \u003d\u003d null) {","lastModifiedDate":"2021-10-27"},{"lineNumber":49,"author":{"gitId":"Zacchua"},"content":"            return;","lastModifiedDate":"2021-10-27"},{"lineNumber":50,"author":{"gitId":"Zacchua"},"content":"        }","lastModifiedDate":"2021-10-27"},{"lineNumber":51,"author":{"gitId":"Zacchua"},"content":"        try {","lastModifiedDate":"2021-10-24"},{"lineNumber":52,"author":{"gitId":"Zacchua"},"content":"            Path pictureToDelete \u003d PROFILE_PIC_FOLDER_PATH.resolve(name);","lastModifiedDate":"2021-10-25"},{"lineNumber":53,"author":{"gitId":"Zacchua"},"content":"            Files.delete(pictureToDelete);","lastModifiedDate":"2021-10-24"},{"lineNumber":54,"author":{"gitId":"Zacchua"},"content":"        } catch (Exception e) {","lastModifiedDate":"2021-10-27"},{"lineNumber":55,"author":{"gitId":"Zacchua"},"content":"            System.out.println(e.toString());","lastModifiedDate":"2021-10-27"},{"lineNumber":56,"author":{"gitId":"Zacchua"},"content":"        }","lastModifiedDate":"2021-10-24"},{"lineNumber":57,"author":{"gitId":"Zacchua"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":58,"author":{"gitId":"Zacchua"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":59,"author":{"gitId":"Zacchua"},"content":"    @Override","lastModifiedDate":"2021-10-24"},{"lineNumber":60,"author":{"gitId":"Zacchua"},"content":"    public void saveProfilePicture(File file, String name) {","lastModifiedDate":"2021-10-26"},{"lineNumber":61,"author":{"gitId":"Zacchua"},"content":"        if (file \u003d\u003d null || name \u003d\u003d null) {","lastModifiedDate":"2021-10-27"},{"lineNumber":62,"author":{"gitId":"Zacchua"},"content":"            return;","lastModifiedDate":"2021-10-27"},{"lineNumber":63,"author":{"gitId":"Zacchua"},"content":"        }","lastModifiedDate":"2021-10-27"},{"lineNumber":64,"author":{"gitId":"Zacchua"},"content":"        try {","lastModifiedDate":"2021-10-24"},{"lineNumber":65,"author":{"gitId":"Zacchua"},"content":"            Files.copy(file.toPath(), getProfilePictureFolderPath().resolve(name));","lastModifiedDate":"2021-10-26"},{"lineNumber":66,"author":{"gitId":"Zacchua"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2021-10-24"},{"lineNumber":67,"author":{"gitId":"Zacchua"},"content":"            System.out.println(ioe.toString());","lastModifiedDate":"2021-10-24"},{"lineNumber":68,"author":{"gitId":"Zacchua"},"content":"        }","lastModifiedDate":"2021-10-24"},{"lineNumber":69,"author":{"gitId":"Zacchua"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":70,"author":{"gitId":"Zacchua"},"content":"}","lastModifiedDate":"2021-10-24"}],"authorContributionMap":{"Zacchua":70}},{"path":"src/main/java/socialite/storage/Storage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"david-eom"},"content":"package socialite.storage;","lastModifiedDate":"2021-10-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"david-eom"},"content":"import socialite.commons.exceptions.DataConversionException;","lastModifiedDate":"2021-10-08"},{"lineNumber":7,"author":{"gitId":"david-eom"},"content":"import socialite.model.ReadOnlyAddressBook;","lastModifiedDate":"2021-10-08"},{"lineNumber":8,"author":{"gitId":"david-eom"},"content":"import socialite.model.ReadOnlyCommandHistory;","lastModifiedDate":"2021-10-21"},{"lineNumber":9,"author":{"gitId":"david-eom"},"content":"import socialite.model.ReadOnlyUserPrefs;","lastModifiedDate":"2021-10-08"},{"lineNumber":10,"author":{"gitId":"david-eom"},"content":"import socialite.model.UserPrefs;","lastModifiedDate":"2021-10-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * API of the Storage component","lastModifiedDate":"2016-09-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":15,"author":{"gitId":"Zacchua"},"content":"public interface Storage extends AddressBookStorage, UserPrefsStorage, CommandHistoryStorage, ProfilePictureStorage {","lastModifiedDate":"2021-10-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    Optional\u003cUserPrefs\u003e readUserPrefs() throws DataConversionException, IOException;","lastModifiedDate":"2016-09-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    void saveUserPrefs(ReadOnlyUserPrefs userPrefs) throws IOException;","lastModifiedDate":"2018-11-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    Optional\u003cReadOnlyAddressBook\u003e readAddressBook() throws DataConversionException, IOException;","lastModifiedDate":"2016-10-01"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    void saveAddressBook(ReadOnlyAddressBook addressBook) throws IOException;","lastModifiedDate":"2016-09-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-26"},{"lineNumber":29,"author":{"gitId":"david-eom"},"content":"    @Override","lastModifiedDate":"2021-10-21"},{"lineNumber":30,"author":{"gitId":"david-eom"},"content":"    Optional\u003cReadOnlyCommandHistory\u003e readCommandHistory() throws DataConversionException, IOException;","lastModifiedDate":"2021-10-21"},{"lineNumber":31,"author":{"gitId":"david-eom"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":32,"author":{"gitId":"david-eom"},"content":"    @Override","lastModifiedDate":"2021-10-21"},{"lineNumber":33,"author":{"gitId":"david-eom"},"content":"    void saveCommandHistory(ReadOnlyCommandHistory commandHistory) throws IOException;","lastModifiedDate":"2021-10-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"Zacchua":1,"david-eom":11,"-":22}},{"path":"src/main/java/socialite/storage/StorageManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"david-eom"},"content":"package socialite.storage;","lastModifiedDate":"2021-10-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"Zacchua"},"content":"import java.io.File;","lastModifiedDate":"2021-10-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"david-eom"},"content":"import socialite.commons.core.LogsCenter;","lastModifiedDate":"2021-10-08"},{"lineNumber":10,"author":{"gitId":"david-eom"},"content":"import socialite.commons.exceptions.DataConversionException;","lastModifiedDate":"2021-10-08"},{"lineNumber":11,"author":{"gitId":"Zacchua"},"content":"import socialite.model.ProfilePictureSyncModel;","lastModifiedDate":"2021-10-27"},{"lineNumber":12,"author":{"gitId":"david-eom"},"content":"import socialite.model.ReadOnlyAddressBook;","lastModifiedDate":"2021-10-08"},{"lineNumber":13,"author":{"gitId":"david-eom"},"content":"import socialite.model.ReadOnlyCommandHistory;","lastModifiedDate":"2021-10-21"},{"lineNumber":14,"author":{"gitId":"david-eom"},"content":"import socialite.model.ReadOnlyUserPrefs;","lastModifiedDate":"2021-10-08"},{"lineNumber":15,"author":{"gitId":"david-eom"},"content":"import socialite.model.UserPrefs;","lastModifiedDate":"2021-10-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * Manages storage of AddressBook data in local storage.","lastModifiedDate":"2016-09-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class StorageManager implements Storage {","lastModifiedDate":"2018-12-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(StorageManager.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private AddressBookStorage addressBookStorage;","lastModifiedDate":"2016-10-01"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private UserPrefsStorage userPrefsStorage;","lastModifiedDate":"2016-10-01"},{"lineNumber":25,"author":{"gitId":"david-eom"},"content":"    private CommandHistoryStorage commandHistoryStorage;","lastModifiedDate":"2021-10-21"},{"lineNumber":26,"author":{"gitId":"Zacchua"},"content":"    private ProfilePictureStorage profilePictureStorage;","lastModifiedDate":"2021-10-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":29,"author":{"gitId":"david-eom"},"content":"     * Creates a {@code StorageManager} with the given {@code AddressBookStorage},","lastModifiedDate":"2021-10-22"},{"lineNumber":30,"author":{"gitId":"Zacchua"},"content":"     * @code UserPrefStorage}, {@code commandHistoryStorage}, {@code profilePictureStorage}.","lastModifiedDate":"2021-10-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":32,"author":{"gitId":"Zacchua"},"content":"    public StorageManager(","lastModifiedDate":"2021-10-24"},{"lineNumber":33,"author":{"gitId":"david-eom"},"content":"            AddressBookStorage addressBookStorage,","lastModifiedDate":"2021-10-21"},{"lineNumber":34,"author":{"gitId":"david-eom"},"content":"            UserPrefsStorage userPrefsStorage,","lastModifiedDate":"2021-10-21"},{"lineNumber":35,"author":{"gitId":"Zacchua"},"content":"            CommandHistoryStorage commandHistoryStorage,","lastModifiedDate":"2021-10-25"},{"lineNumber":36,"author":{"gitId":"Zacchua"},"content":"            ProfilePictureStorage profilePictureStorage) {","lastModifiedDate":"2021-10-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        super();","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        this.addressBookStorage \u003d addressBookStorage;","lastModifiedDate":"2016-10-01"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        this.userPrefsStorage \u003d userPrefsStorage;","lastModifiedDate":"2016-10-01"},{"lineNumber":40,"author":{"gitId":"Zacchua"},"content":"        this.profilePictureStorage \u003d profilePictureStorage;","lastModifiedDate":"2021-10-24"},{"lineNumber":41,"author":{"gitId":"david-eom"},"content":"        this.commandHistoryStorage \u003d commandHistoryStorage;","lastModifiedDate":"2021-10-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-01"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d UserPrefs methods \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2016-09-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-02-15"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public Path getUserPrefsFilePath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        return userPrefsStorage.getUserPrefsFilePath();","lastModifiedDate":"2017-02-15"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-15"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-15"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public Optional\u003cUserPrefs\u003e readUserPrefs() throws DataConversionException, IOException {","lastModifiedDate":"2016-09-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        return userPrefsStorage.readUserPrefs();","lastModifiedDate":"2016-10-01"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public void saveUserPrefs(ReadOnlyUserPrefs userPrefs) throws IOException {","lastModifiedDate":"2018-11-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        userPrefsStorage.saveUserPrefs(userPrefs);","lastModifiedDate":"2016-10-01"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d AddressBook methods \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2016-09-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        return addressBookStorage.getAddressBookFilePath();","lastModifiedDate":"2016-09-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public Optional\u003cReadOnlyAddressBook\u003e readAddressBook() throws DataConversionException, IOException {","lastModifiedDate":"2016-10-01"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        return readAddressBook(addressBookStorage.getAddressBookFilePath());","lastModifiedDate":"2016-10-01"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-10-01"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public Optional\u003cReadOnlyAddressBook\u003e readAddressBook(Path filePath) throws DataConversionException, IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        logger.fine(\"Attempting to read data from file: \" + filePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        return addressBookStorage.readAddressBook(filePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public void saveAddressBook(ReadOnlyAddressBook addressBook) throws IOException {","lastModifiedDate":"2016-09-24"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        saveAddressBook(addressBook, addressBookStorage.getAddressBookFilePath());","lastModifiedDate":"2016-10-01"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-01"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-10-01"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public void saveAddressBook(ReadOnlyAddressBook addressBook, Path filePath) throws IOException {","lastModifiedDate":"2018-04-21"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        logger.fine(\"Attempting to write to data file: \" + filePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        addressBookStorage.saveAddressBook(addressBook, filePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":91,"author":{"gitId":"david-eom"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":92,"author":{"gitId":"david-eom"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d CommandHistory methods \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2021-10-21"},{"lineNumber":93,"author":{"gitId":"david-eom"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":94,"author":{"gitId":"david-eom"},"content":"    @Override","lastModifiedDate":"2021-10-21"},{"lineNumber":95,"author":{"gitId":"david-eom"},"content":"    public Path getCommandHistoryFilePath() {","lastModifiedDate":"2021-10-21"},{"lineNumber":96,"author":{"gitId":"david-eom"},"content":"        return commandHistoryStorage.getCommandHistoryFilePath();","lastModifiedDate":"2021-10-21"},{"lineNumber":97,"author":{"gitId":"david-eom"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":98,"author":{"gitId":"david-eom"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":99,"author":{"gitId":"david-eom"},"content":"    @Override","lastModifiedDate":"2021-10-21"},{"lineNumber":100,"author":{"gitId":"david-eom"},"content":"    public Optional\u003cReadOnlyCommandHistory\u003e readCommandHistory() throws DataConversionException, IOException {","lastModifiedDate":"2021-10-21"},{"lineNumber":101,"author":{"gitId":"david-eom"},"content":"        return readCommandHistory(commandHistoryStorage.getCommandHistoryFilePath());","lastModifiedDate":"2021-10-21"},{"lineNumber":102,"author":{"gitId":"david-eom"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":103,"author":{"gitId":"david-eom"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":104,"author":{"gitId":"david-eom"},"content":"    @Override","lastModifiedDate":"2021-10-21"},{"lineNumber":105,"author":{"gitId":"david-eom"},"content":"    public Optional\u003cReadOnlyCommandHistory\u003e readCommandHistory(Path filePath)","lastModifiedDate":"2021-10-21"},{"lineNumber":106,"author":{"gitId":"david-eom"},"content":"            throws DataConversionException, IOException {","lastModifiedDate":"2021-10-21"},{"lineNumber":107,"author":{"gitId":"david-eom"},"content":"        logger.fine(\"Attempting to read command history from file: \" + filePath);","lastModifiedDate":"2021-10-21"},{"lineNumber":108,"author":{"gitId":"david-eom"},"content":"        return commandHistoryStorage.readCommandHistory(filePath);","lastModifiedDate":"2021-10-21"},{"lineNumber":109,"author":{"gitId":"david-eom"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":110,"author":{"gitId":"david-eom"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":111,"author":{"gitId":"david-eom"},"content":"    @Override","lastModifiedDate":"2021-10-21"},{"lineNumber":112,"author":{"gitId":"david-eom"},"content":"    public void saveCommandHistory(ReadOnlyCommandHistory commandHistory) throws IOException {","lastModifiedDate":"2021-10-21"},{"lineNumber":113,"author":{"gitId":"david-eom"},"content":"        saveCommandHistory(commandHistory, commandHistoryStorage.getCommandHistoryFilePath());","lastModifiedDate":"2021-10-21"},{"lineNumber":114,"author":{"gitId":"david-eom"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":115,"author":{"gitId":"david-eom"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":116,"author":{"gitId":"david-eom"},"content":"    @Override","lastModifiedDate":"2021-10-21"},{"lineNumber":117,"author":{"gitId":"david-eom"},"content":"    public void saveCommandHistory(ReadOnlyCommandHistory commandHistory, Path filePath) throws IOException {","lastModifiedDate":"2021-10-21"},{"lineNumber":118,"author":{"gitId":"david-eom"},"content":"        logger.fine(\"Attempting to save command history from file: \" + filePath);","lastModifiedDate":"2021-10-21"},{"lineNumber":119,"author":{"gitId":"david-eom"},"content":"        commandHistoryStorage.saveCommandHistory(commandHistory, filePath);","lastModifiedDate":"2021-10-21"},{"lineNumber":120,"author":{"gitId":"david-eom"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":121,"author":{"gitId":"david-eom"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":122,"author":{"gitId":"Zacchua"},"content":"    // \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Profile Picture methods \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2021-10-24"},{"lineNumber":123,"author":{"gitId":"Zacchua"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":124,"author":{"gitId":"Zacchua"},"content":"    @Override","lastModifiedDate":"2021-10-24"},{"lineNumber":125,"author":{"gitId":"Zacchua"},"content":"    public Path getProfilePictureFolderPath() {","lastModifiedDate":"2021-10-24"},{"lineNumber":126,"author":{"gitId":"Zacchua"},"content":"        return profilePictureStorage.getProfilePictureFolderPath();","lastModifiedDate":"2021-10-24"},{"lineNumber":127,"author":{"gitId":"Zacchua"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":128,"author":{"gitId":"Zacchua"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":129,"author":{"gitId":"Zacchua"},"content":"    @Override","lastModifiedDate":"2021-10-24"},{"lineNumber":130,"author":{"gitId":"Zacchua"},"content":"    public void deleteProfilePicture(Path name) {","lastModifiedDate":"2021-10-25"},{"lineNumber":131,"author":{"gitId":"Zacchua"},"content":"        profilePictureStorage.deleteProfilePicture(name);","lastModifiedDate":"2021-10-24"},{"lineNumber":132,"author":{"gitId":"Zacchua"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":133,"author":{"gitId":"Zacchua"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":134,"author":{"gitId":"Zacchua"},"content":"    @Override","lastModifiedDate":"2021-10-24"},{"lineNumber":135,"author":{"gitId":"Zacchua"},"content":"    public void saveProfilePicture(File file, String prefix) {","lastModifiedDate":"2021-10-25"},{"lineNumber":136,"author":{"gitId":"Zacchua"},"content":"        profilePictureStorage.saveProfilePicture(file, prefix);","lastModifiedDate":"2021-10-25"},{"lineNumber":137,"author":{"gitId":"Zacchua"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":138,"author":{"gitId":"Zacchua"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":139,"author":{"gitId":"Zacchua"},"content":"    @Override","lastModifiedDate":"2021-10-27"},{"lineNumber":140,"author":{"gitId":"Zacchua"},"content":"    public void syncProfilePictures(ProfilePictureSyncModel.ProfilePictureEditDescriptor profilePictureEditDescriptor) {","lastModifiedDate":"2021-10-27"},{"lineNumber":141,"author":{"gitId":"Zacchua"},"content":"        profilePictureStorage.syncProfilePictures(profilePictureEditDescriptor);","lastModifiedDate":"2021-10-27"},{"lineNumber":142,"author":{"gitId":"Zacchua"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":143,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"Zacchua":29,"david-eom":43,"-":71}},{"path":"src/main/java/socialite/storage/UserPrefsStorage.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"david-eom"},"content":"package socialite.storage;","lastModifiedDate":"2021-10-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-09-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2016-09-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":7,"author":{"gitId":"david-eom"},"content":"import socialite.commons.exceptions.DataConversionException;","lastModifiedDate":"2021-10-08"},{"lineNumber":8,"author":{"gitId":"david-eom"},"content":"import socialite.model.ReadOnlyUserPrefs;","lastModifiedDate":"2021-10-08"},{"lineNumber":9,"author":{"gitId":"david-eom"},"content":"import socialite.model.UserPrefs;","lastModifiedDate":"2021-10-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-24"},{"lineNumber":12,"author":{"gitId":"david-eom"},"content":" * Represents a storage for {@link UserPrefs}.","lastModifiedDate":"2021-10-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public interface UserPrefsStorage {","lastModifiedDate":"2016-09-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * Returns the file path of the UserPrefs data file.","lastModifiedDate":"2017-02-15"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-15"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    Path getUserPrefsFilePath();","lastModifiedDate":"2018-04-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-15"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * Returns UserPrefs data from storage.","lastModifiedDate":"2016-09-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     *   Returns {@code Optional.empty()} if storage file is not found.","lastModifiedDate":"2016-09-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * @throws DataConversionException if the data in storage is not in the expected format.","lastModifiedDate":"2016-09-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * @throws IOException if there was any problem when reading from the storage.","lastModifiedDate":"2016-09-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    Optional\u003cUserPrefs\u003e readUserPrefs() throws DataConversionException, IOException;","lastModifiedDate":"2016-09-28"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-24"},{"lineNumber":30,"author":{"gitId":"david-eom"},"content":"     * Saves the given {@link ReadOnlyUserPrefs} to the storage.","lastModifiedDate":"2021-10-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * @param userPrefs cannot be null.","lastModifiedDate":"2016-09-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * @throws IOException if there was any problem writing to the file.","lastModifiedDate":"2016-09-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    void saveUserPrefs(ReadOnlyUserPrefs userPrefs) throws IOException;","lastModifiedDate":"2018-11-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":36,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-24"}],"authorContributionMap":{"david-eom":6,"-":30}},{"path":"src/main/java/socialite/ui/CommandBox.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"david-eom"},"content":"package socialite.ui;","lastModifiedDate":"2021-10-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":3,"author":{"gitId":"david-eom"},"content":"import java.util.List;","lastModifiedDate":"2021-10-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-03-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-09-14"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.TextField;","lastModifiedDate":"2016-09-14"},{"lineNumber":8,"author":{"gitId":"david-eom"},"content":"import javafx.scene.input.KeyCode;","lastModifiedDate":"2021-10-21"},{"lineNumber":9,"author":{"gitId":"david-eom"},"content":"import javafx.scene.input.KeyEvent;","lastModifiedDate":"2021-10-21"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":11,"author":{"gitId":"david-eom"},"content":"import socialite.logic.Logic;","lastModifiedDate":"2021-10-08"},{"lineNumber":12,"author":{"gitId":"david-eom"},"content":"import socialite.logic.commands.CommandResult;","lastModifiedDate":"2021-10-08"},{"lineNumber":13,"author":{"gitId":"david-eom"},"content":"import socialite.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-10-08"},{"lineNumber":14,"author":{"gitId":"david-eom"},"content":"import socialite.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-10-08"},{"lineNumber":15,"author":{"gitId":"david-eom"},"content":"import socialite.model.ReadOnlyCommandHistory;","lastModifiedDate":"2021-10-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * The UI component that is responsible for receiving user command inputs.","lastModifiedDate":"2017-08-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class CommandBox extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public static final String ERROR_STYLE_CLASS \u003d \"error\";","lastModifiedDate":"2017-02-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"CommandBox.fxml\";","lastModifiedDate":"2017-04-01"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private final CommandExecutor commandExecutor;","lastModifiedDate":"2018-12-09"},{"lineNumber":26,"author":{"gitId":"david-eom"},"content":"    private final List\u003cString\u003e commandHistory;","lastModifiedDate":"2021-10-21"},{"lineNumber":27,"author":{"gitId":"david-eom"},"content":"    private int historyIdx;","lastModifiedDate":"2021-10-21"},{"lineNumber":28,"author":{"gitId":"david-eom"},"content":"    private String cachedCommand \u003d \"\";","lastModifiedDate":"2021-10-31"},{"lineNumber":29,"author":{"gitId":"david-eom"},"content":"","lastModifiedDate":"2021-10-31"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-14"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private TextField commandTextField;","lastModifiedDate":"2016-09-14"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":35,"author":{"gitId":"david-eom"},"content":"     * Creates a {@code CommandBox} with the given {@code CommandExecutor} and given {@Code ReadOnlyCommandHistory}.","lastModifiedDate":"2021-10-22"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":37,"author":{"gitId":"david-eom"},"content":"    public CommandBox(CommandExecutor commandExecutor, ReadOnlyCommandHistory commandHistory) {","lastModifiedDate":"2021-10-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2016-12-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        this.commandExecutor \u003d commandExecutor;","lastModifiedDate":"2018-12-09"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        // calls #setStyleToDefault() whenever there is a change to the text of the command box.","lastModifiedDate":"2017-06-28"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        commandTextField.textProperty().addListener((unused1, unused2, unused3) -\u003e setStyleToDefault());","lastModifiedDate":"2017-06-28"},{"lineNumber":42,"author":{"gitId":"david-eom"},"content":"        this.commandHistory \u003d commandHistory.getCommandHistory();","lastModifiedDate":"2021-10-21"},{"lineNumber":43,"author":{"gitId":"david-eom"},"content":"        historyIdx \u003d this.commandHistory.size();","lastModifiedDate":"2021-10-21"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-14"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     * Handles the Enter button pressed event.","lastModifiedDate":"2017-08-16"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-14"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    private void handleCommandEntered() {","lastModifiedDate":"2018-04-01"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        String commandText \u003d commandTextField.getText();","lastModifiedDate":"2020-12-04"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        if (commandText.equals(\"\")) {","lastModifiedDate":"2020-12-04"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            return;","lastModifiedDate":"2020-12-04"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-12-04"},{"lineNumber":55,"author":{"gitId":"david-eom"},"content":"        historyIdx \u003d commandHistory.size() + 1;","lastModifiedDate":"2021-10-31"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-12-04"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-02-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"            commandExecutor.execute(commandText);","lastModifiedDate":"2020-12-04"},{"lineNumber":59,"author":{"gitId":"-"},"content":"            commandTextField.setText(\"\");","lastModifiedDate":"2016-09-14"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        } catch (CommandException | ParseException e) {","lastModifiedDate":"2017-03-11"},{"lineNumber":61,"author":{"gitId":"-"},"content":"            setStyleToIndicateCommandFailure();","lastModifiedDate":"2017-02-05"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-14"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-28"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":65,"author":{"gitId":"david-eom"},"content":"    /**","lastModifiedDate":"2021-10-21"},{"lineNumber":66,"author":{"gitId":"david-eom"},"content":"     * Handles the up/down key arrow pressed event.","lastModifiedDate":"2021-10-21"},{"lineNumber":67,"author":{"gitId":"david-eom"},"content":"     */","lastModifiedDate":"2021-10-21"},{"lineNumber":68,"author":{"gitId":"david-eom"},"content":"    @FXML","lastModifiedDate":"2021-10-21"},{"lineNumber":69,"author":{"gitId":"david-eom"},"content":"    private void handleCommandKeyPressed(KeyEvent event) {","lastModifiedDate":"2021-10-21"},{"lineNumber":70,"author":{"gitId":"david-eom"},"content":"        if (event.getCode() \u003d\u003d KeyCode.UP) {","lastModifiedDate":"2021-10-21"},{"lineNumber":71,"author":{"gitId":"david-eom"},"content":"            commandTextField.setText(getPreviousCommand());","lastModifiedDate":"2021-10-21"},{"lineNumber":72,"author":{"gitId":"david-eom"},"content":"            commandTextField.positionCaret(commandTextField.getLength());","lastModifiedDate":"2021-10-21"},{"lineNumber":73,"author":{"gitId":"david-eom"},"content":"        }","lastModifiedDate":"2021-10-21"},{"lineNumber":74,"author":{"gitId":"david-eom"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":75,"author":{"gitId":"david-eom"},"content":"        if (event.getCode() \u003d\u003d KeyCode.DOWN) {","lastModifiedDate":"2021-10-21"},{"lineNumber":76,"author":{"gitId":"david-eom"},"content":"            commandTextField.setText(getNextCommand());","lastModifiedDate":"2021-10-21"},{"lineNumber":77,"author":{"gitId":"david-eom"},"content":"            commandTextField.positionCaret(commandTextField.getLength());","lastModifiedDate":"2021-10-21"},{"lineNumber":78,"author":{"gitId":"david-eom"},"content":"        }","lastModifiedDate":"2021-10-21"},{"lineNumber":79,"author":{"gitId":"david-eom"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":80,"author":{"gitId":"david-eom"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":81,"author":{"gitId":"david-eom"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":82,"author":{"gitId":"david-eom"},"content":"    private String getPreviousCommand() {","lastModifiedDate":"2021-10-21"},{"lineNumber":83,"author":{"gitId":"david-eom"},"content":"        if (historyIdx \u003d\u003d commandHistory.size()) {","lastModifiedDate":"2021-10-31"},{"lineNumber":84,"author":{"gitId":"david-eom"},"content":"            cachedCommand \u003d commandTextField.getText();","lastModifiedDate":"2021-10-31"},{"lineNumber":85,"author":{"gitId":"david-eom"},"content":"        }","lastModifiedDate":"2021-10-31"},{"lineNumber":86,"author":{"gitId":"david-eom"},"content":"        historyIdx \u003d Math.max(historyIdx - 1, 0);","lastModifiedDate":"2021-10-21"},{"lineNumber":87,"author":{"gitId":"david-eom"},"content":"        return commandHistory.get(historyIdx);","lastModifiedDate":"2021-10-21"},{"lineNumber":88,"author":{"gitId":"david-eom"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":89,"author":{"gitId":"david-eom"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":90,"author":{"gitId":"david-eom"},"content":"    private String getNextCommand() {","lastModifiedDate":"2021-10-21"},{"lineNumber":91,"author":{"gitId":"david-eom"},"content":"        try {","lastModifiedDate":"2021-10-21"},{"lineNumber":92,"author":{"gitId":"david-eom"},"content":"            historyIdx \u003d Math.min(historyIdx + 1, commandHistory.size());","lastModifiedDate":"2021-10-21"},{"lineNumber":93,"author":{"gitId":"david-eom"},"content":"            return commandHistory.get(historyIdx);","lastModifiedDate":"2021-10-21"},{"lineNumber":94,"author":{"gitId":"david-eom"},"content":"        } catch (IndexOutOfBoundsException e) {","lastModifiedDate":"2021-10-21"},{"lineNumber":95,"author":{"gitId":"david-eom"},"content":"            return cachedCommand;","lastModifiedDate":"2021-10-31"},{"lineNumber":96,"author":{"gitId":"david-eom"},"content":"        }","lastModifiedDate":"2021-10-21"},{"lineNumber":97,"author":{"gitId":"david-eom"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":98,"author":{"gitId":"david-eom"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-28"},{"lineNumber":100,"author":{"gitId":"-"},"content":"     * Sets the command box style to use the default style.","lastModifiedDate":"2017-06-28"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-28"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    private void setStyleToDefault() {","lastModifiedDate":"2017-06-28"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        commandTextField.getStyleClass().remove(ERROR_STYLE_CLASS);","lastModifiedDate":"2017-02-05"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-28"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-28"},{"lineNumber":107,"author":{"gitId":"-"},"content":"     * Sets the command box style to indicate a failed command.","lastModifiedDate":"2017-02-05"},{"lineNumber":108,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-28"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    private void setStyleToIndicateCommandFailure() {","lastModifiedDate":"2017-02-05"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        ObservableList\u003cString\u003e styleClass \u003d commandTextField.getStyleClass();","lastModifiedDate":"2017-03-08"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        if (styleClass.contains(ERROR_STYLE_CLASS)) {","lastModifiedDate":"2017-03-08"},{"lineNumber":113,"author":{"gitId":"-"},"content":"            return;","lastModifiedDate":"2017-03-08"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        styleClass.add(ERROR_STYLE_CLASS);","lastModifiedDate":"2017-03-08"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-14"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":120,"author":{"gitId":"-"},"content":"     * Represents a function that can execute commands.","lastModifiedDate":"2018-12-09"},{"lineNumber":121,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    @FunctionalInterface","lastModifiedDate":"2018-12-09"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    public interface CommandExecutor {","lastModifiedDate":"2018-12-09"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-12-09"},{"lineNumber":125,"author":{"gitId":"-"},"content":"         * Executes the command and returns the result.","lastModifiedDate":"2018-12-09"},{"lineNumber":126,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2018-12-09"},{"lineNumber":127,"author":{"gitId":"david-eom"},"content":"         * @see Logic#execute(String)","lastModifiedDate":"2021-10-08"},{"lineNumber":128,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-12-09"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        CommandResult execute(String commandText) throws CommandException, ParseException;","lastModifiedDate":"2018-12-09"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":132,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-14"}],"authorContributionMap":{"david-eom":53,"-":79}},{"path":"src/main/java/socialite/ui/HelpWindow.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"david-eom"},"content":"package socialite.ui;","lastModifiedDate":"2021-10-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-12-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2019-08-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2019-08-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.input.Clipboard;","lastModifiedDate":"2019-08-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.input.ClipboardContent;","lastModifiedDate":"2019-08-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":11,"author":{"gitId":"david-eom"},"content":"import socialite.commons.core.LogsCenter;","lastModifiedDate":"2021-10-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Controller for a help page","lastModifiedDate":"2016-08-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class HelpWindow extends UiPart\u003cStage\u003e {","lastModifiedDate":"2017-12-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":18,"author":{"gitId":"stanley-1"},"content":"    public static final String USERGUIDE_URL \u003d \"https://ay2122s1-cs2103t-f11-4.github.io/tp/UserGuide.html\";","lastModifiedDate":"2021-10-19"},{"lineNumber":19,"author":{"gitId":"stanley-1"},"content":"    public static final String HELP_MESSAGE \u003d \"Refer to the user guide: \" + USERGUIDE_URL","lastModifiedDate":"2021-10-20"},{"lineNumber":20,"author":{"gitId":"stanley-1"},"content":"            + \"\\n\\nEnter \u0027help \u003cCOMMAND\u003e\u0027 to receive in-app guidance for the following commands: \"","lastModifiedDate":"2021-10-20"},{"lineNumber":21,"author":{"gitId":"david-eom"},"content":"            + \"\\n\\nadd, delete, edit, find, remark, share, picture, pin, unpin\"","lastModifiedDate":"2021-10-29"},{"lineNumber":22,"author":{"gitId":"stanley-1"},"content":"            + \"\\n\\nExample: help add\";","lastModifiedDate":"2021-10-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-03"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(HelpWindow.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"HelpWindow.fxml\";","lastModifiedDate":"2016-09-20"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-12-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private Button copyButton;","lastModifiedDate":"2019-08-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-08-19"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2019-08-19"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private Label helpMessage;","lastModifiedDate":"2019-08-19"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-12-01"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Creates a new HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-12-01"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * @param root Stage to use as the root of the HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-12-01"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public HelpWindow(Stage root) {","lastModifiedDate":"2017-12-01"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        super(FXML, root);","lastModifiedDate":"2017-12-01"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        helpMessage.setText(HELP_MESSAGE);","lastModifiedDate":"2019-08-19"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-12-01"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     * Creates a new HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-12-01"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public HelpWindow() {","lastModifiedDate":"2017-12-01"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        this(new Stage());","lastModifiedDate":"2017-12-01"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-01"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-01"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     * Shows the help window.","lastModifiedDate":"2017-08-16"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     * @throws IllegalStateException","lastModifiedDate":"2017-08-16"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * \u003cul\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     *     \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     *         if this method is called on a thread other than the JavaFX Application Thread.","lastModifiedDate":"2017-08-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     *     \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     *     \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     *         if this method is called during animation or layout processing.","lastModifiedDate":"2017-08-16"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     *     \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     *     \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     *         if this method is called on the primary stage.","lastModifiedDate":"2017-08-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     *     \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     *     \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     *         if {@code dialogStage} is already showing.","lastModifiedDate":"2017-08-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     *     \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     * \u003c/ul\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public void show() {","lastModifiedDate":"2016-08-18"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        logger.fine(\"Showing help page about the application.\");","lastModifiedDate":"2016-12-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        getRoot().show();","lastModifiedDate":"2018-02-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        getRoot().centerOnScreen();","lastModifiedDate":"2019-08-19"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-15"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     * Returns true if the help window is currently being shown.","lastModifiedDate":"2018-03-15"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-15"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public boolean isShowing() {","lastModifiedDate":"2018-03-15"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        return getRoot().isShowing();","lastModifiedDate":"2018-03-15"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-15"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     * Hides the help window.","lastModifiedDate":"2018-12-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    public void hide() {","lastModifiedDate":"2018-12-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        getRoot().hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-08"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-08"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-15"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     * Focuses on the help window.","lastModifiedDate":"2018-03-15"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-15"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    public void focus() {","lastModifiedDate":"2018-03-15"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        getRoot().requestFocus();","lastModifiedDate":"2018-03-15"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-15"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-08-19"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2019-08-19"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     * Copies the URL to the user guide to the clipboard.","lastModifiedDate":"2019-08-19"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2019-08-19"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2019-08-19"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    private void copyUrl() {","lastModifiedDate":"2019-08-19"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        final Clipboard clipboard \u003d Clipboard.getSystemClipboard();","lastModifiedDate":"2019-08-19"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        final ClipboardContent url \u003d new ClipboardContent();","lastModifiedDate":"2019-08-19"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        url.putString(USERGUIDE_URL);","lastModifiedDate":"2019-08-19"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        clipboard.setContent(url);","lastModifiedDate":"2019-08-19"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-08-19"},{"lineNumber":105,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"david-eom":3,"-":98,"stanley-1":4}},{"path":"src/main/java/socialite/ui/MainWindow.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"david-eom"},"content":"package socialite.ui;","lastModifiedDate":"2021-10-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"Zacchua"},"content":"import java.io.File;","lastModifiedDate":"2021-10-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-06-16"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.event.ActionEvent;","lastModifiedDate":"2016-12-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-08-26"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.control.MenuItem;","lastModifiedDate":"2016-08-26"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.control.TextInputControl;","lastModifiedDate":"2016-12-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.scene.input.KeyCombination;","lastModifiedDate":"2016-08-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.scene.input.KeyEvent;","lastModifiedDate":"2016-12-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import javafx.scene.layout.StackPane;","lastModifiedDate":"2017-05-09"},{"lineNumber":13,"author":{"gitId":"Zacchua"},"content":"import javafx.stage.FileChooser;","lastModifiedDate":"2021-10-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":15,"author":{"gitId":"david-eom"},"content":"import socialite.commons.core.GuiSettings;","lastModifiedDate":"2021-10-08"},{"lineNumber":16,"author":{"gitId":"david-eom"},"content":"import socialite.commons.core.LogsCenter;","lastModifiedDate":"2021-10-08"},{"lineNumber":17,"author":{"gitId":"david-eom"},"content":"import socialite.logic.Logic;","lastModifiedDate":"2021-10-08"},{"lineNumber":18,"author":{"gitId":"david-eom"},"content":"import socialite.logic.commands.CommandResult;","lastModifiedDate":"2021-10-08"},{"lineNumber":19,"author":{"gitId":"david-eom"},"content":"import socialite.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-10-08"},{"lineNumber":20,"author":{"gitId":"david-eom"},"content":"import socialite.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-10-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":" * The Main Window. Provides the basic application layout containing","lastModifiedDate":"2016-08-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":" * a menu bar and space where other JavaFX elements can be placed.","lastModifiedDate":"2016-08-18"},{"lineNumber":25,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":26,"author":{"gitId":"-"},"content":"public class MainWindow extends UiPart\u003cStage\u003e {","lastModifiedDate":"2017-11-29"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":28,"author":{"gitId":"Zacchua"},"content":"    private static MainWindow window;","lastModifiedDate":"2021-10-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"MainWindow.fxml\";","lastModifiedDate":"2016-08-18"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(getClass());","lastModifiedDate":"2018-08-14"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private Stage primaryStage;","lastModifiedDate":"2016-12-02"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    // Independent Ui parts residing in this Ui container","lastModifiedDate":"2016-08-18"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private PersonListPanel personListPanel;","lastModifiedDate":"2016-08-18"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private ResultDisplay resultDisplay;","lastModifiedDate":"2018-12-09"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    private HelpWindow helpWindow;","lastModifiedDate":"2018-03-15"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    private StackPane commandBoxPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    private MenuItem helpMenuItem;","lastModifiedDate":"2016-08-18"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    private StackPane personListPanelPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    private StackPane resultDisplayPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    private StackPane statusbarPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":56,"author":{"gitId":"Zacchua"},"content":"    @FXML","lastModifiedDate":"2021-10-24"},{"lineNumber":57,"author":{"gitId":"Zacchua"},"content":"    private FileChooser fileChooser;","lastModifiedDate":"2021-10-24"},{"lineNumber":58,"author":{"gitId":"Zacchua"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     * Creates a {@code MainWindow} with the given {@code Stage} and {@code Logic}.","lastModifiedDate":"2020-05-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":62,"author":{"gitId":"Zacchua"},"content":"    private MainWindow(Stage primaryStage, Logic logic) {","lastModifiedDate":"2021-10-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        super(FXML, primaryStage);","lastModifiedDate":"2017-11-29"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        // Set dependencies","lastModifiedDate":"2016-09-21"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        this.primaryStage \u003d primaryStage;","lastModifiedDate":"2016-12-02"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        this.logic \u003d logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        // Configure the UI","lastModifiedDate":"2016-09-21"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        setWindowDefaultSize(logic.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        setAccelerators();","lastModifiedDate":"2016-09-21"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        helpWindow \u003d new HelpWindow();","lastModifiedDate":"2018-03-15"},{"lineNumber":75,"author":{"gitId":"Zacchua"},"content":"        fileChooser \u003d new FileChooser();","lastModifiedDate":"2021-10-24"},{"lineNumber":76,"author":{"gitId":"Zacchua"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":79,"author":{"gitId":"Zacchua"},"content":"    public static MainWindow getWindow(Stage primaryStage, Logic logic) {","lastModifiedDate":"2021-10-26"},{"lineNumber":80,"author":{"gitId":"Zacchua"},"content":"        if (MainWindow.window \u003d\u003d null) {","lastModifiedDate":"2021-10-26"},{"lineNumber":81,"author":{"gitId":"Zacchua"},"content":"            MainWindow.window \u003d new MainWindow(primaryStage, logic);","lastModifiedDate":"2021-10-26"},{"lineNumber":82,"author":{"gitId":"Zacchua"},"content":"        }","lastModifiedDate":"2021-10-26"},{"lineNumber":83,"author":{"gitId":"Zacchua"},"content":"        return MainWindow.window;","lastModifiedDate":"2021-10-26"},{"lineNumber":84,"author":{"gitId":"Zacchua"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":85,"author":{"gitId":"Zacchua"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":86,"author":{"gitId":"Zacchua"},"content":"    public static MainWindow getWindow() {","lastModifiedDate":"2021-10-26"},{"lineNumber":87,"author":{"gitId":"Zacchua"},"content":"        return MainWindow.window;","lastModifiedDate":"2021-10-26"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    public Stage getPrimaryStage() {","lastModifiedDate":"2016-12-24"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        return primaryStage;","lastModifiedDate":"2016-12-24"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    private void setAccelerators() {","lastModifiedDate":"2016-09-21"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        setAccelerator(helpMenuItem, KeyCombination.valueOf(\"F1\"));","lastModifiedDate":"2016-12-18"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-18"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-18"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     * Sets the accelerator of a MenuItem.","lastModifiedDate":"2016-12-18"},{"lineNumber":100,"author":{"gitId":"-"},"content":"     * @param keyCombination the KeyCombination value of the accelerator","lastModifiedDate":"2016-12-18"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-18"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    private void setAccelerator(MenuItem menuItem, KeyCombination keyCombination) {","lastModifiedDate":"2016-12-18"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        menuItem.setAccelerator(keyCombination);","lastModifiedDate":"2016-12-18"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2016-12-18"},{"lineNumber":106,"author":{"gitId":"-"},"content":"         * TODO: the code below can be removed once the bug reported here","lastModifiedDate":"2016-12-18"},{"lineNumber":107,"author":{"gitId":"-"},"content":"         * https://bugs.openjdk.java.net/browse/JDK-8131666","lastModifiedDate":"2016-12-18"},{"lineNumber":108,"author":{"gitId":"-"},"content":"         * is fixed in later version of SDK.","lastModifiedDate":"2016-12-18"},{"lineNumber":109,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2016-12-18"},{"lineNumber":110,"author":{"gitId":"-"},"content":"         * According to the bug report, TextInputControl (TextField, TextArea) will","lastModifiedDate":"2016-12-18"},{"lineNumber":111,"author":{"gitId":"-"},"content":"         * consume function-key events. Because CommandBox contains a TextField, and","lastModifiedDate":"2016-12-18"},{"lineNumber":112,"author":{"gitId":"-"},"content":"         * ResultDisplay contains a TextArea, thus some accelerators (e.g F1) will","lastModifiedDate":"2016-12-18"},{"lineNumber":113,"author":{"gitId":"-"},"content":"         * not work when the focus is in them because the key event is consumed by","lastModifiedDate":"2016-12-18"},{"lineNumber":114,"author":{"gitId":"-"},"content":"         * the TextInputControl(s).","lastModifiedDate":"2016-12-18"},{"lineNumber":115,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2016-12-18"},{"lineNumber":116,"author":{"gitId":"-"},"content":"         * For now, we add following event filter to capture such key events and open","lastModifiedDate":"2016-12-18"},{"lineNumber":117,"author":{"gitId":"-"},"content":"         * help window purposely so to support accelerators even when focus is","lastModifiedDate":"2016-12-18"},{"lineNumber":118,"author":{"gitId":"-"},"content":"         * in CommandBox or ResultDisplay.","lastModifiedDate":"2016-12-18"},{"lineNumber":119,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-12-18"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        getRoot().addEventFilter(KeyEvent.KEY_PRESSED, event -\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":121,"author":{"gitId":"-"},"content":"            if (event.getTarget() instanceof TextInputControl \u0026\u0026 keyCombination.match(event)) {","lastModifiedDate":"2016-12-18"},{"lineNumber":122,"author":{"gitId":"-"},"content":"                menuItem.getOnAction().handle(new ActionEvent());","lastModifiedDate":"2016-12-18"},{"lineNumber":123,"author":{"gitId":"-"},"content":"                event.consume();","lastModifiedDate":"2016-12-18"},{"lineNumber":124,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-12-18"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        });","lastModifiedDate":"2016-12-18"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":129,"author":{"gitId":"-"},"content":"     * Fills up all the placeholders of this window.","lastModifiedDate":"2017-08-16"},{"lineNumber":130,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    void fillInnerParts() {","lastModifiedDate":"2016-09-21"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        personListPanel \u003d new PersonListPanel(logic.getFilteredPersonList());","lastModifiedDate":"2019-01-25"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        personListPanelPlaceholder.getChildren().add(personListPanel.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        resultDisplay \u003d new ResultDisplay();","lastModifiedDate":"2018-12-09"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        resultDisplayPlaceholder.getChildren().add(resultDisplay.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        StatusBarFooter statusBarFooter \u003d new StatusBarFooter(logic.getAddressBookFilePath());","lastModifiedDate":"2019-01-25"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        statusbarPlaceholder.getChildren().add(statusBarFooter.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":141,"author":{"gitId":"david-eom"},"content":"        CommandBox commandBox \u003d new CommandBox(this::executeCommand, logic.getCommandHistory());","lastModifiedDate":"2021-10-21"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        commandBoxPlaceholder.getChildren().add(commandBox.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-18"},{"lineNumber":146,"author":{"gitId":"-"},"content":"     * Sets the default size based on {@code guiSettings}.","lastModifiedDate":"2018-11-27"},{"lineNumber":147,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    private void setWindowDefaultSize(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        primaryStage.setHeight(guiSettings.getWindowHeight());","lastModifiedDate":"2018-11-27"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        primaryStage.setWidth(guiSettings.getWindowWidth());","lastModifiedDate":"2018-11-27"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        if (guiSettings.getWindowCoordinates() !\u003d null) {","lastModifiedDate":"2018-11-27"},{"lineNumber":152,"author":{"gitId":"-"},"content":"            primaryStage.setX(guiSettings.getWindowCoordinates().getX());","lastModifiedDate":"2018-11-27"},{"lineNumber":153,"author":{"gitId":"-"},"content":"            primaryStage.setY(guiSettings.getWindowCoordinates().getY());","lastModifiedDate":"2018-11-27"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-18"},{"lineNumber":155,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":158,"author":{"gitId":"-"},"content":"     * Opens the help window or focuses on it if it\u0027s already opened.","lastModifiedDate":"2018-03-15"},{"lineNumber":159,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    public void handleHelp() {","lastModifiedDate":"2016-08-31"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        if (!helpWindow.isShowing()) {","lastModifiedDate":"2018-03-15"},{"lineNumber":163,"author":{"gitId":"-"},"content":"            helpWindow.show();","lastModifiedDate":"2016-08-18"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        } else {","lastModifiedDate":"2018-03-15"},{"lineNumber":165,"author":{"gitId":"-"},"content":"            helpWindow.focus();","lastModifiedDate":"2018-03-15"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-03-15"},{"lineNumber":167,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    void show() {","lastModifiedDate":"2016-10-15"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        primaryStage.show();","lastModifiedDate":"2016-08-18"},{"lineNumber":171,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":173,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-18"},{"lineNumber":174,"author":{"gitId":"-"},"content":"     * Closes the application.","lastModifiedDate":"2016-08-18"},{"lineNumber":175,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18"},{"lineNumber":176,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    private void handleExit() {","lastModifiedDate":"2016-08-18"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        GuiSettings guiSettings \u003d new GuiSettings(primaryStage.getWidth(), primaryStage.getHeight(),","lastModifiedDate":"2018-12-08"},{"lineNumber":179,"author":{"gitId":"-"},"content":"                (int) primaryStage.getX(), (int) primaryStage.getY());","lastModifiedDate":"2018-12-08"},{"lineNumber":180,"author":{"gitId":"-"},"content":"        logic.setGuiSettings(guiSettings);","lastModifiedDate":"2018-12-08"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        helpWindow.hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":182,"author":{"gitId":"-"},"content":"        primaryStage.hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":183,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-25"},{"lineNumber":185,"author":{"gitId":"-"},"content":"    public PersonListPanel getPersonListPanel() {","lastModifiedDate":"2016-08-25"},{"lineNumber":186,"author":{"gitId":"-"},"content":"        return personListPanel;","lastModifiedDate":"2018-08-14"},{"lineNumber":187,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-25"},{"lineNumber":188,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":189,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":190,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2018-12-09"},{"lineNumber":191,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-12-09"},{"lineNumber":192,"author":{"gitId":"david-eom"},"content":"     * @see Logic#execute(String)","lastModifiedDate":"2021-10-08"},{"lineNumber":193,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":194,"author":{"gitId":"-"},"content":"    private CommandResult executeCommand(String commandText) throws CommandException, ParseException {","lastModifiedDate":"2018-12-09"},{"lineNumber":195,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-12-09"},{"lineNumber":196,"author":{"gitId":"-"},"content":"            CommandResult commandResult \u003d logic.execute(commandText);","lastModifiedDate":"2018-12-09"},{"lineNumber":197,"author":{"gitId":"-"},"content":"            logger.info(\"Result: \" + commandResult.getFeedbackToUser());","lastModifiedDate":"2018-12-09"},{"lineNumber":198,"author":{"gitId":"-"},"content":"            resultDisplay.setFeedbackToUser(commandResult.getFeedbackToUser());","lastModifiedDate":"2018-12-09"},{"lineNumber":199,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":200,"author":{"gitId":"david-eom"},"content":"            if (commandResult.isHelpCommand()) {","lastModifiedDate":"2021-10-28"},{"lineNumber":201,"author":{"gitId":"-"},"content":"                handleHelp();","lastModifiedDate":"2018-12-09"},{"lineNumber":202,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-12-09"},{"lineNumber":203,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":204,"author":{"gitId":"david-eom"},"content":"            if (commandResult.isExitCommand()) {","lastModifiedDate":"2021-10-28"},{"lineNumber":205,"author":{"gitId":"-"},"content":"                handleExit();","lastModifiedDate":"2018-12-09"},{"lineNumber":206,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-12-09"},{"lineNumber":207,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":208,"author":{"gitId":"Zacchua"},"content":"            if (commandResult.isPictureCommand()) {","lastModifiedDate":"2021-10-27"},{"lineNumber":209,"author":{"gitId":"Zacchua"},"content":"                personListPanel \u003d new PersonListPanel(logic.getFilteredPersonList());","lastModifiedDate":"2021-10-27"},{"lineNumber":210,"author":{"gitId":"Zacchua"},"content":"                personListPanelPlaceholder.getChildren().add(personListPanel.getRoot());","lastModifiedDate":"2021-10-27"},{"lineNumber":211,"author":{"gitId":"Zacchua"},"content":"            }","lastModifiedDate":"2021-10-27"},{"lineNumber":212,"author":{"gitId":"Zacchua"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":213,"author":{"gitId":"-"},"content":"            return commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":214,"author":{"gitId":"-"},"content":"        } catch (CommandException | ParseException e) {","lastModifiedDate":"2018-12-09"},{"lineNumber":215,"author":{"gitId":"-"},"content":"            logger.info(\"Invalid command: \" + commandText);","lastModifiedDate":"2018-12-09"},{"lineNumber":216,"author":{"gitId":"-"},"content":"            resultDisplay.setFeedbackToUser(e.getMessage());","lastModifiedDate":"2018-12-09"},{"lineNumber":217,"author":{"gitId":"-"},"content":"            throw e;","lastModifiedDate":"2018-12-09"},{"lineNumber":218,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":219,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":220,"author":{"gitId":"Zacchua"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":221,"author":{"gitId":"Zacchua"},"content":"    public File getFile() {","lastModifiedDate":"2021-10-24"},{"lineNumber":222,"author":{"gitId":"Zacchua"},"content":"        fileChooser.getExtensionFilters().add(new FileChooser.ExtensionFilter(","lastModifiedDate":"2021-10-26"},{"lineNumber":223,"author":{"gitId":"Zacchua"},"content":"                \"Image formats supported\",","lastModifiedDate":"2021-10-26"},{"lineNumber":224,"author":{"gitId":"Zacchua"},"content":"                \"*.jpg\", \"*.png\"","lastModifiedDate":"2021-10-24"},{"lineNumber":225,"author":{"gitId":"Zacchua"},"content":"        ));","lastModifiedDate":"2021-10-24"},{"lineNumber":226,"author":{"gitId":"Zacchua"},"content":"        return this.fileChooser.showOpenDialog(this.primaryStage);","lastModifiedDate":"2021-10-24"},{"lineNumber":227,"author":{"gitId":"Zacchua"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":228,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"Zacchua":31,"david-eom":11,"-":186}},{"path":"src/main/java/socialite/ui/PersonCard.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"david-eom"},"content":"package socialite.ui;","lastModifiedDate":"2021-10-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"Zacchua"},"content":"import java.io.FileInputStream;","lastModifiedDate":"2021-10-25"},{"lineNumber":4,"author":{"gitId":"Zacchua"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2021-10-25"},{"lineNumber":5,"author":{"gitId":"Zacchua"},"content":"import java.io.IOException;","lastModifiedDate":"2021-10-18"},{"lineNumber":6,"author":{"gitId":"Zacchua"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2021-10-27"},{"lineNumber":7,"author":{"gitId":"bnjmnt4n"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-10-27"},{"lineNumber":8,"author":{"gitId":"bnjmnt4n"},"content":"import java.time.Period;","lastModifiedDate":"2021-10-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.Comparator;","lastModifiedDate":"2019-01-02"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-01-02"},{"lineNumber":11,"author":{"gitId":"david-eom"},"content":"import javafx.concurrent.Task;","lastModifiedDate":"2021-10-26"},{"lineNumber":12,"author":{"gitId":"david-eom"},"content":"import javafx.concurrent.WorkerStateEvent;","lastModifiedDate":"2021-10-26"},{"lineNumber":13,"author":{"gitId":"david-eom"},"content":"import javafx.event.EventHandler;","lastModifiedDate":"2021-10-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-09-21"},{"lineNumber":15,"author":{"gitId":"david-eom"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2021-10-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2016-09-21"},{"lineNumber":17,"author":{"gitId":"Zacchua"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2021-10-11"},{"lineNumber":18,"author":{"gitId":"Zacchua"},"content":"import javafx.scene.image.ImageView;","lastModifiedDate":"2021-10-11"},{"lineNumber":19,"author":{"gitId":"david-eom"},"content":"import javafx.scene.input.Clipboard;","lastModifiedDate":"2021-10-28"},{"lineNumber":20,"author":{"gitId":"david-eom"},"content":"import javafx.scene.input.ClipboardContent;","lastModifiedDate":"2021-10-28"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import javafx.scene.layout.FlowPane;","lastModifiedDate":"2016-12-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2016-09-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":24,"author":{"gitId":"Zacchua"},"content":"import javafx.scene.shape.Circle;","lastModifiedDate":"2021-10-24"},{"lineNumber":25,"author":{"gitId":"Zacchua"},"content":"import socialite.model.handle.Handle;","lastModifiedDate":"2021-10-16"},{"lineNumber":26,"author":{"gitId":"Zacchua"},"content":"import socialite.model.handle.Handle.Platform;","lastModifiedDate":"2021-10-18"},{"lineNumber":27,"author":{"gitId":"bnjmnt4n"},"content":"import socialite.model.person.Date;","lastModifiedDate":"2021-10-27"},{"lineNumber":28,"author":{"gitId":"bnjmnt4n"},"content":"import socialite.model.person.Dates;","lastModifiedDate":"2021-10-27"},{"lineNumber":29,"author":{"gitId":"david-eom"},"content":"import socialite.model.person.Person;","lastModifiedDate":"2021-10-08"},{"lineNumber":30,"author":{"gitId":"david-eom"},"content":"import socialite.model.person.Remark;","lastModifiedDate":"2021-10-22"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":" * An UI component that displays information of a {@code Person}.","lastModifiedDate":"2017-08-16"},{"lineNumber":34,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"public class PersonCard extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"PersonListCard.fxml\";","lastModifiedDate":"2016-09-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * Note: Certain keywords such as \"location\" and \"resources\" are reserved keywords in JavaFX.","lastModifiedDate":"2017-03-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * As a consequence, UI elements\u0027 variable names cannot be set to such keywords","lastModifiedDate":"2017-03-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * or an exception will be thrown by JavaFX during runtime.","lastModifiedDate":"2017-03-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     * @see \u003ca href\u003d\"https://github.com/se-edu/addressbook-level4/issues/336\"\u003eThe issue on AddressBook level 4\u003c/a\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public final Person person;","lastModifiedDate":"2018-01-10"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-12"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    private HBox cardPane;","lastModifiedDate":"2016-09-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    private Label name;","lastModifiedDate":"2016-09-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    private Label id;","lastModifiedDate":"2016-09-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":56,"author":{"gitId":"david-eom"},"content":"    private Button share;","lastModifiedDate":"2021-10-26"},{"lineNumber":57,"author":{"gitId":"david-eom"},"content":"    @FXML","lastModifiedDate":"2021-10-26"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    private Label phone;","lastModifiedDate":"2016-09-21"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":60,"author":{"gitId":"david-eom"},"content":"    private HBox handles;","lastModifiedDate":"2021-10-26"},{"lineNumber":61,"author":{"gitId":"Zacchua"},"content":"    @FXML","lastModifiedDate":"2021-10-11"},{"lineNumber":62,"author":{"gitId":"david-eom"},"content":"    private HBox facebook;","lastModifiedDate":"2021-10-26"},{"lineNumber":63,"author":{"gitId":"Zacchua"},"content":"    @FXML","lastModifiedDate":"2021-10-11"},{"lineNumber":64,"author":{"gitId":"stanley-1"},"content":"    private ImageView facebookIcon;","lastModifiedDate":"2021-10-12"},{"lineNumber":65,"author":{"gitId":"stanley-1"},"content":"    @FXML","lastModifiedDate":"2021-10-12"},{"lineNumber":66,"author":{"gitId":"david-eom"},"content":"    private Label facebookHandle;","lastModifiedDate":"2021-10-26"},{"lineNumber":67,"author":{"gitId":"david-eom"},"content":"    @FXML","lastModifiedDate":"2021-10-26"},{"lineNumber":68,"author":{"gitId":"david-eom"},"content":"    private HBox instagram;","lastModifiedDate":"2021-10-26"},{"lineNumber":69,"author":{"gitId":"stanley-1"},"content":"    @FXML","lastModifiedDate":"2021-10-11"},{"lineNumber":70,"author":{"gitId":"stanley-1"},"content":"    private ImageView instagramIcon;","lastModifiedDate":"2021-10-12"},{"lineNumber":71,"author":{"gitId":"stanley-1"},"content":"    @FXML","lastModifiedDate":"2021-10-12"},{"lineNumber":72,"author":{"gitId":"david-eom"},"content":"    private Label instagramHandle;","lastModifiedDate":"2021-10-26"},{"lineNumber":73,"author":{"gitId":"david-eom"},"content":"    @FXML","lastModifiedDate":"2021-10-26"},{"lineNumber":74,"author":{"gitId":"david-eom"},"content":"    private HBox telegram;","lastModifiedDate":"2021-10-26"},{"lineNumber":75,"author":{"gitId":"stanley-1"},"content":"    @FXML","lastModifiedDate":"2021-10-11"},{"lineNumber":76,"author":{"gitId":"david-eom"},"content":"    private ImageView telegramIcon;","lastModifiedDate":"2021-10-12"},{"lineNumber":77,"author":{"gitId":"david-eom"},"content":"    @FXML","lastModifiedDate":"2021-10-12"},{"lineNumber":78,"author":{"gitId":"david-eom"},"content":"    private Label telegramHandle;","lastModifiedDate":"2021-10-26"},{"lineNumber":79,"author":{"gitId":"david-eom"},"content":"    @FXML","lastModifiedDate":"2021-10-26"},{"lineNumber":80,"author":{"gitId":"david-eom"},"content":"    private HBox tiktok;","lastModifiedDate":"2021-10-26"},{"lineNumber":81,"author":{"gitId":"david-eom"},"content":"    @FXML","lastModifiedDate":"2021-10-26"},{"lineNumber":82,"author":{"gitId":"david-eom"},"content":"    private ImageView tiktokIcon;","lastModifiedDate":"2021-10-26"},{"lineNumber":83,"author":{"gitId":"david-eom"},"content":"    @FXML","lastModifiedDate":"2021-10-26"},{"lineNumber":84,"author":{"gitId":"david-eom"},"content":"    private Label tiktokHandle;","lastModifiedDate":"2021-10-26"},{"lineNumber":85,"author":{"gitId":"david-eom"},"content":"    @FXML","lastModifiedDate":"2021-10-26"},{"lineNumber":86,"author":{"gitId":"david-eom"},"content":"    private HBox twitter;","lastModifiedDate":"2021-10-26"},{"lineNumber":87,"author":{"gitId":"david-eom"},"content":"    @FXML","lastModifiedDate":"2021-10-26"},{"lineNumber":88,"author":{"gitId":"david-eom"},"content":"    private ImageView twitterIcon;","lastModifiedDate":"2021-10-26"},{"lineNumber":89,"author":{"gitId":"david-eom"},"content":"    @FXML","lastModifiedDate":"2021-10-26"},{"lineNumber":90,"author":{"gitId":"david-eom"},"content":"    private Label twitterHandle;","lastModifiedDate":"2021-10-26"},{"lineNumber":91,"author":{"gitId":"david-eom"},"content":"    @FXML","lastModifiedDate":"2021-10-08"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    private FlowPane tags;","lastModifiedDate":"2016-12-18"},{"lineNumber":93,"author":{"gitId":"EssWhyy"},"content":"    @FXML","lastModifiedDate":"2021-10-12"},{"lineNumber":94,"author":{"gitId":"bnjmnt4n"},"content":"    private FlowPane dates;","lastModifiedDate":"2021-10-23"},{"lineNumber":95,"author":{"gitId":"bnjmnt4n"},"content":"    @FXML","lastModifiedDate":"2021-10-22"},{"lineNumber":96,"author":{"gitId":"EssWhyy"},"content":"    private Label remark;","lastModifiedDate":"2021-10-12"},{"lineNumber":97,"author":{"gitId":"Zacchua"},"content":"    @FXML","lastModifiedDate":"2021-10-24"},{"lineNumber":98,"author":{"gitId":"Zacchua"},"content":"    private ImageView profilePicture;","lastModifiedDate":"2021-10-24"},{"lineNumber":99,"author":{"gitId":"david-eom"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":100,"author":{"gitId":"david-eom"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     * Creates a {@code PersonCode} with the given {@code Person} and index to display.","lastModifiedDate":"2020-05-27"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    public PersonCard(Person person, int displayedIndex) {","lastModifiedDate":"2018-01-10"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2016-12-24"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        this.person \u003d person;","lastModifiedDate":"2017-07-12"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        id.setText(displayedIndex + \". \");","lastModifiedDate":"2016-09-21"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        name.setText(person.getName().fullName);","lastModifiedDate":"2017-12-20"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        phone.setText(person.getPhone().value);","lastModifiedDate":"2017-12-20"},{"lineNumber":110,"author":{"gitId":"david-eom"},"content":"        remark.managedProperty().bind(remark.visibleProperty());","lastModifiedDate":"2021-10-22"},{"lineNumber":111,"author":{"gitId":"david-eom"},"content":"        this.makeRemark(person.getRemark());","lastModifiedDate":"2021-10-22"},{"lineNumber":112,"author":{"gitId":"Zacchua"},"content":"        this.makeHandle(person.getFacebook(), Platform.FACEBOOK);","lastModifiedDate":"2021-10-18"},{"lineNumber":113,"author":{"gitId":"Zacchua"},"content":"        this.makeHandle(person.getInstagram(), Platform.INSTAGRAM);","lastModifiedDate":"2021-10-18"},{"lineNumber":114,"author":{"gitId":"Zacchua"},"content":"        this.makeHandle(person.getTelegram(), Platform.TELEGRAM);","lastModifiedDate":"2021-10-18"},{"lineNumber":115,"author":{"gitId":"Zacchua"},"content":"        this.makeHandle(person.getTiktok(), Platform.TIKTOK);","lastModifiedDate":"2021-10-18"},{"lineNumber":116,"author":{"gitId":"Zacchua"},"content":"        this.makeHandle(person.getTwitter(), Platform.TWITTER);","lastModifiedDate":"2021-10-18"},{"lineNumber":117,"author":{"gitId":"Zacchua"},"content":"        try {","lastModifiedDate":"2021-10-25"},{"lineNumber":118,"author":{"gitId":"Zacchua"},"content":"            this.profilePicture.setImage(new Image(new FileInputStream(","lastModifiedDate":"2021-10-25"},{"lineNumber":119,"author":{"gitId":"Zacchua"},"content":"                    Paths.get(\"data\", \"profilepictures\")","lastModifiedDate":"2021-10-27"},{"lineNumber":120,"author":{"gitId":"Zacchua"},"content":"                            .resolve(this.person.getProfilePicture().value)","lastModifiedDate":"2021-10-27"},{"lineNumber":121,"author":{"gitId":"Zacchua"},"content":"                            .toString()","lastModifiedDate":"2021-10-27"},{"lineNumber":122,"author":{"gitId":"Zacchua"},"content":"            )));","lastModifiedDate":"2021-10-25"},{"lineNumber":123,"author":{"gitId":"Zacchua"},"content":"        } catch (NullPointerException | FileNotFoundException e) {","lastModifiedDate":"2021-10-25"},{"lineNumber":124,"author":{"gitId":"Zacchua"},"content":"            this.profilePicture.setImage(new Image(","lastModifiedDate":"2021-10-25"},{"lineNumber":125,"author":{"gitId":"bnjmnt4n"},"content":"                    this.getClass().getResourceAsStream(\"/images/default_profile_picture.png\")","lastModifiedDate":"2021-10-29"},{"lineNumber":126,"author":{"gitId":"Zacchua"},"content":"            ));","lastModifiedDate":"2021-10-25"},{"lineNumber":127,"author":{"gitId":"Zacchua"},"content":"        }","lastModifiedDate":"2021-10-25"},{"lineNumber":128,"author":{"gitId":"Zacchua"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":129,"author":{"gitId":"Zacchua"},"content":"        Circle clip \u003d new Circle(30);","lastModifiedDate":"2021-10-24"},{"lineNumber":130,"author":{"gitId":"Zacchua"},"content":"        this.profilePicture.setFitHeight(60);","lastModifiedDate":"2021-10-24"},{"lineNumber":131,"author":{"gitId":"Zacchua"},"content":"        this.profilePicture.setFitWidth(60);","lastModifiedDate":"2021-10-24"},{"lineNumber":132,"author":{"gitId":"Zacchua"},"content":"        clip.setCenterX(profilePicture.getFitWidth() / 2);","lastModifiedDate":"2021-10-30"},{"lineNumber":133,"author":{"gitId":"Zacchua"},"content":"        clip.setCenterY(profilePicture.getFitHeight() / 2);","lastModifiedDate":"2021-10-30"},{"lineNumber":134,"author":{"gitId":"Zacchua"},"content":"        this.profilePicture.setClip(clip);","lastModifiedDate":"2021-10-24"},{"lineNumber":135,"author":{"gitId":"Zacchua"},"content":"        centerImage(profilePicture);","lastModifiedDate":"2021-10-30"},{"lineNumber":136,"author":{"gitId":"Zacchua"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":137,"author":{"gitId":"david-eom"},"content":"        if (person.isPinned()) {","lastModifiedDate":"2021-10-29"},{"lineNumber":138,"author":{"gitId":"david-eom"},"content":"            // set background colour / button colour","lastModifiedDate":"2021-10-29"},{"lineNumber":139,"author":{"gitId":"david-eom"},"content":"        }","lastModifiedDate":"2021-10-29"},{"lineNumber":140,"author":{"gitId":"david-eom"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        person.getTags().stream()","lastModifiedDate":"2019-01-02"},{"lineNumber":142,"author":{"gitId":"-"},"content":"                .sorted(Comparator.comparing(tag -\u003e tag.tagName))","lastModifiedDate":"2019-01-02"},{"lineNumber":143,"author":{"gitId":"-"},"content":"                .forEach(tag -\u003e tags.getChildren().add(new Label(tag.tagName)));","lastModifiedDate":"2019-01-02"},{"lineNumber":144,"author":{"gitId":"bnjmnt4n"},"content":"        this.renderDates(person.getDates());","lastModifiedDate":"2021-10-27"},{"lineNumber":145,"author":{"gitId":"Zacchua"},"content":"    }","lastModifiedDate":"2021-10-14"},{"lineNumber":146,"author":{"gitId":"Zacchua"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":147,"author":{"gitId":"david-eom"},"content":"    private void makeRemark(Remark remark) {","lastModifiedDate":"2021-10-22"},{"lineNumber":148,"author":{"gitId":"david-eom"},"content":"        String value \u003d remark.get();","lastModifiedDate":"2021-10-22"},{"lineNumber":149,"author":{"gitId":"david-eom"},"content":"        if (value !\u003d null \u0026\u0026 !value.equals(\"\")) {","lastModifiedDate":"2021-10-22"},{"lineNumber":150,"author":{"gitId":"david-eom"},"content":"            this.remark.setText(value);","lastModifiedDate":"2021-10-22"},{"lineNumber":151,"author":{"gitId":"david-eom"},"content":"            this.remark.setVisible(true);","lastModifiedDate":"2021-10-22"},{"lineNumber":152,"author":{"gitId":"david-eom"},"content":"        } else {","lastModifiedDate":"2021-10-22"},{"lineNumber":153,"author":{"gitId":"david-eom"},"content":"            this.remark.setText(null);","lastModifiedDate":"2021-10-23"},{"lineNumber":154,"author":{"gitId":"david-eom"},"content":"            this.remark.setVisible(false);","lastModifiedDate":"2021-10-22"},{"lineNumber":155,"author":{"gitId":"david-eom"},"content":"        }","lastModifiedDate":"2021-10-22"},{"lineNumber":156,"author":{"gitId":"david-eom"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":157,"author":{"gitId":"david-eom"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":158,"author":{"gitId":"Zacchua"},"content":"    // credits for this method goes to https://stackoverflow.com/questions/32781362/centering-an-image-in-an-imageview","lastModifiedDate":"2021-10-30"},{"lineNumber":159,"author":{"gitId":"Zacchua"},"content":"    private void centerImage(ImageView imageView) {","lastModifiedDate":"2021-10-30"},{"lineNumber":160,"author":{"gitId":"Zacchua"},"content":"        Image img \u003d imageView.getImage();","lastModifiedDate":"2021-10-30"},{"lineNumber":161,"author":{"gitId":"Zacchua"},"content":"        if (img \u003d\u003d null) {","lastModifiedDate":"2021-11-03"},{"lineNumber":162,"author":{"gitId":"Zacchua"},"content":"            return;","lastModifiedDate":"2021-11-03"},{"lineNumber":163,"author":{"gitId":"Zacchua"},"content":"        }","lastModifiedDate":"2021-11-03"},{"lineNumber":164,"author":{"gitId":"Zacchua"},"content":"        double w \u003d 0;","lastModifiedDate":"2021-10-30"},{"lineNumber":165,"author":{"gitId":"Zacchua"},"content":"        double h \u003d 0;","lastModifiedDate":"2021-10-30"},{"lineNumber":166,"author":{"gitId":"Zacchua"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":167,"author":{"gitId":"Zacchua"},"content":"        double ratioX \u003d imageView.getFitWidth() / img.getWidth();","lastModifiedDate":"2021-10-30"},{"lineNumber":168,"author":{"gitId":"Zacchua"},"content":"        double ratioY \u003d imageView.getFitHeight() / img.getHeight();","lastModifiedDate":"2021-10-30"},{"lineNumber":169,"author":{"gitId":"Zacchua"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":170,"author":{"gitId":"Zacchua"},"content":"        double reducCoeff \u003d 0;","lastModifiedDate":"2021-10-30"},{"lineNumber":171,"author":{"gitId":"Zacchua"},"content":"        if (ratioX \u003e\u003d ratioY) {","lastModifiedDate":"2021-10-30"},{"lineNumber":172,"author":{"gitId":"Zacchua"},"content":"            reducCoeff \u003d ratioY;","lastModifiedDate":"2021-10-30"},{"lineNumber":173,"author":{"gitId":"Zacchua"},"content":"        } else {","lastModifiedDate":"2021-10-30"},{"lineNumber":174,"author":{"gitId":"Zacchua"},"content":"            reducCoeff \u003d ratioX;","lastModifiedDate":"2021-10-30"},{"lineNumber":175,"author":{"gitId":"Zacchua"},"content":"        }","lastModifiedDate":"2021-10-30"},{"lineNumber":176,"author":{"gitId":"Zacchua"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":177,"author":{"gitId":"Zacchua"},"content":"        w \u003d img.getWidth() * reducCoeff;","lastModifiedDate":"2021-10-30"},{"lineNumber":178,"author":{"gitId":"Zacchua"},"content":"        h \u003d img.getHeight() * reducCoeff;","lastModifiedDate":"2021-10-30"},{"lineNumber":179,"author":{"gitId":"Zacchua"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":180,"author":{"gitId":"Zacchua"},"content":"        imageView.setX((imageView.getFitWidth() - w) / 2);","lastModifiedDate":"2021-10-30"},{"lineNumber":181,"author":{"gitId":"Zacchua"},"content":"        imageView.setY((imageView.getFitHeight() - h) / 2);","lastModifiedDate":"2021-10-30"},{"lineNumber":182,"author":{"gitId":"Zacchua"},"content":"    }","lastModifiedDate":"2021-10-30"},{"lineNumber":183,"author":{"gitId":"Zacchua"},"content":"","lastModifiedDate":"2021-10-30"},{"lineNumber":184,"author":{"gitId":"david-eom"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":185,"author":{"gitId":"Zacchua"},"content":"    private void makeHandle(Handle handle, Platform platform) {","lastModifiedDate":"2021-10-18"},{"lineNumber":186,"author":{"gitId":"david-eom"},"content":"        HBox box \u003d null;","lastModifiedDate":"2021-10-26"},{"lineNumber":187,"author":{"gitId":"david-eom"},"content":"        Label label \u003d null;","lastModifiedDate":"2021-10-23"},{"lineNumber":188,"author":{"gitId":"david-eom"},"content":"        ImageView icon \u003d null;","lastModifiedDate":"2021-10-23"},{"lineNumber":189,"author":{"gitId":"david-eom"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":190,"author":{"gitId":"david-eom"},"content":"        switch (platform) {","lastModifiedDate":"2021-10-23"},{"lineNumber":191,"author":{"gitId":"Zacchua"},"content":"        case FACEBOOK:","lastModifiedDate":"2021-10-18"},{"lineNumber":192,"author":{"gitId":"david-eom"},"content":"            box \u003d this.facebook;","lastModifiedDate":"2021-10-26"},{"lineNumber":193,"author":{"gitId":"david-eom"},"content":"            label \u003d this.facebookHandle;","lastModifiedDate":"2021-10-26"},{"lineNumber":194,"author":{"gitId":"david-eom"},"content":"            icon \u003d this.facebookIcon;","lastModifiedDate":"2021-10-23"},{"lineNumber":195,"author":{"gitId":"Zacchua"},"content":"            break;","lastModifiedDate":"2021-10-14"},{"lineNumber":196,"author":{"gitId":"Zacchua"},"content":"        case INSTAGRAM:","lastModifiedDate":"2021-10-18"},{"lineNumber":197,"author":{"gitId":"david-eom"},"content":"            box \u003d this.instagram;","lastModifiedDate":"2021-10-26"},{"lineNumber":198,"author":{"gitId":"david-eom"},"content":"            label \u003d this.instagramHandle;","lastModifiedDate":"2021-10-26"},{"lineNumber":199,"author":{"gitId":"david-eom"},"content":"            icon \u003d this.instagramIcon;","lastModifiedDate":"2021-10-23"},{"lineNumber":200,"author":{"gitId":"Zacchua"},"content":"            break;","lastModifiedDate":"2021-10-14"},{"lineNumber":201,"author":{"gitId":"Zacchua"},"content":"        case TELEGRAM:","lastModifiedDate":"2021-10-18"},{"lineNumber":202,"author":{"gitId":"david-eom"},"content":"            box \u003d this.telegram;","lastModifiedDate":"2021-10-26"},{"lineNumber":203,"author":{"gitId":"david-eom"},"content":"            label \u003d this.telegramHandle;","lastModifiedDate":"2021-10-26"},{"lineNumber":204,"author":{"gitId":"david-eom"},"content":"            icon \u003d this.telegramIcon;","lastModifiedDate":"2021-10-23"},{"lineNumber":205,"author":{"gitId":"Zacchua"},"content":"            break;","lastModifiedDate":"2021-10-14"},{"lineNumber":206,"author":{"gitId":"Zacchua"},"content":"        case TIKTOK:","lastModifiedDate":"2021-10-18"},{"lineNumber":207,"author":{"gitId":"david-eom"},"content":"            box \u003d this.tiktok;","lastModifiedDate":"2021-10-26"},{"lineNumber":208,"author":{"gitId":"david-eom"},"content":"            label \u003d this.tiktokHandle;","lastModifiedDate":"2021-10-26"},{"lineNumber":209,"author":{"gitId":"david-eom"},"content":"            icon \u003d this.tiktokIcon;","lastModifiedDate":"2021-10-23"},{"lineNumber":210,"author":{"gitId":"Zacchua"},"content":"            break;","lastModifiedDate":"2021-10-14"},{"lineNumber":211,"author":{"gitId":"Zacchua"},"content":"        case TWITTER:","lastModifiedDate":"2021-10-18"},{"lineNumber":212,"author":{"gitId":"david-eom"},"content":"            box \u003d this.twitter;","lastModifiedDate":"2021-10-26"},{"lineNumber":213,"author":{"gitId":"david-eom"},"content":"            label \u003d this.twitterHandle;","lastModifiedDate":"2021-10-26"},{"lineNumber":214,"author":{"gitId":"david-eom"},"content":"            icon \u003d this.twitterIcon;","lastModifiedDate":"2021-10-23"},{"lineNumber":215,"author":{"gitId":"Zacchua"},"content":"            break;","lastModifiedDate":"2021-10-14"},{"lineNumber":216,"author":{"gitId":"Zacchua"},"content":"        default:","lastModifiedDate":"2021-10-14"},{"lineNumber":217,"author":{"gitId":"Zacchua"},"content":"        }","lastModifiedDate":"2021-10-14"},{"lineNumber":218,"author":{"gitId":"Zacchua"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":219,"author":{"gitId":"david-eom"},"content":"        // if platform is correct, label and icon should not be null","lastModifiedDate":"2021-10-23"},{"lineNumber":220,"author":{"gitId":"david-eom"},"content":"        assert box !\u003d null;","lastModifiedDate":"2021-10-26"},{"lineNumber":221,"author":{"gitId":"david-eom"},"content":"        assert label !\u003d null;","lastModifiedDate":"2021-10-23"},{"lineNumber":222,"author":{"gitId":"david-eom"},"content":"        assert icon !\u003d null;","lastModifiedDate":"2021-10-23"},{"lineNumber":223,"author":{"gitId":"david-eom"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":224,"author":{"gitId":"david-eom"},"content":"        box.managedProperty().bind(box.visibleProperty());","lastModifiedDate":"2021-10-26"},{"lineNumber":225,"author":{"gitId":"david-eom"},"content":"        renderHandle(box, handle, label, icon, \"/images/\" + platform.name().toLowerCase() + \".png\");","lastModifiedDate":"2021-10-26"},{"lineNumber":226,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-18"},{"lineNumber":227,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-14"},{"lineNumber":228,"author":{"gitId":"david-eom"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":229,"author":{"gitId":"david-eom"},"content":"    private void renderHandle(HBox box, Handle handle, Label label, ImageView icon, String iconFilePath) {","lastModifiedDate":"2021-10-26"},{"lineNumber":230,"author":{"gitId":"david-eom"},"content":"        if (handle.get() !\u003d null \u0026\u0026 !handle.get().equals(\"\")) {","lastModifiedDate":"2021-10-23"},{"lineNumber":231,"author":{"gitId":"david-eom"},"content":"            box.setVisible(true);","lastModifiedDate":"2021-10-26"},{"lineNumber":232,"author":{"gitId":"david-eom"},"content":"            icon.setImage(new Image(this.getClass().getResourceAsStream(iconFilePath)));","lastModifiedDate":"2021-10-23"},{"lineNumber":233,"author":{"gitId":"david-eom"},"content":"            label.setText(\"@\" + handle + \" \");","lastModifiedDate":"2021-10-23"},{"lineNumber":234,"author":{"gitId":"david-eom"},"content":"            label.setOnMouseEntered(Event -\u003e label.setUnderline(true));","lastModifiedDate":"2021-10-23"},{"lineNumber":235,"author":{"gitId":"david-eom"},"content":"            label.setOnMouseExited(Event -\u003e label.setUnderline(false));","lastModifiedDate":"2021-10-23"},{"lineNumber":236,"author":{"gitId":"david-eom"},"content":"            label.setOnMouseClicked(Event -\u003e this.openBrowser(handle.getUrl()));","lastModifiedDate":"2021-10-23"},{"lineNumber":237,"author":{"gitId":"david-eom"},"content":"        } else {","lastModifiedDate":"2021-10-23"},{"lineNumber":238,"author":{"gitId":"david-eom"},"content":"            box.setVisible(false);","lastModifiedDate":"2021-10-26"},{"lineNumber":239,"author":{"gitId":"david-eom"},"content":"        }","lastModifiedDate":"2021-10-23"},{"lineNumber":240,"author":{"gitId":"david-eom"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":241,"author":{"gitId":"david-eom"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":242,"author":{"gitId":"bnjmnt4n"},"content":"    private void renderDates(Dates displayedDates) {","lastModifiedDate":"2021-10-27"},{"lineNumber":243,"author":{"gitId":"david-eom"},"content":"        displayedDates.get().values().stream()","lastModifiedDate":"2021-10-28"},{"lineNumber":244,"author":{"gitId":"bnjmnt4n"},"content":"                .sorted(Date.getComparator())","lastModifiedDate":"2021-10-27"},{"lineNumber":245,"author":{"gitId":"bnjmnt4n"},"content":"                .forEach(date -\u003e {","lastModifiedDate":"2021-10-27"},{"lineNumber":246,"author":{"gitId":"bnjmnt4n"},"content":"                    LocalDate nextOccurrence \u003d date.getNextOccurrence(LocalDate.now()).orElse(LocalDate.MIN);","lastModifiedDate":"2021-10-27"},{"lineNumber":247,"author":{"gitId":"bnjmnt4n"},"content":"                    Period period \u003d Period.between(LocalDate.now(), nextOccurrence);","lastModifiedDate":"2021-10-27"},{"lineNumber":248,"author":{"gitId":"bnjmnt4n"},"content":"                    boolean isUpcoming \u003d period.getYears() \u003d\u003d 0 \u0026\u0026 period.getMonths() \u003d\u003d 0 \u0026\u0026 period.getDays() \u003c\u003d 7;","lastModifiedDate":"2021-10-27"},{"lineNumber":249,"author":{"gitId":"bnjmnt4n"},"content":"                    String upcomingMessage \u003d isUpcoming","lastModifiedDate":"2021-10-27"},{"lineNumber":250,"author":{"gitId":"bnjmnt4n"},"content":"                            ? \" (\" + (period.getDays() \u003d\u003d 0 ? \"today\" : \"in \" + period.getDays() + \" days\") + \")\"","lastModifiedDate":"2021-10-27"},{"lineNumber":251,"author":{"gitId":"bnjmnt4n"},"content":"                            : \"\";","lastModifiedDate":"2021-10-27"},{"lineNumber":252,"author":{"gitId":"bnjmnt4n"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":253,"author":{"gitId":"bnjmnt4n"},"content":"                    String message \u003d date.toString() + upcomingMessage;","lastModifiedDate":"2021-10-27"},{"lineNumber":254,"author":{"gitId":"bnjmnt4n"},"content":"                    Label label \u003d new Label(message);","lastModifiedDate":"2021-10-27"},{"lineNumber":255,"author":{"gitId":"bnjmnt4n"},"content":"                    if (isUpcoming) {","lastModifiedDate":"2021-10-27"},{"lineNumber":256,"author":{"gitId":"bnjmnt4n"},"content":"                        label.idProperty().set(\"upcoming\");","lastModifiedDate":"2021-10-27"},{"lineNumber":257,"author":{"gitId":"bnjmnt4n"},"content":"                    }","lastModifiedDate":"2021-10-27"},{"lineNumber":258,"author":{"gitId":"bnjmnt4n"},"content":"                    dates.getChildren().add(label);","lastModifiedDate":"2021-10-27"},{"lineNumber":259,"author":{"gitId":"bnjmnt4n"},"content":"                });","lastModifiedDate":"2021-10-27"},{"lineNumber":260,"author":{"gitId":"bnjmnt4n"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":261,"author":{"gitId":"bnjmnt4n"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":262,"author":{"gitId":"david-eom"},"content":"    private void openBrowser(String url) {","lastModifiedDate":"2021-10-23"},{"lineNumber":263,"author":{"gitId":"david-eom"},"content":"        String os \u003d System.getProperty(\"os.name\").toLowerCase();","lastModifiedDate":"2021-10-23"},{"lineNumber":264,"author":{"gitId":"david-eom"},"content":"        Runtime runtime \u003d Runtime.getRuntime();","lastModifiedDate":"2021-10-23"},{"lineNumber":265,"author":{"gitId":"david-eom"},"content":"        try {","lastModifiedDate":"2021-10-23"},{"lineNumber":266,"author":{"gitId":"david-eom"},"content":"            if (os.indexOf(\"win\") \u003e\u003d 0) {","lastModifiedDate":"2021-10-23"},{"lineNumber":267,"author":{"gitId":"david-eom"},"content":"                runtime.exec(\"rundll32 url.dll,FileProtocolHandler \" + url);","lastModifiedDate":"2021-10-23"},{"lineNumber":268,"author":{"gitId":"david-eom"},"content":"            } else if (os.indexOf(\"mac\") \u003e\u003d 0) {","lastModifiedDate":"2021-10-23"},{"lineNumber":269,"author":{"gitId":"david-eom"},"content":"                runtime.exec(\"open \" + url);","lastModifiedDate":"2021-10-23"},{"lineNumber":270,"author":{"gitId":"david-eom"},"content":"            } else if (os.indexOf(\"nix\") \u003e\u003d 0 || os.indexOf(\"nux\") \u003e\u003d 0) {","lastModifiedDate":"2021-10-23"},{"lineNumber":271,"author":{"gitId":"david-eom"},"content":"                runtime.exec(\"xdg-open \" + url);","lastModifiedDate":"2021-10-23"},{"lineNumber":272,"author":{"gitId":"david-eom"},"content":"            }","lastModifiedDate":"2021-10-23"},{"lineNumber":273,"author":{"gitId":"david-eom"},"content":"        } catch (IOException e) {","lastModifiedDate":"2021-10-23"},{"lineNumber":274,"author":{"gitId":"david-eom"},"content":"            e.printStackTrace();","lastModifiedDate":"2021-10-23"},{"lineNumber":275,"author":{"gitId":"david-eom"},"content":"        }","lastModifiedDate":"2021-10-23"},{"lineNumber":276,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-18"},{"lineNumber":277,"author":{"gitId":"david-eom"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":278,"author":{"gitId":"david-eom"},"content":"    @FXML","lastModifiedDate":"2021-10-26"},{"lineNumber":279,"author":{"gitId":"david-eom"},"content":"    private void handleButtonAction() {","lastModifiedDate":"2021-10-26"},{"lineNumber":280,"author":{"gitId":"david-eom"},"content":"        Clipboard clipboard \u003d Clipboard.getSystemClipboard();","lastModifiedDate":"2021-10-28"},{"lineNumber":281,"author":{"gitId":"david-eom"},"content":"        ClipboardContent content \u003d new ClipboardContent();","lastModifiedDate":"2021-10-28"},{"lineNumber":282,"author":{"gitId":"david-eom"},"content":"        content.putString(person.toSharingString());","lastModifiedDate":"2021-10-28"},{"lineNumber":283,"author":{"gitId":"david-eom"},"content":"        clipboard.setContent(content);","lastModifiedDate":"2021-10-28"},{"lineNumber":284,"author":{"gitId":"david-eom"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":285,"author":{"gitId":"david-eom"},"content":"        share.setText(\"Copied!\");","lastModifiedDate":"2021-10-26"},{"lineNumber":286,"author":{"gitId":"david-eom"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":287,"author":{"gitId":"david-eom"},"content":"        // Change the button text back after 2 seconds","lastModifiedDate":"2021-10-26"},{"lineNumber":288,"author":{"gitId":"david-eom"},"content":"        Task\u003cVoid\u003e sleeper \u003d new Task\u003c\u003e() {","lastModifiedDate":"2021-10-26"},{"lineNumber":289,"author":{"gitId":"david-eom"},"content":"            @Override","lastModifiedDate":"2021-10-26"},{"lineNumber":290,"author":{"gitId":"david-eom"},"content":"            protected Void call() {","lastModifiedDate":"2021-10-26"},{"lineNumber":291,"author":{"gitId":"david-eom"},"content":"                try {","lastModifiedDate":"2021-10-26"},{"lineNumber":292,"author":{"gitId":"david-eom"},"content":"                    Thread.sleep(2000);","lastModifiedDate":"2021-10-26"},{"lineNumber":293,"author":{"gitId":"david-eom"},"content":"                } catch (InterruptedException ignored) {","lastModifiedDate":"2021-10-26"},{"lineNumber":294,"author":{"gitId":"david-eom"},"content":"                    // Yet to come up with what to do","lastModifiedDate":"2021-10-26"},{"lineNumber":295,"author":{"gitId":"david-eom"},"content":"                }","lastModifiedDate":"2021-10-26"},{"lineNumber":296,"author":{"gitId":"david-eom"},"content":"                return null;","lastModifiedDate":"2021-10-26"},{"lineNumber":297,"author":{"gitId":"david-eom"},"content":"            }","lastModifiedDate":"2021-10-26"},{"lineNumber":298,"author":{"gitId":"david-eom"},"content":"        };","lastModifiedDate":"2021-10-26"},{"lineNumber":299,"author":{"gitId":"david-eom"},"content":"        sleeper.setOnSucceeded(new EventHandler\u003cWorkerStateEvent\u003e() {","lastModifiedDate":"2021-10-26"},{"lineNumber":300,"author":{"gitId":"david-eom"},"content":"            @Override","lastModifiedDate":"2021-10-26"},{"lineNumber":301,"author":{"gitId":"david-eom"},"content":"            public void handle(WorkerStateEvent event) {","lastModifiedDate":"2021-10-26"},{"lineNumber":302,"author":{"gitId":"david-eom"},"content":"                share.setText(\"Share\");","lastModifiedDate":"2021-10-26"},{"lineNumber":303,"author":{"gitId":"david-eom"},"content":"            }","lastModifiedDate":"2021-10-26"},{"lineNumber":304,"author":{"gitId":"david-eom"},"content":"        });","lastModifiedDate":"2021-10-26"},{"lineNumber":305,"author":{"gitId":"david-eom"},"content":"        new Thread(sleeper).start();","lastModifiedDate":"2021-10-26"},{"lineNumber":306,"author":{"gitId":"david-eom"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":307,"author":{"gitId":"david-eom"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":308,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-07-14"},{"lineNumber":309,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-07-14"},{"lineNumber":310,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2017-07-14"},{"lineNumber":311,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2017-07-14"},{"lineNumber":312,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-07-14"},{"lineNumber":313,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-07-14"},{"lineNumber":314,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-14"},{"lineNumber":315,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-07-14"},{"lineNumber":316,"author":{"gitId":"-"},"content":"        if (!(other instanceof PersonCard)) {","lastModifiedDate":"2017-07-14"},{"lineNumber":317,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-07-14"},{"lineNumber":318,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-07-14"},{"lineNumber":319,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-14"},{"lineNumber":320,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2017-07-14"},{"lineNumber":321,"author":{"gitId":"-"},"content":"        PersonCard card \u003d (PersonCard) other;","lastModifiedDate":"2017-07-14"},{"lineNumber":322,"author":{"gitId":"-"},"content":"        return id.getText().equals(card.id.getText())","lastModifiedDate":"2017-07-14"},{"lineNumber":323,"author":{"gitId":"-"},"content":"                \u0026\u0026 person.equals(card.person);","lastModifiedDate":"2017-07-14"},{"lineNumber":324,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-14"},{"lineNumber":325,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"Zacchua":79,"EssWhyy":2,"bnjmnt4n":27,"david-eom":142,"-":69,"stanley-1":6}},{"path":"src/main/java/socialite/ui/PersonListPanel.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"david-eom"},"content":"package socialite.ui;","lastModifiedDate":"2021-10-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-08-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-08-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.ListCell;","lastModifiedDate":"2016-09-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.control.ListView;","lastModifiedDate":"2016-08-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":10,"author":{"gitId":"david-eom"},"content":"import socialite.commons.core.LogsCenter;","lastModifiedDate":"2021-10-08"},{"lineNumber":11,"author":{"gitId":"david-eom"},"content":"import socialite.model.person.Person;","lastModifiedDate":"2021-10-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Panel containing the list of persons.","lastModifiedDate":"2016-09-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class PersonListPanel extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"PersonListPanel.fxml\";","lastModifiedDate":"2016-09-14"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(PersonListPanel.class);","lastModifiedDate":"2017-04-01"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private ListView\u003cPerson\u003e personListView;","lastModifiedDate":"2018-02-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Creates a {@code PersonListPanel} with the given {@code ObservableList}.","lastModifiedDate":"2020-05-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public PersonListPanel(ObservableList\u003cPerson\u003e personList) {","lastModifiedDate":"2019-01-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2016-12-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        personListView.setItems(personList);","lastModifiedDate":"2018-02-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        personListView.setCellFactory(listView -\u003e new PersonListViewCell());","lastModifiedDate":"2016-08-18"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * Custom {@code ListCell} that displays the graphics of a {@code Person} using a {@code PersonCard}.","lastModifiedDate":"2018-02-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    class PersonListViewCell extends ListCell\u003cPerson\u003e {","lastModifiedDate":"2018-02-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        protected void updateItem(Person person, boolean empty) {","lastModifiedDate":"2018-02-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            super.updateItem(person, empty);","lastModifiedDate":"2016-09-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            if (empty || person \u003d\u003d null) {","lastModifiedDate":"2016-09-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"                setGraphic(null);","lastModifiedDate":"2016-09-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"                setText(null);","lastModifiedDate":"2016-09-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            } else {","lastModifiedDate":"2016-09-21"},{"lineNumber":44,"author":{"gitId":"-"},"content":"                setGraphic(new PersonCard(person, getIndex() + 1).getRoot());","lastModifiedDate":"2018-02-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-09-21"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"david-eom":3,"-":46}},{"path":"src/main/java/socialite/ui/ResultDisplay.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"david-eom"},"content":"package socialite.ui;","lastModifiedDate":"2021-10-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-12-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.TextArea;","lastModifiedDate":"2016-09-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * A ui for the status bar that is displayed at the header of the application.","lastModifiedDate":"2016-09-28"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class ResultDisplay extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"ResultDisplay.fxml\";","lastModifiedDate":"2016-09-14"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-10-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private TextArea resultDisplay;","lastModifiedDate":"2016-10-15"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-15"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public ResultDisplay() {","lastModifiedDate":"2017-06-14"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2016-12-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public void setFeedbackToUser(String feedbackToUser) {","lastModifiedDate":"2018-12-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        requireNonNull(feedbackToUser);","lastModifiedDate":"2018-12-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        resultDisplay.setText(feedbackToUser);","lastModifiedDate":"2018-12-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"david-eom":1,"-":27}},{"path":"src/main/java/socialite/ui/StatusBarFooter.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"david-eom"},"content":"package socialite.ui;","lastModifiedDate":"2021-10-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2018-12-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2016-12-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * A ui for the status bar that is displayed at the footer of the application.","lastModifiedDate":"2016-09-28"},{"lineNumber":12,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class StatusBarFooter extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-14"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"StatusBarFooter.fxml\";","lastModifiedDate":"2017-04-01"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-12-10"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private Label saveLocationStatus;","lastModifiedDate":"2018-12-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * Creates a {@code StatusBarFooter} with the given {@code Path}.","lastModifiedDate":"2020-05-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public StatusBarFooter(Path saveLocation) {","lastModifiedDate":"2019-01-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        super(FXML);","lastModifiedDate":"2017-04-01"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        saveLocationStatus.setText(Paths.get(\".\").resolve(saveLocation).toString());","lastModifiedDate":"2018-12-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-04-01"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":28,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"david-eom":1,"-":27}},{"path":"src/main/java/socialite/ui/Ui.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"david-eom"},"content":"package socialite.ui;","lastModifiedDate":"2021-10-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-09-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * API of UI component","lastModifiedDate":"2016-09-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public interface Ui {","lastModifiedDate":"2016-09-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    /** Starts the UI (and the App).  */","lastModifiedDate":"2016-09-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    void start(Stage primaryStage);","lastModifiedDate":"2016-09-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"david-eom":1,"-":12}},{"path":"src/main/java/socialite/ui/UiManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"david-eom"},"content":"package socialite.ui;","lastModifiedDate":"2021-10-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.application.Platform;","lastModifiedDate":"2016-08-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.Alert;","lastModifiedDate":"2016-08-18"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.Alert.AlertType;","lastModifiedDate":"2016-08-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.image.Image;","lastModifiedDate":"2016-08-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":10,"author":{"gitId":"david-eom"},"content":"import socialite.MainApp;","lastModifiedDate":"2021-10-08"},{"lineNumber":11,"author":{"gitId":"david-eom"},"content":"import socialite.commons.core.LogsCenter;","lastModifiedDate":"2021-10-08"},{"lineNumber":12,"author":{"gitId":"david-eom"},"content":"import socialite.commons.util.StringUtil;","lastModifiedDate":"2021-10-08"},{"lineNumber":13,"author":{"gitId":"david-eom"},"content":"import socialite.logic.Logic;","lastModifiedDate":"2021-10-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * The manager of the UI component.","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class UiManager implements Ui {","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public static final String ALERT_DIALOG_PANE_FIELD_ID \u003d \"alertDialogPane\";","lastModifiedDate":"2017-04-01"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(UiManager.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":23,"author":{"gitId":"stanley-1"},"content":"    private static final String ICON_APPLICATION \u003d \"/images/social-media.png\";","lastModifiedDate":"2021-10-19"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private MainWindow mainWindow;","lastModifiedDate":"2016-08-18"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Creates a {@code UiManager} with the given {@code Logic}.","lastModifiedDate":"2020-05-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public UiManager(Logic logic) {","lastModifiedDate":"2018-12-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        super();","lastModifiedDate":"2016-08-18"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        this.logic \u003d logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void start(Stage primaryStage) {","lastModifiedDate":"2016-09-25"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        logger.info(\"Starting UI...\");","lastModifiedDate":"2016-09-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        //Set the application icon.","lastModifiedDate":"2016-08-18"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        primaryStage.getIcons().add(getImage(ICON_APPLICATION));","lastModifiedDate":"2016-08-18"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-08-18"},{"lineNumber":44,"author":{"gitId":"Zacchua"},"content":"            mainWindow \u003d MainWindow.getWindow(primaryStage, logic);","lastModifiedDate":"2021-10-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            mainWindow.show(); //This should be called before creating other UI parts","lastModifiedDate":"2016-08-18"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            mainWindow.fillInnerParts();","lastModifiedDate":"2016-08-18"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        } catch (Throwable e) {","lastModifiedDate":"2016-08-18"},{"lineNumber":49,"author":{"gitId":"-"},"content":"            logger.severe(StringUtil.getDetails(e));","lastModifiedDate":"2016-09-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"            showFatalErrorDialogAndShutdown(\"Fatal error during initializing\", e);","lastModifiedDate":"2016-08-18"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-18"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    private Image getImage(String imagePath) {","lastModifiedDate":"2016-08-18"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        return new Image(MainApp.class.getResourceAsStream(imagePath));","lastModifiedDate":"2016-08-18"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    void showAlertDialogAndWait(Alert.AlertType type, String title, String headerText, String contentText) {","lastModifiedDate":"2016-09-21"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        showAlertDialogAndWait(mainWindow.getPrimaryStage(), type, title, headerText, contentText);","lastModifiedDate":"2016-08-18"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * Shows an alert dialog on {@code owner} with the given parameters.","lastModifiedDate":"2017-08-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * This method only returns after the user has closed the alert dialog.","lastModifiedDate":"2017-08-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    private static void showAlertDialogAndWait(Stage owner, AlertType type, String title, String headerText,","lastModifiedDate":"2016-09-21"},{"lineNumber":67,"author":{"gitId":"-"},"content":"                                               String contentText) {","lastModifiedDate":"2016-08-18"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        final Alert alert \u003d new Alert(type);","lastModifiedDate":"2016-08-18"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        alert.getDialogPane().getStylesheets().add(\"view/DarkTheme.css\");","lastModifiedDate":"2016-08-20"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        alert.initOwner(owner);","lastModifiedDate":"2016-08-18"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        alert.setTitle(title);","lastModifiedDate":"2016-08-18"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        alert.setHeaderText(headerText);","lastModifiedDate":"2016-08-18"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        alert.setContentText(contentText);","lastModifiedDate":"2016-08-18"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        alert.getDialogPane().setId(ALERT_DIALOG_PANE_FIELD_ID);","lastModifiedDate":"2016-10-12"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        alert.showAndWait();","lastModifiedDate":"2016-08-18"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * Shows an error alert dialog with {@code title} and error message, {@code e},","lastModifiedDate":"2017-08-16"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * and exits the application after the user has closed the alert dialog.","lastModifiedDate":"2017-08-16"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    private void showFatalErrorDialogAndShutdown(String title, Throwable e) {","lastModifiedDate":"2016-09-21"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        logger.severe(title + \" \" + e.getMessage() + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-21"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        showAlertDialogAndWait(Alert.AlertType.ERROR, title, e.getMessage(), e.toString());","lastModifiedDate":"2016-08-18"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        Platform.exit();","lastModifiedDate":"2016-08-18"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        System.exit(1);","lastModifiedDate":"2016-08-18"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-25"},{"lineNumber":89,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"Zacchua":1,"david-eom":5,"-":82,"stanley-1":1}},{"path":"src/main/java/socialite/ui/UiPart.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"david-eom"},"content":"package socialite.ui;","lastModifiedDate":"2021-10-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-12-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.net.URL;","lastModifiedDate":"2016-12-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.fxml.FXMLLoader;","lastModifiedDate":"2016-12-21"},{"lineNumber":9,"author":{"gitId":"david-eom"},"content":"import socialite.MainApp;","lastModifiedDate":"2021-10-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Represents a distinct part of the UI. e.g. Windows, dialogs, panels, status bars, etc.","lastModifiedDate":"2016-12-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * It contains a scene graph with a root node of type {@code T}.","lastModifiedDate":"2016-12-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-12-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public abstract class UiPart\u003cT\u003e {","lastModifiedDate":"2016-12-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    /** Resource folder where FXML files are stored. */","lastModifiedDate":"2016-12-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public static final String FXML_FILE_FOLDER \u003d \"/view/\";","lastModifiedDate":"2016-12-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private final FXMLLoader fxmlLoader \u003d new FXMLLoader();","lastModifiedDate":"2017-11-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Constructs a UiPart with the specified FXML file URL.","lastModifiedDate":"2016-12-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * The FXML file must not specify the {@code fx:controller} attribute.","lastModifiedDate":"2016-12-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public UiPart(URL fxmlFileUrl) {","lastModifiedDate":"2016-12-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        loadFxmlFile(fxmlFileUrl, null);","lastModifiedDate":"2017-11-29"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Constructs a UiPart using the specified FXML file within {@link #FXML_FILE_FOLDER}.","lastModifiedDate":"2016-12-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * @see #UiPart(URL)","lastModifiedDate":"2016-12-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public UiPart(String fxmlFileName) {","lastModifiedDate":"2016-12-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        this(getFxmlFileUrl(fxmlFileName));","lastModifiedDate":"2017-11-29"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-11-29"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-11-29"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * Constructs a UiPart with the specified FXML file URL and root object.","lastModifiedDate":"2017-11-29"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * The FXML file must not specify the {@code fx:controller} attribute.","lastModifiedDate":"2017-11-29"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-11-29"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public UiPart(URL fxmlFileUrl, T root) {","lastModifiedDate":"2017-11-29"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        loadFxmlFile(fxmlFileUrl, root);","lastModifiedDate":"2017-11-29"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-11-29"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-11-29"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     * Constructs a UiPart with the specified FXML file within {@link #FXML_FILE_FOLDER} and root object.","lastModifiedDate":"2017-11-29"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * @see #UiPart(URL, T)","lastModifiedDate":"2017-11-29"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-11-29"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public UiPart(String fxmlFileName, T root) {","lastModifiedDate":"2017-11-29"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        this(getFxmlFileUrl(fxmlFileName), root);","lastModifiedDate":"2017-11-29"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * Returns the root object of the scene graph of this UiPart.","lastModifiedDate":"2016-12-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public T getRoot() {","lastModifiedDate":"2016-12-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        return fxmlLoader.getRoot();","lastModifiedDate":"2016-12-21"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-11-29"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * Loads the object hierarchy from a FXML document.","lastModifiedDate":"2017-11-29"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * @param location Location of the FXML document.","lastModifiedDate":"2017-11-29"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     * @param root Specifies the root of the object hierarchy.","lastModifiedDate":"2017-11-29"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-11-29"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    private void loadFxmlFile(URL location, T root) {","lastModifiedDate":"2017-11-29"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        requireNonNull(location);","lastModifiedDate":"2017-11-29"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        fxmlLoader.setLocation(location);","lastModifiedDate":"2017-11-29"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        fxmlLoader.setController(this);","lastModifiedDate":"2017-11-29"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        fxmlLoader.setRoot(root);","lastModifiedDate":"2017-11-29"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-11-29"},{"lineNumber":72,"author":{"gitId":"-"},"content":"            fxmlLoader.load();","lastModifiedDate":"2017-11-29"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2017-11-29"},{"lineNumber":74,"author":{"gitId":"-"},"content":"            throw new AssertionError(e);","lastModifiedDate":"2017-11-29"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-11-29"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-11-29"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-11-29"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * Returns the FXML file URL for the specified FXML file name within {@link #FXML_FILE_FOLDER}.","lastModifiedDate":"2017-11-29"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-11-29"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    private static URL getFxmlFileUrl(String fxmlFileName) {","lastModifiedDate":"2017-11-29"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        requireNonNull(fxmlFileName);","lastModifiedDate":"2017-11-29"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        String fxmlFileNameWithFolder \u003d FXML_FILE_FOLDER + fxmlFileName;","lastModifiedDate":"2017-11-29"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        URL fxmlFileUrl \u003d MainApp.class.getResource(fxmlFileNameWithFolder);","lastModifiedDate":"2017-11-29"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        return requireNonNull(fxmlFileUrl);","lastModifiedDate":"2017-11-29"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-11-29"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":88,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"david-eom":2,"-":86}},{"path":"src/main/resources/view/CommandBox.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.StackPane?\u003e","lastModifiedDate":"2017-06-22"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003cStackPane styleClass\u003d\"stack-pane\" xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2018-04-01"},{"lineNumber":7,"author":{"gitId":"david-eom"},"content":"  \u003cTextField fx:id\u003d\"commandTextField\"","lastModifiedDate":"2021-10-21"},{"lineNumber":8,"author":{"gitId":"david-eom"},"content":"             onAction\u003d\"#handleCommandEntered\"","lastModifiedDate":"2021-10-21"},{"lineNumber":9,"author":{"gitId":"david-eom"},"content":"             onKeyPressed\u003d\"#handleCommandKeyPressed\"","lastModifiedDate":"2021-10-21"},{"lineNumber":10,"author":{"gitId":"david-eom"},"content":"             promptText\u003d\"Enter command here... (or press the UP/DOWN keys to navigate through history!)\"/\u003e","lastModifiedDate":"2021-10-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"\u003c/StackPane\u003e","lastModifiedDate":"2017-06-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"}],"authorContributionMap":{"david-eom":4,"-":8}},{"path":"src/main/resources/view/DarkTheme.css","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":".background {","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2016-08-15"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    background-color: #383838; /* Used in the default.html file */","lastModifiedDate":"2017-03-02"},{"lineNumber":4,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":".label {","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Open Sans Semibold\";","lastModifiedDate":"2021-08-28"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    -fx-text-fill: #555555;","lastModifiedDate":"2016-08-15"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    -fx-opacity: 0.9;","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":".label-bright {","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Open Sans Semibold\";","lastModifiedDate":"2021-08-28"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":".label-header {","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    -fx-font-size: 32pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Open Sans Light\";","lastModifiedDate":"2021-08-28"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":".text-field {","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    -fx-font-size: 12pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Open Sans Semibold\";","lastModifiedDate":"2021-08-28"},{"lineNumber":30,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":".tab-pane {","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":".tab-pane .tab-header-area {","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    -fx-min-height: 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    -fx-max-height: 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":".table-view {","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    -fx-base: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    -fx-control-inner-background: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    -fx-table-cell-border-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    -fx-table-header-border-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    -fx-padding: 5;","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":".table-view .column-header-background {","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":".table-view .column-header, .table-view .filler {","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    -fx-size: 35;","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    -fx-border-width: 0 0 1 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    -fx-border-color:","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        transparent","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        transparent","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        derive(-fx-base, 80%)","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    -fx-border-insets: 0 10 1 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":".table-view .column-header .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    -fx-font-size: 20pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Open Sans Light\";","lastModifiedDate":"2021-08-28"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    -fx-alignment: center-left;","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":".table-view:focused .table-row-cell:filled:focused:selected {","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    -fx-background-color: -fx-focus-color;","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":".split-pane:horizontal .split-pane-divider {","lastModifiedDate":"2016-08-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2017-03-02"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    -fx-border-color: transparent transparent transparent #4d4d4d;","lastModifiedDate":"2017-03-02"},{"lineNumber":82,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":84,"author":{"gitId":"-"},"content":".split-pane {","lastModifiedDate":"2016-08-15"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    -fx-border-radius: 1;","lastModifiedDate":"2016-08-15"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2016-08-15"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2016-08-15"},{"lineNumber":88,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":90,"author":{"gitId":"-"},"content":".list-view {","lastModifiedDate":"2017-03-02"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    -fx-background-insets: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    -fx-padding: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2018-01-10"},{"lineNumber":94,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":96,"author":{"gitId":"-"},"content":".list-cell {","lastModifiedDate":"2016-08-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    -fx-label-padding: 0 0 0 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    -fx-graphic-text-gap : 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":99,"author":{"gitId":"david-eom"},"content":"    -fx-background-radius: 15;","lastModifiedDate":"2021-10-27"},{"lineNumber":100,"author":{"gitId":"bnjmnt4n"},"content":"    -fx-border-color: transparent;","lastModifiedDate":"2021-10-27"},{"lineNumber":101,"author":{"gitId":"bnjmnt4n"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2021-10-27"},{"lineNumber":102,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":".list-cell:filled:even {","lastModifiedDate":"2017-03-02"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    -fx-background-color: #3c3e3f;","lastModifiedDate":"2017-03-02"},{"lineNumber":106,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":108,"author":{"gitId":"-"},"content":".list-cell:filled:odd {","lastModifiedDate":"2017-03-02"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    -fx-background-color: #515658;","lastModifiedDate":"2017-03-02"},{"lineNumber":110,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":112,"author":{"gitId":"-"},"content":".list-cell:filled:selected {","lastModifiedDate":"2017-03-02"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    -fx-background-color: #424d5f;","lastModifiedDate":"2017-03-02"},{"lineNumber":114,"author":{"gitId":"david-eom"},"content":"    -fx-border-radius: 15;","lastModifiedDate":"2021-10-27"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    -fx-border-color: #3e7b91;","lastModifiedDate":"2021-10-27"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2021-10-27"},{"lineNumber":117,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":119,"author":{"gitId":"-"},"content":".list-cell .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2017-03-02"},{"lineNumber":121,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":123,"author":{"gitId":"-"},"content":".cell_big_label {","lastModifiedDate":"2016-08-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Open Sans Semibold\";","lastModifiedDate":"2021-08-28"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    -fx-font-size: 16px;","lastModifiedDate":"2016-08-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    -fx-text-fill: #010504;","lastModifiedDate":"2016-08-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":".cell_small_label {","lastModifiedDate":"2016-08-08"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Open Sans Regular\";","lastModifiedDate":"2021-08-28"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    -fx-font-size: 13px;","lastModifiedDate":"2017-03-02"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    -fx-text-fill: #010504;","lastModifiedDate":"2016-08-08"},{"lineNumber":133,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":135,"author":{"gitId":"-"},"content":".stack-pane {","lastModifiedDate":"2018-04-01"},{"lineNumber":136,"author":{"gitId":"-"},"content":"     -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2016-08-15"},{"lineNumber":137,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":139,"author":{"gitId":"-"},"content":".pane-with-border {","lastModifiedDate":"2017-05-15"},{"lineNumber":140,"author":{"gitId":"-"},"content":"     -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2017-05-09"},{"lineNumber":141,"author":{"gitId":"-"},"content":"     -fx-border-color: derive(#1d1d1d, 10%);","lastModifiedDate":"2017-05-09"},{"lineNumber":142,"author":{"gitId":"-"},"content":"     -fx-border-top-width: 1px;","lastModifiedDate":"2017-05-09"},{"lineNumber":143,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-09"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":145,"author":{"gitId":"-"},"content":".status-bar {","lastModifiedDate":"2016-08-08"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2018-12-08"},{"lineNumber":147,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-14"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":149,"author":{"gitId":"-"},"content":".result-display {","lastModifiedDate":"2016-09-14"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2017-03-02"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Open Sans Light\";","lastModifiedDate":"2021-08-28"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    -fx-font-size: 13pt;","lastModifiedDate":"2017-03-02"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2017-03-02"},{"lineNumber":154,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-14"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":156,"author":{"gitId":"-"},"content":".result-display .label {","lastModifiedDate":"2016-09-14"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    -fx-text-fill: black !important;","lastModifiedDate":"2016-09-14"},{"lineNumber":158,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":160,"author":{"gitId":"-"},"content":".status-bar .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Open Sans Light\";","lastModifiedDate":"2021-08-28"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":163,"author":{"gitId":"-"},"content":"    -fx-padding: 4px;","lastModifiedDate":"2018-12-08"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    -fx-pref-height: 30px;","lastModifiedDate":"2018-12-08"},{"lineNumber":165,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":167,"author":{"gitId":"-"},"content":".status-bar-with-border {","lastModifiedDate":"2016-08-08"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2016-08-15"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    -fx-border-color: derive(#1d1d1d, 25%);","lastModifiedDate":"2016-08-15"},{"lineNumber":170,"author":{"gitId":"-"},"content":"    -fx-border-width: 1px;","lastModifiedDate":"2016-08-08"},{"lineNumber":171,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":173,"author":{"gitId":"-"},"content":".status-bar-with-border .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":175,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":177,"author":{"gitId":"-"},"content":".grid-pane {","lastModifiedDate":"2016-08-08"},{"lineNumber":178,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2016-08-15"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    -fx-border-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2016-08-15"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    -fx-border-width: 1px;","lastModifiedDate":"2016-08-08"},{"lineNumber":181,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":183,"author":{"gitId":"-"},"content":".grid-pane .stack-pane {","lastModifiedDate":"2018-04-01"},{"lineNumber":184,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2016-08-15"},{"lineNumber":185,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":187,"author":{"gitId":"-"},"content":".context-menu {","lastModifiedDate":"2016-08-08"},{"lineNumber":188,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 50%);","lastModifiedDate":"2016-08-15"},{"lineNumber":189,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":191,"author":{"gitId":"-"},"content":".context-menu .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":192,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":193,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":195,"author":{"gitId":"-"},"content":".menu-bar {","lastModifiedDate":"2016-08-08"},{"lineNumber":196,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2016-08-15"},{"lineNumber":197,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":198,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":199,"author":{"gitId":"-"},"content":".menu-bar .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":200,"author":{"gitId":"-"},"content":"    -fx-font-size: 14pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":201,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Open Sans Light\";","lastModifiedDate":"2021-08-28"},{"lineNumber":202,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":203,"author":{"gitId":"-"},"content":"    -fx-opacity: 0.9;","lastModifiedDate":"2016-08-08"},{"lineNumber":204,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":205,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":206,"author":{"gitId":"-"},"content":".menu .left-container {","lastModifiedDate":"2016-08-08"},{"lineNumber":207,"author":{"gitId":"-"},"content":"    -fx-background-color: black;","lastModifiedDate":"2016-08-08"},{"lineNumber":208,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":209,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":210,"author":{"gitId":"-"},"content":"/*","lastModifiedDate":"2016-08-08"},{"lineNumber":211,"author":{"gitId":"-"},"content":" * Metro style Push Button","lastModifiedDate":"2016-08-08"},{"lineNumber":212,"author":{"gitId":"-"},"content":" * Author: Pedro Duque Vieira","lastModifiedDate":"2016-08-08"},{"lineNumber":213,"author":{"gitId":"-"},"content":" * http://pixelduke.wordpress.com/2012/10/23/jmetro-windows-8-controls-on-java/","lastModifiedDate":"2016-08-08"},{"lineNumber":214,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":215,"author":{"gitId":"-"},"content":".button {","lastModifiedDate":"2016-08-08"},{"lineNumber":216,"author":{"gitId":"david-eom"},"content":"    -fx-padding: 5 10 5 10;","lastModifiedDate":"2021-10-27"},{"lineNumber":217,"author":{"gitId":"david-eom"},"content":"    -fx-background-radius: 10;","lastModifiedDate":"2021-10-27"},{"lineNumber":218,"author":{"gitId":"david-eom"},"content":"    -fx-background-color: #3e5291;","lastModifiedDate":"2021-10-27"},{"lineNumber":219,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Open Sans Regular\";","lastModifiedDate":"2021-08-28"},{"lineNumber":220,"author":{"gitId":"-"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":221,"author":{"gitId":"-"},"content":"    -fx-text-fill: #d8d8d8;","lastModifiedDate":"2016-08-08"},{"lineNumber":222,"author":{"gitId":"-"},"content":"    -fx-background-insets: 0 0 0 0, 0, 1, 2;","lastModifiedDate":"2016-08-08"},{"lineNumber":223,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":224,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":225,"author":{"gitId":"-"},"content":".button:hover {","lastModifiedDate":"2016-08-08"},{"lineNumber":226,"author":{"gitId":"david-eom"},"content":"    -fx-background-color: #4e67b4;","lastModifiedDate":"2021-10-27"},{"lineNumber":227,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":228,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":229,"author":{"gitId":"-"},"content":".button:pressed, .button:default:hover:pressed {","lastModifiedDate":"2016-08-08"},{"lineNumber":230,"author":{"gitId":"david-eom"},"content":"  -fx-background-color: #6076bb;","lastModifiedDate":"2021-10-27"},{"lineNumber":231,"author":{"gitId":"david-eom"},"content":"  -fx-text-fill: #d8d8d8;","lastModifiedDate":"2021-10-27"},{"lineNumber":232,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":233,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":234,"author":{"gitId":"-"},"content":".button:focused {","lastModifiedDate":"2016-08-08"},{"lineNumber":235,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":236,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":237,"author":{"gitId":"-"},"content":".button:disabled, .button:default:disabled {","lastModifiedDate":"2016-08-08"},{"lineNumber":238,"author":{"gitId":"-"},"content":"    -fx-opacity: 0.4;","lastModifiedDate":"2016-08-08"},{"lineNumber":239,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":240,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":241,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":242,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":243,"author":{"gitId":"-"},"content":".button:default {","lastModifiedDate":"2016-08-08"},{"lineNumber":244,"author":{"gitId":"david-eom"},"content":"    -fx-padding: 5 10 5 10;","lastModifiedDate":"2021-10-27"},{"lineNumber":245,"author":{"gitId":"david-eom"},"content":"    -fx-background-radius: 10;","lastModifiedDate":"2021-10-27"},{"lineNumber":246,"author":{"gitId":"david-eom"},"content":"    -fx-background-color: #3e5291;","lastModifiedDate":"2021-10-27"},{"lineNumber":247,"author":{"gitId":"david-eom"},"content":"    -fx-font-family: \"Open Sans Regular\";","lastModifiedDate":"2021-10-27"},{"lineNumber":248,"author":{"gitId":"david-eom"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2021-10-27"},{"lineNumber":249,"author":{"gitId":"david-eom"},"content":"    -fx-text-fill: #d8d8d8;","lastModifiedDate":"2021-10-27"},{"lineNumber":250,"author":{"gitId":"david-eom"},"content":"    -fx-background-insets: 0 0 0 0, 0, 1, 2;","lastModifiedDate":"2021-10-27"},{"lineNumber":251,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":252,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":253,"author":{"gitId":"-"},"content":".button:default:hover {","lastModifiedDate":"2016-08-08"},{"lineNumber":254,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(-fx-focus-color, 30%);","lastModifiedDate":"2016-08-08"},{"lineNumber":255,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":256,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":257,"author":{"gitId":"-"},"content":".dialog-pane {","lastModifiedDate":"2016-08-08"},{"lineNumber":258,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":259,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":260,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":261,"author":{"gitId":"-"},"content":".dialog-pane \u003e *.button-bar \u003e *.container {","lastModifiedDate":"2016-08-08"},{"lineNumber":262,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":263,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":264,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":265,"author":{"gitId":"-"},"content":".dialog-pane \u003e *.label.content {","lastModifiedDate":"2016-08-08"},{"lineNumber":266,"author":{"gitId":"-"},"content":"    -fx-font-size: 14px;","lastModifiedDate":"2016-08-08"},{"lineNumber":267,"author":{"gitId":"-"},"content":"    -fx-font-weight: bold;","lastModifiedDate":"2016-08-08"},{"lineNumber":268,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":269,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":270,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":271,"author":{"gitId":"-"},"content":".dialog-pane:header *.header-panel {","lastModifiedDate":"2016-08-08"},{"lineNumber":272,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 25%);","lastModifiedDate":"2016-08-15"},{"lineNumber":273,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":274,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":275,"author":{"gitId":"-"},"content":".dialog-pane:header *.header-panel *.label {","lastModifiedDate":"2016-08-08"},{"lineNumber":276,"author":{"gitId":"-"},"content":"    -fx-font-size: 18px;","lastModifiedDate":"2016-08-08"},{"lineNumber":277,"author":{"gitId":"-"},"content":"    -fx-font-style: italic;","lastModifiedDate":"2016-08-08"},{"lineNumber":278,"author":{"gitId":"-"},"content":"    -fx-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":279,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":280,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":281,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":282,"author":{"gitId":"-"},"content":".scroll-bar {","lastModifiedDate":"2017-03-02"},{"lineNumber":283,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2017-03-02"},{"lineNumber":284,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":285,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":286,"author":{"gitId":"-"},"content":".scroll-bar .thumb {","lastModifiedDate":"2016-08-15"},{"lineNumber":287,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 50%);","lastModifiedDate":"2016-08-15"},{"lineNumber":288,"author":{"gitId":"-"},"content":"    -fx-background-insets: 3;","lastModifiedDate":"2016-08-15"},{"lineNumber":289,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":290,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":291,"author":{"gitId":"-"},"content":".scroll-bar .increment-button, .scroll-bar .decrement-button {","lastModifiedDate":"2016-08-15"},{"lineNumber":292,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-15"},{"lineNumber":293,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2016-08-15"},{"lineNumber":294,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":295,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":296,"author":{"gitId":"-"},"content":".scroll-bar .increment-arrow, .scroll-bar .decrement-arrow {","lastModifiedDate":"2016-08-15"},{"lineNumber":297,"author":{"gitId":"-"},"content":"    -fx-shape: \" \";","lastModifiedDate":"2016-08-15"},{"lineNumber":298,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"},{"lineNumber":299,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":300,"author":{"gitId":"-"},"content":".scroll-bar:vertical .increment-arrow, .scroll-bar:vertical .decrement-arrow {","lastModifiedDate":"2016-08-18"},{"lineNumber":301,"author":{"gitId":"-"},"content":"    -fx-padding: 1 8 1 8;","lastModifiedDate":"2016-08-15"},{"lineNumber":302,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":303,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":304,"author":{"gitId":"-"},"content":".scroll-bar:horizontal .increment-arrow, .scroll-bar:horizontal .decrement-arrow {","lastModifiedDate":"2016-08-18"},{"lineNumber":305,"author":{"gitId":"-"},"content":"    -fx-padding: 8 1 8 1;","lastModifiedDate":"2016-08-18"},{"lineNumber":306,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"},{"lineNumber":307,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":308,"author":{"gitId":"Zacchua"},"content":".handle {","lastModifiedDate":"2021-10-22"},{"lineNumber":309,"author":{"gitId":"Zacchua"},"content":"    -fx-cursor: hand;","lastModifiedDate":"2021-10-22"},{"lineNumber":310,"author":{"gitId":"Zacchua"},"content":"}","lastModifiedDate":"2021-10-22"},{"lineNumber":311,"author":{"gitId":"Zacchua"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":312,"author":{"gitId":"-"},"content":"#cardPane {","lastModifiedDate":"2016-08-08"},{"lineNumber":313,"author":{"gitId":"david-eom"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2021-10-27"},{"lineNumber":314,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":315,"author":{"gitId":"-"},"content":"    -fx-border-width: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":316,"author":{"gitId":"david-eom"},"content":"    -fx-border-radius: 15;","lastModifiedDate":"2021-10-27"},{"lineNumber":317,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":318,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":319,"author":{"gitId":"-"},"content":"#commandTypeLabel {","lastModifiedDate":"2016-08-08"},{"lineNumber":320,"author":{"gitId":"-"},"content":"    -fx-font-size: 11px;","lastModifiedDate":"2016-08-08"},{"lineNumber":321,"author":{"gitId":"-"},"content":"    -fx-text-fill: #F70D1A;","lastModifiedDate":"2016-08-08"},{"lineNumber":322,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":323,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":324,"author":{"gitId":"-"},"content":"#commandTextField {","lastModifiedDate":"2017-03-02"},{"lineNumber":325,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent #383838 transparent #383838;","lastModifiedDate":"2017-03-02"},{"lineNumber":326,"author":{"gitId":"-"},"content":"    -fx-background-insets: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":327,"author":{"gitId":"david-eom"},"content":"    -fx-border-color: #383838 #383838 #383838 #383838;","lastModifiedDate":"2021-10-27"},{"lineNumber":328,"author":{"gitId":"-"},"content":"    -fx-border-insets: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":329,"author":{"gitId":"-"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2017-03-02"},{"lineNumber":330,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Open Sans Light\";","lastModifiedDate":"2021-08-28"},{"lineNumber":331,"author":{"gitId":"david-eom"},"content":"    -fx-font-size: 12pt;","lastModifiedDate":"2021-10-27"},{"lineNumber":332,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2017-03-02"},{"lineNumber":333,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":334,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":335,"author":{"gitId":"-"},"content":"#filterField, #personListPanel, #personWebpage {","lastModifiedDate":"2016-08-15"},{"lineNumber":336,"author":{"gitId":"-"},"content":"    -fx-effect: innershadow(gaussian, black, 10, 0, 0, 0);","lastModifiedDate":"2016-08-15"},{"lineNumber":337,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":338,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":339,"author":{"gitId":"-"},"content":"#resultDisplay .content {","lastModifiedDate":"2017-03-02"},{"lineNumber":340,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent, #383838, transparent, #383838;","lastModifiedDate":"2017-03-02"},{"lineNumber":341,"author":{"gitId":"-"},"content":"    -fx-background-radius: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":342,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":343,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":344,"author":{"gitId":"-"},"content":"#tags {","lastModifiedDate":"2016-12-18"},{"lineNumber":345,"author":{"gitId":"-"},"content":"    -fx-hgap: 7;","lastModifiedDate":"2016-12-18"},{"lineNumber":346,"author":{"gitId":"-"},"content":"    -fx-vgap: 3;","lastModifiedDate":"2016-12-18"},{"lineNumber":347,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-18"},{"lineNumber":348,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":349,"author":{"gitId":"-"},"content":"#tags .label {","lastModifiedDate":"2016-12-18"},{"lineNumber":350,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-12-18"},{"lineNumber":351,"author":{"gitId":"-"},"content":"    -fx-background-color: #3e7b91;","lastModifiedDate":"2017-03-02"},{"lineNumber":352,"author":{"gitId":"david-eom"},"content":"    -fx-padding: 1 5 1 5;","lastModifiedDate":"2021-10-27"},{"lineNumber":353,"author":{"gitId":"david-eom"},"content":"    -fx-border-radius: 5;","lastModifiedDate":"2021-10-27"},{"lineNumber":354,"author":{"gitId":"david-eom"},"content":"    -fx-background-radius: 5;","lastModifiedDate":"2021-10-27"},{"lineNumber":355,"author":{"gitId":"-"},"content":"    -fx-font-size: 11;","lastModifiedDate":"2016-12-18"},{"lineNumber":356,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-18"},{"lineNumber":357,"author":{"gitId":"bnjmnt4n"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":358,"author":{"gitId":"bnjmnt4n"},"content":"#dates {","lastModifiedDate":"2021-10-26"},{"lineNumber":359,"author":{"gitId":"bnjmnt4n"},"content":"    -fx-hgap: 7;","lastModifiedDate":"2021-10-26"},{"lineNumber":360,"author":{"gitId":"bnjmnt4n"},"content":"    -fx-vgap: 3;","lastModifiedDate":"2021-10-26"},{"lineNumber":361,"author":{"gitId":"bnjmnt4n"},"content":"}","lastModifiedDate":"2021-10-26"},{"lineNumber":362,"author":{"gitId":"bnjmnt4n"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":363,"author":{"gitId":"bnjmnt4n"},"content":"#dates .label {","lastModifiedDate":"2021-10-26"},{"lineNumber":364,"author":{"gitId":"bnjmnt4n"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2021-10-26"},{"lineNumber":365,"author":{"gitId":"david-eom"},"content":"    -fx-background-color: #91543e;","lastModifiedDate":"2021-10-27"},{"lineNumber":366,"author":{"gitId":"david-eom"},"content":"    -fx-padding: 1 5 1 5;","lastModifiedDate":"2021-10-27"},{"lineNumber":367,"author":{"gitId":"david-eom"},"content":"    -fx-border-radius: 5;","lastModifiedDate":"2021-10-27"},{"lineNumber":368,"author":{"gitId":"david-eom"},"content":"    -fx-background-radius: 5;","lastModifiedDate":"2021-10-27"},{"lineNumber":369,"author":{"gitId":"bnjmnt4n"},"content":"    -fx-font-size: 11;","lastModifiedDate":"2021-10-26"},{"lineNumber":370,"author":{"gitId":"bnjmnt4n"},"content":"}","lastModifiedDate":"2021-10-26"},{"lineNumber":371,"author":{"gitId":"bnjmnt4n"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":372,"author":{"gitId":"bnjmnt4n"},"content":"#dates .label#upcoming {","lastModifiedDate":"2021-10-27"},{"lineNumber":373,"author":{"gitId":"bnjmnt4n"},"content":"    -fx-background-color: red;","lastModifiedDate":"2021-10-27"},{"lineNumber":374,"author":{"gitId":"bnjmnt4n"},"content":"}","lastModifiedDate":"2021-10-27"}],"authorContributionMap":{"Zacchua":4,"bnjmnt4n":16,"david-eom":26,"-":328}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import java.net.URL?\u003e","lastModifiedDate":"2016-08-26"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.Scene?\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Menu?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.MenuBar?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.MenuItem?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.SplitPane?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.image.Image?\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":11,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.StackPane?\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"\u003cfx:root type\u003d\"javafx.stage.Stage\" xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"","lastModifiedDate":"2017-11-29"},{"lineNumber":15,"author":{"gitId":"stanley-1"},"content":"         title\u003d\"SociaLite App\" minWidth\u003d\"450\" minHeight\u003d\"600\" onCloseRequest\u003d\"#handleExit\"\u003e","lastModifiedDate":"2021-10-19"},{"lineNumber":16,"author":{"gitId":"-"},"content":"  \u003cicons\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":17,"author":{"gitId":"stanley-1"},"content":"    \u003cImage url\u003d\"@/images/social-media.png\" /\u003e","lastModifiedDate":"2021-10-19"},{"lineNumber":18,"author":{"gitId":"-"},"content":"  \u003c/icons\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":19,"author":{"gitId":"-"},"content":"  \u003cscene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    \u003cScene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"      \u003cstylesheets\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        \u003cURL value\u003d\"@Fonts.css\"/\u003e","lastModifiedDate":"2021-08-28"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        \u003cURL value\u003d\"@DarkTheme.css\" /\u003e","lastModifiedDate":"2016-08-20"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        \u003cURL value\u003d\"@Extensions.css\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"      \u003c/stylesheets\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"      \u003cVBox\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        \u003cMenuBar fx:id\u003d\"menuBar\" VBox.vgrow\u003d\"NEVER\"\u003e","lastModifiedDate":"2017-06-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"          \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"File\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            \u003cMenuItem mnemonicParsing\u003d\"false\" onAction\u003d\"#handleExit\" text\u003d\"Exit\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"          \u003c/Menu\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"          \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"Help\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            \u003cMenuItem fx:id\u003d\"helpMenuItem\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleHelp\" text\u003d\"Help\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"          \u003c/Menu\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        \u003c/MenuBar\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        \u003cStackPane VBox.vgrow\u003d\"NEVER\" fx:id\u003d\"commandBoxPlaceholder\" styleClass\u003d\"pane-with-border\"\u003e","lastModifiedDate":"2017-05-15"},{"lineNumber":38,"author":{"gitId":"-"},"content":"          \u003cpadding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            \u003cInsets top\u003d\"5\" right\u003d\"10\" bottom\u003d\"5\" left\u003d\"10\" /\u003e","lastModifiedDate":"2017-03-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"          \u003c/padding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        \u003c/StackPane\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        \u003cStackPane VBox.vgrow\u003d\"NEVER\" fx:id\u003d\"resultDisplayPlaceholder\" styleClass\u003d\"pane-with-border\"","lastModifiedDate":"2017-05-15"},{"lineNumber":44,"author":{"gitId":"-"},"content":"                   minHeight\u003d\"100\" prefHeight\u003d\"100\" maxHeight\u003d\"100\"\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"          \u003cpadding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":46,"author":{"gitId":"-"},"content":"            \u003cInsets top\u003d\"5\" right\u003d\"10\" bottom\u003d\"5\" left\u003d\"10\" /\u003e","lastModifiedDate":"2017-03-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"          \u003c/padding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        \u003c/StackPane\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        \u003cVBox fx:id\u003d\"personList\" styleClass\u003d\"pane-with-border\" minWidth\u003d\"340\" prefWidth\u003d\"340\" VBox.vgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2019-01-25"},{"lineNumber":51,"author":{"gitId":"-"},"content":"          \u003cpadding\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":52,"author":{"gitId":"-"},"content":"            \u003cInsets top\u003d\"10\" right\u003d\"10\" bottom\u003d\"10\" left\u003d\"10\" /\u003e","lastModifiedDate":"2017-03-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"          \u003c/padding\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":54,"author":{"gitId":"-"},"content":"          \u003cStackPane fx:id\u003d\"personListPanelPlaceholder\" VBox.vgrow\u003d\"ALWAYS\"/\u003e","lastModifiedDate":"2017-06-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        \u003c/VBox\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        \u003cStackPane fx:id\u003d\"statusbarPlaceholder\" VBox.vgrow\u003d\"NEVER\" /\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":58,"author":{"gitId":"-"},"content":"      \u003c/VBox\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"Zacchua"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    \u003c/Scene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":61,"author":{"gitId":"-"},"content":"  \u003c/scene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":62,"author":{"gitId":"-"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2017-11-29"}],"authorContributionMap":{"Zacchua":1,"-":59,"stanley-1":2}},{"path":"src/main/resources/view/PersonListCard.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":4,"author":{"gitId":"david-eom"},"content":"\u003c?import javafx.scene.control.Button?\u003e","lastModifiedDate":"2021-10-26"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":6,"author":{"gitId":"Zacchua"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.ColumnConstraints?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.FlowPane?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.GridPane?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.Region?\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":12,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":14,"author":{"gitId":"Zacchua"},"content":"\u003cHBox id\u003d\"cardPane\" fx:id\u003d\"cardPane\" xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" alignment\u003d\"CENTER_LEFT\"\u003e","lastModifiedDate":"2021-10-24"},{"lineNumber":15,"author":{"gitId":"Zacchua"},"content":"  \u003cpadding\u003e","lastModifiedDate":"2021-10-24"},{"lineNumber":16,"author":{"gitId":"Zacchua"},"content":"    \u003cInsets top\u003d\"5\" right\u003d\"5\" bottom\u003d\"5\" left\u003d\"10\" /\u003e","lastModifiedDate":"2021-10-24"},{"lineNumber":17,"author":{"gitId":"Zacchua"},"content":"  \u003c/padding\u003e","lastModifiedDate":"2021-10-24"},{"lineNumber":18,"author":{"gitId":"Zacchua"},"content":"  \u003cHBox minWidth\u003d\"60\" alignment\u003d\"CENTER\"\u003e","lastModifiedDate":"2021-10-30"},{"lineNumber":19,"author":{"gitId":"Zacchua"},"content":"    \u003cImageView fx:id\u003d\"profilePicture\" preserveRatio\u003d\"true\" style\u003d\"-fx-border-color: red\"/\u003e","lastModifiedDate":"2021-10-30"},{"lineNumber":20,"author":{"gitId":"Zacchua"},"content":"  \u003c/HBox\u003e","lastModifiedDate":"2021-10-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"  \u003cGridPane HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    \u003ccolumnConstraints\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"david-eom"},"content":"      \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10\" prefWidth\u003d\"170\" /\u003e","lastModifiedDate":"2021-10-26"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    \u003c/columnConstraints\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"david-eom"},"content":"    \u003cVBox alignment\u003d\"CENTER_LEFT\" minHeight\u003d\"50\" GridPane.columnIndex\u003d\"0\" VBox.vgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2021-10-26"},{"lineNumber":26,"author":{"gitId":"-"},"content":"      \u003cpadding\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"david-eom"},"content":"        \u003cInsets bottom\u003d\"5\" left\u003d\"15\" right\u003d\"5\" top\u003d\"5\" /\u003e","lastModifiedDate":"2021-10-26"},{"lineNumber":28,"author":{"gitId":"-"},"content":"      \u003c/padding\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"david-eom"},"content":"      \u003cHBox alignment\u003d\"CENTER_LEFT\" spacing\u003d\"5\"\u003e","lastModifiedDate":"2021-10-26"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        \u003cLabel fx:id\u003d\"id\" styleClass\u003d\"cell_big_label\"\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":31,"author":{"gitId":"-"},"content":"          \u003cminWidth\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":32,"author":{"gitId":"-"},"content":"            \u003c!-- Ensures that the label text is never truncated --\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            \u003cRegion fx:constant\u003d\"USE_PREF_SIZE\" /\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":34,"author":{"gitId":"-"},"content":"          \u003c/minWidth\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        \u003c/Label\u003e","lastModifiedDate":"2017-03-20"},{"lineNumber":36,"author":{"gitId":"david-eom"},"content":"        \u003cLabel fx:id\u003d\"name\" styleClass\u003d\"cell_big_label\" text\u003d\"\\$first\" /\u003e","lastModifiedDate":"2021-10-26"},{"lineNumber":37,"author":{"gitId":"david-eom"},"content":"        \u003cRegion HBox.hgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2021-10-26"},{"lineNumber":38,"author":{"gitId":"david-eom"},"content":"        \u003cButton fx:id\u003d\"share\" onAction\u003d\"#handleButtonAction\" text\u003d\"Share\" HBox.hgrow\u003d\"NEVER\" /\u003e","lastModifiedDate":"2021-10-26"},{"lineNumber":39,"author":{"gitId":"-"},"content":"      \u003c/HBox\u003e","lastModifiedDate":"2016-09-03"},{"lineNumber":40,"author":{"gitId":"david-eom"},"content":"      \u003cVBox spacing\u003d\"5\"\u003e","lastModifiedDate":"2021-10-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        \u003cFlowPane fx:id\u003d\"tags\" /\u003e","lastModifiedDate":"2016-12-18"},{"lineNumber":42,"author":{"gitId":"bnjmnt4n"},"content":"        \u003cFlowPane fx:id\u003d\"dates\" /\u003e","lastModifiedDate":"2021-10-26"},{"lineNumber":43,"author":{"gitId":"david-eom"},"content":"      \u003c/VBox\u003e","lastModifiedDate":"2021-10-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"      \u003cLabel fx:id\u003d\"phone\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$phone\" /\u003e","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"EssWhyy"},"content":"      \u003cLabel fx:id\u003d\"remark\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$remark\" /\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":46,"author":{"gitId":"david-eom"},"content":"      \u003cHBox fx:id\u003d\"handles\" spacing\u003d\"8.0\"\u003e","lastModifiedDate":"2021-10-26"},{"lineNumber":47,"author":{"gitId":"david-eom"},"content":"        \u003cHBox fx:id\u003d\"facebook\" alignment\u003d\"CENTER_LEFT\" styleClass\u003d\"handle\" spacing\u003d\"4\"\u003e","lastModifiedDate":"2021-10-27"},{"lineNumber":48,"author":{"gitId":"stanley-1"},"content":"          \u003cImageView fx:id\u003d\"facebookIcon\" fitHeight\u003d\"14\" fitWidth\u003d\"14\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":49,"author":{"gitId":"david-eom"},"content":"          \u003cLabel fx:id\u003d\"facebookHandle\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$facebook\" /\u003e","lastModifiedDate":"2021-10-26"},{"lineNumber":50,"author":{"gitId":"Zacchua"},"content":"        \u003c/HBox\u003e","lastModifiedDate":"2021-10-22"},{"lineNumber":51,"author":{"gitId":"david-eom"},"content":"        \u003cHBox fx:id\u003d\"instagram\" alignment\u003d\"CENTER_LEFT\" styleClass\u003d\"handle\" spacing\u003d\"4\"\u003e","lastModifiedDate":"2021-10-27"},{"lineNumber":52,"author":{"gitId":"stanley-1"},"content":"          \u003cImageView fx:id\u003d\"instagramIcon\" fitHeight\u003d\"14\" fitWidth\u003d\"14\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":53,"author":{"gitId":"david-eom"},"content":"          \u003cLabel fx:id\u003d\"instagramHandle\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$instagram\" /\u003e","lastModifiedDate":"2021-10-26"},{"lineNumber":54,"author":{"gitId":"Zacchua"},"content":"        \u003c/HBox\u003e","lastModifiedDate":"2021-10-22"},{"lineNumber":55,"author":{"gitId":"david-eom"},"content":"        \u003cHBox fx:id\u003d\"telegram\" alignment\u003d\"CENTER_LEFT\" styleClass\u003d\"handle\" spacing\u003d\"4\"\u003e","lastModifiedDate":"2021-10-27"},{"lineNumber":56,"author":{"gitId":"david-eom"},"content":"          \u003cImageView fx:id\u003d\"telegramIcon\" fitHeight\u003d\"14\" fitWidth\u003d\"14\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":57,"author":{"gitId":"david-eom"},"content":"          \u003cLabel fx:id\u003d\"telegramHandle\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$telegram\" /\u003e","lastModifiedDate":"2021-10-26"},{"lineNumber":58,"author":{"gitId":"Zacchua"},"content":"        \u003c/HBox\u003e","lastModifiedDate":"2021-10-22"},{"lineNumber":59,"author":{"gitId":"david-eom"},"content":"        \u003cHBox fx:id\u003d\"tiktok\" alignment\u003d\"CENTER_LEFT\" styleClass\u003d\"handle\" spacing\u003d\"4\"\u003e","lastModifiedDate":"2021-10-27"},{"lineNumber":60,"author":{"gitId":"Zacchua"},"content":"          \u003cImageView fx:id\u003d\"tiktokIcon\" fitHeight\u003d\"14\" fitWidth\u003d\"14\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":61,"author":{"gitId":"david-eom"},"content":"          \u003cLabel fx:id\u003d\"tiktokHandle\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$tiktok\" /\u003e","lastModifiedDate":"2021-10-26"},{"lineNumber":62,"author":{"gitId":"david-eom"},"content":"        \u003c/HBox\u003e","lastModifiedDate":"2021-10-26"},{"lineNumber":63,"author":{"gitId":"david-eom"},"content":"        \u003cHBox fx:id\u003d\"twitter\" alignment\u003d\"CENTER_LEFT\" styleClass\u003d\"handle\" spacing\u003d\"4\"\u003e","lastModifiedDate":"2021-10-27"},{"lineNumber":64,"author":{"gitId":"david-eom"},"content":"          \u003cImageView fx:id\u003d\"twitterIcon\" fitHeight\u003d\"14\" fitWidth\u003d\"14\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e","lastModifiedDate":"2021-10-26"},{"lineNumber":65,"author":{"gitId":"david-eom"},"content":"          \u003cLabel fx:id\u003d\"twitterHandle\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$twitter\" /\u003e","lastModifiedDate":"2021-10-26"},{"lineNumber":66,"author":{"gitId":"Zacchua"},"content":"        \u003c/HBox\u003e","lastModifiedDate":"2021-10-12"},{"lineNumber":67,"author":{"gitId":"Zacchua"},"content":"      \u003c/HBox\u003e","lastModifiedDate":"2021-10-22"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    \u003c/VBox\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"  \u003c/GridPane\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"\u003c/HBox\u003e","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"Zacchua":14,"EssWhyy":1,"bnjmnt4n":1,"david-eom":24,"-":28,"stanley-1":2}},{"path":"src/main/resources/view/PersonListPanel.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.ListView?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":5,"author":{"gitId":"david-eom"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2021-10-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003cVBox xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2017-01-18"},{"lineNumber":8,"author":{"gitId":"-"},"content":"  \u003cListView fx:id\u003d\"personListView\" VBox.vgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c/VBox\u003e","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"david-eom":1,"-":8}},{"path":"src/main/resources/view/ResultDisplay.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.TextArea?\u003e","lastModifiedDate":"2016-10-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.StackPane?\u003e","lastModifiedDate":"2017-06-22"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003cStackPane fx:id\u003d\"placeHolder\" styleClass\u003d\"pane-with-border\" xmlns\u003d\"http://javafx.com/javafx/8\"","lastModifiedDate":"2017-06-22"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2016-12-24"},{"lineNumber":8,"author":{"gitId":"david-eom"},"content":"  \u003cTextArea fx:id\u003d\"resultDisplay\" editable\u003d\"false\" styleClass\u003d\"result-display\" wrapText\u003d\"true\" /\u003e","lastModifiedDate":"2021-10-26"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c/StackPane\u003e","lastModifiedDate":"2017-06-22"}],"authorContributionMap":{"david-eom":1,"-":8}},{"path":"src/test/java/socialite/AppParametersTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"david-eom"},"content":"package socialite;","lastModifiedDate":"2021-10-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.HashMap;","lastModifiedDate":"2018-04-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-04-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.Map;","lastModifiedDate":"2018-04-21"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import javafx.application.Application;","lastModifiedDate":"2018-04-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class AppParametersTest {","lastModifiedDate":"2018-04-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private final ParametersStub parametersStub \u003d new ParametersStub();","lastModifiedDate":"2018-04-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private final AppParameters expected \u003d new AppParameters();","lastModifiedDate":"2018-04-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public void parse_validConfigPath_success() {","lastModifiedDate":"2018-04-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        parametersStub.namedParameters.put(\"config\", \"config.json\");","lastModifiedDate":"2018-04-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        expected.setConfigPath(Paths.get(\"config.json\"));","lastModifiedDate":"2018-04-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        assertEquals(expected, AppParameters.parse(parametersStub));","lastModifiedDate":"2018-04-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public void parse_nullConfigPath_success() {","lastModifiedDate":"2018-04-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        parametersStub.namedParameters.put(\"config\", null);","lastModifiedDate":"2018-04-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertEquals(expected, AppParameters.parse(parametersStub));","lastModifiedDate":"2018-04-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public void parse_invalidConfigPath_success() {","lastModifiedDate":"2018-04-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        parametersStub.namedParameters.put(\"config\", \"a\\0\");","lastModifiedDate":"2018-04-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        expected.setConfigPath(null);","lastModifiedDate":"2018-04-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertEquals(expected, AppParameters.parse(parametersStub));","lastModifiedDate":"2018-04-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    private static class ParametersStub extends Application.Parameters {","lastModifiedDate":"2018-04-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        private Map\u003cString, String\u003e namedParameters \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2018-04-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-04-21"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        public List\u003cString\u003e getRaw() {","lastModifiedDate":"2018-04-21"},{"lineNumber":45,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"should not be called\");","lastModifiedDate":"2018-04-21"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-04-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        public List\u003cString\u003e getUnnamed() {","lastModifiedDate":"2018-04-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"should not be called\");","lastModifiedDate":"2018-04-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-04-21"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        public Map\u003cString, String\u003e getNamed() {","lastModifiedDate":"2018-04-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            return Collections.unmodifiableMap(namedParameters);","lastModifiedDate":"2018-04-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-04-21"}],"authorContributionMap":{"david-eom":1,"-":57}},{"path":"src/test/java/socialite/commons/core/ConfigTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"david-eom"},"content":"package socialite.commons.core;","lastModifiedDate":"2021-10-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class ConfigTest {","lastModifiedDate":"2016-09-30"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void toString_defaultObject_stringReturned() {","lastModifiedDate":"2016-09-30"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        String defaultConfigAsString \u003d \"Current log level : INFO\\n\"","lastModifiedDate":"2018-12-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"                + \"Preference file Location : preferences.json\";","lastModifiedDate":"2017-05-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        assertEquals(defaultConfigAsString, new Config().toString());","lastModifiedDate":"2016-09-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public void equalsMethod() {","lastModifiedDate":"2016-09-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        Config defaultConfig \u003d new Config();","lastModifiedDate":"2016-09-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        assertNotNull(defaultConfig);","lastModifiedDate":"2016-10-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertTrue(defaultConfig.equals(defaultConfig));","lastModifiedDate":"2016-09-30"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":27,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-30"}],"authorContributionMap":{"david-eom":1,"-":26}},{"path":"src/test/java/socialite/commons/core/VersionTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"david-eom"},"content":"package socialite.commons.core;","lastModifiedDate":"2021-10-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"david-eom"},"content":"import socialite.testutil.Assert;","lastModifiedDate":"2021-10-08"},{"lineNumber":9,"author":{"gitId":"david-eom"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class VersionTest {","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public void versionParsing_acceptableVersionString_parsedVersionCorrectly() {","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"        verifyVersionParsedCorrectly(\"V0.0.0ea\", 0, 0, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        verifyVersionParsedCorrectly(\"V3.10.2\", 3, 10, 2, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        verifyVersionParsedCorrectly(\"V100.100.100ea\", 100, 100, 100, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public void versionParsing_wrongVersionString_throwIllegalArgumentException() {","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"david-eom"},"content":"        Assert.assertThrows(IllegalArgumentException.class, () -\u003e Version.fromString(\"This is not a version string\"));","lastModifiedDate":"2021-10-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public void versionConstructor_correctParameter_valueAsExpected() {","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        Version version \u003d new Version(19, 10, 20, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertEquals(19, version.getMajor());","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertEquals(10, version.getMinor());","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertEquals(20, version.getPatch());","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertEquals(true, version.isEarlyAccess());","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public void versionToString_validVersion_correctStringRepresentation() {","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        // boundary at 0","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        Version version \u003d new Version(0, 0, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertEquals(\"V0.0.0ea\", version.toString());","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        // normal values","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        version \u003d new Version(4, 10, 5, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        assertEquals(\"V4.10.5\", version.toString());","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        // big numbers","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        version \u003d new Version(100, 100, 100, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertEquals(\"V100.100.100ea\", version.toString());","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public void versionComparable_validVersion_compareToIsCorrect() {","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        Version one;","lastModifiedDate":"2017-09-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        Version another;","lastModifiedDate":"2017-09-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        // Tests equality","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        one \u003d new Version(0, 0, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 0, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003d\u003d 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        one \u003d new Version(11, 12, 13, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        another \u003d new Version(11, 12, 13, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003d\u003d 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        // Tests different patch","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        one \u003d new Version(0, 0, 5, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 0, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003e 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        // Tests different minor","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        one \u003d new Version(0, 0, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 5, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003c 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        // Tests different major","lastModifiedDate":"2016-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        one \u003d new Version(10, 0, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 0, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003e 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        // Tests high major vs low minor","lastModifiedDate":"2016-08-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        one \u003d new Version(10, 0, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 1, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003e 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        // Tests high patch vs low minor","lastModifiedDate":"2016-08-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        one \u003d new Version(0, 0, 10, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 1, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003c 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        // Tests same major minor different patch","lastModifiedDate":"2016-08-08"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        one \u003d new Version(2, 15, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        another \u003d new Version(2, 15, 5, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003c 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        // Tests early access vs not early access on same version number","lastModifiedDate":"2016-08-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        one \u003d new Version(2, 15, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        another \u003d new Version(2, 15, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003c 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        // Tests early access lower version vs not early access higher version compare by version number first","lastModifiedDate":"2016-08-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        one \u003d new Version(2, 15, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        another \u003d new Version(2, 15, 5, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003c 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        // Tests early access higher version vs not early access lower version compare by version number first","lastModifiedDate":"2016-08-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        one \u003d new Version(2, 15, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        another \u003d new Version(2, 15, 5, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003c 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    public void versionComparable_validVersion_hashCodeIsCorrect() {","lastModifiedDate":"2016-08-08"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        Version version \u003d new Version(100, 100, 100, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        assertEquals(100100100, version.hashCode());","lastModifiedDate":"2016-08-08"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        version \u003d new Version(10, 10, 10, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        assertEquals(1010010010, version.hashCode());","lastModifiedDate":"2016-08-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    public void versionComparable_validVersion_equalIsCorrect() {","lastModifiedDate":"2016-08-08"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        Version one;","lastModifiedDate":"2016-10-16"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        Version another;","lastModifiedDate":"2016-10-16"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        one \u003d new Version(0, 0, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 0, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        assertTrue(one.equals(another));","lastModifiedDate":"2016-08-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        one \u003d new Version(100, 191, 275, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        another \u003d new Version(100, 191, 275, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        assertTrue(one.equals(another));","lastModifiedDate":"2016-08-08"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    private void verifyVersionParsedCorrectly(String versionString,","lastModifiedDate":"2016-08-08"},{"lineNumber":133,"author":{"gitId":"-"},"content":"            int major, int minor, int patch, boolean isEarlyAccess) {","lastModifiedDate":"2016-08-08"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        assertEquals(new Version(major, minor, patch, isEarlyAccess), Version.fromString(versionString));","lastModifiedDate":"2016-08-08"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":136,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"david-eom":4,"-":132}},{"path":"src/test/java/socialite/commons/core/index/IndexTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"david-eom"},"content":"package socialite.commons.core.index;","lastModifiedDate":"2021-10-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":9,"author":{"gitId":"david-eom"},"content":"import socialite.testutil.Assert;","lastModifiedDate":"2021-10-08"},{"lineNumber":10,"author":{"gitId":"david-eom"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class IndexTest {","lastModifiedDate":"2017-05-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public void createOneBasedIndex() {","lastModifiedDate":"2017-05-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        // invalid index","lastModifiedDate":"2017-05-24"},{"lineNumber":16,"author":{"gitId":"david-eom"},"content":"        Assert.assertThrows(IndexOutOfBoundsException.class, () -\u003e Index.fromOneBased(0));","lastModifiedDate":"2021-10-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        // check equality using the same base","lastModifiedDate":"2017-05-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertEquals(1, Index.fromOneBased(1).getOneBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        assertEquals(5, Index.fromOneBased(5).getOneBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        // convert from one-based index to zero-based index","lastModifiedDate":"2017-05-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertEquals(0, Index.fromOneBased(1).getZeroBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        assertEquals(4, Index.fromOneBased(5).getZeroBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public void createZeroBasedIndex() {","lastModifiedDate":"2017-05-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        // invalid index","lastModifiedDate":"2017-05-24"},{"lineNumber":30,"author":{"gitId":"david-eom"},"content":"        Assert.assertThrows(IndexOutOfBoundsException.class, () -\u003e Index.fromZeroBased(-1));","lastModifiedDate":"2021-10-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        // check equality using the same base","lastModifiedDate":"2017-05-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertEquals(0, Index.fromZeroBased(0).getZeroBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertEquals(5, Index.fromZeroBased(5).getZeroBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        // convert from zero-based index to one-based index","lastModifiedDate":"2017-05-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertEquals(1, Index.fromZeroBased(0).getOneBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertEquals(6, Index.fromZeroBased(5).getOneBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-05-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        final Index fifthPersonIndex \u003d Index.fromOneBased(5);","lastModifiedDate":"2017-05-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertTrue(fifthPersonIndex.equals(Index.fromOneBased(5)));","lastModifiedDate":"2017-05-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertTrue(fifthPersonIndex.equals(Index.fromZeroBased(4)));","lastModifiedDate":"2017-05-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertTrue(fifthPersonIndex.equals(fifthPersonIndex));","lastModifiedDate":"2017-05-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertFalse(fifthPersonIndex.equals(null));","lastModifiedDate":"2017-05-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertFalse(fifthPersonIndex.equals(5.0f));","lastModifiedDate":"2017-05-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        // different index -\u003e returns false","lastModifiedDate":"2017-05-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        assertFalse(fifthPersonIndex.equals(Index.fromOneBased(1)));","lastModifiedDate":"2017-05-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-24"}],"authorContributionMap":{"david-eom":5,"-":56}},{"path":"src/test/java/socialite/commons/util/AppUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"david-eom"},"content":"package socialite.commons.util;","lastModifiedDate":"2021-10-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":7,"author":{"gitId":"david-eom"},"content":"import socialite.testutil.Assert;","lastModifiedDate":"2021-10-08"},{"lineNumber":8,"author":{"gitId":"david-eom"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class AppUtilTest {","lastModifiedDate":"2016-09-30"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void getImage_exitingImage() {","lastModifiedDate":"2016-09-30"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        assertNotNull(AppUtil.getImage(\"/images/address_book_32.png\"));","lastModifiedDate":"2016-09-30"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void getImage_nullGiven_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":18,"author":{"gitId":"david-eom"},"content":"        Assert.assertThrows(NullPointerException.class, () -\u003e AppUtil.getImage(null));","lastModifiedDate":"2021-10-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public void checkArgument_true_nothingHappens() {","lastModifiedDate":"2017-05-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        AppUtil.checkArgument(true);","lastModifiedDate":"2017-05-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        AppUtil.checkArgument(true, \"\");","lastModifiedDate":"2017-05-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-15"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public void checkArgument_falseWithoutErrorMessage_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":29,"author":{"gitId":"david-eom"},"content":"        Assert.assertThrows(IllegalArgumentException.class, () -\u003e AppUtil.checkArgument(false));","lastModifiedDate":"2021-10-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-15"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-15"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public void checkArgument_falseWithErrorMessage_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        String errorMessage \u003d \"error message\";","lastModifiedDate":"2017-05-15"},{"lineNumber":35,"author":{"gitId":"david-eom"},"content":"        Assert.assertThrows(IllegalArgumentException.class, errorMessage, ()","lastModifiedDate":"2021-10-09"},{"lineNumber":36,"author":{"gitId":"david-eom"},"content":"            -\u003e AppUtil.checkArgument(false, errorMessage));","lastModifiedDate":"2021-10-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-15"},{"lineNumber":38,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-30"}],"authorContributionMap":{"david-eom":7,"-":31}},{"path":"src/test/java/socialite/commons/util/CollectionUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"david-eom"},"content":"package socialite.commons.util;","lastModifiedDate":"2021-10-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2016-12-22"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2017-01-14"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-01-14"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-12-22"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":13,"author":{"gitId":"david-eom"},"content":"import socialite.testutil.Assert;","lastModifiedDate":"2021-10-08"},{"lineNumber":14,"author":{"gitId":"david-eom"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class CollectionUtilTest {","lastModifiedDate":"2016-12-22"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-22"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void requireAllNonNullVarargs() {","lastModifiedDate":"2017-05-19"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        // no arguments","lastModifiedDate":"2017-01-14"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown();","lastModifiedDate":"2017-05-19"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        // any non-empty argument list","lastModifiedDate":"2017-01-14"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(new Object(), new Object());","lastModifiedDate":"2017-05-19"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(\"test\");","lastModifiedDate":"2017-05-19"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(\"\");","lastModifiedDate":"2017-05-19"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        // argument lists with just one null at the beginning","lastModifiedDate":"2017-01-14"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown((Object) null);","lastModifiedDate":"2017-05-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(null, \"\", new Object());","lastModifiedDate":"2017-05-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(null, new Object(), new Object());","lastModifiedDate":"2017-05-19"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // argument lists with nulls in the middle","lastModifiedDate":"2017-01-14"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(new Object(), null, null, \"test\");","lastModifiedDate":"2017-05-19"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(\"\", null, new Object());","lastModifiedDate":"2017-05-19"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // argument lists with one null as the last argument","lastModifiedDate":"2017-01-14"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(\"\", new Object(), null);","lastModifiedDate":"2017-05-19"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(new Object(), new Object(), null);","lastModifiedDate":"2017-05-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        // null reference","lastModifiedDate":"2017-05-19"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown((Object[]) null);","lastModifiedDate":"2017-05-19"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        // confirms nulls inside lists in the argument list are not considered","lastModifiedDate":"2017-01-14"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        List\u003cObject\u003e containingNull \u003d Arrays.asList((Object) null);","lastModifiedDate":"2017-01-14"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(containingNull, new Object());","lastModifiedDate":"2017-05-19"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-14"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-14"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-01-14"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public void requireAllNonNullCollection() {","lastModifiedDate":"2017-05-19"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        // lists containing nulls in the front","lastModifiedDate":"2017-01-14"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(Arrays.asList((Object) null));","lastModifiedDate":"2017-05-19"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(Arrays.asList(null, new Object(), \"\"));","lastModifiedDate":"2017-05-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-14"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        // lists containing nulls in the middle","lastModifiedDate":"2017-01-14"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(Arrays.asList(\"spam\", null, new Object()));","lastModifiedDate":"2017-05-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(Arrays.asList(\"spam\", null, \"eggs\", null, new Object()));","lastModifiedDate":"2017-05-19"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-14"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        // lists containing nulls at the end","lastModifiedDate":"2017-01-14"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(Arrays.asList(\"spam\", new Object(), null));","lastModifiedDate":"2017-05-19"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown(Arrays.asList(new Object(), null));","lastModifiedDate":"2017-05-19"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        // null reference","lastModifiedDate":"2017-05-19"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionThrown((Collection\u003cObject\u003e) null);","lastModifiedDate":"2017-05-19"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-14"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        // empty list","lastModifiedDate":"2017-01-14"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(Collections.emptyList());","lastModifiedDate":"2017-05-19"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-14"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        // list with all non-null elements","lastModifiedDate":"2017-01-14"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(Arrays.asList(new Object(), \"ham\", Integer.valueOf(1)));","lastModifiedDate":"2018-04-01"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(Arrays.asList(new Object()));","lastModifiedDate":"2017-05-19"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-14"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        // confirms nulls inside nested lists are not considered","lastModifiedDate":"2017-01-14"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        List\u003cObject\u003e containingNull \u003d Arrays.asList((Object) null);","lastModifiedDate":"2017-01-14"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertNullPointerExceptionNotThrown(Arrays.asList(containingNull, new Object()));","lastModifiedDate":"2017-05-19"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-22"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-22"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-21"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public void isAnyNonNull() {","lastModifiedDate":"2017-06-21"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertFalse(CollectionUtil.isAnyNonNull());","lastModifiedDate":"2017-06-21"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        assertFalse(CollectionUtil.isAnyNonNull((Object) null));","lastModifiedDate":"2017-06-21"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        assertFalse(CollectionUtil.isAnyNonNull((Object[]) null));","lastModifiedDate":"2017-06-21"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assertTrue(CollectionUtil.isAnyNonNull(new Object()));","lastModifiedDate":"2017-06-21"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertTrue(CollectionUtil.isAnyNonNull(new Object(), null));","lastModifiedDate":"2017-06-21"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-21"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-21"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-20"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * Asserts that {@code CollectionUtil#requireAllNonNull(Object...)} throw {@code NullPointerException}","lastModifiedDate":"2017-08-20"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     * if {@code objects} or any element of {@code objects} is null.","lastModifiedDate":"2017-08-20"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-20"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    private void assertNullPointerExceptionThrown(Object... objects) {","lastModifiedDate":"2017-05-19"},{"lineNumber":90,"author":{"gitId":"david-eom"},"content":"        Assert.assertThrows(NullPointerException.class, () -\u003e CollectionUtil.requireAllNonNull(objects));","lastModifiedDate":"2021-10-08"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-19"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-20"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     * Asserts that {@code CollectionUtil#requireAllNonNull(Collection\u003c?\u003e)} throw {@code NullPointerException}","lastModifiedDate":"2017-08-20"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     * if {@code collection} or any element of {@code collection} is null.","lastModifiedDate":"2017-08-20"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-20"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    private void assertNullPointerExceptionThrown(Collection\u003c?\u003e collection) {","lastModifiedDate":"2017-05-19"},{"lineNumber":98,"author":{"gitId":"david-eom"},"content":"        Assert.assertThrows(NullPointerException.class, () -\u003e CollectionUtil.requireAllNonNull(collection));","lastModifiedDate":"2021-10-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-19"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    private void assertNullPointerExceptionNotThrown(Object... objects) {","lastModifiedDate":"2017-05-19"},{"lineNumber":102,"author":{"gitId":"david-eom"},"content":"        CollectionUtil.requireAllNonNull(objects);","lastModifiedDate":"2021-10-08"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-19"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    private void assertNullPointerExceptionNotThrown(Collection\u003c?\u003e collection) {","lastModifiedDate":"2017-05-19"},{"lineNumber":106,"author":{"gitId":"david-eom"},"content":"        CollectionUtil.requireAllNonNull(collection);","lastModifiedDate":"2021-10-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-19"},{"lineNumber":108,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-22"}],"authorContributionMap":{"david-eom":7,"-":101}},{"path":"src/test/java/socialite/commons/util/ConfigUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"david-eom"},"content":"package socialite.commons.util;","lastModifiedDate":"2021-10-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-09-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2016-09-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.logging.Level;","lastModifiedDate":"2016-09-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":15,"author":{"gitId":"david-eom"},"content":"import socialite.commons.core.Config;","lastModifiedDate":"2021-10-08"},{"lineNumber":16,"author":{"gitId":"david-eom"},"content":"import socialite.commons.exceptions.DataConversionException;","lastModifiedDate":"2021-10-08"},{"lineNumber":17,"author":{"gitId":"david-eom"},"content":"import socialite.testutil.Assert;","lastModifiedDate":"2021-10-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class ConfigUtilTest {","lastModifiedDate":"2016-09-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"ConfigUtilTest\");","lastModifiedDate":"2018-04-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public Path tempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void read_null_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":28,"author":{"gitId":"david-eom"},"content":"        Assert.assertThrows(NullPointerException.class, () -\u003e read(null));","lastModifiedDate":"2021-10-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public void read_missingFile_emptyResult() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(read(\"NonExistentFile.json\").isPresent());","lastModifiedDate":"2016-09-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void read_notJsonFormat_exceptionThrown() {","lastModifiedDate":"2019-03-23"},{"lineNumber":38,"author":{"gitId":"david-eom"},"content":"        Assert.assertThrows(DataConversionException.class, () -\u003e read(\"NotJsonFormatConfig.json\"));","lastModifiedDate":"2021-10-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public void read_fileInOrder_successfullyRead() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        Config expected \u003d getTypicalConfig();","lastModifiedDate":"2016-09-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        Config actual \u003d read(\"TypicalConfig.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public void read_valuesMissingFromFile_defaultValuesUsed() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        Config actual \u003d read(\"EmptyConfig.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertEquals(new Config(), actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public void read_extraValuesInFile_extraValuesIgnored() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        Config expected \u003d getTypicalConfig();","lastModifiedDate":"2016-09-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        Config actual \u003d read(\"ExtraValuesConfig.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    private Config getTypicalConfig() {","lastModifiedDate":"2016-09-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        Config config \u003d new Config();","lastModifiedDate":"2016-09-25"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        config.setLogLevel(Level.INFO);","lastModifiedDate":"2016-09-25"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        config.setUserPrefsFilePath(Paths.get(\"preferences.json\"));","lastModifiedDate":"2018-04-12"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        return config;","lastModifiedDate":"2016-09-25"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    private Optional\u003cConfig\u003e read(String configFileInTestDataFolder) throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        Path configFilePath \u003d addToTestDataPathIfNotNull(configFileInTestDataFolder);","lastModifiedDate":"2018-04-21"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        return ConfigUtil.readConfig(configFilePath);","lastModifiedDate":"2016-12-20"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public void save_nullConfig_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":78,"author":{"gitId":"david-eom"},"content":"        Assert.assertThrows(NullPointerException.class, () -\u003e save(null, \"SomeFile.json\"));","lastModifiedDate":"2021-10-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public void save_nullFile_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":83,"author":{"gitId":"david-eom"},"content":"        Assert.assertThrows(NullPointerException.class, () -\u003e save(new Config(), null));","lastModifiedDate":"2021-10-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public void saveConfig_allInOrder_success() throws DataConversionException, IOException {","lastModifiedDate":"2016-09-24"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        Config original \u003d getTypicalConfig();","lastModifiedDate":"2016-09-24"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        Path configFilePath \u003d tempDir.resolve(\"TempConfig.json\");","lastModifiedDate":"2019-04-25"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        //Try writing when the file doesn\u0027t exist","lastModifiedDate":"2016-09-24"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        ConfigUtil.saveConfig(original, configFilePath);","lastModifiedDate":"2016-12-20"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        Config readBack \u003d ConfigUtil.readConfig(configFilePath).get();","lastModifiedDate":"2016-12-20"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertEquals(original, readBack);","lastModifiedDate":"2016-09-24"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        //Try saving when the file exists","lastModifiedDate":"2016-09-24"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        original.setLogLevel(Level.FINE);","lastModifiedDate":"2016-09-25"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        ConfigUtil.saveConfig(original, configFilePath);","lastModifiedDate":"2016-12-20"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        readBack \u003d ConfigUtil.readConfig(configFilePath).get();","lastModifiedDate":"2016-12-20"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        assertEquals(original, readBack);","lastModifiedDate":"2016-09-24"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    private void save(Config config, String configFileInTestDataFolder) throws IOException {","lastModifiedDate":"2016-09-24"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        Path configFilePath \u003d addToTestDataPathIfNotNull(configFileInTestDataFolder);","lastModifiedDate":"2018-04-21"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        ConfigUtil.saveConfig(config, configFilePath);","lastModifiedDate":"2016-12-20"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    private Path addToTestDataPathIfNotNull(String configFileInTestDataFolder) {","lastModifiedDate":"2018-04-21"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        return configFileInTestDataFolder !\u003d null","lastModifiedDate":"2016-09-24"},{"lineNumber":111,"author":{"gitId":"-"},"content":"                                  ? TEST_DATA_FOLDER.resolve(configFileInTestDataFolder)","lastModifiedDate":"2018-04-21"},{"lineNumber":112,"author":{"gitId":"-"},"content":"                                  : null;","lastModifiedDate":"2016-09-24"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":116,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-24"}],"authorContributionMap":{"david-eom":8,"-":108}},{"path":"src/test/java/socialite/commons/util/FileUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"david-eom"},"content":"package socialite.commons.util;","lastModifiedDate":"2021-10-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"david-eom"},"content":"import socialite.testutil.Assert;","lastModifiedDate":"2021-10-08"},{"lineNumber":9,"author":{"gitId":"david-eom"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class FileUtilTest {","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public void isValidPath() {","lastModifiedDate":"2018-04-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":"        // valid path","lastModifiedDate":"2018-04-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        assertTrue(FileUtil.isValidPath(\"valid/file/path\"));","lastModifiedDate":"2018-04-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        // invalid path","lastModifiedDate":"2018-04-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        assertFalse(FileUtil.isValidPath(\"a\\0\"));","lastModifiedDate":"2018-04-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        // null path -\u003e throws NullPointerException","lastModifiedDate":"2018-04-21"},{"lineNumber":21,"author":{"gitId":"david-eom"},"content":"        Assert.assertThrows(NullPointerException.class, () -\u003e FileUtil.isValidPath(null));","lastModifiedDate":"2021-10-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"david-eom":4,"-":20}},{"path":"src/test/java/socialite/commons/util/JsonUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"david-eom"},"content":"package socialite.commons.util;","lastModifiedDate":"2021-10-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2016-10-07"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"david-eom"},"content":"import socialite.testutil.SerializableTestClass;","lastModifiedDate":"2021-10-08"},{"lineNumber":11,"author":{"gitId":"david-eom"},"content":"import socialite.testutil.TestUtil;","lastModifiedDate":"2021-10-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Tests JSON Read and Write","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class JsonUtilTest {","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private static final Path SERIALIZATION_FILE \u003d TestUtil.getFilePathInSandboxFolder(\"serialize.json\");","lastModifiedDate":"2018-04-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-07"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public void serializeObjectToJsonFile_noExceptionThrown() throws IOException {","lastModifiedDate":"2016-10-07"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        SerializableTestClass serializableTestClass \u003d new SerializableTestClass();","lastModifiedDate":"2016-10-07"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        serializableTestClass.setTestValues();","lastModifiedDate":"2016-10-07"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        JsonUtil.serializeObjectToJsonFile(SERIALIZATION_FILE, serializableTestClass);","lastModifiedDate":"2016-10-07"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertEquals(FileUtil.readFromFile(SERIALIZATION_FILE), SerializableTestClass.JSON_STRING_REPRESENTATION);","lastModifiedDate":"2016-10-07"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-07"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public void deserializeObjectFromJsonFile_noExceptionThrown() throws IOException {","lastModifiedDate":"2016-10-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        FileUtil.writeToFile(SERIALIZATION_FILE, SerializableTestClass.JSON_STRING_REPRESENTATION);","lastModifiedDate":"2016-10-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        SerializableTestClass serializableTestClass \u003d JsonUtil","lastModifiedDate":"2016-10-07"},{"lineNumber":35,"author":{"gitId":"-"},"content":"                .deserializeObjectFromJsonFile(SERIALIZATION_FILE, SerializableTestClass.class);","lastModifiedDate":"2016-10-07"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertEquals(serializableTestClass.getName(), SerializableTestClass.getNameTestValue());","lastModifiedDate":"2016-10-07"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertEquals(serializableTestClass.getListOfLocalDateTimes(), SerializableTestClass.getListTestValues());","lastModifiedDate":"2016-10-07"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertEquals(serializableTestClass.getMapOfIntegerToString(), SerializableTestClass.getHashMapTestValues());","lastModifiedDate":"2016-10-07"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-07"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-07"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    //TODO: @Test jsonUtil_readJsonStringToObjectInstance_correctObject()","lastModifiedDate":"2016-09-28"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    //TODO: @Test jsonUtil_writeThenReadObjectToJson_correctObject()","lastModifiedDate":"2016-09-28"},{"lineNumber":45,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"david-eom":3,"-":42}},{"path":"src/test/java/socialite/commons/util/StringUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"david-eom"},"content":"package socialite.commons.util;","lastModifiedDate":"2021-10-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.io.FileNotFoundException;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"david-eom"},"content":"import socialite.testutil.Assert;","lastModifiedDate":"2021-10-08"},{"lineNumber":11,"author":{"gitId":"david-eom"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class StringUtilTest {","lastModifiedDate":"2016-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    //---------------- Tests for isNonZeroUnsignedInteger --------------------------------------","lastModifiedDate":"2019-02-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-22"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void isNonZeroUnsignedInteger() {","lastModifiedDate":"2019-02-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        // EP: empty strings","lastModifiedDate":"2016-10-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"\")); // Boundary value","lastModifiedDate":"2017-06-02"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"  \"));","lastModifiedDate":"2017-06-02"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        // EP: not a number","lastModifiedDate":"2016-10-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"a\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"aaa\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        // EP: zero","lastModifiedDate":"2016-10-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"0\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        // EP: zero as prefix","lastModifiedDate":"2017-06-02"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.isNonZeroUnsignedInteger(\"01\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        // EP: signed numbers","lastModifiedDate":"2016-10-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"-1\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"+1\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        // EP: numbers with white space","lastModifiedDate":"2016-10-12"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\" 10 \")); // Leading/trailing spaces","lastModifiedDate":"2017-06-02"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(\"1 0\")); // Spaces in the middle","lastModifiedDate":"2017-06-02"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        // EP: number larger than Integer.MAX_VALUE","lastModifiedDate":"2017-06-02"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.isNonZeroUnsignedInteger(Long.toString(Integer.MAX_VALUE + 1)));","lastModifiedDate":"2017-06-02"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        // EP: valid numbers, should return true","lastModifiedDate":"2016-10-12"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.isNonZeroUnsignedInteger(\"1\")); // Boundary value","lastModifiedDate":"2017-06-02"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.isNonZeroUnsignedInteger(\"10\"));","lastModifiedDate":"2017-06-02"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    //---------------- Tests for containsWordIgnoreCase --------------------------------------","lastModifiedDate":"2016-10-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2016-10-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * Invalid equivalence partitions for word: null, empty, multiple words","lastModifiedDate":"2016-10-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * Invalid equivalence partitions for sentence: null","lastModifiedDate":"2016-10-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * The four test cases below test one invalid input at a time.","lastModifiedDate":"2016-10-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public void containsWordIgnoreCase_nullWord_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":60,"author":{"gitId":"david-eom"},"content":"        Assert.assertThrows(NullPointerException.class, ()","lastModifiedDate":"2021-10-09"},{"lineNumber":61,"author":{"gitId":"david-eom"},"content":"            -\u003e StringUtil.containsWordIgnoreCase(\"typical sentence\", null));","lastModifiedDate":"2021-10-09"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-13"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public void containsWordIgnoreCase_emptyWord_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":66,"author":{"gitId":"david-eom"},"content":"        Assert.assertThrows(IllegalArgumentException.class, \"Word parameter cannot be empty\", ()","lastModifiedDate":"2021-10-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"            -\u003e StringUtil.containsWordIgnoreCase(\"typical sentence\", \"  \"));","lastModifiedDate":"2019-03-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public void containsWordIgnoreCase_multipleWords_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":72,"author":{"gitId":"david-eom"},"content":"        Assert.assertThrows(IllegalArgumentException.class, \"Word parameter should be a single word\", ()","lastModifiedDate":"2021-10-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"            -\u003e StringUtil.containsWordIgnoreCase(\"typical sentence\", \"aaa BBB\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-13"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public void containsWordIgnoreCase_nullSentence_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":78,"author":{"gitId":"david-eom"},"content":"        Assert.assertThrows(NullPointerException.class, ()","lastModifiedDate":"2021-10-09"},{"lineNumber":79,"author":{"gitId":"david-eom"},"content":"            -\u003e StringUtil.containsWordIgnoreCase(null, \"abc\"));","lastModifiedDate":"2021-10-09"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2016-10-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     * Valid equivalence partitions for word:","lastModifiedDate":"2016-10-13"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     *   - any word","lastModifiedDate":"2016-10-13"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     *   - word containing symbols/numbers","lastModifiedDate":"2016-10-13"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     *   - word with leading/trailing spaces","lastModifiedDate":"2016-10-13"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-13"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     * Valid equivalence partitions for sentence:","lastModifiedDate":"2016-10-13"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     *   - empty string","lastModifiedDate":"2016-10-13"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     *   - one word","lastModifiedDate":"2016-10-13"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     *   - multiple words","lastModifiedDate":"2016-10-13"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     *   - sentence with extra spaces","lastModifiedDate":"2016-10-13"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-13"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     * Possible scenarios returning true:","lastModifiedDate":"2016-10-13"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     *   - matches first word in sentence","lastModifiedDate":"2016-10-13"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     *   - last word in sentence","lastModifiedDate":"2016-10-13"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     *   - middle word in sentence","lastModifiedDate":"2016-10-13"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     *   - matches multiple words","lastModifiedDate":"2016-10-13"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-13"},{"lineNumber":100,"author":{"gitId":"-"},"content":"     * Possible scenarios returning false:","lastModifiedDate":"2016-10-13"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     *   - query word matches part of a sentence word","lastModifiedDate":"2016-10-13"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     *   - sentence word matches part of the query word","lastModifiedDate":"2016-10-13"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-13"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     * The test method below tries to verify all above with a reasonably low number of test cases.","lastModifiedDate":"2016-10-13"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-13"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-13"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    public void containsWordIgnoreCase_validInputs_correctResult() {","lastModifiedDate":"2016-10-13"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        // Empty sentence","lastModifiedDate":"2016-10-13"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.containsWordIgnoreCase(\"\", \"abc\")); // Boundary case","lastModifiedDate":"2016-10-13"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.containsWordIgnoreCase(\"    \", \"123\"));","lastModifiedDate":"2016-10-13"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        // Matches a partial word only","lastModifiedDate":"2016-10-13"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.containsWordIgnoreCase(\"aaa bbb ccc\", \"bb\")); // Sentence word bigger than query word","lastModifiedDate":"2016-10-13"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        assertFalse(StringUtil.containsWordIgnoreCase(\"aaa bbb ccc\", \"bbbb\")); // Query word bigger than sentence word","lastModifiedDate":"2016-10-13"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        // Matches word in the sentence, different upper/lower case letters","lastModifiedDate":"2016-10-13"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"aaa bBb ccc\", \"Bbb\")); // First word (boundary case)","lastModifiedDate":"2016-10-13"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"aaa bBb ccc@1\", \"CCc@1\")); // Last word (boundary case)","lastModifiedDate":"2016-10-13"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"  AAA   bBb   ccc  \", \"aaa\")); // Sentence has extra spaces","lastModifiedDate":"2016-10-13"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"Aaa\", \"aaa\")); // Only one word in sentence (boundary case)","lastModifiedDate":"2016-10-13"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"aaa bbb ccc\", \"  ccc  \")); // Leading/trailing spaces","lastModifiedDate":"2016-10-13"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        // Matches multiple words in sentence","lastModifiedDate":"2016-10-13"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.containsWordIgnoreCase(\"AAA bBb ccc  bbb\", \"bbB\"));","lastModifiedDate":"2016-10-13"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-13"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    //---------------- Tests for getDetails --------------------------------------","lastModifiedDate":"2016-10-13"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2016-10-13"},{"lineNumber":132,"author":{"gitId":"-"},"content":"     * Equivalence Partitions: null, valid throwable object","lastModifiedDate":"2016-10-13"},{"lineNumber":133,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-13"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-13"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    public void getDetails_exceptionGiven() {","lastModifiedDate":"2016-09-30"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        assertTrue(StringUtil.getDetails(new FileNotFoundException(\"file not found\"))","lastModifiedDate":"2019-03-14"},{"lineNumber":138,"author":{"gitId":"-"},"content":"            .contains(\"java.io.FileNotFoundException: file not found\"));","lastModifiedDate":"2019-03-14"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-30"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    public void getDetails_nullGiven_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":143,"author":{"gitId":"david-eom"},"content":"        Assert.assertThrows(NullPointerException.class, () -\u003e StringUtil.getDetails(null));","lastModifiedDate":"2021-10-08"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-30"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-30"},{"lineNumber":146,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-22"}],"authorContributionMap":{"david-eom":10,"-":136}},{"path":"src/test/java/socialite/logic/LogicManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"david-eom"},"content":"package socialite.logic;","lastModifiedDate":"2021-10-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-12-09"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-12-09"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":12,"author":{"gitId":"david-eom"},"content":"import socialite.commons.core.Messages;","lastModifiedDate":"2021-10-09"},{"lineNumber":13,"author":{"gitId":"david-eom"},"content":"import socialite.logic.commands.AddCommand;","lastModifiedDate":"2021-10-08"},{"lineNumber":14,"author":{"gitId":"david-eom"},"content":"import socialite.logic.commands.CommandResult;","lastModifiedDate":"2021-10-08"},{"lineNumber":15,"author":{"gitId":"david-eom"},"content":"import socialite.logic.commands.CommandTestUtil;","lastModifiedDate":"2021-10-09"},{"lineNumber":16,"author":{"gitId":"david-eom"},"content":"import socialite.logic.commands.ListCommand;","lastModifiedDate":"2021-10-08"},{"lineNumber":17,"author":{"gitId":"david-eom"},"content":"import socialite.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-10-08"},{"lineNumber":18,"author":{"gitId":"david-eom"},"content":"import socialite.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-10-08"},{"lineNumber":19,"author":{"gitId":"david-eom"},"content":"import socialite.model.CommandHistory;","lastModifiedDate":"2021-10-21"},{"lineNumber":20,"author":{"gitId":"david-eom"},"content":"import socialite.model.Model;","lastModifiedDate":"2021-10-08"},{"lineNumber":21,"author":{"gitId":"david-eom"},"content":"import socialite.model.ModelManager;","lastModifiedDate":"2021-10-08"},{"lineNumber":22,"author":{"gitId":"david-eom"},"content":"import socialite.model.ReadOnlyAddressBook;","lastModifiedDate":"2021-10-08"},{"lineNumber":23,"author":{"gitId":"david-eom"},"content":"import socialite.model.UserPrefs;","lastModifiedDate":"2021-10-08"},{"lineNumber":24,"author":{"gitId":"david-eom"},"content":"import socialite.model.person.Person;","lastModifiedDate":"2021-10-08"},{"lineNumber":25,"author":{"gitId":"david-eom"},"content":"import socialite.storage.JsonAddressBookStorage;","lastModifiedDate":"2021-10-08"},{"lineNumber":26,"author":{"gitId":"david-eom"},"content":"import socialite.storage.JsonCommandHistoryStorage;","lastModifiedDate":"2021-10-21"},{"lineNumber":27,"author":{"gitId":"david-eom"},"content":"import socialite.storage.JsonUserPrefsStorage;","lastModifiedDate":"2021-10-08"},{"lineNumber":28,"author":{"gitId":"Zacchua"},"content":"import socialite.storage.ProfilePictureStorage;","lastModifiedDate":"2021-10-26"},{"lineNumber":29,"author":{"gitId":"Zacchua"},"content":"import socialite.storage.ProfilePictureStorageManager;","lastModifiedDate":"2021-10-26"},{"lineNumber":30,"author":{"gitId":"david-eom"},"content":"import socialite.storage.StorageManager;","lastModifiedDate":"2021-10-08"},{"lineNumber":31,"author":{"gitId":"david-eom"},"content":"import socialite.testutil.Assert;","lastModifiedDate":"2021-10-08"},{"lineNumber":32,"author":{"gitId":"david-eom"},"content":"import socialite.testutil.PersonBuilder;","lastModifiedDate":"2021-10-09"},{"lineNumber":33,"author":{"gitId":"david-eom"},"content":"import socialite.testutil.TypicalPersons;","lastModifiedDate":"2021-10-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"public class LogicManagerTest {","lastModifiedDate":"2016-09-22"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private static final IOException DUMMY_IO_EXCEPTION \u003d new IOException(\"dummy exception\");","lastModifiedDate":"2018-12-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public Path temporaryFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager();","lastModifiedDate":"2017-06-20"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2018-12-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2019-04-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        JsonAddressBookStorage addressBookStorage \u003d","lastModifiedDate":"2019-04-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"                new JsonAddressBookStorage(temporaryFolder.resolve(\"addressBook.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(temporaryFolder.resolve(\"userPrefs.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":49,"author":{"gitId":"david-eom"},"content":"        JsonCommandHistoryStorage commandHistoryStorage \u003d","lastModifiedDate":"2021-10-21"},{"lineNumber":50,"author":{"gitId":"david-eom"},"content":"                new JsonCommandHistoryStorage(temporaryFolder.resolve(\"commandHistory.json\"));","lastModifiedDate":"2021-10-21"},{"lineNumber":51,"author":{"gitId":"Zacchua"},"content":"        ProfilePictureStorage profilePictureStorage \u003d ProfilePictureStorageManager.getInstance();","lastModifiedDate":"2021-10-26"},{"lineNumber":52,"author":{"gitId":"Zacchua"},"content":"        StorageManager storage \u003d new StorageManager(","lastModifiedDate":"2021-10-26"},{"lineNumber":53,"author":{"gitId":"Zacchua"},"content":"                addressBookStorage, userPrefsStorage, commandHistoryStorage, profilePictureStorage);","lastModifiedDate":"2021-10-26"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-20"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public void execute_invalidCommandFormat_throwsParseException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        String invalidCommand \u003d \"uicfhmowqewca\";","lastModifiedDate":"2017-06-20"},{"lineNumber":60,"author":{"gitId":"david-eom"},"content":"        assertParseException(invalidCommand, Messages.MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2021-10-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-20"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-20"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-14"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public void execute_commandExecutionError_throwsCommandException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        String deleteCommand \u003d \"delete 9\";","lastModifiedDate":"2017-06-14"},{"lineNumber":66,"author":{"gitId":"david-eom"},"content":"        assertCommandException(deleteCommand, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2021-10-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-14"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-19"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public void execute_validCommand_success() throws Exception {","lastModifiedDate":"2019-03-14"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        String listCommand \u003d ListCommand.COMMAND_WORD;","lastModifiedDate":"2017-06-19"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertCommandSuccess(listCommand, ListCommand.MESSAGE_SUCCESS, model);","lastModifiedDate":"2017-06-19"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-20"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-20"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-12-09"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public void execute_storageThrowsIoException_throwsCommandException() {","lastModifiedDate":"2019-04-25"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        // Setup LogicManager with JsonAddressBookIoExceptionThrowingStub","lastModifiedDate":"2018-12-09"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        JsonAddressBookStorage addressBookStorage \u003d","lastModifiedDate":"2018-12-09"},{"lineNumber":79,"author":{"gitId":"-"},"content":"                new JsonAddressBookIoExceptionThrowingStub(temporaryFolder.resolve(\"ioExceptionAddressBook.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d","lastModifiedDate":"2019-04-25"},{"lineNumber":81,"author":{"gitId":"-"},"content":"                new JsonUserPrefsStorage(temporaryFolder.resolve(\"ioExceptionUserPrefs.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":82,"author":{"gitId":"david-eom"},"content":"        JsonCommandHistoryStorage commandHistoryStorage \u003d","lastModifiedDate":"2021-10-21"},{"lineNumber":83,"author":{"gitId":"david-eom"},"content":"                new JsonCommandHistoryStorage(temporaryFolder.resolve(\"ioExceptionCommandHistory.json\"));","lastModifiedDate":"2021-10-21"},{"lineNumber":84,"author":{"gitId":"Zacchua"},"content":"        ProfilePictureStorage profilePictureStorage \u003d ProfilePictureStorageManager.getInstance();","lastModifiedDate":"2021-10-26"},{"lineNumber":85,"author":{"gitId":"Zacchua"},"content":"        StorageManager storage \u003d new StorageManager(","lastModifiedDate":"2021-10-26"},{"lineNumber":86,"author":{"gitId":"Zacchua"},"content":"                addressBookStorage, userPrefsStorage, commandHistoryStorage, profilePictureStorage);","lastModifiedDate":"2021-10-26"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        // Execute add command","lastModifiedDate":"2018-12-09"},{"lineNumber":90,"author":{"gitId":"david-eom"},"content":"        String addCommand \u003d AddCommand.COMMAND_WORD + CommandTestUtil.NAME_DESC_AMY","lastModifiedDate":"2021-10-09"},{"lineNumber":91,"author":{"gitId":"bnjmnt4n"},"content":"                + CommandTestUtil.PHONE_DESC_AMY + CommandTestUtil.REMARK_DESC_AMY","lastModifiedDate":"2021-10-15"},{"lineNumber":92,"author":{"gitId":"david-eom"},"content":"                + CommandTestUtil.FACEBOOK_DESC_AMY + CommandTestUtil.INSTAGRAM_DESC_AMY","lastModifiedDate":"2021-10-13"},{"lineNumber":93,"author":{"gitId":"Zacchua"},"content":"                + CommandTestUtil.TELEGRAM_DESC_AMY + CommandTestUtil.TIKTOK_DESC_AMY","lastModifiedDate":"2021-10-13"},{"lineNumber":94,"author":{"gitId":"bnjmnt4n"},"content":"                + CommandTestUtil.TWITTER_DESC_AMY + CommandTestUtil.DATE_DESC_AMY;","lastModifiedDate":"2021-10-23"},{"lineNumber":95,"author":{"gitId":"stanley-1"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":96,"author":{"gitId":"david-eom"},"content":"        Person expectedPerson \u003d new PersonBuilder(TypicalPersons.AMY).withTags().build();","lastModifiedDate":"2021-10-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        ModelManager expectedModel \u003d new ModelManager();","lastModifiedDate":"2018-12-09"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        expectedModel.addPerson(expectedPerson);","lastModifiedDate":"2018-12-09"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d LogicManager.FILE_OPS_ERROR_MESSAGE + DUMMY_IO_EXCEPTION;","lastModifiedDate":"2018-12-09"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        assertCommandFailure(addCommand, CommandException.class, expectedMessage, expectedModel);","lastModifiedDate":"2019-03-14"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    public void getFilteredPersonList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":105,"author":{"gitId":"david-eom"},"content":"        Assert.assertThrows(UnsupportedOperationException.class, () -\u003e logic.getFilteredPersonList().remove(0));","lastModifiedDate":"2021-10-08"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":109,"author":{"gitId":"-"},"content":"     * Executes the command and confirms that","lastModifiedDate":"2019-03-14"},{"lineNumber":110,"author":{"gitId":"-"},"content":"     * - no exceptions are thrown \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":111,"author":{"gitId":"-"},"content":"     * - the feedback message is equal to {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":112,"author":{"gitId":"-"},"content":"     * - the internal model manager state is the same as that in {@code expectedModel} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":113,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":114,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    private void assertCommandSuccess(String inputCommand, String expectedMessage,","lastModifiedDate":"2019-03-14"},{"lineNumber":116,"author":{"gitId":"-"},"content":"            Model expectedModel) throws CommandException, ParseException {","lastModifiedDate":"2019-03-14"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        CommandResult result \u003d logic.execute(inputCommand);","lastModifiedDate":"2019-03-14"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        assertEquals(expectedMessage, result.getFeedbackToUser());","lastModifiedDate":"2019-03-14"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        assertEquals(expectedModel, model);","lastModifiedDate":"2019-03-14"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":123,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that a ParseException is thrown and that the result message is correct.","lastModifiedDate":"2017-03-11"},{"lineNumber":124,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":125,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    private void assertParseException(String inputCommand, String expectedMessage) {","lastModifiedDate":"2017-03-11"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, ParseException.class, expectedMessage);","lastModifiedDate":"2017-03-11"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-14"},{"lineNumber":131,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that a CommandException is thrown and that the result message is correct.","lastModifiedDate":"2017-06-14"},{"lineNumber":132,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":133,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-14"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    private void assertCommandException(String inputCommand, String expectedMessage) {","lastModifiedDate":"2017-06-14"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, CommandException.class, expectedMessage);","lastModifiedDate":"2017-06-14"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-14"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":139,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that the exception is thrown and that the result message is correct.","lastModifiedDate":"2017-03-11"},{"lineNumber":140,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":141,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    private void assertCommandFailure(String inputCommand, Class\u003c? extends Throwable\u003e expectedException,","lastModifiedDate":"2019-03-14"},{"lineNumber":143,"author":{"gitId":"-"},"content":"            String expectedMessage) {","lastModifiedDate":"2019-03-14"},{"lineNumber":144,"author":{"gitId":"Zacchua"},"content":"        Model expectedModel \u003d new ModelManager(","lastModifiedDate":"2021-10-26"},{"lineNumber":145,"author":{"gitId":"Zacchua"},"content":"                model.getAddressBook(), new UserPrefs(), new CommandHistory());","lastModifiedDate":"2021-10-27"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, expectedException, expectedMessage, expectedModel);","lastModifiedDate":"2019-03-14"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":149,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-05"},{"lineNumber":150,"author":{"gitId":"-"},"content":"     * Executes the command and confirms that","lastModifiedDate":"2019-03-14"},{"lineNumber":151,"author":{"gitId":"-"},"content":"     * - the {@code expectedException} is thrown \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":152,"author":{"gitId":"-"},"content":"     * - the resulting error message is equal to {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":153,"author":{"gitId":"-"},"content":"     * - the internal model manager state is the same as that in {@code expectedModel} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":154,"author":{"gitId":"-"},"content":"     * @see #assertCommandSuccess(String, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":155,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":156,"author":{"gitId":"-"},"content":"    private void assertCommandFailure(String inputCommand, Class\u003c? extends Throwable\u003e expectedException,","lastModifiedDate":"2019-03-14"},{"lineNumber":157,"author":{"gitId":"-"},"content":"            String expectedMessage, Model expectedModel) {","lastModifiedDate":"2017-05-31"},{"lineNumber":158,"author":{"gitId":"david-eom"},"content":"        Assert.assertThrows(expectedException, expectedMessage, () -\u003e logic.execute(inputCommand));","lastModifiedDate":"2021-10-08"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        assertEquals(expectedModel, model);","lastModifiedDate":"2017-05-31"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-19"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":163,"author":{"gitId":"-"},"content":"     * A stub class to throw an {@code IOException} when the save method is called.","lastModifiedDate":"2018-12-09"},{"lineNumber":164,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    private static class JsonAddressBookIoExceptionThrowingStub extends JsonAddressBookStorage {","lastModifiedDate":"2018-12-09"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        private JsonAddressBookIoExceptionThrowingStub(Path filePath) {","lastModifiedDate":"2018-12-09"},{"lineNumber":167,"author":{"gitId":"-"},"content":"            super(filePath);","lastModifiedDate":"2018-12-09"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-12-09"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        public void saveAddressBook(ReadOnlyAddressBook addressBook, Path filePath) throws IOException {","lastModifiedDate":"2018-12-09"},{"lineNumber":172,"author":{"gitId":"-"},"content":"            throw DUMMY_IO_EXCEPTION;","lastModifiedDate":"2018-12-09"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":175,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"Zacchua":11,"bnjmnt4n":2,"david-eom":32,"-":129,"stanley-1":1}},{"path":"src/test/java/socialite/logic/commands/AddCommandIntegrationTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"david-eom"},"content":"package socialite.logic.commands;","lastModifiedDate":"2021-10-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":6,"author":{"gitId":"david-eom"},"content":"import socialite.model.CommandHistory;","lastModifiedDate":"2021-10-21"},{"lineNumber":7,"author":{"gitId":"david-eom"},"content":"import socialite.model.Model;","lastModifiedDate":"2021-10-08"},{"lineNumber":8,"author":{"gitId":"david-eom"},"content":"import socialite.model.ModelManager;","lastModifiedDate":"2021-10-08"},{"lineNumber":9,"author":{"gitId":"david-eom"},"content":"import socialite.model.UserPrefs;","lastModifiedDate":"2021-10-08"},{"lineNumber":10,"author":{"gitId":"david-eom"},"content":"import socialite.model.person.Person;","lastModifiedDate":"2021-10-08"},{"lineNumber":11,"author":{"gitId":"david-eom"},"content":"import socialite.testutil.PersonBuilder;","lastModifiedDate":"2021-10-08"},{"lineNumber":12,"author":{"gitId":"david-eom"},"content":"import socialite.testutil.TypicalPersons;","lastModifiedDate":"2021-10-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-15"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) for {@code AddCommand}.","lastModifiedDate":"2017-06-15"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public class AddCommandIntegrationTest {","lastModifiedDate":"2017-06-15"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private Model model;","lastModifiedDate":"2017-06-15"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2017-06-15"},{"lineNumber":23,"author":{"gitId":"Zacchua"},"content":"        model \u003d new ModelManager(","lastModifiedDate":"2021-10-26"},{"lineNumber":24,"author":{"gitId":"Zacchua"},"content":"                TypicalPersons.getTypicalAddressBook(), new UserPrefs(), new CommandHistory());","lastModifiedDate":"2021-10-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public void execute_newPerson_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        Person validPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2017-06-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":31,"author":{"gitId":"Zacchua"},"content":"        Model expectedModel \u003d new ModelManager(","lastModifiedDate":"2021-10-26"},{"lineNumber":32,"author":{"gitId":"Zacchua"},"content":"                model.getAddressBook(), new UserPrefs(), new CommandHistory());","lastModifiedDate":"2021-10-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        expectedModel.addPerson(validPerson);","lastModifiedDate":"2017-06-15"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":35,"author":{"gitId":"david-eom"},"content":"        CommandTestUtil.assertCommandSuccess(new AddCommand(validPerson), model,","lastModifiedDate":"2021-10-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"                String.format(AddCommand.MESSAGE_SUCCESS, validPerson), expectedModel);","lastModifiedDate":"2017-07-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public void execute_duplicatePerson_throwsCommandException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        Person personInList \u003d model.getAddressBook().getPersonList().get(0);","lastModifiedDate":"2018-01-10"},{"lineNumber":42,"author":{"gitId":"david-eom"},"content":"        CommandTestUtil.assertCommandFailure(new AddCommand(personInList), model, AddCommand.MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2021-10-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":45,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-15"}],"authorContributionMap":{"Zacchua":4,"david-eom":10,"-":31}},{"path":"src/test/java/socialite/logic/commands/AddCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"david-eom"},"content":"package socialite.logic.commands;","lastModifiedDate":"2021-10-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-01-10"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"david-eom"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2021-10-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":7,"author":{"gitId":"Zacchua"},"content":"import java.io.File;","lastModifiedDate":"2021-10-26"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-05-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":16,"author":{"gitId":"david-eom"},"content":"import socialite.commons.core.GuiSettings;","lastModifiedDate":"2021-10-08"},{"lineNumber":17,"author":{"gitId":"david-eom"},"content":"import socialite.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-10-08"},{"lineNumber":18,"author":{"gitId":"david-eom"},"content":"import socialite.model.AddressBook;","lastModifiedDate":"2021-10-08"},{"lineNumber":19,"author":{"gitId":"david-eom"},"content":"import socialite.model.Model;","lastModifiedDate":"2021-10-08"},{"lineNumber":20,"author":{"gitId":"Zacchua"},"content":"import socialite.model.ProfilePictureSyncModel;","lastModifiedDate":"2021-10-27"},{"lineNumber":21,"author":{"gitId":"david-eom"},"content":"import socialite.model.ReadOnlyAddressBook;","lastModifiedDate":"2021-10-08"},{"lineNumber":22,"author":{"gitId":"david-eom"},"content":"import socialite.model.ReadOnlyCommandHistory;","lastModifiedDate":"2021-10-21"},{"lineNumber":23,"author":{"gitId":"david-eom"},"content":"import socialite.model.ReadOnlyUserPrefs;","lastModifiedDate":"2021-10-08"},{"lineNumber":24,"author":{"gitId":"david-eom"},"content":"import socialite.model.person.Person;","lastModifiedDate":"2021-10-08"},{"lineNumber":25,"author":{"gitId":"david-eom"},"content":"import socialite.testutil.Assert;","lastModifiedDate":"2021-10-08"},{"lineNumber":26,"author":{"gitId":"david-eom"},"content":"import socialite.testutil.PersonBuilder;","lastModifiedDate":"2021-10-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"public class AddCommandTest {","lastModifiedDate":"2017-05-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public void constructor_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":32,"author":{"gitId":"david-eom"},"content":"        Assert.assertThrows(NullPointerException.class, () -\u003e new AddCommand(null));","lastModifiedDate":"2021-10-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public void execute_personAcceptedByModel_addSuccessful() throws Exception {","lastModifiedDate":"2017-05-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        ModelStubAcceptingPersonAdded modelStub \u003d new ModelStubAcceptingPersonAdded();","lastModifiedDate":"2017-05-12"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        Person validPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2017-05-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        CommandResult commandResult \u003d new AddCommand(validPerson).execute(modelStub);","lastModifiedDate":"2019-01-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        assertEquals(String.format(AddCommand.MESSAGE_SUCCESS, validPerson), commandResult.getFeedbackToUser());","lastModifiedDate":"2018-12-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertEquals(Arrays.asList(validPerson), modelStub.personsAdded);","lastModifiedDate":"2017-05-12"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public void execute_duplicatePerson_throwsCommandException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        Person validPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2017-05-12"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        AddCommand addCommand \u003d new AddCommand(validPerson);","lastModifiedDate":"2018-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        ModelStub modelStub \u003d new ModelStubWithPerson(validPerson);","lastModifiedDate":"2018-08-07"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":52,"author":{"gitId":"david-eom"},"content":"        Assert.assertThrows(CommandException.class,","lastModifiedDate":"2021-10-09"},{"lineNumber":53,"author":{"gitId":"david-eom"},"content":"                AddCommand.MESSAGE_DUPLICATE_PERSON, () -\u003e addCommand.execute(modelStub));","lastModifiedDate":"2021-10-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-22"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        Person alice \u003d new PersonBuilder().withName(\"Alice\").build();","lastModifiedDate":"2017-06-22"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        Person bob \u003d new PersonBuilder().withName(\"Bob\").build();","lastModifiedDate":"2017-06-22"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        AddCommand addAliceCommand \u003d new AddCommand(alice);","lastModifiedDate":"2017-06-22"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        AddCommand addBobCommand \u003d new AddCommand(bob);","lastModifiedDate":"2017-06-22"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-22"},{"lineNumber":64,"author":{"gitId":"david-eom"},"content":"        assertEquals(addAliceCommand, addAliceCommand);","lastModifiedDate":"2021-10-21"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-22"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        AddCommand addAliceCommandCopy \u003d new AddCommand(alice);","lastModifiedDate":"2017-06-22"},{"lineNumber":68,"author":{"gitId":"david-eom"},"content":"        assertEquals(addAliceCommand, addAliceCommandCopy);","lastModifiedDate":"2021-10-21"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":71,"author":{"gitId":"david-eom"},"content":"        assertNotEquals(1, addAliceCommand);","lastModifiedDate":"2021-10-21"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":74,"author":{"gitId":"david-eom"},"content":"        assertNotEquals(null, addAliceCommand);","lastModifiedDate":"2021-10-21"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":77,"author":{"gitId":"david-eom"},"content":"        assertNotEquals(addAliceCommand, addBobCommand);","lastModifiedDate":"2021-10-21"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-22"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     * A default model stub that have all of the methods failing.","lastModifiedDate":"2017-05-12"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    private class ModelStub implements Model {","lastModifiedDate":"2017-05-12"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":86,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2018-11-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":96,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":101,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        public Path getAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":106,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        public void setAddressBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2018-11-27"},{"lineNumber":111,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-11-27"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-11-27"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        public void addPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":116,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        public void setAddressBook(ReadOnlyAddressBook newData) {","lastModifiedDate":"2018-11-27"},{"lineNumber":121,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2017-05-12"},{"lineNumber":126,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-08-06"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-06"},{"lineNumber":131,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-06"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        public void deletePerson(Person target) {","lastModifiedDate":"2018-08-08"},{"lineNumber":136,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-17"},{"lineNumber":141,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":146,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        public void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate) {","lastModifiedDate":"2018-01-10"},{"lineNumber":151,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":153,"author":{"gitId":"david-eom"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":154,"author":{"gitId":"david-eom"},"content":"        @Override","lastModifiedDate":"2021-10-21"},{"lineNumber":155,"author":{"gitId":"david-eom"},"content":"        public ReadOnlyCommandHistory getCommandHistory() {","lastModifiedDate":"2021-10-21"},{"lineNumber":156,"author":{"gitId":"david-eom"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-21"},{"lineNumber":157,"author":{"gitId":"david-eom"},"content":"        }","lastModifiedDate":"2021-10-21"},{"lineNumber":158,"author":{"gitId":"david-eom"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":159,"author":{"gitId":"david-eom"},"content":"        @Override","lastModifiedDate":"2021-10-21"},{"lineNumber":160,"author":{"gitId":"david-eom"},"content":"        public void addCommandToHistory(String command) {","lastModifiedDate":"2021-10-22"},{"lineNumber":161,"author":{"gitId":"david-eom"},"content":"            throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-21"},{"lineNumber":162,"author":{"gitId":"david-eom"},"content":"        }","lastModifiedDate":"2021-10-21"},{"lineNumber":163,"author":{"gitId":"Zacchua"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":164,"author":{"gitId":"Zacchua"},"content":"        @Override","lastModifiedDate":"2021-10-26"},{"lineNumber":165,"author":{"gitId":"Zacchua"},"content":"        public void deleteProfilePicture(Path name) {","lastModifiedDate":"2021-10-26"},{"lineNumber":166,"author":{"gitId":"Zacchua"},"content":"            throw new AssertionError(\"This method should not be called\");","lastModifiedDate":"2021-10-26"},{"lineNumber":167,"author":{"gitId":"Zacchua"},"content":"        }","lastModifiedDate":"2021-10-26"},{"lineNumber":168,"author":{"gitId":"Zacchua"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":169,"author":{"gitId":"Zacchua"},"content":"        @Override","lastModifiedDate":"2021-10-26"},{"lineNumber":170,"author":{"gitId":"Zacchua"},"content":"        public void saveProfilePicture(File file, String name) {","lastModifiedDate":"2021-10-26"},{"lineNumber":171,"author":{"gitId":"Zacchua"},"content":"            throw new AssertionError(\"This method should not be called\");","lastModifiedDate":"2021-10-26"},{"lineNumber":172,"author":{"gitId":"Zacchua"},"content":"        }","lastModifiedDate":"2021-10-26"},{"lineNumber":173,"author":{"gitId":"Zacchua"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":174,"author":{"gitId":"Zacchua"},"content":"        @Override","lastModifiedDate":"2021-10-27"},{"lineNumber":175,"author":{"gitId":"Zacchua"},"content":"        public ProfilePictureSyncModel.ProfilePictureEditDescriptor getProfilePictureEditDescriptor() {","lastModifiedDate":"2021-10-27"},{"lineNumber":176,"author":{"gitId":"Zacchua"},"content":"            throw new AssertionError(\"This method should not be called\");","lastModifiedDate":"2021-10-27"},{"lineNumber":177,"author":{"gitId":"Zacchua"},"content":"        }","lastModifiedDate":"2021-10-27"},{"lineNumber":178,"author":{"gitId":"Zacchua"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":179,"author":{"gitId":"Zacchua"},"content":"        @Override","lastModifiedDate":"2021-10-27"},{"lineNumber":180,"author":{"gitId":"Zacchua"},"content":"        public void clearProfilePictureModel() {","lastModifiedDate":"2021-10-27"},{"lineNumber":181,"author":{"gitId":"Zacchua"},"content":"            throw new AssertionError(\"This method should not be called\");","lastModifiedDate":"2021-10-27"},{"lineNumber":182,"author":{"gitId":"Zacchua"},"content":"        }","lastModifiedDate":"2021-10-27"},{"lineNumber":183,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":185,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":186,"author":{"gitId":"-"},"content":"     * A Model stub that contains a single person.","lastModifiedDate":"2018-08-07"},{"lineNumber":187,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":188,"author":{"gitId":"-"},"content":"    private class ModelStubWithPerson extends ModelStub {","lastModifiedDate":"2018-08-07"},{"lineNumber":189,"author":{"gitId":"-"},"content":"        private final Person person;","lastModifiedDate":"2018-08-07"},{"lineNumber":190,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":191,"author":{"gitId":"-"},"content":"        ModelStubWithPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":192,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":193,"author":{"gitId":"-"},"content":"            this.person \u003d person;","lastModifiedDate":"2018-08-07"},{"lineNumber":194,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":196,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-04"},{"lineNumber":197,"author":{"gitId":"-"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":198,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":199,"author":{"gitId":"-"},"content":"            return this.person.isSamePerson(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":200,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-04"},{"lineNumber":201,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":202,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":203,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-12"},{"lineNumber":204,"author":{"gitId":"-"},"content":"     * A Model stub that always accept the person being added.","lastModifiedDate":"2017-05-12"},{"lineNumber":205,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-12"},{"lineNumber":206,"author":{"gitId":"-"},"content":"    private class ModelStubAcceptingPersonAdded extends ModelStub {","lastModifiedDate":"2017-05-12"},{"lineNumber":207,"author":{"gitId":"-"},"content":"        final ArrayList\u003cPerson\u003e personsAdded \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2017-05-12"},{"lineNumber":208,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":209,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-08-07"},{"lineNumber":210,"author":{"gitId":"-"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-07"},{"lineNumber":211,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-08-07"},{"lineNumber":212,"author":{"gitId":"-"},"content":"            return personsAdded.stream().anyMatch(person::isSamePerson);","lastModifiedDate":"2018-08-07"},{"lineNumber":213,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":214,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":215,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-12"},{"lineNumber":216,"author":{"gitId":"-"},"content":"        public void addPerson(Person person) {","lastModifiedDate":"2018-08-08"},{"lineNumber":217,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2018-01-10"},{"lineNumber":218,"author":{"gitId":"-"},"content":"            personsAdded.add(person);","lastModifiedDate":"2018-01-10"},{"lineNumber":219,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-12"},{"lineNumber":220,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":221,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-04"},{"lineNumber":222,"author":{"gitId":"-"},"content":"        public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2017-05-04"},{"lineNumber":223,"author":{"gitId":"-"},"content":"            return new AddressBook();","lastModifiedDate":"2017-05-04"},{"lineNumber":224,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-04"},{"lineNumber":225,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":226,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":227,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-12"}],"authorContributionMap":{"Zacchua":22,"david-eom":30,"-":175}},{"path":"src/test/java/socialite/logic/commands/ClearCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"david-eom"},"content":"package socialite.logic.commands;","lastModifiedDate":"2021-10-08"},{"lineNumber":2,"author":{"gitId":"david-eom"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":3,"author":{"gitId":"david-eom"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-08"},{"lineNumber":4,"author":{"gitId":"david-eom"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":5,"author":{"gitId":"david-eom"},"content":"import socialite.model.AddressBook;","lastModifiedDate":"2021-10-08"},{"lineNumber":6,"author":{"gitId":"david-eom"},"content":"import socialite.model.CommandHistory;","lastModifiedDate":"2021-10-21"},{"lineNumber":7,"author":{"gitId":"david-eom"},"content":"import socialite.model.Model;","lastModifiedDate":"2021-10-08"},{"lineNumber":8,"author":{"gitId":"david-eom"},"content":"import socialite.model.ModelManager;","lastModifiedDate":"2021-10-08"},{"lineNumber":9,"author":{"gitId":"david-eom"},"content":"import socialite.model.UserPrefs;","lastModifiedDate":"2021-10-08"},{"lineNumber":10,"author":{"gitId":"david-eom"},"content":"import socialite.testutil.TypicalPersons;","lastModifiedDate":"2021-10-08"},{"lineNumber":11,"author":{"gitId":"david-eom"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":12,"author":{"gitId":"david-eom"},"content":"public class ClearCommandTest {","lastModifiedDate":"2021-10-08"},{"lineNumber":13,"author":{"gitId":"david-eom"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":14,"author":{"gitId":"david-eom"},"content":"    @Test","lastModifiedDate":"2021-10-08"},{"lineNumber":15,"author":{"gitId":"david-eom"},"content":"    public void execute_emptyAddressBook_success() {","lastModifiedDate":"2021-10-08"},{"lineNumber":16,"author":{"gitId":"david-eom"},"content":"        Model model \u003d new ModelManager();","lastModifiedDate":"2021-10-08"},{"lineNumber":17,"author":{"gitId":"david-eom"},"content":"        Model expectedModel \u003d new ModelManager();","lastModifiedDate":"2021-10-08"},{"lineNumber":18,"author":{"gitId":"david-eom"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":19,"author":{"gitId":"david-eom"},"content":"        CommandTestUtil.assertCommandSuccess(new ClearCommand(), model, ClearCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2021-10-08"},{"lineNumber":20,"author":{"gitId":"david-eom"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":21,"author":{"gitId":"david-eom"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":22,"author":{"gitId":"david-eom"},"content":"    @Test","lastModifiedDate":"2021-10-08"},{"lineNumber":23,"author":{"gitId":"david-eom"},"content":"    public void execute_nonEmptyAddressBook_success() {","lastModifiedDate":"2021-10-08"},{"lineNumber":24,"author":{"gitId":"david-eom"},"content":"        Model model \u003d","lastModifiedDate":"2021-10-21"},{"lineNumber":25,"author":{"gitId":"Zacchua"},"content":"                new ModelManager(","lastModifiedDate":"2021-10-26"},{"lineNumber":26,"author":{"gitId":"Zacchua"},"content":"                        TypicalPersons.getTypicalAddressBook(), new UserPrefs(), new CommandHistory());","lastModifiedDate":"2021-10-27"},{"lineNumber":27,"author":{"gitId":"david-eom"},"content":"        Model expectedModel \u003d","lastModifiedDate":"2021-10-21"},{"lineNumber":28,"author":{"gitId":"Zacchua"},"content":"                new ModelManager(","lastModifiedDate":"2021-10-26"},{"lineNumber":29,"author":{"gitId":"Zacchua"},"content":"                        TypicalPersons.getTypicalAddressBook(), new UserPrefs(), new CommandHistory());","lastModifiedDate":"2021-10-27"},{"lineNumber":30,"author":{"gitId":"david-eom"},"content":"        expectedModel.setAddressBook(new AddressBook());","lastModifiedDate":"2021-10-08"},{"lineNumber":31,"author":{"gitId":"david-eom"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":32,"author":{"gitId":"david-eom"},"content":"        CommandTestUtil.assertCommandSuccess(new ClearCommand(), model, ClearCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2021-10-08"},{"lineNumber":33,"author":{"gitId":"david-eom"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":34,"author":{"gitId":"david-eom"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":35,"author":{"gitId":"david-eom"},"content":"}","lastModifiedDate":"2021-10-08"}],"authorContributionMap":{"Zacchua":4,"david-eom":31}},{"path":"src/test/java/socialite/logic/commands/CommandResultTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"david-eom"},"content":"package socialite.logic.commands;","lastModifiedDate":"2021-10-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class CommandResultTest {","lastModifiedDate":"2018-12-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-12-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-12-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        CommandResult commandResult \u003d new CommandResult(\"feedback\");","lastModifiedDate":"2018-12-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2018-12-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        assertTrue(commandResult.equals(new CommandResult(\"feedback\")));","lastModifiedDate":"2018-12-09"},{"lineNumber":17,"author":{"gitId":"Zacchua"},"content":"        assertTrue(commandResult.equals(new CommandResult(\"feedback\", false, false, false)));","lastModifiedDate":"2021-10-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2018-12-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        assertTrue(commandResult.equals(commandResult));","lastModifiedDate":"2018-12-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertFalse(commandResult.equals(null));","lastModifiedDate":"2018-12-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        assertFalse(commandResult.equals(0.5f));","lastModifiedDate":"2018-12-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        // different feedbackToUser value -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertFalse(commandResult.equals(new CommandResult(\"different\")));","lastModifiedDate":"2018-12-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // different showHelp value -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":32,"author":{"gitId":"Zacchua"},"content":"        assertFalse(commandResult.equals(new CommandResult(\"feedback\", true, false, false)));","lastModifiedDate":"2021-10-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        // different exit value -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":35,"author":{"gitId":"Zacchua"},"content":"        assertFalse(commandResult.equals(new CommandResult(\"feedback\", false, true, false)));","lastModifiedDate":"2021-10-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-12-09"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public void hashcode() {","lastModifiedDate":"2018-12-09"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        CommandResult commandResult \u003d new CommandResult(\"feedback\");","lastModifiedDate":"2018-12-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        // same values -\u003e returns same hashcode","lastModifiedDate":"2018-12-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertEquals(commandResult.hashCode(), new CommandResult(\"feedback\").hashCode());","lastModifiedDate":"2018-12-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        // different feedbackToUser value -\u003e returns different hashcode","lastModifiedDate":"2018-12-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertNotEquals(commandResult.hashCode(), new CommandResult(\"different\").hashCode());","lastModifiedDate":"2018-12-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        // different showHelp value -\u003e returns different hashcode","lastModifiedDate":"2018-12-09"},{"lineNumber":49,"author":{"gitId":"david-eom"},"content":"        assertNotEquals(commandResult.hashCode(),","lastModifiedDate":"2021-10-09"},{"lineNumber":50,"author":{"gitId":"Zacchua"},"content":"                new CommandResult(\"feedback\", true, false, false).hashCode());","lastModifiedDate":"2021-10-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        // different exit value -\u003e returns different hashcode","lastModifiedDate":"2018-12-09"},{"lineNumber":53,"author":{"gitId":"david-eom"},"content":"        assertNotEquals(commandResult.hashCode(),","lastModifiedDate":"2021-10-09"},{"lineNumber":54,"author":{"gitId":"Zacchua"},"content":"                new CommandResult(\"feedback\", false, true, false).hashCode());","lastModifiedDate":"2021-10-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":56,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-12-09"}],"authorContributionMap":{"Zacchua":5,"david-eom":3,"-":48}},{"path":"src/test/java/socialite/logic/commands/CommandTestUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"david-eom"},"content":"package socialite.logic.commands;","lastModifiedDate":"2021-10-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-06-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-07-20"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":10,"author":{"gitId":"david-eom"},"content":"import socialite.commons.core.index.Index;","lastModifiedDate":"2021-10-08"},{"lineNumber":11,"author":{"gitId":"david-eom"},"content":"import socialite.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-10-08"},{"lineNumber":12,"author":{"gitId":"david-eom"},"content":"import socialite.logic.parser.CliSyntax;","lastModifiedDate":"2021-10-09"},{"lineNumber":13,"author":{"gitId":"david-eom"},"content":"import socialite.model.AddressBook;","lastModifiedDate":"2021-10-08"},{"lineNumber":14,"author":{"gitId":"david-eom"},"content":"import socialite.model.Model;","lastModifiedDate":"2021-10-08"},{"lineNumber":15,"author":{"gitId":"david-eom"},"content":"import socialite.model.person.ContainsKeywordsPredicate;","lastModifiedDate":"2021-10-23"},{"lineNumber":16,"author":{"gitId":"david-eom"},"content":"import socialite.model.person.Person;","lastModifiedDate":"2021-10-08"},{"lineNumber":17,"author":{"gitId":"david-eom"},"content":"import socialite.testutil.Assert;","lastModifiedDate":"2021-10-08"},{"lineNumber":18,"author":{"gitId":"david-eom"},"content":"import socialite.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2021-10-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":" * Contains helper methods for testing commands.","lastModifiedDate":"2017-06-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"public class CommandTestUtil {","lastModifiedDate":"2017-06-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public static final String VALID_NAME_AMY \u003d \"Amy Bee\";","lastModifiedDate":"2017-07-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static final String VALID_NAME_BOB \u003d \"Bob Choo\";","lastModifiedDate":"2017-07-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public static final String VALID_PHONE_AMY \u003d \"11111111\";","lastModifiedDate":"2017-07-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public static final String VALID_PHONE_BOB \u003d \"22222222\";","lastModifiedDate":"2017-07-05"},{"lineNumber":29,"author":{"gitId":"EssWhyy"},"content":"    public static final String VALID_REMARK_AMY \u003d \"Like skiing.\";","lastModifiedDate":"2021-10-12"},{"lineNumber":30,"author":{"gitId":"EssWhyy"},"content":"    public static final String VALID_REMARK_BOB \u003d \"Favourite pastime: Eating\";","lastModifiedDate":"2021-10-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public static final String VALID_TAG_HUSBAND \u003d \"husband\";","lastModifiedDate":"2017-07-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public static final String VALID_TAG_FRIEND \u003d \"friend\";","lastModifiedDate":"2017-07-05"},{"lineNumber":33,"author":{"gitId":"stanley-1"},"content":"    public static final String VALID_FACEBOOK_AMY \u003d \"amy.facebook\";","lastModifiedDate":"2021-10-11"},{"lineNumber":34,"author":{"gitId":"stanley-1"},"content":"    public static final String VALID_FACEBOOK_BOB \u003d \"bob.facebook\";","lastModifiedDate":"2021-10-11"},{"lineNumber":35,"author":{"gitId":"stanley-1"},"content":"    public static final String VALID_INSTAGRAM_AMY \u003d \"amy.insta\";","lastModifiedDate":"2021-10-11"},{"lineNumber":36,"author":{"gitId":"stanley-1"},"content":"    public static final String VALID_INSTAGRAM_BOB \u003d \"bob.insta\";","lastModifiedDate":"2021-10-11"},{"lineNumber":37,"author":{"gitId":"david-eom"},"content":"    public static final String VALID_TELEGRAM_AMY \u003d \"amy_telegram\";","lastModifiedDate":"2021-10-09"},{"lineNumber":38,"author":{"gitId":"david-eom"},"content":"    public static final String VALID_TELEGRAM_BOB \u003d \"bob_telegram\";","lastModifiedDate":"2021-10-09"},{"lineNumber":39,"author":{"gitId":"Zacchua"},"content":"    public static final String VALID_TIKTOK_AMY \u003d \"amy.bee\";","lastModifiedDate":"2021-10-12"},{"lineNumber":40,"author":{"gitId":"Zacchua"},"content":"    public static final String VALID_TIKTOK_BOB \u003d \"bob.choo\";","lastModifiedDate":"2021-10-12"},{"lineNumber":41,"author":{"gitId":"Zacchua"},"content":"    public static final String VALID_TWITTER_AMY \u003d \"amy_bee\";","lastModifiedDate":"2021-10-12"},{"lineNumber":42,"author":{"gitId":"Zacchua"},"content":"    public static final String VALID_TWITTER_BOB \u003d \"bob_chOo99\";","lastModifiedDate":"2021-10-12"},{"lineNumber":43,"author":{"gitId":"bnjmnt4n"},"content":"    public static final String VALID_DATE_AMY \u003d \"bbbbday:1965-03-03\";","lastModifiedDate":"2021-10-23"},{"lineNumber":44,"author":{"gitId":"bnjmnt4n"},"content":"    public static final String VALID_DATE_BOB \u003d \"bday:1999-03-03\";","lastModifiedDate":"2021-10-23"},{"lineNumber":45,"author":{"gitId":"bnjmnt4n"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":47,"author":{"gitId":"david-eom"},"content":"    public static final String NAME_DESC_AMY \u003d \" \" + CliSyntax.PREFIX_NAME + VALID_NAME_AMY;","lastModifiedDate":"2021-10-08"},{"lineNumber":48,"author":{"gitId":"david-eom"},"content":"    public static final String NAME_DESC_BOB \u003d \" \" + CliSyntax.PREFIX_NAME + VALID_NAME_BOB;","lastModifiedDate":"2021-10-08"},{"lineNumber":49,"author":{"gitId":"david-eom"},"content":"    public static final String PHONE_DESC_AMY \u003d \" \" + CliSyntax.PREFIX_PHONE + VALID_PHONE_AMY;","lastModifiedDate":"2021-10-08"},{"lineNumber":50,"author":{"gitId":"david-eom"},"content":"    public static final String PHONE_DESC_BOB \u003d \" \" + CliSyntax.PREFIX_PHONE + VALID_PHONE_BOB;","lastModifiedDate":"2021-10-08"},{"lineNumber":51,"author":{"gitId":"david-eom"},"content":"    public static final String REMARK_DESC_AMY \u003d \" \" + CliSyntax.PREFIX_REMARK + VALID_REMARK_AMY;","lastModifiedDate":"2021-10-13"},{"lineNumber":52,"author":{"gitId":"david-eom"},"content":"    public static final String REMARK_DESC_BOB \u003d \" \" + CliSyntax.PREFIX_REMARK + VALID_REMARK_BOB;","lastModifiedDate":"2021-10-13"},{"lineNumber":53,"author":{"gitId":"david-eom"},"content":"    public static final String TAG_DESC_FRIEND \u003d \" \" + CliSyntax.PREFIX_TAG + VALID_TAG_FRIEND;","lastModifiedDate":"2021-10-08"},{"lineNumber":54,"author":{"gitId":"david-eom"},"content":"    public static final String TAG_DESC_HUSBAND \u003d \" \" + CliSyntax.PREFIX_TAG + VALID_TAG_HUSBAND;","lastModifiedDate":"2021-10-08"},{"lineNumber":55,"author":{"gitId":"stanley-1"},"content":"    public static final String FACEBOOK_DESC_AMY \u003d \" \" + CliSyntax.PREFIX_FACEBOOK + VALID_FACEBOOK_AMY;","lastModifiedDate":"2021-10-11"},{"lineNumber":56,"author":{"gitId":"stanley-1"},"content":"    public static final String FACEBOOK_DESC_BOB \u003d \" \" + CliSyntax.PREFIX_FACEBOOK + VALID_FACEBOOK_BOB;","lastModifiedDate":"2021-10-11"},{"lineNumber":57,"author":{"gitId":"stanley-1"},"content":"    public static final String INSTAGRAM_DESC_AMY \u003d \" \" + CliSyntax.PREFIX_INSTAGRAM + VALID_INSTAGRAM_AMY;","lastModifiedDate":"2021-10-11"},{"lineNumber":58,"author":{"gitId":"stanley-1"},"content":"    public static final String INSTAGRAM_DESC_BOB \u003d \" \" + CliSyntax.PREFIX_INSTAGRAM + VALID_INSTAGRAM_BOB;","lastModifiedDate":"2021-10-11"},{"lineNumber":59,"author":{"gitId":"david-eom"},"content":"    public static final String TELEGRAM_DESC_AMY \u003d \" \" + CliSyntax.PREFIX_TELEGRAM + VALID_TELEGRAM_AMY;","lastModifiedDate":"2021-10-09"},{"lineNumber":60,"author":{"gitId":"david-eom"},"content":"    public static final String TELEGRAM_DESC_BOB \u003d \" \" + CliSyntax.PREFIX_TELEGRAM + VALID_TELEGRAM_BOB;","lastModifiedDate":"2021-10-09"},{"lineNumber":61,"author":{"gitId":"Zacchua"},"content":"    public static final String TIKTOK_DESC_AMY \u003d \" \" + CliSyntax.PREFIX_TIKTOK + VALID_TIKTOK_AMY;","lastModifiedDate":"2021-10-12"},{"lineNumber":62,"author":{"gitId":"Zacchua"},"content":"    public static final String TIKTOK_DESC_BOB \u003d \" \" + CliSyntax.PREFIX_TIKTOK + VALID_TIKTOK_BOB;","lastModifiedDate":"2021-10-12"},{"lineNumber":63,"author":{"gitId":"Zacchua"},"content":"    public static final String TWITTER_DESC_AMY \u003d \" \" + CliSyntax.PREFIX_TWITTER + VALID_TWITTER_AMY;","lastModifiedDate":"2021-10-12"},{"lineNumber":64,"author":{"gitId":"Zacchua"},"content":"    public static final String TWITTER_DESC_BOB \u003d \" \" + CliSyntax.PREFIX_TWITTER + VALID_TWITTER_BOB;","lastModifiedDate":"2021-10-12"},{"lineNumber":65,"author":{"gitId":"bnjmnt4n"},"content":"    public static final String DATE_DESC_AMY \u003d \" \" + CliSyntax.PREFIX_DATE + VALID_DATE_AMY;","lastModifiedDate":"2021-10-23"},{"lineNumber":66,"author":{"gitId":"bnjmnt4n"},"content":"    public static final String DATE_DESC_BOB \u003d \" \" + CliSyntax.PREFIX_DATE + VALID_DATE_BOB;","lastModifiedDate":"2021-10-23"},{"lineNumber":67,"author":{"gitId":"david-eom"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":68,"author":{"gitId":"david-eom"},"content":"    // \u0027\u0026\u0027 not allowed in names","lastModifiedDate":"2021-10-09"},{"lineNumber":69,"author":{"gitId":"david-eom"},"content":"    public static final String INVALID_NAME_DESC \u003d \" \" + CliSyntax.PREFIX_NAME + \"James\u0026\";","lastModifiedDate":"2021-10-09"},{"lineNumber":70,"author":{"gitId":"david-eom"},"content":"    // \u0027a\u0027 not allowed in phones","lastModifiedDate":"2021-10-09"},{"lineNumber":71,"author":{"gitId":"david-eom"},"content":"    public static final String INVALID_PHONE_DESC \u003d \" \" + CliSyntax.PREFIX_PHONE + \"911a\";","lastModifiedDate":"2021-10-09"},{"lineNumber":72,"author":{"gitId":"david-eom"},"content":"    // \u0027*\u0027 not allowed in tags","lastModifiedDate":"2021-10-09"},{"lineNumber":73,"author":{"gitId":"david-eom"},"content":"    public static final String INVALID_TAG_DESC \u003d \" \" + CliSyntax.PREFIX_TAG + \"hubby*\";","lastModifiedDate":"2021-10-09"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    public static final String PREAMBLE_WHITESPACE \u003d \"\\t  \\r  \\n\";","lastModifiedDate":"2017-12-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public static final String PREAMBLE_NON_EMPTY \u003d \"NonEmptyPreamble\";","lastModifiedDate":"2017-12-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public static final EditCommand.EditPersonDescriptor DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public static final EditCommand.EditPersonDescriptor DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    static {","lastModifiedDate":"2017-07-05"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        DESC_AMY \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_AMY)","lastModifiedDate":"2017-07-05"},{"lineNumber":83,"author":{"gitId":"bnjmnt4n"},"content":"                .withPhone(VALID_PHONE_AMY).withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2021-10-12"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        DESC_BOB \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB)","lastModifiedDate":"2017-07-05"},{"lineNumber":85,"author":{"gitId":"bnjmnt4n"},"content":"                .withPhone(VALID_PHONE_BOB).withTags(VALID_TAG_HUSBAND, VALID_TAG_FRIEND).build();","lastModifiedDate":"2021-10-12"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-05"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     * - the returned {@link CommandResult} matches {@code expectedCommandResult} \u003cbr\u003e","lastModifiedDate":"2018-12-09"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     * - the {@code actualModel} matches {@code expectedModel}","lastModifiedDate":"2019-01-25"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    public static void assertCommandSuccess(Command command, Model actualModel, CommandResult expectedCommandResult,","lastModifiedDate":"2019-01-25"},{"lineNumber":94,"author":{"gitId":"-"},"content":"                                            Model expectedModel) {","lastModifiedDate":"2019-01-25"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-08-15"},{"lineNumber":96,"author":{"gitId":"-"},"content":"            CommandResult result \u003d command.execute(actualModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":97,"author":{"gitId":"-"},"content":"            assertEquals(expectedCommandResult, result);","lastModifiedDate":"2018-12-09"},{"lineNumber":98,"author":{"gitId":"-"},"content":"            assertEquals(expectedModel, actualModel);","lastModifiedDate":"2017-06-05"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        } catch (CommandException ce) {","lastModifiedDate":"2017-08-15"},{"lineNumber":100,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"Execution of command should not fail.\", ce);","lastModifiedDate":"2017-08-15"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-08-15"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     * Convenience wrapper to {@link #assertCommandSuccess(Command, Model, CommandResult, Model)}","lastModifiedDate":"2019-01-25"},{"lineNumber":106,"author":{"gitId":"-"},"content":"     * that takes a string {@code expectedMessage}.","lastModifiedDate":"2018-12-09"},{"lineNumber":107,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    public static void assertCommandSuccess(Command command, Model actualModel, String expectedMessage,","lastModifiedDate":"2019-01-25"},{"lineNumber":109,"author":{"gitId":"-"},"content":"            Model expectedModel) {","lastModifiedDate":"2019-01-25"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(expectedMessage);","lastModifiedDate":"2018-12-09"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, actualModel, expectedCommandResult, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":115,"author":{"gitId":"-"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":116,"author":{"gitId":"-"},"content":"     * - a {@code CommandException} is thrown \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":117,"author":{"gitId":"-"},"content":"     * - the CommandException message matches {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":118,"author":{"gitId":"-"},"content":"     * - the address book, filtered person list and selected person in {@code actualModel} remain unchanged","lastModifiedDate":"2019-01-25"},{"lineNumber":119,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    public static void assertCommandFailure(Command command, Model actualModel, String expectedMessage) {","lastModifiedDate":"2019-01-25"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        // we are unable to defensively copy the model for comparison later, so we can","lastModifiedDate":"2017-06-05"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        // only do so by copying its components.","lastModifiedDate":"2017-06-05"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        AddressBook expectedAddressBook \u003d new AddressBook(actualModel.getAddressBook());","lastModifiedDate":"2017-06-05"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e expectedFilteredList \u003d new ArrayList\u003c\u003e(actualModel.getFilteredPersonList());","lastModifiedDate":"2018-01-10"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":126,"author":{"gitId":"david-eom"},"content":"        Assert.assertThrows(CommandException.class, expectedMessage, () -\u003e command.execute(actualModel));","lastModifiedDate":"2021-10-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        assertEquals(expectedAddressBook, actualModel.getAddressBook());","lastModifiedDate":"2017-06-05"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        assertEquals(expectedFilteredList, actualModel.getFilteredPersonList());","lastModifiedDate":"2017-06-05"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-20"},{"lineNumber":131,"author":{"gitId":"-"},"content":"     * Updates {@code model}\u0027s filtered list to show only the person at the given {@code targetIndex} in the","lastModifiedDate":"2018-01-31"},{"lineNumber":132,"author":{"gitId":"-"},"content":"     * {@code model}\u0027s address book.","lastModifiedDate":"2018-01-31"},{"lineNumber":133,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-20"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    public static void showPersonAtIndex(Model model, Index targetIndex) {","lastModifiedDate":"2018-01-31"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        assertTrue(targetIndex.getZeroBased() \u003c model.getFilteredPersonList().size());","lastModifiedDate":"2018-01-31"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-31"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        Person person \u003d model.getFilteredPersonList().get(targetIndex.getZeroBased());","lastModifiedDate":"2018-01-31"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        final String[] splitName \u003d person.getName().fullName.split(\"\\\\s+\");","lastModifiedDate":"2017-07-20"},{"lineNumber":139,"author":{"gitId":"david-eom"},"content":"        model.updateFilteredPersonList(new ContainsKeywordsPredicate(Arrays.asList(splitName[0])));","lastModifiedDate":"2021-10-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-20"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        assertEquals(1, model.getFilteredPersonList().size());","lastModifiedDate":"2018-02-08"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-20"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":144,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-05"}],"authorContributionMap":{"Zacchua":8,"EssWhyy":2,"bnjmnt4n":7,"david-eom":31,"-":88,"stanley-1":8}},{"path":"src/test/java/socialite/logic/commands/DeleteCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"david-eom"},"content":"package socialite.logic.commands;","lastModifiedDate":"2021-10-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":8,"author":{"gitId":"david-eom"},"content":"import socialite.commons.core.Messages;","lastModifiedDate":"2021-10-08"},{"lineNumber":9,"author":{"gitId":"david-eom"},"content":"import socialite.commons.core.index.Index;","lastModifiedDate":"2021-10-08"},{"lineNumber":10,"author":{"gitId":"david-eom"},"content":"import socialite.model.CommandHistory;","lastModifiedDate":"2021-10-21"},{"lineNumber":11,"author":{"gitId":"david-eom"},"content":"import socialite.model.Model;","lastModifiedDate":"2021-10-08"},{"lineNumber":12,"author":{"gitId":"david-eom"},"content":"import socialite.model.ModelManager;","lastModifiedDate":"2021-10-08"},{"lineNumber":13,"author":{"gitId":"david-eom"},"content":"import socialite.model.UserPrefs;","lastModifiedDate":"2021-10-08"},{"lineNumber":14,"author":{"gitId":"david-eom"},"content":"import socialite.model.person.Person;","lastModifiedDate":"2021-10-08"},{"lineNumber":15,"author":{"gitId":"david-eom"},"content":"import socialite.testutil.TypicalIndexes;","lastModifiedDate":"2021-10-08"},{"lineNumber":16,"author":{"gitId":"david-eom"},"content":"import socialite.testutil.TypicalPersons;","lastModifiedDate":"2021-10-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-05"},{"lineNumber":19,"author":{"gitId":"david-eom"},"content":" * Contains integration tests (interaction with the Model) and unit tests for {@code DeleteCommand}.","lastModifiedDate":"2021-10-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"public class DeleteCommandTest {","lastModifiedDate":"2017-06-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":23,"author":{"gitId":"david-eom"},"content":"    private Model model \u003d","lastModifiedDate":"2021-10-21"},{"lineNumber":24,"author":{"gitId":"Zacchua"},"content":"            new ModelManager(","lastModifiedDate":"2021-10-26"},{"lineNumber":25,"author":{"gitId":"Zacchua"},"content":"                    TypicalPersons.getTypicalAddressBook(), new UserPrefs(), new CommandHistory());","lastModifiedDate":"2021-10-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public void execute_validIndexUnfilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":29,"author":{"gitId":"david-eom"},"content":"        Person personToDelete \u003d model.getFilteredPersonList().get(TypicalIndexes.INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2021-10-08"},{"lineNumber":30,"author":{"gitId":"david-eom"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(TypicalIndexes.INDEX_FIRST_PERSON);","lastModifiedDate":"2021-10-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(DeleteCommand.MESSAGE_DELETE_PERSON_SUCCESS, personToDelete);","lastModifiedDate":"2017-06-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":34,"author":{"gitId":"Zacchua"},"content":"        ModelManager expectedModel \u003d new ModelManager(","lastModifiedDate":"2021-10-26"},{"lineNumber":35,"author":{"gitId":"Zacchua"},"content":"                model.getAddressBook(), new UserPrefs(), new CommandHistory());","lastModifiedDate":"2021-10-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        expectedModel.deletePerson(personToDelete);","lastModifiedDate":"2017-06-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":38,"author":{"gitId":"david-eom"},"content":"        CommandTestUtil.assertCommandSuccess(deleteCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2021-10-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public void execute_invalidIndexUnfilteredList_throwsCommandException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredPersonList().size() + 1);","lastModifiedDate":"2017-06-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(outOfBoundIndex);","lastModifiedDate":"2018-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":46,"author":{"gitId":"david-eom"},"content":"        CommandTestUtil.assertCommandFailure(deleteCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2021-10-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public void execute_validIndexFilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":51,"author":{"gitId":"david-eom"},"content":"        CommandTestUtil.showPersonAtIndex(model, TypicalIndexes.INDEX_FIRST_PERSON);","lastModifiedDate":"2021-10-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":53,"author":{"gitId":"david-eom"},"content":"        Person personToDelete \u003d model.getFilteredPersonList().get(TypicalIndexes.INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2021-10-08"},{"lineNumber":54,"author":{"gitId":"david-eom"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(TypicalIndexes.INDEX_FIRST_PERSON);","lastModifiedDate":"2021-10-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(DeleteCommand.MESSAGE_DELETE_PERSON_SUCCESS, personToDelete);","lastModifiedDate":"2017-06-05"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":58,"author":{"gitId":"Zacchua"},"content":"        Model expectedModel \u003d new ModelManager(","lastModifiedDate":"2021-10-26"},{"lineNumber":59,"author":{"gitId":"Zacchua"},"content":"                model.getAddressBook(), new UserPrefs(), new CommandHistory());","lastModifiedDate":"2021-10-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        expectedModel.deletePerson(personToDelete);","lastModifiedDate":"2017-06-05"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        showNoPerson(expectedModel);","lastModifiedDate":"2017-06-05"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":63,"author":{"gitId":"david-eom"},"content":"        CommandTestUtil.assertCommandSuccess(deleteCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2021-10-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public void execute_invalidIndexFilteredList_throwsCommandException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":68,"author":{"gitId":"david-eom"},"content":"        CommandTestUtil.showPersonAtIndex(model, TypicalIndexes.INDEX_FIRST_PERSON);","lastModifiedDate":"2021-10-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":70,"author":{"gitId":"david-eom"},"content":"        Index outOfBoundIndex \u003d TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2021-10-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        // ensures that outOfBoundIndex is still in bounds of address book list","lastModifiedDate":"2017-06-05"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getAddressBook().getPersonList().size());","lastModifiedDate":"2017-06-05"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        DeleteCommand deleteCommand \u003d new DeleteCommand(outOfBoundIndex);","lastModifiedDate":"2018-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":76,"author":{"gitId":"david-eom"},"content":"        CommandTestUtil.assertCommandFailure(deleteCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2021-10-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-01-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-08-08"},{"lineNumber":81,"author":{"gitId":"david-eom"},"content":"        DeleteCommand deleteFirstCommand \u003d new DeleteCommand(TypicalIndexes.INDEX_FIRST_PERSON);","lastModifiedDate":"2021-10-08"},{"lineNumber":82,"author":{"gitId":"david-eom"},"content":"        DeleteCommand deleteSecondCommand \u003d new DeleteCommand(TypicalIndexes.INDEX_SECOND_PERSON);","lastModifiedDate":"2021-10-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        assertTrue(deleteFirstCommand.equals(deleteFirstCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":88,"author":{"gitId":"david-eom"},"content":"        DeleteCommand deleteFirstCommandCopy \u003d new DeleteCommand(TypicalIndexes.INDEX_FIRST_PERSON);","lastModifiedDate":"2021-10-08"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        assertTrue(deleteFirstCommand.equals(deleteFirstCommandCopy));","lastModifiedDate":"2017-06-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(1));","lastModifiedDate":"2017-06-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(null));","lastModifiedDate":"2017-06-27"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(deleteSecondCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     * Updates {@code model}\u0027s filtered list to show no one.","lastModifiedDate":"2017-06-05"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    private void showNoPerson(Model model) {","lastModifiedDate":"2017-06-05"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(p -\u003e false);","lastModifiedDate":"2017-06-12"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        assertTrue(model.getFilteredPersonList().isEmpty());","lastModifiedDate":"2018-02-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":109,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-05"}],"authorContributionMap":{"Zacchua":6,"david-eom":26,"-":77}},{"path":"src/test/java/socialite/logic/commands/EditCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"david-eom"},"content":"package socialite.logic.commands;","lastModifiedDate":"2021-10-08"},{"lineNumber":2,"author":{"gitId":"david-eom"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":3,"author":{"gitId":"david-eom"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-10-08"},{"lineNumber":4,"author":{"gitId":"david-eom"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-08"},{"lineNumber":5,"author":{"gitId":"david-eom"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":6,"author":{"gitId":"david-eom"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-08"},{"lineNumber":7,"author":{"gitId":"david-eom"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":8,"author":{"gitId":"david-eom"},"content":"import socialite.commons.core.Messages;","lastModifiedDate":"2021-10-08"},{"lineNumber":9,"author":{"gitId":"david-eom"},"content":"import socialite.commons.core.index.Index;","lastModifiedDate":"2021-10-08"},{"lineNumber":10,"author":{"gitId":"david-eom"},"content":"import socialite.model.AddressBook;","lastModifiedDate":"2021-10-08"},{"lineNumber":11,"author":{"gitId":"david-eom"},"content":"import socialite.model.CommandHistory;","lastModifiedDate":"2021-10-21"},{"lineNumber":12,"author":{"gitId":"david-eom"},"content":"import socialite.model.Model;","lastModifiedDate":"2021-10-08"},{"lineNumber":13,"author":{"gitId":"david-eom"},"content":"import socialite.model.ModelManager;","lastModifiedDate":"2021-10-08"},{"lineNumber":14,"author":{"gitId":"david-eom"},"content":"import socialite.model.UserPrefs;","lastModifiedDate":"2021-10-08"},{"lineNumber":15,"author":{"gitId":"david-eom"},"content":"import socialite.model.person.Person;","lastModifiedDate":"2021-10-08"},{"lineNumber":16,"author":{"gitId":"david-eom"},"content":"import socialite.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2021-10-08"},{"lineNumber":17,"author":{"gitId":"david-eom"},"content":"import socialite.testutil.PersonBuilder;","lastModifiedDate":"2021-10-08"},{"lineNumber":18,"author":{"gitId":"david-eom"},"content":"import socialite.testutil.TypicalIndexes;","lastModifiedDate":"2021-10-08"},{"lineNumber":19,"author":{"gitId":"david-eom"},"content":"import socialite.testutil.TypicalPersons;","lastModifiedDate":"2021-10-08"},{"lineNumber":20,"author":{"gitId":"david-eom"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":21,"author":{"gitId":"david-eom"},"content":"/**","lastModifiedDate":"2021-10-08"},{"lineNumber":22,"author":{"gitId":"david-eom"},"content":" * Contains integration tests (interaction with the Model) and unit tests for EditCommand.","lastModifiedDate":"2021-10-08"},{"lineNumber":23,"author":{"gitId":"david-eom"},"content":" */","lastModifiedDate":"2021-10-08"},{"lineNumber":24,"author":{"gitId":"david-eom"},"content":"public class EditCommandTest {","lastModifiedDate":"2021-10-08"},{"lineNumber":25,"author":{"gitId":"david-eom"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":26,"author":{"gitId":"david-eom"},"content":"    private Model model \u003d","lastModifiedDate":"2021-10-21"},{"lineNumber":27,"author":{"gitId":"Zacchua"},"content":"            new ModelManager(","lastModifiedDate":"2021-10-26"},{"lineNumber":28,"author":{"gitId":"Zacchua"},"content":"                    TypicalPersons.getTypicalAddressBook(), new UserPrefs(), new CommandHistory());","lastModifiedDate":"2021-10-27"},{"lineNumber":29,"author":{"gitId":"david-eom"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":30,"author":{"gitId":"david-eom"},"content":"    @Test","lastModifiedDate":"2021-10-08"},{"lineNumber":31,"author":{"gitId":"david-eom"},"content":"    public void execute_allFieldsSpecifiedUnfilteredList_success() {","lastModifiedDate":"2021-10-08"},{"lineNumber":32,"author":{"gitId":"david-eom"},"content":"        Person editedPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2021-10-08"},{"lineNumber":33,"author":{"gitId":"david-eom"},"content":"        EditCommand.EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder(editedPerson).build();","lastModifiedDate":"2021-10-08"},{"lineNumber":34,"author":{"gitId":"david-eom"},"content":"        EditCommand editCommand \u003d new EditCommand(TypicalIndexes.INDEX_FIRST_PERSON, descriptor);","lastModifiedDate":"2021-10-08"},{"lineNumber":35,"author":{"gitId":"david-eom"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":36,"author":{"gitId":"david-eom"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PERSON_SUCCESS, editedPerson);","lastModifiedDate":"2021-10-08"},{"lineNumber":37,"author":{"gitId":"david-eom"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":38,"author":{"gitId":"david-eom"},"content":"        Model expectedModel \u003d","lastModifiedDate":"2021-10-21"},{"lineNumber":39,"author":{"gitId":"Zacchua"},"content":"                new ModelManager(","lastModifiedDate":"2021-10-26"},{"lineNumber":40,"author":{"gitId":"Zacchua"},"content":"                        new AddressBook(model.getAddressBook()), new UserPrefs(), new CommandHistory());","lastModifiedDate":"2021-10-27"},{"lineNumber":41,"author":{"gitId":"david-eom"},"content":"        expectedModel.setPerson(model.getFilteredPersonList().get(0), editedPerson);","lastModifiedDate":"2021-10-08"},{"lineNumber":42,"author":{"gitId":"david-eom"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":43,"author":{"gitId":"david-eom"},"content":"        CommandTestUtil.assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2021-10-08"},{"lineNumber":44,"author":{"gitId":"david-eom"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":45,"author":{"gitId":"david-eom"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":46,"author":{"gitId":"david-eom"},"content":"    @Test","lastModifiedDate":"2021-10-08"},{"lineNumber":47,"author":{"gitId":"david-eom"},"content":"    public void execute_someFieldsSpecifiedUnfilteredList_success() {","lastModifiedDate":"2021-10-08"},{"lineNumber":48,"author":{"gitId":"david-eom"},"content":"        Index indexLastPerson \u003d Index.fromOneBased(model.getFilteredPersonList().size());","lastModifiedDate":"2021-10-08"},{"lineNumber":49,"author":{"gitId":"david-eom"},"content":"        Person lastPerson \u003d model.getFilteredPersonList().get(indexLastPerson.getZeroBased());","lastModifiedDate":"2021-10-08"},{"lineNumber":50,"author":{"gitId":"david-eom"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":51,"author":{"gitId":"david-eom"},"content":"        PersonBuilder personInList \u003d new PersonBuilder(lastPerson);","lastModifiedDate":"2021-10-08"},{"lineNumber":52,"author":{"gitId":"david-eom"},"content":"        Person editedPerson \u003d personInList","lastModifiedDate":"2021-10-08"},{"lineNumber":53,"author":{"gitId":"david-eom"},"content":"                .withName(CommandTestUtil.VALID_NAME_BOB)","lastModifiedDate":"2021-10-08"},{"lineNumber":54,"author":{"gitId":"david-eom"},"content":"                .withPhone(CommandTestUtil.VALID_PHONE_BOB)","lastModifiedDate":"2021-10-08"},{"lineNumber":55,"author":{"gitId":"david-eom"},"content":"                .withTags(CommandTestUtil.VALID_TAG_HUSBAND)","lastModifiedDate":"2021-10-08"},{"lineNumber":56,"author":{"gitId":"david-eom"},"content":"                .build();","lastModifiedDate":"2021-10-08"},{"lineNumber":57,"author":{"gitId":"david-eom"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":58,"author":{"gitId":"david-eom"},"content":"        EditCommand.EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder()","lastModifiedDate":"2021-10-08"},{"lineNumber":59,"author":{"gitId":"david-eom"},"content":"                .withName(CommandTestUtil.VALID_NAME_BOB)","lastModifiedDate":"2021-10-08"},{"lineNumber":60,"author":{"gitId":"david-eom"},"content":"                .withPhone(CommandTestUtil.VALID_PHONE_BOB)","lastModifiedDate":"2021-10-08"},{"lineNumber":61,"author":{"gitId":"david-eom"},"content":"                .withTags(CommandTestUtil.VALID_TAG_HUSBAND)","lastModifiedDate":"2021-10-08"},{"lineNumber":62,"author":{"gitId":"david-eom"},"content":"                .build();","lastModifiedDate":"2021-10-08"},{"lineNumber":63,"author":{"gitId":"david-eom"},"content":"        EditCommand editCommand \u003d new EditCommand(indexLastPerson, descriptor);","lastModifiedDate":"2021-10-08"},{"lineNumber":64,"author":{"gitId":"david-eom"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":65,"author":{"gitId":"david-eom"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PERSON_SUCCESS, editedPerson);","lastModifiedDate":"2021-10-08"},{"lineNumber":66,"author":{"gitId":"david-eom"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":67,"author":{"gitId":"david-eom"},"content":"        Model expectedModel \u003d","lastModifiedDate":"2021-10-21"},{"lineNumber":68,"author":{"gitId":"Zacchua"},"content":"                new ModelManager(new AddressBook(","lastModifiedDate":"2021-10-26"},{"lineNumber":69,"author":{"gitId":"Zacchua"},"content":"                        model.getAddressBook()), new UserPrefs(), new CommandHistory());","lastModifiedDate":"2021-10-27"},{"lineNumber":70,"author":{"gitId":"david-eom"},"content":"        expectedModel.setPerson(lastPerson, editedPerson);","lastModifiedDate":"2021-10-08"},{"lineNumber":71,"author":{"gitId":"david-eom"},"content":"        expectedModel.updateFilteredPersonList(Model.PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2021-10-29"},{"lineNumber":72,"author":{"gitId":"david-eom"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":73,"author":{"gitId":"david-eom"},"content":"        CommandTestUtil.assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2021-10-08"},{"lineNumber":74,"author":{"gitId":"david-eom"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":75,"author":{"gitId":"david-eom"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":76,"author":{"gitId":"david-eom"},"content":"    @Test","lastModifiedDate":"2021-10-08"},{"lineNumber":77,"author":{"gitId":"david-eom"},"content":"    public void execute_noFieldSpecifiedUnfilteredList_success() {","lastModifiedDate":"2021-10-08"},{"lineNumber":78,"author":{"gitId":"david-eom"},"content":"        EditCommand editCommand \u003d","lastModifiedDate":"2021-10-08"},{"lineNumber":79,"author":{"gitId":"david-eom"},"content":"                new EditCommand(TypicalIndexes.INDEX_FIRST_PERSON, new EditCommand.EditPersonDescriptor());","lastModifiedDate":"2021-10-08"},{"lineNumber":80,"author":{"gitId":"david-eom"},"content":"        Person editedPerson \u003d model.getFilteredPersonList().get(TypicalIndexes.INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2021-10-08"},{"lineNumber":81,"author":{"gitId":"david-eom"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":82,"author":{"gitId":"david-eom"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PERSON_SUCCESS, editedPerson);","lastModifiedDate":"2021-10-08"},{"lineNumber":83,"author":{"gitId":"david-eom"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":84,"author":{"gitId":"david-eom"},"content":"        Model expectedModel \u003d","lastModifiedDate":"2021-10-21"},{"lineNumber":85,"author":{"gitId":"Zacchua"},"content":"                new ModelManager(","lastModifiedDate":"2021-10-26"},{"lineNumber":86,"author":{"gitId":"Zacchua"},"content":"                        new AddressBook(model.getAddressBook()), new UserPrefs(), new CommandHistory());","lastModifiedDate":"2021-10-27"},{"lineNumber":87,"author":{"gitId":"david-eom"},"content":"        expectedModel.updateFilteredPersonList(Model.PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2021-10-29"},{"lineNumber":88,"author":{"gitId":"david-eom"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":89,"author":{"gitId":"david-eom"},"content":"        CommandTestUtil.assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2021-10-08"},{"lineNumber":90,"author":{"gitId":"david-eom"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":91,"author":{"gitId":"david-eom"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":92,"author":{"gitId":"david-eom"},"content":"    @Test","lastModifiedDate":"2021-10-08"},{"lineNumber":93,"author":{"gitId":"david-eom"},"content":"    public void execute_filteredList_success() {","lastModifiedDate":"2021-10-08"},{"lineNumber":94,"author":{"gitId":"david-eom"},"content":"        CommandTestUtil.showPersonAtIndex(model, TypicalIndexes.INDEX_FIRST_PERSON);","lastModifiedDate":"2021-10-08"},{"lineNumber":95,"author":{"gitId":"david-eom"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":96,"author":{"gitId":"david-eom"},"content":"        Person personInFilteredList \u003d","lastModifiedDate":"2021-10-08"},{"lineNumber":97,"author":{"gitId":"david-eom"},"content":"                model.getFilteredPersonList().get(TypicalIndexes.INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2021-10-08"},{"lineNumber":98,"author":{"gitId":"david-eom"},"content":"        Person editedPerson \u003d new PersonBuilder(personInFilteredList).withName(CommandTestUtil.VALID_NAME_BOB).build();","lastModifiedDate":"2021-10-08"},{"lineNumber":99,"author":{"gitId":"david-eom"},"content":"        EditCommand editCommand \u003d new EditCommand(TypicalIndexes.INDEX_FIRST_PERSON,","lastModifiedDate":"2021-10-08"},{"lineNumber":100,"author":{"gitId":"david-eom"},"content":"                new EditPersonDescriptorBuilder().withName(CommandTestUtil.VALID_NAME_BOB).build());","lastModifiedDate":"2021-10-08"},{"lineNumber":101,"author":{"gitId":"david-eom"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":102,"author":{"gitId":"david-eom"},"content":"        String expectedMessage \u003d String.format(EditCommand.MESSAGE_EDIT_PERSON_SUCCESS, editedPerson);","lastModifiedDate":"2021-10-08"},{"lineNumber":103,"author":{"gitId":"david-eom"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":104,"author":{"gitId":"david-eom"},"content":"        Model expectedModel \u003d","lastModifiedDate":"2021-10-21"},{"lineNumber":105,"author":{"gitId":"Zacchua"},"content":"                new ModelManager(","lastModifiedDate":"2021-10-26"},{"lineNumber":106,"author":{"gitId":"Zacchua"},"content":"                        new AddressBook(model.getAddressBook()), new UserPrefs(), new CommandHistory());","lastModifiedDate":"2021-10-27"},{"lineNumber":107,"author":{"gitId":"david-eom"},"content":"        expectedModel.setPerson(model.getFilteredPersonList().get(0), editedPerson);","lastModifiedDate":"2021-10-08"},{"lineNumber":108,"author":{"gitId":"david-eom"},"content":"        expectedModel.updateFilteredPersonList(Model.PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2021-10-29"},{"lineNumber":109,"author":{"gitId":"david-eom"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":110,"author":{"gitId":"david-eom"},"content":"        CommandTestUtil.assertCommandSuccess(editCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2021-10-08"},{"lineNumber":111,"author":{"gitId":"david-eom"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":112,"author":{"gitId":"david-eom"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":113,"author":{"gitId":"david-eom"},"content":"    @Test","lastModifiedDate":"2021-10-08"},{"lineNumber":114,"author":{"gitId":"david-eom"},"content":"    public void execute_duplicatePersonUnfilteredList_failure() {","lastModifiedDate":"2021-10-08"},{"lineNumber":115,"author":{"gitId":"david-eom"},"content":"        Person firstPerson \u003d model.getFilteredPersonList().get(TypicalIndexes.INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2021-10-08"},{"lineNumber":116,"author":{"gitId":"david-eom"},"content":"        EditCommand.EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder(firstPerson).build();","lastModifiedDate":"2021-10-08"},{"lineNumber":117,"author":{"gitId":"david-eom"},"content":"        EditCommand editCommand \u003d new EditCommand(TypicalIndexes.INDEX_SECOND_PERSON, descriptor);","lastModifiedDate":"2021-10-08"},{"lineNumber":118,"author":{"gitId":"david-eom"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":119,"author":{"gitId":"david-eom"},"content":"        CommandTestUtil.assertCommandFailure(editCommand, model, EditCommand.MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2021-10-08"},{"lineNumber":120,"author":{"gitId":"david-eom"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":121,"author":{"gitId":"david-eom"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":122,"author":{"gitId":"david-eom"},"content":"    @Test","lastModifiedDate":"2021-10-08"},{"lineNumber":123,"author":{"gitId":"david-eom"},"content":"    public void execute_duplicatePersonFilteredList_failure() {","lastModifiedDate":"2021-10-08"},{"lineNumber":124,"author":{"gitId":"david-eom"},"content":"        CommandTestUtil.showPersonAtIndex(model, TypicalIndexes.INDEX_FIRST_PERSON);","lastModifiedDate":"2021-10-08"},{"lineNumber":125,"author":{"gitId":"david-eom"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":126,"author":{"gitId":"david-eom"},"content":"        // edit person in filtered list into a duplicate in address book","lastModifiedDate":"2021-10-08"},{"lineNumber":127,"author":{"gitId":"david-eom"},"content":"        Person personInList \u003d","lastModifiedDate":"2021-10-08"},{"lineNumber":128,"author":{"gitId":"david-eom"},"content":"                model.getAddressBook().getPersonList().get(TypicalIndexes.INDEX_SECOND_PERSON.getZeroBased());","lastModifiedDate":"2021-10-08"},{"lineNumber":129,"author":{"gitId":"david-eom"},"content":"        EditCommand editCommand \u003d new EditCommand(TypicalIndexes.INDEX_FIRST_PERSON,","lastModifiedDate":"2021-10-08"},{"lineNumber":130,"author":{"gitId":"david-eom"},"content":"                new EditPersonDescriptorBuilder(personInList).build());","lastModifiedDate":"2021-10-08"},{"lineNumber":131,"author":{"gitId":"david-eom"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":132,"author":{"gitId":"david-eom"},"content":"        CommandTestUtil.assertCommandFailure(editCommand, model, EditCommand.MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2021-10-08"},{"lineNumber":133,"author":{"gitId":"david-eom"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":134,"author":{"gitId":"david-eom"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":135,"author":{"gitId":"david-eom"},"content":"    @Test","lastModifiedDate":"2021-10-08"},{"lineNumber":136,"author":{"gitId":"david-eom"},"content":"    public void execute_invalidPersonIndexUnfilteredList_failure() {","lastModifiedDate":"2021-10-08"},{"lineNumber":137,"author":{"gitId":"david-eom"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredPersonList().size() + 1);","lastModifiedDate":"2021-10-08"},{"lineNumber":138,"author":{"gitId":"david-eom"},"content":"        EditCommand.EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder()","lastModifiedDate":"2021-10-08"},{"lineNumber":139,"author":{"gitId":"david-eom"},"content":"                .withName(CommandTestUtil.VALID_NAME_BOB).build();","lastModifiedDate":"2021-10-08"},{"lineNumber":140,"author":{"gitId":"david-eom"},"content":"        EditCommand editCommand \u003d new EditCommand(outOfBoundIndex, descriptor);","lastModifiedDate":"2021-10-08"},{"lineNumber":141,"author":{"gitId":"david-eom"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":142,"author":{"gitId":"david-eom"},"content":"        CommandTestUtil.assertCommandFailure(editCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2021-10-08"},{"lineNumber":143,"author":{"gitId":"david-eom"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":144,"author":{"gitId":"david-eom"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":145,"author":{"gitId":"david-eom"},"content":"    /**","lastModifiedDate":"2021-10-08"},{"lineNumber":146,"author":{"gitId":"david-eom"},"content":"     * Edit filtered list where index is larger than size of filtered list,","lastModifiedDate":"2021-10-08"},{"lineNumber":147,"author":{"gitId":"david-eom"},"content":"     * but smaller than size of address book","lastModifiedDate":"2021-10-08"},{"lineNumber":148,"author":{"gitId":"david-eom"},"content":"     */","lastModifiedDate":"2021-10-08"},{"lineNumber":149,"author":{"gitId":"david-eom"},"content":"    @Test","lastModifiedDate":"2021-10-08"},{"lineNumber":150,"author":{"gitId":"david-eom"},"content":"    public void execute_invalidPersonIndexFilteredList_failure() {","lastModifiedDate":"2021-10-08"},{"lineNumber":151,"author":{"gitId":"david-eom"},"content":"        CommandTestUtil.showPersonAtIndex(model, TypicalIndexes.INDEX_FIRST_PERSON);","lastModifiedDate":"2021-10-08"},{"lineNumber":152,"author":{"gitId":"david-eom"},"content":"        Index outOfBoundIndex \u003d TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2021-10-08"},{"lineNumber":153,"author":{"gitId":"david-eom"},"content":"        // ensures that outOfBoundIndex is still in bounds of address book list","lastModifiedDate":"2021-10-08"},{"lineNumber":154,"author":{"gitId":"david-eom"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getAddressBook().getPersonList().size());","lastModifiedDate":"2021-10-08"},{"lineNumber":155,"author":{"gitId":"david-eom"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":156,"author":{"gitId":"david-eom"},"content":"        EditCommand editCommand \u003d new EditCommand(outOfBoundIndex,","lastModifiedDate":"2021-10-08"},{"lineNumber":157,"author":{"gitId":"david-eom"},"content":"                new EditPersonDescriptorBuilder().withName(CommandTestUtil.VALID_NAME_BOB).build());","lastModifiedDate":"2021-10-08"},{"lineNumber":158,"author":{"gitId":"david-eom"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":159,"author":{"gitId":"david-eom"},"content":"        CommandTestUtil.assertCommandFailure(editCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2021-10-08"},{"lineNumber":160,"author":{"gitId":"david-eom"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":161,"author":{"gitId":"david-eom"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":162,"author":{"gitId":"david-eom"},"content":"    @Test","lastModifiedDate":"2021-10-08"},{"lineNumber":163,"author":{"gitId":"david-eom"},"content":"    public void equals() {","lastModifiedDate":"2021-10-08"},{"lineNumber":164,"author":{"gitId":"david-eom"},"content":"        final EditCommand standardCommand \u003d","lastModifiedDate":"2021-10-08"},{"lineNumber":165,"author":{"gitId":"david-eom"},"content":"                new EditCommand(TypicalIndexes.INDEX_FIRST_PERSON, CommandTestUtil.DESC_AMY);","lastModifiedDate":"2021-10-08"},{"lineNumber":166,"author":{"gitId":"david-eom"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":167,"author":{"gitId":"david-eom"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2021-10-08"},{"lineNumber":168,"author":{"gitId":"david-eom"},"content":"        EditCommand.EditPersonDescriptor copyDescriptor \u003d","lastModifiedDate":"2021-10-08"},{"lineNumber":169,"author":{"gitId":"david-eom"},"content":"                new EditCommand.EditPersonDescriptor(CommandTestUtil.DESC_AMY);","lastModifiedDate":"2021-10-08"},{"lineNumber":170,"author":{"gitId":"david-eom"},"content":"        EditCommand commandWithSameValues \u003d new EditCommand(TypicalIndexes.INDEX_FIRST_PERSON, copyDescriptor);","lastModifiedDate":"2021-10-08"},{"lineNumber":171,"author":{"gitId":"david-eom"},"content":"        assertTrue(standardCommand.equals(commandWithSameValues));","lastModifiedDate":"2021-10-08"},{"lineNumber":172,"author":{"gitId":"david-eom"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":173,"author":{"gitId":"david-eom"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2021-10-08"},{"lineNumber":174,"author":{"gitId":"david-eom"},"content":"        assertTrue(standardCommand.equals(standardCommand));","lastModifiedDate":"2021-10-08"},{"lineNumber":175,"author":{"gitId":"david-eom"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":176,"author":{"gitId":"david-eom"},"content":"        // null -\u003e returns false","lastModifiedDate":"2021-10-08"},{"lineNumber":177,"author":{"gitId":"david-eom"},"content":"        assertFalse(standardCommand.equals(null));","lastModifiedDate":"2021-10-08"},{"lineNumber":178,"author":{"gitId":"david-eom"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":179,"author":{"gitId":"david-eom"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2021-10-08"},{"lineNumber":180,"author":{"gitId":"david-eom"},"content":"        assertFalse(standardCommand.equals(new ClearCommand()));","lastModifiedDate":"2021-10-08"},{"lineNumber":181,"author":{"gitId":"david-eom"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":182,"author":{"gitId":"david-eom"},"content":"        // different index -\u003e returns false","lastModifiedDate":"2021-10-08"},{"lineNumber":183,"author":{"gitId":"david-eom"},"content":"        assertFalse(standardCommand.equals(","lastModifiedDate":"2021-10-08"},{"lineNumber":184,"author":{"gitId":"david-eom"},"content":"                new EditCommand(TypicalIndexes.INDEX_SECOND_PERSON, CommandTestUtil.DESC_AMY))","lastModifiedDate":"2021-10-08"},{"lineNumber":185,"author":{"gitId":"david-eom"},"content":"        );","lastModifiedDate":"2021-10-08"},{"lineNumber":186,"author":{"gitId":"david-eom"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":187,"author":{"gitId":"david-eom"},"content":"        // different descriptor -\u003e returns false","lastModifiedDate":"2021-10-08"},{"lineNumber":188,"author":{"gitId":"david-eom"},"content":"        assertFalse(standardCommand.equals(","lastModifiedDate":"2021-10-08"},{"lineNumber":189,"author":{"gitId":"david-eom"},"content":"                new EditCommand(TypicalIndexes.INDEX_FIRST_PERSON, CommandTestUtil.DESC_BOB))","lastModifiedDate":"2021-10-08"},{"lineNumber":190,"author":{"gitId":"david-eom"},"content":"        );","lastModifiedDate":"2021-10-08"},{"lineNumber":191,"author":{"gitId":"david-eom"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":192,"author":{"gitId":"david-eom"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":193,"author":{"gitId":"david-eom"},"content":"}","lastModifiedDate":"2021-10-08"}],"authorContributionMap":{"Zacchua":10,"david-eom":183}},{"path":"src/test/java/socialite/logic/commands/EditPersonDescriptorTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"david-eom"},"content":"package socialite.logic.commands;","lastModifiedDate":"2021-10-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"david-eom"},"content":"import static socialite.logic.commands.CommandTestUtil.DESC_AMY;","lastModifiedDate":"2021-10-08"},{"lineNumber":6,"author":{"gitId":"david-eom"},"content":"import static socialite.logic.commands.CommandTestUtil.DESC_BOB;","lastModifiedDate":"2021-10-08"},{"lineNumber":7,"author":{"gitId":"david-eom"},"content":"import static socialite.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2021-10-08"},{"lineNumber":8,"author":{"gitId":"david-eom"},"content":"import static socialite.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2021-10-08"},{"lineNumber":9,"author":{"gitId":"david-eom"},"content":"import static socialite.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2021-10-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":13,"author":{"gitId":"david-eom"},"content":"import socialite.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2021-10-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class EditPersonDescriptorTest {","lastModifiedDate":"2017-05-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-05"},{"lineNumber":20,"author":{"gitId":"david-eom"},"content":"        EditCommand.EditPersonDescriptor descriptorWithSameValues \u003d new EditCommand.EditPersonDescriptor(DESC_AMY);","lastModifiedDate":"2021-10-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        assertTrue(DESC_AMY.equals(descriptorWithSameValues));","lastModifiedDate":"2017-05-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        assertTrue(DESC_AMY.equals(DESC_AMY));","lastModifiedDate":"2017-05-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(null));","lastModifiedDate":"2017-05-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(5));","lastModifiedDate":"2017-05-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(DESC_BOB));","lastModifiedDate":"2017-05-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // different name -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":36,"author":{"gitId":"david-eom"},"content":"        EditCommand.EditPersonDescriptor editedAmy \u003d","lastModifiedDate":"2021-10-09"},{"lineNumber":37,"author":{"gitId":"david-eom"},"content":"                new EditPersonDescriptorBuilder(DESC_AMY).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2021-10-09"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        // different phone -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2017-05-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        // different tags -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2017-05-05"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":48,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-05"}],"authorContributionMap":{"david-eom":10,"-":38}},{"path":"src/test/java/socialite/logic/commands/ExitCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"david-eom"},"content":"package socialite.logic.commands;","lastModifiedDate":"2021-10-08"},{"lineNumber":2,"author":{"gitId":"david-eom"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":3,"author":{"gitId":"david-eom"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-08"},{"lineNumber":4,"author":{"gitId":"david-eom"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":5,"author":{"gitId":"david-eom"},"content":"import socialite.model.Model;","lastModifiedDate":"2021-10-08"},{"lineNumber":6,"author":{"gitId":"david-eom"},"content":"import socialite.model.ModelManager;","lastModifiedDate":"2021-10-08"},{"lineNumber":7,"author":{"gitId":"david-eom"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":8,"author":{"gitId":"david-eom"},"content":"public class ExitCommandTest {","lastModifiedDate":"2021-10-08"},{"lineNumber":9,"author":{"gitId":"david-eom"},"content":"    private Model model \u003d new ModelManager();","lastModifiedDate":"2021-10-08"},{"lineNumber":10,"author":{"gitId":"david-eom"},"content":"    private Model expectedModel \u003d new ModelManager();","lastModifiedDate":"2021-10-08"},{"lineNumber":11,"author":{"gitId":"david-eom"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":12,"author":{"gitId":"david-eom"},"content":"    @Test","lastModifiedDate":"2021-10-08"},{"lineNumber":13,"author":{"gitId":"david-eom"},"content":"    public void execute_exit_success() {","lastModifiedDate":"2021-10-08"},{"lineNumber":14,"author":{"gitId":"david-eom"},"content":"        CommandResult expectedCommandResult \u003d","lastModifiedDate":"2021-10-09"},{"lineNumber":15,"author":{"gitId":"Zacchua"},"content":"                new CommandResult(ExitCommand.MESSAGE_EXIT_ACKNOWLEDGEMENT, false, true, false);","lastModifiedDate":"2021-10-27"},{"lineNumber":16,"author":{"gitId":"david-eom"},"content":"        CommandTestUtil.assertCommandSuccess(new ExitCommand(), model, expectedCommandResult, expectedModel);","lastModifiedDate":"2021-10-08"},{"lineNumber":17,"author":{"gitId":"david-eom"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":18,"author":{"gitId":"david-eom"},"content":"}","lastModifiedDate":"2021-10-08"}],"authorContributionMap":{"Zacchua":1,"david-eom":17}},{"path":"src/test/java/socialite/logic/commands/FindCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"david-eom"},"content":"package socialite.logic.commands;","lastModifiedDate":"2021-10-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-06-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":12,"author":{"gitId":"david-eom"},"content":"import socialite.commons.core.Messages;","lastModifiedDate":"2021-10-09"},{"lineNumber":13,"author":{"gitId":"david-eom"},"content":"import socialite.model.CommandHistory;","lastModifiedDate":"2021-10-21"},{"lineNumber":14,"author":{"gitId":"david-eom"},"content":"import socialite.model.Model;","lastModifiedDate":"2021-10-08"},{"lineNumber":15,"author":{"gitId":"david-eom"},"content":"import socialite.model.ModelManager;","lastModifiedDate":"2021-10-08"},{"lineNumber":16,"author":{"gitId":"david-eom"},"content":"import socialite.model.UserPrefs;","lastModifiedDate":"2021-10-08"},{"lineNumber":17,"author":{"gitId":"david-eom"},"content":"import socialite.model.person.ContainsKeywordsPredicate;","lastModifiedDate":"2021-10-23"},{"lineNumber":18,"author":{"gitId":"david-eom"},"content":"import socialite.testutil.TypicalPersons;","lastModifiedDate":"2021-10-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) for {@code FindCommand}.","lastModifiedDate":"2017-06-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"public class FindCommandTest {","lastModifiedDate":"2017-06-12"},{"lineNumber":24,"author":{"gitId":"david-eom"},"content":"    private Model model \u003d","lastModifiedDate":"2021-10-21"},{"lineNumber":25,"author":{"gitId":"Zacchua"},"content":"            new ModelManager(","lastModifiedDate":"2021-10-26"},{"lineNumber":26,"author":{"gitId":"Zacchua"},"content":"                    TypicalPersons.getTypicalAddressBook(), new UserPrefs(), new CommandHistory());","lastModifiedDate":"2021-10-27"},{"lineNumber":27,"author":{"gitId":"david-eom"},"content":"    private Model expectedModel \u003d","lastModifiedDate":"2021-10-21"},{"lineNumber":28,"author":{"gitId":"Zacchua"},"content":"            new ModelManager(","lastModifiedDate":"2021-10-26"},{"lineNumber":29,"author":{"gitId":"Zacchua"},"content":"                    TypicalPersons.getTypicalAddressBook(), new UserPrefs(), new CommandHistory());","lastModifiedDate":"2021-10-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-06-27"},{"lineNumber":33,"author":{"gitId":"david-eom"},"content":"        ContainsKeywordsPredicate firstPredicate \u003d","lastModifiedDate":"2021-10-23"},{"lineNumber":34,"author":{"gitId":"david-eom"},"content":"                new ContainsKeywordsPredicate(Collections.singletonList(\"first\"));","lastModifiedDate":"2021-10-23"},{"lineNumber":35,"author":{"gitId":"david-eom"},"content":"        ContainsKeywordsPredicate secondPredicate \u003d","lastModifiedDate":"2021-10-23"},{"lineNumber":36,"author":{"gitId":"david-eom"},"content":"                new ContainsKeywordsPredicate(Collections.singletonList(\"second\"));","lastModifiedDate":"2021-10-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        FindCommand findFirstCommand \u003d new FindCommand(firstPredicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        FindCommand findSecondCommand \u003d new FindCommand(secondPredicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        assertTrue(findFirstCommand.equals(findFirstCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        FindCommand findFirstCommandCopy \u003d new FindCommand(firstPredicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertTrue(findFirstCommand.equals(findFirstCommandCopy));","lastModifiedDate":"2017-06-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertFalse(findFirstCommand.equals(1));","lastModifiedDate":"2017-06-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertFalse(findFirstCommand.equals(null));","lastModifiedDate":"2017-06-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        assertFalse(findFirstCommand.equals(findSecondCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public void execute_zeroKeywords_noPersonFound() {","lastModifiedDate":"2017-08-15"},{"lineNumber":60,"author":{"gitId":"david-eom"},"content":"        String expectedMessage \u003d String.format(Messages.MESSAGE_PERSONS_LISTED_OVERVIEW, 0);","lastModifiedDate":"2021-10-08"},{"lineNumber":61,"author":{"gitId":"david-eom"},"content":"        ContainsKeywordsPredicate predicate \u003d preparePredicate(\" \");","lastModifiedDate":"2021-10-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        FindCommand command \u003d new FindCommand(predicate);","lastModifiedDate":"2018-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        expectedModel.updateFilteredPersonList(predicate);","lastModifiedDate":"2018-08-08"},{"lineNumber":64,"author":{"gitId":"david-eom"},"content":"        CommandTestUtil.assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2021-10-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertEquals(Collections.emptyList(), model.getFilteredPersonList());","lastModifiedDate":"2018-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":69,"author":{"gitId":"EssWhyy"},"content":"    public void execute_multipleKeywords_noPeopleFound() {","lastModifiedDate":"2021-10-19"},{"lineNumber":70,"author":{"gitId":"EssWhyy"},"content":"        String expectedMessage \u003d String.format(Messages.MESSAGE_PERSONS_LISTED_OVERVIEW, 0);","lastModifiedDate":"2021-10-19"},{"lineNumber":71,"author":{"gitId":"david-eom"},"content":"        ContainsKeywordsPredicate predicate \u003d preparePredicate(\"Kurz Elle Kunz\");","lastModifiedDate":"2021-10-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        FindCommand command \u003d new FindCommand(predicate);","lastModifiedDate":"2018-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        expectedModel.updateFilteredPersonList(predicate);","lastModifiedDate":"2018-08-08"},{"lineNumber":74,"author":{"gitId":"david-eom"},"content":"        CommandTestUtil.assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2021-10-08"},{"lineNumber":75,"author":{"gitId":"EssWhyy"},"content":"        System.out.println(model.getFilteredPersonList());","lastModifiedDate":"2021-10-19"},{"lineNumber":76,"author":{"gitId":"EssWhyy"},"content":"        assertEquals(Collections.emptyList(),","lastModifiedDate":"2021-10-19"},{"lineNumber":77,"author":{"gitId":"david-eom"},"content":"                model.getFilteredPersonList());","lastModifiedDate":"2021-10-09"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-12"},{"lineNumber":81,"author":{"gitId":"EssWhyy"},"content":"     * Parses {@code userInput} into a {@code containsKeywordsPredicate}.","lastModifiedDate":"2021-10-19"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-12"},{"lineNumber":83,"author":{"gitId":"david-eom"},"content":"    private ContainsKeywordsPredicate preparePredicate(String userInput) {","lastModifiedDate":"2021-10-23"},{"lineNumber":84,"author":{"gitId":"david-eom"},"content":"        return new ContainsKeywordsPredicate(Arrays.asList(userInput.split(\"\\\\s+\")));","lastModifiedDate":"2021-10-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":86,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"Zacchua":4,"EssWhyy":5,"david-eom":22,"-":55}},{"path":"src/test/java/socialite/logic/commands/HelpCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"david-eom"},"content":"package socialite.logic.commands;","lastModifiedDate":"2021-10-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":3,"author":{"gitId":"stanley-1"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-10-20"},{"lineNumber":4,"author":{"gitId":"stanley-1"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-20"},{"lineNumber":5,"author":{"gitId":"david-eom"},"content":"import static socialite.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2021-10-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":9,"author":{"gitId":"david-eom"},"content":"import socialite.model.Model;","lastModifiedDate":"2021-10-08"},{"lineNumber":10,"author":{"gitId":"david-eom"},"content":"import socialite.model.ModelManager;","lastModifiedDate":"2021-10-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class HelpCommandTest {","lastModifiedDate":"2017-06-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager();","lastModifiedDate":"2018-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private Model expectedModel \u003d new ModelManager();","lastModifiedDate":"2018-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void execute_help_success() {","lastModifiedDate":"2017-06-08"},{"lineNumber":18,"author":{"gitId":"david-eom"},"content":"        CommandResult expectedCommandResult \u003d","lastModifiedDate":"2021-10-09"},{"lineNumber":19,"author":{"gitId":"Zacchua"},"content":"                new CommandResult(HelpCommand.SHOWING_HELP_MESSAGE, true, false, false);","lastModifiedDate":"2021-10-27"},{"lineNumber":20,"author":{"gitId":"stanley-1"},"content":"        assertCommandSuccess(new HelpCommand(HelpCommand.GENERIC_RESPONSE), model,","lastModifiedDate":"2021-10-19"},{"lineNumber":21,"author":{"gitId":"stanley-1"},"content":"                expectedCommandResult, expectedModel);","lastModifiedDate":"2021-10-19"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-08"},{"lineNumber":23,"author":{"gitId":"stanley-1"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":24,"author":{"gitId":"stanley-1"},"content":"    @Test","lastModifiedDate":"2021-10-19"},{"lineNumber":25,"author":{"gitId":"stanley-1"},"content":"    public void execute_help_add() {","lastModifiedDate":"2021-10-19"},{"lineNumber":26,"author":{"gitId":"stanley-1"},"content":"        CommandResult expectedCommandResult \u003d","lastModifiedDate":"2021-10-19"},{"lineNumber":27,"author":{"gitId":"Zacchua"},"content":"                new CommandResult(AddCommand.MESSAGE_USAGE, false, false, false);","lastModifiedDate":"2021-10-27"},{"lineNumber":28,"author":{"gitId":"stanley-1"},"content":"        assertCommandSuccess(new HelpCommand(AddCommand.MESSAGE_USAGE), model, expectedCommandResult, expectedModel);","lastModifiedDate":"2021-10-19"},{"lineNumber":29,"author":{"gitId":"stanley-1"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":30,"author":{"gitId":"stanley-1"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":31,"author":{"gitId":"stanley-1"},"content":"    @Test","lastModifiedDate":"2021-10-19"},{"lineNumber":32,"author":{"gitId":"stanley-1"},"content":"    public void execute_help_delete() {","lastModifiedDate":"2021-10-19"},{"lineNumber":33,"author":{"gitId":"stanley-1"},"content":"        CommandResult expectedCommandResult \u003d","lastModifiedDate":"2021-10-19"},{"lineNumber":34,"author":{"gitId":"Zacchua"},"content":"                new CommandResult(DeleteCommand.MESSAGE_USAGE, false, false, false);","lastModifiedDate":"2021-10-27"},{"lineNumber":35,"author":{"gitId":"stanley-1"},"content":"        assertCommandSuccess(new HelpCommand(DeleteCommand.MESSAGE_USAGE), model, expectedCommandResult, expectedModel);","lastModifiedDate":"2021-10-19"},{"lineNumber":36,"author":{"gitId":"stanley-1"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":37,"author":{"gitId":"stanley-1"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":38,"author":{"gitId":"stanley-1"},"content":"    @Test","lastModifiedDate":"2021-10-19"},{"lineNumber":39,"author":{"gitId":"stanley-1"},"content":"    public void execute_help_edit() {","lastModifiedDate":"2021-10-19"},{"lineNumber":40,"author":{"gitId":"stanley-1"},"content":"        CommandResult expectedCommandResult \u003d","lastModifiedDate":"2021-10-19"},{"lineNumber":41,"author":{"gitId":"Zacchua"},"content":"                new CommandResult(EditCommand.MESSAGE_USAGE, false, false, false);","lastModifiedDate":"2021-10-27"},{"lineNumber":42,"author":{"gitId":"stanley-1"},"content":"        assertCommandSuccess(new HelpCommand(EditCommand.MESSAGE_USAGE), model, expectedCommandResult, expectedModel);","lastModifiedDate":"2021-10-19"},{"lineNumber":43,"author":{"gitId":"stanley-1"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":44,"author":{"gitId":"stanley-1"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":45,"author":{"gitId":"stanley-1"},"content":"    @Test","lastModifiedDate":"2021-10-19"},{"lineNumber":46,"author":{"gitId":"stanley-1"},"content":"    public void execute_help_find() {","lastModifiedDate":"2021-10-19"},{"lineNumber":47,"author":{"gitId":"stanley-1"},"content":"        CommandResult expectedCommandResult \u003d","lastModifiedDate":"2021-10-19"},{"lineNumber":48,"author":{"gitId":"Zacchua"},"content":"                new CommandResult(FindCommand.MESSAGE_USAGE, false, false, false);","lastModifiedDate":"2021-10-27"},{"lineNumber":49,"author":{"gitId":"stanley-1"},"content":"        assertCommandSuccess(new HelpCommand(FindCommand.MESSAGE_USAGE), model, expectedCommandResult, expectedModel);","lastModifiedDate":"2021-10-19"},{"lineNumber":50,"author":{"gitId":"stanley-1"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":51,"author":{"gitId":"stanley-1"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":52,"author":{"gitId":"stanley-1"},"content":"    @Test","lastModifiedDate":"2021-10-19"},{"lineNumber":53,"author":{"gitId":"stanley-1"},"content":"    public void execute_help_remark() {","lastModifiedDate":"2021-10-19"},{"lineNumber":54,"author":{"gitId":"stanley-1"},"content":"        CommandResult expectedCommandResult \u003d","lastModifiedDate":"2021-10-19"},{"lineNumber":55,"author":{"gitId":"Zacchua"},"content":"                new CommandResult(RemarkCommand.MESSAGE_USAGE, false, false, false);","lastModifiedDate":"2021-10-27"},{"lineNumber":56,"author":{"gitId":"stanley-1"},"content":"        assertCommandSuccess(new HelpCommand(RemarkCommand.MESSAGE_USAGE), model, expectedCommandResult, expectedModel);","lastModifiedDate":"2021-10-19"},{"lineNumber":57,"author":{"gitId":"stanley-1"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":58,"author":{"gitId":"stanley-1"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":59,"author":{"gitId":"stanley-1"},"content":"    @Test","lastModifiedDate":"2021-10-20"},{"lineNumber":60,"author":{"gitId":"stanley-1"},"content":"    public void equals() {","lastModifiedDate":"2021-10-20"},{"lineNumber":61,"author":{"gitId":"stanley-1"},"content":"        HelpCommand helpFirstCommand \u003d new HelpCommand(AddCommand.MESSAGE_USAGE);","lastModifiedDate":"2021-10-20"},{"lineNumber":62,"author":{"gitId":"stanley-1"},"content":"        HelpCommand helpSecondCommand \u003d new HelpCommand(HelpCommand.GENERIC_RESPONSE);","lastModifiedDate":"2021-10-20"},{"lineNumber":63,"author":{"gitId":"stanley-1"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":64,"author":{"gitId":"stanley-1"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2021-10-20"},{"lineNumber":65,"author":{"gitId":"stanley-1"},"content":"        assertTrue(helpFirstCommand.equals(helpFirstCommand));","lastModifiedDate":"2021-10-20"},{"lineNumber":66,"author":{"gitId":"stanley-1"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":67,"author":{"gitId":"stanley-1"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2021-10-20"},{"lineNumber":68,"author":{"gitId":"stanley-1"},"content":"        HelpCommand helpFirstCommandCopy \u003d new HelpCommand(AddCommand.MESSAGE_USAGE);","lastModifiedDate":"2021-10-20"},{"lineNumber":69,"author":{"gitId":"stanley-1"},"content":"        assertTrue(helpFirstCommand.equals(helpFirstCommandCopy));","lastModifiedDate":"2021-10-20"},{"lineNumber":70,"author":{"gitId":"stanley-1"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":71,"author":{"gitId":"stanley-1"},"content":"        // different Help Commands -\u003e returns false","lastModifiedDate":"2021-10-20"},{"lineNumber":72,"author":{"gitId":"stanley-1"},"content":"        assertFalse(helpFirstCommand.equals(helpSecondCommand));","lastModifiedDate":"2021-10-20"},{"lineNumber":73,"author":{"gitId":"stanley-1"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":74,"author":{"gitId":"stanley-1"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":75,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-08"}],"authorContributionMap":{"Zacchua":6,"david-eom":5,"-":13,"stanley-1":51}},{"path":"src/test/java/socialite/logic/commands/ListCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"david-eom"},"content":"package socialite.logic.commands;","lastModifiedDate":"2021-10-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"david-eom"},"content":"import static socialite.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2021-10-08"},{"lineNumber":4,"author":{"gitId":"david-eom"},"content":"import static socialite.logic.commands.CommandTestUtil.showPersonAtIndex;","lastModifiedDate":"2021-10-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":9,"author":{"gitId":"david-eom"},"content":"import socialite.model.CommandHistory;","lastModifiedDate":"2021-10-21"},{"lineNumber":10,"author":{"gitId":"david-eom"},"content":"import socialite.model.Model;","lastModifiedDate":"2021-10-08"},{"lineNumber":11,"author":{"gitId":"david-eom"},"content":"import socialite.model.ModelManager;","lastModifiedDate":"2021-10-08"},{"lineNumber":12,"author":{"gitId":"david-eom"},"content":"import socialite.model.UserPrefs;","lastModifiedDate":"2021-10-08"},{"lineNumber":13,"author":{"gitId":"david-eom"},"content":"import socialite.testutil.TypicalIndexes;","lastModifiedDate":"2021-10-08"},{"lineNumber":14,"author":{"gitId":"david-eom"},"content":"import socialite.testutil.TypicalPersons;","lastModifiedDate":"2021-10-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) and unit tests for ListCommand.","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class ListCommandTest {","lastModifiedDate":"2017-06-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private Model model;","lastModifiedDate":"2017-06-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private Model expectedModel;","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"Zacchua"},"content":"        model \u003d new ModelManager(","lastModifiedDate":"2021-10-26"},{"lineNumber":27,"author":{"gitId":"Zacchua"},"content":"                TypicalPersons.getTypicalAddressBook(), new UserPrefs(), new CommandHistory());","lastModifiedDate":"2021-10-27"},{"lineNumber":28,"author":{"gitId":"Zacchua"},"content":"        expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs(), new CommandHistory());","lastModifiedDate":"2021-10-27"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public void execute_listIsNotFiltered_showsSameList() {","lastModifiedDate":"2017-08-15"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ListCommand(), model, ListCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void execute_listIsFiltered_showsEverything() {","lastModifiedDate":"2017-08-15"},{"lineNumber":38,"author":{"gitId":"david-eom"},"content":"        showPersonAtIndex(model, TypicalIndexes.INDEX_FIRST_PERSON);","lastModifiedDate":"2021-10-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertCommandSuccess(new ListCommand(), model, ListCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":41,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"Zacchua":3,"david-eom":10,"-":28}},{"path":"src/test/java/socialite/logic/commands/PinCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"david-eom"},"content":"package socialite.logic.commands;","lastModifiedDate":"2021-10-29"},{"lineNumber":2,"author":{"gitId":"david-eom"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":3,"author":{"gitId":"david-eom"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-29"},{"lineNumber":4,"author":{"gitId":"david-eom"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2021-10-29"},{"lineNumber":5,"author":{"gitId":"david-eom"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-29"},{"lineNumber":6,"author":{"gitId":"david-eom"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":7,"author":{"gitId":"david-eom"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-29"},{"lineNumber":8,"author":{"gitId":"david-eom"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":9,"author":{"gitId":"david-eom"},"content":"import socialite.commons.core.Messages;","lastModifiedDate":"2021-10-29"},{"lineNumber":10,"author":{"gitId":"david-eom"},"content":"import socialite.commons.core.index.Index;","lastModifiedDate":"2021-10-29"},{"lineNumber":11,"author":{"gitId":"david-eom"},"content":"import socialite.model.CommandHistory;","lastModifiedDate":"2021-10-29"},{"lineNumber":12,"author":{"gitId":"david-eom"},"content":"import socialite.model.Model;","lastModifiedDate":"2021-10-29"},{"lineNumber":13,"author":{"gitId":"david-eom"},"content":"import socialite.model.ModelManager;","lastModifiedDate":"2021-10-29"},{"lineNumber":14,"author":{"gitId":"david-eom"},"content":"import socialite.model.UserPrefs;","lastModifiedDate":"2021-10-29"},{"lineNumber":15,"author":{"gitId":"david-eom"},"content":"import socialite.testutil.TypicalIndexes;","lastModifiedDate":"2021-10-29"},{"lineNumber":16,"author":{"gitId":"david-eom"},"content":"import socialite.testutil.TypicalPersons;","lastModifiedDate":"2021-10-29"},{"lineNumber":17,"author":{"gitId":"david-eom"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":18,"author":{"gitId":"david-eom"},"content":"/**","lastModifiedDate":"2021-10-29"},{"lineNumber":19,"author":{"gitId":"david-eom"},"content":" * Contains integration tests (interaction with the model) and unit tests for {@code PinCommand}.","lastModifiedDate":"2021-10-29"},{"lineNumber":20,"author":{"gitId":"david-eom"},"content":" */","lastModifiedDate":"2021-10-29"},{"lineNumber":21,"author":{"gitId":"david-eom"},"content":"public class PinCommandTest {","lastModifiedDate":"2021-10-29"},{"lineNumber":22,"author":{"gitId":"david-eom"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":23,"author":{"gitId":"david-eom"},"content":"    private Model model \u003d","lastModifiedDate":"2021-10-29"},{"lineNumber":24,"author":{"gitId":"david-eom"},"content":"            new ModelManager(TypicalPersons.getTypicalAddressBook(), new UserPrefs(), new CommandHistory());","lastModifiedDate":"2021-10-29"},{"lineNumber":25,"author":{"gitId":"david-eom"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":26,"author":{"gitId":"david-eom"},"content":"    @Test","lastModifiedDate":"2021-10-29"},{"lineNumber":27,"author":{"gitId":"david-eom"},"content":"    public void execute_invalidIndexUnfilteredList_throwsCommandException() {","lastModifiedDate":"2021-10-29"},{"lineNumber":28,"author":{"gitId":"david-eom"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredPersonList().size() + 1);","lastModifiedDate":"2021-10-29"},{"lineNumber":29,"author":{"gitId":"david-eom"},"content":"        PinCommand pinCommand \u003d new PinCommand(outOfBoundIndex);","lastModifiedDate":"2021-10-29"},{"lineNumber":30,"author":{"gitId":"david-eom"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":31,"author":{"gitId":"david-eom"},"content":"        CommandTestUtil.assertCommandFailure(pinCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2021-10-29"},{"lineNumber":32,"author":{"gitId":"david-eom"},"content":"    }","lastModifiedDate":"2021-10-29"},{"lineNumber":33,"author":{"gitId":"david-eom"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":34,"author":{"gitId":"david-eom"},"content":"    @Test","lastModifiedDate":"2021-10-29"},{"lineNumber":35,"author":{"gitId":"david-eom"},"content":"    public void execute_invalidIndexFilteredLIst_throwsCommandException() {","lastModifiedDate":"2021-10-29"},{"lineNumber":36,"author":{"gitId":"david-eom"},"content":"        CommandTestUtil.showPersonAtIndex(model, TypicalIndexes.INDEX_FIRST_PERSON);","lastModifiedDate":"2021-10-29"},{"lineNumber":37,"author":{"gitId":"david-eom"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":38,"author":{"gitId":"david-eom"},"content":"        Index outOfBoundIndex \u003d TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2021-10-29"},{"lineNumber":39,"author":{"gitId":"david-eom"},"content":"        // ensures that outOfBoundIndex is still in bounds of address book list","lastModifiedDate":"2021-10-29"},{"lineNumber":40,"author":{"gitId":"david-eom"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getAddressBook().getPersonList().size());","lastModifiedDate":"2021-10-29"},{"lineNumber":41,"author":{"gitId":"david-eom"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":42,"author":{"gitId":"david-eom"},"content":"        PinCommand pinCommand \u003d new PinCommand(outOfBoundIndex);","lastModifiedDate":"2021-10-29"},{"lineNumber":43,"author":{"gitId":"david-eom"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":44,"author":{"gitId":"david-eom"},"content":"        CommandTestUtil.assertCommandFailure(pinCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2021-10-29"},{"lineNumber":45,"author":{"gitId":"david-eom"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":46,"author":{"gitId":"david-eom"},"content":"    }","lastModifiedDate":"2021-10-29"},{"lineNumber":47,"author":{"gitId":"david-eom"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":48,"author":{"gitId":"david-eom"},"content":"    //TODO: execute_pinAPinnedPerson_throwsCommandException()","lastModifiedDate":"2021-10-29"},{"lineNumber":49,"author":{"gitId":"david-eom"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":50,"author":{"gitId":"david-eom"},"content":"    @Test","lastModifiedDate":"2021-10-29"},{"lineNumber":51,"author":{"gitId":"david-eom"},"content":"    public void equals() {","lastModifiedDate":"2021-10-29"},{"lineNumber":52,"author":{"gitId":"david-eom"},"content":"        PinCommand pinFirstCommand \u003d new PinCommand(TypicalIndexes.INDEX_FIRST_PERSON);","lastModifiedDate":"2021-10-29"},{"lineNumber":53,"author":{"gitId":"david-eom"},"content":"        PinCommand pinSecondCommand \u003d new PinCommand(TypicalIndexes.INDEX_SECOND_PERSON);","lastModifiedDate":"2021-10-29"},{"lineNumber":54,"author":{"gitId":"david-eom"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":55,"author":{"gitId":"david-eom"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2021-10-29"},{"lineNumber":56,"author":{"gitId":"david-eom"},"content":"        assertEquals(pinFirstCommand, pinFirstCommand);","lastModifiedDate":"2021-10-29"},{"lineNumber":57,"author":{"gitId":"david-eom"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":58,"author":{"gitId":"david-eom"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2021-10-29"},{"lineNumber":59,"author":{"gitId":"david-eom"},"content":"        PinCommand pinFirstCommandCopy \u003d new PinCommand(TypicalIndexes.INDEX_FIRST_PERSON);","lastModifiedDate":"2021-10-29"},{"lineNumber":60,"author":{"gitId":"david-eom"},"content":"        assertEquals(pinFirstCommand, pinFirstCommandCopy);","lastModifiedDate":"2021-10-29"},{"lineNumber":61,"author":{"gitId":"david-eom"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":62,"author":{"gitId":"david-eom"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2021-10-29"},{"lineNumber":63,"author":{"gitId":"david-eom"},"content":"        assertNotEquals(1, pinFirstCommand);","lastModifiedDate":"2021-10-29"},{"lineNumber":64,"author":{"gitId":"david-eom"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":65,"author":{"gitId":"david-eom"},"content":"        // null -\u003e returns false","lastModifiedDate":"2021-10-29"},{"lineNumber":66,"author":{"gitId":"david-eom"},"content":"        assertNotEquals(null, pinFirstCommand);","lastModifiedDate":"2021-10-29"},{"lineNumber":67,"author":{"gitId":"david-eom"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":68,"author":{"gitId":"david-eom"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2021-10-29"},{"lineNumber":69,"author":{"gitId":"david-eom"},"content":"        assertNotEquals(pinSecondCommand, pinFirstCommand);","lastModifiedDate":"2021-10-29"},{"lineNumber":70,"author":{"gitId":"david-eom"},"content":"    }","lastModifiedDate":"2021-10-29"},{"lineNumber":71,"author":{"gitId":"david-eom"},"content":"}","lastModifiedDate":"2021-10-29"}],"authorContributionMap":{"david-eom":71}},{"path":"src/test/java/socialite/logic/commands/RemarkCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"EssWhyy"},"content":"package socialite.logic.commands;","lastModifiedDate":"2021-10-12"},{"lineNumber":2,"author":{"gitId":"EssWhyy"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":3,"author":{"gitId":"EssWhyy"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-10-12"},{"lineNumber":4,"author":{"gitId":"EssWhyy"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-12"},{"lineNumber":5,"author":{"gitId":"EssWhyy"},"content":"import static socialite.logic.commands.CommandTestUtil.VALID_REMARK_AMY;","lastModifiedDate":"2021-10-12"},{"lineNumber":6,"author":{"gitId":"EssWhyy"},"content":"import static socialite.logic.commands.CommandTestUtil.VALID_REMARK_BOB;","lastModifiedDate":"2021-10-12"},{"lineNumber":7,"author":{"gitId":"EssWhyy"},"content":"import static socialite.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2021-10-12"},{"lineNumber":8,"author":{"gitId":"EssWhyy"},"content":"import static socialite.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2021-10-12"},{"lineNumber":9,"author":{"gitId":"EssWhyy"},"content":"import static socialite.logic.commands.CommandTestUtil.showPersonAtIndex;","lastModifiedDate":"2021-10-12"},{"lineNumber":10,"author":{"gitId":"EssWhyy"},"content":"import static socialite.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2021-10-12"},{"lineNumber":11,"author":{"gitId":"EssWhyy"},"content":"import static socialite.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2021-10-12"},{"lineNumber":12,"author":{"gitId":"EssWhyy"},"content":"import static socialite.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2021-10-12"},{"lineNumber":13,"author":{"gitId":"EssWhyy"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":14,"author":{"gitId":"EssWhyy"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-12"},{"lineNumber":15,"author":{"gitId":"EssWhyy"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":16,"author":{"gitId":"EssWhyy"},"content":"import socialite.commons.core.Messages;","lastModifiedDate":"2021-10-12"},{"lineNumber":17,"author":{"gitId":"EssWhyy"},"content":"import socialite.commons.core.index.Index;","lastModifiedDate":"2021-10-12"},{"lineNumber":18,"author":{"gitId":"EssWhyy"},"content":"import socialite.model.AddressBook;","lastModifiedDate":"2021-10-12"},{"lineNumber":19,"author":{"gitId":"david-eom"},"content":"import socialite.model.CommandHistory;","lastModifiedDate":"2021-10-21"},{"lineNumber":20,"author":{"gitId":"EssWhyy"},"content":"import socialite.model.Model;","lastModifiedDate":"2021-10-12"},{"lineNumber":21,"author":{"gitId":"EssWhyy"},"content":"import socialite.model.ModelManager;","lastModifiedDate":"2021-10-12"},{"lineNumber":22,"author":{"gitId":"EssWhyy"},"content":"import socialite.model.UserPrefs;","lastModifiedDate":"2021-10-12"},{"lineNumber":23,"author":{"gitId":"EssWhyy"},"content":"import socialite.model.person.Person;","lastModifiedDate":"2021-10-12"},{"lineNumber":24,"author":{"gitId":"EssWhyy"},"content":"import socialite.model.person.Remark;","lastModifiedDate":"2021-10-12"},{"lineNumber":25,"author":{"gitId":"EssWhyy"},"content":"import socialite.testutil.PersonBuilder;","lastModifiedDate":"2021-10-12"},{"lineNumber":26,"author":{"gitId":"EssWhyy"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":27,"author":{"gitId":"EssWhyy"},"content":"/**","lastModifiedDate":"2021-10-12"},{"lineNumber":28,"author":{"gitId":"EssWhyy"},"content":" * Contains integration tests (interaction with the Model) and unit tests for RemarkCommand.","lastModifiedDate":"2021-10-12"},{"lineNumber":29,"author":{"gitId":"EssWhyy"},"content":" */","lastModifiedDate":"2021-10-12"},{"lineNumber":30,"author":{"gitId":"EssWhyy"},"content":"public class RemarkCommandTest {","lastModifiedDate":"2021-10-12"},{"lineNumber":31,"author":{"gitId":"EssWhyy"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":32,"author":{"gitId":"EssWhyy"},"content":"    private static final String REMARK_STUB \u003d \"Some remark\";","lastModifiedDate":"2021-10-12"},{"lineNumber":33,"author":{"gitId":"Zacchua"},"content":"    private final Model model \u003d new ModelManager(","lastModifiedDate":"2021-10-26"},{"lineNumber":34,"author":{"gitId":"Zacchua"},"content":"            getTypicalAddressBook(), new UserPrefs(), new CommandHistory());","lastModifiedDate":"2021-10-27"},{"lineNumber":35,"author":{"gitId":"EssWhyy"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":36,"author":{"gitId":"EssWhyy"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":37,"author":{"gitId":"EssWhyy"},"content":"    @Test","lastModifiedDate":"2021-10-12"},{"lineNumber":38,"author":{"gitId":"EssWhyy"},"content":"    public void execute_addRemarkUnfilteredList_success() {","lastModifiedDate":"2021-10-12"},{"lineNumber":39,"author":{"gitId":"EssWhyy"},"content":"        Person firstPerson \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2021-10-12"},{"lineNumber":40,"author":{"gitId":"EssWhyy"},"content":"        Person editedPerson \u003d new PersonBuilder(firstPerson).withRemark(REMARK_STUB).build();","lastModifiedDate":"2021-10-12"},{"lineNumber":41,"author":{"gitId":"EssWhyy"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":42,"author":{"gitId":"david-eom"},"content":"        RemarkCommand remarkCommand \u003d new RemarkCommand(INDEX_FIRST_PERSON, new Remark(editedPerson.getRemark().get()));","lastModifiedDate":"2021-10-22"},{"lineNumber":43,"author":{"gitId":"EssWhyy"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":44,"author":{"gitId":"EssWhyy"},"content":"        String expectedMessage \u003d String.format(RemarkCommand.MESSAGE_ADD_REMARK_SUCCESS, editedPerson);","lastModifiedDate":"2021-10-12"},{"lineNumber":45,"author":{"gitId":"EssWhyy"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":46,"author":{"gitId":"david-eom"},"content":"        Model expectedModel \u003d","lastModifiedDate":"2021-10-21"},{"lineNumber":47,"author":{"gitId":"Zacchua"},"content":"                new ModelManager(","lastModifiedDate":"2021-10-26"},{"lineNumber":48,"author":{"gitId":"Zacchua"},"content":"                        new AddressBook(model.getAddressBook()), new UserPrefs(), new CommandHistory());","lastModifiedDate":"2021-10-27"},{"lineNumber":49,"author":{"gitId":"EssWhyy"},"content":"        expectedModel.setPerson(firstPerson, editedPerson);","lastModifiedDate":"2021-10-12"},{"lineNumber":50,"author":{"gitId":"EssWhyy"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":51,"author":{"gitId":"EssWhyy"},"content":"        assertCommandSuccess(remarkCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2021-10-12"},{"lineNumber":52,"author":{"gitId":"EssWhyy"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":53,"author":{"gitId":"EssWhyy"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":54,"author":{"gitId":"EssWhyy"},"content":"    @Test","lastModifiedDate":"2021-10-12"},{"lineNumber":55,"author":{"gitId":"EssWhyy"},"content":"    public void execute_deleteRemarkUnfilteredList_success() {","lastModifiedDate":"2021-10-12"},{"lineNumber":56,"author":{"gitId":"EssWhyy"},"content":"        Person firstPerson \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2021-10-12"},{"lineNumber":57,"author":{"gitId":"david-eom"},"content":"        Person editedPerson \u003d new PersonBuilder(firstPerson).withRemark(null).build();","lastModifiedDate":"2021-10-22"},{"lineNumber":58,"author":{"gitId":"EssWhyy"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":59,"author":{"gitId":"EssWhyy"},"content":"        RemarkCommand remarkCommand \u003d new RemarkCommand(INDEX_FIRST_PERSON,","lastModifiedDate":"2021-10-12"},{"lineNumber":60,"author":{"gitId":"david-eom"},"content":"                new Remark(editedPerson.getRemark().get()));","lastModifiedDate":"2021-10-22"},{"lineNumber":61,"author":{"gitId":"EssWhyy"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":62,"author":{"gitId":"EssWhyy"},"content":"        String expectedMessage \u003d String.format(RemarkCommand.MESSAGE_DELETE_REMARK_SUCCESS, editedPerson);","lastModifiedDate":"2021-10-12"},{"lineNumber":63,"author":{"gitId":"EssWhyy"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":64,"author":{"gitId":"david-eom"},"content":"        Model expectedModel \u003d","lastModifiedDate":"2021-10-21"},{"lineNumber":65,"author":{"gitId":"Zacchua"},"content":"                new ModelManager(","lastModifiedDate":"2021-10-26"},{"lineNumber":66,"author":{"gitId":"Zacchua"},"content":"                        new AddressBook(model.getAddressBook()), new UserPrefs(), new CommandHistory());","lastModifiedDate":"2021-10-27"},{"lineNumber":67,"author":{"gitId":"EssWhyy"},"content":"        expectedModel.setPerson(firstPerson, editedPerson);","lastModifiedDate":"2021-10-12"},{"lineNumber":68,"author":{"gitId":"EssWhyy"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":69,"author":{"gitId":"EssWhyy"},"content":"        assertCommandSuccess(remarkCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2021-10-12"},{"lineNumber":70,"author":{"gitId":"EssWhyy"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":71,"author":{"gitId":"EssWhyy"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":72,"author":{"gitId":"EssWhyy"},"content":"    @Test","lastModifiedDate":"2021-10-12"},{"lineNumber":73,"author":{"gitId":"EssWhyy"},"content":"    public void execute_filteredList_success() {","lastModifiedDate":"2021-10-12"},{"lineNumber":74,"author":{"gitId":"EssWhyy"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2021-10-12"},{"lineNumber":75,"author":{"gitId":"EssWhyy"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":76,"author":{"gitId":"EssWhyy"},"content":"        Person firstPerson \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2021-10-12"},{"lineNumber":77,"author":{"gitId":"EssWhyy"},"content":"        Person editedPerson \u003d new PersonBuilder(model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased()))","lastModifiedDate":"2021-10-12"},{"lineNumber":78,"author":{"gitId":"EssWhyy"},"content":"                .withRemark(REMARK_STUB).build();","lastModifiedDate":"2021-10-12"},{"lineNumber":79,"author":{"gitId":"EssWhyy"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":80,"author":{"gitId":"david-eom"},"content":"        RemarkCommand remarkCommand \u003d new RemarkCommand(INDEX_FIRST_PERSON, new Remark(editedPerson.getRemark().get()));","lastModifiedDate":"2021-10-22"},{"lineNumber":81,"author":{"gitId":"EssWhyy"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":82,"author":{"gitId":"EssWhyy"},"content":"        String expectedMessage \u003d String.format(RemarkCommand.MESSAGE_ADD_REMARK_SUCCESS, editedPerson);","lastModifiedDate":"2021-10-12"},{"lineNumber":83,"author":{"gitId":"EssWhyy"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":84,"author":{"gitId":"david-eom"},"content":"        Model expectedModel \u003d","lastModifiedDate":"2021-10-21"},{"lineNumber":85,"author":{"gitId":"Zacchua"},"content":"                new ModelManager(","lastModifiedDate":"2021-10-26"},{"lineNumber":86,"author":{"gitId":"Zacchua"},"content":"                        new AddressBook(model.getAddressBook()), new UserPrefs(), new CommandHistory());","lastModifiedDate":"2021-10-27"},{"lineNumber":87,"author":{"gitId":"EssWhyy"},"content":"        expectedModel.setPerson(firstPerson, editedPerson);","lastModifiedDate":"2021-10-12"},{"lineNumber":88,"author":{"gitId":"EssWhyy"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":89,"author":{"gitId":"EssWhyy"},"content":"        assertCommandSuccess(remarkCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2021-10-12"},{"lineNumber":90,"author":{"gitId":"EssWhyy"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":91,"author":{"gitId":"EssWhyy"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":92,"author":{"gitId":"EssWhyy"},"content":"    @Test","lastModifiedDate":"2021-10-12"},{"lineNumber":93,"author":{"gitId":"EssWhyy"},"content":"    public void execute_invalidPersonIndexUnfilteredList_failure() {","lastModifiedDate":"2021-10-12"},{"lineNumber":94,"author":{"gitId":"EssWhyy"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredPersonList().size() + 1);","lastModifiedDate":"2021-10-12"},{"lineNumber":95,"author":{"gitId":"EssWhyy"},"content":"        RemarkCommand remarkCommand \u003d new RemarkCommand(outOfBoundIndex, new Remark(VALID_REMARK_BOB));","lastModifiedDate":"2021-10-12"},{"lineNumber":96,"author":{"gitId":"EssWhyy"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":97,"author":{"gitId":"EssWhyy"},"content":"        assertCommandFailure(remarkCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2021-10-12"},{"lineNumber":98,"author":{"gitId":"EssWhyy"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":99,"author":{"gitId":"EssWhyy"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":100,"author":{"gitId":"EssWhyy"},"content":"    /**","lastModifiedDate":"2021-10-12"},{"lineNumber":101,"author":{"gitId":"EssWhyy"},"content":"     * Edit filtered list where index is larger than size of filtered list,","lastModifiedDate":"2021-10-12"},{"lineNumber":102,"author":{"gitId":"EssWhyy"},"content":"     * but smaller than size of address book","lastModifiedDate":"2021-10-12"},{"lineNumber":103,"author":{"gitId":"EssWhyy"},"content":"     */","lastModifiedDate":"2021-10-12"},{"lineNumber":104,"author":{"gitId":"EssWhyy"},"content":"    @Test","lastModifiedDate":"2021-10-12"},{"lineNumber":105,"author":{"gitId":"EssWhyy"},"content":"    public void execute_invalidPersonIndexFilteredList_failure() {","lastModifiedDate":"2021-10-12"},{"lineNumber":106,"author":{"gitId":"EssWhyy"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2021-10-12"},{"lineNumber":107,"author":{"gitId":"EssWhyy"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2021-10-12"},{"lineNumber":108,"author":{"gitId":"EssWhyy"},"content":"        // ensures that outOfBoundIndex is still in bounds of address book list","lastModifiedDate":"2021-10-12"},{"lineNumber":109,"author":{"gitId":"EssWhyy"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getAddressBook().getPersonList().size());","lastModifiedDate":"2021-10-12"},{"lineNumber":110,"author":{"gitId":"EssWhyy"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":111,"author":{"gitId":"EssWhyy"},"content":"        RemarkCommand remarkCommand \u003d new RemarkCommand(outOfBoundIndex, new Remark(VALID_REMARK_BOB));","lastModifiedDate":"2021-10-12"},{"lineNumber":112,"author":{"gitId":"EssWhyy"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":113,"author":{"gitId":"EssWhyy"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":114,"author":{"gitId":"EssWhyy"},"content":"        assertCommandFailure(remarkCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2021-10-12"},{"lineNumber":115,"author":{"gitId":"EssWhyy"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":116,"author":{"gitId":"EssWhyy"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":117,"author":{"gitId":"EssWhyy"},"content":"    @Test","lastModifiedDate":"2021-10-12"},{"lineNumber":118,"author":{"gitId":"EssWhyy"},"content":"    public void equals() {","lastModifiedDate":"2021-10-12"},{"lineNumber":119,"author":{"gitId":"EssWhyy"},"content":"        final RemarkCommand standardCommand \u003d new RemarkCommand(INDEX_FIRST_PERSON,","lastModifiedDate":"2021-10-12"},{"lineNumber":120,"author":{"gitId":"EssWhyy"},"content":"                new Remark(VALID_REMARK_AMY));","lastModifiedDate":"2021-10-12"},{"lineNumber":121,"author":{"gitId":"EssWhyy"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":122,"author":{"gitId":"EssWhyy"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2021-10-12"},{"lineNumber":123,"author":{"gitId":"EssWhyy"},"content":"        RemarkCommand commandWithSameValues \u003d new RemarkCommand(INDEX_FIRST_PERSON,","lastModifiedDate":"2021-10-12"},{"lineNumber":124,"author":{"gitId":"EssWhyy"},"content":"                new Remark(VALID_REMARK_AMY));","lastModifiedDate":"2021-10-12"},{"lineNumber":125,"author":{"gitId":"EssWhyy"},"content":"        assertTrue(standardCommand.equals(commandWithSameValues));","lastModifiedDate":"2021-10-12"},{"lineNumber":126,"author":{"gitId":"EssWhyy"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":127,"author":{"gitId":"EssWhyy"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2021-10-12"},{"lineNumber":128,"author":{"gitId":"EssWhyy"},"content":"        assertTrue(standardCommand.equals(standardCommand));","lastModifiedDate":"2021-10-12"},{"lineNumber":129,"author":{"gitId":"EssWhyy"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":130,"author":{"gitId":"EssWhyy"},"content":"        // null -\u003e returns false","lastModifiedDate":"2021-10-12"},{"lineNumber":131,"author":{"gitId":"EssWhyy"},"content":"        assertFalse(standardCommand.equals(null));","lastModifiedDate":"2021-10-12"},{"lineNumber":132,"author":{"gitId":"EssWhyy"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":133,"author":{"gitId":"EssWhyy"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2021-10-12"},{"lineNumber":134,"author":{"gitId":"EssWhyy"},"content":"        assertFalse(standardCommand.equals(new ClearCommand()));","lastModifiedDate":"2021-10-12"},{"lineNumber":135,"author":{"gitId":"EssWhyy"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":136,"author":{"gitId":"EssWhyy"},"content":"        // different index -\u003e returns false","lastModifiedDate":"2021-10-12"},{"lineNumber":137,"author":{"gitId":"EssWhyy"},"content":"        assertFalse(standardCommand.equals(new RemarkCommand(INDEX_SECOND_PERSON,","lastModifiedDate":"2021-10-12"},{"lineNumber":138,"author":{"gitId":"EssWhyy"},"content":"                new Remark(VALID_REMARK_AMY))));","lastModifiedDate":"2021-10-12"},{"lineNumber":139,"author":{"gitId":"EssWhyy"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":140,"author":{"gitId":"EssWhyy"},"content":"        // different remark -\u003e returns false","lastModifiedDate":"2021-10-12"},{"lineNumber":141,"author":{"gitId":"EssWhyy"},"content":"        assertFalse(standardCommand.equals(new RemarkCommand(INDEX_FIRST_PERSON,","lastModifiedDate":"2021-10-12"},{"lineNumber":142,"author":{"gitId":"EssWhyy"},"content":"                new Remark(VALID_REMARK_BOB))));","lastModifiedDate":"2021-10-12"},{"lineNumber":143,"author":{"gitId":"EssWhyy"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":144,"author":{"gitId":"EssWhyy"},"content":"}","lastModifiedDate":"2021-10-12"}],"authorContributionMap":{"Zacchua":8,"EssWhyy":128,"david-eom":8}},{"path":"src/test/java/socialite/logic/commands/ShareCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"david-eom"},"content":"package socialite.logic.commands;","lastModifiedDate":"2021-10-25"},{"lineNumber":2,"author":{"gitId":"david-eom"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":3,"author":{"gitId":"david-eom"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-25"},{"lineNumber":4,"author":{"gitId":"david-eom"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2021-10-25"},{"lineNumber":5,"author":{"gitId":"david-eom"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-25"},{"lineNumber":6,"author":{"gitId":"david-eom"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":7,"author":{"gitId":"david-eom"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-25"},{"lineNumber":8,"author":{"gitId":"david-eom"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":9,"author":{"gitId":"david-eom"},"content":"import socialite.commons.core.Messages;","lastModifiedDate":"2021-10-25"},{"lineNumber":10,"author":{"gitId":"david-eom"},"content":"import socialite.commons.core.index.Index;","lastModifiedDate":"2021-10-25"},{"lineNumber":11,"author":{"gitId":"david-eom"},"content":"import socialite.model.CommandHistory;","lastModifiedDate":"2021-10-25"},{"lineNumber":12,"author":{"gitId":"david-eom"},"content":"import socialite.model.Model;","lastModifiedDate":"2021-10-25"},{"lineNumber":13,"author":{"gitId":"david-eom"},"content":"import socialite.model.ModelManager;","lastModifiedDate":"2021-10-25"},{"lineNumber":14,"author":{"gitId":"david-eom"},"content":"import socialite.model.UserPrefs;","lastModifiedDate":"2021-10-25"},{"lineNumber":15,"author":{"gitId":"david-eom"},"content":"import socialite.testutil.TypicalIndexes;","lastModifiedDate":"2021-10-25"},{"lineNumber":16,"author":{"gitId":"david-eom"},"content":"import socialite.testutil.TypicalPersons;","lastModifiedDate":"2021-10-25"},{"lineNumber":17,"author":{"gitId":"david-eom"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":18,"author":{"gitId":"david-eom"},"content":"/**","lastModifiedDate":"2021-10-25"},{"lineNumber":19,"author":{"gitId":"david-eom"},"content":" * Contains integration tests (interaction with the model) and unit tests for {@code ShareCommand}.","lastModifiedDate":"2021-10-25"},{"lineNumber":20,"author":{"gitId":"david-eom"},"content":" */","lastModifiedDate":"2021-10-25"},{"lineNumber":21,"author":{"gitId":"david-eom"},"content":"public class ShareCommandTest {","lastModifiedDate":"2021-10-25"},{"lineNumber":22,"author":{"gitId":"david-eom"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":23,"author":{"gitId":"david-eom"},"content":"    private Model model \u003d","lastModifiedDate":"2021-10-25"},{"lineNumber":24,"author":{"gitId":"david-eom"},"content":"            new ModelManager(TypicalPersons.getTypicalAddressBook(), new UserPrefs(), new CommandHistory());","lastModifiedDate":"2021-10-25"},{"lineNumber":25,"author":{"gitId":"david-eom"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":26,"author":{"gitId":"david-eom"},"content":"    @Test","lastModifiedDate":"2021-10-25"},{"lineNumber":27,"author":{"gitId":"david-eom"},"content":"    public void execute_invalidIndexUnfilteredList_throwsCommandException() {","lastModifiedDate":"2021-10-25"},{"lineNumber":28,"author":{"gitId":"david-eom"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredPersonList().size() + 1);","lastModifiedDate":"2021-10-25"},{"lineNumber":29,"author":{"gitId":"david-eom"},"content":"        ShareCommand shareCommand \u003d new ShareCommand(outOfBoundIndex);","lastModifiedDate":"2021-10-25"},{"lineNumber":30,"author":{"gitId":"david-eom"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":31,"author":{"gitId":"david-eom"},"content":"        CommandTestUtil.assertCommandFailure(shareCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2021-10-25"},{"lineNumber":32,"author":{"gitId":"david-eom"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":33,"author":{"gitId":"david-eom"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":34,"author":{"gitId":"david-eom"},"content":"    @Test","lastModifiedDate":"2021-10-25"},{"lineNumber":35,"author":{"gitId":"david-eom"},"content":"    public void execute_invalidIndexFilteredLIst_throwsCommandException() {","lastModifiedDate":"2021-10-25"},{"lineNumber":36,"author":{"gitId":"david-eom"},"content":"        CommandTestUtil.showPersonAtIndex(model, TypicalIndexes.INDEX_FIRST_PERSON);","lastModifiedDate":"2021-10-25"},{"lineNumber":37,"author":{"gitId":"david-eom"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":38,"author":{"gitId":"david-eom"},"content":"        Index outOfBoundIndex \u003d TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2021-10-25"},{"lineNumber":39,"author":{"gitId":"david-eom"},"content":"        // ensures that outOfBoundIndex is still in bounds of address book list","lastModifiedDate":"2021-10-25"},{"lineNumber":40,"author":{"gitId":"david-eom"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getAddressBook().getPersonList().size());","lastModifiedDate":"2021-10-25"},{"lineNumber":41,"author":{"gitId":"david-eom"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":42,"author":{"gitId":"david-eom"},"content":"        ShareCommand shareCommand \u003d new ShareCommand(outOfBoundIndex);","lastModifiedDate":"2021-10-25"},{"lineNumber":43,"author":{"gitId":"david-eom"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":44,"author":{"gitId":"david-eom"},"content":"        CommandTestUtil.assertCommandFailure(shareCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2021-10-25"},{"lineNumber":45,"author":{"gitId":"david-eom"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":46,"author":{"gitId":"david-eom"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":47,"author":{"gitId":"david-eom"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":48,"author":{"gitId":"david-eom"},"content":"    @Test","lastModifiedDate":"2021-10-25"},{"lineNumber":49,"author":{"gitId":"david-eom"},"content":"    public void equals() {","lastModifiedDate":"2021-10-25"},{"lineNumber":50,"author":{"gitId":"david-eom"},"content":"        ShareCommand shareFirstCommand \u003d new ShareCommand(TypicalIndexes.INDEX_FIRST_PERSON);","lastModifiedDate":"2021-10-25"},{"lineNumber":51,"author":{"gitId":"david-eom"},"content":"        ShareCommand shareSecondCommand \u003d new ShareCommand(TypicalIndexes.INDEX_SECOND_PERSON);","lastModifiedDate":"2021-10-25"},{"lineNumber":52,"author":{"gitId":"david-eom"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":53,"author":{"gitId":"david-eom"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2021-10-25"},{"lineNumber":54,"author":{"gitId":"david-eom"},"content":"        assertEquals(shareFirstCommand, shareFirstCommand);","lastModifiedDate":"2021-10-25"},{"lineNumber":55,"author":{"gitId":"david-eom"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":56,"author":{"gitId":"david-eom"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2021-10-25"},{"lineNumber":57,"author":{"gitId":"david-eom"},"content":"        ShareCommand shareFirstCommandCopy \u003d new ShareCommand(TypicalIndexes.INDEX_FIRST_PERSON);","lastModifiedDate":"2021-10-25"},{"lineNumber":58,"author":{"gitId":"david-eom"},"content":"        assertEquals(shareFirstCommand, shareFirstCommandCopy);","lastModifiedDate":"2021-10-25"},{"lineNumber":59,"author":{"gitId":"david-eom"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":60,"author":{"gitId":"david-eom"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2021-10-25"},{"lineNumber":61,"author":{"gitId":"david-eom"},"content":"        assertNotEquals(1, shareFirstCommand);","lastModifiedDate":"2021-10-25"},{"lineNumber":62,"author":{"gitId":"david-eom"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":63,"author":{"gitId":"david-eom"},"content":"        // null -\u003e returns false","lastModifiedDate":"2021-10-25"},{"lineNumber":64,"author":{"gitId":"david-eom"},"content":"        assertNotEquals(null, shareFirstCommand);","lastModifiedDate":"2021-10-25"},{"lineNumber":65,"author":{"gitId":"david-eom"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":66,"author":{"gitId":"david-eom"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2021-10-25"},{"lineNumber":67,"author":{"gitId":"david-eom"},"content":"        assertNotEquals(shareSecondCommand, shareFirstCommand);","lastModifiedDate":"2021-10-25"},{"lineNumber":68,"author":{"gitId":"david-eom"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":69,"author":{"gitId":"david-eom"},"content":"}","lastModifiedDate":"2021-10-25"}],"authorContributionMap":{"david-eom":69}},{"path":"src/test/java/socialite/logic/commands/UnpinCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"david-eom"},"content":"package socialite.logic.commands;","lastModifiedDate":"2021-10-29"},{"lineNumber":2,"author":{"gitId":"david-eom"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":3,"author":{"gitId":"david-eom"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-29"},{"lineNumber":4,"author":{"gitId":"david-eom"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2021-10-29"},{"lineNumber":5,"author":{"gitId":"david-eom"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-29"},{"lineNumber":6,"author":{"gitId":"david-eom"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":7,"author":{"gitId":"david-eom"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-29"},{"lineNumber":8,"author":{"gitId":"david-eom"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":9,"author":{"gitId":"david-eom"},"content":"import socialite.commons.core.Messages;","lastModifiedDate":"2021-10-29"},{"lineNumber":10,"author":{"gitId":"david-eom"},"content":"import socialite.commons.core.index.Index;","lastModifiedDate":"2021-10-29"},{"lineNumber":11,"author":{"gitId":"david-eom"},"content":"import socialite.model.CommandHistory;","lastModifiedDate":"2021-10-29"},{"lineNumber":12,"author":{"gitId":"david-eom"},"content":"import socialite.model.Model;","lastModifiedDate":"2021-10-29"},{"lineNumber":13,"author":{"gitId":"david-eom"},"content":"import socialite.model.ModelManager;","lastModifiedDate":"2021-10-29"},{"lineNumber":14,"author":{"gitId":"david-eom"},"content":"import socialite.model.UserPrefs;","lastModifiedDate":"2021-10-29"},{"lineNumber":15,"author":{"gitId":"david-eom"},"content":"import socialite.testutil.TypicalIndexes;","lastModifiedDate":"2021-10-29"},{"lineNumber":16,"author":{"gitId":"david-eom"},"content":"import socialite.testutil.TypicalPersons;","lastModifiedDate":"2021-10-29"},{"lineNumber":17,"author":{"gitId":"david-eom"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":18,"author":{"gitId":"david-eom"},"content":"/**","lastModifiedDate":"2021-10-29"},{"lineNumber":19,"author":{"gitId":"david-eom"},"content":" * Contains integration tests (interaction with the model) and unit tests for {@code UnpinCommand}.","lastModifiedDate":"2021-10-29"},{"lineNumber":20,"author":{"gitId":"david-eom"},"content":" */","lastModifiedDate":"2021-10-29"},{"lineNumber":21,"author":{"gitId":"david-eom"},"content":"public class UnpinCommandTest {","lastModifiedDate":"2021-10-29"},{"lineNumber":22,"author":{"gitId":"david-eom"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":23,"author":{"gitId":"david-eom"},"content":"    private Model model \u003d","lastModifiedDate":"2021-10-29"},{"lineNumber":24,"author":{"gitId":"david-eom"},"content":"            new ModelManager(TypicalPersons.getTypicalAddressBook(), new UserPrefs(), new CommandHistory());","lastModifiedDate":"2021-10-29"},{"lineNumber":25,"author":{"gitId":"david-eom"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":26,"author":{"gitId":"david-eom"},"content":"    @Test","lastModifiedDate":"2021-10-29"},{"lineNumber":27,"author":{"gitId":"david-eom"},"content":"    public void execute_invalidIndexUnfilteredList_throwsCommandException() {","lastModifiedDate":"2021-10-29"},{"lineNumber":28,"author":{"gitId":"david-eom"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredPersonList().size() + 1);","lastModifiedDate":"2021-10-29"},{"lineNumber":29,"author":{"gitId":"david-eom"},"content":"        UnpinCommand unpinCommand \u003d new UnpinCommand(outOfBoundIndex);","lastModifiedDate":"2021-10-29"},{"lineNumber":30,"author":{"gitId":"david-eom"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":31,"author":{"gitId":"david-eom"},"content":"        CommandTestUtil.assertCommandFailure(unpinCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2021-10-29"},{"lineNumber":32,"author":{"gitId":"david-eom"},"content":"    }","lastModifiedDate":"2021-10-29"},{"lineNumber":33,"author":{"gitId":"david-eom"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":34,"author":{"gitId":"david-eom"},"content":"    @Test","lastModifiedDate":"2021-10-29"},{"lineNumber":35,"author":{"gitId":"david-eom"},"content":"    public void execute_invalidIndexFilteredLIst_throwsCommandException() {","lastModifiedDate":"2021-10-29"},{"lineNumber":36,"author":{"gitId":"david-eom"},"content":"        CommandTestUtil.showPersonAtIndex(model, TypicalIndexes.INDEX_FIRST_PERSON);","lastModifiedDate":"2021-10-29"},{"lineNumber":37,"author":{"gitId":"david-eom"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":38,"author":{"gitId":"david-eom"},"content":"        Index outOfBoundIndex \u003d TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2021-10-29"},{"lineNumber":39,"author":{"gitId":"david-eom"},"content":"        // ensures that outOfBoundIndex is still in bounds of address book list","lastModifiedDate":"2021-10-29"},{"lineNumber":40,"author":{"gitId":"david-eom"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getAddressBook().getPersonList().size());","lastModifiedDate":"2021-10-29"},{"lineNumber":41,"author":{"gitId":"david-eom"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":42,"author":{"gitId":"david-eom"},"content":"        UnpinCommand unpinCommand \u003d new UnpinCommand(outOfBoundIndex);","lastModifiedDate":"2021-10-29"},{"lineNumber":43,"author":{"gitId":"david-eom"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":44,"author":{"gitId":"david-eom"},"content":"        CommandTestUtil.assertCommandFailure(unpinCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2021-10-29"},{"lineNumber":45,"author":{"gitId":"david-eom"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":46,"author":{"gitId":"david-eom"},"content":"    }","lastModifiedDate":"2021-10-29"},{"lineNumber":47,"author":{"gitId":"david-eom"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":48,"author":{"gitId":"david-eom"},"content":"    //TODO: execute_unpinAnUnpinnedPerson_throwsCommandException()","lastModifiedDate":"2021-10-29"},{"lineNumber":49,"author":{"gitId":"david-eom"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":50,"author":{"gitId":"david-eom"},"content":"    @Test","lastModifiedDate":"2021-10-29"},{"lineNumber":51,"author":{"gitId":"david-eom"},"content":"    public void equals() {","lastModifiedDate":"2021-10-29"},{"lineNumber":52,"author":{"gitId":"david-eom"},"content":"        UnpinCommand unpinFirstCommand \u003d new UnpinCommand(TypicalIndexes.INDEX_FIRST_PERSON);","lastModifiedDate":"2021-10-29"},{"lineNumber":53,"author":{"gitId":"david-eom"},"content":"        UnpinCommand unpinSecondCommand \u003d new UnpinCommand(TypicalIndexes.INDEX_SECOND_PERSON);","lastModifiedDate":"2021-10-29"},{"lineNumber":54,"author":{"gitId":"david-eom"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":55,"author":{"gitId":"david-eom"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2021-10-29"},{"lineNumber":56,"author":{"gitId":"david-eom"},"content":"        assertEquals(unpinFirstCommand, unpinFirstCommand);","lastModifiedDate":"2021-10-29"},{"lineNumber":57,"author":{"gitId":"david-eom"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":58,"author":{"gitId":"david-eom"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2021-10-29"},{"lineNumber":59,"author":{"gitId":"david-eom"},"content":"        UnpinCommand unpinFirstCommandCopy \u003d new UnpinCommand(TypicalIndexes.INDEX_FIRST_PERSON);","lastModifiedDate":"2021-10-29"},{"lineNumber":60,"author":{"gitId":"david-eom"},"content":"        assertEquals(unpinFirstCommand, unpinFirstCommandCopy);","lastModifiedDate":"2021-10-29"},{"lineNumber":61,"author":{"gitId":"david-eom"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":62,"author":{"gitId":"david-eom"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2021-10-29"},{"lineNumber":63,"author":{"gitId":"david-eom"},"content":"        assertNotEquals(1, unpinFirstCommand);","lastModifiedDate":"2021-10-29"},{"lineNumber":64,"author":{"gitId":"david-eom"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":65,"author":{"gitId":"david-eom"},"content":"        // null -\u003e returns false","lastModifiedDate":"2021-10-29"},{"lineNumber":66,"author":{"gitId":"david-eom"},"content":"        assertNotEquals(null, unpinFirstCommand);","lastModifiedDate":"2021-10-29"},{"lineNumber":67,"author":{"gitId":"david-eom"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":68,"author":{"gitId":"david-eom"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2021-10-29"},{"lineNumber":69,"author":{"gitId":"david-eom"},"content":"        assertNotEquals(unpinSecondCommand, unpinFirstCommand);","lastModifiedDate":"2021-10-29"},{"lineNumber":70,"author":{"gitId":"david-eom"},"content":"    }","lastModifiedDate":"2021-10-29"},{"lineNumber":71,"author":{"gitId":"david-eom"},"content":"}","lastModifiedDate":"2021-10-29"}],"authorContributionMap":{"david-eom":71}},{"path":"src/test/java/socialite/logic/parser/AddCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"david-eom"},"content":"package socialite.logic.parser;","lastModifiedDate":"2021-10-08"},{"lineNumber":2,"author":{"gitId":"david-eom"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":3,"author":{"gitId":"david-eom"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-08"},{"lineNumber":4,"author":{"gitId":"david-eom"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":5,"author":{"gitId":"david-eom"},"content":"import socialite.commons.core.Messages;","lastModifiedDate":"2021-10-09"},{"lineNumber":6,"author":{"gitId":"david-eom"},"content":"import socialite.logic.commands.AddCommand;","lastModifiedDate":"2021-10-08"},{"lineNumber":7,"author":{"gitId":"david-eom"},"content":"import socialite.logic.commands.CommandTestUtil;","lastModifiedDate":"2021-10-09"},{"lineNumber":8,"author":{"gitId":"david-eom"},"content":"import socialite.model.person.Name;","lastModifiedDate":"2021-10-08"},{"lineNumber":9,"author":{"gitId":"david-eom"},"content":"import socialite.model.person.Person;","lastModifiedDate":"2021-10-08"},{"lineNumber":10,"author":{"gitId":"david-eom"},"content":"import socialite.model.person.Phone;","lastModifiedDate":"2021-10-08"},{"lineNumber":11,"author":{"gitId":"david-eom"},"content":"import socialite.model.tag.Tag;","lastModifiedDate":"2021-10-08"},{"lineNumber":12,"author":{"gitId":"david-eom"},"content":"import socialite.testutil.PersonBuilder;","lastModifiedDate":"2021-10-08"},{"lineNumber":13,"author":{"gitId":"david-eom"},"content":"import socialite.testutil.TypicalPersons;","lastModifiedDate":"2021-10-08"},{"lineNumber":14,"author":{"gitId":"david-eom"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":15,"author":{"gitId":"david-eom"},"content":"public class AddCommandParserTest {","lastModifiedDate":"2021-10-08"},{"lineNumber":16,"author":{"gitId":"david-eom"},"content":"    private AddCommandParser parser \u003d new AddCommandParser();","lastModifiedDate":"2021-10-08"},{"lineNumber":17,"author":{"gitId":"david-eom"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":18,"author":{"gitId":"david-eom"},"content":"    @Test","lastModifiedDate":"2021-10-08"},{"lineNumber":19,"author":{"gitId":"david-eom"},"content":"    public void parse_allFieldsPresent_success() {","lastModifiedDate":"2021-10-08"},{"lineNumber":20,"author":{"gitId":"david-eom"},"content":"        Person expectedPerson \u003d","lastModifiedDate":"2021-10-09"},{"lineNumber":21,"author":{"gitId":"david-eom"},"content":"                new PersonBuilder(TypicalPersons.BOB).withTags(CommandTestUtil.VALID_TAG_FRIEND).build();","lastModifiedDate":"2021-10-09"},{"lineNumber":22,"author":{"gitId":"david-eom"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":23,"author":{"gitId":"david-eom"},"content":"        // whitespace only preamble","lastModifiedDate":"2021-10-08"},{"lineNumber":24,"author":{"gitId":"david-eom"},"content":"        CommandParserTestUtil.assertParseSuccess(parser, CommandTestUtil.PREAMBLE_WHITESPACE","lastModifiedDate":"2021-10-08"},{"lineNumber":25,"author":{"gitId":"bnjmnt4n"},"content":"                + CommandTestUtil.NAME_DESC_BOB + CommandTestUtil.PHONE_DESC_BOB","lastModifiedDate":"2021-10-12"},{"lineNumber":26,"author":{"gitId":"bnjmnt4n"},"content":"                + CommandTestUtil.REMARK_DESC_BOB + CommandTestUtil.TAG_DESC_FRIEND","lastModifiedDate":"2021-10-15"},{"lineNumber":27,"author":{"gitId":"david-eom"},"content":"                + CommandTestUtil.FACEBOOK_DESC_BOB + CommandTestUtil.INSTAGRAM_DESC_BOB","lastModifiedDate":"2021-10-12"},{"lineNumber":28,"author":{"gitId":"Zacchua"},"content":"                + CommandTestUtil.TELEGRAM_DESC_BOB + CommandTestUtil.TIKTOK_DESC_BOB","lastModifiedDate":"2021-10-13"},{"lineNumber":29,"author":{"gitId":"bnjmnt4n"},"content":"                + CommandTestUtil.TWITTER_DESC_BOB + CommandTestUtil.DATE_DESC_BOB,","lastModifiedDate":"2021-10-23"},{"lineNumber":30,"author":{"gitId":"bnjmnt4n"},"content":"                new AddCommand(expectedPerson));","lastModifiedDate":"2021-10-23"},{"lineNumber":31,"author":{"gitId":"david-eom"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":32,"author":{"gitId":"david-eom"},"content":"        // multiple names - last name accepted","lastModifiedDate":"2021-10-08"},{"lineNumber":33,"author":{"gitId":"david-eom"},"content":"        CommandParserTestUtil.assertParseSuccess(parser, CommandTestUtil.NAME_DESC_AMY","lastModifiedDate":"2021-10-08"},{"lineNumber":34,"author":{"gitId":"bnjmnt4n"},"content":"                + CommandTestUtil.NAME_DESC_BOB + CommandTestUtil.PHONE_DESC_BOB","lastModifiedDate":"2021-10-12"},{"lineNumber":35,"author":{"gitId":"bnjmnt4n"},"content":"                + CommandTestUtil.REMARK_DESC_BOB + CommandTestUtil.TAG_DESC_FRIEND","lastModifiedDate":"2021-10-15"},{"lineNumber":36,"author":{"gitId":"david-eom"},"content":"                + CommandTestUtil.FACEBOOK_DESC_BOB + CommandTestUtil.INSTAGRAM_DESC_BOB","lastModifiedDate":"2021-10-12"},{"lineNumber":37,"author":{"gitId":"Zacchua"},"content":"                + CommandTestUtil.TELEGRAM_DESC_BOB + CommandTestUtil.TIKTOK_DESC_BOB","lastModifiedDate":"2021-10-13"},{"lineNumber":38,"author":{"gitId":"bnjmnt4n"},"content":"                + CommandTestUtil.TWITTER_DESC_BOB + CommandTestUtil.DATE_DESC_BOB,","lastModifiedDate":"2021-10-23"},{"lineNumber":39,"author":{"gitId":"bnjmnt4n"},"content":"                new AddCommand(expectedPerson));","lastModifiedDate":"2021-10-23"},{"lineNumber":40,"author":{"gitId":"david-eom"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":41,"author":{"gitId":"david-eom"},"content":"        // multiple phones - last phone accepted","lastModifiedDate":"2021-10-08"},{"lineNumber":42,"author":{"gitId":"david-eom"},"content":"        CommandParserTestUtil.assertParseSuccess(parser, CommandTestUtil.NAME_DESC_BOB","lastModifiedDate":"2021-10-08"},{"lineNumber":43,"author":{"gitId":"bnjmnt4n"},"content":"                + CommandTestUtil.PHONE_DESC_AMY + CommandTestUtil.PHONE_DESC_BOB","lastModifiedDate":"2021-10-12"},{"lineNumber":44,"author":{"gitId":"bnjmnt4n"},"content":"                + CommandTestUtil.REMARK_DESC_BOB + CommandTestUtil.TAG_DESC_FRIEND","lastModifiedDate":"2021-10-15"},{"lineNumber":45,"author":{"gitId":"david-eom"},"content":"                + CommandTestUtil.FACEBOOK_DESC_BOB + CommandTestUtil.INSTAGRAM_DESC_BOB","lastModifiedDate":"2021-10-12"},{"lineNumber":46,"author":{"gitId":"Zacchua"},"content":"                + CommandTestUtil.TELEGRAM_DESC_BOB + CommandTestUtil.TIKTOK_DESC_BOB","lastModifiedDate":"2021-10-13"},{"lineNumber":47,"author":{"gitId":"bnjmnt4n"},"content":"                + CommandTestUtil.TWITTER_DESC_BOB + CommandTestUtil.DATE_DESC_BOB,","lastModifiedDate":"2021-10-23"},{"lineNumber":48,"author":{"gitId":"bnjmnt4n"},"content":"                new AddCommand(expectedPerson));","lastModifiedDate":"2021-10-23"},{"lineNumber":49,"author":{"gitId":"david-eom"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":50,"author":{"gitId":"david-eom"},"content":"        // multiple tags - all accepted","lastModifiedDate":"2021-10-08"},{"lineNumber":51,"author":{"gitId":"david-eom"},"content":"        Person expectedPersonMultipleTags \u003d new PersonBuilder(TypicalPersons.BOB)","lastModifiedDate":"2021-10-08"},{"lineNumber":52,"author":{"gitId":"david-eom"},"content":"                .withTags(CommandTestUtil.VALID_TAG_FRIEND, CommandTestUtil.VALID_TAG_HUSBAND)","lastModifiedDate":"2021-10-08"},{"lineNumber":53,"author":{"gitId":"david-eom"},"content":"                .build();","lastModifiedDate":"2021-10-08"},{"lineNumber":54,"author":{"gitId":"david-eom"},"content":"        CommandParserTestUtil.assertParseSuccess(parser, CommandTestUtil.NAME_DESC_BOB","lastModifiedDate":"2021-10-08"},{"lineNumber":55,"author":{"gitId":"bnjmnt4n"},"content":"                + CommandTestUtil.PHONE_DESC_BOB + CommandTestUtil.REMARK_DESC_BOB","lastModifiedDate":"2021-10-15"},{"lineNumber":56,"author":{"gitId":"bnjmnt4n"},"content":"                + CommandTestUtil.TAG_DESC_HUSBAND + CommandTestUtil.TAG_DESC_FRIEND","lastModifiedDate":"2021-10-15"},{"lineNumber":57,"author":{"gitId":"david-eom"},"content":"                + CommandTestUtil.FACEBOOK_DESC_BOB + CommandTestUtil.INSTAGRAM_DESC_BOB","lastModifiedDate":"2021-10-12"},{"lineNumber":58,"author":{"gitId":"Zacchua"},"content":"                + CommandTestUtil.TELEGRAM_DESC_BOB + CommandTestUtil.TIKTOK_DESC_BOB","lastModifiedDate":"2021-10-13"},{"lineNumber":59,"author":{"gitId":"bnjmnt4n"},"content":"                + CommandTestUtil.TWITTER_DESC_BOB + CommandTestUtil.DATE_DESC_BOB,","lastModifiedDate":"2021-10-23"},{"lineNumber":60,"author":{"gitId":"bnjmnt4n"},"content":"                new AddCommand(expectedPersonMultipleTags));","lastModifiedDate":"2021-10-23"},{"lineNumber":61,"author":{"gitId":"david-eom"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":62,"author":{"gitId":"david-eom"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":63,"author":{"gitId":"david-eom"},"content":"    @Test","lastModifiedDate":"2021-10-08"},{"lineNumber":64,"author":{"gitId":"david-eom"},"content":"    public void parse_optionalFieldsMissing_success() {","lastModifiedDate":"2021-10-08"},{"lineNumber":65,"author":{"gitId":"david-eom"},"content":"        // zero tags","lastModifiedDate":"2021-10-08"},{"lineNumber":66,"author":{"gitId":"david-eom"},"content":"        Person expectedPerson \u003d new PersonBuilder(TypicalPersons.AMY).withTags().build();","lastModifiedDate":"2021-10-08"},{"lineNumber":67,"author":{"gitId":"david-eom"},"content":"        CommandParserTestUtil.assertParseSuccess(parser, CommandTestUtil.NAME_DESC_AMY","lastModifiedDate":"2021-10-08"},{"lineNumber":68,"author":{"gitId":"bnjmnt4n"},"content":"                        + CommandTestUtil.PHONE_DESC_AMY + CommandTestUtil.REMARK_DESC_AMY","lastModifiedDate":"2021-10-15"},{"lineNumber":69,"author":{"gitId":"bnjmnt4n"},"content":"                        + CommandTestUtil.FACEBOOK_DESC_AMY + CommandTestUtil.INSTAGRAM_DESC_AMY","lastModifiedDate":"2021-10-15"},{"lineNumber":70,"author":{"gitId":"bnjmnt4n"},"content":"                        + CommandTestUtil.TELEGRAM_DESC_AMY + CommandTestUtil.TIKTOK_DESC_AMY","lastModifiedDate":"2021-10-15"},{"lineNumber":71,"author":{"gitId":"bnjmnt4n"},"content":"                        + CommandTestUtil.TWITTER_DESC_AMY + CommandTestUtil.DATE_DESC_AMY,","lastModifiedDate":"2021-10-23"},{"lineNumber":72,"author":{"gitId":"david-eom"},"content":"                new AddCommand(expectedPerson));","lastModifiedDate":"2021-10-09"},{"lineNumber":73,"author":{"gitId":"david-eom"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":74,"author":{"gitId":"david-eom"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":75,"author":{"gitId":"david-eom"},"content":"    @Test","lastModifiedDate":"2021-10-08"},{"lineNumber":76,"author":{"gitId":"david-eom"},"content":"    public void parse_compulsoryFieldMissing_failure() {","lastModifiedDate":"2021-10-08"},{"lineNumber":77,"author":{"gitId":"stanley-1"},"content":"        String expectedMessage \u003d String.format(Messages.MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_HELP_GUIDE);","lastModifiedDate":"2021-10-20"},{"lineNumber":78,"author":{"gitId":"david-eom"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":79,"author":{"gitId":"david-eom"},"content":"        // missing name prefix","lastModifiedDate":"2021-10-08"},{"lineNumber":80,"author":{"gitId":"david-eom"},"content":"        CommandParserTestUtil.assertParseFailure(parser, CommandTestUtil.VALID_NAME_BOB","lastModifiedDate":"2021-10-08"},{"lineNumber":81,"author":{"gitId":"bnjmnt4n"},"content":"                        + CommandTestUtil.PHONE_DESC_BOB + CommandTestUtil.TIKTOK_DESC_BOB","lastModifiedDate":"2021-10-15"},{"lineNumber":82,"author":{"gitId":"Zacchua"},"content":"                        + CommandTestUtil.TWITTER_DESC_BOB , expectedMessage);","lastModifiedDate":"2021-10-12"},{"lineNumber":83,"author":{"gitId":"david-eom"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":84,"author":{"gitId":"david-eom"},"content":"        // missing phone prefix","lastModifiedDate":"2021-10-08"},{"lineNumber":85,"author":{"gitId":"david-eom"},"content":"        CommandParserTestUtil.assertParseFailure(parser, CommandTestUtil.NAME_DESC_BOB","lastModifiedDate":"2021-10-08"},{"lineNumber":86,"author":{"gitId":"bnjmnt4n"},"content":"                        + CommandTestUtil.VALID_PHONE_BOB + CommandTestUtil.TIKTOK_DESC_BOB","lastModifiedDate":"2021-10-15"},{"lineNumber":87,"author":{"gitId":"Zacchua"},"content":"                        + CommandTestUtil.TWITTER_DESC_BOB, expectedMessage);","lastModifiedDate":"2021-10-12"},{"lineNumber":88,"author":{"gitId":"david-eom"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":89,"author":{"gitId":"david-eom"},"content":"        // all prefixes missing","lastModifiedDate":"2021-10-08"},{"lineNumber":90,"author":{"gitId":"david-eom"},"content":"        CommandParserTestUtil.assertParseFailure(parser, CommandTestUtil.VALID_NAME_BOB","lastModifiedDate":"2021-10-08"},{"lineNumber":91,"author":{"gitId":"bnjmnt4n"},"content":"                        + CommandTestUtil.VALID_PHONE_BOB + CommandTestUtil.TIKTOK_DESC_BOB","lastModifiedDate":"2021-10-15"},{"lineNumber":92,"author":{"gitId":"Zacchua"},"content":"                        + CommandTestUtil.TWITTER_DESC_BOB, expectedMessage);","lastModifiedDate":"2021-10-12"},{"lineNumber":93,"author":{"gitId":"david-eom"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":94,"author":{"gitId":"david-eom"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":95,"author":{"gitId":"david-eom"},"content":"    @Test","lastModifiedDate":"2021-10-08"},{"lineNumber":96,"author":{"gitId":"david-eom"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2021-10-08"},{"lineNumber":97,"author":{"gitId":"david-eom"},"content":"        // invalid name","lastModifiedDate":"2021-10-08"},{"lineNumber":98,"author":{"gitId":"david-eom"},"content":"        CommandParserTestUtil.assertParseFailure(parser, CommandTestUtil.INVALID_NAME_DESC","lastModifiedDate":"2021-10-08"},{"lineNumber":99,"author":{"gitId":"bnjmnt4n"},"content":"                + CommandTestUtil.PHONE_DESC_BOB + CommandTestUtil.TAG_DESC_HUSBAND","lastModifiedDate":"2021-10-15"},{"lineNumber":100,"author":{"gitId":"bnjmnt4n"},"content":"                + CommandTestUtil.TAG_DESC_FRIEND + CommandTestUtil.TIKTOK_DESC_BOB","lastModifiedDate":"2021-10-15"},{"lineNumber":101,"author":{"gitId":"Zacchua"},"content":"                + CommandTestUtil.TWITTER_DESC_BOB,","lastModifiedDate":"2021-10-12"},{"lineNumber":102,"author":{"gitId":"Zacchua"},"content":"                Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-11"},{"lineNumber":103,"author":{"gitId":"david-eom"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":104,"author":{"gitId":"david-eom"},"content":"        // invalid phone","lastModifiedDate":"2021-10-08"},{"lineNumber":105,"author":{"gitId":"david-eom"},"content":"        CommandParserTestUtil.assertParseFailure(parser, CommandTestUtil.NAME_DESC_BOB","lastModifiedDate":"2021-10-08"},{"lineNumber":106,"author":{"gitId":"bnjmnt4n"},"content":"                + CommandTestUtil.INVALID_PHONE_DESC + CommandTestUtil.TAG_DESC_HUSBAND","lastModifiedDate":"2021-10-15"},{"lineNumber":107,"author":{"gitId":"bnjmnt4n"},"content":"                + CommandTestUtil.TAG_DESC_FRIEND + CommandTestUtil.TIKTOK_DESC_BOB","lastModifiedDate":"2021-10-15"},{"lineNumber":108,"author":{"gitId":"bnjmnt4n"},"content":"                + CommandTestUtil.TWITTER_DESC_BOB,","lastModifiedDate":"2021-10-15"},{"lineNumber":109,"author":{"gitId":"bnjmnt4n"},"content":"                Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-15"},{"lineNumber":110,"author":{"gitId":"david-eom"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":111,"author":{"gitId":"david-eom"},"content":"        // invalid tag","lastModifiedDate":"2021-10-08"},{"lineNumber":112,"author":{"gitId":"david-eom"},"content":"        CommandParserTestUtil.assertParseFailure(parser, CommandTestUtil.NAME_DESC_BOB","lastModifiedDate":"2021-10-08"},{"lineNumber":113,"author":{"gitId":"bnjmnt4n"},"content":"                + CommandTestUtil.PHONE_DESC_BOB + CommandTestUtil.REMARK_DESC_BOB","lastModifiedDate":"2021-10-15"},{"lineNumber":114,"author":{"gitId":"bnjmnt4n"},"content":"                + CommandTestUtil.INVALID_TAG_DESC + CommandTestUtil.VALID_TAG_FRIEND","lastModifiedDate":"2021-10-15"},{"lineNumber":115,"author":{"gitId":"bnjmnt4n"},"content":"                + CommandTestUtil.TIKTOK_DESC_BOB + CommandTestUtil.TWITTER_DESC_BOB,","lastModifiedDate":"2021-10-15"},{"lineNumber":116,"author":{"gitId":"bnjmnt4n"},"content":"                Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-15"},{"lineNumber":117,"author":{"gitId":"david-eom"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":118,"author":{"gitId":"david-eom"},"content":"        // two invalid values, only first invalid value reported","lastModifiedDate":"2021-10-08"},{"lineNumber":119,"author":{"gitId":"david-eom"},"content":"        CommandParserTestUtil.assertParseFailure(parser, CommandTestUtil.INVALID_NAME_DESC","lastModifiedDate":"2021-10-08"},{"lineNumber":120,"author":{"gitId":"bnjmnt4n"},"content":"                        + CommandTestUtil.INVALID_PHONE_DESC + CommandTestUtil.TIKTOK_DESC_BOB","lastModifiedDate":"2021-10-15"},{"lineNumber":121,"author":{"gitId":"Zacchua"},"content":"                        + CommandTestUtil.TWITTER_DESC_BOB, Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-12"},{"lineNumber":122,"author":{"gitId":"david-eom"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":123,"author":{"gitId":"david-eom"},"content":"        // non-empty preamble","lastModifiedDate":"2021-10-08"},{"lineNumber":124,"author":{"gitId":"david-eom"},"content":"        CommandParserTestUtil.assertParseFailure(parser, CommandTestUtil.PREAMBLE_NON_EMPTY","lastModifiedDate":"2021-10-08"},{"lineNumber":125,"author":{"gitId":"david-eom"},"content":"                        + CommandTestUtil.NAME_DESC_BOB + CommandTestUtil.PHONE_DESC_BOB","lastModifiedDate":"2021-10-08"},{"lineNumber":126,"author":{"gitId":"Zacchua"},"content":"                        + CommandTestUtil.TAG_DESC_HUSBAND + CommandTestUtil.TAG_DESC_FRIEND","lastModifiedDate":"2021-10-12"},{"lineNumber":127,"author":{"gitId":"Zacchua"},"content":"                        + CommandTestUtil.TIKTOK_DESC_BOB + CommandTestUtil.TWITTER_DESC_BOB,","lastModifiedDate":"2021-10-12"},{"lineNumber":128,"author":{"gitId":"stanley-1"},"content":"                String.format(Messages.MESSAGE_INVALID_COMMAND_FORMAT, AddCommand.MESSAGE_HELP_GUIDE));","lastModifiedDate":"2021-10-20"},{"lineNumber":129,"author":{"gitId":"david-eom"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":130,"author":{"gitId":"david-eom"},"content":"}","lastModifiedDate":"2021-10-08"}],"authorContributionMap":{"Zacchua":12,"bnjmnt4n":34,"david-eom":82,"stanley-1":2}},{"path":"src/test/java/socialite/logic/parser/AddressBookParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"david-eom"},"content":"package socialite.logic.parser;","lastModifiedDate":"2021-10-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"EssWhyy"},"content":"import static socialite.logic.parser.CliSyntax.PREFIX_REMARK;","lastModifiedDate":"2021-10-12"},{"lineNumber":6,"author":{"gitId":"EssWhyy"},"content":"import static socialite.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2021-10-12"},{"lineNumber":7,"author":{"gitId":"EssWhyy"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2017-06-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":14,"author":{"gitId":"david-eom"},"content":"import socialite.commons.core.Messages;","lastModifiedDate":"2021-10-09"},{"lineNumber":15,"author":{"gitId":"david-eom"},"content":"import socialite.logic.commands.AddCommand;","lastModifiedDate":"2021-10-08"},{"lineNumber":16,"author":{"gitId":"david-eom"},"content":"import socialite.logic.commands.ClearCommand;","lastModifiedDate":"2021-10-08"},{"lineNumber":17,"author":{"gitId":"EssWhyy"},"content":"import socialite.logic.commands.Command;","lastModifiedDate":"2021-10-13"},{"lineNumber":18,"author":{"gitId":"david-eom"},"content":"import socialite.logic.commands.DeleteCommand;","lastModifiedDate":"2021-10-08"},{"lineNumber":19,"author":{"gitId":"david-eom"},"content":"import socialite.logic.commands.EditCommand;","lastModifiedDate":"2021-10-08"},{"lineNumber":20,"author":{"gitId":"david-eom"},"content":"import socialite.logic.commands.ExitCommand;","lastModifiedDate":"2021-10-08"},{"lineNumber":21,"author":{"gitId":"david-eom"},"content":"import socialite.logic.commands.FindCommand;","lastModifiedDate":"2021-10-08"},{"lineNumber":22,"author":{"gitId":"david-eom"},"content":"import socialite.logic.commands.HelpCommand;","lastModifiedDate":"2021-10-08"},{"lineNumber":23,"author":{"gitId":"david-eom"},"content":"import socialite.logic.commands.ListCommand;","lastModifiedDate":"2021-10-08"},{"lineNumber":24,"author":{"gitId":"EssWhyy"},"content":"import socialite.logic.commands.RemarkCommand;","lastModifiedDate":"2021-10-12"},{"lineNumber":25,"author":{"gitId":"david-eom"},"content":"import socialite.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-10-08"},{"lineNumber":26,"author":{"gitId":"david-eom"},"content":"import socialite.model.person.ContainsKeywordsPredicate;","lastModifiedDate":"2021-10-23"},{"lineNumber":27,"author":{"gitId":"david-eom"},"content":"import socialite.model.person.Person;","lastModifiedDate":"2021-10-08"},{"lineNumber":28,"author":{"gitId":"EssWhyy"},"content":"import socialite.model.person.Remark;","lastModifiedDate":"2021-10-12"},{"lineNumber":29,"author":{"gitId":"david-eom"},"content":"import socialite.testutil.Assert;","lastModifiedDate":"2021-10-09"},{"lineNumber":30,"author":{"gitId":"david-eom"},"content":"import socialite.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2021-10-08"},{"lineNumber":31,"author":{"gitId":"david-eom"},"content":"import socialite.testutil.PersonBuilder;","lastModifiedDate":"2021-10-08"},{"lineNumber":32,"author":{"gitId":"david-eom"},"content":"import socialite.testutil.PersonUtil;","lastModifiedDate":"2021-10-08"},{"lineNumber":33,"author":{"gitId":"david-eom"},"content":"import socialite.testutil.TypicalIndexes;","lastModifiedDate":"2021-10-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":35,"author":{"gitId":"EssWhyy"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"public class AddressBookParserTest {","lastModifiedDate":"2017-07-07"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private final AddressBookParser parser \u003d new AddressBookParser();","lastModifiedDate":"2017-07-07"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public void parseCommand_add() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        Person person \u003d new PersonBuilder().build();","lastModifiedDate":"2017-06-27"},{"lineNumber":43,"author":{"gitId":"EssWhyy"},"content":"        Command parseCommand \u003d parser.parseCommand(PersonUtil.getAddCommand(person));","lastModifiedDate":"2021-10-13"},{"lineNumber":44,"author":{"gitId":"EssWhyy"},"content":"        AddCommand command \u003d (AddCommand) parseCommand;","lastModifiedDate":"2021-10-13"},{"lineNumber":45,"author":{"gitId":"EssWhyy"},"content":"        AddCommand newCommand \u003d new AddCommand(person);","lastModifiedDate":"2021-10-13"},{"lineNumber":46,"author":{"gitId":"EssWhyy"},"content":"        assertEquals(newCommand, command);","lastModifiedDate":"2021-10-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public void parseCommand_clear() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ClearCommand.COMMAND_WORD) instanceof ClearCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ClearCommand.COMMAND_WORD + \" 3\") instanceof ClearCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public void parseCommand_delete() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        DeleteCommand command \u003d (DeleteCommand) parser.parseCommand(","lastModifiedDate":"2017-06-27"},{"lineNumber":58,"author":{"gitId":"david-eom"},"content":"                DeleteCommand.COMMAND_WORD + \" \" + TypicalIndexes.INDEX_FIRST_PERSON.getOneBased());","lastModifiedDate":"2021-10-08"},{"lineNumber":59,"author":{"gitId":"david-eom"},"content":"        assertEquals(new DeleteCommand(TypicalIndexes.INDEX_FIRST_PERSON), command);","lastModifiedDate":"2021-10-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public void parseCommand_edit() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        Person person \u003d new PersonBuilder().build();","lastModifiedDate":"2017-06-27"},{"lineNumber":65,"author":{"gitId":"david-eom"},"content":"        EditCommand.EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder(person).build();","lastModifiedDate":"2021-10-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        EditCommand command \u003d (EditCommand) parser.parseCommand(EditCommand.COMMAND_WORD + \" \"","lastModifiedDate":"2017-06-27"},{"lineNumber":67,"author":{"gitId":"david-eom"},"content":"                + TypicalIndexes.INDEX_FIRST_PERSON.getOneBased()","lastModifiedDate":"2021-10-09"},{"lineNumber":68,"author":{"gitId":"david-eom"},"content":"                + \" \" + PersonUtil.getEditPersonDescriptorDetails(descriptor));","lastModifiedDate":"2021-10-09"},{"lineNumber":69,"author":{"gitId":"david-eom"},"content":"        assertEquals(new EditCommand(TypicalIndexes.INDEX_FIRST_PERSON, descriptor), command);","lastModifiedDate":"2021-10-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public void parseCommand_exit() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ExitCommand.COMMAND_WORD) instanceof ExitCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ExitCommand.COMMAND_WORD + \" 3\") instanceof ExitCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public void parseCommand_find() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        List\u003cString\u003e keywords \u003d Arrays.asList(\"foo\", \"bar\", \"baz\");","lastModifiedDate":"2017-06-12"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        FindCommand command \u003d (FindCommand) parser.parseCommand(","lastModifiedDate":"2017-06-27"},{"lineNumber":82,"author":{"gitId":"-"},"content":"                FindCommand.COMMAND_WORD + \" \" + keywords.stream().collect(Collectors.joining(\" \")));","lastModifiedDate":"2017-06-27"},{"lineNumber":83,"author":{"gitId":"david-eom"},"content":"        assertEquals(new FindCommand(new ContainsKeywordsPredicate(keywords)), command);","lastModifiedDate":"2021-10-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public void parseCommand_help() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(HelpCommand.COMMAND_WORD) instanceof HelpCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(HelpCommand.COMMAND_WORD + \" 3\") instanceof HelpCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    public void parseCommand_list() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ListCommand.COMMAND_WORD) instanceof ListCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ListCommand.COMMAND_WORD + \" 3\") instanceof ListCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    public void parseCommand_unrecognisedInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":100,"author":{"gitId":"david-eom"},"content":"        Assert.assertThrows(ParseException.class,","lastModifiedDate":"2021-10-09"},{"lineNumber":101,"author":{"gitId":"david-eom"},"content":"                String.format(Messages.MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE), ()","lastModifiedDate":"2021-10-09"},{"lineNumber":102,"author":{"gitId":"-"},"content":"                -\u003e parser.parseCommand(\"\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    public void parseCommand_unknownCommand_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":107,"author":{"gitId":"david-eom"},"content":"        Assert.assertThrows(ParseException.class, Messages.MESSAGE_UNKNOWN_COMMAND, ()","lastModifiedDate":"2021-10-09"},{"lineNumber":108,"author":{"gitId":"david-eom"},"content":"            -\u003e parser.parseCommand(\"unknownCommand\"));","lastModifiedDate":"2021-10-09"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":110,"author":{"gitId":"EssWhyy"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":111,"author":{"gitId":"EssWhyy"},"content":"    @Test","lastModifiedDate":"2021-10-12"},{"lineNumber":112,"author":{"gitId":"EssWhyy"},"content":"    public void parseCommand_remark() throws Exception {","lastModifiedDate":"2021-10-12"},{"lineNumber":113,"author":{"gitId":"EssWhyy"},"content":"        final Remark remark \u003d new Remark(\"Some remark.\");","lastModifiedDate":"2021-10-12"},{"lineNumber":114,"author":{"gitId":"EssWhyy"},"content":"        RemarkCommand command \u003d (RemarkCommand) parser.parseCommand(RemarkCommand.COMMAND_WORD + \" \"","lastModifiedDate":"2021-10-12"},{"lineNumber":115,"author":{"gitId":"david-eom"},"content":"                + INDEX_FIRST_PERSON.getOneBased() + \" \" + PREFIX_REMARK + remark.get());","lastModifiedDate":"2021-10-22"},{"lineNumber":116,"author":{"gitId":"EssWhyy"},"content":"        assertEquals(new RemarkCommand(INDEX_FIRST_PERSON, remark), command);","lastModifiedDate":"2021-10-12"},{"lineNumber":117,"author":{"gitId":"EssWhyy"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":118,"author":{"gitId":"EssWhyy"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":119,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-24"}],"authorContributionMap":{"EssWhyy":19,"david-eom":30,"-":70}},{"path":"src/test/java/socialite/logic/parser/ArgumentTokenizerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"david-eom"},"content":"package socialite.logic.parser;","lastModifiedDate":"2021-10-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class ArgumentTokenizerTest {","lastModifiedDate":"2016-10-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private final Prefix unknownPrefix \u003d new Prefix(\"--u\");","lastModifiedDate":"2016-10-16"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    private final Prefix pSlash \u003d new Prefix(\"p/\");","lastModifiedDate":"2017-03-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private final Prefix dashT \u003d new Prefix(\"-t\");","lastModifiedDate":"2016-10-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    private final Prefix hatQ \u003d new Prefix(\"^Q\");","lastModifiedDate":"2016-10-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public void tokenize_emptyArgsString_noValues() {","lastModifiedDate":"2016-10-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        String argsString \u003d \"  \";","lastModifiedDate":"2016-10-16"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash);","lastModifiedDate":"2017-03-20"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        assertPreambleEmpty(argMultimap);","lastModifiedDate":"2017-03-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertArgumentAbsent(argMultimap, pSlash);","lastModifiedDate":"2017-03-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private void assertPreamblePresent(ArgumentMultimap argMultimap, String expectedPreamble) {","lastModifiedDate":"2017-03-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertEquals(expectedPreamble, argMultimap.getPreamble());","lastModifiedDate":"2017-03-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private void assertPreambleEmpty(ArgumentMultimap argMultimap) {","lastModifiedDate":"2017-03-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertTrue(argMultimap.getPreamble().isEmpty());","lastModifiedDate":"2017-03-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-20"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * Asserts all the arguments in {@code argMultimap} with {@code prefix} match the {@code expectedValues}","lastModifiedDate":"2017-08-20"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * and only the last value is returned upon calling {@code ArgumentMultimap#getValue(Prefix)}.","lastModifiedDate":"2017-08-20"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-20"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private void assertArgumentPresent(ArgumentMultimap argMultimap, Prefix prefix, String... expectedValues) {","lastModifiedDate":"2017-03-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        // Verify the last value is returned","lastModifiedDate":"2016-10-16"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertEquals(expectedValues[expectedValues.length - 1], argMultimap.getValue(prefix).get());","lastModifiedDate":"2017-06-07"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        // Verify the number of values returned is as expected","lastModifiedDate":"2016-10-16"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertEquals(expectedValues.length, argMultimap.getAllValues(prefix).size());","lastModifiedDate":"2017-03-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        // Verify all values returned are as expected and in order","lastModifiedDate":"2016-10-16"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        for (int i \u003d 0; i \u003c expectedValues.length; i++) {","lastModifiedDate":"2016-10-16"},{"lineNumber":48,"author":{"gitId":"-"},"content":"            assertEquals(expectedValues[i], argMultimap.getAllValues(prefix).get(i));","lastModifiedDate":"2017-03-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-10-16"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    private void assertArgumentAbsent(ArgumentMultimap argMultimap, Prefix prefix) {","lastModifiedDate":"2017-03-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertFalse(argMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2017-03-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public void tokenize_noPrefixes_allTakenAsPreamble() {","lastModifiedDate":"2016-10-16"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        String argsString \u003d \"  some random string /t tag with leading and trailing spaces \";","lastModifiedDate":"2016-10-16"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString);","lastModifiedDate":"2017-03-20"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        // Same string expected as preamble, but leading/trailing spaces should be trimmed","lastModifiedDate":"2016-10-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, argsString.trim());","lastModifiedDate":"2017-03-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public void tokenize_oneArgument() {","lastModifiedDate":"2016-10-16"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        // Preamble present","lastModifiedDate":"2016-10-16"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        String argsString \u003d \"  Some preamble string p/ Argument value \";","lastModifiedDate":"2017-03-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash);","lastModifiedDate":"2017-03-20"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, \"Some preamble string\");","lastModifiedDate":"2017-03-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, pSlash, \"Argument value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        // No preamble","lastModifiedDate":"2016-10-16"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        argsString \u003d \" p/   Argument value \";","lastModifiedDate":"2017-03-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash);","lastModifiedDate":"2017-03-20"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        assertPreambleEmpty(argMultimap);","lastModifiedDate":"2017-03-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, pSlash, \"Argument value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public void tokenize_multipleArguments() {","lastModifiedDate":"2016-10-16"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        // Only two arguments are present","lastModifiedDate":"2016-10-16"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        String argsString \u003d \"SomePreambleString -t dashT-Value p/pSlash value\";","lastModifiedDate":"2017-03-08"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2017-03-20"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, \"SomePreambleString\");","lastModifiedDate":"2017-03-08"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, pSlash, \"pSlash value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, dashT, \"dashT-Value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        assertArgumentAbsent(argMultimap, hatQ);","lastModifiedDate":"2017-03-08"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        // All three arguments are present","lastModifiedDate":"2017-05-19"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        argsString \u003d \"Different Preamble String ^Q111 -t dashT-Value p/pSlash value\";","lastModifiedDate":"2017-03-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2017-03-20"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, \"Different Preamble String\");","lastModifiedDate":"2017-03-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, pSlash, \"pSlash value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, dashT, \"dashT-Value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, hatQ, \"111\");","lastModifiedDate":"2017-03-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        /* Also covers: Reusing of the tokenizer multiple times */","lastModifiedDate":"2016-10-16"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        // Reuse tokenizer on an empty string to ensure ArgumentMultimap is correctly reset","lastModifiedDate":"2017-03-08"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        // (i.e. no stale values from the previous tokenizing remain)","lastModifiedDate":"2017-03-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        argsString \u003d \"\";","lastModifiedDate":"2017-03-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2017-03-20"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        assertPreambleEmpty(argMultimap);","lastModifiedDate":"2017-03-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        assertArgumentAbsent(argMultimap, pSlash);","lastModifiedDate":"2017-03-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        /* Also covers: testing for prefixes not specified as a prefix */","lastModifiedDate":"2020-05-27"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        // Prefixes not previously given to the tokenizer should not return any values","lastModifiedDate":"2016-10-16"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        argsString \u003d unknownPrefix + \"some value\";","lastModifiedDate":"2017-05-09"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2017-03-20"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        assertArgumentAbsent(argMultimap, unknownPrefix);","lastModifiedDate":"2017-03-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, argsString); // Unknown prefix is taken as part of preamble","lastModifiedDate":"2017-03-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    public void tokenize_multipleArgumentsWithRepeats() {","lastModifiedDate":"2016-10-16"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        // Two arguments repeated, some have empty values","lastModifiedDate":"2016-10-16"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        String argsString \u003d \"SomePreambleString -t dashT-Value ^Q ^Q -t another dashT value p/ pSlash value -t\";","lastModifiedDate":"2017-03-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2017-03-20"},{"lineNumber":123,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, \"SomePreambleString\");","lastModifiedDate":"2017-03-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, pSlash, \"pSlash value\");","lastModifiedDate":"2017-03-08"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, dashT, \"dashT-Value\", \"another dashT value\", \"\");","lastModifiedDate":"2017-03-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, hatQ, \"\", \"\");","lastModifiedDate":"2017-03-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-19"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    public void tokenize_multipleArgumentsJoined() {","lastModifiedDate":"2017-05-19"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        String argsString \u003d \"SomePreambleStringp/ pSlash joined-tjoined -t not joined^Qjoined\";","lastModifiedDate":"2017-05-19"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(argsString, pSlash, dashT, hatQ);","lastModifiedDate":"2017-05-19"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        assertPreamblePresent(argMultimap, \"SomePreambleStringp/ pSlash joined-tjoined\");","lastModifiedDate":"2017-05-19"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        assertArgumentAbsent(argMultimap, pSlash);","lastModifiedDate":"2017-05-19"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        assertArgumentPresent(argMultimap, dashT, \"not joined^Qjoined\");","lastModifiedDate":"2017-05-19"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        assertArgumentAbsent(argMultimap, hatQ);","lastModifiedDate":"2017-05-19"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-19"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-19"},{"lineNumber":139,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    public void equalsMethod() {","lastModifiedDate":"2016-10-16"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        Prefix aaa \u003d new Prefix(\"aaa\");","lastModifiedDate":"2016-10-16"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        assertEquals(aaa, aaa);","lastModifiedDate":"2016-10-16"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        assertEquals(aaa, new Prefix(\"aaa\"));","lastModifiedDate":"2016-10-16"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        assertNotEquals(aaa, \"aaa\");","lastModifiedDate":"2016-10-16"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        assertNotEquals(aaa, new Prefix(\"aab\"));","lastModifiedDate":"2016-10-16"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-16"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":150,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-10-16"}],"authorContributionMap":{"david-eom":1,"-":149}},{"path":"src/test/java/socialite/logic/parser/CommandParserTestUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"david-eom"},"content":"package socialite.logic.parser;","lastModifiedDate":"2021-10-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":5,"author":{"gitId":"david-eom"},"content":"import socialite.logic.commands.Command;","lastModifiedDate":"2021-10-08"},{"lineNumber":6,"author":{"gitId":"david-eom"},"content":"import socialite.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-10-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-07-06"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Contains helper methods for testing command parsers.","lastModifiedDate":"2017-07-06"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-07-06"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class CommandParserTestUtil {","lastModifiedDate":"2017-07-06"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-06"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     * Asserts that the parsing of {@code userInput} by {@code parser} is successful and the command created","lastModifiedDate":"2017-07-06"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * equals to {@code expectedCommand}.","lastModifiedDate":"2017-07-06"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-06"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public static void assertParseSuccess(Parser parser, String userInput, Command expectedCommand) {","lastModifiedDate":"2017-08-15"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-08-15"},{"lineNumber":19,"author":{"gitId":"-"},"content":"            Command command \u003d parser.parse(userInput);","lastModifiedDate":"2017-07-06"},{"lineNumber":20,"author":{"gitId":"-"},"content":"            assertEquals(expectedCommand, command);","lastModifiedDate":"2017-07-06"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2017-08-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"            throw new IllegalArgumentException(\"Invalid userInput.\", pe);","lastModifiedDate":"2017-08-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-08-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * Asserts that the parsing of {@code userInput} by {@code parser} is unsuccessful and the error message","lastModifiedDate":"2017-07-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * equals to {@code expectedMessage}.","lastModifiedDate":"2017-07-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public static void assertParseFailure(Parser parser, String userInput, String expectedMessage) {","lastModifiedDate":"2017-07-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-07-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"            parser.parse(userInput);","lastModifiedDate":"2017-07-06"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"The expected ParseException was not thrown.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2017-07-06"},{"lineNumber":35,"author":{"gitId":"-"},"content":"            assertEquals(expectedMessage, pe.getMessage());","lastModifiedDate":"2017-07-06"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-07-06"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-06"},{"lineNumber":38,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-07-06"}],"authorContributionMap":{"david-eom":3,"-":35}},{"path":"src/test/java/socialite/logic/parser/DeleteCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"david-eom"},"content":"package socialite.logic.parser;","lastModifiedDate":"2021-10-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":5,"author":{"gitId":"david-eom"},"content":"import socialite.commons.core.Messages;","lastModifiedDate":"2021-10-08"},{"lineNumber":6,"author":{"gitId":"david-eom"},"content":"import socialite.logic.commands.DeleteCommand;","lastModifiedDate":"2021-10-09"},{"lineNumber":7,"author":{"gitId":"david-eom"},"content":"import socialite.testutil.TypicalIndexes;","lastModifiedDate":"2021-10-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * As we are only doing white-box testing, our test cases do not cover path variations","lastModifiedDate":"2017-06-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * outside of the DeleteCommand code. For example, inputs \"1\" and \"1 abc\" take the","lastModifiedDate":"2017-06-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * same path through the DeleteCommand, and therefore we test only one of them.","lastModifiedDate":"2017-06-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * The path variation for those two cases occur inside the ParserUtil, and","lastModifiedDate":"2017-06-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * therefore should be covered by the ParserUtilTest.","lastModifiedDate":"2017-06-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class DeleteCommandParserTest {","lastModifiedDate":"2017-06-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private DeleteCommandParser parser \u003d new DeleteCommandParser();","lastModifiedDate":"2017-06-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public void parse_validArgs_returnsDeleteCommand() {","lastModifiedDate":"2017-08-15"},{"lineNumber":22,"author":{"gitId":"david-eom"},"content":"        CommandParserTestUtil.assertParseSuccess(parser, \"1\", new DeleteCommand(TypicalIndexes.INDEX_FIRST_PERSON));","lastModifiedDate":"2021-10-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public void parse_invalidArgs_throwsParseException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":27,"author":{"gitId":"david-eom"},"content":"        CommandParserTestUtil.assertParseFailure(","lastModifiedDate":"2021-10-09"},{"lineNumber":28,"author":{"gitId":"stanley-1"},"content":"                parser, \"a\", String.format(Messages.MESSAGE_INVALID_COMMAND_FORMAT, DeleteCommand.MESSAGE_HELP_GUIDE)","lastModifiedDate":"2021-10-20"},{"lineNumber":29,"author":{"gitId":"david-eom"},"content":"        );","lastModifiedDate":"2021-10-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-09"},{"lineNumber":31,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-09"}],"authorContributionMap":{"david-eom":7,"-":23,"stanley-1":1}},{"path":"src/test/java/socialite/logic/parser/EditCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"david-eom"},"content":"package socialite.logic.parser;","lastModifiedDate":"2021-10-08"},{"lineNumber":2,"author":{"gitId":"david-eom"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":3,"author":{"gitId":"david-eom"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-08"},{"lineNumber":4,"author":{"gitId":"david-eom"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":5,"author":{"gitId":"david-eom"},"content":"import socialite.commons.core.Messages;","lastModifiedDate":"2021-10-09"},{"lineNumber":6,"author":{"gitId":"david-eom"},"content":"import socialite.commons.core.index.Index;","lastModifiedDate":"2021-10-08"},{"lineNumber":7,"author":{"gitId":"david-eom"},"content":"import socialite.logic.commands.CommandTestUtil;","lastModifiedDate":"2021-10-09"},{"lineNumber":8,"author":{"gitId":"david-eom"},"content":"import socialite.logic.commands.EditCommand;","lastModifiedDate":"2021-10-08"},{"lineNumber":9,"author":{"gitId":"david-eom"},"content":"import socialite.model.person.Name;","lastModifiedDate":"2021-10-08"},{"lineNumber":10,"author":{"gitId":"david-eom"},"content":"import socialite.model.person.Phone;","lastModifiedDate":"2021-10-08"},{"lineNumber":11,"author":{"gitId":"david-eom"},"content":"import socialite.model.tag.Tag;","lastModifiedDate":"2021-10-08"},{"lineNumber":12,"author":{"gitId":"david-eom"},"content":"import socialite.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2021-10-08"},{"lineNumber":13,"author":{"gitId":"david-eom"},"content":"import socialite.testutil.TypicalIndexes;","lastModifiedDate":"2021-10-08"},{"lineNumber":14,"author":{"gitId":"david-eom"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":15,"author":{"gitId":"david-eom"},"content":"public class EditCommandParserTest {","lastModifiedDate":"2021-10-08"},{"lineNumber":16,"author":{"gitId":"david-eom"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":17,"author":{"gitId":"david-eom"},"content":"    private static final String TAG_EMPTY \u003d \" \" + CliSyntax.PREFIX_TAG;","lastModifiedDate":"2021-10-08"},{"lineNumber":18,"author":{"gitId":"david-eom"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":19,"author":{"gitId":"david-eom"},"content":"    private static final String MESSAGE_INVALID_FORMAT \u003d","lastModifiedDate":"2021-10-08"},{"lineNumber":20,"author":{"gitId":"stanley-1"},"content":"            String.format(Messages.MESSAGE_INVALID_COMMAND_FORMAT, EditCommand.MESSAGE_HELP_GUIDE);","lastModifiedDate":"2021-10-20"},{"lineNumber":21,"author":{"gitId":"david-eom"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":22,"author":{"gitId":"david-eom"},"content":"    private EditCommandParser parser \u003d new EditCommandParser();","lastModifiedDate":"2021-10-08"},{"lineNumber":23,"author":{"gitId":"david-eom"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":24,"author":{"gitId":"david-eom"},"content":"    @Test","lastModifiedDate":"2021-10-08"},{"lineNumber":25,"author":{"gitId":"david-eom"},"content":"    public void parse_missingParts_failure() {","lastModifiedDate":"2021-10-08"},{"lineNumber":26,"author":{"gitId":"david-eom"},"content":"        // no index specified","lastModifiedDate":"2021-10-08"},{"lineNumber":27,"author":{"gitId":"david-eom"},"content":"        CommandParserTestUtil.assertParseFailure(parser, CommandTestUtil.VALID_NAME_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2021-10-08"},{"lineNumber":28,"author":{"gitId":"david-eom"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":29,"author":{"gitId":"david-eom"},"content":"        // no field specified","lastModifiedDate":"2021-10-08"},{"lineNumber":30,"author":{"gitId":"david-eom"},"content":"        CommandParserTestUtil.assertParseFailure(parser, \"1\", EditCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2021-10-08"},{"lineNumber":31,"author":{"gitId":"david-eom"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":32,"author":{"gitId":"david-eom"},"content":"        // no index and no field specified","lastModifiedDate":"2021-10-08"},{"lineNumber":33,"author":{"gitId":"david-eom"},"content":"        CommandParserTestUtil.assertParseFailure(parser, \"\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2021-10-08"},{"lineNumber":34,"author":{"gitId":"david-eom"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":35,"author":{"gitId":"david-eom"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":36,"author":{"gitId":"david-eom"},"content":"    @Test","lastModifiedDate":"2021-10-08"},{"lineNumber":37,"author":{"gitId":"david-eom"},"content":"    public void parse_invalidPreamble_failure() {","lastModifiedDate":"2021-10-08"},{"lineNumber":38,"author":{"gitId":"david-eom"},"content":"        // negative index","lastModifiedDate":"2021-10-08"},{"lineNumber":39,"author":{"gitId":"david-eom"},"content":"        CommandParserTestUtil.assertParseFailure(","lastModifiedDate":"2021-10-08"},{"lineNumber":40,"author":{"gitId":"david-eom"},"content":"                parser, \"-5\" + CommandTestUtil.NAME_DESC_AMY, MESSAGE_INVALID_FORMAT","lastModifiedDate":"2021-10-08"},{"lineNumber":41,"author":{"gitId":"david-eom"},"content":"        );","lastModifiedDate":"2021-10-08"},{"lineNumber":42,"author":{"gitId":"david-eom"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":43,"author":{"gitId":"david-eom"},"content":"        // zero index","lastModifiedDate":"2021-10-08"},{"lineNumber":44,"author":{"gitId":"david-eom"},"content":"        CommandParserTestUtil.assertParseFailure(","lastModifiedDate":"2021-10-08"},{"lineNumber":45,"author":{"gitId":"david-eom"},"content":"                parser, \"0\" + CommandTestUtil.NAME_DESC_AMY, MESSAGE_INVALID_FORMAT","lastModifiedDate":"2021-10-08"},{"lineNumber":46,"author":{"gitId":"david-eom"},"content":"        );","lastModifiedDate":"2021-10-08"},{"lineNumber":47,"author":{"gitId":"david-eom"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":48,"author":{"gitId":"david-eom"},"content":"        // invalid arguments being parsed as preamble","lastModifiedDate":"2021-10-08"},{"lineNumber":49,"author":{"gitId":"david-eom"},"content":"        CommandParserTestUtil.assertParseFailure(","lastModifiedDate":"2021-10-08"},{"lineNumber":50,"author":{"gitId":"david-eom"},"content":"                parser, \"1 some random string\", MESSAGE_INVALID_FORMAT","lastModifiedDate":"2021-10-08"},{"lineNumber":51,"author":{"gitId":"david-eom"},"content":"        );","lastModifiedDate":"2021-10-08"},{"lineNumber":52,"author":{"gitId":"david-eom"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":53,"author":{"gitId":"david-eom"},"content":"        // invalid prefix being parsed as preamble","lastModifiedDate":"2021-10-08"},{"lineNumber":54,"author":{"gitId":"david-eom"},"content":"        CommandParserTestUtil.assertParseFailure(","lastModifiedDate":"2021-10-08"},{"lineNumber":55,"author":{"gitId":"david-eom"},"content":"                parser, \"1 i/ string\", MESSAGE_INVALID_FORMAT","lastModifiedDate":"2021-10-08"},{"lineNumber":56,"author":{"gitId":"david-eom"},"content":"        );","lastModifiedDate":"2021-10-08"},{"lineNumber":57,"author":{"gitId":"david-eom"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":58,"author":{"gitId":"david-eom"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":59,"author":{"gitId":"david-eom"},"content":"    @Test","lastModifiedDate":"2021-10-08"},{"lineNumber":60,"author":{"gitId":"david-eom"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2021-10-08"},{"lineNumber":61,"author":{"gitId":"david-eom"},"content":"        // invalid name","lastModifiedDate":"2021-10-08"},{"lineNumber":62,"author":{"gitId":"david-eom"},"content":"        CommandParserTestUtil.assertParseFailure(","lastModifiedDate":"2021-10-08"},{"lineNumber":63,"author":{"gitId":"david-eom"},"content":"                parser, \"1\" + CommandTestUtil.INVALID_NAME_DESC, Name.MESSAGE_CONSTRAINTS","lastModifiedDate":"2021-10-08"},{"lineNumber":64,"author":{"gitId":"david-eom"},"content":"        );","lastModifiedDate":"2021-10-08"},{"lineNumber":65,"author":{"gitId":"david-eom"},"content":"        // invalid phone","lastModifiedDate":"2021-10-08"},{"lineNumber":66,"author":{"gitId":"david-eom"},"content":"        CommandParserTestUtil.assertParseFailure(","lastModifiedDate":"2021-10-08"},{"lineNumber":67,"author":{"gitId":"david-eom"},"content":"                parser, \"1\" + CommandTestUtil.INVALID_PHONE_DESC, Phone.MESSAGE_CONSTRAINTS","lastModifiedDate":"2021-10-08"},{"lineNumber":68,"author":{"gitId":"david-eom"},"content":"        );","lastModifiedDate":"2021-10-08"},{"lineNumber":69,"author":{"gitId":"david-eom"},"content":"        // invalid tag","lastModifiedDate":"2021-10-08"},{"lineNumber":70,"author":{"gitId":"david-eom"},"content":"        CommandParserTestUtil.assertParseFailure(","lastModifiedDate":"2021-10-08"},{"lineNumber":71,"author":{"gitId":"david-eom"},"content":"                parser, \"1\" + CommandTestUtil.INVALID_TAG_DESC, Tag.MESSAGE_CONSTRAINTS","lastModifiedDate":"2021-10-08"},{"lineNumber":72,"author":{"gitId":"david-eom"},"content":"        );","lastModifiedDate":"2021-10-08"},{"lineNumber":73,"author":{"gitId":"david-eom"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":74,"author":{"gitId":"david-eom"},"content":"        // valid phone followed by invalid phone. The test case for invalid phone followed by valid phone","lastModifiedDate":"2021-10-08"},{"lineNumber":75,"author":{"gitId":"david-eom"},"content":"        // is tested at {@code parse_invalidValueFollowedByValidValue_success()}","lastModifiedDate":"2021-10-08"},{"lineNumber":76,"author":{"gitId":"david-eom"},"content":"        CommandParserTestUtil.assertParseFailure(","lastModifiedDate":"2021-10-08"},{"lineNumber":77,"author":{"gitId":"david-eom"},"content":"                parser, \"1\" + CommandTestUtil.PHONE_DESC_BOB","lastModifiedDate":"2021-10-08"},{"lineNumber":78,"author":{"gitId":"david-eom"},"content":"                        + CommandTestUtil.INVALID_PHONE_DESC, Phone.MESSAGE_CONSTRAINTS","lastModifiedDate":"2021-10-08"},{"lineNumber":79,"author":{"gitId":"david-eom"},"content":"        );","lastModifiedDate":"2021-10-08"},{"lineNumber":80,"author":{"gitId":"david-eom"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":81,"author":{"gitId":"david-eom"},"content":"        // while parsing {@code PREFIX_TAG} alone will reset the tags of the {@code Person} being edited,","lastModifiedDate":"2021-10-08"},{"lineNumber":82,"author":{"gitId":"david-eom"},"content":"        // parsing it together with a valid tag results in error","lastModifiedDate":"2021-10-08"},{"lineNumber":83,"author":{"gitId":"david-eom"},"content":"        CommandParserTestUtil.assertParseFailure(","lastModifiedDate":"2021-10-08"},{"lineNumber":84,"author":{"gitId":"david-eom"},"content":"                parser, \"1\" + CommandTestUtil.TAG_DESC_FRIEND","lastModifiedDate":"2021-10-08"},{"lineNumber":85,"author":{"gitId":"david-eom"},"content":"                        + CommandTestUtil.TAG_DESC_HUSBAND + TAG_EMPTY, Tag.MESSAGE_CONSTRAINTS","lastModifiedDate":"2021-10-08"},{"lineNumber":86,"author":{"gitId":"david-eom"},"content":"        );","lastModifiedDate":"2021-10-08"},{"lineNumber":87,"author":{"gitId":"david-eom"},"content":"        CommandParserTestUtil.assertParseFailure(","lastModifiedDate":"2021-10-08"},{"lineNumber":88,"author":{"gitId":"david-eom"},"content":"                parser, \"1\" + CommandTestUtil.TAG_DESC_FRIEND","lastModifiedDate":"2021-10-08"},{"lineNumber":89,"author":{"gitId":"david-eom"},"content":"                        + TAG_EMPTY + CommandTestUtil.TAG_DESC_HUSBAND, Tag.MESSAGE_CONSTRAINTS","lastModifiedDate":"2021-10-08"},{"lineNumber":90,"author":{"gitId":"david-eom"},"content":"        );","lastModifiedDate":"2021-10-08"},{"lineNumber":91,"author":{"gitId":"david-eom"},"content":"        CommandParserTestUtil.assertParseFailure(","lastModifiedDate":"2021-10-08"},{"lineNumber":92,"author":{"gitId":"david-eom"},"content":"                parser, \"1\" + TAG_EMPTY + CommandTestUtil.TAG_DESC_FRIEND","lastModifiedDate":"2021-10-08"},{"lineNumber":93,"author":{"gitId":"david-eom"},"content":"                        + CommandTestUtil.TAG_DESC_HUSBAND, Tag.MESSAGE_CONSTRAINTS","lastModifiedDate":"2021-10-08"},{"lineNumber":94,"author":{"gitId":"david-eom"},"content":"        );","lastModifiedDate":"2021-10-08"},{"lineNumber":95,"author":{"gitId":"david-eom"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":96,"author":{"gitId":"david-eom"},"content":"        // multiple invalid values, but only the first invalid value is captured","lastModifiedDate":"2021-10-08"},{"lineNumber":97,"author":{"gitId":"david-eom"},"content":"        CommandParserTestUtil.assertParseFailure(","lastModifiedDate":"2021-10-08"},{"lineNumber":98,"author":{"gitId":"bnjmnt4n"},"content":"                parser, \"1\" + CommandTestUtil.INVALID_NAME_DESC","lastModifiedDate":"2021-10-12"},{"lineNumber":99,"author":{"gitId":"bnjmnt4n"},"content":"                        + CommandTestUtil.VALID_PHONE_AMY, Name.MESSAGE_CONSTRAINTS","lastModifiedDate":"2021-10-12"},{"lineNumber":100,"author":{"gitId":"david-eom"},"content":"        );","lastModifiedDate":"2021-10-08"},{"lineNumber":101,"author":{"gitId":"david-eom"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":102,"author":{"gitId":"david-eom"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":103,"author":{"gitId":"david-eom"},"content":"    @Test","lastModifiedDate":"2021-10-08"},{"lineNumber":104,"author":{"gitId":"david-eom"},"content":"    public void parse_allFieldsSpecified_success() {","lastModifiedDate":"2021-10-08"},{"lineNumber":105,"author":{"gitId":"david-eom"},"content":"        Index targetIndex \u003d TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2021-10-08"},{"lineNumber":106,"author":{"gitId":"david-eom"},"content":"        String userInput \u003d targetIndex.getOneBased() + CommandTestUtil.PHONE_DESC_BOB + CommandTestUtil.TAG_DESC_HUSBAND","lastModifiedDate":"2021-10-08"},{"lineNumber":107,"author":{"gitId":"david-eom"},"content":"                + CommandTestUtil.NAME_DESC_AMY + CommandTestUtil.TAG_DESC_FRIEND;","lastModifiedDate":"2021-10-08"},{"lineNumber":108,"author":{"gitId":"david-eom"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":109,"author":{"gitId":"david-eom"},"content":"        EditCommand.EditPersonDescriptor descriptor \u003d","lastModifiedDate":"2021-10-08"},{"lineNumber":110,"author":{"gitId":"david-eom"},"content":"                new EditPersonDescriptorBuilder()","lastModifiedDate":"2021-10-08"},{"lineNumber":111,"author":{"gitId":"david-eom"},"content":"                        .withName(CommandTestUtil.VALID_NAME_AMY)","lastModifiedDate":"2021-10-08"},{"lineNumber":112,"author":{"gitId":"david-eom"},"content":"                        .withPhone(CommandTestUtil.VALID_PHONE_BOB)","lastModifiedDate":"2021-10-08"},{"lineNumber":113,"author":{"gitId":"david-eom"},"content":"                        .withTags(CommandTestUtil.VALID_TAG_HUSBAND, CommandTestUtil.VALID_TAG_FRIEND)","lastModifiedDate":"2021-10-08"},{"lineNumber":114,"author":{"gitId":"david-eom"},"content":"                        .build();","lastModifiedDate":"2021-10-08"},{"lineNumber":115,"author":{"gitId":"david-eom"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2021-10-08"},{"lineNumber":116,"author":{"gitId":"david-eom"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":117,"author":{"gitId":"david-eom"},"content":"        CommandParserTestUtil.assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2021-10-08"},{"lineNumber":118,"author":{"gitId":"david-eom"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":119,"author":{"gitId":"david-eom"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":120,"author":{"gitId":"david-eom"},"content":"    @Test","lastModifiedDate":"2021-10-08"},{"lineNumber":121,"author":{"gitId":"david-eom"},"content":"    public void parse_someFieldsSpecified_success() {","lastModifiedDate":"2021-10-08"},{"lineNumber":122,"author":{"gitId":"david-eom"},"content":"        Index targetIndex \u003d TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2021-10-08"},{"lineNumber":123,"author":{"gitId":"bnjmnt4n"},"content":"        String userInput \u003d targetIndex.getOneBased() + CommandTestUtil.PHONE_DESC_BOB;","lastModifiedDate":"2021-10-12"},{"lineNumber":124,"author":{"gitId":"david-eom"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":125,"author":{"gitId":"david-eom"},"content":"        EditCommand.EditPersonDescriptor descriptor \u003d","lastModifiedDate":"2021-10-08"},{"lineNumber":126,"author":{"gitId":"david-eom"},"content":"                new EditPersonDescriptorBuilder()","lastModifiedDate":"2021-10-08"},{"lineNumber":127,"author":{"gitId":"david-eom"},"content":"                        .withPhone(CommandTestUtil.VALID_PHONE_BOB)","lastModifiedDate":"2021-10-08"},{"lineNumber":128,"author":{"gitId":"david-eom"},"content":"                        .build();","lastModifiedDate":"2021-10-08"},{"lineNumber":129,"author":{"gitId":"david-eom"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2021-10-08"},{"lineNumber":130,"author":{"gitId":"david-eom"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":131,"author":{"gitId":"david-eom"},"content":"        CommandParserTestUtil.assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2021-10-08"},{"lineNumber":132,"author":{"gitId":"david-eom"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":133,"author":{"gitId":"david-eom"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":134,"author":{"gitId":"david-eom"},"content":"    @Test","lastModifiedDate":"2021-10-08"},{"lineNumber":135,"author":{"gitId":"david-eom"},"content":"    public void parse_oneFieldSpecified_success() {","lastModifiedDate":"2021-10-08"},{"lineNumber":136,"author":{"gitId":"david-eom"},"content":"        // name","lastModifiedDate":"2021-10-08"},{"lineNumber":137,"author":{"gitId":"david-eom"},"content":"        Index targetIndex \u003d TypicalIndexes.INDEX_THIRD_PERSON;","lastModifiedDate":"2021-10-08"},{"lineNumber":138,"author":{"gitId":"david-eom"},"content":"        String userInput \u003d targetIndex.getOneBased() + CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2021-10-08"},{"lineNumber":139,"author":{"gitId":"david-eom"},"content":"        EditCommand.EditPersonDescriptor descriptor \u003d","lastModifiedDate":"2021-10-08"},{"lineNumber":140,"author":{"gitId":"david-eom"},"content":"                new EditPersonDescriptorBuilder().withName(CommandTestUtil.VALID_NAME_AMY).build();","lastModifiedDate":"2021-10-08"},{"lineNumber":141,"author":{"gitId":"david-eom"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2021-10-08"},{"lineNumber":142,"author":{"gitId":"david-eom"},"content":"        CommandParserTestUtil.assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2021-10-08"},{"lineNumber":143,"author":{"gitId":"david-eom"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":144,"author":{"gitId":"david-eom"},"content":"        // phone","lastModifiedDate":"2021-10-08"},{"lineNumber":145,"author":{"gitId":"david-eom"},"content":"        userInput \u003d targetIndex.getOneBased() + CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2021-10-08"},{"lineNumber":146,"author":{"gitId":"david-eom"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withPhone(CommandTestUtil.VALID_PHONE_AMY).build();","lastModifiedDate":"2021-10-08"},{"lineNumber":147,"author":{"gitId":"david-eom"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2021-10-08"},{"lineNumber":148,"author":{"gitId":"david-eom"},"content":"        CommandParserTestUtil.assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2021-10-08"},{"lineNumber":149,"author":{"gitId":"david-eom"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":150,"author":{"gitId":"david-eom"},"content":"        // tags","lastModifiedDate":"2021-10-08"},{"lineNumber":151,"author":{"gitId":"david-eom"},"content":"        userInput \u003d targetIndex.getOneBased() + CommandTestUtil.TAG_DESC_FRIEND;","lastModifiedDate":"2021-10-08"},{"lineNumber":152,"author":{"gitId":"david-eom"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withTags(CommandTestUtil.VALID_TAG_FRIEND).build();","lastModifiedDate":"2021-10-08"},{"lineNumber":153,"author":{"gitId":"david-eom"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2021-10-08"},{"lineNumber":154,"author":{"gitId":"david-eom"},"content":"        CommandParserTestUtil.assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2021-10-08"},{"lineNumber":155,"author":{"gitId":"david-eom"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":156,"author":{"gitId":"david-eom"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":157,"author":{"gitId":"david-eom"},"content":"    @Test","lastModifiedDate":"2021-10-08"},{"lineNumber":158,"author":{"gitId":"david-eom"},"content":"    public void parse_multipleRepeatedFields_acceptsLast() {","lastModifiedDate":"2021-10-08"},{"lineNumber":159,"author":{"gitId":"david-eom"},"content":"        Index targetIndex \u003d TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2021-10-08"},{"lineNumber":160,"author":{"gitId":"david-eom"},"content":"        String userInput \u003d targetIndex.getOneBased()","lastModifiedDate":"2021-10-08"},{"lineNumber":161,"author":{"gitId":"bnjmnt4n"},"content":"                + CommandTestUtil.PHONE_DESC_AMY + CommandTestUtil.TAG_DESC_FRIEND + CommandTestUtil.PHONE_DESC_AMY","lastModifiedDate":"2021-10-12"},{"lineNumber":162,"author":{"gitId":"bnjmnt4n"},"content":"                + CommandTestUtil.TAG_DESC_FRIEND + CommandTestUtil.PHONE_DESC_BOB + CommandTestUtil.TAG_DESC_HUSBAND;","lastModifiedDate":"2021-10-12"},{"lineNumber":163,"author":{"gitId":"david-eom"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":164,"author":{"gitId":"david-eom"},"content":"        EditCommand.EditPersonDescriptor descriptor \u003d","lastModifiedDate":"2021-10-08"},{"lineNumber":165,"author":{"gitId":"david-eom"},"content":"                new EditPersonDescriptorBuilder()","lastModifiedDate":"2021-10-08"},{"lineNumber":166,"author":{"gitId":"david-eom"},"content":"                        .withPhone(CommandTestUtil.VALID_PHONE_BOB)","lastModifiedDate":"2021-10-08"},{"lineNumber":167,"author":{"gitId":"david-eom"},"content":"                        .withTags(CommandTestUtil.VALID_TAG_FRIEND, CommandTestUtil.VALID_TAG_HUSBAND)","lastModifiedDate":"2021-10-08"},{"lineNumber":168,"author":{"gitId":"david-eom"},"content":"                        .build();","lastModifiedDate":"2021-10-08"},{"lineNumber":169,"author":{"gitId":"david-eom"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2021-10-08"},{"lineNumber":170,"author":{"gitId":"david-eom"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":171,"author":{"gitId":"david-eom"},"content":"        CommandParserTestUtil.assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2021-10-08"},{"lineNumber":172,"author":{"gitId":"david-eom"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":173,"author":{"gitId":"david-eom"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":174,"author":{"gitId":"david-eom"},"content":"    @Test","lastModifiedDate":"2021-10-08"},{"lineNumber":175,"author":{"gitId":"david-eom"},"content":"    public void parse_invalidValueFollowedByValidValue_success() {","lastModifiedDate":"2021-10-08"},{"lineNumber":176,"author":{"gitId":"david-eom"},"content":"        // no other valid values specified","lastModifiedDate":"2021-10-08"},{"lineNumber":177,"author":{"gitId":"david-eom"},"content":"        Index targetIndex \u003d TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2021-10-08"},{"lineNumber":178,"author":{"gitId":"david-eom"},"content":"        String userInput \u003d targetIndex.getOneBased()","lastModifiedDate":"2021-10-08"},{"lineNumber":179,"author":{"gitId":"david-eom"},"content":"                + CommandTestUtil.INVALID_PHONE_DESC + CommandTestUtil.PHONE_DESC_BOB;","lastModifiedDate":"2021-10-08"},{"lineNumber":180,"author":{"gitId":"david-eom"},"content":"        EditCommand.EditPersonDescriptor descriptor \u003d","lastModifiedDate":"2021-10-08"},{"lineNumber":181,"author":{"gitId":"david-eom"},"content":"                new EditPersonDescriptorBuilder().withPhone(CommandTestUtil.VALID_PHONE_BOB).build();","lastModifiedDate":"2021-10-08"},{"lineNumber":182,"author":{"gitId":"david-eom"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2021-10-08"},{"lineNumber":183,"author":{"gitId":"david-eom"},"content":"        CommandParserTestUtil.assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2021-10-08"},{"lineNumber":184,"author":{"gitId":"david-eom"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":185,"author":{"gitId":"david-eom"},"content":"        // other valid values specified","lastModifiedDate":"2021-10-08"},{"lineNumber":186,"author":{"gitId":"david-eom"},"content":"        userInput \u003d targetIndex.getOneBased()","lastModifiedDate":"2021-10-08"},{"lineNumber":187,"author":{"gitId":"bnjmnt4n"},"content":"                + CommandTestUtil.INVALID_PHONE_DESC + CommandTestUtil.PHONE_DESC_BOB;","lastModifiedDate":"2021-10-12"},{"lineNumber":188,"author":{"gitId":"david-eom"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder()","lastModifiedDate":"2021-10-08"},{"lineNumber":189,"author":{"gitId":"david-eom"},"content":"                .withPhone(CommandTestUtil.VALID_PHONE_BOB)","lastModifiedDate":"2021-10-08"},{"lineNumber":190,"author":{"gitId":"david-eom"},"content":"                .build();","lastModifiedDate":"2021-10-08"},{"lineNumber":191,"author":{"gitId":"david-eom"},"content":"        expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2021-10-08"},{"lineNumber":192,"author":{"gitId":"david-eom"},"content":"        CommandParserTestUtil.assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2021-10-08"},{"lineNumber":193,"author":{"gitId":"david-eom"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":194,"author":{"gitId":"david-eom"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":195,"author":{"gitId":"david-eom"},"content":"    @Test","lastModifiedDate":"2021-10-08"},{"lineNumber":196,"author":{"gitId":"david-eom"},"content":"    public void parse_resetTags_success() {","lastModifiedDate":"2021-10-08"},{"lineNumber":197,"author":{"gitId":"david-eom"},"content":"        Index targetIndex \u003d TypicalIndexes.INDEX_THIRD_PERSON;","lastModifiedDate":"2021-10-08"},{"lineNumber":198,"author":{"gitId":"david-eom"},"content":"        String userInput \u003d targetIndex.getOneBased() + TAG_EMPTY;","lastModifiedDate":"2021-10-08"},{"lineNumber":199,"author":{"gitId":"david-eom"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":200,"author":{"gitId":"david-eom"},"content":"        EditCommand.EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withTags().build();","lastModifiedDate":"2021-10-08"},{"lineNumber":201,"author":{"gitId":"david-eom"},"content":"        EditCommand expectedCommand \u003d new EditCommand(targetIndex, descriptor);","lastModifiedDate":"2021-10-08"},{"lineNumber":202,"author":{"gitId":"david-eom"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":203,"author":{"gitId":"david-eom"},"content":"        CommandParserTestUtil.assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2021-10-08"},{"lineNumber":204,"author":{"gitId":"david-eom"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":205,"author":{"gitId":"david-eom"},"content":"}","lastModifiedDate":"2021-10-08"}],"authorContributionMap":{"bnjmnt4n":6,"david-eom":198,"stanley-1":1}},{"path":"src/test/java/socialite/logic/parser/FindCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"david-eom"},"content":"package socialite.logic.parser;","lastModifiedDate":"2021-10-08"},{"lineNumber":2,"author":{"gitId":"david-eom"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":3,"author":{"gitId":"david-eom"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-10-08"},{"lineNumber":4,"author":{"gitId":"david-eom"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":5,"author":{"gitId":"david-eom"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-08"},{"lineNumber":6,"author":{"gitId":"david-eom"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":7,"author":{"gitId":"david-eom"},"content":"import socialite.commons.core.Messages;","lastModifiedDate":"2021-10-09"},{"lineNumber":8,"author":{"gitId":"david-eom"},"content":"import socialite.logic.commands.FindCommand;","lastModifiedDate":"2021-10-08"},{"lineNumber":9,"author":{"gitId":"david-eom"},"content":"import socialite.model.person.ContainsKeywordsPredicate;","lastModifiedDate":"2021-10-23"},{"lineNumber":10,"author":{"gitId":"david-eom"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":11,"author":{"gitId":"david-eom"},"content":"public class FindCommandParserTest {","lastModifiedDate":"2021-10-08"},{"lineNumber":12,"author":{"gitId":"david-eom"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":13,"author":{"gitId":"david-eom"},"content":"    private FindCommandParser parser \u003d new FindCommandParser();","lastModifiedDate":"2021-10-08"},{"lineNumber":14,"author":{"gitId":"david-eom"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":15,"author":{"gitId":"david-eom"},"content":"    @Test","lastModifiedDate":"2021-10-08"},{"lineNumber":16,"author":{"gitId":"david-eom"},"content":"    public void parse_emptyArg_throwsParseException() {","lastModifiedDate":"2021-10-08"},{"lineNumber":17,"author":{"gitId":"david-eom"},"content":"        CommandParserTestUtil.assertParseFailure(parser,","lastModifiedDate":"2021-10-09"},{"lineNumber":18,"author":{"gitId":"stanley-1"},"content":"                \"     \", String.format(Messages.MESSAGE_INVALID_COMMAND_FORMAT, FindCommand.MESSAGE_HELP_GUIDE));","lastModifiedDate":"2021-10-20"},{"lineNumber":19,"author":{"gitId":"david-eom"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":20,"author":{"gitId":"david-eom"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":21,"author":{"gitId":"david-eom"},"content":"    @Test","lastModifiedDate":"2021-10-08"},{"lineNumber":22,"author":{"gitId":"david-eom"},"content":"    public void parse_validArgs_returnsFindCommand() {","lastModifiedDate":"2021-10-08"},{"lineNumber":23,"author":{"gitId":"david-eom"},"content":"        // no leading and trailing whitespaces","lastModifiedDate":"2021-10-08"},{"lineNumber":24,"author":{"gitId":"david-eom"},"content":"        FindCommand expectedFindCommand \u003d","lastModifiedDate":"2021-10-08"},{"lineNumber":25,"author":{"gitId":"david-eom"},"content":"                new FindCommand(new ContainsKeywordsPredicate(Arrays.asList(\"Alice\", \"Bob\")));","lastModifiedDate":"2021-10-23"},{"lineNumber":26,"author":{"gitId":"david-eom"},"content":"        CommandParserTestUtil.assertParseSuccess(parser, \"Alice Bob\", expectedFindCommand);","lastModifiedDate":"2021-10-08"},{"lineNumber":27,"author":{"gitId":"david-eom"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":28,"author":{"gitId":"david-eom"},"content":"        // multiple whitespaces between keywords","lastModifiedDate":"2021-10-08"},{"lineNumber":29,"author":{"gitId":"david-eom"},"content":"        CommandParserTestUtil.assertParseSuccess(parser, \" \\n Alice \\n \\t Bob  \\t\", expectedFindCommand);","lastModifiedDate":"2021-10-08"},{"lineNumber":30,"author":{"gitId":"david-eom"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":31,"author":{"gitId":"david-eom"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":32,"author":{"gitId":"david-eom"},"content":"}","lastModifiedDate":"2021-10-08"}],"authorContributionMap":{"david-eom":31,"stanley-1":1}},{"path":"src/test/java/socialite/logic/parser/HelpCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"stanley-1"},"content":"package socialite.logic.parser;","lastModifiedDate":"2021-10-20"},{"lineNumber":2,"author":{"gitId":"stanley-1"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":3,"author":{"gitId":"stanley-1"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-20"},{"lineNumber":4,"author":{"gitId":"stanley-1"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":5,"author":{"gitId":"stanley-1"},"content":"import socialite.logic.commands.AddCommand;","lastModifiedDate":"2021-10-20"},{"lineNumber":6,"author":{"gitId":"stanley-1"},"content":"import socialite.logic.commands.DeleteCommand;","lastModifiedDate":"2021-10-20"},{"lineNumber":7,"author":{"gitId":"stanley-1"},"content":"import socialite.logic.commands.EditCommand;","lastModifiedDate":"2021-10-20"},{"lineNumber":8,"author":{"gitId":"stanley-1"},"content":"import socialite.logic.commands.FindCommand;","lastModifiedDate":"2021-10-20"},{"lineNumber":9,"author":{"gitId":"stanley-1"},"content":"import socialite.logic.commands.HelpCommand;","lastModifiedDate":"2021-10-20"},{"lineNumber":10,"author":{"gitId":"stanley-1"},"content":"import socialite.logic.commands.RemarkCommand;","lastModifiedDate":"2021-10-20"},{"lineNumber":11,"author":{"gitId":"david-eom"},"content":"import socialite.logic.commands.ShareCommand;","lastModifiedDate":"2021-10-25"},{"lineNumber":12,"author":{"gitId":"stanley-1"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":13,"author":{"gitId":"stanley-1"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":14,"author":{"gitId":"stanley-1"},"content":"public class HelpCommandParserTest {","lastModifiedDate":"2021-10-20"},{"lineNumber":15,"author":{"gitId":"stanley-1"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":16,"author":{"gitId":"stanley-1"},"content":"    private HelpCommandParser parser \u003d new HelpCommandParser();","lastModifiedDate":"2021-10-20"},{"lineNumber":17,"author":{"gitId":"stanley-1"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":18,"author":{"gitId":"stanley-1"},"content":"    @Test","lastModifiedDate":"2021-10-20"},{"lineNumber":19,"author":{"gitId":"stanley-1"},"content":"    public void parse_validNoArgs_returnsGenericHelpMessage() {","lastModifiedDate":"2021-10-20"},{"lineNumber":20,"author":{"gitId":"stanley-1"},"content":"        CommandParserTestUtil.assertParseSuccess(parser, \"\", new HelpCommand(HelpCommand.GENERIC_RESPONSE));","lastModifiedDate":"2021-10-20"},{"lineNumber":21,"author":{"gitId":"stanley-1"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":22,"author":{"gitId":"stanley-1"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":23,"author":{"gitId":"stanley-1"},"content":"    @Test","lastModifiedDate":"2021-10-20"},{"lineNumber":24,"author":{"gitId":"stanley-1"},"content":"    public void parse_validArgAdd_returnsHelpForAdd() {","lastModifiedDate":"2021-10-20"},{"lineNumber":25,"author":{"gitId":"stanley-1"},"content":"        CommandParserTestUtil.assertParseSuccess(parser, \"add\", new HelpCommand(AddCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-10-20"},{"lineNumber":26,"author":{"gitId":"stanley-1"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":27,"author":{"gitId":"stanley-1"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":28,"author":{"gitId":"stanley-1"},"content":"    @Test","lastModifiedDate":"2021-10-20"},{"lineNumber":29,"author":{"gitId":"stanley-1"},"content":"    public void parse_validArgDelete_returnsHelpForDelete() {","lastModifiedDate":"2021-10-20"},{"lineNumber":30,"author":{"gitId":"stanley-1"},"content":"        CommandParserTestUtil.assertParseSuccess(parser, \"delete\", new HelpCommand(DeleteCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-10-20"},{"lineNumber":31,"author":{"gitId":"stanley-1"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":32,"author":{"gitId":"stanley-1"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":33,"author":{"gitId":"stanley-1"},"content":"    @Test","lastModifiedDate":"2021-10-20"},{"lineNumber":34,"author":{"gitId":"stanley-1"},"content":"    public void parse_validArgEdit_returnsHelpForEdit() {","lastModifiedDate":"2021-10-20"},{"lineNumber":35,"author":{"gitId":"stanley-1"},"content":"        CommandParserTestUtil.assertParseSuccess(parser, \"edit\", new HelpCommand(EditCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-10-20"},{"lineNumber":36,"author":{"gitId":"stanley-1"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":37,"author":{"gitId":"stanley-1"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":38,"author":{"gitId":"stanley-1"},"content":"    @Test","lastModifiedDate":"2021-10-20"},{"lineNumber":39,"author":{"gitId":"stanley-1"},"content":"    public void parse_validArgFind_returnsHelpForFind() {","lastModifiedDate":"2021-10-20"},{"lineNumber":40,"author":{"gitId":"stanley-1"},"content":"        CommandParserTestUtil.assertParseSuccess(parser, \"find\", new HelpCommand(FindCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-10-20"},{"lineNumber":41,"author":{"gitId":"stanley-1"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":42,"author":{"gitId":"stanley-1"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":43,"author":{"gitId":"stanley-1"},"content":"    @Test","lastModifiedDate":"2021-10-20"},{"lineNumber":44,"author":{"gitId":"stanley-1"},"content":"    public void parse_validArgRemark_returnsHelpForRemark() {","lastModifiedDate":"2021-10-20"},{"lineNumber":45,"author":{"gitId":"stanley-1"},"content":"        CommandParserTestUtil.assertParseSuccess(parser, \"remark\", new HelpCommand(RemarkCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-10-20"},{"lineNumber":46,"author":{"gitId":"stanley-1"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":47,"author":{"gitId":"stanley-1"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":48,"author":{"gitId":"david-eom"},"content":"    @Test","lastModifiedDate":"2021-10-25"},{"lineNumber":49,"author":{"gitId":"david-eom"},"content":"    public void parse_validArgShare_returnsHelpForShare() {","lastModifiedDate":"2021-10-25"},{"lineNumber":50,"author":{"gitId":"david-eom"},"content":"        CommandParserTestUtil.assertParseSuccess(parser, \"share\", new HelpCommand(ShareCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-10-25"},{"lineNumber":51,"author":{"gitId":"david-eom"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":52,"author":{"gitId":"david-eom"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":53,"author":{"gitId":"stanley-1"},"content":"    @Test","lastModifiedDate":"2021-10-20"},{"lineNumber":54,"author":{"gitId":"stanley-1"},"content":"    public void parse_invalidArgs_returnsGenericHelpMessage() {","lastModifiedDate":"2021-10-20"},{"lineNumber":55,"author":{"gitId":"stanley-1"},"content":"        CommandParserTestUtil.assertParseSuccess(parser, \"How do I use this\",","lastModifiedDate":"2021-10-20"},{"lineNumber":56,"author":{"gitId":"stanley-1"},"content":"                new HelpCommand(HelpCommand.GENERIC_RESPONSE));","lastModifiedDate":"2021-10-20"},{"lineNumber":57,"author":{"gitId":"stanley-1"},"content":"        CommandParserTestUtil.assertParseSuccess(parser, \"981209\", new HelpCommand(HelpCommand.GENERIC_RESPONSE));","lastModifiedDate":"2021-10-20"},{"lineNumber":58,"author":{"gitId":"stanley-1"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":59,"author":{"gitId":"stanley-1"},"content":"}","lastModifiedDate":"2021-10-20"}],"authorContributionMap":{"david-eom":6,"stanley-1":53}},{"path":"src/test/java/socialite/logic/parser/ParserUtilTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"david-eom"},"content":"package socialite.logic.parser;","lastModifiedDate":"2021-10-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-22"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-05-22"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-05-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-05-22"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":11,"author":{"gitId":"david-eom"},"content":"import org.junit.jupiter.api.Assertions;","lastModifiedDate":"2021-10-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":14,"author":{"gitId":"david-eom"},"content":"import socialite.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-10-08"},{"lineNumber":15,"author":{"gitId":"david-eom"},"content":"import socialite.model.person.Name;","lastModifiedDate":"2021-10-08"},{"lineNumber":16,"author":{"gitId":"david-eom"},"content":"import socialite.model.person.Phone;","lastModifiedDate":"2021-10-08"},{"lineNumber":17,"author":{"gitId":"david-eom"},"content":"import socialite.model.tag.Tag;","lastModifiedDate":"2021-10-08"},{"lineNumber":18,"author":{"gitId":"david-eom"},"content":"import socialite.testutil.Assert;","lastModifiedDate":"2021-10-08"},{"lineNumber":19,"author":{"gitId":"david-eom"},"content":"import socialite.testutil.TypicalIndexes;","lastModifiedDate":"2021-10-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":21,"author":{"gitId":"-"},"content":"public class ParserUtilTest {","lastModifiedDate":"2017-05-22"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final String INVALID_NAME \u003d \"R@chel\";","lastModifiedDate":"2017-05-22"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private static final String INVALID_PHONE \u003d \"+651234\";","lastModifiedDate":"2017-05-22"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private static final String INVALID_TAG \u003d \"#friend\";","lastModifiedDate":"2017-05-22"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private static final String VALID_NAME \u003d \"Rachel Walker\";","lastModifiedDate":"2017-05-22"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private static final String VALID_PHONE \u003d \"123456\";","lastModifiedDate":"2017-05-22"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private static final String VALID_TAG_1 \u003d \"friend\";","lastModifiedDate":"2017-05-22"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private static final String VALID_TAG_2 \u003d \"neighbour\";","lastModifiedDate":"2017-05-22"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private static final String WHITESPACE \u003d \" \\t\\r\\n\";","lastModifiedDate":"2017-05-29"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-29"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public void parseIndex_invalidInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":35,"author":{"gitId":"david-eom"},"content":"        Assert.assertThrows(ParseException.class, () -\u003e ParserUtil.parseIndex(\"10 a\"));","lastModifiedDate":"2021-10-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public void parseIndex_outOfRangeInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":40,"author":{"gitId":"david-eom"},"content":"        Assert.assertThrows(ParseException.class, ParserUtil.MESSAGE_INVALID_INDEX, ()","lastModifiedDate":"2021-10-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"            -\u003e ParserUtil.parseIndex(Long.toString(Integer.MAX_VALUE + 1)));","lastModifiedDate":"2019-03-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-26"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public void parseIndex_validInput_success() throws Exception {","lastModifiedDate":"2017-05-26"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        // No whitespaces","lastModifiedDate":"2017-05-26"},{"lineNumber":47,"author":{"gitId":"david-eom"},"content":"        Assertions.assertEquals(TypicalIndexes.INDEX_FIRST_PERSON, ParserUtil.parseIndex(\"1\"));","lastModifiedDate":"2021-10-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        // Leading and trailing whitespaces","lastModifiedDate":"2017-05-26"},{"lineNumber":50,"author":{"gitId":"david-eom"},"content":"        Assertions.assertEquals(TypicalIndexes.INDEX_FIRST_PERSON, ParserUtil.parseIndex(\"  1  \"));","lastModifiedDate":"2021-10-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-26"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-26"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public void parseName_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-29"},{"lineNumber":55,"author":{"gitId":"david-eom"},"content":"        Assert.assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseName((String) null));","lastModifiedDate":"2021-10-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public void parseName_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":60,"author":{"gitId":"david-eom"},"content":"        Assert.assertThrows(ParseException.class, () -\u003e ParserUtil.parseName(INVALID_NAME));","lastModifiedDate":"2021-10-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public void parseName_validValueWithoutWhitespace_returnsName() throws Exception {","lastModifiedDate":"2017-05-29"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        Name expectedName \u003d new Name(VALID_NAME);","lastModifiedDate":"2017-05-22"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assertEquals(expectedName, ParserUtil.parseName(VALID_NAME));","lastModifiedDate":"2017-05-29"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-29"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-29"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public void parseName_validValueWithWhitespace_returnsTrimmedName() throws Exception {","lastModifiedDate":"2017-05-29"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        String nameWithWhitespace \u003d WHITESPACE + VALID_NAME + WHITESPACE;","lastModifiedDate":"2017-05-29"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        Name expectedName \u003d new Name(VALID_NAME);","lastModifiedDate":"2017-05-29"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertEquals(expectedName, ParserUtil.parseName(nameWithWhitespace));","lastModifiedDate":"2017-05-29"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public void parsePhone_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":78,"author":{"gitId":"david-eom"},"content":"        Assert.assertThrows(NullPointerException.class, () -\u003e ParserUtil.parsePhone((String) null));","lastModifiedDate":"2021-10-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public void parsePhone_invalidValue_throwsParseException() {","lastModifiedDate":"2018-07-10"},{"lineNumber":83,"author":{"gitId":"david-eom"},"content":"        Assert.assertThrows(ParseException.class, () -\u003e ParserUtil.parsePhone(INVALID_PHONE));","lastModifiedDate":"2021-10-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public void parsePhone_validValueWithoutWhitespace_returnsPhone() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        Phone expectedPhone \u003d new Phone(VALID_PHONE);","lastModifiedDate":"2017-05-22"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        assertEquals(expectedPhone, ParserUtil.parsePhone(VALID_PHONE));","lastModifiedDate":"2017-05-30"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    public void parsePhone_validValueWithWhitespace_returnsTrimmedPhone() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        String phoneWithWhitespace \u003d WHITESPACE + VALID_PHONE + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        Phone expectedPhone \u003d new Phone(VALID_PHONE);","lastModifiedDate":"2017-05-30"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        assertEquals(expectedPhone, ParserUtil.parsePhone(phoneWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    public void parseTag_null_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":101,"author":{"gitId":"david-eom"},"content":"        Assert.assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseTag(null));","lastModifiedDate":"2021-10-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    public void parseTag_invalidValue_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":106,"author":{"gitId":"david-eom"},"content":"        Assert.assertThrows(ParseException.class, () -\u003e ParserUtil.parseTag(INVALID_TAG));","lastModifiedDate":"2021-10-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    public void parseTag_validValueWithoutWhitespace_returnsTag() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        Tag expectedTag \u003d new Tag(VALID_TAG_1);","lastModifiedDate":"2017-05-30"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        assertEquals(expectedTag, ParserUtil.parseTag(VALID_TAG_1));","lastModifiedDate":"2017-05-30"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    public void parseTag_validValueWithWhitespace_returnsTrimmedTag() throws Exception {","lastModifiedDate":"2017-05-30"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        String tagWithWhitespace \u003d WHITESPACE + VALID_TAG_1 + WHITESPACE;","lastModifiedDate":"2017-05-30"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        Tag expectedTag \u003d new Tag(VALID_TAG_1);","lastModifiedDate":"2017-05-30"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        assertEquals(expectedTag, ParserUtil.parseTag(tagWithWhitespace));","lastModifiedDate":"2017-05-30"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    public void parseTags_null_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":124,"author":{"gitId":"david-eom"},"content":"        Assert.assertThrows(NullPointerException.class, () -\u003e ParserUtil.parseTags(null));","lastModifiedDate":"2021-10-08"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    public void parseTags_collectionWithInvalidTags_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":129,"author":{"gitId":"david-eom"},"content":"        Assert.assertThrows(ParseException.class, () -\u003e ParserUtil.parseTags(Arrays.asList(VALID_TAG_1, INVALID_TAG)));","lastModifiedDate":"2021-10-08"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    public void parseTags_emptyCollection_returnsEmptySet() throws Exception {","lastModifiedDate":"2017-05-22"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        assertTrue(ParserUtil.parseTags(Collections.emptyList()).isEmpty());","lastModifiedDate":"2017-05-22"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-22"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    public void parseTags_collectionWithValidTags_returnsTagSet() throws Exception {","lastModifiedDate":"2017-05-22"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e actualTagSet \u003d ParserUtil.parseTags(Arrays.asList(VALID_TAG_1, VALID_TAG_2));","lastModifiedDate":"2017-05-22"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e expectedTagSet \u003d new HashSet\u003cTag\u003e(Arrays.asList(new Tag(VALID_TAG_1), new Tag(VALID_TAG_2)));","lastModifiedDate":"2017-05-22"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-22"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        assertEquals(expectedTagSet, actualTagSet);","lastModifiedDate":"2017-05-22"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-22"},{"lineNumber":144,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-22"}],"authorContributionMap":{"david-eom":20,"-":124}},{"path":"src/test/java/socialite/logic/parser/RemarkCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"EssWhyy"},"content":"package socialite.logic.parser;","lastModifiedDate":"2021-10-12"},{"lineNumber":2,"author":{"gitId":"EssWhyy"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":3,"author":{"gitId":"EssWhyy"},"content":"import static socialite.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-10-12"},{"lineNumber":4,"author":{"gitId":"EssWhyy"},"content":"import static socialite.logic.parser.CliSyntax.PREFIX_REMARK;","lastModifiedDate":"2021-10-12"},{"lineNumber":5,"author":{"gitId":"EssWhyy"},"content":"import static socialite.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2021-10-12"},{"lineNumber":6,"author":{"gitId":"EssWhyy"},"content":"import static socialite.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2021-10-12"},{"lineNumber":7,"author":{"gitId":"EssWhyy"},"content":"import static socialite.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2021-10-12"},{"lineNumber":8,"author":{"gitId":"EssWhyy"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":9,"author":{"gitId":"EssWhyy"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-12"},{"lineNumber":10,"author":{"gitId":"EssWhyy"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":11,"author":{"gitId":"EssWhyy"},"content":"import socialite.commons.core.index.Index;","lastModifiedDate":"2021-10-12"},{"lineNumber":12,"author":{"gitId":"EssWhyy"},"content":"import socialite.logic.commands.RemarkCommand;","lastModifiedDate":"2021-10-12"},{"lineNumber":13,"author":{"gitId":"EssWhyy"},"content":"import socialite.model.person.Remark;","lastModifiedDate":"2021-10-12"},{"lineNumber":14,"author":{"gitId":"EssWhyy"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":15,"author":{"gitId":"EssWhyy"},"content":"public class RemarkCommandParserTest {","lastModifiedDate":"2021-10-12"},{"lineNumber":16,"author":{"gitId":"EssWhyy"},"content":"    private final RemarkCommandParser parser \u003d new RemarkCommandParser();","lastModifiedDate":"2021-10-12"},{"lineNumber":17,"author":{"gitId":"EssWhyy"},"content":"    private final String nonEmptyRemark \u003d \"Some remark.\";","lastModifiedDate":"2021-10-12"},{"lineNumber":18,"author":{"gitId":"EssWhyy"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":19,"author":{"gitId":"EssWhyy"},"content":"    @Test","lastModifiedDate":"2021-10-12"},{"lineNumber":20,"author":{"gitId":"EssWhyy"},"content":"    public void parse_indexSpecified_success() {","lastModifiedDate":"2021-10-12"},{"lineNumber":21,"author":{"gitId":"EssWhyy"},"content":"        // have remark","lastModifiedDate":"2021-10-12"},{"lineNumber":22,"author":{"gitId":"EssWhyy"},"content":"        Index targetIndex \u003d INDEX_FIRST_PERSON;","lastModifiedDate":"2021-10-12"},{"lineNumber":23,"author":{"gitId":"EssWhyy"},"content":"        String userInput \u003d targetIndex.getOneBased() + \" \" + PREFIX_REMARK + nonEmptyRemark;","lastModifiedDate":"2021-10-12"},{"lineNumber":24,"author":{"gitId":"EssWhyy"},"content":"        RemarkCommand expectedCommand \u003d new RemarkCommand(INDEX_FIRST_PERSON, new Remark(nonEmptyRemark));","lastModifiedDate":"2021-10-12"},{"lineNumber":25,"author":{"gitId":"EssWhyy"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2021-10-12"},{"lineNumber":26,"author":{"gitId":"EssWhyy"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":27,"author":{"gitId":"EssWhyy"},"content":"        // no remark","lastModifiedDate":"2021-10-12"},{"lineNumber":28,"author":{"gitId":"EssWhyy"},"content":"        userInput \u003d targetIndex.getOneBased() + \" \" + PREFIX_REMARK;","lastModifiedDate":"2021-10-12"},{"lineNumber":29,"author":{"gitId":"david-eom"},"content":"        expectedCommand \u003d new RemarkCommand(INDEX_FIRST_PERSON, new Remark(null));","lastModifiedDate":"2021-10-22"},{"lineNumber":30,"author":{"gitId":"EssWhyy"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2021-10-12"},{"lineNumber":31,"author":{"gitId":"EssWhyy"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":32,"author":{"gitId":"EssWhyy"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":33,"author":{"gitId":"EssWhyy"},"content":"    @Test","lastModifiedDate":"2021-10-12"},{"lineNumber":34,"author":{"gitId":"EssWhyy"},"content":"    public void parse_missingCompulsoryField_failure() {","lastModifiedDate":"2021-10-12"},{"lineNumber":35,"author":{"gitId":"stanley-1"},"content":"        String expectedMessage \u003d String.format(MESSAGE_INVALID_COMMAND_FORMAT, RemarkCommand.MESSAGE_HELP_GUIDE);","lastModifiedDate":"2021-10-20"},{"lineNumber":36,"author":{"gitId":"EssWhyy"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":37,"author":{"gitId":"EssWhyy"},"content":"        // no parameters","lastModifiedDate":"2021-10-12"},{"lineNumber":38,"author":{"gitId":"EssWhyy"},"content":"        assertParseFailure(parser, RemarkCommand.COMMAND_WORD, expectedMessage);","lastModifiedDate":"2021-10-12"},{"lineNumber":39,"author":{"gitId":"EssWhyy"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":40,"author":{"gitId":"EssWhyy"},"content":"        // no index","lastModifiedDate":"2021-10-12"},{"lineNumber":41,"author":{"gitId":"EssWhyy"},"content":"        assertParseFailure(parser, RemarkCommand.COMMAND_WORD + \" \" + nonEmptyRemark, expectedMessage);","lastModifiedDate":"2021-10-12"},{"lineNumber":42,"author":{"gitId":"EssWhyy"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":43,"author":{"gitId":"EssWhyy"},"content":"}","lastModifiedDate":"2021-10-12"}],"authorContributionMap":{"EssWhyy":41,"david-eom":1,"stanley-1":1}},{"path":"src/test/java/socialite/logic/parser/ShareCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"david-eom"},"content":"package socialite.logic.parser;","lastModifiedDate":"2021-10-25"},{"lineNumber":2,"author":{"gitId":"david-eom"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":3,"author":{"gitId":"david-eom"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-25"},{"lineNumber":4,"author":{"gitId":"david-eom"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":5,"author":{"gitId":"david-eom"},"content":"import socialite.commons.core.Messages;","lastModifiedDate":"2021-10-25"},{"lineNumber":6,"author":{"gitId":"david-eom"},"content":"import socialite.logic.commands.ShareCommand;","lastModifiedDate":"2021-10-25"},{"lineNumber":7,"author":{"gitId":"david-eom"},"content":"import socialite.testutil.TypicalIndexes;","lastModifiedDate":"2021-10-25"},{"lineNumber":8,"author":{"gitId":"david-eom"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":9,"author":{"gitId":"david-eom"},"content":"public class ShareCommandParserTest {","lastModifiedDate":"2021-10-25"},{"lineNumber":10,"author":{"gitId":"david-eom"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":11,"author":{"gitId":"david-eom"},"content":"    private ShareCommandParser parser \u003d new ShareCommandParser();","lastModifiedDate":"2021-10-25"},{"lineNumber":12,"author":{"gitId":"david-eom"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":13,"author":{"gitId":"david-eom"},"content":"    @Test","lastModifiedDate":"2021-10-25"},{"lineNumber":14,"author":{"gitId":"david-eom"},"content":"    public void parse_validArgs_returnsShareCommand() {","lastModifiedDate":"2021-10-25"},{"lineNumber":15,"author":{"gitId":"david-eom"},"content":"        CommandParserTestUtil.assertParseSuccess(parser, \"1\", new ShareCommand(TypicalIndexes.INDEX_FIRST_PERSON));","lastModifiedDate":"2021-10-25"},{"lineNumber":16,"author":{"gitId":"david-eom"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":17,"author":{"gitId":"david-eom"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":18,"author":{"gitId":"david-eom"},"content":"    @Test","lastModifiedDate":"2021-10-25"},{"lineNumber":19,"author":{"gitId":"david-eom"},"content":"    public void parse_invalidArgs_returnsShareCommand() {","lastModifiedDate":"2021-10-25"},{"lineNumber":20,"author":{"gitId":"david-eom"},"content":"        CommandParserTestUtil.assertParseFailure(","lastModifiedDate":"2021-10-25"},{"lineNumber":21,"author":{"gitId":"david-eom"},"content":"                parser, \"a\", String.format(Messages.MESSAGE_INVALID_COMMAND_FORMAT, ShareCommand.MESSAGE_HELP_GUIDE)","lastModifiedDate":"2021-10-25"},{"lineNumber":22,"author":{"gitId":"david-eom"},"content":"        );","lastModifiedDate":"2021-10-25"},{"lineNumber":23,"author":{"gitId":"david-eom"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":24,"author":{"gitId":"david-eom"},"content":"}","lastModifiedDate":"2021-10-25"}],"authorContributionMap":{"david-eom":24}},{"path":"src/test/java/socialite/model/AddressBookTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"david-eom"},"content":"package socialite.model;","lastModifiedDate":"2021-10-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"david-eom"},"content":"import static socialite.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2021-10-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2016-12-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2016-12-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2016-12-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-12-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2016-12-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-12-24"},{"lineNumber":17,"author":{"gitId":"david-eom"},"content":"import socialite.model.person.Person;","lastModifiedDate":"2021-10-08"},{"lineNumber":18,"author":{"gitId":"david-eom"},"content":"import socialite.model.person.exceptions.DuplicatePersonException;","lastModifiedDate":"2021-10-08"},{"lineNumber":19,"author":{"gitId":"david-eom"},"content":"import socialite.testutil.Assert;","lastModifiedDate":"2021-10-08"},{"lineNumber":20,"author":{"gitId":"david-eom"},"content":"import socialite.testutil.PersonBuilder;","lastModifiedDate":"2021-10-09"},{"lineNumber":21,"author":{"gitId":"david-eom"},"content":"import socialite.testutil.TypicalPersons;","lastModifiedDate":"2021-10-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"public class AddressBookTest {","lastModifiedDate":"2016-12-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private final AddressBook addressBook \u003d new AddressBook();","lastModifiedDate":"2016-12-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public void constructor() {","lastModifiedDate":"2016-12-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertEquals(Collections.emptyList(), addressBook.getPersonList());","lastModifiedDate":"2016-12-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public void resetData_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":34,"author":{"gitId":"david-eom"},"content":"        Assert.assertThrows(NullPointerException.class, () -\u003e addressBook.resetData(null));","lastModifiedDate":"2021-10-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public void resetData_withValidReadOnlyAddressBook_replacesData() {","lastModifiedDate":"2016-12-24"},{"lineNumber":39,"author":{"gitId":"david-eom"},"content":"        AddressBook newData \u003d TypicalPersons.getTypicalAddressBook();","lastModifiedDate":"2021-10-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        addressBook.resetData(newData);","lastModifiedDate":"2016-12-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        assertEquals(newData, addressBook);","lastModifiedDate":"2016-12-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public void resetData_withDuplicatePersons_throwsDuplicatePersonException() {","lastModifiedDate":"2018-08-07"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        // Two persons with the same identity fields","lastModifiedDate":"2018-04-19"},{"lineNumber":47,"author":{"gitId":"david-eom"},"content":"        Person editedAlice \u003d new PersonBuilder(TypicalPersons.ALICE)","lastModifiedDate":"2021-10-09"},{"lineNumber":48,"author":{"gitId":"david-eom"},"content":"                .withTags(VALID_TAG_HUSBAND)","lastModifiedDate":"2021-10-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-04-19"},{"lineNumber":50,"author":{"gitId":"david-eom"},"content":"        List\u003cPerson\u003e newPersons \u003d Arrays.asList(TypicalPersons.ALICE, editedAlice);","lastModifiedDate":"2021-10-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        AddressBookStub newData \u003d new AddressBookStub(newPersons);","lastModifiedDate":"2018-03-29"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":53,"author":{"gitId":"david-eom"},"content":"        Assert.assertThrows(DuplicatePersonException.class, () -\u003e addressBook.resetData(newData));","lastModifiedDate":"2021-10-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public void hasPerson_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-06"},{"lineNumber":58,"author":{"gitId":"david-eom"},"content":"        Assert.assertThrows(NullPointerException.class, () -\u003e addressBook.hasPerson(null));","lastModifiedDate":"2021-10-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public void hasPerson_personNotInAddressBook_returnsFalse() {","lastModifiedDate":"2018-08-06"},{"lineNumber":63,"author":{"gitId":"david-eom"},"content":"        assertFalse(addressBook.hasPerson(TypicalPersons.ALICE));","lastModifiedDate":"2021-10-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public void hasPerson_personInAddressBook_returnsTrue() {","lastModifiedDate":"2018-08-07"},{"lineNumber":68,"author":{"gitId":"david-eom"},"content":"        addressBook.addPerson(TypicalPersons.ALICE);","lastModifiedDate":"2021-10-08"},{"lineNumber":69,"author":{"gitId":"david-eom"},"content":"        assertTrue(addressBook.hasPerson(TypicalPersons.ALICE));","lastModifiedDate":"2021-10-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public void hasPerson_personWithSameIdentityFieldsInAddressBook_returnsTrue() {","lastModifiedDate":"2018-08-07"},{"lineNumber":74,"author":{"gitId":"david-eom"},"content":"        addressBook.addPerson(TypicalPersons.ALICE);","lastModifiedDate":"2021-10-08"},{"lineNumber":75,"author":{"gitId":"david-eom"},"content":"        Person editedAlice \u003d new PersonBuilder(TypicalPersons.ALICE)","lastModifiedDate":"2021-10-09"},{"lineNumber":76,"author":{"gitId":"david-eom"},"content":"                .withTags(VALID_TAG_HUSBAND)","lastModifiedDate":"2021-10-09"},{"lineNumber":77,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-08-06"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertTrue(addressBook.hasPerson(editedAlice));","lastModifiedDate":"2018-08-06"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public void getPersonList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":83,"author":{"gitId":"david-eom"},"content":"        Assert.assertThrows(UnsupportedOperationException.class, () -\u003e addressBook.getPersonList().remove(0));","lastModifiedDate":"2021-10-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-24"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     * A stub ReadOnlyAddressBook whose persons list can violate interface constraints.","lastModifiedDate":"2018-03-29"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-24"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    private static class AddressBookStub implements ReadOnlyAddressBook {","lastModifiedDate":"2016-12-24"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        private final ObservableList\u003cPerson\u003e persons \u003d FXCollections.observableArrayList();","lastModifiedDate":"2018-01-10"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        AddressBookStub(Collection\u003cPerson\u003e persons) {","lastModifiedDate":"2018-03-29"},{"lineNumber":93,"author":{"gitId":"-"},"content":"            this.persons.setAll(persons);","lastModifiedDate":"2016-12-24"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-24"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2016-12-24"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        public ObservableList\u003cPerson\u003e getPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":98,"author":{"gitId":"-"},"content":"            return persons;","lastModifiedDate":"2016-12-24"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-24"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":102,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-24"}],"authorContributionMap":{"david-eom":21,"-":81}},{"path":"src/test/java/socialite/model/ModelManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"david-eom"},"content":"package socialite.model;","lastModifiedDate":"2021-10-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"david-eom"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2021-10-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-08-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-31"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":12,"author":{"gitId":"david-eom"},"content":"import org.junit.jupiter.api.Assertions;","lastModifiedDate":"2021-10-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":15,"author":{"gitId":"david-eom"},"content":"import socialite.commons.core.GuiSettings;","lastModifiedDate":"2021-10-08"},{"lineNumber":16,"author":{"gitId":"david-eom"},"content":"import socialite.model.person.ContainsKeywordsPredicate;","lastModifiedDate":"2021-10-23"},{"lineNumber":17,"author":{"gitId":"david-eom"},"content":"import socialite.testutil.AddressBookBuilder;","lastModifiedDate":"2021-10-08"},{"lineNumber":18,"author":{"gitId":"david-eom"},"content":"import socialite.testutil.Assert;","lastModifiedDate":"2021-10-08"},{"lineNumber":19,"author":{"gitId":"david-eom"},"content":"import socialite.testutil.TypicalPersons;","lastModifiedDate":"2021-10-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":21,"author":{"gitId":"-"},"content":"public class ModelManagerTest {","lastModifiedDate":"2017-05-31"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private ModelManager modelManager \u003d new ModelManager();","lastModifiedDate":"2018-08-06"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public void constructor() {","lastModifiedDate":"2018-11-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertEquals(new UserPrefs(), modelManager.getUserPrefs());","lastModifiedDate":"2018-11-27"},{"lineNumber":28,"author":{"gitId":"david-eom"},"content":"        Assertions.assertEquals(new GuiSettings(), modelManager.getGuiSettings());","lastModifiedDate":"2021-10-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertEquals(new AddressBook(), new AddressBook(modelManager.getAddressBook()));","lastModifiedDate":"2018-11-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public void setUserPrefs_nullUserPrefs_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":34,"author":{"gitId":"david-eom"},"content":"        Assert.assertThrows(NullPointerException.class, () -\u003e modelManager.setUserPrefs(null));","lastModifiedDate":"2021-10-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public void setUserPrefs_validUserPrefs_copiesUserPrefs() {","lastModifiedDate":"2018-12-06"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        userPrefs.setAddressBookFilePath(Paths.get(\"address/book/file/path\"));","lastModifiedDate":"2018-11-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(new GuiSettings(1, 2, 3, 4));","lastModifiedDate":"2018-11-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        modelManager.setUserPrefs(userPrefs);","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertEquals(userPrefs, modelManager.getUserPrefs());","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        // Modifying userPrefs should not modify modelManager\u0027s userPrefs","lastModifiedDate":"2018-12-06"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        UserPrefs oldUserPrefs \u003d new UserPrefs(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        userPrefs.setAddressBookFilePath(Paths.get(\"new/address/book/file/path\"));","lastModifiedDate":"2018-12-06"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertEquals(oldUserPrefs, modelManager.getUserPrefs());","lastModifiedDate":"2018-12-06"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public void setGuiSettings_nullGuiSettings_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"david-eom"},"content":"        Assert.assertThrows(NullPointerException.class, () -\u003e modelManager.setGuiSettings(null));","lastModifiedDate":"2021-10-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public void setGuiSettings_validGuiSettings_setsGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        GuiSettings guiSettings \u003d new GuiSettings(1, 2, 3, 4);","lastModifiedDate":"2018-11-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        modelManager.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertEquals(guiSettings, modelManager.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath_nullPath_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":65,"author":{"gitId":"david-eom"},"content":"        Assert.assertThrows(NullPointerException.class, () -\u003e modelManager.setAddressBookFilePath(null));","lastModifiedDate":"2021-10-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath_validPath_setsAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        Path path \u003d Paths.get(\"address/book/file/path\");","lastModifiedDate":"2018-11-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        modelManager.setAddressBookFilePath(path);","lastModifiedDate":"2018-11-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertEquals(path, modelManager.getAddressBookFilePath());","lastModifiedDate":"2018-11-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public void hasPerson_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-06"},{"lineNumber":77,"author":{"gitId":"david-eom"},"content":"        Assert.assertThrows(NullPointerException.class, () -\u003e modelManager.hasPerson(null));","lastModifiedDate":"2021-10-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public void hasPerson_personNotInAddressBook_returnsFalse() {","lastModifiedDate":"2018-08-06"},{"lineNumber":82,"author":{"gitId":"david-eom"},"content":"        assertFalse(modelManager.hasPerson(TypicalPersons.ALICE));","lastModifiedDate":"2021-10-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public void hasPerson_personInAddressBook_returnsTrue() {","lastModifiedDate":"2018-08-07"},{"lineNumber":87,"author":{"gitId":"david-eom"},"content":"        modelManager.addPerson(TypicalPersons.ALICE);","lastModifiedDate":"2021-10-08"},{"lineNumber":88,"author":{"gitId":"david-eom"},"content":"        assertTrue(modelManager.hasPerson(TypicalPersons.ALICE));","lastModifiedDate":"2021-10-08"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    public void getFilteredPersonList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":93,"author":{"gitId":"david-eom"},"content":"        Assert.assertThrows(UnsupportedOperationException.class, () -\u003e modelManager.getFilteredPersonList().remove(0));","lastModifiedDate":"2021-10-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-31"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":98,"author":{"gitId":"david-eom"},"content":"        AddressBook addressBook \u003d","lastModifiedDate":"2021-10-09"},{"lineNumber":99,"author":{"gitId":"david-eom"},"content":"                new AddressBookBuilder().withPerson(TypicalPersons.ALICE).withPerson(TypicalPersons.BENSON).build();","lastModifiedDate":"2021-10-09"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        AddressBook differentAddressBook \u003d new AddressBook();","lastModifiedDate":"2017-05-31"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2017-05-31"},{"lineNumber":102,"author":{"gitId":"david-eom"},"content":"        CommandHistory commandHistory \u003d new CommandHistory();","lastModifiedDate":"2021-10-21"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-31"},{"lineNumber":105,"author":{"gitId":"Zacchua"},"content":"        modelManager \u003d new ModelManager(addressBook, userPrefs, commandHistory);","lastModifiedDate":"2021-10-27"},{"lineNumber":106,"author":{"gitId":"Zacchua"},"content":"        ModelManager modelManagerCopy \u003d new ModelManager(addressBook, userPrefs, commandHistory);","lastModifiedDate":"2021-10-27"},{"lineNumber":107,"author":{"gitId":"david-eom"},"content":"        assertEquals(modelManager, modelManagerCopy);","lastModifiedDate":"2021-10-21"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-31"},{"lineNumber":110,"author":{"gitId":"david-eom"},"content":"        assertEquals(modelManager, modelManager);","lastModifiedDate":"2021-10-21"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":113,"author":{"gitId":"david-eom"},"content":"        assertNotEquals(null, modelManager);","lastModifiedDate":"2021-10-21"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":116,"author":{"gitId":"david-eom"},"content":"        assertNotEquals(5, modelManager);","lastModifiedDate":"2021-10-21"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        // different addressBook -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":119,"author":{"gitId":"Zacchua"},"content":"        assertNotEquals(modelManager, new ModelManager(","lastModifiedDate":"2021-10-26"},{"lineNumber":120,"author":{"gitId":"Zacchua"},"content":"                differentAddressBook, userPrefs, commandHistory));","lastModifiedDate":"2021-10-27"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        // different filteredList -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":123,"author":{"gitId":"david-eom"},"content":"        String[] keywords \u003d TypicalPersons.ALICE.getName().fullName.split(\"\\\\s+\");","lastModifiedDate":"2021-10-08"},{"lineNumber":124,"author":{"gitId":"david-eom"},"content":"        modelManager.updateFilteredPersonList(new ContainsKeywordsPredicate(Arrays.asList(keywords)));","lastModifiedDate":"2021-10-23"},{"lineNumber":125,"author":{"gitId":"Zacchua"},"content":"        assertFalse(modelManager.equals(new ModelManager(addressBook, userPrefs, commandHistory)));","lastModifiedDate":"2021-10-27"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        // resets modelManager to initial state for upcoming tests","lastModifiedDate":"2017-08-05"},{"lineNumber":128,"author":{"gitId":"david-eom"},"content":"        modelManager.updateFilteredPersonList(Model.PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2021-10-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        // different userPrefs -\u003e returns false","lastModifiedDate":"2018-11-27"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        UserPrefs differentUserPrefs \u003d new UserPrefs();","lastModifiedDate":"2017-05-31"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        differentUserPrefs.setAddressBookFilePath(Paths.get(\"differentFilePath\"));","lastModifiedDate":"2018-08-09"},{"lineNumber":133,"author":{"gitId":"Zacchua"},"content":"        assertNotEquals(modelManager, new ModelManager(","lastModifiedDate":"2021-10-26"},{"lineNumber":134,"author":{"gitId":"Zacchua"},"content":"                addressBook, differentUserPrefs, commandHistory));","lastModifiedDate":"2021-10-27"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31"},{"lineNumber":136,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-31"}],"authorContributionMap":{"Zacchua":7,"david-eom":27,"-":102}},{"path":"src/test/java/socialite/model/UserPrefsTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"david-eom"},"content":"package socialite.model;","lastModifiedDate":"2021-10-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"david-eom"},"content":"import socialite.testutil.Assert;","lastModifiedDate":"2021-10-08"},{"lineNumber":6,"author":{"gitId":"david-eom"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"public class UserPrefsTest {","lastModifiedDate":"2018-11-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public void setGuiSettings_nullGuiSettings_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"        UserPrefs userPref \u003d new UserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":12,"author":{"gitId":"david-eom"},"content":"        Assert.assertThrows(NullPointerException.class, () -\u003e userPref.setGuiSettings(null));","lastModifiedDate":"2021-10-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath_nullPath_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":18,"author":{"gitId":"david-eom"},"content":"        Assert.assertThrows(NullPointerException.class, () -\u003e userPrefs.setAddressBookFilePath(null));","lastModifiedDate":"2021-10-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-11-27"}],"authorContributionMap":{"david-eom":5,"-":16}},{"path":"src/test/java/socialite/model/handle/FacebookTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"stanley-1"},"content":"package socialite.model.handle;","lastModifiedDate":"2021-10-12"},{"lineNumber":2,"author":{"gitId":"stanley-1"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":3,"author":{"gitId":"stanley-1"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-10-12"},{"lineNumber":4,"author":{"gitId":"stanley-1"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-12"},{"lineNumber":5,"author":{"gitId":"stanley-1"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":6,"author":{"gitId":"stanley-1"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-12"},{"lineNumber":7,"author":{"gitId":"stanley-1"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":8,"author":{"gitId":"stanley-1"},"content":"import socialite.testutil.Assert;","lastModifiedDate":"2021-10-12"},{"lineNumber":9,"author":{"gitId":"stanley-1"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":10,"author":{"gitId":"stanley-1"},"content":"public class FacebookTest {","lastModifiedDate":"2021-10-12"},{"lineNumber":11,"author":{"gitId":"stanley-1"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":12,"author":{"gitId":"stanley-1"},"content":"    @Test","lastModifiedDate":"2021-10-12"},{"lineNumber":13,"author":{"gitId":"stanley-1"},"content":"    public void isValidHandle() {","lastModifiedDate":"2021-10-12"},{"lineNumber":14,"author":{"gitId":"stanley-1"},"content":"        // null Facebook username","lastModifiedDate":"2021-10-12"},{"lineNumber":15,"author":{"gitId":"stanley-1"},"content":"        Assert.assertThrows(NullPointerException.class, () -\u003e Facebook.isValidHandle(null));","lastModifiedDate":"2021-10-12"},{"lineNumber":16,"author":{"gitId":"stanley-1"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":17,"author":{"gitId":"stanley-1"},"content":"        // blank Facebook usernames","lastModifiedDate":"2021-10-12"},{"lineNumber":18,"author":{"gitId":"stanley-1"},"content":"        assertFalse(Facebook.isValidHandle(\"\")); // empty string","lastModifiedDate":"2021-10-12"},{"lineNumber":19,"author":{"gitId":"stanley-1"},"content":"        assertFalse(Facebook.isValidHandle(\" \")); // spaces only","lastModifiedDate":"2021-10-12"},{"lineNumber":20,"author":{"gitId":"stanley-1"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":21,"author":{"gitId":"stanley-1"},"content":"        // invalid Facebook usernames","lastModifiedDate":"2021-10-12"},{"lineNumber":22,"author":{"gitId":"stanley-1"},"content":"        assertFalse(Facebook.isValidHandle(\"dave\")); // less than 5 characters","lastModifiedDate":"2021-10-12"},{"lineNumber":23,"author":{"gitId":"stanley-1"},"content":"        assertFalse(Facebook.isValidHandle(\" invalidHandle\")); // leading space","lastModifiedDate":"2021-10-12"},{"lineNumber":24,"author":{"gitId":"stanley-1"},"content":"        assertFalse(Facebook.isValidHandle(\"invalidHandle \")); // trailing space","lastModifiedDate":"2021-10-12"},{"lineNumber":25,"author":{"gitId":"stanley-1"},"content":"        assertFalse(Facebook.isValidHandle(\"john_chapman\")); // invalid token \u0027_\u0027","lastModifiedDate":"2021-10-12"},{"lineNumber":26,"author":{"gitId":"stanley-1"},"content":"        assertFalse(Facebook.isValidHandle(\"john\u0026chapman\")); // invalid token \u0027\u0026\u0027","lastModifiedDate":"2021-10-12"},{"lineNumber":27,"author":{"gitId":"stanley-1"},"content":"        assertFalse(Facebook.isValidHandle(\"john#chapman\")); // invalid token \u0027#\u0027","lastModifiedDate":"2021-10-12"},{"lineNumber":28,"author":{"gitId":"stanley-1"},"content":"        assertFalse(Facebook.isValidHandle(\"john.com\")); // invalid token \".com\"","lastModifiedDate":"2021-10-12"},{"lineNumber":29,"author":{"gitId":"stanley-1"},"content":"        assertFalse(Facebook.isValidHandle(\"john.net\")); // invalid token \".net\"","lastModifiedDate":"2021-10-12"},{"lineNumber":30,"author":{"gitId":"stanley-1"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":31,"author":{"gitId":"stanley-1"},"content":"        // valid Facebook usernames","lastModifiedDate":"2021-10-12"},{"lineNumber":32,"author":{"gitId":"stanley-1"},"content":"        assertTrue(Facebook.isValidHandle(\"john1\")); // at least 5 characters","lastModifiedDate":"2021-10-12"},{"lineNumber":33,"author":{"gitId":"stanley-1"},"content":"        assertTrue(Facebook.isValidHandle(\"jo.hn\")); // at least 5 characters with full stop","lastModifiedDate":"2021-10-12"},{"lineNumber":34,"author":{"gitId":"stanley-1"},"content":"        assertTrue(Facebook.isValidHandle(\"john.common\")); // extends beyond \".com\"","lastModifiedDate":"2021-10-12"},{"lineNumber":35,"author":{"gitId":"stanley-1"},"content":"        assertTrue(Facebook.isValidHandle(\"john.network\")); // extends beyond \".net\"","lastModifiedDate":"2021-10-12"},{"lineNumber":36,"author":{"gitId":"stanley-1"},"content":"        assertTrue(Facebook.isValidHandle(\"sarahWalters1\")); // lower \u0026 uppercase with digits","lastModifiedDate":"2021-10-12"},{"lineNumber":37,"author":{"gitId":"stanley-1"},"content":"        assertTrue(Facebook.isValidHandle(\"123Steve.3\")); // start with digits","lastModifiedDate":"2021-10-12"},{"lineNumber":38,"author":{"gitId":"stanley-1"},"content":"        assertTrue(Facebook.isValidHandle(\"Nat.321\")); // start with uppercase letter","lastModifiedDate":"2021-10-12"},{"lineNumber":39,"author":{"gitId":"stanley-1"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":40,"author":{"gitId":"stanley-1"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":41,"author":{"gitId":"EssWhyy"},"content":"    @Test","lastModifiedDate":"2021-10-26"},{"lineNumber":42,"author":{"gitId":"EssWhyy"},"content":"    public void hasLinkPrefix() {","lastModifiedDate":"2021-10-26"},{"lineNumber":43,"author":{"gitId":"EssWhyy"},"content":"        Facebook f \u003d new Facebook(\"name1\");","lastModifiedDate":"2021-10-26"},{"lineNumber":44,"author":{"gitId":"EssWhyy"},"content":"        assertTrue(f.getUrl().equals(\"https://www.facebook.com/name1\"));","lastModifiedDate":"2021-10-26"},{"lineNumber":45,"author":{"gitId":"EssWhyy"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":46,"author":{"gitId":"stanley-1"},"content":"}","lastModifiedDate":"2021-10-12"}],"authorContributionMap":{"EssWhyy":5,"stanley-1":41}},{"path":"src/test/java/socialite/model/handle/InstagramTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"stanley-1"},"content":"package socialite.model.handle;","lastModifiedDate":"2021-10-12"},{"lineNumber":2,"author":{"gitId":"stanley-1"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":3,"author":{"gitId":"stanley-1"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-10-12"},{"lineNumber":4,"author":{"gitId":"stanley-1"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-12"},{"lineNumber":5,"author":{"gitId":"stanley-1"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":6,"author":{"gitId":"stanley-1"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-12"},{"lineNumber":7,"author":{"gitId":"stanley-1"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":8,"author":{"gitId":"stanley-1"},"content":"import socialite.testutil.Assert;","lastModifiedDate":"2021-10-12"},{"lineNumber":9,"author":{"gitId":"stanley-1"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":10,"author":{"gitId":"stanley-1"},"content":"public class InstagramTest {","lastModifiedDate":"2021-10-12"},{"lineNumber":11,"author":{"gitId":"stanley-1"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":12,"author":{"gitId":"stanley-1"},"content":"    @Test","lastModifiedDate":"2021-10-12"},{"lineNumber":13,"author":{"gitId":"stanley-1"},"content":"    public void isValidHandle() {","lastModifiedDate":"2021-10-12"},{"lineNumber":14,"author":{"gitId":"stanley-1"},"content":"        // null Instagram handle","lastModifiedDate":"2021-10-12"},{"lineNumber":15,"author":{"gitId":"stanley-1"},"content":"        Assert.assertThrows(NullPointerException.class, () -\u003e Instagram.isValidHandle(null));","lastModifiedDate":"2021-10-12"},{"lineNumber":16,"author":{"gitId":"stanley-1"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":17,"author":{"gitId":"stanley-1"},"content":"        // blank Instagram handles","lastModifiedDate":"2021-10-12"},{"lineNumber":18,"author":{"gitId":"stanley-1"},"content":"        assertFalse(Instagram.isValidHandle(\"\")); // empty string","lastModifiedDate":"2021-10-12"},{"lineNumber":19,"author":{"gitId":"stanley-1"},"content":"        assertFalse(Instagram.isValidHandle(\" \")); // spaces only","lastModifiedDate":"2021-10-12"},{"lineNumber":20,"author":{"gitId":"stanley-1"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":21,"author":{"gitId":"stanley-1"},"content":"        // invalid Instagram handles","lastModifiedDate":"2021-10-12"},{"lineNumber":22,"author":{"gitId":"stanley-1"},"content":"        assertFalse(Instagram.isValidHandle(\" invalidHandle\")); // leading space","lastModifiedDate":"2021-10-12"},{"lineNumber":23,"author":{"gitId":"stanley-1"},"content":"        assertFalse(Instagram.isValidHandle(\"invalidHandle \")); // trailing space","lastModifiedDate":"2021-10-12"},{"lineNumber":24,"author":{"gitId":"stanley-1"},"content":"        assertFalse(Instagram.isValidHandle(\"john!chapman\")); // invalid token \u0027!\u0027","lastModifiedDate":"2021-10-12"},{"lineNumber":25,"author":{"gitId":"stanley-1"},"content":"        assertFalse(Instagram.isValidHandle(\"john\u0026chapman\")); // invalid token \u0027\u0026\u0027","lastModifiedDate":"2021-10-12"},{"lineNumber":26,"author":{"gitId":"stanley-1"},"content":"        assertFalse(Instagram.isValidHandle(\"john#chapman\")); // invalid token \u0027#\u0027","lastModifiedDate":"2021-10-12"},{"lineNumber":27,"author":{"gitId":"stanley-1"},"content":"        assertFalse(Instagram.isValidHandle(\"john-chapman\")); // invalid token \u0027-\u0027","lastModifiedDate":"2021-10-12"},{"lineNumber":28,"author":{"gitId":"stanley-1"},"content":"        assertFalse(Instagram.isValidHandle(\"ThisIsALongHandleThatShouldBeInvalid\")); // exceeds max length","lastModifiedDate":"2021-10-12"},{"lineNumber":29,"author":{"gitId":"stanley-1"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":30,"author":{"gitId":"stanley-1"},"content":"        // valid Instagram handles","lastModifiedDate":"2021-10-12"},{"lineNumber":31,"author":{"gitId":"stanley-1"},"content":"        assertTrue(Instagram.isValidHandle(\"1\")); // at least 1 character","lastModifiedDate":"2021-10-12"},{"lineNumber":32,"author":{"gitId":"stanley-1"},"content":"        assertTrue(Instagram.isValidHandle(\"jo.hn\")); // full stop","lastModifiedDate":"2021-10-12"},{"lineNumber":33,"author":{"gitId":"stanley-1"},"content":"        assertTrue(Instagram.isValidHandle(\"john_chapman\")); // underscore","lastModifiedDate":"2021-10-12"},{"lineNumber":34,"author":{"gitId":"stanley-1"},"content":"        assertTrue(Instagram.isValidHandle(\"sarahWalters1\")); // lower \u0026 uppercase with digits","lastModifiedDate":"2021-10-12"},{"lineNumber":35,"author":{"gitId":"stanley-1"},"content":"        assertTrue(Instagram.isValidHandle(\"123Steve.3\")); // start with digits","lastModifiedDate":"2021-10-12"},{"lineNumber":36,"author":{"gitId":"stanley-1"},"content":"        assertTrue(Instagram.isValidHandle(\"Nat_321\")); // start with uppercase letter","lastModifiedDate":"2021-10-12"},{"lineNumber":37,"author":{"gitId":"stanley-1"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":38,"author":{"gitId":"stanley-1"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":39,"author":{"gitId":"EssWhyy"},"content":"    @Test","lastModifiedDate":"2021-10-26"},{"lineNumber":40,"author":{"gitId":"EssWhyy"},"content":"    public void hasLinkPrefix() {","lastModifiedDate":"2021-10-26"},{"lineNumber":41,"author":{"gitId":"EssWhyy"},"content":"        Instagram i \u003d new Instagram(\"name1\");","lastModifiedDate":"2021-10-26"},{"lineNumber":42,"author":{"gitId":"EssWhyy"},"content":"        assertTrue(i.getUrl().equals(\"https://www.instagram.com/name1\"));","lastModifiedDate":"2021-10-26"},{"lineNumber":43,"author":{"gitId":"EssWhyy"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":44,"author":{"gitId":"stanley-1"},"content":"}","lastModifiedDate":"2021-10-12"}],"authorContributionMap":{"EssWhyy":5,"stanley-1":39}},{"path":"src/test/java/socialite/model/handle/TelegramTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"david-eom"},"content":"package socialite.model.handle;","lastModifiedDate":"2021-10-12"},{"lineNumber":2,"author":{"gitId":"david-eom"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":3,"author":{"gitId":"david-eom"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-10-12"},{"lineNumber":4,"author":{"gitId":"david-eom"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-12"},{"lineNumber":5,"author":{"gitId":"david-eom"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":6,"author":{"gitId":"david-eom"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-12"},{"lineNumber":7,"author":{"gitId":"david-eom"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":8,"author":{"gitId":"david-eom"},"content":"public class TelegramTest {","lastModifiedDate":"2021-10-12"},{"lineNumber":9,"author":{"gitId":"david-eom"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":10,"author":{"gitId":"david-eom"},"content":"    @Test","lastModifiedDate":"2021-10-12"},{"lineNumber":11,"author":{"gitId":"david-eom"},"content":"    public void isValidTelegram() {","lastModifiedDate":"2021-10-12"},{"lineNumber":12,"author":{"gitId":"david-eom"},"content":"        // null telegram handle","lastModifiedDate":"2021-10-12"},{"lineNumber":13,"author":{"gitId":"Zacchua"},"content":"        // Assert.assertThrows(NullPointerException.class, () -\u003e new Telegram(null));","lastModifiedDate":"2021-10-14"},{"lineNumber":14,"author":{"gitId":"david-eom"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":15,"author":{"gitId":"david-eom"},"content":"        // blank telegram handle","lastModifiedDate":"2021-10-12"},{"lineNumber":16,"author":{"gitId":"david-eom"},"content":"        assertFalse(Telegram.isValidHandle(\"\")); // empty string","lastModifiedDate":"2021-10-12"},{"lineNumber":17,"author":{"gitId":"david-eom"},"content":"        assertFalse(Telegram.isValidHandle(\" \")); // spaces only","lastModifiedDate":"2021-10-12"},{"lineNumber":18,"author":{"gitId":"david-eom"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":19,"author":{"gitId":"david-eom"},"content":"        // invalid handles","lastModifiedDate":"2021-10-12"},{"lineNumber":20,"author":{"gitId":"david-eom"},"content":"        assertFalse(Telegram.isValidHandle(\"adam\")); // less than 5 characters","lastModifiedDate":"2021-10-12"},{"lineNumber":21,"author":{"gitId":"david-eom"},"content":"        assertFalse(Telegram.isValidHandle(\" test_handle\")); // leading space","lastModifiedDate":"2021-10-12"},{"lineNumber":22,"author":{"gitId":"david-eom"},"content":"        assertFalse(Telegram.isValidHandle(\"test_handle \")); // trailing space","lastModifiedDate":"2021-10-12"},{"lineNumber":23,"author":{"gitId":"david-eom"},"content":"        assertFalse(Telegram.isValidHandle(\"john.appleseed\")); // dot instead of underscore","lastModifiedDate":"2021-10-12"},{"lineNumber":24,"author":{"gitId":"david-eom"},"content":"        assertFalse(Telegram.isValidHandle(\"john+appleseed\")); // invalid token \"+\"","lastModifiedDate":"2021-10-12"},{"lineNumber":25,"author":{"gitId":"david-eom"},"content":"        assertFalse(Telegram.isValidHandle(\"john%appleseed\")); // invalid token \"%\"","lastModifiedDate":"2021-10-12"},{"lineNumber":26,"author":{"gitId":"david-eom"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":27,"author":{"gitId":"david-eom"},"content":"        // valid handles","lastModifiedDate":"2021-10-12"},{"lineNumber":28,"author":{"gitId":"david-eom"},"content":"        assertTrue(Telegram.isValidHandle(\"abcde\")); // 5 characters","lastModifiedDate":"2021-10-12"},{"lineNumber":29,"author":{"gitId":"david-eom"},"content":"        assertTrue(Telegram.isValidHandle(\"ab_cd\")); // 5 characters including underscore","lastModifiedDate":"2021-10-12"},{"lineNumber":30,"author":{"gitId":"david-eom"},"content":"        assertTrue(Telegram.isValidHandle(\"john_appleseed\")); // alphanumerical and underscore","lastModifiedDate":"2021-10-12"},{"lineNumber":31,"author":{"gitId":"david-eom"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":32,"author":{"gitId":"david-eom"},"content":"        // random names generated","lastModifiedDate":"2021-10-12"},{"lineNumber":33,"author":{"gitId":"david-eom"},"content":"        assertTrue(Telegram.isValidHandle(\"Jasmin_Lutz\"));","lastModifiedDate":"2021-10-12"},{"lineNumber":34,"author":{"gitId":"david-eom"},"content":"        assertTrue(Telegram.isValidHandle(\"kayleebrady\"));","lastModifiedDate":"2021-10-12"},{"lineNumber":35,"author":{"gitId":"david-eom"},"content":"        assertTrue(Telegram.isValidHandle(\"kumani_rowland\"));","lastModifiedDate":"2021-10-12"},{"lineNumber":36,"author":{"gitId":"david-eom"},"content":"        assertTrue(Telegram.isValidHandle(\"rocky_jeffery\"));","lastModifiedDate":"2021-10-12"},{"lineNumber":37,"author":{"gitId":"david-eom"},"content":"        assertTrue(Telegram.isValidHandle(\"skyla_moss\"));","lastModifiedDate":"2021-10-12"},{"lineNumber":38,"author":{"gitId":"david-eom"},"content":"        assertTrue(Telegram.isValidHandle(\"choiyoungbae\"));","lastModifiedDate":"2021-10-12"},{"lineNumber":39,"author":{"gitId":"david-eom"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":40,"author":{"gitId":"EssWhyy"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":41,"author":{"gitId":"EssWhyy"},"content":"    @Test","lastModifiedDate":"2021-10-26"},{"lineNumber":42,"author":{"gitId":"EssWhyy"},"content":"    public void hasLinkPrefix() {","lastModifiedDate":"2021-10-26"},{"lineNumber":43,"author":{"gitId":"EssWhyy"},"content":"        Telegram t \u003d new Telegram(\"name1\");","lastModifiedDate":"2021-10-26"},{"lineNumber":44,"author":{"gitId":"EssWhyy"},"content":"        assertTrue(t.getUrl().equals(\"https://www.t.me/name1\"));","lastModifiedDate":"2021-10-26"},{"lineNumber":45,"author":{"gitId":"EssWhyy"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":46,"author":{"gitId":"david-eom"},"content":"}","lastModifiedDate":"2021-10-12"}],"authorContributionMap":{"Zacchua":1,"EssWhyy":6,"david-eom":39}},{"path":"src/test/java/socialite/model/handle/TikTokTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Zacchua"},"content":"package socialite.model.handle;","lastModifiedDate":"2021-10-13"},{"lineNumber":2,"author":{"gitId":"Zacchua"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":3,"author":{"gitId":"Zacchua"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-10-13"},{"lineNumber":4,"author":{"gitId":"Zacchua"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-13"},{"lineNumber":5,"author":{"gitId":"Zacchua"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":6,"author":{"gitId":"Zacchua"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-13"},{"lineNumber":7,"author":{"gitId":"Zacchua"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":8,"author":{"gitId":"Zacchua"},"content":"public class TikTokTest {","lastModifiedDate":"2021-10-13"},{"lineNumber":9,"author":{"gitId":"Zacchua"},"content":"    @Test","lastModifiedDate":"2021-10-13"},{"lineNumber":10,"author":{"gitId":"Zacchua"},"content":"    public void isValidHandle() {","lastModifiedDate":"2021-10-13"},{"lineNumber":11,"author":{"gitId":"Zacchua"},"content":"        // check empty string and spaces","lastModifiedDate":"2021-10-13"},{"lineNumber":12,"author":{"gitId":"Zacchua"},"content":"        assertFalse(TikTok.isValidHandle(\"\"));","lastModifiedDate":"2021-10-13"},{"lineNumber":13,"author":{"gitId":"Zacchua"},"content":"        assertFalse(TikTok.isValidHandle(\"  \"));","lastModifiedDate":"2021-10-13"},{"lineNumber":14,"author":{"gitId":"Zacchua"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":15,"author":{"gitId":"Zacchua"},"content":"        // test invalid names, wrong lengths and non alphanumerical or \u0027_\u0027","lastModifiedDate":"2021-10-13"},{"lineNumber":16,"author":{"gitId":"Zacchua"},"content":"        assertFalse(TikTok.isValidHandle(\"bob^by\"));","lastModifiedDate":"2021-10-13"},{"lineNumber":17,"author":{"gitId":"Zacchua"},"content":"        assertFalse(TikTok.isValidHandle(\"bob$%\"));","lastModifiedDate":"2021-10-13"},{"lineNumber":18,"author":{"gitId":"Zacchua"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":19,"author":{"gitId":"Zacchua"},"content":"        // valid names","lastModifiedDate":"2021-10-13"},{"lineNumber":20,"author":{"gitId":"Zacchua"},"content":"        assertTrue(TikTok.isValidHandle(\"bobb\"));","lastModifiedDate":"2021-10-13"},{"lineNumber":21,"author":{"gitId":"Zacchua"},"content":"        assertTrue(TikTok.isValidHandle(\"BOBBY\"));","lastModifiedDate":"2021-10-13"},{"lineNumber":22,"author":{"gitId":"Zacchua"},"content":"        assertTrue(TikTok.isValidHandle(\"bobby_boy\"));","lastModifiedDate":"2021-10-13"},{"lineNumber":23,"author":{"gitId":"Zacchua"},"content":"        assertTrue(TikTok.isValidHandle(\"bobby.boy\"));","lastModifiedDate":"2021-10-13"},{"lineNumber":24,"author":{"gitId":"Zacchua"},"content":"        assertTrue(TikTok.isValidHandle(\"bObbY_boy99\"));","lastModifiedDate":"2021-10-13"},{"lineNumber":25,"author":{"gitId":"Zacchua"},"content":"        assertTrue(TikTok.isValidHandle(\"bObbY.boy99\"));","lastModifiedDate":"2021-10-13"},{"lineNumber":26,"author":{"gitId":"Zacchua"},"content":"        assertTrue(TikTok.isValidHandle(\"12345\"));","lastModifiedDate":"2021-10-13"},{"lineNumber":27,"author":{"gitId":"EssWhyy"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":28,"author":{"gitId":"EssWhyy"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":29,"author":{"gitId":"EssWhyy"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":30,"author":{"gitId":"EssWhyy"},"content":"    @Test","lastModifiedDate":"2021-10-26"},{"lineNumber":31,"author":{"gitId":"EssWhyy"},"content":"    public void hasLinkPrefix() {","lastModifiedDate":"2021-10-26"},{"lineNumber":32,"author":{"gitId":"EssWhyy"},"content":"        TikTok t \u003d new TikTok(\"name1\");","lastModifiedDate":"2021-10-26"},{"lineNumber":33,"author":{"gitId":"EssWhyy"},"content":"        assertTrue(t.getUrl().equals(\"https://www.tiktok.com/@name1\"));","lastModifiedDate":"2021-10-26"},{"lineNumber":34,"author":{"gitId":"Zacchua"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":35,"author":{"gitId":"Zacchua"},"content":"}","lastModifiedDate":"2021-10-13"}],"authorContributionMap":{"Zacchua":28,"EssWhyy":7}},{"path":"src/test/java/socialite/model/handle/TwitterTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Zacchua"},"content":"package socialite.model.handle;","lastModifiedDate":"2021-10-12"},{"lineNumber":2,"author":{"gitId":"Zacchua"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":3,"author":{"gitId":"Zacchua"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-10-12"},{"lineNumber":4,"author":{"gitId":"Zacchua"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-12"},{"lineNumber":5,"author":{"gitId":"Zacchua"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":6,"author":{"gitId":"Zacchua"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-12"},{"lineNumber":7,"author":{"gitId":"Zacchua"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":8,"author":{"gitId":"Zacchua"},"content":"import socialite.testutil.Assert;","lastModifiedDate":"2021-10-12"},{"lineNumber":9,"author":{"gitId":"Zacchua"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":10,"author":{"gitId":"Zacchua"},"content":"public class TwitterTest {","lastModifiedDate":"2021-10-12"},{"lineNumber":11,"author":{"gitId":"Zacchua"},"content":"    @Test","lastModifiedDate":"2021-10-12"},{"lineNumber":12,"author":{"gitId":"Zacchua"},"content":"    public void isValidHandle() {","lastModifiedDate":"2021-10-12"},{"lineNumber":13,"author":{"gitId":"Zacchua"},"content":"        // check null","lastModifiedDate":"2021-10-12"},{"lineNumber":14,"author":{"gitId":"Zacchua"},"content":"        Assert.assertThrows(NullPointerException.class, () -\u003e Twitter.isValidHandle(null));","lastModifiedDate":"2021-10-12"},{"lineNumber":15,"author":{"gitId":"Zacchua"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":16,"author":{"gitId":"Zacchua"},"content":"        // check empty string and spaces","lastModifiedDate":"2021-10-12"},{"lineNumber":17,"author":{"gitId":"Zacchua"},"content":"        assertFalse(Twitter.isValidHandle(\"\"));","lastModifiedDate":"2021-10-12"},{"lineNumber":18,"author":{"gitId":"Zacchua"},"content":"        assertFalse(Twitter.isValidHandle(\"  \"));","lastModifiedDate":"2021-10-12"},{"lineNumber":19,"author":{"gitId":"Zacchua"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":20,"author":{"gitId":"Zacchua"},"content":"        // test invalid names, wrong lengths and non alphanumerical or \u0027_\u0027","lastModifiedDate":"2021-10-12"},{"lineNumber":21,"author":{"gitId":"Zacchua"},"content":"        assertFalse(Twitter.isValidHandle(\"bob\"));","lastModifiedDate":"2021-10-12"},{"lineNumber":22,"author":{"gitId":"Zacchua"},"content":"        assertFalse(Twitter.isValidHandle(\"somethingverylong\"));","lastModifiedDate":"2021-10-12"},{"lineNumber":23,"author":{"gitId":"Zacchua"},"content":"        assertFalse(Twitter.isValidHandle(\"bob.by\"));","lastModifiedDate":"2021-10-12"},{"lineNumber":24,"author":{"gitId":"Zacchua"},"content":"        assertFalse(Twitter.isValidHandle(\"bob$%\"));","lastModifiedDate":"2021-10-12"},{"lineNumber":25,"author":{"gitId":"Zacchua"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":26,"author":{"gitId":"Zacchua"},"content":"        // valid names","lastModifiedDate":"2021-10-12"},{"lineNumber":27,"author":{"gitId":"Zacchua"},"content":"        assertTrue(Twitter.isValidHandle(\"bobb\"));","lastModifiedDate":"2021-10-12"},{"lineNumber":28,"author":{"gitId":"Zacchua"},"content":"        assertTrue(Twitter.isValidHandle(\"BOBBY\"));","lastModifiedDate":"2021-10-12"},{"lineNumber":29,"author":{"gitId":"Zacchua"},"content":"        assertTrue(Twitter.isValidHandle(\"bobby_boy\"));","lastModifiedDate":"2021-10-12"},{"lineNumber":30,"author":{"gitId":"Zacchua"},"content":"        assertTrue(Twitter.isValidHandle(\"bObbY_boy99\"));","lastModifiedDate":"2021-10-12"},{"lineNumber":31,"author":{"gitId":"Zacchua"},"content":"        assertTrue(Twitter.isValidHandle(\"12345\"));","lastModifiedDate":"2021-10-12"},{"lineNumber":32,"author":{"gitId":"Zacchua"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":33,"author":{"gitId":"EssWhyy"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":34,"author":{"gitId":"EssWhyy"},"content":"    @Test","lastModifiedDate":"2021-10-26"},{"lineNumber":35,"author":{"gitId":"EssWhyy"},"content":"    public void hasLinkPrefix() {","lastModifiedDate":"2021-10-26"},{"lineNumber":36,"author":{"gitId":"EssWhyy"},"content":"        Twitter t \u003d new Twitter(\"name1\");","lastModifiedDate":"2021-10-26"},{"lineNumber":37,"author":{"gitId":"EssWhyy"},"content":"        assertTrue(t.getUrl().equals(\"https://www.twitter.com/name1\"));","lastModifiedDate":"2021-10-26"},{"lineNumber":38,"author":{"gitId":"EssWhyy"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":39,"author":{"gitId":"Zacchua"},"content":"}","lastModifiedDate":"2021-10-12"}],"authorContributionMap":{"Zacchua":33,"EssWhyy":6}},{"path":"src/test/java/socialite/model/person/ContainsKeywordsPredicateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"david-eom"},"content":"package socialite.model.person;","lastModifiedDate":"2021-10-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-12"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-06-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":12,"author":{"gitId":"david-eom"},"content":"import socialite.testutil.PersonBuilder;","lastModifiedDate":"2021-10-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"david-eom"},"content":"public class ContainsKeywordsPredicateTest {","lastModifiedDate":"2021-10-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        List\u003cString\u003e firstPredicateKeywordList \u003d Collections.singletonList(\"first\");","lastModifiedDate":"2017-06-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        List\u003cString\u003e secondPredicateKeywordList \u003d Arrays.asList(\"first\", \"second\");","lastModifiedDate":"2017-06-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":21,"author":{"gitId":"david-eom"},"content":"        ContainsKeywordsPredicate firstPredicate \u003d new ContainsKeywordsPredicate(firstPredicateKeywordList);","lastModifiedDate":"2021-10-23"},{"lineNumber":22,"author":{"gitId":"david-eom"},"content":"        ContainsKeywordsPredicate secondPredicate \u003d new ContainsKeywordsPredicate(secondPredicateKeywordList);","lastModifiedDate":"2021-10-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        assertTrue(firstPredicate.equals(firstPredicate));","lastModifiedDate":"2017-06-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-12"},{"lineNumber":28,"author":{"gitId":"david-eom"},"content":"        ContainsKeywordsPredicate firstPredicateCopy \u003d new ContainsKeywordsPredicate(firstPredicateKeywordList);","lastModifiedDate":"2021-10-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertTrue(firstPredicate.equals(firstPredicateCopy));","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertFalse(firstPredicate.equals(1));","lastModifiedDate":"2017-06-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        assertFalse(firstPredicate.equals(null));","lastModifiedDate":"2017-06-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2017-06-12"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertFalse(firstPredicate.equals(secondPredicate));","lastModifiedDate":"2017-06-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public void test_nameContainsKeywords_returnsTrue() {","lastModifiedDate":"2017-08-15"},{"lineNumber":43,"author":{"gitId":"EssWhyy"},"content":"        // One matching keyword","lastModifiedDate":"2021-10-19"},{"lineNumber":44,"author":{"gitId":"david-eom"},"content":"        ContainsKeywordsPredicate predicate \u003d new ContainsKeywordsPredicate(Collections.singletonList(\"Alice\"));","lastModifiedDate":"2021-10-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertTrue(predicate.test(new PersonBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2017-06-12"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":47,"author":{"gitId":"EssWhyy"},"content":"        // Multiple matching keywords","lastModifiedDate":"2021-10-19"},{"lineNumber":48,"author":{"gitId":"david-eom"},"content":"        predicate \u003d new ContainsKeywordsPredicate(Arrays.asList(\"Alice\", \"Bob\"));","lastModifiedDate":"2021-10-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertTrue(predicate.test(new PersonBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2017-06-12"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":51,"author":{"gitId":"EssWhyy"},"content":"        // One non-matching keyword, should return false","lastModifiedDate":"2021-10-19"},{"lineNumber":52,"author":{"gitId":"david-eom"},"content":"        predicate \u003d new ContainsKeywordsPredicate(Arrays.asList(\"Bob\", \"Carol\"));","lastModifiedDate":"2021-10-23"},{"lineNumber":53,"author":{"gitId":"EssWhyy"},"content":"        assertFalse(predicate.test(new PersonBuilder().withName(\"Alice Carol\").build()));","lastModifiedDate":"2021-10-19"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        // Mixed-case keywords","lastModifiedDate":"2017-06-12"},{"lineNumber":56,"author":{"gitId":"david-eom"},"content":"        predicate \u003d new ContainsKeywordsPredicate(Arrays.asList(\"aLIce\", \"bOB\"));","lastModifiedDate":"2021-10-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertTrue(predicate.test(new PersonBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2017-06-12"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public void test_nameDoesNotContainKeywords_returnsFalse() {","lastModifiedDate":"2017-08-15"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        // Zero keywords","lastModifiedDate":"2017-06-12"},{"lineNumber":63,"author":{"gitId":"david-eom"},"content":"        ContainsKeywordsPredicate predicate \u003d new ContainsKeywordsPredicate(Collections.emptyList());","lastModifiedDate":"2021-10-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertFalse(predicate.test(new PersonBuilder().withName(\"Alice\").build()));","lastModifiedDate":"2017-06-12"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        // Non-matching keyword","lastModifiedDate":"2017-06-12"},{"lineNumber":67,"author":{"gitId":"david-eom"},"content":"        predicate \u003d new ContainsKeywordsPredicate(Arrays.asList(\"Carol\"));","lastModifiedDate":"2021-10-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertFalse(predicate.test(new PersonBuilder().withName(\"Alice Bob\").build()));","lastModifiedDate":"2017-06-12"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        // Keywords match phone, email and address, but does not match name","lastModifiedDate":"2017-06-12"},{"lineNumber":71,"author":{"gitId":"david-eom"},"content":"        predicate \u003d new ContainsKeywordsPredicate(Arrays.asList(\"12345\", \"alice@email.com\", \"Main\", \"Street\"));","lastModifiedDate":"2021-10-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertFalse(predicate.test(new PersonBuilder().withName(\"Alice\").withPhone(\"12345\")","lastModifiedDate":"2017-06-12"},{"lineNumber":73,"author":{"gitId":"bnjmnt4n"},"content":"                .build()));","lastModifiedDate":"2021-10-12"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":75,"author":{"gitId":"EssWhyy"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":76,"author":{"gitId":"EssWhyy"},"content":"    @Test","lastModifiedDate":"2021-10-22"},{"lineNumber":77,"author":{"gitId":"EssWhyy"},"content":"    public void test_personHasHandles() {","lastModifiedDate":"2021-10-22"},{"lineNumber":78,"author":{"gitId":"david-eom"},"content":"        ContainsKeywordsPredicate predicate \u003d new ContainsKeywordsPredicate(Arrays.asList(\"p/instagram\"));","lastModifiedDate":"2021-10-23"},{"lineNumber":79,"author":{"gitId":"EssWhyy"},"content":"        assertTrue(predicate.test(new PersonBuilder().withName(\"Alice\").withInstagram(\"dummy_link\").build()));","lastModifiedDate":"2021-10-22"},{"lineNumber":80,"author":{"gitId":"EssWhyy"},"content":"        assertFalse(predicate.test(new PersonBuilder().withName(\"Bob\").withInstagram(null).build()));","lastModifiedDate":"2021-10-22"},{"lineNumber":81,"author":{"gitId":"EssWhyy"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":82,"author":{"gitId":"EssWhyy"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":83,"author":{"gitId":"EssWhyy"},"content":"    @Test","lastModifiedDate":"2021-10-22"},{"lineNumber":84,"author":{"gitId":"EssWhyy"},"content":"    public void test_tagContainsKeywords() {","lastModifiedDate":"2021-10-22"},{"lineNumber":85,"author":{"gitId":"david-eom"},"content":"        ContainsKeywordsPredicate predicate \u003d new ContainsKeywordsPredicate(Arrays.asList(\"t/colleagues\"));","lastModifiedDate":"2021-10-23"},{"lineNumber":86,"author":{"gitId":"EssWhyy"},"content":"        assertTrue(predicate.test(new PersonBuilder().withName(\"Alice\").withTags(\"colleagues\", \"friends\").build()));","lastModifiedDate":"2021-10-22"},{"lineNumber":87,"author":{"gitId":"EssWhyy"},"content":"        assertFalse(predicate.test(new PersonBuilder().withName(\"Bob\").withTags(\"friends\").build()));","lastModifiedDate":"2021-10-22"},{"lineNumber":88,"author":{"gitId":"EssWhyy"},"content":"    }","lastModifiedDate":"2021-10-22"},{"lineNumber":89,"author":{"gitId":"EssWhyy"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":90,"author":{"gitId":"EssWhyy"},"content":"","lastModifiedDate":"2021-10-22"},{"lineNumber":91,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"EssWhyy":18,"bnjmnt4n":1,"david-eom":15,"-":57}},{"path":"src/test/java/socialite/model/person/DateTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"bnjmnt4n"},"content":"package socialite.model.person;","lastModifiedDate":"2021-10-23"},{"lineNumber":2,"author":{"gitId":"bnjmnt4n"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":3,"author":{"gitId":"bnjmnt4n"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-27"},{"lineNumber":4,"author":{"gitId":"bnjmnt4n"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-10-23"},{"lineNumber":5,"author":{"gitId":"bnjmnt4n"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;","lastModifiedDate":"2021-10-27"},{"lineNumber":6,"author":{"gitId":"bnjmnt4n"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-23"},{"lineNumber":7,"author":{"gitId":"bnjmnt4n"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":8,"author":{"gitId":"bnjmnt4n"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-10-27"},{"lineNumber":9,"author":{"gitId":"bnjmnt4n"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":10,"author":{"gitId":"bnjmnt4n"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-27"},{"lineNumber":11,"author":{"gitId":"bnjmnt4n"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":12,"author":{"gitId":"bnjmnt4n"},"content":"public class DateTest {","lastModifiedDate":"2021-10-23"},{"lineNumber":13,"author":{"gitId":"bnjmnt4n"},"content":"    @Test","lastModifiedDate":"2021-10-23"},{"lineNumber":14,"author":{"gitId":"bnjmnt4n"},"content":"    public void isValidDates() {","lastModifiedDate":"2021-10-23"},{"lineNumber":15,"author":{"gitId":"bnjmnt4n"},"content":"        // null date","lastModifiedDate":"2021-10-23"},{"lineNumber":16,"author":{"gitId":"bnjmnt4n"},"content":"        assertThrows(NullPointerException.class, () -\u003e Date.isValidDate(null));","lastModifiedDate":"2021-10-27"},{"lineNumber":17,"author":{"gitId":"bnjmnt4n"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":18,"author":{"gitId":"bnjmnt4n"},"content":"        // invalid dates","lastModifiedDate":"2021-10-23"},{"lineNumber":19,"author":{"gitId":"bnjmnt4n"},"content":"        assertFalse(Date.isValidDate(\"\")); // empty string","lastModifiedDate":"2021-10-23"},{"lineNumber":20,"author":{"gitId":"bnjmnt4n"},"content":"        assertFalse(Date.isValidDate(\" \")); // spaces only","lastModifiedDate":"2021-10-23"},{"lineNumber":21,"author":{"gitId":"bnjmnt4n"},"content":"        assertFalse(Date.isValidDate(\"2020-02-01\")); // no name","lastModifiedDate":"2021-10-23"},{"lineNumber":22,"author":{"gitId":"bnjmnt4n"},"content":"        assertFalse(Date.isValidDate(\":2020-02-01\")); // no name","lastModifiedDate":"2021-10-23"},{"lineNumber":23,"author":{"gitId":"bnjmnt4n"},"content":"        assertFalse(Date.isValidDate(\"date name\")); // no date","lastModifiedDate":"2021-10-23"},{"lineNumber":24,"author":{"gitId":"bnjmnt4n"},"content":"        assertFalse(Date.isValidDate(\"date name:\")); // no date","lastModifiedDate":"2021-10-23"},{"lineNumber":25,"author":{"gitId":"bnjmnt4n"},"content":"        assertFalse(Date.isValidDate(\"date:2021-02-02:hourly\")); // invalid recurrence interval","lastModifiedDate":"2021-10-27"},{"lineNumber":26,"author":{"gitId":"bnjmnt4n"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":27,"author":{"gitId":"bnjmnt4n"},"content":"        // valid dates","lastModifiedDate":"2021-10-26"},{"lineNumber":28,"author":{"gitId":"bnjmnt4n"},"content":"        assertTrue(Date.isValidDate(\"date:2020-02-02\"));","lastModifiedDate":"2021-10-23"},{"lineNumber":29,"author":{"gitId":"bnjmnt4n"},"content":"        // name with space character (\"date 3\")","lastModifiedDate":"2021-10-23"},{"lineNumber":30,"author":{"gitId":"bnjmnt4n"},"content":"        assertTrue(Date.isValidDate(\"date 3:2020-02-03\"));","lastModifiedDate":"2021-10-23"},{"lineNumber":31,"author":{"gitId":"bnjmnt4n"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":32,"author":{"gitId":"bnjmnt4n"},"content":"        // recurring dates","lastModifiedDate":"2021-10-26"},{"lineNumber":33,"author":{"gitId":"bnjmnt4n"},"content":"        assertTrue(Date.isValidDate(\"date:2021-02-02:yearly\"));","lastModifiedDate":"2021-10-27"},{"lineNumber":34,"author":{"gitId":"bnjmnt4n"},"content":"        assertTrue(Date.isValidDate(\"date 3:2021-02-03:yearly\"));","lastModifiedDate":"2021-10-27"},{"lineNumber":35,"author":{"gitId":"bnjmnt4n"},"content":"        assertTrue(Date.isValidDate(\"date:2021-02-02:monthly\"));","lastModifiedDate":"2021-10-27"},{"lineNumber":36,"author":{"gitId":"bnjmnt4n"},"content":"        assertTrue(Date.isValidDate(\"date 3:2021-02-03:monthly\"));","lastModifiedDate":"2021-10-27"},{"lineNumber":37,"author":{"gitId":"bnjmnt4n"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":38,"author":{"gitId":"bnjmnt4n"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":39,"author":{"gitId":"bnjmnt4n"},"content":"    @Test","lastModifiedDate":"2021-10-26"},{"lineNumber":40,"author":{"gitId":"bnjmnt4n"},"content":"    public void getRecurrenceInterval() {","lastModifiedDate":"2021-10-27"},{"lineNumber":41,"author":{"gitId":"bnjmnt4n"},"content":"        assertTrue(new Date(\"date:2020-02-02\").getRecurrenceInterval().isEmpty());","lastModifiedDate":"2021-10-27"},{"lineNumber":42,"author":{"gitId":"bnjmnt4n"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":43,"author":{"gitId":"bnjmnt4n"},"content":"        Date recurringDateYearly \u003d new Date(\"date:2021-02-02:yearly\");","lastModifiedDate":"2021-10-27"},{"lineNumber":44,"author":{"gitId":"bnjmnt4n"},"content":"        assertTrue(recurringDateYearly.getRecurrenceInterval().isPresent());","lastModifiedDate":"2021-10-27"},{"lineNumber":45,"author":{"gitId":"bnjmnt4n"},"content":"        assertEquals(\"yearly\", recurringDateYearly.getRecurrenceInterval().get());","lastModifiedDate":"2021-10-27"},{"lineNumber":46,"author":{"gitId":"bnjmnt4n"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":47,"author":{"gitId":"bnjmnt4n"},"content":"        Date recurringDateMonthly \u003d new Date(\"date:2021-02-02:monthly\");","lastModifiedDate":"2021-10-27"},{"lineNumber":48,"author":{"gitId":"bnjmnt4n"},"content":"        assertTrue(recurringDateMonthly.getRecurrenceInterval().isPresent());","lastModifiedDate":"2021-10-27"},{"lineNumber":49,"author":{"gitId":"bnjmnt4n"},"content":"        assertEquals(\"monthly\", recurringDateMonthly.getRecurrenceInterval().get());","lastModifiedDate":"2021-10-27"},{"lineNumber":50,"author":{"gitId":"bnjmnt4n"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":51,"author":{"gitId":"bnjmnt4n"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":52,"author":{"gitId":"bnjmnt4n"},"content":"    @Test","lastModifiedDate":"2021-10-27"},{"lineNumber":53,"author":{"gitId":"bnjmnt4n"},"content":"    public void getNextOccurrence_nonRecurring() {","lastModifiedDate":"2021-10-27"},{"lineNumber":54,"author":{"gitId":"bnjmnt4n"},"content":"        LocalDate referenceDate1 \u003d LocalDate.of(2021, 04, 04);","lastModifiedDate":"2021-10-27"},{"lineNumber":55,"author":{"gitId":"bnjmnt4n"},"content":"        LocalDate referenceDate2 \u003d LocalDate.of(2020, 01, 01);","lastModifiedDate":"2021-10-27"},{"lineNumber":56,"author":{"gitId":"bnjmnt4n"},"content":"        Date nonRecurring \u003d new Date(\"date:2020-02-02\");","lastModifiedDate":"2021-10-27"},{"lineNumber":57,"author":{"gitId":"bnjmnt4n"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":58,"author":{"gitId":"bnjmnt4n"},"content":"        assertTrue(nonRecurring.getNextOccurrence(referenceDate1).isEmpty());","lastModifiedDate":"2021-10-27"},{"lineNumber":59,"author":{"gitId":"bnjmnt4n"},"content":"        assertTrue(nonRecurring.getNextOccurrence(referenceDate2).isPresent());","lastModifiedDate":"2021-10-27"},{"lineNumber":60,"author":{"gitId":"bnjmnt4n"},"content":"        assertEquals(LocalDate.of(2020, 02, 02), nonRecurring.getNextOccurrence(referenceDate2).get());","lastModifiedDate":"2021-10-27"},{"lineNumber":61,"author":{"gitId":"bnjmnt4n"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":62,"author":{"gitId":"bnjmnt4n"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":63,"author":{"gitId":"bnjmnt4n"},"content":"    @Test","lastModifiedDate":"2021-10-27"},{"lineNumber":64,"author":{"gitId":"bnjmnt4n"},"content":"    public void getNextOccurrence_recurringMonthly() {","lastModifiedDate":"2021-10-27"},{"lineNumber":65,"author":{"gitId":"bnjmnt4n"},"content":"        LocalDate referenceDate1 \u003d LocalDate.of(2021, 04, 04);","lastModifiedDate":"2021-10-27"},{"lineNumber":66,"author":{"gitId":"bnjmnt4n"},"content":"        LocalDate referenceDate2 \u003d LocalDate.of(2020, 01, 01);","lastModifiedDate":"2021-10-27"},{"lineNumber":67,"author":{"gitId":"bnjmnt4n"},"content":"        Date recurring \u003d new Date(\"date:2020-02-02:monthly\");","lastModifiedDate":"2021-10-27"},{"lineNumber":68,"author":{"gitId":"bnjmnt4n"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":69,"author":{"gitId":"bnjmnt4n"},"content":"        assertTrue(recurring.getNextOccurrence(referenceDate1).isPresent());","lastModifiedDate":"2021-10-27"},{"lineNumber":70,"author":{"gitId":"bnjmnt4n"},"content":"        assertEquals(LocalDate.of(2021, 05, 02), recurring.getNextOccurrence(referenceDate1).get());","lastModifiedDate":"2021-10-27"},{"lineNumber":71,"author":{"gitId":"bnjmnt4n"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":72,"author":{"gitId":"bnjmnt4n"},"content":"        assertTrue(recurring.getNextOccurrence(referenceDate2).isPresent());","lastModifiedDate":"2021-10-27"},{"lineNumber":73,"author":{"gitId":"bnjmnt4n"},"content":"        assertEquals(LocalDate.of(2020, 02, 02), recurring.getNextOccurrence(referenceDate2).get());","lastModifiedDate":"2021-10-27"},{"lineNumber":74,"author":{"gitId":"bnjmnt4n"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":75,"author":{"gitId":"bnjmnt4n"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":76,"author":{"gitId":"bnjmnt4n"},"content":"    @Test","lastModifiedDate":"2021-10-27"},{"lineNumber":77,"author":{"gitId":"bnjmnt4n"},"content":"    public void getNextOccurrence_recurringYearly() {","lastModifiedDate":"2021-10-27"},{"lineNumber":78,"author":{"gitId":"bnjmnt4n"},"content":"        LocalDate referenceDate1 \u003d LocalDate.of(2021, 04, 04);","lastModifiedDate":"2021-10-27"},{"lineNumber":79,"author":{"gitId":"bnjmnt4n"},"content":"        LocalDate referenceDate2 \u003d LocalDate.of(2020, 01, 01);","lastModifiedDate":"2021-10-27"},{"lineNumber":80,"author":{"gitId":"bnjmnt4n"},"content":"        Date recurring \u003d new Date(\"date:2020-02-02:yearly\");","lastModifiedDate":"2021-10-27"},{"lineNumber":81,"author":{"gitId":"bnjmnt4n"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":82,"author":{"gitId":"bnjmnt4n"},"content":"        assertTrue(recurring.getNextOccurrence(referenceDate1).isPresent());","lastModifiedDate":"2021-10-27"},{"lineNumber":83,"author":{"gitId":"bnjmnt4n"},"content":"        assertEquals(LocalDate.of(2022, 02, 02), recurring.getNextOccurrence(referenceDate1).get());","lastModifiedDate":"2021-10-27"},{"lineNumber":84,"author":{"gitId":"bnjmnt4n"},"content":"","lastModifiedDate":"2021-10-27"},{"lineNumber":85,"author":{"gitId":"bnjmnt4n"},"content":"        assertTrue(recurring.getNextOccurrence(referenceDate2).isPresent());","lastModifiedDate":"2021-10-27"},{"lineNumber":86,"author":{"gitId":"bnjmnt4n"},"content":"        assertEquals(LocalDate.of(2020, 02, 02), recurring.getNextOccurrence(referenceDate2).get());","lastModifiedDate":"2021-10-27"},{"lineNumber":87,"author":{"gitId":"bnjmnt4n"},"content":"    }","lastModifiedDate":"2021-10-27"},{"lineNumber":88,"author":{"gitId":"bnjmnt4n"},"content":"}","lastModifiedDate":"2021-10-23"}],"authorContributionMap":{"bnjmnt4n":88}},{"path":"src/test/java/socialite/model/person/NameTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"david-eom"},"content":"package socialite.model.person;","lastModifiedDate":"2021-10-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":8,"author":{"gitId":"david-eom"},"content":"import socialite.testutil.Assert;","lastModifiedDate":"2021-10-08"},{"lineNumber":9,"author":{"gitId":"david-eom"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class NameTest {","lastModifiedDate":"2017-01-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2017-12-04"},{"lineNumber":14,"author":{"gitId":"david-eom"},"content":"        Assert.assertThrows(NullPointerException.class, () -\u003e new Name(null));","lastModifiedDate":"2021-10-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public void constructor_invalidName_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        String invalidName \u003d \"\";","lastModifiedDate":"2017-05-30"},{"lineNumber":20,"author":{"gitId":"david-eom"},"content":"        Assert.assertThrows(IllegalArgumentException.class, () -\u003e new Name(invalidName));","lastModifiedDate":"2021-10-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-01-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void isValidName() {","lastModifiedDate":"2017-01-16"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        // null name","lastModifiedDate":"2017-12-04"},{"lineNumber":26,"author":{"gitId":"david-eom"},"content":"        Assert.assertThrows(NullPointerException.class, () -\u003e Name.isValidName(null));","lastModifiedDate":"2021-10-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        // invalid name","lastModifiedDate":"2017-01-16"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertFalse(Name.isValidName(\"\")); // empty string","lastModifiedDate":"2017-01-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertFalse(Name.isValidName(\" \")); // spaces only","lastModifiedDate":"2017-01-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertFalse(Name.isValidName(\"^\")); // only non-alphanumeric characters","lastModifiedDate":"2017-01-16"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertFalse(Name.isValidName(\"peter*\")); // contains non-alphanumeric characters","lastModifiedDate":"2017-01-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        // valid name","lastModifiedDate":"2017-01-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"peter jack\")); // alphabets only","lastModifiedDate":"2017-01-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"12345\")); // numbers only","lastModifiedDate":"2017-01-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"peter the 2nd\")); // alphanumeric characters","lastModifiedDate":"2017-01-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"Capital Tan\")); // with capital letters","lastModifiedDate":"2017-01-16"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertTrue(Name.isValidName(\"David Roger Jackson Ray Jr 2nd\")); // long names","lastModifiedDate":"2017-01-16"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-16"},{"lineNumber":41,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-16"}],"authorContributionMap":{"david-eom":6,"-":35}},{"path":"src/test/java/socialite/model/person/PersonTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"david-eom"},"content":"package socialite.model.person;","lastModifiedDate":"2021-10-08"},{"lineNumber":2,"author":{"gitId":"david-eom"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":3,"author":{"gitId":"david-eom"},"content":"import static socialite.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2021-10-08"},{"lineNumber":4,"author":{"gitId":"david-eom"},"content":"import static socialite.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2021-10-08"},{"lineNumber":5,"author":{"gitId":"david-eom"},"content":"import static socialite.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2021-10-08"},{"lineNumber":6,"author":{"gitId":"david-eom"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":7,"author":{"gitId":"david-eom"},"content":"import org.junit.jupiter.api.Assertions;","lastModifiedDate":"2021-10-08"},{"lineNumber":8,"author":{"gitId":"david-eom"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-08"},{"lineNumber":9,"author":{"gitId":"david-eom"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":10,"author":{"gitId":"david-eom"},"content":"import socialite.testutil.Assert;","lastModifiedDate":"2021-10-08"},{"lineNumber":11,"author":{"gitId":"david-eom"},"content":"import socialite.testutil.PersonBuilder;","lastModifiedDate":"2021-10-09"},{"lineNumber":12,"author":{"gitId":"david-eom"},"content":"import socialite.testutil.TypicalPersons;","lastModifiedDate":"2021-10-08"},{"lineNumber":13,"author":{"gitId":"david-eom"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":14,"author":{"gitId":"david-eom"},"content":"public class PersonTest {","lastModifiedDate":"2021-10-08"},{"lineNumber":15,"author":{"gitId":"david-eom"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":16,"author":{"gitId":"david-eom"},"content":"    @Test","lastModifiedDate":"2021-10-08"},{"lineNumber":17,"author":{"gitId":"david-eom"},"content":"    public void asObservableList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2021-10-08"},{"lineNumber":18,"author":{"gitId":"david-eom"},"content":"        Person person \u003d new PersonBuilder().build();","lastModifiedDate":"2021-10-08"},{"lineNumber":19,"author":{"gitId":"david-eom"},"content":"        Assert.assertThrows(UnsupportedOperationException.class, () -\u003e person.getTags().remove(0));","lastModifiedDate":"2021-10-08"},{"lineNumber":20,"author":{"gitId":"david-eom"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":21,"author":{"gitId":"david-eom"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":22,"author":{"gitId":"david-eom"},"content":"    @Test","lastModifiedDate":"2021-10-08"},{"lineNumber":23,"author":{"gitId":"david-eom"},"content":"    public void isSamePerson() {","lastModifiedDate":"2021-10-08"},{"lineNumber":24,"author":{"gitId":"david-eom"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2021-10-08"},{"lineNumber":25,"author":{"gitId":"david-eom"},"content":"        Assertions.assertTrue(TypicalPersons.ALICE.isSamePerson(TypicalPersons.ALICE));","lastModifiedDate":"2021-10-08"},{"lineNumber":26,"author":{"gitId":"david-eom"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":27,"author":{"gitId":"david-eom"},"content":"        // null -\u003e returns false","lastModifiedDate":"2021-10-08"},{"lineNumber":28,"author":{"gitId":"david-eom"},"content":"        Assertions.assertFalse(TypicalPersons.ALICE.isSamePerson(null));","lastModifiedDate":"2021-10-08"},{"lineNumber":29,"author":{"gitId":"david-eom"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":30,"author":{"gitId":"stanley-1"},"content":"        // same name, all other attributes different -\u003e returns false","lastModifiedDate":"2021-10-25"},{"lineNumber":31,"author":{"gitId":"david-eom"},"content":"        Person editedAlice \u003d new PersonBuilder(TypicalPersons.ALICE)","lastModifiedDate":"2021-10-09"},{"lineNumber":32,"author":{"gitId":"bnjmnt4n"},"content":"                .withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2021-10-12"},{"lineNumber":33,"author":{"gitId":"bnjmnt4n"},"content":"                .withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2021-10-12"},{"lineNumber":34,"author":{"gitId":"stanley-1"},"content":"        Assertions.assertFalse(TypicalPersons.ALICE.isSamePerson(editedAlice));","lastModifiedDate":"2021-10-25"},{"lineNumber":35,"author":{"gitId":"stanley-1"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":36,"author":{"gitId":"stanley-1"},"content":"        // same phone number, all other attributes different -\u003e returns true","lastModifiedDate":"2021-11-01"},{"lineNumber":37,"author":{"gitId":"stanley-1"},"content":"        editedAlice \u003d new PersonBuilder(TypicalPersons.ALICE)","lastModifiedDate":"2021-10-25"},{"lineNumber":38,"author":{"gitId":"stanley-1"},"content":"                .withName(VALID_NAME_BOB)","lastModifiedDate":"2021-10-25"},{"lineNumber":39,"author":{"gitId":"stanley-1"},"content":"                .withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2021-10-25"},{"lineNumber":40,"author":{"gitId":"stanley-1"},"content":"        Assertions.assertTrue(TypicalPersons.ALICE.isSamePerson(editedAlice));","lastModifiedDate":"2021-11-01"},{"lineNumber":41,"author":{"gitId":"stanley-1"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":42,"author":{"gitId":"stanley-1"},"content":"        // same name and phone number, all other attributes different -\u003e returns true","lastModifiedDate":"2021-10-25"},{"lineNumber":43,"author":{"gitId":"stanley-1"},"content":"        editedAlice \u003d new PersonBuilder(TypicalPersons.ALICE)","lastModifiedDate":"2021-10-25"},{"lineNumber":44,"author":{"gitId":"stanley-1"},"content":"                .withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2021-10-25"},{"lineNumber":45,"author":{"gitId":"david-eom"},"content":"        Assertions.assertTrue(TypicalPersons.ALICE.isSamePerson(editedAlice));","lastModifiedDate":"2021-10-08"},{"lineNumber":46,"author":{"gitId":"david-eom"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":47,"author":{"gitId":"stanley-1"},"content":"        // different name, all other attributes same -\u003e returns true","lastModifiedDate":"2021-11-01"},{"lineNumber":48,"author":{"gitId":"david-eom"},"content":"        editedAlice \u003d new PersonBuilder(TypicalPersons.ALICE).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2021-10-08"},{"lineNumber":49,"author":{"gitId":"stanley-1"},"content":"        Assertions.assertTrue(TypicalPersons.ALICE.isSamePerson(editedAlice));","lastModifiedDate":"2021-11-01"},{"lineNumber":50,"author":{"gitId":"david-eom"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":51,"author":{"gitId":"stanley-1"},"content":"        // different phone number, all other attributes same -\u003e returns false","lastModifiedDate":"2021-10-25"},{"lineNumber":52,"author":{"gitId":"stanley-1"},"content":"        editedAlice \u003d new PersonBuilder(TypicalPersons.ALICE).withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2021-10-25"},{"lineNumber":53,"author":{"gitId":"stanley-1"},"content":"        Assertions.assertFalse(TypicalPersons.ALICE.isSamePerson(editedAlice));","lastModifiedDate":"2021-10-25"},{"lineNumber":54,"author":{"gitId":"stanley-1"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":55,"author":{"gitId":"stanley-1"},"content":"        // name differs in case, all other attributes same -\u003e returns true","lastModifiedDate":"2021-11-01"},{"lineNumber":56,"author":{"gitId":"david-eom"},"content":"        Person editedBob \u003d new PersonBuilder(TypicalPersons.BOB).withName(VALID_NAME_BOB.toLowerCase()).build();","lastModifiedDate":"2021-10-08"},{"lineNumber":57,"author":{"gitId":"stanley-1"},"content":"        Assertions.assertTrue(TypicalPersons.BOB.isSamePerson(editedBob));","lastModifiedDate":"2021-11-01"},{"lineNumber":58,"author":{"gitId":"david-eom"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":59,"author":{"gitId":"stanley-1"},"content":"        // name has trailing spaces, all other attributes same -\u003e returns true","lastModifiedDate":"2021-11-01"},{"lineNumber":60,"author":{"gitId":"david-eom"},"content":"        String nameWithTrailingSpaces \u003d VALID_NAME_BOB + \" \";","lastModifiedDate":"2021-10-08"},{"lineNumber":61,"author":{"gitId":"david-eom"},"content":"        editedBob \u003d new PersonBuilder(TypicalPersons.BOB).withName(nameWithTrailingSpaces).build();","lastModifiedDate":"2021-10-08"},{"lineNumber":62,"author":{"gitId":"stanley-1"},"content":"        Assertions.assertTrue(TypicalPersons.BOB.isSamePerson(editedBob));","lastModifiedDate":"2021-11-01"},{"lineNumber":63,"author":{"gitId":"david-eom"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":64,"author":{"gitId":"david-eom"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":65,"author":{"gitId":"david-eom"},"content":"    @Test","lastModifiedDate":"2021-10-08"},{"lineNumber":66,"author":{"gitId":"david-eom"},"content":"    public void equals() {","lastModifiedDate":"2021-10-08"},{"lineNumber":67,"author":{"gitId":"david-eom"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2021-10-08"},{"lineNumber":68,"author":{"gitId":"david-eom"},"content":"        Person aliceCopy \u003d new PersonBuilder(TypicalPersons.ALICE).build();","lastModifiedDate":"2021-10-08"},{"lineNumber":69,"author":{"gitId":"david-eom"},"content":"        Assertions.assertTrue(TypicalPersons.ALICE.equals(aliceCopy));","lastModifiedDate":"2021-10-08"},{"lineNumber":70,"author":{"gitId":"david-eom"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":71,"author":{"gitId":"david-eom"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2021-10-08"},{"lineNumber":72,"author":{"gitId":"david-eom"},"content":"        Assertions.assertTrue(TypicalPersons.ALICE.equals(TypicalPersons.ALICE));","lastModifiedDate":"2021-10-08"},{"lineNumber":73,"author":{"gitId":"david-eom"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":74,"author":{"gitId":"david-eom"},"content":"        // null -\u003e returns false","lastModifiedDate":"2021-10-08"},{"lineNumber":75,"author":{"gitId":"david-eom"},"content":"        Assertions.assertFalse(TypicalPersons.ALICE.equals(null));","lastModifiedDate":"2021-10-08"},{"lineNumber":76,"author":{"gitId":"david-eom"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":77,"author":{"gitId":"david-eom"},"content":"        // different type -\u003e returns false","lastModifiedDate":"2021-10-08"},{"lineNumber":78,"author":{"gitId":"david-eom"},"content":"        Assertions.assertFalse(TypicalPersons.ALICE.equals(5));","lastModifiedDate":"2021-10-08"},{"lineNumber":79,"author":{"gitId":"david-eom"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":80,"author":{"gitId":"david-eom"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2021-10-08"},{"lineNumber":81,"author":{"gitId":"david-eom"},"content":"        Assertions.assertFalse(TypicalPersons.ALICE.equals(TypicalPersons.BOB));","lastModifiedDate":"2021-10-08"},{"lineNumber":82,"author":{"gitId":"david-eom"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":83,"author":{"gitId":"david-eom"},"content":"        // different name -\u003e returns false","lastModifiedDate":"2021-10-08"},{"lineNumber":84,"author":{"gitId":"david-eom"},"content":"        Person editedAlice \u003d new PersonBuilder(TypicalPersons.ALICE).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2021-10-08"},{"lineNumber":85,"author":{"gitId":"david-eom"},"content":"        Assertions.assertFalse(TypicalPersons.ALICE.equals(editedAlice));","lastModifiedDate":"2021-10-08"},{"lineNumber":86,"author":{"gitId":"david-eom"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":87,"author":{"gitId":"david-eom"},"content":"        // different phone -\u003e returns false","lastModifiedDate":"2021-10-08"},{"lineNumber":88,"author":{"gitId":"david-eom"},"content":"        editedAlice \u003d new PersonBuilder(TypicalPersons.ALICE).withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2021-10-08"},{"lineNumber":89,"author":{"gitId":"david-eom"},"content":"        Assertions.assertFalse(TypicalPersons.ALICE.equals(editedAlice));","lastModifiedDate":"2021-10-08"},{"lineNumber":90,"author":{"gitId":"david-eom"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":91,"author":{"gitId":"david-eom"},"content":"        // different tags -\u003e returns false","lastModifiedDate":"2021-10-08"},{"lineNumber":92,"author":{"gitId":"david-eom"},"content":"        editedAlice \u003d new PersonBuilder(TypicalPersons.ALICE).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2021-10-08"},{"lineNumber":93,"author":{"gitId":"david-eom"},"content":"        Assertions.assertFalse(TypicalPersons.ALICE.equals(editedAlice));","lastModifiedDate":"2021-10-08"},{"lineNumber":94,"author":{"gitId":"david-eom"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":95,"author":{"gitId":"david-eom"},"content":"}","lastModifiedDate":"2021-10-08"}],"authorContributionMap":{"bnjmnt4n":2,"david-eom":71,"stanley-1":22}},{"path":"src/test/java/socialite/model/person/PhoneTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"david-eom"},"content":"package socialite.model.person;","lastModifiedDate":"2021-10-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":8,"author":{"gitId":"david-eom"},"content":"import socialite.testutil.Assert;","lastModifiedDate":"2021-10-08"},{"lineNumber":9,"author":{"gitId":"david-eom"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class PhoneTest {","lastModifiedDate":"2017-01-16"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-12-04"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2017-12-04"},{"lineNumber":14,"author":{"gitId":"david-eom"},"content":"        Assert.assertThrows(NullPointerException.class, () -\u003e new Phone(null));","lastModifiedDate":"2021-10-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-04"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-30"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public void constructor_invalidPhone_throwsIllegalArgumentException() {","lastModifiedDate":"2017-05-30"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        String invalidPhone \u003d \"\";","lastModifiedDate":"2017-05-30"},{"lineNumber":20,"author":{"gitId":"david-eom"},"content":"        Assert.assertThrows(IllegalArgumentException.class, () -\u003e new Phone(invalidPhone));","lastModifiedDate":"2021-10-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-01-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void isValidPhone() {","lastModifiedDate":"2017-01-16"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        // null phone number","lastModifiedDate":"2017-12-04"},{"lineNumber":26,"author":{"gitId":"david-eom"},"content":"        Assert.assertThrows(NullPointerException.class, () -\u003e Phone.isValidPhone(null));","lastModifiedDate":"2021-10-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-04"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        // invalid phone numbers","lastModifiedDate":"2017-01-16"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\"\")); // empty string","lastModifiedDate":"2017-01-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\" \")); // spaces only","lastModifiedDate":"2017-01-16"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\"91\")); // less than 3 numbers","lastModifiedDate":"2017-05-04"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\"phone\")); // non-numeric","lastModifiedDate":"2017-01-16"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\"9011p041\")); // alphabets within digits","lastModifiedDate":"2017-01-16"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertFalse(Phone.isValidPhone(\"9312 1534\")); // spaces within digits","lastModifiedDate":"2017-01-16"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-16"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        // valid phone numbers","lastModifiedDate":"2017-01-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertTrue(Phone.isValidPhone(\"911\")); // exactly 3 numbers","lastModifiedDate":"2017-05-04"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertTrue(Phone.isValidPhone(\"93121534\"));","lastModifiedDate":"2017-01-16"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertTrue(Phone.isValidPhone(\"124293842033123\")); // long phone numbers","lastModifiedDate":"2017-01-16"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-16"},{"lineNumber":41,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-16"}],"authorContributionMap":{"david-eom":6,"-":35}},{"path":"src/test/java/socialite/model/person/RemarkTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"EssWhyy"},"content":"package socialite.model.person;","lastModifiedDate":"2021-10-12"},{"lineNumber":2,"author":{"gitId":"EssWhyy"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":3,"author":{"gitId":"david-eom"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-22"},{"lineNumber":4,"author":{"gitId":"david-eom"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2021-10-22"},{"lineNumber":5,"author":{"gitId":"EssWhyy"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":6,"author":{"gitId":"EssWhyy"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-12"},{"lineNumber":7,"author":{"gitId":"EssWhyy"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":8,"author":{"gitId":"EssWhyy"},"content":"public class RemarkTest {","lastModifiedDate":"2021-10-12"},{"lineNumber":9,"author":{"gitId":"EssWhyy"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":10,"author":{"gitId":"EssWhyy"},"content":"    @Test","lastModifiedDate":"2021-10-12"},{"lineNumber":11,"author":{"gitId":"EssWhyy"},"content":"    public void equals() {","lastModifiedDate":"2021-10-12"},{"lineNumber":12,"author":{"gitId":"EssWhyy"},"content":"        Remark remark \u003d new Remark(\"Hello\");","lastModifiedDate":"2021-10-12"},{"lineNumber":13,"author":{"gitId":"EssWhyy"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":14,"author":{"gitId":"EssWhyy"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2021-10-12"},{"lineNumber":15,"author":{"gitId":"david-eom"},"content":"        assertEquals(remark, remark);","lastModifiedDate":"2021-10-22"},{"lineNumber":16,"author":{"gitId":"EssWhyy"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":17,"author":{"gitId":"EssWhyy"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2021-10-12"},{"lineNumber":18,"author":{"gitId":"david-eom"},"content":"        Remark remarkCopy \u003d new Remark(remark.get());","lastModifiedDate":"2021-10-22"},{"lineNumber":19,"author":{"gitId":"david-eom"},"content":"        assertEquals(remark, remarkCopy);","lastModifiedDate":"2021-10-22"},{"lineNumber":20,"author":{"gitId":"EssWhyy"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":21,"author":{"gitId":"EssWhyy"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2021-10-12"},{"lineNumber":22,"author":{"gitId":"david-eom"},"content":"        assertNotEquals(1, remark);","lastModifiedDate":"2021-10-22"},{"lineNumber":23,"author":{"gitId":"EssWhyy"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":24,"author":{"gitId":"EssWhyy"},"content":"        // null -\u003e returns false","lastModifiedDate":"2021-10-12"},{"lineNumber":25,"author":{"gitId":"david-eom"},"content":"        assertNotEquals(null, remark);","lastModifiedDate":"2021-10-22"},{"lineNumber":26,"author":{"gitId":"EssWhyy"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":27,"author":{"gitId":"EssWhyy"},"content":"        // different remark -\u003e returns false","lastModifiedDate":"2021-10-12"},{"lineNumber":28,"author":{"gitId":"EssWhyy"},"content":"        Remark differentRemark \u003d new Remark(\"Bye\");","lastModifiedDate":"2021-10-12"},{"lineNumber":29,"author":{"gitId":"david-eom"},"content":"        assertNotEquals(remark, differentRemark);","lastModifiedDate":"2021-10-22"},{"lineNumber":30,"author":{"gitId":"EssWhyy"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":31,"author":{"gitId":"EssWhyy"},"content":"}","lastModifiedDate":"2021-10-12"}],"authorContributionMap":{"EssWhyy":23,"david-eom":8}},{"path":"src/test/java/socialite/model/person/UniquePersonListTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"david-eom"},"content":"package socialite.model.person;","lastModifiedDate":"2021-10-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"stanley-1"},"content":"import static socialite.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2021-10-25"},{"lineNumber":7,"author":{"gitId":"stanley-1"},"content":"import static socialite.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2021-10-25"},{"lineNumber":8,"author":{"gitId":"david-eom"},"content":"import static socialite.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2021-10-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2018-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":16,"author":{"gitId":"david-eom"},"content":"import socialite.model.person.exceptions.DuplicatePersonException;","lastModifiedDate":"2021-10-08"},{"lineNumber":17,"author":{"gitId":"david-eom"},"content":"import socialite.model.person.exceptions.PersonNotFoundException;","lastModifiedDate":"2021-10-08"},{"lineNumber":18,"author":{"gitId":"david-eom"},"content":"import socialite.testutil.Assert;","lastModifiedDate":"2021-10-08"},{"lineNumber":19,"author":{"gitId":"david-eom"},"content":"import socialite.testutil.PersonBuilder;","lastModifiedDate":"2021-10-09"},{"lineNumber":20,"author":{"gitId":"david-eom"},"content":"import socialite.testutil.TypicalPersons;","lastModifiedDate":"2021-10-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"public class UniquePersonListTest {","lastModifiedDate":"2017-09-01"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private final UniquePersonList uniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void contains_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":28,"author":{"gitId":"david-eom"},"content":"        Assert.assertThrows(NullPointerException.class, () -\u003e uniquePersonList.contains(null));","lastModifiedDate":"2021-10-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public void contains_personNotInList_returnsFalse() {","lastModifiedDate":"2018-08-08"},{"lineNumber":33,"author":{"gitId":"david-eom"},"content":"        assertFalse(uniquePersonList.contains(TypicalPersons.ALICE));","lastModifiedDate":"2021-10-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void contains_personInList_returnsTrue() {","lastModifiedDate":"2018-08-08"},{"lineNumber":38,"author":{"gitId":"david-eom"},"content":"        uniquePersonList.add(TypicalPersons.ALICE);","lastModifiedDate":"2021-10-08"},{"lineNumber":39,"author":{"gitId":"david-eom"},"content":"        assertTrue(uniquePersonList.contains(TypicalPersons.ALICE));","lastModifiedDate":"2021-10-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public void contains_personWithSameIdentityFieldsInList_returnsTrue() {","lastModifiedDate":"2018-08-08"},{"lineNumber":44,"author":{"gitId":"david-eom"},"content":"        uniquePersonList.add(TypicalPersons.ALICE);","lastModifiedDate":"2021-10-08"},{"lineNumber":45,"author":{"gitId":"david-eom"},"content":"        Person editedAlice \u003d new PersonBuilder(TypicalPersons.ALICE)","lastModifiedDate":"2021-10-09"},{"lineNumber":46,"author":{"gitId":"david-eom"},"content":"                .withTags(VALID_TAG_HUSBAND)","lastModifiedDate":"2021-10-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertTrue(uniquePersonList.contains(editedAlice));","lastModifiedDate":"2018-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":51,"author":{"gitId":"stanley-1"},"content":"    @Test","lastModifiedDate":"2021-10-25"},{"lineNumber":52,"author":{"gitId":"stanley-1"},"content":"    public void contains_personWithSameNameInList_returnsFalse() {","lastModifiedDate":"2021-10-25"},{"lineNumber":53,"author":{"gitId":"stanley-1"},"content":"        uniquePersonList.add(TypicalPersons.ALICE);","lastModifiedDate":"2021-10-25"},{"lineNumber":54,"author":{"gitId":"stanley-1"},"content":"        Person editedAlice \u003d new PersonBuilder(TypicalPersons.ALICE)","lastModifiedDate":"2021-10-25"},{"lineNumber":55,"author":{"gitId":"stanley-1"},"content":"                .withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2021-10-25"},{"lineNumber":56,"author":{"gitId":"stanley-1"},"content":"                .withTags(VALID_TAG_HUSBAND)","lastModifiedDate":"2021-10-25"},{"lineNumber":57,"author":{"gitId":"stanley-1"},"content":"                .build();","lastModifiedDate":"2021-10-25"},{"lineNumber":58,"author":{"gitId":"stanley-1"},"content":"        assertFalse(uniquePersonList.contains(editedAlice));","lastModifiedDate":"2021-10-25"},{"lineNumber":59,"author":{"gitId":"stanley-1"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":60,"author":{"gitId":"stanley-1"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":61,"author":{"gitId":"stanley-1"},"content":"    @Test","lastModifiedDate":"2021-10-25"},{"lineNumber":62,"author":{"gitId":"stanley-1"},"content":"    public void contains_personWithSamePhoneNumberInList_returnsTrue() {","lastModifiedDate":"2021-11-01"},{"lineNumber":63,"author":{"gitId":"stanley-1"},"content":"        uniquePersonList.add(TypicalPersons.ALICE);","lastModifiedDate":"2021-10-25"},{"lineNumber":64,"author":{"gitId":"stanley-1"},"content":"        Person editedAlice \u003d new PersonBuilder(TypicalPersons.ALICE)","lastModifiedDate":"2021-10-25"},{"lineNumber":65,"author":{"gitId":"stanley-1"},"content":"                .withName(VALID_NAME_BOB)","lastModifiedDate":"2021-10-25"},{"lineNumber":66,"author":{"gitId":"stanley-1"},"content":"                .withTags(VALID_TAG_HUSBAND)","lastModifiedDate":"2021-10-25"},{"lineNumber":67,"author":{"gitId":"stanley-1"},"content":"                .build();","lastModifiedDate":"2021-10-25"},{"lineNumber":68,"author":{"gitId":"stanley-1"},"content":"        assertTrue(uniquePersonList.contains(editedAlice));","lastModifiedDate":"2021-11-01"},{"lineNumber":69,"author":{"gitId":"stanley-1"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":70,"author":{"gitId":"stanley-1"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public void add_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":73,"author":{"gitId":"david-eom"},"content":"        Assert.assertThrows(NullPointerException.class, () -\u003e uniquePersonList.add(null));","lastModifiedDate":"2021-10-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public void add_duplicatePerson_throwsDuplicatePersonException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":78,"author":{"gitId":"david-eom"},"content":"        uniquePersonList.add(TypicalPersons.ALICE);","lastModifiedDate":"2021-10-08"},{"lineNumber":79,"author":{"gitId":"david-eom"},"content":"        Assert.assertThrows(DuplicatePersonException.class, () -\u003e uniquePersonList.add(TypicalPersons.ALICE));","lastModifiedDate":"2021-10-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":82,"author":{"gitId":"stanley-1"},"content":"    @Test","lastModifiedDate":"2021-11-01"},{"lineNumber":83,"author":{"gitId":"stanley-1"},"content":"    public void add_personWithSamePhone_throwsDuplicatePersonException() {","lastModifiedDate":"2021-11-01"},{"lineNumber":84,"author":{"gitId":"stanley-1"},"content":"        uniquePersonList.add(TypicalPersons.ALICE);","lastModifiedDate":"2021-11-01"},{"lineNumber":85,"author":{"gitId":"stanley-1"},"content":"        Person bobWithAlicePhone \u003d new PersonBuilder(TypicalPersons.BOB)","lastModifiedDate":"2021-11-01"},{"lineNumber":86,"author":{"gitId":"stanley-1"},"content":"                .withPhone(TypicalPersons.ALICE.getPhone().value)","lastModifiedDate":"2021-11-01"},{"lineNumber":87,"author":{"gitId":"stanley-1"},"content":"                .build();","lastModifiedDate":"2021-11-01"},{"lineNumber":88,"author":{"gitId":"stanley-1"},"content":"        Assert.assertThrows(DuplicatePersonException.class, ()","lastModifiedDate":"2021-11-01"},{"lineNumber":89,"author":{"gitId":"stanley-1"},"content":"            -\u003e uniquePersonList.add(bobWithAlicePhone));","lastModifiedDate":"2021-11-01"},{"lineNumber":90,"author":{"gitId":"stanley-1"},"content":"    }","lastModifiedDate":"2021-11-01"},{"lineNumber":91,"author":{"gitId":"stanley-1"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":92,"author":{"gitId":"stanley-1"},"content":"    @Test","lastModifiedDate":"2021-11-01"},{"lineNumber":93,"author":{"gitId":"stanley-1"},"content":"    public void add_personWithSameName_success() {","lastModifiedDate":"2021-11-01"},{"lineNumber":94,"author":{"gitId":"stanley-1"},"content":"        uniquePersonList.add(TypicalPersons.ALICE);","lastModifiedDate":"2021-11-01"},{"lineNumber":95,"author":{"gitId":"stanley-1"},"content":"        Person bobWithAliceName \u003d new PersonBuilder(TypicalPersons.BOB)","lastModifiedDate":"2021-11-01"},{"lineNumber":96,"author":{"gitId":"stanley-1"},"content":"                .withName(TypicalPersons.ALICE.getName().toString())","lastModifiedDate":"2021-11-01"},{"lineNumber":97,"author":{"gitId":"stanley-1"},"content":"                .build();","lastModifiedDate":"2021-11-01"},{"lineNumber":98,"author":{"gitId":"stanley-1"},"content":"        uniquePersonList.add(bobWithAliceName);","lastModifiedDate":"2021-11-01"},{"lineNumber":99,"author":{"gitId":"stanley-1"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2021-11-01"},{"lineNumber":100,"author":{"gitId":"stanley-1"},"content":"        expectedUniquePersonList.add(TypicalPersons.ALICE);","lastModifiedDate":"2021-11-01"},{"lineNumber":101,"author":{"gitId":"stanley-1"},"content":"        expectedUniquePersonList.add(bobWithAliceName);","lastModifiedDate":"2021-11-01"},{"lineNumber":102,"author":{"gitId":"stanley-1"},"content":"        assertEquals(uniquePersonList, expectedUniquePersonList);","lastModifiedDate":"2021-11-01"},{"lineNumber":103,"author":{"gitId":"stanley-1"},"content":"    }","lastModifiedDate":"2021-11-01"},{"lineNumber":104,"author":{"gitId":"stanley-1"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    public void setPerson_nullTargetPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":107,"author":{"gitId":"david-eom"},"content":"        Assert.assertThrows(","lastModifiedDate":"2021-10-09"},{"lineNumber":108,"author":{"gitId":"david-eom"},"content":"                NullPointerException.class, () -\u003e uniquePersonList.setPerson(null, TypicalPersons.ALICE)","lastModifiedDate":"2021-10-09"},{"lineNumber":109,"author":{"gitId":"david-eom"},"content":"        );","lastModifiedDate":"2021-10-09"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    public void setPerson_nullEditedPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":114,"author":{"gitId":"david-eom"},"content":"        Assert.assertThrows(NullPointerException.class, ()","lastModifiedDate":"2021-10-09"},{"lineNumber":115,"author":{"gitId":"david-eom"},"content":"            -\u003e uniquePersonList.setPerson(TypicalPersons.ALICE, null));","lastModifiedDate":"2021-10-09"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    public void setPerson_targetPersonNotInList_throwsPersonNotFoundException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":120,"author":{"gitId":"david-eom"},"content":"        Assert.assertThrows(PersonNotFoundException.class, ()","lastModifiedDate":"2021-10-09"},{"lineNumber":121,"author":{"gitId":"david-eom"},"content":"            -\u003e uniquePersonList.setPerson(TypicalPersons.ALICE, TypicalPersons.ALICE));","lastModifiedDate":"2021-10-09"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":125,"author":{"gitId":"stanley-1"},"content":"    public void setPerson_editedPersonNotInListIsSamePerson_success() {","lastModifiedDate":"2021-11-02"},{"lineNumber":126,"author":{"gitId":"david-eom"},"content":"        uniquePersonList.add(TypicalPersons.ALICE);","lastModifiedDate":"2021-10-08"},{"lineNumber":127,"author":{"gitId":"david-eom"},"content":"        uniquePersonList.setPerson(TypicalPersons.ALICE, TypicalPersons.ALICE);","lastModifiedDate":"2021-10-08"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":129,"author":{"gitId":"david-eom"},"content":"        expectedUniquePersonList.add(TypicalPersons.ALICE);","lastModifiedDate":"2021-10-08"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":134,"author":{"gitId":"stanley-1"},"content":"    public void setPerson_editedPersonNotInListHasSameIdentity_success() {","lastModifiedDate":"2021-11-02"},{"lineNumber":135,"author":{"gitId":"david-eom"},"content":"        uniquePersonList.add(TypicalPersons.ALICE);","lastModifiedDate":"2021-10-08"},{"lineNumber":136,"author":{"gitId":"david-eom"},"content":"        Person editedAlice \u003d new PersonBuilder(TypicalPersons.ALICE)","lastModifiedDate":"2021-10-09"},{"lineNumber":137,"author":{"gitId":"david-eom"},"content":"                .withTags(VALID_TAG_HUSBAND)","lastModifiedDate":"2021-10-09"},{"lineNumber":138,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-08-08"},{"lineNumber":139,"author":{"gitId":"david-eom"},"content":"        uniquePersonList.setPerson(TypicalPersons.ALICE, editedAlice);","lastModifiedDate":"2021-10-08"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        expectedUniquePersonList.add(editedAlice);","lastModifiedDate":"2018-08-08"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":146,"author":{"gitId":"stanley-1"},"content":"    public void setPerson_editedPersonNotInListHasDifferentIdentity_success() {","lastModifiedDate":"2021-11-02"},{"lineNumber":147,"author":{"gitId":"david-eom"},"content":"        uniquePersonList.add(TypicalPersons.ALICE);","lastModifiedDate":"2021-10-08"},{"lineNumber":148,"author":{"gitId":"david-eom"},"content":"        uniquePersonList.setPerson(TypicalPersons.ALICE, TypicalPersons.BOB);","lastModifiedDate":"2021-10-08"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":150,"author":{"gitId":"david-eom"},"content":"        expectedUniquePersonList.add(TypicalPersons.BOB);","lastModifiedDate":"2021-10-08"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":154,"author":{"gitId":"stanley-1"},"content":"    @Test","lastModifiedDate":"2021-11-01"},{"lineNumber":155,"author":{"gitId":"stanley-1"},"content":"    public void setPerson_editedPersonNotInListHasSamePhone_success() {","lastModifiedDate":"2021-11-02"},{"lineNumber":156,"author":{"gitId":"stanley-1"},"content":"        uniquePersonList.add(TypicalPersons.ALICE);","lastModifiedDate":"2021-11-01"},{"lineNumber":157,"author":{"gitId":"stanley-1"},"content":"        Person bobWithAlicePhone \u003d new PersonBuilder(TypicalPersons.BOB)","lastModifiedDate":"2021-11-01"},{"lineNumber":158,"author":{"gitId":"stanley-1"},"content":"                .withPhone(TypicalPersons.ALICE.getPhone().toString()).build();","lastModifiedDate":"2021-11-01"},{"lineNumber":159,"author":{"gitId":"stanley-1"},"content":"        uniquePersonList.setPerson(TypicalPersons.ALICE, bobWithAlicePhone);","lastModifiedDate":"2021-11-01"},{"lineNumber":160,"author":{"gitId":"stanley-1"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2021-11-01"},{"lineNumber":161,"author":{"gitId":"stanley-1"},"content":"        expectedUniquePersonList.add(bobWithAlicePhone);","lastModifiedDate":"2021-11-01"},{"lineNumber":162,"author":{"gitId":"stanley-1"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2021-11-01"},{"lineNumber":163,"author":{"gitId":"stanley-1"},"content":"    }","lastModifiedDate":"2021-11-01"},{"lineNumber":164,"author":{"gitId":"stanley-1"},"content":"","lastModifiedDate":"2021-11-01"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":166,"author":{"gitId":"stanley-1"},"content":"    public void setPerson_editedPersonExistsInList_throwsDuplicatePersonException() {","lastModifiedDate":"2021-11-02"},{"lineNumber":167,"author":{"gitId":"david-eom"},"content":"        uniquePersonList.add(TypicalPersons.ALICE);","lastModifiedDate":"2021-10-08"},{"lineNumber":168,"author":{"gitId":"david-eom"},"content":"        uniquePersonList.add(TypicalPersons.BOB);","lastModifiedDate":"2021-10-08"},{"lineNumber":169,"author":{"gitId":"david-eom"},"content":"        Assert.assertThrows(DuplicatePersonException.class, ()","lastModifiedDate":"2021-10-09"},{"lineNumber":170,"author":{"gitId":"david-eom"},"content":"            -\u003e uniquePersonList.setPerson(TypicalPersons.ALICE, TypicalPersons.BOB));","lastModifiedDate":"2021-10-09"},{"lineNumber":171,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":173,"author":{"gitId":"stanley-1"},"content":"    @Test","lastModifiedDate":"2021-10-25"},{"lineNumber":174,"author":{"gitId":"stanley-1"},"content":"    public void setPerson_editedPersonExistsInListWithDiffPhone_throwsDuplicatePersonException() {","lastModifiedDate":"2021-11-02"},{"lineNumber":175,"author":{"gitId":"stanley-1"},"content":"        uniquePersonList.add(TypicalPersons.ALICE);","lastModifiedDate":"2021-10-25"},{"lineNumber":176,"author":{"gitId":"stanley-1"},"content":"        Person differentAlice \u003d new PersonBuilder(TypicalPersons.ALICE)","lastModifiedDate":"2021-10-25"},{"lineNumber":177,"author":{"gitId":"stanley-1"},"content":"                .withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2021-10-25"},{"lineNumber":178,"author":{"gitId":"stanley-1"},"content":"                .build();","lastModifiedDate":"2021-10-25"},{"lineNumber":179,"author":{"gitId":"stanley-1"},"content":"        uniquePersonList.add(differentAlice);","lastModifiedDate":"2021-10-25"},{"lineNumber":180,"author":{"gitId":"stanley-1"},"content":"        Assert.assertThrows(DuplicatePersonException.class, ()","lastModifiedDate":"2021-10-25"},{"lineNumber":181,"author":{"gitId":"stanley-1"},"content":"            -\u003e uniquePersonList.setPerson(TypicalPersons.ALICE, differentAlice));","lastModifiedDate":"2021-10-25"},{"lineNumber":182,"author":{"gitId":"stanley-1"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":183,"author":{"gitId":"stanley-1"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":184,"author":{"gitId":"stanley-1"},"content":"    @Test","lastModifiedDate":"2021-11-02"},{"lineNumber":185,"author":{"gitId":"stanley-1"},"content":"    // Amy and differentAmy (who has Bob\u0027s phone number) already exist in the list.","lastModifiedDate":"2021-11-02"},{"lineNumber":186,"author":{"gitId":"stanley-1"},"content":"    // Attempting to set Amy with Bob\u0027s attributes will throw a DuplicatePersonException as differentAmy","lastModifiedDate":"2021-11-02"},{"lineNumber":187,"author":{"gitId":"stanley-1"},"content":"    // has Bob\u0027s phone number as her attribute.","lastModifiedDate":"2021-11-02"},{"lineNumber":188,"author":{"gitId":"stanley-1"},"content":"    public void setPerson_editedPersonHasSamePhoneNumber_throwsDuplicatePersonException() {","lastModifiedDate":"2021-11-02"},{"lineNumber":189,"author":{"gitId":"stanley-1"},"content":"        uniquePersonList.add(TypicalPersons.AMY);","lastModifiedDate":"2021-11-02"},{"lineNumber":190,"author":{"gitId":"stanley-1"},"content":"        Person differentAmy \u003d new PersonBuilder(TypicalPersons.AMY)","lastModifiedDate":"2021-11-02"},{"lineNumber":191,"author":{"gitId":"stanley-1"},"content":"                .withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2021-11-02"},{"lineNumber":192,"author":{"gitId":"stanley-1"},"content":"                .build();","lastModifiedDate":"2021-11-02"},{"lineNumber":193,"author":{"gitId":"stanley-1"},"content":"        uniquePersonList.add(differentAmy);","lastModifiedDate":"2021-11-02"},{"lineNumber":194,"author":{"gitId":"stanley-1"},"content":"        Assert.assertThrows(DuplicatePersonException.class, ()","lastModifiedDate":"2021-11-02"},{"lineNumber":195,"author":{"gitId":"stanley-1"},"content":"            -\u003e uniquePersonList.setPerson(TypicalPersons.AMY, TypicalPersons.BOB));","lastModifiedDate":"2021-11-02"},{"lineNumber":196,"author":{"gitId":"stanley-1"},"content":"    }","lastModifiedDate":"2021-11-02"},{"lineNumber":197,"author":{"gitId":"stanley-1"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":198,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":199,"author":{"gitId":"-"},"content":"    public void remove_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":200,"author":{"gitId":"david-eom"},"content":"        Assert.assertThrows(NullPointerException.class, () -\u003e uniquePersonList.remove(null));","lastModifiedDate":"2021-10-08"},{"lineNumber":201,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":202,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":203,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":204,"author":{"gitId":"-"},"content":"    public void remove_personDoesNotExist_throwsPersonNotFoundException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":205,"author":{"gitId":"david-eom"},"content":"        Assert.assertThrows(PersonNotFoundException.class, () -\u003e uniquePersonList.remove(TypicalPersons.ALICE));","lastModifiedDate":"2021-10-08"},{"lineNumber":206,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":207,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":208,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":209,"author":{"gitId":"-"},"content":"    public void remove_existingPerson_removesPerson() {","lastModifiedDate":"2018-08-08"},{"lineNumber":210,"author":{"gitId":"david-eom"},"content":"        uniquePersonList.add(TypicalPersons.ALICE);","lastModifiedDate":"2021-10-08"},{"lineNumber":211,"author":{"gitId":"david-eom"},"content":"        uniquePersonList.remove(TypicalPersons.ALICE);","lastModifiedDate":"2021-10-08"},{"lineNumber":212,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":213,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":214,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":216,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":217,"author":{"gitId":"-"},"content":"    public void setPersons_nullUniquePersonList_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":218,"author":{"gitId":"david-eom"},"content":"        Assert.assertThrows(NullPointerException.class, () -\u003e uniquePersonList.setPersons((UniquePersonList) null));","lastModifiedDate":"2021-10-08"},{"lineNumber":219,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":220,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":221,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":222,"author":{"gitId":"-"},"content":"    public void setPersons_uniquePersonList_replacesOwnListWithProvidedUniquePersonList() {","lastModifiedDate":"2018-08-08"},{"lineNumber":223,"author":{"gitId":"david-eom"},"content":"        uniquePersonList.add(TypicalPersons.ALICE);","lastModifiedDate":"2021-10-08"},{"lineNumber":224,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":225,"author":{"gitId":"david-eom"},"content":"        expectedUniquePersonList.add(TypicalPersons.BOB);","lastModifiedDate":"2021-10-08"},{"lineNumber":226,"author":{"gitId":"-"},"content":"        uniquePersonList.setPersons(expectedUniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":227,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":228,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":229,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":230,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":231,"author":{"gitId":"-"},"content":"    public void setPersons_nullList_throwsNullPointerException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":232,"author":{"gitId":"david-eom"},"content":"        Assert.assertThrows(NullPointerException.class, () -\u003e uniquePersonList.setPersons((List\u003cPerson\u003e) null));","lastModifiedDate":"2021-10-08"},{"lineNumber":233,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":234,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":235,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":236,"author":{"gitId":"-"},"content":"    public void setPersons_list_replacesOwnListWithProvidedList() {","lastModifiedDate":"2018-08-08"},{"lineNumber":237,"author":{"gitId":"david-eom"},"content":"        uniquePersonList.add(TypicalPersons.ALICE);","lastModifiedDate":"2021-10-08"},{"lineNumber":238,"author":{"gitId":"david-eom"},"content":"        List\u003cPerson\u003e personList \u003d Collections.singletonList(TypicalPersons.BOB);","lastModifiedDate":"2021-10-08"},{"lineNumber":239,"author":{"gitId":"-"},"content":"        uniquePersonList.setPersons(personList);","lastModifiedDate":"2018-08-08"},{"lineNumber":240,"author":{"gitId":"-"},"content":"        UniquePersonList expectedUniquePersonList \u003d new UniquePersonList();","lastModifiedDate":"2018-08-08"},{"lineNumber":241,"author":{"gitId":"david-eom"},"content":"        expectedUniquePersonList.add(TypicalPersons.BOB);","lastModifiedDate":"2021-10-08"},{"lineNumber":242,"author":{"gitId":"-"},"content":"        assertEquals(expectedUniquePersonList, uniquePersonList);","lastModifiedDate":"2018-08-08"},{"lineNumber":243,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":244,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":245,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-08"},{"lineNumber":246,"author":{"gitId":"-"},"content":"    public void setPersons_listWithDuplicatePersons_throwsDuplicatePersonException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":247,"author":{"gitId":"david-eom"},"content":"        List\u003cPerson\u003e listWithDuplicatePersons \u003d Arrays.asList(TypicalPersons.ALICE, TypicalPersons.ALICE);","lastModifiedDate":"2021-10-08"},{"lineNumber":248,"author":{"gitId":"david-eom"},"content":"        Assert.assertThrows(DuplicatePersonException.class, ()","lastModifiedDate":"2021-10-09"},{"lineNumber":249,"author":{"gitId":"david-eom"},"content":"            -\u003e uniquePersonList.setPersons(listWithDuplicatePersons));","lastModifiedDate":"2021-10-09"},{"lineNumber":250,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-08"},{"lineNumber":251,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":252,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":253,"author":{"gitId":"-"},"content":"    public void asUnmodifiableObservableList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2018-04-05"},{"lineNumber":254,"author":{"gitId":"david-eom"},"content":"        Assert.assertThrows(UnsupportedOperationException.class, ()","lastModifiedDate":"2021-10-08"},{"lineNumber":255,"author":{"gitId":"-"},"content":"            -\u003e uniquePersonList.asUnmodifiableObservableList().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":256,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":257,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-09-01"}],"authorContributionMap":{"david-eom":53,"-":119,"stanley-1":85}},{"path":"src/test/java/socialite/model/tag/TagTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"david-eom"},"content":"package socialite.model.tag;","lastModifiedDate":"2021-10-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":5,"author":{"gitId":"david-eom"},"content":"import socialite.testutil.Assert;","lastModifiedDate":"2021-10-08"},{"lineNumber":6,"author":{"gitId":"david-eom"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"public class TagTest {","lastModifiedDate":"2021-10-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2021-10-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2021-10-08"},{"lineNumber":11,"author":{"gitId":"david-eom"},"content":"        Assert.assertThrows(NullPointerException.class, () -\u003e new Tag(null));","lastModifiedDate":"2021-10-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2021-10-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public void constructor_invalidTagName_throwsIllegalArgumentException() {","lastModifiedDate":"2021-10-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        String invalidTagName \u003d \"\";","lastModifiedDate":"2021-10-08"},{"lineNumber":17,"author":{"gitId":"david-eom"},"content":"        Assert.assertThrows(IllegalArgumentException.class, () -\u003e new Tag(invalidTagName));","lastModifiedDate":"2021-10-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2021-10-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public void isValidTagName() {","lastModifiedDate":"2021-10-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        // null tag name","lastModifiedDate":"2021-10-08"},{"lineNumber":23,"author":{"gitId":"david-eom"},"content":"        Assert.assertThrows(NullPointerException.class, () -\u003e Tag.isValidTagName(null));","lastModifiedDate":"2021-10-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-10-08"}],"authorContributionMap":{"david-eom":6,"-":20}},{"path":"src/test/java/socialite/storage/JsonAdaptedPersonTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"david-eom"},"content":"package socialite.storage;","lastModifiedDate":"2021-10-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"david-eom"},"content":"import org.junit.jupiter.api.Assertions;","lastModifiedDate":"2021-10-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"david-eom"},"content":"import socialite.commons.exceptions.IllegalValueException;","lastModifiedDate":"2021-10-08"},{"lineNumber":11,"author":{"gitId":"stanley-1"},"content":"import socialite.model.handle.Facebook;","lastModifiedDate":"2021-10-11"},{"lineNumber":12,"author":{"gitId":"stanley-1"},"content":"import socialite.model.handle.Instagram;","lastModifiedDate":"2021-10-11"},{"lineNumber":13,"author":{"gitId":"david-eom"},"content":"import socialite.model.handle.Telegram;","lastModifiedDate":"2021-10-08"},{"lineNumber":14,"author":{"gitId":"Zacchua"},"content":"import socialite.model.handle.TikTok;","lastModifiedDate":"2021-10-14"},{"lineNumber":15,"author":{"gitId":"Zacchua"},"content":"import socialite.model.handle.Twitter;","lastModifiedDate":"2021-10-14"},{"lineNumber":16,"author":{"gitId":"david-eom"},"content":"import socialite.model.person.Name;","lastModifiedDate":"2021-10-08"},{"lineNumber":17,"author":{"gitId":"bnjmnt4n"},"content":"import socialite.model.person.Person;","lastModifiedDate":"2021-10-21"},{"lineNumber":18,"author":{"gitId":"david-eom"},"content":"import socialite.model.person.Phone;","lastModifiedDate":"2021-10-08"},{"lineNumber":19,"author":{"gitId":"david-eom"},"content":"import socialite.testutil.Assert;","lastModifiedDate":"2021-10-08"},{"lineNumber":20,"author":{"gitId":"david-eom"},"content":"import socialite.testutil.TypicalPersons;","lastModifiedDate":"2021-10-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"public class JsonAdaptedPersonTest {","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private static final String INVALID_NAME \u003d \"R@chel\";","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private static final String INVALID_PHONE \u003d \"+651234\";","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private static final String INVALID_TAG \u003d \"#friend\";","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"stanley-1"},"content":"    private static final String INVALID_FACEBOOK \u003d \"cannot_have_underscore\";","lastModifiedDate":"2021-10-11"},{"lineNumber":27,"author":{"gitId":"stanley-1"},"content":"    private static final String INVALID_INSTAGRAM \u003d \"cannot_be_longer_than_30_characters\";","lastModifiedDate":"2021-10-11"},{"lineNumber":28,"author":{"gitId":"david-eom"},"content":"    private static final String INVALID_TELEGRAM \u003d \"cannot.have.dot\";","lastModifiedDate":"2021-10-08"},{"lineNumber":29,"author":{"gitId":"Zacchua"},"content":"    private static final String INVALID_TIKTOK \u003d \"weird@name$.\";","lastModifiedDate":"2021-10-14"},{"lineNumber":30,"author":{"gitId":"Zacchua"},"content":"    private static final String INVALID_TWITTER \u003d \"toolongand.havedoasdft\";","lastModifiedDate":"2021-10-14"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"david-eom"},"content":"    private static final String VALID_NAME \u003d TypicalPersons.BENSON.getName().toString();","lastModifiedDate":"2021-10-08"},{"lineNumber":33,"author":{"gitId":"david-eom"},"content":"    private static final String VALID_PHONE \u003d TypicalPersons.BENSON.getPhone().toString();","lastModifiedDate":"2021-10-08"},{"lineNumber":34,"author":{"gitId":"EssWhyy"},"content":"    private static final String VALID_REMARK \u003d TypicalPersons.BENSON.getRemark().toString();","lastModifiedDate":"2021-10-12"},{"lineNumber":35,"author":{"gitId":"david-eom"},"content":"    private static final List\u003cJsonAdaptedTag\u003e VALID_TAGS \u003d TypicalPersons.BENSON.getTags().stream()","lastModifiedDate":"2021-10-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"            .map(JsonAdaptedTag::new)","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"            .collect(Collectors.toList());","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"stanley-1"},"content":"    private static final String VALID_FACEBOOK \u003d TypicalPersons.BENSON.getFacebook().toString();","lastModifiedDate":"2021-10-11"},{"lineNumber":39,"author":{"gitId":"stanley-1"},"content":"    private static final String VALID_INSTAGRAM \u003d TypicalPersons.BENSON.getInstagram().toString();","lastModifiedDate":"2021-10-11"},{"lineNumber":40,"author":{"gitId":"david-eom"},"content":"    private static final String VALID_TELEGRAM \u003d TypicalPersons.BENSON.getTelegram().toString();","lastModifiedDate":"2021-10-08"},{"lineNumber":41,"author":{"gitId":"Zacchua"},"content":"    private static final String VALID_TIKTOK \u003d TypicalPersons.BENSON.getTiktok().toString();","lastModifiedDate":"2021-10-12"},{"lineNumber":42,"author":{"gitId":"Zacchua"},"content":"    private static final String VALID_TWITTER \u003d TypicalPersons.BENSON.getTwitter().toString();","lastModifiedDate":"2021-10-12"},{"lineNumber":43,"author":{"gitId":"Zacchua"},"content":"    private static final String VALID_PROFILE_PIC \u003d TypicalPersons.BENSON.getProfilePicture().toString();","lastModifiedDate":"2021-10-26"},{"lineNumber":44,"author":{"gitId":"david-eom"},"content":"    private static final List\u003cJsonAdaptedDate\u003e VALID_DATES \u003d TypicalPersons.BENSON.getDates().get().values().stream()","lastModifiedDate":"2021-10-28"},{"lineNumber":45,"author":{"gitId":"bnjmnt4n"},"content":"            .map(JsonAdaptedDate::new)","lastModifiedDate":"2021-10-23"},{"lineNumber":46,"author":{"gitId":"bnjmnt4n"},"content":"            .collect(Collectors.toList());","lastModifiedDate":"2021-10-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public void toModelType_validPersonDetails_returnsPerson() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":50,"author":{"gitId":"david-eom"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(TypicalPersons.BENSON);","lastModifiedDate":"2021-10-08"},{"lineNumber":51,"author":{"gitId":"bnjmnt4n"},"content":"        Person per \u003d person.toModelType();","lastModifiedDate":"2021-10-21"},{"lineNumber":52,"author":{"gitId":"david-eom"},"content":"        Assertions.assertEquals(TypicalPersons.BENSON, person.toModelType());","lastModifiedDate":"2021-10-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public void toModelType_invalidName_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":57,"author":{"gitId":"david-eom"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(","lastModifiedDate":"2021-10-08"},{"lineNumber":58,"author":{"gitId":"Zacchua"},"content":"                INVALID_NAME, VALID_PHONE, VALID_REMARK, VALID_TAGS, VALID_PROFILE_PIC,","lastModifiedDate":"2021-10-26"},{"lineNumber":59,"author":{"gitId":"Zacchua"},"content":"                VALID_FACEBOOK, VALID_INSTAGRAM,","lastModifiedDate":"2021-10-26"},{"lineNumber":60,"author":{"gitId":"bnjmnt4n"},"content":"                VALID_TELEGRAM, VALID_TIKTOK, VALID_TWITTER, VALID_DATES","lastModifiedDate":"2021-10-21"},{"lineNumber":61,"author":{"gitId":"david-eom"},"content":"        );","lastModifiedDate":"2021-10-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Name.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":63,"author":{"gitId":"david-eom"},"content":"        Assert.assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2021-10-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public void toModelType_nullName_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":68,"author":{"gitId":"david-eom"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(","lastModifiedDate":"2021-10-08"},{"lineNumber":69,"author":{"gitId":"Zacchua"},"content":"                null, VALID_PHONE, VALID_REMARK, VALID_TAGS, VALID_PROFILE_PIC, VALID_FACEBOOK, VALID_INSTAGRAM,","lastModifiedDate":"2021-10-26"},{"lineNumber":70,"author":{"gitId":"bnjmnt4n"},"content":"                VALID_TELEGRAM, VALID_TIKTOK, VALID_TWITTER, VALID_DATES","lastModifiedDate":"2021-10-21"},{"lineNumber":71,"author":{"gitId":"david-eom"},"content":"        );","lastModifiedDate":"2021-10-08"},{"lineNumber":72,"author":{"gitId":"david-eom"},"content":"        String expectedMessage \u003d","lastModifiedDate":"2021-10-09"},{"lineNumber":73,"author":{"gitId":"david-eom"},"content":"                String.format(JsonAdaptedPerson.MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName());","lastModifiedDate":"2021-10-09"},{"lineNumber":74,"author":{"gitId":"david-eom"},"content":"        Assert.assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2021-10-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public void toModelType_invalidPhone_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":79,"author":{"gitId":"david-eom"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(","lastModifiedDate":"2021-10-08"},{"lineNumber":80,"author":{"gitId":"Zacchua"},"content":"                VALID_NAME, INVALID_PHONE, VALID_REMARK, VALID_TAGS, VALID_PROFILE_PIC, VALID_FACEBOOK, VALID_INSTAGRAM,","lastModifiedDate":"2021-10-26"},{"lineNumber":81,"author":{"gitId":"bnjmnt4n"},"content":"                VALID_TELEGRAM, VALID_TIKTOK, VALID_TWITTER, VALID_DATES","lastModifiedDate":"2021-10-21"},{"lineNumber":82,"author":{"gitId":"david-eom"},"content":"        );","lastModifiedDate":"2021-10-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Phone.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":84,"author":{"gitId":"david-eom"},"content":"        Assert.assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2021-10-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    public void toModelType_nullPhone_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":89,"author":{"gitId":"david-eom"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(","lastModifiedDate":"2021-10-08"},{"lineNumber":90,"author":{"gitId":"Zacchua"},"content":"                VALID_NAME, null, VALID_REMARK, VALID_TAGS, VALID_PROFILE_PIC,","lastModifiedDate":"2021-10-26"},{"lineNumber":91,"author":{"gitId":"Zacchua"},"content":"                VALID_FACEBOOK, VALID_INSTAGRAM, VALID_TELEGRAM,","lastModifiedDate":"2021-10-26"},{"lineNumber":92,"author":{"gitId":"bnjmnt4n"},"content":"                VALID_TIKTOK, VALID_TWITTER, VALID_DATES","lastModifiedDate":"2021-10-21"},{"lineNumber":93,"author":{"gitId":"david-eom"},"content":"        );","lastModifiedDate":"2021-10-08"},{"lineNumber":94,"author":{"gitId":"david-eom"},"content":"        String expectedMessage \u003d","lastModifiedDate":"2021-10-09"},{"lineNumber":95,"author":{"gitId":"david-eom"},"content":"                String.format(JsonAdaptedPerson.MISSING_FIELD_MESSAGE_FORMAT, Phone.class.getSimpleName());","lastModifiedDate":"2021-10-09"},{"lineNumber":96,"author":{"gitId":"david-eom"},"content":"        Assert.assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2021-10-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    public void toModelType_invalidTags_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        List\u003cJsonAdaptedTag\u003e invalidTags \u003d new ArrayList\u003c\u003e(VALID_TAGS);","lastModifiedDate":"2018-08-13"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        invalidTags.add(new JsonAdaptedTag(INVALID_TAG));","lastModifiedDate":"2018-08-13"},{"lineNumber":103,"author":{"gitId":"david-eom"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(","lastModifiedDate":"2021-10-08"},{"lineNumber":104,"author":{"gitId":"Zacchua"},"content":"                VALID_NAME, VALID_PHONE, VALID_REMARK, invalidTags, VALID_PROFILE_PIC, VALID_FACEBOOK, VALID_INSTAGRAM,","lastModifiedDate":"2021-10-26"},{"lineNumber":105,"author":{"gitId":"bnjmnt4n"},"content":"                VALID_TELEGRAM, VALID_TIKTOK, VALID_TWITTER, VALID_DATES","lastModifiedDate":"2021-10-21"},{"lineNumber":106,"author":{"gitId":"david-eom"},"content":"        );","lastModifiedDate":"2021-10-08"},{"lineNumber":107,"author":{"gitId":"david-eom"},"content":"        Assert.assertThrows(IllegalValueException.class, person::toModelType);","lastModifiedDate":"2021-10-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":110,"author":{"gitId":"stanley-1"},"content":"    @Test","lastModifiedDate":"2021-10-11"},{"lineNumber":111,"author":{"gitId":"stanley-1"},"content":"    public void toModelType_invalidFacebook_throwsIllegalValueException() {","lastModifiedDate":"2021-10-11"},{"lineNumber":112,"author":{"gitId":"stanley-1"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(","lastModifiedDate":"2021-10-11"},{"lineNumber":113,"author":{"gitId":"Zacchua"},"content":"                VALID_NAME, VALID_PHONE, VALID_REMARK, VALID_TAGS, VALID_PROFILE_PIC,","lastModifiedDate":"2021-10-26"},{"lineNumber":114,"author":{"gitId":"Zacchua"},"content":"                INVALID_FACEBOOK, VALID_INSTAGRAM,","lastModifiedDate":"2021-10-26"},{"lineNumber":115,"author":{"gitId":"bnjmnt4n"},"content":"                VALID_TELEGRAM, VALID_TIKTOK, VALID_TWITTER, VALID_DATES","lastModifiedDate":"2021-10-21"},{"lineNumber":116,"author":{"gitId":"stanley-1"},"content":"        );","lastModifiedDate":"2021-10-11"},{"lineNumber":117,"author":{"gitId":"stanley-1"},"content":"        String expectedMessage \u003d Facebook.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2021-10-11"},{"lineNumber":118,"author":{"gitId":"stanley-1"},"content":"        Assert.assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2021-10-11"},{"lineNumber":119,"author":{"gitId":"stanley-1"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":120,"author":{"gitId":"stanley-1"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":121,"author":{"gitId":"stanley-1"},"content":"    @Test","lastModifiedDate":"2021-10-11"},{"lineNumber":122,"author":{"gitId":"stanley-1"},"content":"    public void toModelType_invalidInstagram_throwsIllegalValueException() {","lastModifiedDate":"2021-10-11"},{"lineNumber":123,"author":{"gitId":"stanley-1"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(","lastModifiedDate":"2021-10-11"},{"lineNumber":124,"author":{"gitId":"Zacchua"},"content":"                VALID_NAME, VALID_PHONE, VALID_REMARK, VALID_TAGS, VALID_PROFILE_PIC, VALID_FACEBOOK, INVALID_INSTAGRAM,","lastModifiedDate":"2021-10-26"},{"lineNumber":125,"author":{"gitId":"bnjmnt4n"},"content":"                VALID_TELEGRAM, VALID_TIKTOK, VALID_TWITTER, VALID_DATES","lastModifiedDate":"2021-10-21"},{"lineNumber":126,"author":{"gitId":"stanley-1"},"content":"        );","lastModifiedDate":"2021-10-11"},{"lineNumber":127,"author":{"gitId":"stanley-1"},"content":"        String expectedMessage \u003d Instagram.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2021-10-11"},{"lineNumber":128,"author":{"gitId":"stanley-1"},"content":"        Assert.assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2021-10-11"},{"lineNumber":129,"author":{"gitId":"stanley-1"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":130,"author":{"gitId":"david-eom"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":131,"author":{"gitId":"david-eom"},"content":"    @Test","lastModifiedDate":"2021-10-08"},{"lineNumber":132,"author":{"gitId":"david-eom"},"content":"    public void toModelType_invalidTelegram_throwsIllegalValueException() {","lastModifiedDate":"2021-10-08"},{"lineNumber":133,"author":{"gitId":"david-eom"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(","lastModifiedDate":"2021-10-08"},{"lineNumber":134,"author":{"gitId":"Zacchua"},"content":"                VALID_NAME, VALID_PHONE, VALID_REMARK, VALID_TAGS, VALID_PROFILE_PIC, VALID_FACEBOOK, VALID_INSTAGRAM,","lastModifiedDate":"2021-10-26"},{"lineNumber":135,"author":{"gitId":"bnjmnt4n"},"content":"                INVALID_TELEGRAM, VALID_TIKTOK, VALID_TWITTER, VALID_DATES","lastModifiedDate":"2021-10-21"},{"lineNumber":136,"author":{"gitId":"david-eom"},"content":"        );","lastModifiedDate":"2021-10-08"},{"lineNumber":137,"author":{"gitId":"david-eom"},"content":"        String expectedMessage \u003d Telegram.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2021-10-08"},{"lineNumber":138,"author":{"gitId":"david-eom"},"content":"        Assert.assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2021-10-08"},{"lineNumber":139,"author":{"gitId":"david-eom"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":140,"author":{"gitId":"Zacchua"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":141,"author":{"gitId":"Zacchua"},"content":"    @Test","lastModifiedDate":"2021-10-14"},{"lineNumber":142,"author":{"gitId":"Zacchua"},"content":"    public void toModelType_invalidTiktok_throwsIllegalValueException() {","lastModifiedDate":"2021-10-14"},{"lineNumber":143,"author":{"gitId":"Zacchua"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(","lastModifiedDate":"2021-10-14"},{"lineNumber":144,"author":{"gitId":"Zacchua"},"content":"                VALID_NAME, VALID_PHONE, VALID_REMARK, VALID_TAGS, VALID_PROFILE_PIC,","lastModifiedDate":"2021-10-26"},{"lineNumber":145,"author":{"gitId":"Zacchua"},"content":"                VALID_FACEBOOK, VALID_INSTAGRAM,","lastModifiedDate":"2021-10-27"},{"lineNumber":146,"author":{"gitId":"bnjmnt4n"},"content":"                VALID_TELEGRAM, INVALID_TIKTOK, VALID_TWITTER, VALID_DATES","lastModifiedDate":"2021-10-23"},{"lineNumber":147,"author":{"gitId":"Zacchua"},"content":"        );","lastModifiedDate":"2021-10-14"},{"lineNumber":148,"author":{"gitId":"Zacchua"},"content":"        String expectedMessage \u003d TikTok.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2021-10-14"},{"lineNumber":149,"author":{"gitId":"Zacchua"},"content":"        Assert.assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2021-10-14"},{"lineNumber":150,"author":{"gitId":"Zacchua"},"content":"    }","lastModifiedDate":"2021-10-14"},{"lineNumber":151,"author":{"gitId":"Zacchua"},"content":"","lastModifiedDate":"2021-10-14"},{"lineNumber":152,"author":{"gitId":"Zacchua"},"content":"    @Test","lastModifiedDate":"2021-10-14"},{"lineNumber":153,"author":{"gitId":"Zacchua"},"content":"    public void toModelType_invalidTwitter_throwsIllegalValueException() {","lastModifiedDate":"2021-10-14"},{"lineNumber":154,"author":{"gitId":"Zacchua"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(","lastModifiedDate":"2021-10-14"},{"lineNumber":155,"author":{"gitId":"Zacchua"},"content":"                VALID_NAME, VALID_PHONE, VALID_REMARK, VALID_TAGS, VALID_PROFILE_PIC,","lastModifiedDate":"2021-10-26"},{"lineNumber":156,"author":{"gitId":"Zacchua"},"content":"                VALID_FACEBOOK, VALID_INSTAGRAM,","lastModifiedDate":"2021-10-27"},{"lineNumber":157,"author":{"gitId":"bnjmnt4n"},"content":"                VALID_TELEGRAM, VALID_TIKTOK, INVALID_TWITTER, VALID_DATES","lastModifiedDate":"2021-10-23"},{"lineNumber":158,"author":{"gitId":"Zacchua"},"content":"        );","lastModifiedDate":"2021-10-14"},{"lineNumber":159,"author":{"gitId":"Zacchua"},"content":"        String expectedMessage \u003d Twitter.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2021-10-14"},{"lineNumber":160,"author":{"gitId":"Zacchua"},"content":"        Assert.assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2021-10-14"},{"lineNumber":161,"author":{"gitId":"Zacchua"},"content":"    }","lastModifiedDate":"2021-10-14"},{"lineNumber":162,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"Zacchua":38,"EssWhyy":1,"bnjmnt4n":14,"david-eom":43,"-":45,"stanley-1":21}},{"path":"src/test/java/socialite/storage/JsonAddressBookStorageTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"david-eom"},"content":"package socialite.storage;","lastModifiedDate":"2021-10-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"david-eom"},"content":"import socialite.commons.exceptions.DataConversionException;","lastModifiedDate":"2021-10-08"},{"lineNumber":14,"author":{"gitId":"david-eom"},"content":"import socialite.model.AddressBook;","lastModifiedDate":"2021-10-08"},{"lineNumber":15,"author":{"gitId":"david-eom"},"content":"import socialite.model.ReadOnlyAddressBook;","lastModifiedDate":"2021-10-08"},{"lineNumber":16,"author":{"gitId":"david-eom"},"content":"import socialite.testutil.Assert;","lastModifiedDate":"2021-10-08"},{"lineNumber":17,"author":{"gitId":"david-eom"},"content":"import socialite.testutil.TypicalPersons;","lastModifiedDate":"2021-10-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class JsonAddressBookStorageTest {","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"JsonAddressBookStorageTest\");","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public Path testFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public void readAddressBook_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":27,"author":{"gitId":"david-eom"},"content":"        Assert.assertThrows(NullPointerException.class, () -\u003e readAddressBook(null));","lastModifiedDate":"2021-10-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private java.util.Optional\u003cReadOnlyAddressBook\u003e readAddressBook(String filePath) throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        return new JsonAddressBookStorage(Paths.get(filePath)).readAddressBook(addToTestDataPathIfNotNull(filePath));","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private Path addToTestDataPathIfNotNull(String prefsFileInTestDataFolder) {","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        return prefsFileInTestDataFolder !\u003d null","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"                ? TEST_DATA_FOLDER.resolve(prefsFileInTestDataFolder)","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"                : null;","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public void read_missingFile_emptyResult() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        assertFalse(readAddressBook(\"NonExistentFile.json\").isPresent());","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public void read_notJsonFormat_exceptionThrown() {","lastModifiedDate":"2019-03-23"},{"lineNumber":47,"author":{"gitId":"david-eom"},"content":"        Assert.assertThrows(DataConversionException.class, () -\u003e readAddressBook(\"notJsonFormatAddressBook.json\"));","lastModifiedDate":"2021-10-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public void readAddressBook_invalidPersonAddressBook_throwDataConversionException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":52,"author":{"gitId":"david-eom"},"content":"        Assert.assertThrows(DataConversionException.class, () -\u003e readAddressBook(\"invalidPersonAddressBook.json\"));","lastModifiedDate":"2021-10-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public void readAddressBook_invalidAndValidPersonAddressBook_throwDataConversionException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":57,"author":{"gitId":"david-eom"},"content":"        Assert.assertThrows(DataConversionException.class, ()","lastModifiedDate":"2021-10-09"},{"lineNumber":58,"author":{"gitId":"david-eom"},"content":"            -\u003e readAddressBook(\"invalidAndValidPersonAddressBook.json\"));","lastModifiedDate":"2021-10-09"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public void readAndSaveAddressBook_allInOrder_success() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        Path filePath \u003d testFolder.resolve(\"TempAddressBook.json\");","lastModifiedDate":"2019-04-25"},{"lineNumber":64,"author":{"gitId":"david-eom"},"content":"        AddressBook original \u003d TypicalPersons.getTypicalAddressBook();","lastModifiedDate":"2021-10-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        JsonAddressBookStorage jsonAddressBookStorage \u003d new JsonAddressBookStorage(filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        // Save in new file and read back","lastModifiedDate":"2018-08-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        jsonAddressBookStorage.saveAddressBook(original, filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        ReadOnlyAddressBook readBack \u003d jsonAddressBookStorage.readAddressBook(filePath).get();","lastModifiedDate":"2018-08-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertEquals(original, new AddressBook(readBack));","lastModifiedDate":"2018-08-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        // Modify data, overwrite exiting file, and read back","lastModifiedDate":"2018-08-13"},{"lineNumber":73,"author":{"gitId":"david-eom"},"content":"        original.addPerson(TypicalPersons.HOON);","lastModifiedDate":"2021-10-08"},{"lineNumber":74,"author":{"gitId":"david-eom"},"content":"        original.removePerson(TypicalPersons.ALICE);","lastModifiedDate":"2021-10-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        jsonAddressBookStorage.saveAddressBook(original, filePath);","lastModifiedDate":"2018-08-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        readBack \u003d jsonAddressBookStorage.readAddressBook(filePath).get();","lastModifiedDate":"2018-08-13"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        assertEquals(original, new AddressBook(readBack));","lastModifiedDate":"2018-08-13"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        // Save and read without specifying file path","lastModifiedDate":"2018-08-13"},{"lineNumber":80,"author":{"gitId":"david-eom"},"content":"        original.addPerson(TypicalPersons.IDA);","lastModifiedDate":"2021-10-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        jsonAddressBookStorage.saveAddressBook(original); // file path not specified","lastModifiedDate":"2018-08-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        readBack \u003d jsonAddressBookStorage.readAddressBook().get(); // file path not specified","lastModifiedDate":"2018-08-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        assertEquals(original, new AddressBook(readBack));","lastModifiedDate":"2018-08-13"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    public void saveAddressBook_nullAddressBook_throwsNullPointerException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":89,"author":{"gitId":"david-eom"},"content":"        Assert.assertThrows(NullPointerException.class, () -\u003e saveAddressBook(null, \"SomeFile.json\"));","lastModifiedDate":"2021-10-08"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     * Saves {@code addressBook} at the specified {@code filePath}.","lastModifiedDate":"2018-08-13"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    private void saveAddressBook(ReadOnlyAddressBook addressBook, String filePath) {","lastModifiedDate":"2018-08-13"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-08-13"},{"lineNumber":97,"author":{"gitId":"-"},"content":"            new JsonAddressBookStorage(Paths.get(filePath))","lastModifiedDate":"2018-08-13"},{"lineNumber":98,"author":{"gitId":"-"},"content":"                    .saveAddressBook(addressBook, addToTestDataPathIfNotNull(filePath));","lastModifiedDate":"2018-08-13"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2018-08-13"},{"lineNumber":100,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"There should not be an error writing to the file.\", ioe);","lastModifiedDate":"2018-08-13"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    public void saveAddressBook_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":106,"author":{"gitId":"david-eom"},"content":"        Assert.assertThrows(NullPointerException.class, () -\u003e saveAddressBook(new AddressBook(), null));","lastModifiedDate":"2021-10-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":108,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"david-eom":17,"-":91}},{"path":"src/test/java/socialite/storage/JsonSerializableAddressBookTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"david-eom"},"content":"package socialite.storage;","lastModifiedDate":"2021-10-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"david-eom"},"content":"import socialite.commons.exceptions.IllegalValueException;","lastModifiedDate":"2021-10-08"},{"lineNumber":11,"author":{"gitId":"david-eom"},"content":"import socialite.commons.util.JsonUtil;","lastModifiedDate":"2021-10-08"},{"lineNumber":12,"author":{"gitId":"david-eom"},"content":"import socialite.model.AddressBook;","lastModifiedDate":"2021-10-08"},{"lineNumber":13,"author":{"gitId":"david-eom"},"content":"import socialite.testutil.Assert;","lastModifiedDate":"2021-10-08"},{"lineNumber":14,"author":{"gitId":"david-eom"},"content":"import socialite.testutil.TypicalPersons;","lastModifiedDate":"2021-10-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class JsonSerializableAddressBookTest {","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"JsonSerializableAddressBookTest\");","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private static final Path TYPICAL_PERSONS_FILE \u003d TEST_DATA_FOLDER.resolve(\"typicalPersonsAddressBook.json\");","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private static final Path INVALID_PERSON_FILE \u003d TEST_DATA_FOLDER.resolve(\"invalidPersonAddressBook.json\");","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final Path DUPLICATE_PERSON_FILE \u003d TEST_DATA_FOLDER.resolve(\"duplicatePersonAddressBook.json\");","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void toModelType_typicalPersonsFile_success() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        JsonSerializableAddressBook dataFromFile \u003d JsonUtil.readJsonFile(TYPICAL_PERSONS_FILE,","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"                JsonSerializableAddressBook.class).get();","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        AddressBook addressBookFromFile \u003d dataFromFile.toModelType();","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        AddressBook typicalPersonsAddressBook \u003d TypicalPersons.getTypicalAddressBook();","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertEquals(addressBookFromFile, typicalPersonsAddressBook);","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public void toModelType_invalidPersonFile_throwsIllegalValueException() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        JsonSerializableAddressBook dataFromFile \u003d JsonUtil.readJsonFile(INVALID_PERSON_FILE,","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"                JsonSerializableAddressBook.class).get();","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"david-eom"},"content":"        Assert.assertThrows(IllegalValueException.class, dataFromFile::toModelType);","lastModifiedDate":"2021-10-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public void toModelType_duplicatePersons_throwsIllegalValueException() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        JsonSerializableAddressBook dataFromFile \u003d JsonUtil.readJsonFile(DUPLICATE_PERSON_FILE,","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"                JsonSerializableAddressBook.class).get();","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"david-eom"},"content":"        Assert.assertThrows(IllegalValueException.class, JsonSerializableAddressBook.MESSAGE_DUPLICATE_PERSON,","lastModifiedDate":"2021-10-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"                dataFromFile::toModelType);","lastModifiedDate":"2019-03-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"david-eom":8,"-":38}},{"path":"src/test/java/socialite/storage/JsonUserPrefsStorageTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"david-eom"},"content":"package socialite.storage;","lastModifiedDate":"2021-10-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":14,"author":{"gitId":"david-eom"},"content":"import socialite.commons.core.GuiSettings;","lastModifiedDate":"2021-10-08"},{"lineNumber":15,"author":{"gitId":"david-eom"},"content":"import socialite.commons.exceptions.DataConversionException;","lastModifiedDate":"2021-10-08"},{"lineNumber":16,"author":{"gitId":"david-eom"},"content":"import socialite.model.UserPrefs;","lastModifiedDate":"2021-10-08"},{"lineNumber":17,"author":{"gitId":"david-eom"},"content":"import socialite.testutil.Assert;","lastModifiedDate":"2021-10-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class JsonUserPrefsStorageTest {","lastModifiedDate":"2016-10-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"JsonUserPrefsStorageTest\");","lastModifiedDate":"2018-04-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public Path testFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void readUserPrefs_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":28,"author":{"gitId":"david-eom"},"content":"        Assert.assertThrows(NullPointerException.class, () -\u003e readUserPrefs(null));","lastModifiedDate":"2021-10-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private Optional\u003cUserPrefs\u003e readUserPrefs(String userPrefsFileInTestDataFolder) throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        Path prefsFilePath \u003d addToTestDataPathIfNotNull(userPrefsFileInTestDataFolder);","lastModifiedDate":"2018-04-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        return new JsonUserPrefsStorage(prefsFilePath).readUserPrefs(prefsFilePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void readUserPrefs_missingFile_emptyResult() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertFalse(readUserPrefs(\"NonExistentFile.json\").isPresent());","lastModifiedDate":"2016-09-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public void readUserPrefs_notJsonFormat_exceptionThrown() {","lastModifiedDate":"2019-03-23"},{"lineNumber":43,"author":{"gitId":"david-eom"},"content":"        Assert.assertThrows(DataConversionException.class, () -\u003e readUserPrefs(\"NotJsonFormatUserPrefs.json\"));","lastModifiedDate":"2021-10-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    private Path addToTestDataPathIfNotNull(String userPrefsFileInTestDataFolder) {","lastModifiedDate":"2018-04-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        return userPrefsFileInTestDataFolder !\u003d null","lastModifiedDate":"2016-09-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"                ? TEST_DATA_FOLDER.resolve(userPrefsFileInTestDataFolder)","lastModifiedDate":"2018-04-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"                : null;","lastModifiedDate":"2016-09-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public void readUserPrefs_fileInOrder_successfullyRead() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        UserPrefs expected \u003d getTypicalUserPrefs();","lastModifiedDate":"2017-02-25"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        UserPrefs actual \u003d readUserPrefs(\"TypicalUserPref.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public void readUserPrefs_valuesMissingFromFile_defaultValuesUsed() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        UserPrefs actual \u003d readUserPrefs(\"EmptyUserPrefs.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertEquals(new UserPrefs(), actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public void readUserPrefs_extraValuesInFile_extraValuesIgnored() throws DataConversionException {","lastModifiedDate":"2016-09-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        UserPrefs expected \u003d getTypicalUserPrefs();","lastModifiedDate":"2017-02-25"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        UserPrefs actual \u003d readUserPrefs(\"ExtraValuesUserPref.json\").get();","lastModifiedDate":"2016-09-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertEquals(expected, actual);","lastModifiedDate":"2016-09-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    private UserPrefs getTypicalUserPrefs() {","lastModifiedDate":"2017-02-25"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2017-02-25"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(new GuiSettings(1000, 500, 300, 100));","lastModifiedDate":"2018-11-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        userPrefs.setAddressBookFilePath(Paths.get(\"addressbook.json\"));","lastModifiedDate":"2018-11-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        return userPrefs;","lastModifiedDate":"2017-02-25"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-25"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public void savePrefs_nullPrefs_throwsNullPointerException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":82,"author":{"gitId":"david-eom"},"content":"        Assert.assertThrows(NullPointerException.class, () -\u003e saveUserPrefs(null, \"SomeFile.json\"));","lastModifiedDate":"2021-10-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public void saveUserPrefs_nullFilePath_throwsNullPointerException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":87,"author":{"gitId":"david-eom"},"content":"        Assert.assertThrows(NullPointerException.class, () -\u003e saveUserPrefs(new UserPrefs(), null));","lastModifiedDate":"2021-10-08"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-15"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     * Saves {@code userPrefs} at the specified {@code prefsFileInTestDataFolder} filepath.","lastModifiedDate":"2017-08-15"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-15"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    private void saveUserPrefs(UserPrefs userPrefs, String prefsFileInTestDataFolder) {","lastModifiedDate":"2017-08-15"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-08-15"},{"lineNumber":95,"author":{"gitId":"-"},"content":"            new JsonUserPrefsStorage(addToTestDataPathIfNotNull(prefsFileInTestDataFolder))","lastModifiedDate":"2016-10-12"},{"lineNumber":96,"author":{"gitId":"-"},"content":"                    .saveUserPrefs(userPrefs);","lastModifiedDate":"2016-10-12"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2017-08-15"},{"lineNumber":98,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"There should not be an error writing to the file\", ioe);","lastModifiedDate":"2017-08-15"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-08-15"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-09-24"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    public void saveUserPrefs_allInOrder_success() throws DataConversionException, IOException {","lastModifiedDate":"2016-09-24"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        UserPrefs original \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        original.setGuiSettings(new GuiSettings(1200, 200, 0, 2));","lastModifiedDate":"2018-11-27"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        Path pefsFilePath \u003d testFolder.resolve(\"TempPrefs.json\");","lastModifiedDate":"2019-04-25"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage jsonUserPrefsStorage \u003d new JsonUserPrefsStorage(pefsFilePath);","lastModifiedDate":"2016-10-01"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        //Try writing when the file doesn\u0027t exist","lastModifiedDate":"2016-09-24"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        jsonUserPrefsStorage.saveUserPrefs(original);","lastModifiedDate":"2016-10-01"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        UserPrefs readBack \u003d jsonUserPrefsStorage.readUserPrefs().get();","lastModifiedDate":"2016-10-01"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        assertEquals(original, readBack);","lastModifiedDate":"2016-09-24"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        //Try saving when the file exists","lastModifiedDate":"2016-09-24"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        original.setGuiSettings(new GuiSettings(5, 5, 5, 5));","lastModifiedDate":"2018-11-27"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        jsonUserPrefsStorage.saveUserPrefs(original);","lastModifiedDate":"2016-10-01"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        readBack \u003d jsonUserPrefsStorage.readUserPrefs().get();","lastModifiedDate":"2016-10-01"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        assertEquals(original, readBack);","lastModifiedDate":"2016-09-24"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":123,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-24"}],"authorContributionMap":{"david-eom":9,"-":114}},{"path":"src/test/java/socialite/storage/StorageManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"david-eom"},"content":"package socialite.storage;","lastModifiedDate":"2021-10-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":12,"author":{"gitId":"david-eom"},"content":"import socialite.commons.core.GuiSettings;","lastModifiedDate":"2021-10-08"},{"lineNumber":13,"author":{"gitId":"david-eom"},"content":"import socialite.model.AddressBook;","lastModifiedDate":"2021-10-08"},{"lineNumber":14,"author":{"gitId":"david-eom"},"content":"import socialite.model.ReadOnlyAddressBook;","lastModifiedDate":"2021-10-08"},{"lineNumber":15,"author":{"gitId":"david-eom"},"content":"import socialite.model.UserPrefs;","lastModifiedDate":"2021-10-08"},{"lineNumber":16,"author":{"gitId":"david-eom"},"content":"import socialite.testutil.TypicalPersons;","lastModifiedDate":"2021-10-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class StorageManagerTest {","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public Path testFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    private StorageManager storageManager;","lastModifiedDate":"2017-04-01"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2016-10-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        JsonAddressBookStorage addressBookStorage \u003d new JsonAddressBookStorage(getTempFilePath(\"ab\"));","lastModifiedDate":"2018-11-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(getTempFilePath(\"prefs\"));","lastModifiedDate":"2017-02-25"},{"lineNumber":29,"author":{"gitId":"david-eom"},"content":"        JsonCommandHistoryStorage commandHistoryStorage \u003d new JsonCommandHistoryStorage(getTempFilePath(\"ch\"));","lastModifiedDate":"2021-10-21"},{"lineNumber":30,"author":{"gitId":"Zacchua"},"content":"        ProfilePictureStorage profilePictureStorage \u003d ProfilePictureStorageManager.getInstance();","lastModifiedDate":"2021-10-26"},{"lineNumber":31,"author":{"gitId":"Zacchua"},"content":"        storageManager \u003d new StorageManager(","lastModifiedDate":"2021-10-26"},{"lineNumber":32,"author":{"gitId":"Zacchua"},"content":"                addressBookStorage, userPrefsStorage, commandHistoryStorage, profilePictureStorage);","lastModifiedDate":"2021-10-26"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private Path getTempFilePath(String fileName) {","lastModifiedDate":"2018-04-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        return testFolder.resolve(fileName);","lastModifiedDate":"2019-04-25"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-16"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public void prefsReadSave() throws Exception {","lastModifiedDate":"2016-10-16"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2016-09-28"},{"lineNumber":42,"author":{"gitId":"-"},"content":"         * Note: This is an integration test that verifies the StorageManager is properly wired to the","lastModifiedDate":"2016-09-28"},{"lineNumber":43,"author":{"gitId":"-"},"content":"         * {@link JsonUserPrefsStorage} class.","lastModifiedDate":"2016-10-01"},{"lineNumber":44,"author":{"gitId":"-"},"content":"         * More extensive testing of UserPref saving/reading is done in {@link JsonUserPrefsStorageTest} class.","lastModifiedDate":"2016-10-01"},{"lineNumber":45,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-09-28"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        UserPrefs original \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        original.setGuiSettings(new GuiSettings(300, 600, 4, 6));","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        storageManager.saveUserPrefs(original);","lastModifiedDate":"2016-09-28"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        UserPrefs retrieved \u003d storageManager.readUserPrefs().get();","lastModifiedDate":"2016-09-28"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertEquals(original, retrieved);","lastModifiedDate":"2016-09-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public void addressBookReadSave() throws Exception {","lastModifiedDate":"2016-09-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2016-10-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"         * Note: This is an integration test that verifies the StorageManager is properly wired to the","lastModifiedDate":"2016-10-16"},{"lineNumber":57,"author":{"gitId":"-"},"content":"         * {@link JsonAddressBookStorage} class.","lastModifiedDate":"2018-11-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"         * More extensive testing of UserPref saving/reading is done in {@link JsonAddressBookStorageTest} class.","lastModifiedDate":"2018-11-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-10-16"},{"lineNumber":60,"author":{"gitId":"david-eom"},"content":"        AddressBook original \u003d TypicalPersons.getTypicalAddressBook();","lastModifiedDate":"2021-10-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        storageManager.saveAddressBook(original);","lastModifiedDate":"2016-09-28"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        ReadOnlyAddressBook retrieved \u003d storageManager.readAddressBook().get();","lastModifiedDate":"2016-09-28"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertEquals(original, new AddressBook(retrieved));","lastModifiedDate":"2016-09-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-10-01"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public void getAddressBookFilePath() {","lastModifiedDate":"2016-10-01"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertNotNull(storageManager.getAddressBookFilePath());","lastModifiedDate":"2016-10-01"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-01"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-01"},{"lineNumber":71,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"Zacchua":3,"david-eom":8,"-":60}},{"path":"src/test/java/socialite/testutil/AddressBookBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"david-eom"},"content":"package socialite.testutil;","lastModifiedDate":"2021-10-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"david-eom"},"content":"import socialite.model.AddressBook;","lastModifiedDate":"2021-10-08"},{"lineNumber":4,"author":{"gitId":"david-eom"},"content":"import socialite.model.person.Person;","lastModifiedDate":"2021-10-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * A utility class to help with building Addressbook objects.","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Example usage: \u003cbr\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":" *     {@code AddressBook ab \u003d new AddressBookBuilder().withPerson(\"John\", \"Doe\").build();}","lastModifiedDate":"2018-03-29"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class AddressBookBuilder {","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    private AddressBook addressBook;","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public AddressBookBuilder() {","lastModifiedDate":"2017-05-31"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        addressBook \u003d new AddressBook();","lastModifiedDate":"2017-05-31"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public AddressBookBuilder(AddressBook addressBook) {","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        this.addressBook \u003d addressBook;","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Adds a new {@code Person} to the {@code AddressBook} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public AddressBookBuilder withPerson(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        addressBook.addPerson(person);","lastModifiedDate":"2016-09-01"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public AddressBook build() {","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        return addressBook;","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"david-eom":3,"-":31}},{"path":"src/test/java/socialite/testutil/Assert.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"david-eom"},"content":"package socialite.testutil;","lastModifiedDate":"2021-10-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-17"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Assertions;","lastModifiedDate":"2019-03-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.function.Executable;","lastModifiedDate":"2019-03-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-03-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-07-17"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * A set of assertion methods useful for writing tests.","lastModifiedDate":"2017-07-17"},{"lineNumber":8,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-07-17"},{"lineNumber":9,"author":{"gitId":"-"},"content":"public class Assert {","lastModifiedDate":"2017-07-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"     * Asserts that the {@code executable} throws the {@code expectedType} Exception.","lastModifiedDate":"2019-03-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"     * This is a wrapper method that invokes {@link Assertions#assertThrows(Class, Executable)}, to maintain consistency","lastModifiedDate":"2019-03-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"     * with our custom {@link #assertThrows(Class, String, Executable)} method.","lastModifiedDate":"2019-03-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"     * To standardize API calls in this project, users should use this method instead of","lastModifiedDate":"2019-03-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"     * {@link Assertions#assertThrows(Class, Executable)}.","lastModifiedDate":"2019-03-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    public static void assertThrows(Class\u003c? extends Throwable\u003e expectedType, Executable executable) {","lastModifiedDate":"2019-03-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        Assertions.assertThrows(expectedType, executable);","lastModifiedDate":"2019-03-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-02-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-02-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-02-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Asserts that the {@code executable} throws the {@code expectedType} Exception with the {@code expectedMessage}.","lastModifiedDate":"2019-03-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * If there\u0027s no need for the verification of the exception\u0027s error message, call","lastModifiedDate":"2018-02-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * {@link #assertThrows(Class, Executable)} instead.","lastModifiedDate":"2019-03-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2019-03-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * @see #assertThrows(Class, Executable)","lastModifiedDate":"2019-03-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-02-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public static void assertThrows(Class\u003c? extends Throwable\u003e expectedType, String expectedMessage,","lastModifiedDate":"2019-03-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            Executable executable) {","lastModifiedDate":"2019-03-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        Throwable thrownException \u003d Assertions.assertThrows(expectedType, executable);","lastModifiedDate":"2019-03-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        Assertions.assertEquals(expectedMessage, thrownException.getMessage());","lastModifiedDate":"2019-03-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-17"},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-07-17"}],"authorContributionMap":{"david-eom":1,"-":33}},{"path":"src/test/java/socialite/testutil/EditPersonDescriptorBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"david-eom"},"content":"package socialite.testutil;","lastModifiedDate":"2021-10-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-12-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2017-12-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2017-12-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":7,"author":{"gitId":"david-eom"},"content":"import socialite.logic.commands.EditCommand;","lastModifiedDate":"2021-10-09"},{"lineNumber":8,"author":{"gitId":"david-eom"},"content":"import socialite.model.person.Name;","lastModifiedDate":"2021-10-08"},{"lineNumber":9,"author":{"gitId":"david-eom"},"content":"import socialite.model.person.Person;","lastModifiedDate":"2021-10-08"},{"lineNumber":10,"author":{"gitId":"david-eom"},"content":"import socialite.model.person.Phone;","lastModifiedDate":"2021-10-08"},{"lineNumber":11,"author":{"gitId":"david-eom"},"content":"import socialite.model.tag.Tag;","lastModifiedDate":"2021-10-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-05-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * A utility class to help with building EditPersonDescriptor objects.","lastModifiedDate":"2017-05-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-05-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class EditPersonDescriptorBuilder {","lastModifiedDate":"2017-05-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":18,"author":{"gitId":"david-eom"},"content":"    private EditCommand.EditPersonDescriptor descriptor;","lastModifiedDate":"2021-10-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder() {","lastModifiedDate":"2017-05-05"},{"lineNumber":21,"author":{"gitId":"david-eom"},"content":"        descriptor \u003d new EditCommand.EditPersonDescriptor();","lastModifiedDate":"2021-10-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":24,"author":{"gitId":"david-eom"},"content":"    public EditPersonDescriptorBuilder(EditCommand.EditPersonDescriptor descriptor) {","lastModifiedDate":"2021-10-08"},{"lineNumber":25,"author":{"gitId":"david-eom"},"content":"        this.descriptor \u003d new EditCommand.EditPersonDescriptor(descriptor);","lastModifiedDate":"2021-10-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * Returns an {@code EditPersonDescriptor} with fields containing {@code person}\u0027s details","lastModifiedDate":"2017-06-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":32,"author":{"gitId":"david-eom"},"content":"        descriptor \u003d new EditCommand.EditPersonDescriptor();","lastModifiedDate":"2021-10-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        descriptor.setName(person.getName());","lastModifiedDate":"2017-06-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        descriptor.setPhone(person.getPhone());","lastModifiedDate":"2017-06-21"},{"lineNumber":35,"author":{"gitId":"Zacchua"},"content":"        descriptor.setRemark(person.getRemark());","lastModifiedDate":"2021-10-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        descriptor.setTags(person.getTags());","lastModifiedDate":"2017-06-21"},{"lineNumber":37,"author":{"gitId":"stanley-1"},"content":"        descriptor.setFacebook(person.getFacebook());","lastModifiedDate":"2021-10-11"},{"lineNumber":38,"author":{"gitId":"stanley-1"},"content":"        descriptor.setInstagram(person.getInstagram());","lastModifiedDate":"2021-10-11"},{"lineNumber":39,"author":{"gitId":"david-eom"},"content":"        descriptor.setTelegram(person.getTelegram());","lastModifiedDate":"2021-10-09"},{"lineNumber":40,"author":{"gitId":"Zacchua"},"content":"        descriptor.setTikTok(person.getTiktok());","lastModifiedDate":"2021-10-12"},{"lineNumber":41,"author":{"gitId":"Zacchua"},"content":"        descriptor.setTwitter(person.getTwitter());","lastModifiedDate":"2021-10-11"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * Sets the {@code Name} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withName(String name) {","lastModifiedDate":"2017-08-15"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        descriptor.setName(new Name(name));","lastModifiedDate":"2017-12-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * Sets the {@code Phone} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withPhone(String phone) {","lastModifiedDate":"2017-08-15"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        descriptor.setPhone(new Phone(phone));","lastModifiedDate":"2017-12-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     * Parses the {@code tags} into a {@code Set\u003cTag\u003e} and set it to the {@code EditPersonDescriptor}","lastModifiedDate":"2017-07-26"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withTags(String... tags) {","lastModifiedDate":"2017-08-15"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e tagSet \u003d Stream.of(tags).map(Tag::new).collect(Collectors.toSet());","lastModifiedDate":"2017-12-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        descriptor.setTags(tagSet);","lastModifiedDate":"2017-12-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":70,"author":{"gitId":"david-eom"},"content":"    public EditCommand.EditPersonDescriptor build() {","lastModifiedDate":"2021-10-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        return descriptor;","lastModifiedDate":"2017-05-05"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":73,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-05"}],"authorContributionMap":{"Zacchua":3,"david-eom":13,"-":55,"stanley-1":2}},{"path":"src/test/java/socialite/testutil/PersonBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"david-eom"},"content":"package socialite.testutil;","lastModifiedDate":"2021-10-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-12-20"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-04-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":6,"author":{"gitId":"stanley-1"},"content":"import socialite.model.handle.Facebook;","lastModifiedDate":"2021-10-11"},{"lineNumber":7,"author":{"gitId":"stanley-1"},"content":"import socialite.model.handle.Instagram;","lastModifiedDate":"2021-10-11"},{"lineNumber":8,"author":{"gitId":"david-eom"},"content":"import socialite.model.handle.Telegram;","lastModifiedDate":"2021-10-08"},{"lineNumber":9,"author":{"gitId":"Zacchua"},"content":"import socialite.model.handle.TikTok;","lastModifiedDate":"2021-10-12"},{"lineNumber":10,"author":{"gitId":"Zacchua"},"content":"import socialite.model.handle.Twitter;","lastModifiedDate":"2021-10-11"},{"lineNumber":11,"author":{"gitId":"bnjmnt4n"},"content":"import socialite.model.person.Date;","lastModifiedDate":"2021-10-23"},{"lineNumber":12,"author":{"gitId":"bnjmnt4n"},"content":"import socialite.model.person.Dates;","lastModifiedDate":"2021-10-21"},{"lineNumber":13,"author":{"gitId":"david-eom"},"content":"import socialite.model.person.Name;","lastModifiedDate":"2021-10-08"},{"lineNumber":14,"author":{"gitId":"david-eom"},"content":"import socialite.model.person.Person;","lastModifiedDate":"2021-10-08"},{"lineNumber":15,"author":{"gitId":"david-eom"},"content":"import socialite.model.person.Phone;","lastModifiedDate":"2021-10-08"},{"lineNumber":16,"author":{"gitId":"Zacchua"},"content":"import socialite.model.person.ProfilePicture;","lastModifiedDate":"2021-10-26"},{"lineNumber":17,"author":{"gitId":"EssWhyy"},"content":"import socialite.model.person.Remark;","lastModifiedDate":"2021-10-12"},{"lineNumber":18,"author":{"gitId":"david-eom"},"content":"import socialite.model.tag.Tag;","lastModifiedDate":"2021-10-08"},{"lineNumber":19,"author":{"gitId":"david-eom"},"content":"import socialite.model.util.SampleDataUtil;","lastModifiedDate":"2021-10-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * A utility class to help with building Person objects.","lastModifiedDate":"2017-04-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-03"},{"lineNumber":24,"author":{"gitId":"-"},"content":"public class PersonBuilder {","lastModifiedDate":"2016-09-03"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_NAME \u003d \"Amy Bee\";","lastModifiedDate":"2020-12-18"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_PHONE \u003d \"85355255\";","lastModifiedDate":"2017-04-05"},{"lineNumber":27,"author":{"gitId":"stanley-1"},"content":"    public static final String DEFAULT_FACEBOOK \u003d \"amy.bee\";","lastModifiedDate":"2021-10-11"},{"lineNumber":28,"author":{"gitId":"stanley-1"},"content":"    public static final String DEFAULT_INSTAGRAM \u003d \"amy.bee\";","lastModifiedDate":"2021-10-11"},{"lineNumber":29,"author":{"gitId":"david-eom"},"content":"    public static final String DEFAULT_REMARK \u003d \"remark\";","lastModifiedDate":"2021-10-22"},{"lineNumber":30,"author":{"gitId":"david-eom"},"content":"    public static final String DEFAULT_TELEGRAM \u003d \"amy_bee\";","lastModifiedDate":"2021-10-08"},{"lineNumber":31,"author":{"gitId":"Zacchua"},"content":"    public static final String DEFAULT_TWITTER \u003d \"amy_bee\";","lastModifiedDate":"2021-10-11"},{"lineNumber":32,"author":{"gitId":"Zacchua"},"content":"    public static final String DEFAULT_TIKTOK \u003d \"amy.bee\";","lastModifiedDate":"2021-10-12"},{"lineNumber":33,"author":{"gitId":"Zacchua"},"content":"    public static final ProfilePicture DEFAULT_PROFILE_PIC \u003d ProfilePicture.DEFAULT_PICTURE;","lastModifiedDate":"2021-10-26"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private Name name;","lastModifiedDate":"2017-12-20"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private Phone phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":37,"author":{"gitId":"EssWhyy"},"content":"    private Remark remark;","lastModifiedDate":"2021-10-12"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private Set\u003cTag\u003e tags;","lastModifiedDate":"2017-12-20"},{"lineNumber":39,"author":{"gitId":"stanley-1"},"content":"    private Facebook facebook;","lastModifiedDate":"2021-10-11"},{"lineNumber":40,"author":{"gitId":"stanley-1"},"content":"    private Instagram instagram;","lastModifiedDate":"2021-10-11"},{"lineNumber":41,"author":{"gitId":"david-eom"},"content":"    private Telegram telegram;","lastModifiedDate":"2021-10-08"},{"lineNumber":42,"author":{"gitId":"Zacchua"},"content":"    private TikTok tiktok;","lastModifiedDate":"2021-10-12"},{"lineNumber":43,"author":{"gitId":"Zacchua"},"content":"    private Twitter twitter;","lastModifiedDate":"2021-10-12"},{"lineNumber":44,"author":{"gitId":"bnjmnt4n"},"content":"    private Dates dates;","lastModifiedDate":"2021-10-21"},{"lineNumber":45,"author":{"gitId":"Zacchua"},"content":"    private ProfilePicture profilePic;","lastModifiedDate":"2021-10-26"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * Creates a {@code PersonBuilder} with the default details.","lastModifiedDate":"2020-05-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public PersonBuilder() {","lastModifiedDate":"2017-08-15"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        name \u003d new Name(DEFAULT_NAME);","lastModifiedDate":"2017-12-20"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        phone \u003d new Phone(DEFAULT_PHONE);","lastModifiedDate":"2017-12-20"},{"lineNumber":53,"author":{"gitId":"EssWhyy"},"content":"        remark \u003d new Remark(DEFAULT_REMARK);","lastModifiedDate":"2021-10-12"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        tags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2018-03-26"},{"lineNumber":55,"author":{"gitId":"stanley-1"},"content":"        facebook \u003d new Facebook(DEFAULT_FACEBOOK);","lastModifiedDate":"2021-10-11"},{"lineNumber":56,"author":{"gitId":"stanley-1"},"content":"        instagram \u003d new Instagram(DEFAULT_INSTAGRAM);","lastModifiedDate":"2021-10-11"},{"lineNumber":57,"author":{"gitId":"david-eom"},"content":"        telegram \u003d new Telegram(DEFAULT_TELEGRAM);","lastModifiedDate":"2021-10-08"},{"lineNumber":58,"author":{"gitId":"Zacchua"},"content":"        tiktok \u003d new TikTok(DEFAULT_TIKTOK);","lastModifiedDate":"2021-10-12"},{"lineNumber":59,"author":{"gitId":"Zacchua"},"content":"        twitter \u003d new Twitter(DEFAULT_TWITTER);","lastModifiedDate":"2021-10-12"},{"lineNumber":60,"author":{"gitId":"bnjmnt4n"},"content":"        dates \u003d new Dates();","lastModifiedDate":"2021-10-21"},{"lineNumber":61,"author":{"gitId":"Zacchua"},"content":"        profilePic \u003d DEFAULT_PROFILE_PIC;","lastModifiedDate":"2021-10-26"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-11"},{"lineNumber":65,"author":{"gitId":"-"},"content":"     * Initializes the PersonBuilder with the data of {@code personToCopy}.","lastModifiedDate":"2016-12-11"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-11"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public PersonBuilder(Person personToCopy) {","lastModifiedDate":"2018-01-10"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        name \u003d personToCopy.getName();","lastModifiedDate":"2017-12-20"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        phone \u003d personToCopy.getPhone();","lastModifiedDate":"2017-12-20"},{"lineNumber":70,"author":{"gitId":"EssWhyy"},"content":"        remark \u003d personToCopy.getRemark();","lastModifiedDate":"2021-10-12"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        tags \u003d new HashSet\u003c\u003e(personToCopy.getTags());","lastModifiedDate":"2017-12-20"},{"lineNumber":72,"author":{"gitId":"stanley-1"},"content":"        facebook \u003d personToCopy.getFacebook();","lastModifiedDate":"2021-10-11"},{"lineNumber":73,"author":{"gitId":"stanley-1"},"content":"        instagram \u003d personToCopy.getInstagram();","lastModifiedDate":"2021-10-11"},{"lineNumber":74,"author":{"gitId":"david-eom"},"content":"        telegram \u003d personToCopy.getTelegram();","lastModifiedDate":"2021-10-08"},{"lineNumber":75,"author":{"gitId":"Zacchua"},"content":"        tiktok \u003d personToCopy.getTiktok();","lastModifiedDate":"2021-10-12"},{"lineNumber":76,"author":{"gitId":"Zacchua"},"content":"        twitter \u003d personToCopy.getTwitter();","lastModifiedDate":"2021-10-12"},{"lineNumber":77,"author":{"gitId":"bnjmnt4n"},"content":"        dates \u003d personToCopy.getDates();","lastModifiedDate":"2021-10-21"},{"lineNumber":78,"author":{"gitId":"Zacchua"},"content":"        profilePic \u003d personToCopy.getProfilePicture();","lastModifiedDate":"2021-10-26"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-11"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-11"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     * Sets the {@code Name} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    public PersonBuilder withName(String name) {","lastModifiedDate":"2017-08-15"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        this.name \u003d new Name(name);","lastModifiedDate":"2017-12-20"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":90,"author":{"gitId":"-"},"content":"     * Parses the {@code tags} into a {@code Set\u003cTag\u003e} and set it to the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    public PersonBuilder withTags(String ... tags) {","lastModifiedDate":"2017-08-15"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        this.tags \u003d SampleDataUtil.getTagSet(tags);","lastModifiedDate":"2017-12-20"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     * Sets the {@code Phone} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    public PersonBuilder withPhone(String phone) {","lastModifiedDate":"2017-08-15"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        this.phone \u003d new Phone(phone);","lastModifiedDate":"2017-12-20"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":104,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":105,"author":{"gitId":"EssWhyy"},"content":"    /**","lastModifiedDate":"2021-10-12"},{"lineNumber":106,"author":{"gitId":"EssWhyy"},"content":"     * Sets the {@code Remark} of the {@code Person} that we are building.","lastModifiedDate":"2021-10-12"},{"lineNumber":107,"author":{"gitId":"EssWhyy"},"content":"     */","lastModifiedDate":"2021-10-12"},{"lineNumber":108,"author":{"gitId":"EssWhyy"},"content":"    public PersonBuilder withRemark(String remark) {","lastModifiedDate":"2021-10-12"},{"lineNumber":109,"author":{"gitId":"EssWhyy"},"content":"        this.remark \u003d new Remark(remark);","lastModifiedDate":"2021-10-12"},{"lineNumber":110,"author":{"gitId":"EssWhyy"},"content":"        return this;","lastModifiedDate":"2021-10-12"},{"lineNumber":111,"author":{"gitId":"EssWhyy"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":112,"author":{"gitId":"david-eom"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":113,"author":{"gitId":"stanley-1"},"content":"    /**","lastModifiedDate":"2021-10-11"},{"lineNumber":114,"author":{"gitId":"stanley-1"},"content":"     * Sets the {@code Instagram} of the {@code Person} that we are building.","lastModifiedDate":"2021-10-11"},{"lineNumber":115,"author":{"gitId":"stanley-1"},"content":"     */","lastModifiedDate":"2021-10-11"},{"lineNumber":116,"author":{"gitId":"stanley-1"},"content":"    public PersonBuilder withInstagram(String instagram) {","lastModifiedDate":"2021-10-11"},{"lineNumber":117,"author":{"gitId":"stanley-1"},"content":"        this.instagram \u003d new Instagram(instagram);","lastModifiedDate":"2021-10-11"},{"lineNumber":118,"author":{"gitId":"stanley-1"},"content":"        return this;","lastModifiedDate":"2021-10-11"},{"lineNumber":119,"author":{"gitId":"stanley-1"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":120,"author":{"gitId":"stanley-1"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":121,"author":{"gitId":"stanley-1"},"content":"    /**","lastModifiedDate":"2021-10-11"},{"lineNumber":122,"author":{"gitId":"stanley-1"},"content":"     * Sets the {@code Facebook} of the {@code Person} that we are building.","lastModifiedDate":"2021-10-11"},{"lineNumber":123,"author":{"gitId":"stanley-1"},"content":"     */","lastModifiedDate":"2021-10-11"},{"lineNumber":124,"author":{"gitId":"stanley-1"},"content":"    public PersonBuilder withFacebook(String facebook) {","lastModifiedDate":"2021-10-11"},{"lineNumber":125,"author":{"gitId":"stanley-1"},"content":"        this.facebook \u003d new Facebook(facebook);","lastModifiedDate":"2021-10-11"},{"lineNumber":126,"author":{"gitId":"stanley-1"},"content":"        return this;","lastModifiedDate":"2021-10-11"},{"lineNumber":127,"author":{"gitId":"stanley-1"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":128,"author":{"gitId":"stanley-1"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":129,"author":{"gitId":"david-eom"},"content":"    /**","lastModifiedDate":"2021-10-08"},{"lineNumber":130,"author":{"gitId":"david-eom"},"content":"     * Sets the {@code Telegram} of the {@code Person} that we are building.","lastModifiedDate":"2021-10-08"},{"lineNumber":131,"author":{"gitId":"david-eom"},"content":"     */","lastModifiedDate":"2021-10-08"},{"lineNumber":132,"author":{"gitId":"david-eom"},"content":"    public PersonBuilder withTelegram(String telegram) {","lastModifiedDate":"2021-10-08"},{"lineNumber":133,"author":{"gitId":"david-eom"},"content":"        this.telegram \u003d new Telegram(telegram);","lastModifiedDate":"2021-10-08"},{"lineNumber":134,"author":{"gitId":"david-eom"},"content":"        return this;","lastModifiedDate":"2021-10-08"},{"lineNumber":135,"author":{"gitId":"david-eom"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":136,"author":{"gitId":"david-eom"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":137,"author":{"gitId":"Zacchua"},"content":"    /**","lastModifiedDate":"2021-10-11"},{"lineNumber":138,"author":{"gitId":"Zacchua"},"content":"     * Sets the {@code Twitter} of the {@code Person} that we are building.","lastModifiedDate":"2021-10-12"},{"lineNumber":139,"author":{"gitId":"Zacchua"},"content":"     */","lastModifiedDate":"2021-10-11"},{"lineNumber":140,"author":{"gitId":"Zacchua"},"content":"    public PersonBuilder withTwitter(String twitter) {","lastModifiedDate":"2021-10-11"},{"lineNumber":141,"author":{"gitId":"Zacchua"},"content":"        this.twitter \u003d new Twitter(twitter);","lastModifiedDate":"2021-10-11"},{"lineNumber":142,"author":{"gitId":"Zacchua"},"content":"        return this;","lastModifiedDate":"2021-10-11"},{"lineNumber":143,"author":{"gitId":"Zacchua"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":144,"author":{"gitId":"Zacchua"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":145,"author":{"gitId":"Zacchua"},"content":"    /**","lastModifiedDate":"2021-10-12"},{"lineNumber":146,"author":{"gitId":"Zacchua"},"content":"     * Sets the {@code TikTok} of the {@code Person} that we are building","lastModifiedDate":"2021-10-12"},{"lineNumber":147,"author":{"gitId":"Zacchua"},"content":"     */","lastModifiedDate":"2021-10-12"},{"lineNumber":148,"author":{"gitId":"Zacchua"},"content":"    public PersonBuilder withTikTok(String tiktok) {","lastModifiedDate":"2021-10-12"},{"lineNumber":149,"author":{"gitId":"Zacchua"},"content":"        this.tiktok \u003d new TikTok(tiktok);","lastModifiedDate":"2021-10-12"},{"lineNumber":150,"author":{"gitId":"Zacchua"},"content":"        return this;","lastModifiedDate":"2021-10-12"},{"lineNumber":151,"author":{"gitId":"Zacchua"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":152,"author":{"gitId":"Zacchua"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":153,"author":{"gitId":"bnjmnt4n"},"content":"    /**","lastModifiedDate":"2021-10-21"},{"lineNumber":154,"author":{"gitId":"bnjmnt4n"},"content":"     * Add a {@code Date} to the {@code Person} that we are building","lastModifiedDate":"2021-10-23"},{"lineNumber":155,"author":{"gitId":"bnjmnt4n"},"content":"     */","lastModifiedDate":"2021-10-21"},{"lineNumber":156,"author":{"gitId":"bnjmnt4n"},"content":"    public PersonBuilder withDate(String date) {","lastModifiedDate":"2021-10-23"},{"lineNumber":157,"author":{"gitId":"bnjmnt4n"},"content":"        this.dates.addDate(new Date(date));","lastModifiedDate":"2021-10-23"},{"lineNumber":158,"author":{"gitId":"bnjmnt4n"},"content":"        return this;","lastModifiedDate":"2021-10-21"},{"lineNumber":159,"author":{"gitId":"bnjmnt4n"},"content":"    }","lastModifiedDate":"2021-10-21"},{"lineNumber":160,"author":{"gitId":"bnjmnt4n"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":161,"author":{"gitId":"Zacchua"},"content":"    /**","lastModifiedDate":"2021-10-26"},{"lineNumber":162,"author":{"gitId":"Zacchua"},"content":"     * Sets the {@code Profile Picture} of the (@code Person} that we are building","lastModifiedDate":"2021-10-26"},{"lineNumber":163,"author":{"gitId":"Zacchua"},"content":"     */","lastModifiedDate":"2021-10-26"},{"lineNumber":164,"author":{"gitId":"Zacchua"},"content":"    public PersonBuilder withProfilePic(ProfilePicture pic) {","lastModifiedDate":"2021-10-26"},{"lineNumber":165,"author":{"gitId":"Zacchua"},"content":"        this.profilePic \u003d pic;","lastModifiedDate":"2021-10-26"},{"lineNumber":166,"author":{"gitId":"Zacchua"},"content":"        return this;","lastModifiedDate":"2021-10-26"},{"lineNumber":167,"author":{"gitId":"Zacchua"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":168,"author":{"gitId":"Zacchua"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":169,"author":{"gitId":"Zacchua"},"content":"    /**","lastModifiedDate":"2021-10-26"},{"lineNumber":170,"author":{"gitId":"Zacchua"},"content":"     * Builds the person","lastModifiedDate":"2021-10-26"},{"lineNumber":171,"author":{"gitId":"Zacchua"},"content":"     * @return the built person","lastModifiedDate":"2021-10-26"},{"lineNumber":172,"author":{"gitId":"Zacchua"},"content":"     */","lastModifiedDate":"2021-10-26"},{"lineNumber":173,"author":{"gitId":"-"},"content":"    public Person build() {","lastModifiedDate":"2017-04-05"},{"lineNumber":174,"author":{"gitId":"Zacchua"},"content":"        Person p \u003d new Person(name, phone, remark, tags, facebook, instagram, telegram, tiktok, twitter, dates);","lastModifiedDate":"2021-10-27"},{"lineNumber":175,"author":{"gitId":"Zacchua"},"content":"        p.setProfilePicture(profilePic.value);","lastModifiedDate":"2021-10-26"},{"lineNumber":176,"author":{"gitId":"Zacchua"},"content":"        return p;","lastModifiedDate":"2021-10-26"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":178,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":179,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-03"}],"authorContributionMap":{"Zacchua":46,"EssWhyy":11,"bnjmnt4n":13,"david-eom":21,"-":62,"stanley-1":26}},{"path":"src/test/java/socialite/testutil/PersonUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"david-eom"},"content":"package socialite.testutil;","lastModifiedDate":"2021-10-08"},{"lineNumber":2,"author":{"gitId":"david-eom"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":3,"author":{"gitId":"david-eom"},"content":"import java.util.Set;","lastModifiedDate":"2021-10-08"},{"lineNumber":4,"author":{"gitId":"david-eom"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":5,"author":{"gitId":"david-eom"},"content":"import socialite.logic.commands.AddCommand;","lastModifiedDate":"2021-10-08"},{"lineNumber":6,"author":{"gitId":"david-eom"},"content":"import socialite.logic.commands.EditCommand;","lastModifiedDate":"2021-10-08"},{"lineNumber":7,"author":{"gitId":"david-eom"},"content":"import socialite.logic.parser.CliSyntax;","lastModifiedDate":"2021-10-08"},{"lineNumber":8,"author":{"gitId":"david-eom"},"content":"import socialite.model.person.Person;","lastModifiedDate":"2021-10-09"},{"lineNumber":9,"author":{"gitId":"david-eom"},"content":"import socialite.model.tag.Tag;","lastModifiedDate":"2021-10-09"},{"lineNumber":10,"author":{"gitId":"david-eom"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":11,"author":{"gitId":"david-eom"},"content":"/**","lastModifiedDate":"2021-10-08"},{"lineNumber":12,"author":{"gitId":"david-eom"},"content":" * A utility class for Person.","lastModifiedDate":"2021-10-08"},{"lineNumber":13,"author":{"gitId":"david-eom"},"content":" */","lastModifiedDate":"2021-10-08"},{"lineNumber":14,"author":{"gitId":"david-eom"},"content":"public class PersonUtil {","lastModifiedDate":"2021-10-08"},{"lineNumber":15,"author":{"gitId":"david-eom"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":16,"author":{"gitId":"david-eom"},"content":"    /**","lastModifiedDate":"2021-10-08"},{"lineNumber":17,"author":{"gitId":"david-eom"},"content":"     * Returns an add command string for adding the {@code person}.","lastModifiedDate":"2021-10-08"},{"lineNumber":18,"author":{"gitId":"david-eom"},"content":"     */","lastModifiedDate":"2021-10-08"},{"lineNumber":19,"author":{"gitId":"david-eom"},"content":"    public static String getAddCommand(Person person) {","lastModifiedDate":"2021-10-08"},{"lineNumber":20,"author":{"gitId":"david-eom"},"content":"        return AddCommand.COMMAND_WORD + \" \" + getPersonDetails(person);","lastModifiedDate":"2021-10-08"},{"lineNumber":21,"author":{"gitId":"david-eom"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":22,"author":{"gitId":"david-eom"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":23,"author":{"gitId":"david-eom"},"content":"    /**","lastModifiedDate":"2021-10-08"},{"lineNumber":24,"author":{"gitId":"david-eom"},"content":"     * Returns the part of command string for the given {@code person}\u0027s details.","lastModifiedDate":"2021-10-08"},{"lineNumber":25,"author":{"gitId":"david-eom"},"content":"     */","lastModifiedDate":"2021-10-08"},{"lineNumber":26,"author":{"gitId":"david-eom"},"content":"    public static String getPersonDetails(Person person) {","lastModifiedDate":"2021-10-08"},{"lineNumber":27,"author":{"gitId":"david-eom"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2021-10-08"},{"lineNumber":28,"author":{"gitId":"david-eom"},"content":"        sb.append(CliSyntax.PREFIX_NAME + person.getName().fullName + \" \");","lastModifiedDate":"2021-10-08"},{"lineNumber":29,"author":{"gitId":"david-eom"},"content":"        sb.append(CliSyntax.PREFIX_PHONE + person.getPhone().value + \" \");","lastModifiedDate":"2021-10-08"},{"lineNumber":30,"author":{"gitId":"david-eom"},"content":"        sb.append(CliSyntax.PREFIX_REMARK + person.getRemark().get() + \" \");","lastModifiedDate":"2021-10-22"},{"lineNumber":31,"author":{"gitId":"david-eom"},"content":"        person.getTags().stream().forEach(","lastModifiedDate":"2021-10-08"},{"lineNumber":32,"author":{"gitId":"david-eom"},"content":"            s -\u003e sb.append(CliSyntax.PREFIX_TAG + s.tagName + \" \")","lastModifiedDate":"2021-10-08"},{"lineNumber":33,"author":{"gitId":"david-eom"},"content":"        );","lastModifiedDate":"2021-10-08"},{"lineNumber":34,"author":{"gitId":"Zacchua"},"content":"        sb.append(CliSyntax.PREFIX_FACEBOOK + person.getFacebook().get() + \" \");","lastModifiedDate":"2021-10-16"},{"lineNumber":35,"author":{"gitId":"Zacchua"},"content":"        sb.append(CliSyntax.PREFIX_INSTAGRAM + person.getInstagram().get() + \" \");","lastModifiedDate":"2021-10-16"},{"lineNumber":36,"author":{"gitId":"Zacchua"},"content":"        sb.append(CliSyntax.PREFIX_TELEGRAM + person.getTelegram().get() + \" \");","lastModifiedDate":"2021-10-16"},{"lineNumber":37,"author":{"gitId":"Zacchua"},"content":"        sb.append(CliSyntax.PREFIX_TIKTOK + person.getTiktok().get() + \" \");","lastModifiedDate":"2021-10-16"},{"lineNumber":38,"author":{"gitId":"Zacchua"},"content":"        sb.append(CliSyntax.PREFIX_TWITTER + person.getTwitter().get() + \" \");","lastModifiedDate":"2021-10-16"},{"lineNumber":39,"author":{"gitId":"david-eom"},"content":"        return sb.toString();","lastModifiedDate":"2021-10-08"},{"lineNumber":40,"author":{"gitId":"david-eom"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":41,"author":{"gitId":"david-eom"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":42,"author":{"gitId":"david-eom"},"content":"    /**","lastModifiedDate":"2021-10-08"},{"lineNumber":43,"author":{"gitId":"david-eom"},"content":"     * Returns the part of command string for the given {@code EditPersonDescriptor}\u0027s details.","lastModifiedDate":"2021-10-08"},{"lineNumber":44,"author":{"gitId":"david-eom"},"content":"     */","lastModifiedDate":"2021-10-08"},{"lineNumber":45,"author":{"gitId":"david-eom"},"content":"    public static String getEditPersonDescriptorDetails(EditCommand.EditPersonDescriptor descriptor) {","lastModifiedDate":"2021-10-08"},{"lineNumber":46,"author":{"gitId":"david-eom"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2021-10-08"},{"lineNumber":47,"author":{"gitId":"david-eom"},"content":"        descriptor.getName().ifPresent(name -\u003e sb.append(CliSyntax.PREFIX_NAME).append(name.fullName).append(\" \"));","lastModifiedDate":"2021-10-08"},{"lineNumber":48,"author":{"gitId":"david-eom"},"content":"        descriptor.getPhone().ifPresent(phone -\u003e sb.append(CliSyntax.PREFIX_PHONE).append(phone.value).append(\" \"));","lastModifiedDate":"2021-10-08"},{"lineNumber":49,"author":{"gitId":"david-eom"},"content":"        descriptor.getRemark().ifPresent(remark -\u003e sb.append(CliSyntax.PREFIX_REMARK).append(remark.get()).append(\" \"));","lastModifiedDate":"2021-10-22"},{"lineNumber":50,"author":{"gitId":"Zacchua"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":51,"author":{"gitId":"david-eom"},"content":"        if (descriptor.getTags().isPresent()) {","lastModifiedDate":"2021-10-08"},{"lineNumber":52,"author":{"gitId":"david-eom"},"content":"            Set\u003cTag\u003e tags \u003d descriptor.getTags().get();","lastModifiedDate":"2021-10-08"},{"lineNumber":53,"author":{"gitId":"david-eom"},"content":"            if (tags.isEmpty()) {","lastModifiedDate":"2021-10-08"},{"lineNumber":54,"author":{"gitId":"david-eom"},"content":"                sb.append(CliSyntax.PREFIX_TAG).append(\" \");","lastModifiedDate":"2021-10-09"},{"lineNumber":55,"author":{"gitId":"david-eom"},"content":"            } else {","lastModifiedDate":"2021-10-08"},{"lineNumber":56,"author":{"gitId":"david-eom"},"content":"                tags.forEach(s -\u003e sb.append(CliSyntax.PREFIX_TAG).append(s.tagName).append(\" \"));","lastModifiedDate":"2021-10-08"},{"lineNumber":57,"author":{"gitId":"david-eom"},"content":"            }","lastModifiedDate":"2021-10-08"},{"lineNumber":58,"author":{"gitId":"david-eom"},"content":"        }","lastModifiedDate":"2021-10-08"},{"lineNumber":59,"author":{"gitId":"stanley-1"},"content":"        descriptor.getFacebook().ifPresent(facebook -\u003e sb.append(CliSyntax.PREFIX_FACEBOOK)","lastModifiedDate":"2021-10-11"},{"lineNumber":60,"author":{"gitId":"Zacchua"},"content":"                .append(facebook.get()).append(\" \"));","lastModifiedDate":"2021-10-16"},{"lineNumber":61,"author":{"gitId":"stanley-1"},"content":"        descriptor.getInstagram().ifPresent(instagram -\u003e sb.append(CliSyntax.PREFIX_INSTAGRAM)","lastModifiedDate":"2021-10-11"},{"lineNumber":62,"author":{"gitId":"Zacchua"},"content":"                .append(instagram.get()).append(\" \"));","lastModifiedDate":"2021-10-16"},{"lineNumber":63,"author":{"gitId":"david-eom"},"content":"        descriptor.getTelegram().ifPresent(telegram -\u003e sb.append(CliSyntax.PREFIX_TELEGRAM)","lastModifiedDate":"2021-10-09"},{"lineNumber":64,"author":{"gitId":"Zacchua"},"content":"                .append(telegram.get()).append(\" \"));","lastModifiedDate":"2021-10-16"},{"lineNumber":65,"author":{"gitId":"Zacchua"},"content":"        descriptor.getTwitter().ifPresent(twitter -\u003e sb.append(CliSyntax.PREFIX_TWITTER)","lastModifiedDate":"2021-10-13"},{"lineNumber":66,"author":{"gitId":"Zacchua"},"content":"                .append(twitter.get()).append(\" \"));","lastModifiedDate":"2021-10-16"},{"lineNumber":67,"author":{"gitId":"Zacchua"},"content":"        descriptor.getTikTok().ifPresent(tiktok -\u003e sb.append(CliSyntax.PREFIX_TIKTOK)","lastModifiedDate":"2021-10-13"},{"lineNumber":68,"author":{"gitId":"Zacchua"},"content":"                .append(tiktok.get()).append(\" \"));","lastModifiedDate":"2021-10-16"},{"lineNumber":69,"author":{"gitId":"Zacchua"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":70,"author":{"gitId":"david-eom"},"content":"        return sb.toString();","lastModifiedDate":"2021-10-08"},{"lineNumber":71,"author":{"gitId":"david-eom"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":72,"author":{"gitId":"david-eom"},"content":"}","lastModifiedDate":"2021-10-08"}],"authorContributionMap":{"Zacchua":14,"david-eom":56,"stanley-1":2}},{"path":"src/test/java/socialite/testutil/SerializableTestClass.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"david-eom"},"content":"package socialite.testutil;","lastModifiedDate":"2021-10-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2016-08-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2016-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.HashMap;","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * A class used to test serialization and deserialization","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class SerializableTestClass {","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public static final String JSON_STRING_REPRESENTATION \u003d String.format(\"{%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"            + \"  \\\"name\\\" : \\\"This is a test class\\\",%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"            + \"  \\\"listOfLocalDateTimes\\\" : \"","lastModifiedDate":"2016-10-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"            + \"[ \\\"-999999999-01-01T00:00:00\\\", \\\"+999999999-12-31T23:59:59.999999999\\\", \"","lastModifiedDate":"2016-10-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"            + \"\\\"0001-01-01T01:01:00\\\" ],%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":17,"author":{"gitId":"-"},"content":"            + \"  \\\"mapOfIntegerToString\\\" : {%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"            + \"    \\\"1\\\" : \\\"One\\\",%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"            + \"    \\\"2\\\" : \\\"Two\\\",%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"            + \"    \\\"3\\\" : \\\"Three\\\"%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"            + \"  }%n\"","lastModifiedDate":"2016-10-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"            + \"}\");","lastModifiedDate":"2016-10-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private static final String NAME_TEST_VALUE \u003d \"This is a test class\";","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private String name;","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private List\u003cLocalDateTime\u003e listOfLocalDateTimes;","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private HashMap\u003cInteger, String\u003e mapOfIntegerToString;","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public static String getNameTestValue() {","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        return NAME_TEST_VALUE;","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public static List\u003cLocalDateTime\u003e getListTestValues() {","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        List\u003cLocalDateTime\u003e listOfLocalDateTimes \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        listOfLocalDateTimes.add(LocalDateTime.MIN);","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        listOfLocalDateTimes.add(LocalDateTime.MAX);","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        listOfLocalDateTimes.add(LocalDateTime.of(1, 1, 1, 1, 1));","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        return listOfLocalDateTimes;","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public static HashMap\u003cInteger, String\u003e getHashMapTestValues() {","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        HashMap\u003cInteger, String\u003e mapOfIntegerToString \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        mapOfIntegerToString.put(1, \"One\");","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        mapOfIntegerToString.put(2, \"Two\");","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        mapOfIntegerToString.put(3, \"Three\");","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        return mapOfIntegerToString;","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public void setTestValues() {","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        name \u003d getNameTestValue();","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        listOfLocalDateTimes \u003d getListTestValues();","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        mapOfIntegerToString \u003d getHashMapTestValues();","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public String getName() {","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        return name;","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public List\u003cLocalDateTime\u003e getListOfLocalDateTimes() {","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        return listOfLocalDateTimes;","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public HashMap\u003cInteger, String\u003e getMapOfIntegerToString() {","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        return mapOfIntegerToString;","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"david-eom":1,"-":71}},{"path":"src/test/java/socialite/testutil/TestUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"david-eom"},"content":"package socialite.testutil;","lastModifiedDate":"2021-10-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Files;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"david-eom"},"content":"import socialite.commons.core.index.Index;","lastModifiedDate":"2021-10-08"},{"lineNumber":9,"author":{"gitId":"david-eom"},"content":"import socialite.model.Model;","lastModifiedDate":"2021-10-08"},{"lineNumber":10,"author":{"gitId":"david-eom"},"content":"import socialite.model.person.Person;","lastModifiedDate":"2021-10-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * A utility class for test cases.","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"public class TestUtil {","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * Folder used for temp files created during testing. Ignored by Git.","lastModifiedDate":"2016-10-16"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private static final Path SANDBOX_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"sandbox\");","lastModifiedDate":"2018-04-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Appends {@code fileName} to the sandbox folder path and returns the resulting path.","lastModifiedDate":"2018-04-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     * Creates the sandbox folder if it doesn\u0027t exist.","lastModifiedDate":"2016-09-28"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public static Path getFilePathInSandboxFolder(String fileName) {","lastModifiedDate":"2018-04-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-28"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            Files.createDirectories(SANDBOX_FOLDER);","lastModifiedDate":"2018-04-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-28"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            throw new RuntimeException(e);","lastModifiedDate":"2016-09-28"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-28"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        return SANDBOX_FOLDER.resolve(fileName);","lastModifiedDate":"2018-04-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-30"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * Returns the middle index of the person in the {@code model}\u0027s person list.","lastModifiedDate":"2017-07-30"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-30"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public static Index getMidIndex(Model model) {","lastModifiedDate":"2017-07-30"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return Index.fromOneBased(model.getFilteredPersonList().size() / 2);","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-30"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-30"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-30"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * Returns the last index of the person in the {@code model}\u0027s person list.","lastModifiedDate":"2017-07-30"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-30"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public static Index getLastIndex(Model model) {","lastModifiedDate":"2017-07-30"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        return Index.fromOneBased(model.getFilteredPersonList().size());","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-30"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-30"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-30"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     * Returns the person in the {@code model}\u0027s person list at {@code index}.","lastModifiedDate":"2017-07-30"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-30"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public static Person getPerson(Model model, Index index) {","lastModifiedDate":"2018-01-10"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        return model.getFilteredPersonList().get(index.getZeroBased());","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-30"},{"lineNumber":55,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"david-eom":4,"-":51}},{"path":"src/test/java/socialite/testutil/TypicalIndexes.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"david-eom"},"content":"package socialite.testutil;","lastModifiedDate":"2021-10-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":3,"author":{"gitId":"david-eom"},"content":"import socialite.commons.core.index.Index;","lastModifiedDate":"2021-10-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * A utility class containing a list of {@code Index} objects to be used in tests.","lastModifiedDate":"2017-08-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class TypicalIndexes {","lastModifiedDate":"2017-08-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    public static final Index INDEX_FIRST_PERSON \u003d Index.fromOneBased(1);","lastModifiedDate":"2017-08-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final Index INDEX_SECOND_PERSON \u003d Index.fromOneBased(2);","lastModifiedDate":"2017-08-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    public static final Index INDEX_THIRD_PERSON \u003d Index.fromOneBased(3);","lastModifiedDate":"2017-08-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-08-05"}],"authorContributionMap":{"david-eom":2,"-":10}},{"path":"src/test/java/socialite/testutil/TypicalPersons.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"david-eom"},"content":"package socialite.testutil;","lastModifiedDate":"2021-10-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":3,"author":{"gitId":"bnjmnt4n"},"content":"import static socialite.logic.commands.CommandTestUtil.VALID_DATE_AMY;","lastModifiedDate":"2021-10-23"},{"lineNumber":4,"author":{"gitId":"bnjmnt4n"},"content":"import static socialite.logic.commands.CommandTestUtil.VALID_DATE_BOB;","lastModifiedDate":"2021-10-23"},{"lineNumber":5,"author":{"gitId":"stanley-1"},"content":"import static socialite.logic.commands.CommandTestUtil.VALID_FACEBOOK_AMY;","lastModifiedDate":"2021-10-11"},{"lineNumber":6,"author":{"gitId":"stanley-1"},"content":"import static socialite.logic.commands.CommandTestUtil.VALID_FACEBOOK_BOB;","lastModifiedDate":"2021-10-11"},{"lineNumber":7,"author":{"gitId":"stanley-1"},"content":"import static socialite.logic.commands.CommandTestUtil.VALID_INSTAGRAM_AMY;","lastModifiedDate":"2021-10-11"},{"lineNumber":8,"author":{"gitId":"stanley-1"},"content":"import static socialite.logic.commands.CommandTestUtil.VALID_INSTAGRAM_BOB;","lastModifiedDate":"2021-10-11"},{"lineNumber":9,"author":{"gitId":"david-eom"},"content":"import static socialite.logic.commands.CommandTestUtil.VALID_NAME_AMY;","lastModifiedDate":"2021-10-08"},{"lineNumber":10,"author":{"gitId":"david-eom"},"content":"import static socialite.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2021-10-08"},{"lineNumber":11,"author":{"gitId":"david-eom"},"content":"import static socialite.logic.commands.CommandTestUtil.VALID_PHONE_AMY;","lastModifiedDate":"2021-10-08"},{"lineNumber":12,"author":{"gitId":"david-eom"},"content":"import static socialite.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2021-10-08"},{"lineNumber":13,"author":{"gitId":"david-eom"},"content":"import static socialite.logic.commands.CommandTestUtil.VALID_REMARK_AMY;","lastModifiedDate":"2021-10-13"},{"lineNumber":14,"author":{"gitId":"david-eom"},"content":"import static socialite.logic.commands.CommandTestUtil.VALID_REMARK_BOB;","lastModifiedDate":"2021-10-13"},{"lineNumber":15,"author":{"gitId":"david-eom"},"content":"import static socialite.logic.commands.CommandTestUtil.VALID_TAG_FRIEND;","lastModifiedDate":"2021-10-08"},{"lineNumber":16,"author":{"gitId":"david-eom"},"content":"import static socialite.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2021-10-08"},{"lineNumber":17,"author":{"gitId":"david-eom"},"content":"import static socialite.logic.commands.CommandTestUtil.VALID_TELEGRAM_AMY;","lastModifiedDate":"2021-10-09"},{"lineNumber":18,"author":{"gitId":"david-eom"},"content":"import static socialite.logic.commands.CommandTestUtil.VALID_TELEGRAM_BOB;","lastModifiedDate":"2021-10-09"},{"lineNumber":19,"author":{"gitId":"Zacchua"},"content":"import static socialite.logic.commands.CommandTestUtil.VALID_TIKTOK_AMY;","lastModifiedDate":"2021-10-13"},{"lineNumber":20,"author":{"gitId":"Zacchua"},"content":"import static socialite.logic.commands.CommandTestUtil.VALID_TIKTOK_BOB;","lastModifiedDate":"2021-10-13"},{"lineNumber":21,"author":{"gitId":"Zacchua"},"content":"import static socialite.logic.commands.CommandTestUtil.VALID_TWITTER_AMY;","lastModifiedDate":"2021-10-13"},{"lineNumber":22,"author":{"gitId":"Zacchua"},"content":"import static socialite.logic.commands.CommandTestUtil.VALID_TWITTER_BOB;","lastModifiedDate":"2021-10-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-22"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-08-07"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-08-07"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-08-07"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-07"},{"lineNumber":28,"author":{"gitId":"david-eom"},"content":"import socialite.model.AddressBook;","lastModifiedDate":"2021-10-08"},{"lineNumber":29,"author":{"gitId":"david-eom"},"content":"import socialite.model.person.Person;","lastModifiedDate":"2021-10-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":" * A utility class containing a list of {@code Person} objects to be used in tests.","lastModifiedDate":"2017-08-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"public class TypicalPersons {","lastModifiedDate":"2017-04-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public static final Person ALICE \u003d new PersonBuilder().withName(\"Alice Pauline\")","lastModifiedDate":"2018-01-10"},{"lineNumber":37,"author":{"gitId":"david-eom"},"content":"            .withPhone(\"94351253\").withRemark(\"She likes aardvarks.\").withTags(\"friends\")","lastModifiedDate":"2021-10-13"},{"lineNumber":38,"author":{"gitId":"Zacchua"},"content":"            .withFacebook(\"alice.p\").withInstagram(\"alice.p\").withTelegram(\"alice_pauline\")","lastModifiedDate":"2021-10-13"},{"lineNumber":39,"author":{"gitId":"Zacchua"},"content":"            .withTikTok(\"alice.pauline\").withTwitter(null).withProfilePic(PersonBuilder.DEFAULT_PROFILE_PIC).build();","lastModifiedDate":"2021-10-26"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public static final Person BENSON \u003d new PersonBuilder().withName(\"Benson Meier\")","lastModifiedDate":"2018-01-10"},{"lineNumber":41,"author":{"gitId":"bnjmnt4n"},"content":"            .withPhone(\"98765432\").withRemark(\"He can\u0027t take beer!\").withTags(\"owesMoney\", \"friends\")","lastModifiedDate":"2021-10-15"},{"lineNumber":42,"author":{"gitId":"Zacchua"},"content":"            .withFacebook(\"benson.m\").withInstagram(\"benson.m\").withTelegram(\"benson_meier\")","lastModifiedDate":"2021-10-13"},{"lineNumber":43,"author":{"gitId":"Zacchua"},"content":"            .withTikTok(null).withTwitter(\"bensonMeier\").withProfilePic(PersonBuilder.DEFAULT_PROFILE_PIC).build();","lastModifiedDate":"2021-10-26"},{"lineNumber":44,"author":{"gitId":"Zacchua"},"content":"    public static final Person CARL \u003d new PersonBuilder().withName(\"Carl Kurz\").withPhone(\"95352563\")","lastModifiedDate":"2021-10-11"},{"lineNumber":45,"author":{"gitId":"david-eom"},"content":"            .withFacebook(\"carl.k\").withRemark(null).withInstagram(\"carl.k\").withTelegram(null)","lastModifiedDate":"2021-10-22"},{"lineNumber":46,"author":{"gitId":"Zacchua"},"content":"            .withTikTok(\"carl.kurz\").withTwitter(\"carl\").withProfilePic(PersonBuilder.DEFAULT_PROFILE_PIC).build();","lastModifiedDate":"2021-10-26"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public static final Person DANIEL \u003d new PersonBuilder().withName(\"Daniel Meier\").withPhone(\"87652533\")","lastModifiedDate":"2018-01-10"},{"lineNumber":48,"author":{"gitId":"david-eom"},"content":"            .withRemark(null).withTags(\"friends\").withFacebook(\"daniel.m\").withInstagram(null)","lastModifiedDate":"2021-10-22"},{"lineNumber":49,"author":{"gitId":"Zacchua"},"content":"            .withTelegram(\"daniel_meier\").withTikTok(\"daniel.meier\").withTwitter(\"DanielMeier\")","lastModifiedDate":"2021-10-26"},{"lineNumber":50,"author":{"gitId":"Zacchua"},"content":"            .withProfilePic(PersonBuilder.DEFAULT_PROFILE_PIC)","lastModifiedDate":"2021-10-27"},{"lineNumber":51,"author":{"gitId":"bnjmnt4n"},"content":"            .withDate(\"Wedding Anniversary:2020-02-01\").build();","lastModifiedDate":"2021-10-23"},{"lineNumber":52,"author":{"gitId":"david-eom"},"content":"    public static final Person ELLE \u003d new PersonBuilder().withName(\"Elle Meyer\").withPhone(\"9482224\").withRemark(null)","lastModifiedDate":"2021-10-22"},{"lineNumber":53,"author":{"gitId":"Zacchua"},"content":"            .withFacebook(null).withInstagram(\"elle.m\").withTelegram(\"elle_meyer\").withTikTok(\"elle.meyer\")","lastModifiedDate":"2021-10-16"},{"lineNumber":54,"author":{"gitId":"Zacchua"},"content":"            .withTwitter(\"elle_meyer01\").withProfilePic(PersonBuilder.DEFAULT_PROFILE_PIC).build();","lastModifiedDate":"2021-10-26"},{"lineNumber":55,"author":{"gitId":"david-eom"},"content":"    public static final Person FIONA \u003d new PersonBuilder().withName(\"Fiona Kunz\").withPhone(\"9482427\").withRemark(null)","lastModifiedDate":"2021-10-22"},{"lineNumber":56,"author":{"gitId":"bnjmnt4n"},"content":"            .withFacebook(\"fiona.k\").withInstagram(\"fiona.k\").withTelegram(\"fiona_kunz\")","lastModifiedDate":"2021-10-15"},{"lineNumber":57,"author":{"gitId":"Zacchua"},"content":"            .withTikTok(\"fiona.kunz\").withTwitter(\"fiona_kunz\").withProfilePic(PersonBuilder.DEFAULT_PROFILE_PIC)","lastModifiedDate":"2021-10-26"},{"lineNumber":58,"author":{"gitId":"Zacchua"},"content":"            .withDate(\"Birthday:2000-02-02\").build();","lastModifiedDate":"2021-10-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public static final Person GEORGE \u003d new PersonBuilder().withName(\"George Best\").withPhone(\"9482442\")","lastModifiedDate":"2018-01-10"},{"lineNumber":60,"author":{"gitId":"david-eom"},"content":"            .withRemark(null).withFacebook(\"george.b\").withInstagram(\"george.b\").withTelegram(\"george_best\")","lastModifiedDate":"2021-10-22"},{"lineNumber":61,"author":{"gitId":"Zacchua"},"content":"            .withTikTok(\"george.best\").withTwitter(\"georgeBest\").withProfilePic(PersonBuilder.DEFAULT_PROFILE_PIC)","lastModifiedDate":"2021-10-26"},{"lineNumber":62,"author":{"gitId":"Zacchua"},"content":"            .build();","lastModifiedDate":"2021-10-26"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    // Manually added","lastModifiedDate":"2016-09-13"},{"lineNumber":65,"author":{"gitId":"Zacchua"},"content":"    public static final Person HOON \u003d new PersonBuilder().withName(\"Hoon Meier\").withPhone(\"8482424\")","lastModifiedDate":"2021-10-11"},{"lineNumber":66,"author":{"gitId":"bnjmnt4n"},"content":"            .withTikTok(\"hoon.meier\").withTwitter(\"hoon\").build();","lastModifiedDate":"2021-10-15"},{"lineNumber":67,"author":{"gitId":"Zacchua"},"content":"    public static final Person IDA \u003d new PersonBuilder().withName(\"Ida Mueller\").withPhone(\"8482131\")","lastModifiedDate":"2021-10-11"},{"lineNumber":68,"author":{"gitId":"bnjmnt4n"},"content":"            .withTikTok(\"ida.mueller\").withTwitter(\"ida_\").build();","lastModifiedDate":"2021-10-15"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-22"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    // Manually added - Person\u0027s details found in {@code CommandTestUtil}","lastModifiedDate":"2017-08-22"},{"lineNumber":71,"author":{"gitId":"Zacchua"},"content":"    public static final Person AMY \u003d new PersonBuilder().withName(VALID_NAME_AMY).withPhone(VALID_PHONE_AMY)","lastModifiedDate":"2021-10-11"},{"lineNumber":72,"author":{"gitId":"david-eom"},"content":"            .withRemark(VALID_REMARK_AMY).withTags(VALID_TAG_FRIEND)","lastModifiedDate":"2021-10-13"},{"lineNumber":73,"author":{"gitId":"david-eom"},"content":"            .withFacebook(VALID_FACEBOOK_AMY).withInstagram(VALID_INSTAGRAM_AMY)","lastModifiedDate":"2021-10-12"},{"lineNumber":74,"author":{"gitId":"bnjmnt4n"},"content":"            .withTelegram(VALID_TELEGRAM_AMY).withTikTok(VALID_TIKTOK_AMY).withTwitter(VALID_TWITTER_AMY)","lastModifiedDate":"2021-10-21"},{"lineNumber":75,"author":{"gitId":"bnjmnt4n"},"content":"            .withDate(VALID_DATE_AMY).build();","lastModifiedDate":"2021-10-23"},{"lineNumber":76,"author":{"gitId":"Zacchua"},"content":"    public static final Person BOB \u003d new PersonBuilder().withName(VALID_NAME_BOB).withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2021-10-11"},{"lineNumber":77,"author":{"gitId":"david-eom"},"content":"            .withRemark(VALID_REMARK_BOB).withTags(VALID_TAG_HUSBAND, VALID_TAG_FRIEND)","lastModifiedDate":"2021-10-13"},{"lineNumber":78,"author":{"gitId":"david-eom"},"content":"            .withFacebook(VALID_FACEBOOK_BOB).withInstagram(VALID_INSTAGRAM_BOB)","lastModifiedDate":"2021-10-12"},{"lineNumber":79,"author":{"gitId":"bnjmnt4n"},"content":"            .withTelegram(VALID_TELEGRAM_BOB).withTikTok(VALID_TIKTOK_BOB).withTwitter(VALID_TWITTER_BOB)","lastModifiedDate":"2021-10-21"},{"lineNumber":80,"author":{"gitId":"bnjmnt4n"},"content":"            .withDate(VALID_DATE_BOB).build();","lastModifiedDate":"2021-10-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-21"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public static final String KEYWORD_MATCHING_MEIER \u003d \"Meier\"; // A keyword that matches MEIER","lastModifiedDate":"2017-09-21"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    private TypicalPersons() {} // prevents instantiation","lastModifiedDate":"2017-07-20"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-20"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     * Returns an {@code AddressBook} with all the typical persons.","lastModifiedDate":"2017-08-05"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    public static AddressBook getTypicalAddressBook() {","lastModifiedDate":"2017-08-05"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        AddressBook ab \u003d new AddressBook();","lastModifiedDate":"2017-08-05"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        for (Person person : getTypicalPersons()) {","lastModifiedDate":"2018-01-10"},{"lineNumber":92,"author":{"gitId":"-"},"content":"            ab.addPerson(person);","lastModifiedDate":"2017-08-05"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-13"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        return ab;","lastModifiedDate":"2016-09-24"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-04"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    public static List\u003cPerson\u003e getTypicalPersons() {","lastModifiedDate":"2018-01-10"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        return new ArrayList\u003c\u003e(Arrays.asList(ALICE, BENSON, CARL, DANIEL, ELLE, FIONA, GEORGE));","lastModifiedDate":"2017-08-07"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-08-04"},{"lineNumber":100,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-13"}],"authorContributionMap":{"Zacchua":22,"bnjmnt4n":11,"david-eom":23,"-":40,"stanley-1":4}},{"path":"src/test/java/socialite/ui/TestFxmlObject.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"david-eom"},"content":"package socialite.ui;","lastModifiedDate":"2021-10-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import javafx.beans.DefaultProperty;","lastModifiedDate":"2016-12-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-12-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * A test object which can be constructed via an FXML file.","lastModifiedDate":"2016-12-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Unlike other JavaFX classes, this class can be constructed without the JavaFX toolkit being initialized.","lastModifiedDate":"2016-12-21"},{"lineNumber":8,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-12-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"@DefaultProperty(\"text\")","lastModifiedDate":"2016-12-21"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class TestFxmlObject {","lastModifiedDate":"2016-12-21"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private String text;","lastModifiedDate":"2016-12-21"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public TestFxmlObject() {}","lastModifiedDate":"2016-12-21"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public TestFxmlObject(String text) {","lastModifiedDate":"2016-12-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        setText(text);","lastModifiedDate":"2016-12-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public String getText() {","lastModifiedDate":"2016-12-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        return text;","lastModifiedDate":"2016-12-21"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public void setText(String text) {","lastModifiedDate":"2016-12-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        this.text \u003d text;","lastModifiedDate":"2016-12-21"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-21"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-12-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-04-14"},{"lineNumber":31,"author":{"gitId":"-"},"content":"                || (other instanceof TestFxmlObject // instanceof handles nulls","lastModifiedDate":"2017-04-14"},{"lineNumber":32,"author":{"gitId":"-"},"content":"                        \u0026\u0026 text.equals(((TestFxmlObject) other).getText()));","lastModifiedDate":"2018-08-14"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-21"}],"authorContributionMap":{"david-eom":1,"-":34}},{"path":"src/test/java/socialite/ui/UiPartTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"david-eom"},"content":"package socialite.ui;","lastModifiedDate":"2021-10-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotNull;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.net.URL;","lastModifiedDate":"2016-12-21"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2019-04-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-12-21"},{"lineNumber":13,"author":{"gitId":"david-eom"},"content":"import socialite.MainApp;","lastModifiedDate":"2021-10-08"},{"lineNumber":14,"author":{"gitId":"david-eom"},"content":"import socialite.testutil.Assert;","lastModifiedDate":"2021-10-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class UiPartTest {","lastModifiedDate":"2016-12-21"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private static final String MISSING_FILE_PATH \u003d \"UiPartTest/missingFile.fxml\";","lastModifiedDate":"2016-12-21"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    private static final String INVALID_FILE_PATH \u003d \"UiPartTest/invalidFile.fxml\";","lastModifiedDate":"2016-12-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private static final String VALID_FILE_PATH \u003d \"UiPartTest/validFile.fxml\";","lastModifiedDate":"2016-12-21"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final String VALID_FILE_WITH_FX_ROOT_PATH \u003d \"UiPartTest/validFileWithFxRoot.fxml\";","lastModifiedDate":"2017-11-29"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final TestFxmlObject VALID_FILE_ROOT \u003d new TestFxmlObject(\"Hello World!\");","lastModifiedDate":"2016-12-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public Path testFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public void constructor_nullFileUrl_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":29,"author":{"gitId":"david-eom"},"content":"        Assert.assertThrows(NullPointerException.class, () -\u003e new TestUiPart\u003cObject\u003e((URL) null));","lastModifiedDate":"2021-10-08"},{"lineNumber":30,"author":{"gitId":"david-eom"},"content":"        Assert.assertThrows(NullPointerException.class, () -\u003e new TestUiPart\u003cObject\u003e((URL) null, new Object()));","lastModifiedDate":"2021-10-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-21"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public void constructor_missingFileUrl_throwsAssertionError() throws Exception {","lastModifiedDate":"2016-12-21"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        URL missingFileUrl \u003d new URL(testFolder.toUri().toURL(), MISSING_FILE_PATH);","lastModifiedDate":"2019-04-25"},{"lineNumber":36,"author":{"gitId":"david-eom"},"content":"        Assert.assertThrows(AssertionError.class, () -\u003e new TestUiPart\u003cObject\u003e(missingFileUrl));","lastModifiedDate":"2021-10-08"},{"lineNumber":37,"author":{"gitId":"david-eom"},"content":"        Assert.assertThrows(AssertionError.class, () -\u003e new TestUiPart\u003cObject\u003e(missingFileUrl, new Object()));","lastModifiedDate":"2021-10-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-21"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public void constructor_invalidFileUrl_throwsAssertionError() {","lastModifiedDate":"2016-12-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        URL invalidFileUrl \u003d getTestFileUrl(INVALID_FILE_PATH);","lastModifiedDate":"2016-12-21"},{"lineNumber":43,"author":{"gitId":"david-eom"},"content":"        Assert.assertThrows(AssertionError.class, () -\u003e new TestUiPart\u003cObject\u003e(invalidFileUrl));","lastModifiedDate":"2021-10-08"},{"lineNumber":44,"author":{"gitId":"david-eom"},"content":"        Assert.assertThrows(AssertionError.class, () -\u003e new TestUiPart\u003cObject\u003e(invalidFileUrl, new Object()));","lastModifiedDate":"2021-10-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-21"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public void constructor_validFileUrl_loadsFile() {","lastModifiedDate":"2016-12-21"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        URL validFileUrl \u003d getTestFileUrl(VALID_FILE_PATH);","lastModifiedDate":"2016-12-21"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertEquals(VALID_FILE_ROOT, new TestUiPart\u003cTestFxmlObject\u003e(validFileUrl).getRoot());","lastModifiedDate":"2016-12-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-11-29"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public void constructor_validFileWithFxRootUrl_loadsFile() {","lastModifiedDate":"2017-11-29"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        URL validFileUrl \u003d getTestFileUrl(VALID_FILE_WITH_FX_ROOT_PATH);","lastModifiedDate":"2017-11-29"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        TestFxmlObject root \u003d new TestFxmlObject();","lastModifiedDate":"2017-11-29"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertEquals(VALID_FILE_ROOT, new TestUiPart\u003cTestFxmlObject\u003e(validFileUrl, root).getRoot());","lastModifiedDate":"2017-11-29"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-11-29"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-21"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public void constructor_nullFileName_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":62,"author":{"gitId":"david-eom"},"content":"        Assert.assertThrows(NullPointerException.class, () -\u003e new TestUiPart\u003cObject\u003e((String) null));","lastModifiedDate":"2021-10-08"},{"lineNumber":63,"author":{"gitId":"david-eom"},"content":"        Assert.assertThrows(NullPointerException.class, () -\u003e new TestUiPart\u003cObject\u003e((String) null, new Object()));","lastModifiedDate":"2021-10-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-21"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public void constructor_missingFileName_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":68,"author":{"gitId":"david-eom"},"content":"        Assert.assertThrows(NullPointerException.class, () -\u003e new TestUiPart\u003cObject\u003e(MISSING_FILE_PATH));","lastModifiedDate":"2021-10-08"},{"lineNumber":69,"author":{"gitId":"david-eom"},"content":"        Assert.assertThrows(NullPointerException.class, () -\u003e new TestUiPart\u003cObject\u003e(MISSING_FILE_PATH, new Object()));","lastModifiedDate":"2021-10-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-21"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public void constructor_invalidFileName_throwsAssertionError() {","lastModifiedDate":"2016-12-21"},{"lineNumber":74,"author":{"gitId":"david-eom"},"content":"        Assert.assertThrows(AssertionError.class, () -\u003e new TestUiPart\u003cObject\u003e(INVALID_FILE_PATH));","lastModifiedDate":"2021-10-08"},{"lineNumber":75,"author":{"gitId":"david-eom"},"content":"        Assert.assertThrows(AssertionError.class, () -\u003e new TestUiPart\u003cObject\u003e(INVALID_FILE_PATH, new Object()));","lastModifiedDate":"2021-10-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    private URL getTestFileUrl(String testFilePath) {","lastModifiedDate":"2016-12-21"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        String testFilePathInView \u003d \"/view/\" + testFilePath;","lastModifiedDate":"2016-12-21"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        URL testFileUrl \u003d MainApp.class.getResource(testFilePathInView);","lastModifiedDate":"2016-12-21"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        assertNotNull(testFileUrl, testFilePathInView + \" does not exist.\");","lastModifiedDate":"2019-03-15"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        return testFileUrl;","lastModifiedDate":"2016-12-21"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-21"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * UiPart used for testing.","lastModifiedDate":"2016-12-21"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     * It should only be used with invalid FXML files or the valid file located at {@link VALID_FILE_PATH}.","lastModifiedDate":"2016-12-21"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-21"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    private static class TestUiPart\u003cT\u003e extends UiPart\u003cT\u003e {","lastModifiedDate":"2016-12-21"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        @FXML","lastModifiedDate":"2016-12-21"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        private TestFxmlObject validFileRoot; // Check that @FXML annotations work","lastModifiedDate":"2016-12-21"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        TestUiPart(URL fxmlFileUrl, T root) {","lastModifiedDate":"2017-11-29"},{"lineNumber":95,"author":{"gitId":"-"},"content":"            super(fxmlFileUrl, root);","lastModifiedDate":"2017-11-29"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-11-29"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        TestUiPart(String fxmlFileName, T root) {","lastModifiedDate":"2017-11-29"},{"lineNumber":99,"author":{"gitId":"-"},"content":"            super(fxmlFileName, root);","lastModifiedDate":"2017-11-29"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-11-29"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        TestUiPart(URL fxmlFileUrl) {","lastModifiedDate":"2016-12-21"},{"lineNumber":103,"author":{"gitId":"-"},"content":"            super(fxmlFileUrl);","lastModifiedDate":"2016-12-21"},{"lineNumber":104,"author":{"gitId":"-"},"content":"            assertEquals(VALID_FILE_ROOT, validFileRoot);","lastModifiedDate":"2016-12-21"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-21"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        TestUiPart(String fxmlFileName) {","lastModifiedDate":"2016-12-21"},{"lineNumber":108,"author":{"gitId":"-"},"content":"            super(fxmlFileName);","lastModifiedDate":"2016-12-21"},{"lineNumber":109,"author":{"gitId":"-"},"content":"            assertEquals(VALID_FILE_ROOT, validFileRoot);","lastModifiedDate":"2016-12-21"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-21"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-21"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":114,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-21"}],"authorContributionMap":{"david-eom":15,"-":99}},{"path":"src/test/resources/view/UiPartTest/validFile.fxml","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-12-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-21"},{"lineNumber":3,"author":{"gitId":"david-eom"},"content":"\u003c?import socialite.ui.TestFxmlObject?\u003e","lastModifiedDate":"2021-10-08"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003cTestFxmlObject xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:id\u003d\"validFileRoot\"\u003eHello World!\u003c/TestFxmlObject\u003e","lastModifiedDate":"2016-12-21"}],"authorContributionMap":{"david-eom":1,"-":3}},{"path":"src/test/resources/view/UiPartTest/validFileWithFxRoot.fxml","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-11-29"},{"lineNumber":3,"author":{"gitId":"david-eom"},"content":"\u003cfx:root type\u003d\"socialite.ui.TestFxmlObject\" xmlns\u003d\"http://javafx.com/javafx\"","lastModifiedDate":"2021-10-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"         xmlns:fx\u003d\"http://javafx.com/fxml\"\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    \u003ctext\u003eHello World!\u003c/text\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2017-11-29"}],"authorContributionMap":{"david-eom":1,"-":5}}]
