[{"path":"README.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"kvihashini"},"content":"[![CI Status](https://github.com/se-edu/addressbook-level3/workflows/Java%20CI/badge.svg)](https://github.com/AY2122S1-CS2103T-W16-4/tp/actions)","lastModifiedDate":"2021-09-28"},{"lineNumber":2,"author":{"gitId":"kvihashini"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":3,"author":{"gitId":"kvihashini"},"content":"# üßë‚Äçüè´ Tutor Master","lastModifiedDate":"2021-09-28"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"![Ui](docs/images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"kvihashini"},"content":"## Introduction","lastModifiedDate":"2021-11-07"},{"lineNumber":8,"author":{"gitId":"kvihashini"},"content":"TutorMaster is a desktop app for freelance tutors to manage their students‚Äô details and related tasks. It is optimised for use via a Command Line Interface (CLI) while still benefiting from a Graphical User Interface (GUI).","lastModifiedDate":"2021-11-07"},{"lineNumber":9,"author":{"gitId":"kvihashini"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":10,"author":{"gitId":"kvihashini"},"content":"## Features","lastModifiedDate":"2021-09-28"},{"lineNumber":11,"author":{"gitId":"kvihashini"},"content":"Here are some features of Tutor Master.","lastModifiedDate":"2021-11-07"},{"lineNumber":12,"author":{"gitId":"kvihashini"},"content":"- Manage Students","lastModifiedDate":"2021-11-07"},{"lineNumber":13,"author":{"gitId":"kvihashini"},"content":"  - **Add** a student","lastModifiedDate":"2021-09-28"},{"lineNumber":14,"author":{"gitId":"kvihashini"},"content":"  - **View** a student","lastModifiedDate":"2021-09-28"},{"lineNumber":15,"author":{"gitId":"kvihashini"},"content":"  - **Edit** a student","lastModifiedDate":"2021-11-07"},{"lineNumber":16,"author":{"gitId":"kvihashini"},"content":"  - **Add a lesson** to a student","lastModifiedDate":"2021-11-07"},{"lineNumber":17,"author":{"gitId":"kvihashini"},"content":"  - **Add an exam** to a student","lastModifiedDate":"2021-11-07"},{"lineNumber":18,"author":{"gitId":"kvihashini"},"content":"- Manage Groups","lastModifiedDate":"2021-11-07"},{"lineNumber":19,"author":{"gitId":"kvihashini"},"content":"  - **Group** students","lastModifiedDate":"2021-11-07"},{"lineNumber":20,"author":{"gitId":"kvihashini"},"content":"  - **View** a group","lastModifiedDate":"2021-11-07"},{"lineNumber":21,"author":{"gitId":"kvihashini"},"content":"  - **Delete** a group","lastModifiedDate":"2021-11-07"},{"lineNumber":22,"author":{"gitId":"kvihashini"},"content":"  - **Add a lesson** to a group","lastModifiedDate":"2021-11-07"},{"lineNumber":23,"author":{"gitId":"kvihashini"},"content":"  - **Delete a lesson** from a group","lastModifiedDate":"2021-11-07"},{"lineNumber":24,"author":{"gitId":"kvihashini"},"content":"- Manage Tasks","lastModifiedDate":"2021-11-07"},{"lineNumber":25,"author":{"gitId":"kvihashini"},"content":"  - **Add** a task","lastModifiedDate":"2021-09-28"},{"lineNumber":26,"author":{"gitId":"kvihashini"},"content":"  - **Edit** a task","lastModifiedDate":"2021-09-28"},{"lineNumber":27,"author":{"gitId":"kvihashini"},"content":"  - **List** all tasks","lastModifiedDate":"2021-11-07"},{"lineNumber":28,"author":{"gitId":"kvihashini"},"content":"  - **Assign** a task to a student","lastModifiedDate":"2021-09-28"},{"lineNumber":29,"author":{"gitId":"kvihashini"},"content":"  - **Assign** a task to a group","lastModifiedDate":"2021-11-07"},{"lineNumber":30,"author":{"gitId":"kvihashini"},"content":"  - **Unassign** a task from a student","lastModifiedDate":"2021-11-07"},{"lineNumber":31,"author":{"gitId":"kvihashini"},"content":"  - **Unassign** a task from a group","lastModifiedDate":"2021-11-07"},{"lineNumber":32,"author":{"gitId":"kvihashini"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":33,"author":{"gitId":"kvihashini"},"content":"## Get Started","lastModifiedDate":"2021-11-07"},{"lineNumber":34,"author":{"gitId":"kvihashini"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":35,"author":{"gitId":"kvihashini"},"content":"Visit our [Project Website](https://ay2122s1-cs2103t-w16-4.github.io/tp/) for more details about the team and our project!","lastModifiedDate":"2021-11-07"},{"lineNumber":36,"author":{"gitId":"kvihashini"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":37,"author":{"gitId":"kvihashini"},"content":"If you would like to use Tutor Master, visit our [User Guide](https://ay2122s1-cs2103t-w16-4.github.io/tp/UserGuide.html) to get started!","lastModifiedDate":"2021-11-07"},{"lineNumber":38,"author":{"gitId":"eltonyeh"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":39,"author":{"gitId":"eltonyeh"},"content":"### Acknowledgement","lastModifiedDate":"2021-09-28"},{"lineNumber":40,"author":{"gitId":"eltonyeh"},"content":"* This project is based on the AddressBook-Level3 project created by the [SE-EDU initiative](https://se-education.org).","lastModifiedDate":"2021-09-28"}],"authorContributionMap":{"kvihashini":34,"eltonyeh":3,"-":3}},{"path":"build.gradle","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {","lastModifiedDate":"2016-08-29"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027","lastModifiedDate":"2017-12-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027","lastModifiedDate":"2017-12-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00274.0.4\u0027","lastModifiedDate":"2019-02-28"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027application\u0027","lastModifiedDate":"2016-12-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    id \u0027jacoco\u0027","lastModifiedDate":"2020-08-07"},{"lineNumber":7,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-29"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-29"},{"lineNumber":9,"author":{"gitId":"-"},"content":"mainClassName \u003d \u0027seedu.address.Main\u0027","lastModifiedDate":"2019-02-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"sourceCompatibility \u003d JavaVersion.VERSION_11","lastModifiedDate":"2019-02-20"},{"lineNumber":12,"author":{"gitId":"-"},"content":"targetCompatibility \u003d JavaVersion.VERSION_11","lastModifiedDate":"2019-02-20"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"repositories {","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    mavenCentral()","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    maven { url \u0027https://oss.sonatype.org/content/repositories/snapshots/\u0027 }","lastModifiedDate":"2018-04-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"kvihashini"},"content":"run {","lastModifiedDate":"2021-10-21"},{"lineNumber":20,"author":{"gitId":"kvihashini"},"content":"    enableAssertions \u003d true","lastModifiedDate":"2021-10-21"},{"lineNumber":21,"author":{"gitId":"kvihashini"},"content":"}","lastModifiedDate":"2021-10-21"},{"lineNumber":22,"author":{"gitId":"kvihashini"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":23,"author":{"gitId":"-"},"content":"checkstyle {","lastModifiedDate":"2016-10-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u00278.29\u0027","lastModifiedDate":"2020-05-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-10-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"test {","lastModifiedDate":"2018-03-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    useJUnitPlatform()","lastModifiedDate":"2018-03-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    finalizedBy jacocoTestReport","lastModifiedDate":"2020-08-07"},{"lineNumber":30,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-08-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-08-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"task coverage(type: JacocoReport) {","lastModifiedDate":"2020-08-07"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    sourceDirectories.from files(sourceSets.main.allSource.srcDirs)","lastModifiedDate":"2020-08-07"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    classDirectories.from files(sourceSets.main.output)","lastModifiedDate":"2020-08-07"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    executionData.from files(jacocoTestReport.executionData)","lastModifiedDate":"2020-08-07"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    afterEvaluate {","lastModifiedDate":"2020-08-07"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        classDirectories.from files(classDirectories.files.collect {","lastModifiedDate":"2020-08-07"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            fileTree(dir: it, exclude: [\u0027**/*.jar\u0027])","lastModifiedDate":"2020-08-07"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        })","lastModifiedDate":"2020-08-07"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-08-07"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    reports {","lastModifiedDate":"2020-08-07"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        html.enabled \u003d true","lastModifiedDate":"2020-08-07"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        xml.enabled \u003d true","lastModifiedDate":"2020-08-07"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-08-07"},{"lineNumber":45,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-03-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"dependencies {","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    String jUnitVersion \u003d \u00275.4.0\u0027","lastModifiedDate":"2019-02-10"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    String javaFxVersion \u003d \u002711\u0027","lastModifiedDate":"2019-02-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-02-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027","lastModifiedDate":"2019-02-19"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-05"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    implementation group: \u0027com.fasterxml.jackson.core\u0027, name: \u0027jackson-databind\u0027, version: \u00272.7.0\u0027","lastModifiedDate":"2018-03-29"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    implementation group: \u0027com.fasterxml.jackson.datatype\u0027, name: \u0027jackson-datatype-jsr310\u0027, version: \u00272.7.4\u0027","lastModifiedDate":"2018-03-29"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-05"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: jUnitVersion","lastModifiedDate":"2018-03-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: jUnitVersion","lastModifiedDate":"2018-03-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-29"},{"lineNumber":72,"author":{"gitId":"-"},"content":"shadowJar {","lastModifiedDate":"2016-08-29"},{"lineNumber":73,"author":{"gitId":"jeremy-7007"},"content":"    archiveName \u003d \u0027tutormaster.jar\u0027","lastModifiedDate":"2021-11-02"},{"lineNumber":74,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-29"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"defaultTasks \u0027clean\u0027, \u0027test\u0027","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"jeremy-7007":1,"kvihashini":4,"-":71}},{"path":"docs/AboutUs.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: About Us","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"We are a team based in the [School of Computing, National University of Singapore](http://www.comp.nus.edu.sg).","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"eltonyeh"},"content":"You can reach us at the email `seer@comp.nus.edu.sg`","lastModifiedDate":"2021-11-02"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-06-17"},{"lineNumber":10,"author":{"gitId":"-"},"content":"## Project team","lastModifiedDate":"2020-06-07"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"eltonyeh"},"content":"### Yeh Yu-Cheng","lastModifiedDate":"2021-09-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"eltonyeh"},"content":"\u003cimg src\u003d\"images/eltonyeh.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2021-09-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"eltonyeh"},"content":"[[github](https://github.com/eltonyeh)]","lastModifiedDate":"2021-09-27"},{"lineNumber":17,"author":{"gitId":"eltonyeh"},"content":"[[portfolio](team/eltonyeh.md)]","lastModifiedDate":"2021-09-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"eltonyeh"},"content":"* Role: Developer","lastModifiedDate":"2021-09-27"},{"lineNumber":20,"author":{"gitId":"eltonyeh"},"content":"* Responsibilities: Unique Id for entities and task assignments.","lastModifiedDate":"2021-11-04"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"tanhuakun"},"content":"### Tan Hua Kun","lastModifiedDate":"2021-09-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"tanhuakun"},"content":"\u003cimg src\u003d\"images/tanhuakun.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2021-09-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"tanhuakun"},"content":"[[github](http://github.com/tanhuakun)]","lastModifiedDate":"2021-09-27"},{"lineNumber":27,"author":{"gitId":"tanhuakun"},"content":"[[portfolio](team/tanhuakun.md)]","lastModifiedDate":"2021-09-27"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"tanhuakun"},"content":"* Role: Full Stack Developer","lastModifiedDate":"2021-11-04"},{"lineNumber":30,"author":{"gitId":"tanhuakun"},"content":"* Responsibilities: Creating Lesson, Exams and Viewing Panel logic.","lastModifiedDate":"2021-11-04"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"Neha-5678"},"content":"### Srinivasan Neharikha","lastModifiedDate":"2021-09-28"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"Neha-5678"},"content":"\u003cimg src\u003d\"images/neha-5678.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2021-09-28"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"Neha-5678"},"content":"[[github](http://github.com/neha-5678)] [[portfolio](team/neha-5678.md)]","lastModifiedDate":"2021-11-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"Neha-5678"},"content":"* Responsibilities: Storage for tasks and groups and creating logic for features related to Tasks.","lastModifiedDate":"2021-11-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"jeremy-7007"},"content":"### Le Quoc Huy","lastModifiedDate":"2021-09-28"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"jeremy-7007"},"content":"\u003cimg src\u003d\"images/jeremy-7007.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2021-09-28"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"jeremy-7007"},"content":"[[github](http://github.com/jeremy-7007)]","lastModifiedDate":"2021-09-28"},{"lineNumber":46,"author":{"gitId":"jeremy-7007"},"content":"[[portfolio](team/jeremy-7007.md)]","lastModifiedDate":"2021-09-28"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"jeremy-7007"},"content":"* Responsibilities: Assigning tasks to students and marking their completion status","lastModifiedDate":"2021-11-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"kvihashini"},"content":"### Keerthi Vihashini","lastModifiedDate":"2021-09-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"kvihashini"},"content":"\u003cimg src\u003d\"images/kvihashini.png\" width\u003d\"200px\"\u003e","lastModifiedDate":"2021-09-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"kvihashini"},"content":"[[github](http://github.com/kvihashini)]","lastModifiedDate":"2021-09-27"},{"lineNumber":56,"author":{"gitId":"kvihashini"},"content":"[[portfolio](team/kvihashini.md)]","lastModifiedDate":"2021-09-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"* Role: Developer","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"kvihashini"},"content":"* Responsibilities: UI,  Model and logic for Groups and related features.","lastModifiedDate":"2021-11-08"}],"authorContributionMap":{"Neha-5678":4,"jeremy-7007":5,"kvihashini":5,"eltonyeh":7,"tanhuakun":6,"-":32}},{"path":"docs/DeveloperGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: Developer Guide","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"jeremy-7007"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2021-11-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":11,"author":{"gitId":"-"},"content":"## **Acknowledgements**","lastModifiedDate":"2021-07-30"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":13,"author":{"gitId":"kvihashini"},"content":"* This project is based on the AddressBook-Level3 project created by the SE-EDU initiative.","lastModifiedDate":"2021-11-07"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-30"},{"lineNumber":15,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-07-30"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"kvihashini"},"content":"## **Setting up, Getting started**","lastModifiedDate":"2021-11-07"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"kvihashini"},"content":"Refer to the guide [_Setting up and Getting started_](SettingUp.md).","lastModifiedDate":"2021-11-07"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"jeremy-7007"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2021-11-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"## **Design**","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-primary\"\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":":bulb: **Tip:** The `.puml` files used to create diagrams in this document can be found in the [diagrams](https://github.com/se-edu/addressbook-level3/tree/master/docs/diagrams/) folder. Refer to the [_PlantUML Tutorial_ at se-edu/guides](https://se-education.org/guides/tutorials/plantUml.html) to learn how to create and edit diagrams.","lastModifiedDate":"2021-07-31"},{"lineNumber":29,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"### Architecture","lastModifiedDate":"2021-07-31"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ArchitectureDiagram.png\" width\u003d\"280\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"The ***Architecture Diagram*** given above explains the high-level design of the App.","lastModifiedDate":"2021-07-31"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"Given below is a quick overview of main components and how they interact with each other.","lastModifiedDate":"2021-07-31"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":39,"author":{"gitId":"-"},"content":"**Main components of the architecture**","lastModifiedDate":"2021-07-31"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":"**`Main`** has two classes called [`Main`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/Main.java) and [`MainApp`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/MainApp.java). It is responsible for,","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"* At app launch: Initializes the components in the correct sequence, and connects them up with each other.","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"* At shut down: Shuts down the components and invokes cleanup methods where necessary.","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"[**`Commons`**](#common-classes) represents a collection of classes used by multiple other components.","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"The rest of the App consists of four components.","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"* [**`UI`**](#ui-component): The UI of the App.","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"* [**`Logic`**](#logic-component): The command executor.","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"* [**`Model`**](#model-component): Holds the data of the App in memory.","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"* [**`Storage`**](#storage-component): Reads data from, and writes data to, the hard disk.","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"**How the architecture components interact with each other**","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"kvihashini"},"content":"The *Sequence Diagram* below shows how the components interact with each other for the scenario where the user issues the command `student -d 1`.","lastModifiedDate":"2021-11-07"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ArchitectureSequenceDiagram.png\" width\u003d\"574\" /\u003e","lastModifiedDate":"2020-06-07"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"Each of the four main components (also shown in the diagram above),","lastModifiedDate":"2021-07-31"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":63,"author":{"gitId":"-"},"content":"* defines its *API* in an `interface` with the same name as the Component.","lastModifiedDate":"2021-07-31"},{"lineNumber":64,"author":{"gitId":"-"},"content":"* implements its functionality using a concrete `{Component Name}Manager` class (which follows the corresponding API `interface` mentioned in the previous point.","lastModifiedDate":"2021-07-31"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":66,"author":{"gitId":"-"},"content":"For example, the `Logic` component defines its API in the `Logic.java` interface and implements its functionality using the `LogicManager.java` class which follows the `Logic` interface. Other components interact with a given component through its interface rather than the concrete class (reason: to prevent outside component\u0027s being coupled to the implementation of a component), as illustrated in the (partial) class diagram below.","lastModifiedDate":"2021-07-31"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":68,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ComponentManagers.png\" width\u003d\"300\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":70,"author":{"gitId":"-"},"content":"The sections below give more details of each component.","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"### UI component","lastModifiedDate":"2020-05-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":"The **API** of this component is specified in [`Ui.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/ui/Ui.java)","lastModifiedDate":"2021-07-31"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"![Structure of the UI Component](images/UiClassDiagram.png)","lastModifiedDate":"2021-07-31"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"kvihashini"},"content":"The UI consists of a `MainWindow` that is made up of parts e.g.`CommandBox`, `ResultDisplay`, `PersonListPanel`,","lastModifiedDate":"2021-11-08"},{"lineNumber":79,"author":{"gitId":"kvihashini"},"content":"`GroupListPanel`, `TaskListPanel`, StatusBarFooter` etc. All these, including the `MainWindow`, inherit from the abstract `UiPart` class which captures the commonalities between classes that represent parts of the visible GUI.","lastModifiedDate":"2021-11-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"The `UI` component uses the JavaFx UI framework. The layout of these UI parts are defined in matching `.fxml` files that are in the `src/main/resources/view` folder. For example, the layout of the [`MainWindow`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/ui/MainWindow.java) is specified in [`MainWindow.fxml`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/resources/view/MainWindow.fxml)","lastModifiedDate":"2021-07-31"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"The `UI` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"* executes user commands using the `Logic` component.","lastModifiedDate":"2021-07-31"},{"lineNumber":86,"author":{"gitId":"-"},"content":"* listens for changes to `Model` data so that the UI can be updated with the modified data.","lastModifiedDate":"2021-07-31"},{"lineNumber":87,"author":{"gitId":"-"},"content":"* keeps a reference to the `Logic` component, because the `UI` relies on the `Logic` to execute commands.","lastModifiedDate":"2021-07-31"},{"lineNumber":88,"author":{"gitId":"kvihashini"},"content":"* depends on some classes in the `Model` component, as it displays `Person`, `Task` and `Group` objects residing in the `Model`.","lastModifiedDate":"2021-11-08"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"### Logic component","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"**API** : [`Logic.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/logic/Logic.java)","lastModifiedDate":"2021-07-31"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"Here\u0027s a (partial) class diagram of the `Logic` component:","lastModifiedDate":"2021-07-31"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/LogicClassDiagram.png\" width\u003d\"550\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"How the `Logic` component works:","lastModifiedDate":"2021-07-31"},{"lineNumber":99,"author":{"gitId":"-"},"content":"1. When `Logic` is called upon to execute a command, it uses the `AddressBookParser` class to parse the user command.","lastModifiedDate":"2021-07-31"},{"lineNumber":100,"author":{"gitId":"-"},"content":"1. This results in a `Command` object (more precisely, an object of one of its subclasses e.g., `AddCommand`) which is executed by the `LogicManager`.","lastModifiedDate":"2021-07-31"},{"lineNumber":101,"author":{"gitId":"-"},"content":"1. The command can communicate with the `Model` when it is executed (e.g. to add a person).","lastModifiedDate":"2021-07-31"},{"lineNumber":102,"author":{"gitId":"-"},"content":"1. The result of the command execution is encapsulated as a `CommandResult` object which is returned back from `Logic`.","lastModifiedDate":"2021-07-31"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":104,"author":{"gitId":"kvihashini"},"content":"The Sequence Diagram below illustrates the interactions within the `Logic` component for the `execute(\"student -d 1\")` API call.","lastModifiedDate":"2021-11-07"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"![Interactions Inside the Logic Component for the `delete 1` Command](images/DeleteSequenceDiagram.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** The lifeline for `DeleteCommandParser` should end at the destroy marker (X) but due to a limitation of PlantUML, the lifeline reaches the end of diagram.","lastModifiedDate":"2020-05-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"Here are the other classes in `Logic` (omitted from the class diagram above) that are used for parsing a user command:","lastModifiedDate":"2021-07-31"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":113,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/ParserClasses.png\" width\u003d\"600\"/\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":115,"author":{"gitId":"-"},"content":"How the parsing works:","lastModifiedDate":"2021-07-31"},{"lineNumber":116,"author":{"gitId":"-"},"content":"* When called upon to parse a user command, the `AddressBookParser` class creates an `XYZCommandParser` (`XYZ` is a placeholder for the specific command name e.g., `AddCommandParser`) which uses the other classes shown above to parse the user command and create a `XYZCommand` object (e.g., `AddCommand`) which the `AddressBookParser` returns back as a `Command` object.","lastModifiedDate":"2021-07-31"},{"lineNumber":117,"author":{"gitId":"-"},"content":"* All `XYZCommandParser` classes (e.g., `AddCommandParser`, `DeleteCommandParser`, ...) inherit from the `Parser` interface so that they can be treated similarly where possible e.g, during testing.","lastModifiedDate":"2021-07-31"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"### Model component","lastModifiedDate":"2021-07-31"},{"lineNumber":120,"author":{"gitId":"-"},"content":"**API** : [`Model.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/model/Model.java)","lastModifiedDate":"2020-05-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"jeremy-7007"},"content":"![ModelClassDiagram](images/ModelClassDiagram.png)","lastModifiedDate":"2021-11-08"},{"lineNumber":123,"author":{"gitId":"jeremy-7007"},"content":"![ModelClassDiagram2](images/ModelClassDiagram2.png)","lastModifiedDate":"2021-11-08"},{"lineNumber":124,"author":{"gitId":"jeremy-7007"},"content":"![ModelClassDiagram3](images/ModelClassDiagram3.png)","lastModifiedDate":"2021-11-08"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":127,"author":{"gitId":"-"},"content":"The `Model` component,","lastModifiedDate":"2021-07-31"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":129,"author":{"gitId":"jeremy-7007"},"content":"* stores the address book data i.e., all `Person`, `Task` and `Group` objects (which are contained in a `UniquePersonList`, `UniqueTaskList` or `UniqueGroupList` object respectively).","lastModifiedDate":"2021-11-08"},{"lineNumber":130,"author":{"gitId":"jeremy-7007"},"content":"* stores the currently \u0027selected\u0027 `Person`, `Task` or `Group` objects (e.g., results of a search query) as a separate _filtered_ list which is exposed to outsiders as an unmodifiable `ObservableList` that can be \u0027observed\u0027 e.g. the UI can be bound to this list so that the UI automatically updates when the data in the list change.","lastModifiedDate":"2021-11-08"},{"lineNumber":131,"author":{"gitId":"-"},"content":"* stores a `UserPref` object that represents the user‚Äôs preferences. This is exposed to the outside as a `ReadOnlyUserPref` objects.","lastModifiedDate":"2021-07-31"},{"lineNumber":132,"author":{"gitId":"-"},"content":"* does not depend on any of the other three components (as the `Model` represents data entities of the domain, they should make sense on their own without depending on other components)","lastModifiedDate":"2021-07-31"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":134,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** An alternative (arguably, a more OOP) model is given below. It has a `Tag` list in the `AddressBook`, which `Person` references. This allows `AddressBook` to only require one `Tag` object per unique tag, instead of each `Person` needing their own `Tag` objects.\u003cbr\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":136,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/BetterModelClassDiagram.png\" width\u003d\"450\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":141,"author":{"gitId":"-"},"content":"### Storage component","lastModifiedDate":"2020-05-23"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":143,"author":{"gitId":"-"},"content":"**API** : [`Storage.java`](https://github.com/se-edu/addressbook-level3/tree/master/src/main/java/seedu/address/storage/Storage.java)","lastModifiedDate":"2020-05-23"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":145,"author":{"gitId":"-"},"content":"\u003cimg src\u003d\"images/StorageClassDiagram.png\" width\u003d\"550\" /\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":147,"author":{"gitId":"-"},"content":"The `Storage` component,","lastModifiedDate":"2020-05-23"},{"lineNumber":148,"author":{"gitId":"-"},"content":"* can save both address book data and user preference data in json format, and read them back into corresponding objects.","lastModifiedDate":"2021-07-31"},{"lineNumber":149,"author":{"gitId":"-"},"content":"* inherits from both `AddressBookStorage` and `UserPrefStorage`, which means it can be treated as either one (if only the functionality of only one is needed).","lastModifiedDate":"2021-07-31"},{"lineNumber":150,"author":{"gitId":"-"},"content":"* depends on some classes in the `Model` component (because the `Storage` component\u0027s job is to save/retrieve objects that belong to the `Model`)","lastModifiedDate":"2021-07-21"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"### Common classes","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":154,"author":{"gitId":"-"},"content":"Classes used by multiple components are in the `seedu.addressbook.commons` package.","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":156,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":157,"author":{"gitId":"jeremy-7007"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2021-11-08"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":159,"author":{"gitId":"-"},"content":"## **Implementation**","lastModifiedDate":"2020-05-23"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":161,"author":{"gitId":"-"},"content":"This section describes some noteworthy details on how certain features are implemented.","lastModifiedDate":"2020-05-23"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":163,"author":{"gitId":"eltonyeh"},"content":"### Uniquely identify persons/groups/tasks","lastModifiedDate":"2021-10-20"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":165,"author":{"gitId":"eltonyeh"},"content":"#### Implementation","lastModifiedDate":"2021-10-20"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":167,"author":{"gitId":"eltonyeh"},"content":"We identify different persons/groups/tasks (\"elements\" for simplicity) by assigning them unique ids. This is done by","lastModifiedDate":"2021-10-20"},{"lineNumber":168,"author":{"gitId":"eltonyeh"},"content":"the `UniqueId` class. Each `UniqueId` instance stores a randomly-generated UUID and the owner of the id. When an element","lastModifiedDate":"2021-10-20"},{"lineNumber":169,"author":{"gitId":"eltonyeh"},"content":"is created, the constructors can call `UniqueId#generateId()` to generate a new `UniqueId`.","lastModifiedDate":"2021-10-20"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":171,"author":{"gitId":"eltonyeh"},"content":"The interface `HasUniqueId` is created for classes whose instances may need to be uniquely identified. `HasUniqueId`","lastModifiedDate":"2021-10-20"},{"lineNumber":172,"author":{"gitId":"eltonyeh"},"content":"includes a method `getId` that should be overridden by its subclasses. `HasUniqueId#getId()` should return the","lastModifiedDate":"2021-10-20"},{"lineNumber":173,"author":{"gitId":"eltonyeh"},"content":"`UniqueId` of the object. By implementing `HasUniqueId`, other classes can deal with id-related operations without","lastModifiedDate":"2021-10-20"},{"lineNumber":174,"author":{"gitId":"eltonyeh"},"content":"exhausting all classes that have `UniqueId` as instance.","lastModifiedDate":"2021-10-20"},{"lineNumber":175,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":176,"author":{"gitId":"eltonyeh"},"content":"When storing references of `HasUniqueId`, we can simply store their id, instead of storing the entire object.","lastModifiedDate":"2021-10-20"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":178,"author":{"gitId":"eltonyeh"},"content":"\u003cimg src\u003d\"images/UniqueIdDiagram.png\" alt\u003d\"Unique id diagram\" width\u003d\"254\"\u003e","lastModifiedDate":"2021-10-20"},{"lineNumber":179,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":180,"author":{"gitId":"eltonyeh"},"content":"#### Design Consideration","lastModifiedDate":"2021-10-20"},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":182,"author":{"gitId":"eltonyeh"},"content":"**Aspect: How to generate a unique id:**","lastModifiedDate":"2021-10-20"},{"lineNumber":183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":184,"author":{"gitId":"eltonyeh"},"content":"- Aspect 1 (Current choice): UUID (128-bit label)","lastModifiedDate":"2021-10-20"},{"lineNumber":185,"author":{"gitId":"eltonyeh"},"content":"  - Pros: Low possibility of collision","lastModifiedDate":"2021-10-20"},{"lineNumber":186,"author":{"gitId":"eltonyeh"},"content":"  - Cons: Require more spaces to store","lastModifiedDate":"2021-10-20"},{"lineNumber":187,"author":{"gitId":"eltonyeh"},"content":"- Aspect 2: `java.rmi.server.UID` (unique ID over time with respect to the host that it was generated on)","lastModifiedDate":"2021-10-20"},{"lineNumber":188,"author":{"gitId":"eltonyeh"},"content":"  - Pros: Ensure uniqueness within same device","lastModifiedDate":"2021-10-20"},{"lineNumber":189,"author":{"gitId":"eltonyeh"},"content":"  - Cons: As users can copy the data file and run the program in other devices, it may corrupt.","lastModifiedDate":"2021-10-20"},{"lineNumber":190,"author":{"gitId":"eltonyeh"},"content":"- Aspect 3: UID + IP address:","lastModifiedDate":"2021-10-20"},{"lineNumber":191,"author":{"gitId":"eltonyeh"},"content":"  - Pros: Solve the problem introduced in aspect 2.","lastModifiedDate":"2021-10-20"},{"lineNumber":192,"author":{"gitId":"eltonyeh"},"content":"  - Cons: Require more spaces to store, IP addresses may confuse collaborator as they are not supposed to be in an id.","lastModifiedDate":"2021-10-20"},{"lineNumber":193,"author":{"gitId":"eltonyeh"},"content":"- Aspect 4: Give a serial number for each objects","lastModifiedDate":"2021-10-20"},{"lineNumber":194,"author":{"gitId":"eltonyeh"},"content":"  - Pros: Easy to implement / intuitive.","lastModifiedDate":"2021-10-20"},{"lineNumber":195,"author":{"gitId":"eltonyeh"},"content":"  - Cons: Numbers (`int`, `long`) may be out-of-bound, need to keep a reference of the total number of id.","lastModifiedDate":"2021-10-20"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":197,"author":{"gitId":"jeremy-7007"},"content":"### Assign/Unassign task to student","lastModifiedDate":"2021-10-19"},{"lineNumber":198,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":199,"author":{"gitId":"jeremy-7007"},"content":"#### Implementation","lastModifiedDate":"2021-10-19"},{"lineNumber":200,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":201,"author":{"gitId":"jeremy-7007"},"content":"Task assignment to each student and group is facilitated through the `UniqueId` class. Each `Person` object, `Task`","lastModifiedDate":"2021-11-08"},{"lineNumber":202,"author":{"gitId":"jeremy-7007"},"content":"object and `Group` object has a `UniqueId` to identify them. Task assignment is stored as a set of `UniqueId`s in the `Person` object and `Group` object.","lastModifiedDate":"2021-11-08"},{"lineNumber":203,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":204,"author":{"gitId":"jeremy-7007"},"content":"![TaskAssignment](images/TaskAssignmentDiagram.png)","lastModifiedDate":"2021-10-19"},{"lineNumber":205,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":206,"author":{"gitId":"jeremy-7007"},"content":"The implementation currently supports two task commands:","lastModifiedDate":"2021-10-19"},{"lineNumber":207,"author":{"gitId":"jeremy-7007"},"content":"- `AssignTaskToPersonCommand`: when executed, adds the `UniqueId` representing the `Task` to the set of `UniqueId`s stored in the `Person` object.","lastModifiedDate":"2021-11-08"},{"lineNumber":208,"author":{"gitId":"jeremy-7007"},"content":"- `AssignTaskToGroupCommand`: when executed, adds the `UniqueId` representing the `Task` to the set of `UniqueId`s stored in the `Group` object.","lastModifiedDate":"2021-11-08"},{"lineNumber":209,"author":{"gitId":"jeremy-7007"},"content":"- `UnassignTaskFromPersonCommand`: when executed, removes the `UniqueId` representing the `Task` from the set of `UniqueId`s stored in the `Person` object.","lastModifiedDate":"2021-11-08"},{"lineNumber":210,"author":{"gitId":"jeremy-7007"},"content":"- `UnassignTaskFromGroupCommand`: when executed, removes the `UniqueId` representing the `Task` from the set of `UniqueId`s stored in the `Group` object.","lastModifiedDate":"2021-11-08"},{"lineNumber":211,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":212,"author":{"gitId":"kvihashini"},"content":"#### Implementation Rationale","lastModifiedDate":"2021-11-07"},{"lineNumber":213,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":214,"author":{"gitId":"jeremy-7007"},"content":"- `UniqueId` is used to easily identify and retrieve different `Task` and `Person` objects.","lastModifiedDate":"2021-11-08"},{"lineNumber":215,"author":{"gitId":"jeremy-7007"},"content":"- Storing assignments as a set in each `Person` and `Group` makes it easy to display and retrieve all assigned tasks for each `Person` or `Group`.","lastModifiedDate":"2021-11-08"},{"lineNumber":216,"author":{"gitId":"jeremy-7007"},"content":"It also makes implementation relatively simple, without having to use external lists.","lastModifiedDate":"2021-11-08"},{"lineNumber":217,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":218,"author":{"gitId":"jeremy-7007"},"content":"#### Alternatives considered","lastModifiedDate":"2021-10-19"},{"lineNumber":219,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":220,"author":{"gitId":"jeremy-7007"},"content":"Storing assignments as a separate set in the `AddressBook`. This may complicate command execution as the command needs to retrieve the","lastModifiedDate":"2021-10-19"},{"lineNumber":221,"author":{"gitId":"jeremy-7007"},"content":"entire set from the `AddressBook` and look up the persons and tasks in the set.","lastModifiedDate":"2021-10-19"},{"lineNumber":222,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":223,"author":{"gitId":"Neha-5678"},"content":"### Edit a task","lastModifiedDate":"2021-10-21"},{"lineNumber":224,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":225,"author":{"gitId":"Neha-5678"},"content":"#### Implementation","lastModifiedDate":"2021-11-07"},{"lineNumber":226,"author":{"gitId":"Neha-5678"},"content":"This command is implemented to allow tutors to edit the details of the tasks stored in TutorMaster.","lastModifiedDate":"2021-10-21"},{"lineNumber":227,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":228,"author":{"gitId":"Neha-5678"},"content":"The tutor\u0027s input to edit a particular task is executed by the Logic Manager. The logic manager passes the input to the","lastModifiedDate":"2021-10-21"},{"lineNumber":229,"author":{"gitId":"Neha-5678"},"content":"`AddressBookParser` class which checks for the matching command. The arguments of the input are passed to `TaskCommandsParser`","lastModifiedDate":"2021-10-21"},{"lineNumber":230,"author":{"gitId":"Neha-5678"},"content":"class which will then check for the matching action word. In this case, the action word will be \u0027-e\u0027 and the arguments will be","lastModifiedDate":"2021-10-21"},{"lineNumber":231,"author":{"gitId":"Neha-5678"},"content":"passed to `EditTaskCommandParser` class which will create an `EditTaskCommand` object. This command object is returned to the","lastModifiedDate":"2021-11-07"},{"lineNumber":232,"author":{"gitId":"Neha-5678"},"content":"`LogicManager` class to be executed. The `EditTaskCommand` object will create a newly edited task with the edited details and","lastModifiedDate":"2021-10-21"},{"lineNumber":233,"author":{"gitId":"Neha-5678"},"content":"set the edited task in place of the original task in the model. It also returns a `CommandResult` object that is returned","lastModifiedDate":"2021-10-21"},{"lineNumber":234,"author":{"gitId":"Neha-5678"},"content":"to the `LogicManager` class. The `AddressBookParser` class and `EditTaskCommandParser` class were not added in the below","lastModifiedDate":"2021-11-07"},{"lineNumber":235,"author":{"gitId":"Neha-5678"},"content":"diagram for simplicity.","lastModifiedDate":"2021-11-07"},{"lineNumber":236,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":237,"author":{"gitId":"Neha-5678"},"content":"![EditTask](images/EditTaskSequenceDiagram.png)","lastModifiedDate":"2021-10-21"},{"lineNumber":238,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":239,"author":{"gitId":"Neha-5678"},"content":"#### Implementation Rationale","lastModifiedDate":"2021-11-07"},{"lineNumber":240,"author":{"gitId":"Neha-5678"},"content":"When a new task is created with the details input by the user, the uniqueId of the task also changes. This implies that","lastModifiedDate":"2021-10-21"},{"lineNumber":241,"author":{"gitId":"Neha-5678"},"content":"the list of uniqueIds of tasks assigned to each student will have to be edited so store the newly created task in place of","lastModifiedDate":"2021-10-21"},{"lineNumber":242,"author":{"gitId":"Neha-5678"},"content":"the original task. To tackle this issue, we created a new constructor for the `Task` class such that we can pass in the","lastModifiedDate":"2021-10-21"},{"lineNumber":243,"author":{"gitId":"Neha-5678"},"content":"uniqueId of the original task so that the id is retained and does not change. This simplifies matters when it comes to","lastModifiedDate":"2021-10-21"},{"lineNumber":244,"author":{"gitId":"Neha-5678"},"content":"assigning and unassigning tasks to the students.","lastModifiedDate":"2021-10-21"},{"lineNumber":245,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":246,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":247,"author":{"gitId":"kvihashini"},"content":"#### Alternatives Considered","lastModifiedDate":"2021-11-08"},{"lineNumber":248,"author":{"gitId":"Neha-5678"},"content":"An alternative considered was to edit the list of uniqueIds of tasks assigned to each student after editing a particular","lastModifiedDate":"2021-10-21"},{"lineNumber":249,"author":{"gitId":"Neha-5678"},"content":"task. However, this seemed inefficient and hence, we went with the current implementation.","lastModifiedDate":"2021-10-21"},{"lineNumber":250,"author":{"gitId":"kvihashini"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":251,"author":{"gitId":"kvihashini"},"content":"### View a student","lastModifiedDate":"2021-10-20"},{"lineNumber":252,"author":{"gitId":"kvihashini"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":253,"author":{"gitId":"kvihashini"},"content":"#### Implementation","lastModifiedDate":"2021-10-20"},{"lineNumber":254,"author":{"gitId":"kvihashini"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":255,"author":{"gitId":"kvihashini"},"content":"The command to view a student is facilitated through the `PersonCommandsParser` class. The `PersonCommandsParser` class","lastModifiedDate":"2021-10-20"},{"lineNumber":256,"author":{"gitId":"kvihashini"},"content":"checks the command word given by the user and creates a `ViewPersonCommandParser` object which also creates a `ViewPersonCommand`","lastModifiedDate":"2021-10-20"},{"lineNumber":257,"author":{"gitId":"kvihashini"},"content":"object. The `ViewPersonCommand` object returns the command back to the `LogicManager` class which allows the \u0027view command\u0027 to be","lastModifiedDate":"2021-10-20"},{"lineNumber":258,"author":{"gitId":"kvihashini"},"content":"executed.","lastModifiedDate":"2021-11-07"},{"lineNumber":259,"author":{"gitId":"kvihashini"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":260,"author":{"gitId":"kvihashini"},"content":"The `ViewPersonCommand` object gets the list of students via `ModelManager#getfilteredPersonsList()`. It then obtains the","lastModifiedDate":"2021-11-07"},{"lineNumber":261,"author":{"gitId":"kvihashini"},"content":"target student via `AddressBook#get(index)` to return the respective `Person` at the index, hence displaying","lastModifiedDate":"2021-11-07"},{"lineNumber":262,"author":{"gitId":"kvihashini"},"content":"the details of the student in the \u0027Result Display\u0027.","lastModifiedDate":"2021-11-07"},{"lineNumber":263,"author":{"gitId":"kvihashini"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":264,"author":{"gitId":"kvihashini"},"content":"The `ViewPersonCommand` calls the methods `ModelManager#setViewingType` and `ModelManager#setPersonToView` to modify the","lastModifiedDate":"2021-11-07"},{"lineNumber":265,"author":{"gitId":"kvihashini"},"content":"current UI of the application to display all details of a student in the Viewing Panel","lastModifiedDate":"2021-11-07"},{"lineNumber":266,"author":{"gitId":"kvihashini"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":267,"author":{"gitId":"kvihashini"},"content":"The `viewPersonCommandParser` class is not included in the sequence diagram below for simplicity.","lastModifiedDate":"2021-11-07"},{"lineNumber":268,"author":{"gitId":"kvihashini"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":269,"author":{"gitId":"kvihashini"},"content":"#### Implementation Rationale","lastModifiedDate":"2021-11-07"},{"lineNumber":270,"author":{"gitId":"kvihashini"},"content":"* `PersonCommandParser` helps filter out `ViewPersonCommandParser` as it helps differentiate the various commands","lastModifiedDate":"2021-10-20"},{"lineNumber":271,"author":{"gitId":"kvihashini"},"content":"  related to student.","lastModifiedDate":"2021-10-20"},{"lineNumber":272,"author":{"gitId":"kvihashini"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":273,"author":{"gitId":"kvihashini"},"content":"#### Alternatives Considered","lastModifiedDate":"2021-11-07"},{"lineNumber":274,"author":{"gitId":"kvihashini"},"content":"View the student from the person panel itself as it also displays the students\u0027 details. This may not include other details","lastModifiedDate":"2021-11-07"},{"lineNumber":275,"author":{"gitId":"kvihashini"},"content":"relating to the student, such as the different `Task` object they have, and the `Group` they are in.","lastModifiedDate":"2021-10-20"},{"lineNumber":276,"author":{"gitId":"kvihashini"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":277,"author":{"gitId":"kvihashini"},"content":"The following sequence diagram shows how the `view student` operation works.","lastModifiedDate":"2021-11-07"},{"lineNumber":278,"author":{"gitId":"kvihashini"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":279,"author":{"gitId":"kvihashini"},"content":"![ViewDiagram](images/ViewStudentDiagram.png)","lastModifiedDate":"2021-10-20"},{"lineNumber":280,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":281,"author":{"gitId":"tanhuakun"},"content":"### Changing View Panel","lastModifiedDate":"2021-11-04"},{"lineNumber":282,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":283,"author":{"gitId":"tanhuakun"},"content":"On the right side of the GUI, there exists a panel with contents that change depending on the user\u0027s selected view. For example","lastModifiedDate":"2021-11-04"},{"lineNumber":284,"author":{"gitId":"tanhuakun"},"content":"it can show the current schedule or more details of a person.","lastModifiedDate":"2021-11-04"},{"lineNumber":285,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":286,"author":{"gitId":"tanhuakun"},"content":"#### Implementation","lastModifiedDate":"2021-11-04"},{"lineNumber":287,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":288,"author":{"gitId":"tanhuakun"},"content":"![ViewTypeDiagram](images/ViewTypes.png)","lastModifiedDate":"2021-11-04"},{"lineNumber":289,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":290,"author":{"gitId":"tanhuakun"},"content":"The UI listens to changes in the Model via an ObservableProperty within the ModelManager. It does this by","lastModifiedDate":"2021-11-04"},{"lineNumber":291,"author":{"gitId":"tanhuakun"},"content":"registering a ChangeListener on initialisation.","lastModifiedDate":"2021-11-04"},{"lineNumber":292,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":293,"author":{"gitId":"tanhuakun"},"content":"If a Viewing Panel should be updated when the Command executes, the Command will set the appropriate ViewingType within the Model.","lastModifiedDate":"2021-11-04"},{"lineNumber":294,"author":{"gitId":"tanhuakun"},"content":"This will update the ObservableProperty that the UI is listening on, hence updating the UI with the correct ViewingType.","lastModifiedDate":"2021-11-04"},{"lineNumber":295,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":296,"author":{"gitId":"tanhuakun"},"content":"The contents of the ViewingType are obtained through other Observables in the Model as well. These are updated independently","lastModifiedDate":"2021-11-04"},{"lineNumber":297,"author":{"gitId":"tanhuakun"},"content":"of the ViewingType.","lastModifiedDate":"2021-11-04"},{"lineNumber":298,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":299,"author":{"gitId":"tanhuakun"},"content":"#### Implementation Rationale","lastModifiedDate":"2021-11-04"},{"lineNumber":300,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":301,"author":{"gitId":"tanhuakun"},"content":"This method of using a ChangeListener is in line with the overall architecture of the application, where the UI responds to any","lastModifiedDate":"2021-11-04"},{"lineNumber":302,"author":{"gitId":"tanhuakun"},"content":"changes in the Model. This also removes the need for Model and Logic packages to be dependent on the UI.","lastModifiedDate":"2021-11-04"},{"lineNumber":303,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":304,"author":{"gitId":"tanhuakun"},"content":"#### Alternatives Considered","lastModifiedDate":"2021-11-04"},{"lineNumber":305,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":306,"author":{"gitId":"tanhuakun"},"content":"We had considered using CommandResult to inform the UI what the ViewingType should be, which the UI can obtain after executing","lastModifiedDate":"2021-11-04"},{"lineNumber":307,"author":{"gitId":"tanhuakun"},"content":"the command. This works well, but could get complicated if we used the CommandResult for all sorts of feedback to the UI. Using","lastModifiedDate":"2021-11-04"},{"lineNumber":308,"author":{"gitId":"tanhuakun"},"content":"event listeners was more convenient and allowed us to store less information in the CommandResult itself.","lastModifiedDate":"2021-11-04"},{"lineNumber":309,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":310,"author":{"gitId":"tanhuakun"},"content":"### Lessons","lastModifiedDate":"2021-10-21"},{"lineNumber":311,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":312,"author":{"gitId":"tanhuakun"},"content":"#### Implementation","lastModifiedDate":"2021-10-21"},{"lineNumber":313,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":314,"author":{"gitId":"tanhuakun"},"content":"Lessons and all related classes are inside the `seedu.address.model.lesson` package. A `Lesson` consists of a `java.time.DayOfWeek`,","lastModifiedDate":"2021-10-21"},{"lineNumber":315,"author":{"gitId":"tanhuakun"},"content":"a `Subject` and a `Timeslot`, which describes a Lesson well.","lastModifiedDate":"2021-10-21"},{"lineNumber":316,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":317,"author":{"gitId":"tanhuakun"},"content":"A `NoOverlapLessonList` contains a list of lessons, in which the lessons within must not overlap. Overlap is defined as falling on the","lastModifiedDate":"2021-10-21"},{"lineNumber":318,"author":{"gitId":"tanhuakun"},"content":"same day and with timings that run within each other.","lastModifiedDate":"2021-10-21"},{"lineNumber":319,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":320,"author":{"gitId":"tanhuakun"},"content":"`LessonWithAttendees` is a useful wrapper class to hold a list of attendees and lessons. This is used in particular for transporting lesson information around.","lastModifiedDate":"2021-11-04"},{"lineNumber":321,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":322,"author":{"gitId":"tanhuakun"},"content":"The interfaces `Attendee` and `LessonAssignable` is to be implemented by classes of other packages that wish to use lessons.","lastModifiedDate":"2021-11-04"},{"lineNumber":323,"author":{"gitId":"tanhuakun"},"content":"For example, a `Person` is both an `Attendee` and a `LessonAssignable`, while a `Group` is only","lastModifiedDate":"2021-11-04"},{"lineNumber":324,"author":{"gitId":"tanhuakun"},"content":"a `LessonAssignable`.","lastModifiedDate":"2021-10-21"},{"lineNumber":325,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":326,"author":{"gitId":"tanhuakun"},"content":"![LessonDiagram](images/LessonDiagram.png)","lastModifiedDate":"2021-10-21"},{"lineNumber":327,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":328,"author":{"gitId":"tanhuakun"},"content":"#### Implementation Rationale","lastModifiedDate":"2021-10-21"},{"lineNumber":329,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":330,"author":{"gitId":"tanhuakun"},"content":"`NoOverlapLessonList` is useful in cases such as students where they should not have lessons that overlap. `LessonWithAttendees`","lastModifiedDate":"2021-10-21"},{"lineNumber":331,"author":{"gitId":"tanhuakun"},"content":"is a useful wrapper class to obtain the full details of a lesson (the lesson details and the details of attendees), since a lesson","lastModifiedDate":"2021-10-21"},{"lineNumber":332,"author":{"gitId":"tanhuakun"},"content":"does not have a direct reference to its attendee.","lastModifiedDate":"2021-10-21"},{"lineNumber":333,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":334,"author":{"gitId":"tanhuakun"},"content":"Lessons were created to be held by other classes, and thus does not hold information about its attendees. We acknowledge that a","lastModifiedDate":"2021-10-21"},{"lineNumber":335,"author":{"gitId":"tanhuakun"},"content":"`Lesson` can hold reference to its `Attendee` and vice versa. However, for the sake of simplicity, we have decided to let other classes be","lastModifiedDate":"2021-11-04"},{"lineNumber":336,"author":{"gitId":"tanhuakun"},"content":"in charge of knowing who _attends_ each `Lesson`.","lastModifiedDate":"2021-10-21"},{"lineNumber":337,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":338,"author":{"gitId":"tanhuakun"},"content":"#### Alternatives considered","lastModifiedDate":"2021-10-21"},{"lineNumber":339,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":340,"author":{"gitId":"tanhuakun"},"content":"When `Lesson` was implemented, the `Person` class was already in place. We had originally considered a two-way reference, in which","lastModifiedDate":"2021-10-21"},{"lineNumber":341,"author":{"gitId":"tanhuakun"},"content":"a `Person` had multiple `Lesson` and a `Lesson` had multiple `Person`. However, given that this app was mainly for tuition, in which","lastModifiedDate":"2021-10-21"},{"lineNumber":342,"author":{"gitId":"tanhuakun"},"content":"most lessons would be 1:1, it made more sense to assign `Lesson` under a `Person` instead, and if multiple `Person` was attending","lastModifiedDate":"2021-10-21"},{"lineNumber":343,"author":{"gitId":"tanhuakun"},"content":"the same `Lesson`, they would be assigned through a `Group`. The avoidance of a two-way reference was also due to the immutability","lastModifiedDate":"2021-10-21"},{"lineNumber":344,"author":{"gitId":"tanhuakun"},"content":"of `Person`, in which any updates to a `Person` could cause any references to it to be invalid.","lastModifiedDate":"2021-10-21"},{"lineNumber":345,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":346,"author":{"gitId":"tanhuakun"},"content":"#### \\[Proposed\\] Future implementation","lastModifiedDate":"2021-10-21"},{"lineNumber":347,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":348,"author":{"gitId":"tanhuakun"},"content":"Add support for a custom recurrence of lessons. Right now it is guaranteed that a lesson would occur weekly, which is in line with","lastModifiedDate":"2021-10-21"},{"lineNumber":349,"author":{"gitId":"tanhuakun"},"content":"what many of our users require, but the ability to customise can be useful.","lastModifiedDate":"2021-10-21"},{"lineNumber":350,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":351,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":352,"author":{"gitId":"jeremy-7007"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2021-11-08"},{"lineNumber":353,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":354,"author":{"gitId":"-"},"content":"## **Documentation, logging, testing, configuration, dev-ops**","lastModifiedDate":"2020-06-07"},{"lineNumber":355,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":356,"author":{"gitId":"-"},"content":"* [Documentation guide](Documentation.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":357,"author":{"gitId":"-"},"content":"* [Testing guide](Testing.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":358,"author":{"gitId":"-"},"content":"* [Logging guide](Logging.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":359,"author":{"gitId":"-"},"content":"* [Configuration guide](Configuration.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":360,"author":{"gitId":"-"},"content":"* [DevOps guide](DevOps.md)","lastModifiedDate":"2020-06-07"},{"lineNumber":361,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":362,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":363,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":364,"author":{"gitId":"-"},"content":"## **Appendix: Requirements**","lastModifiedDate":"2020-05-23"},{"lineNumber":365,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":366,"author":{"gitId":"-"},"content":"### Product scope","lastModifiedDate":"2020-05-23"},{"lineNumber":367,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":368,"author":{"gitId":"-"},"content":"**Target user profile**:","lastModifiedDate":"2020-05-23"},{"lineNumber":369,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":370,"author":{"gitId":"tanhuakun"},"content":"* has a need to manage lessons and contact details for a significant number of students","lastModifiedDate":"2021-09-27"},{"lineNumber":371,"author":{"gitId":"tanhuakun"},"content":"* has a need to assign tasks to many students","lastModifiedDate":"2021-09-27"},{"lineNumber":372,"author":{"gitId":"tanhuakun"},"content":"* wants to keep track of students\u0027 progress easily","lastModifiedDate":"2021-09-27"},{"lineNumber":373,"author":{"gitId":"-"},"content":"* prefer desktop apps over other types","lastModifiedDate":"2020-05-23"},{"lineNumber":374,"author":{"gitId":"-"},"content":"* can type fast","lastModifiedDate":"2020-05-23"},{"lineNumber":375,"author":{"gitId":"-"},"content":"* prefers typing to mouse interactions","lastModifiedDate":"2020-05-26"},{"lineNumber":376,"author":{"gitId":"-"},"content":"* is reasonably comfortable using CLI apps","lastModifiedDate":"2020-05-23"},{"lineNumber":377,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":378,"author":{"gitId":"Neha-5678"},"content":"**Value proposition**: manage students\u0027 relevant details and tasks to be assigned faster than a typical mouse/GUI driven app.","lastModifiedDate":"2021-09-28"},{"lineNumber":379,"author":{"gitId":"Neha-5678"},"content":"The app is purely offline, and does not include any online feature.","lastModifiedDate":"2021-09-28"},{"lineNumber":380,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":381,"author":{"gitId":"jeremy-7007"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2021-11-08"},{"lineNumber":382,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":383,"author":{"gitId":"-"},"content":"### User stories","lastModifiedDate":"2020-06-07"},{"lineNumber":384,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":385,"author":{"gitId":"-"},"content":"Priorities: High (must have) - `* * *`, Medium (nice to have) - `* *`, Low (unlikely to have) - `*`","lastModifiedDate":"2020-05-23"},{"lineNumber":386,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":387,"author":{"gitId":"-"},"content":"| Priority | As a ‚Ä¶‚Äã                                    | I want to ‚Ä¶‚Äã                           | So that I can‚Ä¶‚Äã                                                     |","lastModifiedDate":"2020-05-23"},{"lineNumber":388,"author":{"gitId":"Neha-5678"},"content":"| -------- | ------------------------------------------ | -------------------------------------------- | ---------------------------------------------------------------------- |","lastModifiedDate":"2021-09-28"},{"lineNumber":389,"author":{"gitId":"-"},"content":"| `* * *`  | new user                                   | see usage instructions                       | refer to instructions when I forget how to use the App                 |","lastModifiedDate":"2020-05-23"},{"lineNumber":390,"author":{"gitId":"tanhuakun"},"content":"| `* * *`  | user                                       | add a new student                            | manage students I have that are not present in the app                 |","lastModifiedDate":"2021-11-07"},{"lineNumber":391,"author":{"gitId":"tanhuakun"},"content":"| `* * *`  | user                                       | delete a student                             | remove entries that I no longer need                                   |","lastModifiedDate":"2021-09-27"},{"lineNumber":392,"author":{"gitId":"tanhuakun"},"content":"| `* * *`  | user                                       | find a student by name                       | locate details of persons without having to go through the entire list |","lastModifiedDate":"2021-09-27"},{"lineNumber":393,"author":{"gitId":"tanhuakun"},"content":"| `* * *`  | user                                       | group students together                      | locate similar students through their groupings easily                          |","lastModifiedDate":"2021-11-07"},{"lineNumber":394,"author":{"gitId":"tanhuakun"},"content":"| `* * *`  | tutor                                      | add a new task                               | remember tasks I have created easily                                   |","lastModifiedDate":"2021-09-27"},{"lineNumber":395,"author":{"gitId":"tanhuakun"},"content":"| `* * *`  | tutor                                      | assign tasks to students                     | reuse similar tasks for my students                                    |","lastModifiedDate":"2021-09-27"},{"lineNumber":396,"author":{"gitId":"tanhuakun"},"content":"| `* * *`  | tutor                                      | mark tasks as completed                      | track my students\u0027 task progress                                       |","lastModifiedDate":"2021-09-27"},{"lineNumber":397,"author":{"gitId":"tanhuakun"},"content":"| `* * *`  | user                                       | delete a task                                | remove tasks that I no longer need                                     |","lastModifiedDate":"2021-09-27"},{"lineNumber":398,"author":{"gitId":"tanhuakun"},"content":"| `* * *`  | busy tutor                                 | view current lesson schedules                | plan my working and resting hours accordingly                          |","lastModifiedDate":"2021-09-27"},{"lineNumber":399,"author":{"gitId":"Neha-5678"},"content":"| `* *`    | tutor                                      | set deadlines for tasks                      | collect assignments in a timely manner                                 |","lastModifiedDate":"2021-09-28"},{"lineNumber":400,"author":{"gitId":"Neha-5678"},"content":"| `* *`    | tutor                                      | input students\u0027 grade for tasks              | track how my students are coping                                       |","lastModifiedDate":"2021-09-28"},{"lineNumber":401,"author":{"gitId":"-"},"content":"| `* *`    | user                                       | hide private contact details                 | minimize chance of someone else seeing them by accident                |","lastModifiedDate":"2020-05-23"},{"lineNumber":402,"author":{"gitId":"tanhuakun"},"content":"| `* *`    | tutor                                      | store exam dates of students                 | prioritize and help a large number of students better                  |","lastModifiedDate":"2021-09-27"},{"lineNumber":403,"author":{"gitId":"tanhuakun"},"content":"| `* *`    | busy tutor                                 | be warned if schedules clash                 | minimize error in my planning                                          |","lastModifiedDate":"2021-09-27"},{"lineNumber":404,"author":{"gitId":"Neha-5678"},"content":"| `* *`    | busy tutor                                 | track who has paid their fees                | send reminders to students who have not paid                           |","lastModifiedDate":"2021-09-28"},{"lineNumber":405,"author":{"gitId":"Neha-5678"},"content":"| `*`      | tutor                                      | record students\u0027 attendance                  | track which lessons students have missed and help them catch up        |","lastModifiedDate":"2021-09-28"},{"lineNumber":406,"author":{"gitId":"-"},"content":"| `*`      | user with many persons in the address book | sort persons by name                         | locate a person easily                                                 |","lastModifiedDate":"2020-05-23"},{"lineNumber":407,"author":{"gitId":"Neha-5678"},"content":"| `*`      | tutor                                      | monitor number of tasks assigned to a student| assign tasks to students while ensuring they can manage the workload   |","lastModifiedDate":"2021-09-28"},{"lineNumber":408,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":409,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":410,"author":{"gitId":"-"},"content":"### Use cases","lastModifiedDate":"2020-06-07"},{"lineNumber":411,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":412,"author":{"gitId":"jeremy-7007"},"content":"(For all use cases below, the **System** is `TutorMaster` and the **Actor** is the `user`, unless specified otherwise)","lastModifiedDate":"2021-09-28"},{"lineNumber":413,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":414,"author":{"gitId":"jeremy-7007"},"content":"**Use case: Delete a student**","lastModifiedDate":"2021-09-28"},{"lineNumber":415,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":416,"author":{"gitId":"-"},"content":"**MSS**","lastModifiedDate":"2020-05-23"},{"lineNumber":417,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":418,"author":{"gitId":"jeremy-7007"},"content":"1.  User requests to list all students","lastModifiedDate":"2021-09-28"},{"lineNumber":419,"author":{"gitId":"jeremy-7007"},"content":"2.  TutorMaster shows a list of students in the students list","lastModifiedDate":"2021-09-28"},{"lineNumber":420,"author":{"gitId":"jeremy-7007"},"content":"3.  User requests to delete a specific student in the list","lastModifiedDate":"2021-09-28"},{"lineNumber":421,"author":{"gitId":"jeremy-7007"},"content":"4.  TutorMaster deletes the student from the students list","lastModifiedDate":"2021-09-28"},{"lineNumber":422,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":423,"author":{"gitId":"-"},"content":"    Use case ends.","lastModifiedDate":"2020-05-23"},{"lineNumber":424,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":425,"author":{"gitId":"-"},"content":"**Extensions**","lastModifiedDate":"2020-05-23"},{"lineNumber":426,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":427,"author":{"gitId":"-"},"content":"* 2a. The list is empty.","lastModifiedDate":"2020-05-23"},{"lineNumber":428,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":429,"author":{"gitId":"-"},"content":"  Use case ends.","lastModifiedDate":"2020-05-23"},{"lineNumber":430,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":431,"author":{"gitId":"-"},"content":"* 3a. The given index is invalid.","lastModifiedDate":"2020-05-23"},{"lineNumber":432,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":433,"author":{"gitId":"jeremy-7007"},"content":"    * 3a1. TutorMaster shows an error message.","lastModifiedDate":"2021-09-28"},{"lineNumber":434,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":435,"author":{"gitId":"-"},"content":"      Use case resumes at step 2.","lastModifiedDate":"2020-05-23"},{"lineNumber":436,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":437,"author":{"gitId":"tanhuakun"},"content":"**Use case: Adding a lesson**","lastModifiedDate":"2021-11-07"},{"lineNumber":438,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":439,"author":{"gitId":"kvihashini"},"content":"**MSS**","lastModifiedDate":"2021-11-07"},{"lineNumber":440,"author":{"gitId":"tanhuakun"},"content":"1. User requests to list all students","lastModifiedDate":"2021-11-07"},{"lineNumber":441,"author":{"gitId":"tanhuakun"},"content":"2. TutorMaster shows a list of students in the students list","lastModifiedDate":"2021-11-07"},{"lineNumber":442,"author":{"gitId":"tanhuakun"},"content":"3. User requests to add a specific lesson to the student","lastModifiedDate":"2021-11-07"},{"lineNumber":443,"author":{"gitId":"tanhuakun"},"content":"4. TutorMaster adds the lesson to the specific student","lastModifiedDate":"2021-11-07"},{"lineNumber":444,"author":{"gitId":"tanhuakun"},"content":"5. TutorMaster displays the specific student in the viewing panel","lastModifiedDate":"2021-11-07"},{"lineNumber":445,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":446,"author":{"gitId":"kvihashini"},"content":"   Use case ends.","lastModifiedDate":"2021-11-07"},{"lineNumber":447,"author":{"gitId":"kvihashini"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":448,"author":{"gitId":"tanhuakun"},"content":"**Extensions**","lastModifiedDate":"2021-11-07"},{"lineNumber":449,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":450,"author":{"gitId":"tanhuakun"},"content":"* 2a. The list is empty. \u003cbr\u003e","lastModifiedDate":"2021-11-07"},{"lineNumber":451,"author":{"gitId":"tanhuakun"},"content":"    Use case ends","lastModifiedDate":"2021-11-07"},{"lineNumber":452,"author":{"gitId":"tanhuakun"},"content":"* 3a. The request details are incorrect or insufficient.\u003cbr\u003e","lastModifiedDate":"2021-11-07"},{"lineNumber":453,"author":{"gitId":"tanhuakun"},"content":"    * 3a1. TutorMaster displays an error message. \u003cbr\u003e","lastModifiedDate":"2021-11-07"},{"lineNumber":454,"author":{"gitId":"tanhuakun"},"content":"    Use case resumes at step 3.","lastModifiedDate":"2021-11-07"},{"lineNumber":455,"author":{"gitId":"tanhuakun"},"content":"* 3b. The lesson overlaps with other lessons that the student has. \u003cbr\u003e","lastModifiedDate":"2021-11-07"},{"lineNumber":456,"author":{"gitId":"tanhuakun"},"content":"    * 3b1. TutorMaster displays an error message. \u003cbr\u003e","lastModifiedDate":"2021-11-07"},{"lineNumber":457,"author":{"gitId":"tanhuakun"},"content":"    Use case ends.","lastModifiedDate":"2021-11-07"},{"lineNumber":458,"author":{"gitId":"jeremy-7007"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":459,"author":{"gitId":"jeremy-7007"},"content":"**Use case: Delete a task**","lastModifiedDate":"2021-09-28"},{"lineNumber":460,"author":{"gitId":"jeremy-7007"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":461,"author":{"gitId":"jeremy-7007"},"content":"**MSS**","lastModifiedDate":"2021-09-28"},{"lineNumber":462,"author":{"gitId":"jeremy-7007"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":463,"author":{"gitId":"jeremy-7007"},"content":"1.  User requests to list all tasks","lastModifiedDate":"2021-09-28"},{"lineNumber":464,"author":{"gitId":"jeremy-7007"},"content":"2.  TutorMaster shows a list of tasks in the tasks list","lastModifiedDate":"2021-09-28"},{"lineNumber":465,"author":{"gitId":"jeremy-7007"},"content":"3.  User requests to delete a specific task in the list","lastModifiedDate":"2021-09-28"},{"lineNumber":466,"author":{"gitId":"jeremy-7007"},"content":"4.  TutorMaster deletes the task from the tasks list","lastModifiedDate":"2021-09-28"},{"lineNumber":467,"author":{"gitId":"jeremy-7007"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":468,"author":{"gitId":"jeremy-7007"},"content":"    Use case ends.","lastModifiedDate":"2021-09-28"},{"lineNumber":469,"author":{"gitId":"jeremy-7007"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":470,"author":{"gitId":"jeremy-7007"},"content":"**Extensions**","lastModifiedDate":"2021-09-28"},{"lineNumber":471,"author":{"gitId":"jeremy-7007"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":472,"author":{"gitId":"jeremy-7007"},"content":"* 2a. The list is empty.","lastModifiedDate":"2021-09-28"},{"lineNumber":473,"author":{"gitId":"jeremy-7007"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":474,"author":{"gitId":"jeremy-7007"},"content":"  Use case ends.","lastModifiedDate":"2021-09-28"},{"lineNumber":475,"author":{"gitId":"jeremy-7007"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":476,"author":{"gitId":"jeremy-7007"},"content":"* 3a. The given index is invalid.","lastModifiedDate":"2021-09-28"},{"lineNumber":477,"author":{"gitId":"jeremy-7007"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":478,"author":{"gitId":"jeremy-7007"},"content":"    * 3a1. TutorMaster shows an error message.","lastModifiedDate":"2021-09-28"},{"lineNumber":479,"author":{"gitId":"jeremy-7007"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":480,"author":{"gitId":"jeremy-7007"},"content":"      Use case resumes at step 2.","lastModifiedDate":"2021-09-28"},{"lineNumber":481,"author":{"gitId":"jeremy-7007"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":482,"author":{"gitId":"jeremy-7007"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":483,"author":{"gitId":"jeremy-7007"},"content":"**Use case: Assign a task to a student**","lastModifiedDate":"2021-09-28"},{"lineNumber":484,"author":{"gitId":"jeremy-7007"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":485,"author":{"gitId":"jeremy-7007"},"content":"**MSS**","lastModifiedDate":"2021-09-28"},{"lineNumber":486,"author":{"gitId":"jeremy-7007"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":487,"author":{"gitId":"jeremy-7007"},"content":"1.  User requests to list all tasks","lastModifiedDate":"2021-09-28"},{"lineNumber":488,"author":{"gitId":"jeremy-7007"},"content":"2.  TutorMaster shows a list of tasks in the tasks list","lastModifiedDate":"2021-09-28"},{"lineNumber":489,"author":{"gitId":"jeremy-7007"},"content":"3.  User requests to list all students","lastModifiedDate":"2021-09-28"},{"lineNumber":490,"author":{"gitId":"jeremy-7007"},"content":"4.  TutorMaster shows a list of students in the students list","lastModifiedDate":"2021-09-28"},{"lineNumber":491,"author":{"gitId":"jeremy-7007"},"content":"5.  User requests to assign a task to a student","lastModifiedDate":"2021-09-28"},{"lineNumber":492,"author":{"gitId":"jeremy-7007"},"content":"6.  TutorMaster assigns the task to the student","lastModifiedDate":"2021-09-28"},{"lineNumber":493,"author":{"gitId":"jeremy-7007"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":494,"author":{"gitId":"jeremy-7007"},"content":"    Use case ends.","lastModifiedDate":"2021-09-28"},{"lineNumber":495,"author":{"gitId":"jeremy-7007"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":496,"author":{"gitId":"jeremy-7007"},"content":"**Extensions**","lastModifiedDate":"2021-09-28"},{"lineNumber":497,"author":{"gitId":"jeremy-7007"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":498,"author":{"gitId":"jeremy-7007"},"content":"* 2a. The tasks list is empty.","lastModifiedDate":"2021-09-28"},{"lineNumber":499,"author":{"gitId":"jeremy-7007"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":500,"author":{"gitId":"jeremy-7007"},"content":"  Use case ends.","lastModifiedDate":"2021-09-28"},{"lineNumber":501,"author":{"gitId":"jeremy-7007"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":502,"author":{"gitId":"jeremy-7007"},"content":"* 4a. The students list is empty.","lastModifiedDate":"2021-09-28"},{"lineNumber":503,"author":{"gitId":"jeremy-7007"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":504,"author":{"gitId":"jeremy-7007"},"content":"  Use case ends.","lastModifiedDate":"2021-09-28"},{"lineNumber":505,"author":{"gitId":"jeremy-7007"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":506,"author":{"gitId":"jeremy-7007"},"content":"* 5a. The given task name or student name is invalid.","lastModifiedDate":"2021-09-28"},{"lineNumber":507,"author":{"gitId":"jeremy-7007"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":508,"author":{"gitId":"jeremy-7007"},"content":"    * 5a1. TutorMaster shows an error message.","lastModifiedDate":"2021-09-28"},{"lineNumber":509,"author":{"gitId":"jeremy-7007"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":510,"author":{"gitId":"jeremy-7007"},"content":"      Use case resumes at step 4.","lastModifiedDate":"2021-09-28"},{"lineNumber":511,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":512,"author":{"gitId":"jeremy-7007"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2021-11-08"},{"lineNumber":513,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":514,"author":{"gitId":"-"},"content":"### Non-Functional Requirements","lastModifiedDate":"2020-05-23"},{"lineNumber":515,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":516,"author":{"gitId":"-"},"content":"1.  Should work on any _mainstream OS_ as long as it has Java `11` or above installed.","lastModifiedDate":"2020-05-23"},{"lineNumber":517,"author":{"gitId":"-"},"content":"2.  Should be able to hold up to 1000 persons without a noticeable sluggishness in performance for typical usage.","lastModifiedDate":"2020-05-23"},{"lineNumber":518,"author":{"gitId":"-"},"content":"3.  A user with above average typing speed for regular English text (i.e. not code, not system admin commands) should be able to accomplish most of the tasks faster using commands than using the mouse.","lastModifiedDate":"2020-05-23"},{"lineNumber":519,"author":{"gitId":"kvihashini"},"content":"4.  The response to any user‚Äôs command should be visible within 5 seconds.","lastModifiedDate":"2021-09-27"},{"lineNumber":520,"author":{"gitId":"kvihashini"},"content":"5.  The user interface should be intuitive enough for users who are not IT-savvy.","lastModifiedDate":"2021-09-27"},{"lineNumber":521,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":522,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":523,"author":{"gitId":"-"},"content":"### Glossary","lastModifiedDate":"2020-05-23"},{"lineNumber":524,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":525,"author":{"gitId":"-"},"content":"* **Mainstream OS**: Windows, Linux, Unix, OS-X","lastModifiedDate":"2020-05-23"},{"lineNumber":526,"author":{"gitId":"-"},"content":"* **Private contact detail**: A contact detail that is not meant to be shared with others","lastModifiedDate":"2020-05-23"},{"lineNumber":527,"author":{"gitId":"kvihashini"},"content":"* **CLI**: Command Line Interface that processes user\u0027s commands to a computer program","lastModifiedDate":"2021-09-27"},{"lineNumber":528,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":529,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":530,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":531,"author":{"gitId":"-"},"content":"## **Appendix: Instructions for manual testing**","lastModifiedDate":"2020-05-23"},{"lineNumber":532,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":533,"author":{"gitId":"-"},"content":"Given below are instructions to test the app manually.","lastModifiedDate":"2020-05-23"},{"lineNumber":534,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":535,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-info\"\u003e:information_source: **Note:** These instructions only provide a starting point for testers to work on;","lastModifiedDate":"2020-05-23"},{"lineNumber":536,"author":{"gitId":"-"},"content":"testers are expected to do more *exploratory* testing.","lastModifiedDate":"2020-05-23"},{"lineNumber":537,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":538,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":539,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":540,"author":{"gitId":"-"},"content":"### Launch and shutdown","lastModifiedDate":"2020-05-23"},{"lineNumber":541,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":542,"author":{"gitId":"-"},"content":"1. Initial launch","lastModifiedDate":"2020-05-23"},{"lineNumber":543,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":544,"author":{"gitId":"-"},"content":"   1. Download the jar file and copy into an empty folder","lastModifiedDate":"2020-05-23"},{"lineNumber":545,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":546,"author":{"gitId":"-"},"content":"   1. Double-click the jar file Expected: Shows the GUI with a set of sample contacts. The window size may not be optimum.","lastModifiedDate":"2020-05-23"},{"lineNumber":547,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":548,"author":{"gitId":"-"},"content":"1. Saving window preferences","lastModifiedDate":"2020-05-23"},{"lineNumber":549,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":550,"author":{"gitId":"-"},"content":"   1. Resize the window to an optimum size. Move the window to a different location. Close the window.","lastModifiedDate":"2020-05-23"},{"lineNumber":551,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":552,"author":{"gitId":"-"},"content":"   1. Re-launch the app by double-clicking the jar file.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":553,"author":{"gitId":"-"},"content":"       Expected: The most recent window size and location is retained.","lastModifiedDate":"2020-05-23"},{"lineNumber":554,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":555,"author":{"gitId":"tanhuakun"},"content":"### Deleting a student","lastModifiedDate":"2021-11-07"},{"lineNumber":556,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":557,"author":{"gitId":"tanhuakun"},"content":"1. Deleting a student while all students are being shown","lastModifiedDate":"2021-11-07"},{"lineNumber":558,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":559,"author":{"gitId":"tanhuakun"},"content":"   1. Prerequisites: List all students using the `list` command. Multiple students in the list.","lastModifiedDate":"2021-11-07"},{"lineNumber":560,"author":{"gitId":"tanhuakun"},"content":"   1. Test case: `student -d 1`\u003cbr\u003e","lastModifiedDate":"2021-11-07"},{"lineNumber":561,"author":{"gitId":"tanhuakun"},"content":"      Expected: First contact is deleted from the list. Details of the deleted contact shown in the status message.","lastModifiedDate":"2021-11-07"},{"lineNumber":562,"author":{"gitId":"tanhuakun"},"content":"   1. Test case: `student -d 0`\u003cbr\u003e","lastModifiedDate":"2021-11-07"},{"lineNumber":563,"author":{"gitId":"-"},"content":"      Expected: No person is deleted. Error details shown in the status message. Status bar remains the same.","lastModifiedDate":"2020-05-23"},{"lineNumber":564,"author":{"gitId":"tanhuakun"},"content":"   1. Other incorrect delete commands to try: `student -d`, `student -d x`, `...` (where x is larger than the list size)\u003cbr\u003e","lastModifiedDate":"2021-11-07"},{"lineNumber":565,"author":{"gitId":"-"},"content":"      Expected: Similar to previous.","lastModifiedDate":"2020-05-23"},{"lineNumber":566,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":567,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":568,"author":{"gitId":"tanhuakun"},"content":"### Adding a lesson to a student","lastModifiedDate":"2021-11-07"},{"lineNumber":569,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":570,"author":{"gitId":"tanhuakun"},"content":"1. Adding a lesson while all students are being shown","lastModifiedDate":"2021-11-07"},{"lineNumber":571,"author":{"gitId":"tanhuakun"},"content":"    1. Prerequisites: List all students using the list command. Multiple students in the list. First student in the index","lastModifiedDate":"2021-11-08"},{"lineNumber":572,"author":{"gitId":"tanhuakun"},"content":"       should not have any overlapping lessons with the first test case. Use default data to be sure.","lastModifiedDate":"2021-11-08"},{"lineNumber":573,"author":{"gitId":"tanhuakun"},"content":"    1. Test case: `student -al 1 s/Biology st/23:00 et/23:59 d/Fri` \u003cbr\u003e","lastModifiedDate":"2021-11-07"},{"lineNumber":574,"author":{"gitId":"tanhuakun"},"content":"    Expected: Lesson is added to first student in the list. Student details are shown in the viewing panel on the right.","lastModifiedDate":"2021-11-07"},{"lineNumber":575,"author":{"gitId":"tanhuakun"},"content":"    Lesson can be seen under \"Lessons\" in the viewing panel.","lastModifiedDate":"2021-11-07"},{"lineNumber":576,"author":{"gitId":"tanhuakun"},"content":"    1. Test case: Repeat `student -al 1 s/Biology st/23:00 et/23:59 d/Fri` after previous test case. \u003cbr\u003e","lastModifiedDate":"2021-11-07"},{"lineNumber":577,"author":{"gitId":"tanhuakun"},"content":"    Expected: Lesson cannot be added to first student because it overlaps with the lesson from previous test case. Error","lastModifiedDate":"2021-11-07"},{"lineNumber":578,"author":{"gitId":"tanhuakun"},"content":"    message is shown.","lastModifiedDate":"2021-11-07"},{"lineNumber":579,"author":{"gitId":"tanhuakun"},"content":"    1. Test case: Use `student -al s/Biology st/23:00 et/23:59 d/Fri` \u003cbr\u003e","lastModifiedDate":"2021-11-07"},{"lineNumber":580,"author":{"gitId":"tanhuakun"},"content":"    Expected: Error message is shown as no index is specified.","lastModifiedDate":"2021-11-07"},{"lineNumber":581,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":582,"author":{"gitId":"tanhuakun"},"content":"### Grouping students","lastModifiedDate":"2021-11-07"},{"lineNumber":583,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":584,"author":{"gitId":"tanhuakun"},"content":"1. Adding students to a group while all students are being shown","lastModifiedDate":"2021-11-07"},{"lineNumber":585,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":586,"author":{"gitId":"tanhuakun"},"content":"    1. Prerequisites: List all students using the `list` command. At least 2 students in the list.","lastModifiedDate":"2021-11-07"},{"lineNumber":587,"author":{"gitId":"tanhuakun"},"content":"    1. Successful test case: `group -a 1 2 n/New Group` \u003cbr\u003e","lastModifiedDate":"2021-11-07"},{"lineNumber":588,"author":{"gitId":"tanhuakun"},"content":"    Expected: First two students are added into the group. Group details appear in the viewing panel on the right.","lastModifiedDate":"2021-11-07"},{"lineNumber":589,"author":{"gitId":"tanhuakun"},"content":"    Using `student -v 1` and `student -v 2` shows that the group name __New Group__ shows up in the student view.","lastModifiedDate":"2021-11-07"},{"lineNumber":590,"author":{"gitId":"tanhuakun"},"content":"    1. Test case: `group -a 1 2` \u003cbr\u003e","lastModifiedDate":"2021-11-07"},{"lineNumber":591,"author":{"gitId":"tanhuakun"},"content":"    Expected: No new group is created, error message is shown as there is no group name specified.","lastModifiedDate":"2021-11-07"},{"lineNumber":592,"author":{"gitId":"tanhuakun"},"content":"    1. Test case: `group -a 0 1 n/New Group` \u003cbr\u003e","lastModifiedDate":"2021-11-07"},{"lineNumber":593,"author":{"gitId":"tanhuakun"},"content":"    Expected: No new group is created, error message is shown as the index __0__ is invalid.","lastModifiedDate":"2021-11-07"},{"lineNumber":594,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":595,"author":{"gitId":"-"},"content":"### Saving data","lastModifiedDate":"2020-05-23"},{"lineNumber":596,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":597,"author":{"gitId":"kvihashini"},"content":"1. Dealing with corrupted data files","lastModifiedDate":"2021-11-07"},{"lineNumber":598,"author":{"gitId":"kvihashini"},"content":"   1. Delete the `data` folder in the directory Tutor Master is in.","lastModifiedDate":"2021-11-07"},{"lineNumber":599,"author":{"gitId":"kvihashini"},"content":"   2. Navigate to the directory Tutor Master is in using Terminal and run `java -jar tutormaster.jar`.","lastModifiedDate":"2021-11-07"},{"lineNumber":600,"author":{"gitId":"kvihashini"},"content":"   Expected: Tutor Master UI contains initial sample data with no newly added data by user.","lastModifiedDate":"2021-11-07"}],"authorContributionMap":{"Neha-5678":28,"jeremy-7007":87,"kvihashini":50,"eltonyeh":25,"tanhuakun":116,"-":294}},{"path":"docs/UserGuide.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"title: User Guide","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"* Table of Contents","lastModifiedDate":"2021-09-28"},{"lineNumber":7,"author":{"gitId":"-"},"content":"{:toc}","lastModifiedDate":"2021-09-28"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":9,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"kvihashini"},"content":"## Introduction","lastModifiedDate":"2021-11-06"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"Neha-5678"},"content":"Tutor Master is a desktop application for freelance tutors to store and look up their students\u0027 details, group them together ","lastModifiedDate":"2021-11-11"},{"lineNumber":14,"author":{"gitId":"Neha-5678"},"content":"based on their lessons and create tasks to assign to students individually or in groups. Tutor Master aims to help you manage ","lastModifiedDate":"2021-11-11"},{"lineNumber":15,"author":{"gitId":"Neha-5678"},"content":"your commitments and workload to focus on providing a better coaching for their students.","lastModifiedDate":"2021-11-11"},{"lineNumber":16,"author":{"gitId":"Neha-5678"},"content":"It is optimised for use via a Command Line Interface (CLI) which requires you to simply type and enter commands to use ","lastModifiedDate":"2021-11-11"},{"lineNumber":17,"author":{"gitId":"Neha-5678"},"content":"the application. Our application also includes a Graphical User Interface (GUI) which makes it easy for you to interact ","lastModifiedDate":"2021-11-11"},{"lineNumber":18,"author":{"gitId":"Neha-5678"},"content":"with the interface by scrolling and clicking on buttons.  ","lastModifiedDate":"2021-11-11"},{"lineNumber":19,"author":{"gitId":"Neha-5678"},"content":"","lastModifiedDate":"2021-11-11"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"kvihashini"},"content":"## How To Use This User Guide","lastModifiedDate":"2021-11-08"},{"lineNumber":22,"author":{"gitId":"kvihashini"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":23,"author":{"gitId":"kvihashini"},"content":"1. Install Tutor Master by following the instructions in the [Installation Guide](#installation-guide).","lastModifiedDate":"2021-11-08"},{"lineNumber":24,"author":{"gitId":"kvihashini"},"content":"2. To get familiar with the User Guide, you can refer to [About This Document](#about-this-document).","lastModifiedDate":"2021-11-11"},{"lineNumber":25,"author":{"gitId":"kvihashini"},"content":"3. Get familiar with the various components of the app by referring to the [User Interface Guide](#user-interface-ui-of-tutor-master).","lastModifiedDate":"2021-11-11"},{"lineNumber":26,"author":{"gitId":"kvihashini"},"content":"4. If you are a new user, you can follow our guide in [Quick Start](#quick-start) to familiarise yourself with the app.","lastModifiedDate":"2021-11-11"},{"lineNumber":27,"author":{"gitId":"kvihashini"},"content":"5. If you are familiar with the app, you can refer to the [Features](#features) section to see details of all commands or","lastModifiedDate":"2021-11-11"},{"lineNumber":28,"author":{"gitId":"kvihashini"},"content":"    look at [Command Summary](#command-summary) to see all commands easily.","lastModifiedDate":"2021-11-08"},{"lineNumber":29,"author":{"gitId":"kvihashini"},"content":"6. Refer to our [FAQ](#faq) if you have any questions.","lastModifiedDate":"2021-11-11"},{"lineNumber":30,"author":{"gitId":"kvihashini"},"content":"","lastModifiedDate":"2021-11-11"},{"lineNumber":31,"author":{"gitId":"kvihashini"},"content":"## About This Document","lastModifiedDate":"2021-11-11"},{"lineNumber":32,"author":{"gitId":"kvihashini"},"content":"","lastModifiedDate":"2021-11-11"},{"lineNumber":33,"author":{"gitId":"kvihashini"},"content":"Symbol | Explanation","lastModifiedDate":"2021-11-11"},{"lineNumber":34,"author":{"gitId":"kvihashini"},"content":"--------|------------------","lastModifiedDate":"2021-11-11"},{"lineNumber":35,"author":{"gitId":"kvihashini"},"content":"`command` | A blue highlight (called a mark-up) indicates a command or a parameter that can be typed into the Command Panel and executed by Tutor Master","lastModifiedDate":"2021-11-11"},{"lineNumber":36,"author":{"gitId":"kvihashini"},"content":":information_source: | This symbol indicates additional information about the heading or subheading","lastModifiedDate":"2021-11-11"},{"lineNumber":37,"author":{"gitId":"kvihashini"},"content":":exclamation: | This symbol indicates crucial information you should be aware of when using Tutor Master","lastModifiedDate":"2021-11-11"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-11-11"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":40,"author":{"gitId":"jeremy-7007"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2021-11-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":42,"author":{"gitId":"kvihashini"},"content":"## Installation Guide","lastModifiedDate":"2021-11-06"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"tanhuakun"},"content":"1. Ensure you have __Java 11__ or above installed in your Computer. You can also install it [here](https://www.oracle.com/sg/java/technologies/javase/jdk11-archive-downloads.html).","lastModifiedDate":"2021-11-11"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"Neha-5678"},"content":"2. Download the latest __tutormaster.jar__ [here](https://github.com/AY2122S1-CS2103T-W16-4/tp/releases).","lastModifiedDate":"2021-11-11"},{"lineNumber":47,"author":{"gitId":"kvihashini"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":48,"author":{"gitId":"kvihashini"},"content":"3. Copy the file to the folder you want to use as the home folder for your Tutor Master.","lastModifiedDate":"2021-11-06"},{"lineNumber":49,"author":{"gitId":"kvihashini"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":50,"author":{"gitId":"kvihashini"},"content":"4. To open the application,","lastModifiedDate":"2021-11-08"},{"lineNumber":51,"author":{"gitId":"kvihashini"},"content":"    * If you are a Mac user, open Terminal and navigate to the directory with Tutor Master. Type `java -jar tutormaster.jar` and run the command.","lastModifiedDate":"2021-11-08"},{"lineNumber":52,"author":{"gitId":"kvihashini"},"content":"    * If you are Windows user, double-click the jar file to start the app.","lastModifiedDate":"2021-11-08"},{"lineNumber":53,"author":{"gitId":"tanhuakun"},"content":"    * The GUI similar to below should appear in a few seconds. Note how the app contains some sample data for you to view.\u003cbr\u003e","lastModifiedDate":"2021-11-11"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":55,"author":{"gitId":"-"},"content":"   ![Ui](images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"jeremy-7007"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2021-11-08"},{"lineNumber":58,"author":{"gitId":"jeremy-7007"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":59,"author":{"gitId":"kvihashini"},"content":"## User Interface (UI) of Tutor Master","lastModifiedDate":"2021-11-08"},{"lineNumber":60,"author":{"gitId":"kvihashini"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":61,"author":{"gitId":"kvihashini"},"content":"   ![Labelled UI](images/imagesInUG/labelledUI.png)","lastModifiedDate":"2021-11-06"},{"lineNumber":62,"author":{"gitId":"kvihashini"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":63,"author":{"gitId":"kvihashini"},"content":"The UI consists of:","lastModifiedDate":"2021-11-11"},{"lineNumber":64,"author":{"gitId":"kvihashini"},"content":"","lastModifiedDate":"2021-11-11"},{"lineNumber":65,"author":{"gitId":"kvihashini"},"content":"Parts | Explanation","lastModifiedDate":"2021-11-11"},{"lineNumber":66,"author":{"gitId":"kvihashini"},"content":"--------|------------------","lastModifiedDate":"2021-11-11"},{"lineNumber":67,"author":{"gitId":"kvihashini"},"content":"Command Panel | To enter commands to be executed","lastModifiedDate":"2021-11-11"},{"lineNumber":68,"author":{"gitId":"kvihashini"},"content":"Result Display | Displays result of executed command","lastModifiedDate":"2021-11-11"},{"lineNumber":69,"author":{"gitId":"kvihashini"},"content":"Person Panel | Displays all added students with their respective `STUDENT_INDEX`","lastModifiedDate":"2021-11-11"},{"lineNumber":70,"author":{"gitId":"kvihashini"},"content":"Task Panel | Displays all added tasks with their respective `TASK_INDEX`","lastModifiedDate":"2021-11-11"},{"lineNumber":71,"author":{"gitId":"kvihashini"},"content":"Group Panel | Displays all added groups with their respective `GROUP_INDEX`","lastModifiedDate":"2021-11-11"},{"lineNumber":72,"author":{"gitId":"kvihashini"},"content":"Viewing Panel | Displays either the schedule, group or student to be viewed","lastModifiedDate":"2021-11-11"},{"lineNumber":73,"author":{"gitId":"kvihashini"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":74,"author":{"gitId":"jeremy-7007"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2021-11-08"},{"lineNumber":75,"author":{"gitId":"jeremy-7007"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":76,"author":{"gitId":"kvihashini"},"content":"## Quick Start","lastModifiedDate":"2021-11-06"},{"lineNumber":77,"author":{"gitId":"kvihashini"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":78,"author":{"gitId":"kvihashini"},"content":"Now that you have installed Tutor Master, let us give it a try!","lastModifiedDate":"2021-11-06"},{"lineNumber":79,"author":{"gitId":"kvihashini"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":80,"author":{"gitId":"kvihashini"},"content":"Let us ","lastModifiedDate":"2021-11-06"},{"lineNumber":81,"author":{"gitId":"Neha-5678"},"content":"1. Create a student named \"David\" ","lastModifiedDate":"2021-11-11"},{"lineNumber":82,"author":{"gitId":"Neha-5678"},"content":"2. Add and assign a task named \"Science Report\" to \"David\".","lastModifiedDate":"2021-11-11"},{"lineNumber":83,"author":{"gitId":"Neha-5678"},"content":"3. Add him to a group named \"CS2103T\"","lastModifiedDate":"2021-11-11"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"kvihashini"},"content":"We shall type commands in the Command Panel and hit `Enter` to execute it.","lastModifiedDate":"2021-11-08"},{"lineNumber":86,"author":{"gitId":"kvihashini"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":87,"author":{"gitId":"kvihashini"},"content":"Here are some starting commands to help you navigate around the application:","lastModifiedDate":"2021-11-08"},{"lineNumber":88,"author":{"gitId":"kvihashini"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":89,"author":{"gitId":"kvihashini"},"content":"### Managing Students","lastModifiedDate":"2021-11-06"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"tanhuakun"},"content":"Since the goal is to manage students, let\u0027s start by adding a new student to the address book.","lastModifiedDate":"2021-11-06"},{"lineNumber":92,"author":{"gitId":"tanhuakun"},"content":"Let\u0027s try adding a student with the following details:","lastModifiedDate":"2021-11-06"},{"lineNumber":93,"author":{"gitId":"tanhuakun"},"content":"* Name: David","lastModifiedDate":"2021-11-06"},{"lineNumber":94,"author":{"gitId":"tanhuakun"},"content":"* Phone Number: 90001111","lastModifiedDate":"2021-11-06"},{"lineNumber":95,"author":{"gitId":"tanhuakun"},"content":"* Email: david@gmail.com","lastModifiedDate":"2021-11-06"},{"lineNumber":96,"author":{"gitId":"tanhuakun"},"content":"* Address: Singapore","lastModifiedDate":"2021-11-06"},{"lineNumber":97,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":98,"author":{"gitId":"tanhuakun"},"content":"1. Type the command `student -a n/David p/90001111 e/david@gmail.com a/Singapore` and hit `Enter`.","lastModifiedDate":"2021-11-06"},{"lineNumber":99,"author":{"gitId":"tanhuakun"},"content":"   * This adds a student with the details specified.","lastModifiedDate":"2021-11-06"},{"lineNumber":100,"author":{"gitId":"kvihashini"},"content":"   * You will now be able to see __David__ at the entry in the Person Panel on the left,","lastModifiedDate":"2021-11-08"},{"lineNumber":101,"author":{"gitId":"tanhuakun"},"content":"   as shown in the image below.","lastModifiedDate":"2021-11-06"},{"lineNumber":102,"author":{"gitId":"kvihashini"},"content":"   ![Add David](images/imagesInUG/student-addDavid.png)","lastModifiedDate":"2021-11-07"},{"lineNumber":103,"author":{"gitId":"tanhuakun"},"content":"   ","lastModifiedDate":"2021-11-06"},{"lineNumber":104,"author":{"gitId":"Neha-5678"},"content":"2. Now lets try editing his address. Note the index number beside his name in the Person Panel, in this case it is 4.\u003cbr\u003e","lastModifiedDate":"2021-11-08"},{"lineNumber":105,"author":{"gitId":"Neha-5678"},"content":"   Type the following command `student -e 4 a/Kent Ridge` and hit `Enter`.","lastModifiedDate":"2021-11-07"},{"lineNumber":106,"author":{"gitId":"Neha-5678"},"content":"   * This updates the address of David, who is at index __4__ to __Kent Ridge__.","lastModifiedDate":"2021-11-08"},{"lineNumber":107,"author":{"gitId":"tanhuakun"},"content":"   * Note that the other details are unchanged, you can choose which fields you want to edit.","lastModifiedDate":"2021-11-06"},{"lineNumber":108,"author":{"gitId":"tanhuakun"},"content":"\u003cbr\u003e\u003cbr\u003e","lastModifiedDate":"2021-11-08"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":110,"author":{"gitId":"tanhuakun"},"content":"3. You can add a lesson to David. Let\u0027s assign a __Math__ lesson from __10:00__ to __12:00__ on __Friday__. \u003cbr\u003e","lastModifiedDate":"2021-11-06"},{"lineNumber":111,"author":{"gitId":"Neha-5678"},"content":"   Type the following command `student -al 4 s/Math st/10:00 et/12:00 d/Fri` and hit `Enter`.","lastModifiedDate":"2021-11-07"},{"lineNumber":112,"author":{"gitId":"tanhuakun"},"content":"   * This adds a lesson to David with the given details.","lastModifiedDate":"2021-11-06"},{"lineNumber":113,"author":{"gitId":"tanhuakun"},"content":"   * You can view your schedule for the week by entering `schedule`, try it!","lastModifiedDate":"2021-11-06"},{"lineNumber":114,"author":{"gitId":"tanhuakun"},"content":"\u003cbr\u003e\u003cbr\u003e","lastModifiedDate":"2021-11-08"},{"lineNumber":115,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":116,"author":{"gitId":"tanhuakun"},"content":"4. If you wish to view more details of a student, you can use the student view command.\u003cbr\u003e","lastModifiedDate":"2021-11-06"},{"lineNumber":117,"author":{"gitId":"Neha-5678"},"content":"   Type `student -v 4` in the Command Panel and hit `Enter`.","lastModifiedDate":"2021-11-07"},{"lineNumber":118,"author":{"gitId":"kvihashini"},"content":"    * This displays the student at `STUDENT_INDEX` 4 in the Viewing Panel.","lastModifiedDate":"2021-11-11"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":120,"author":{"gitId":"tanhuakun"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2021-11-08"},{"lineNumber":121,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":122,"author":{"gitId":"Neha-5678"},"content":"### Managing Tasks","lastModifiedDate":"2021-11-08"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":124,"author":{"gitId":"Neha-5678"},"content":"Next, let us add a task with description __Lab Report__ and deadline __12 November 2021__. ","lastModifiedDate":"2021-11-08"},{"lineNumber":125,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":126,"author":{"gitId":"Neha-5678"},"content":"1. Type the command `task -a n/Lab Report d/2021-11-12` in the Command Panel and hit `Enter`.","lastModifiedDate":"2021-11-08"},{"lineNumber":127,"author":{"gitId":"Neha-5678"},"content":"    * This adds a task with the details specified above. ","lastModifiedDate":"2021-11-08"},{"lineNumber":128,"author":{"gitId":"Neha-5678"},"content":"    * You should now see __Lab Report__ in the Task Panel in the middle column as shown in the image below.","lastModifiedDate":"2021-11-08"},{"lineNumber":129,"author":{"gitId":"Neha-5678"},"content":"      ![Add David](images/imagesInUG/task-add.png)","lastModifiedDate":"2021-11-08"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":131,"author":{"gitId":"Neha-5678"},"content":"2. Now, let us try editing the description of the task to Science Report. Note the index of the task in the Task Panel, ","lastModifiedDate":"2021-11-08"},{"lineNumber":132,"author":{"gitId":"kvihashini"},"content":"   which is 3 in this case. Type `task -e 3 n/Science Report` in the Command Panel and hit `Enter`.","lastModifiedDate":"2021-11-11"},{"lineNumber":133,"author":{"gitId":"Neha-5678"},"content":"    * This updates the description of the task at index __3__ to __Science Report__.","lastModifiedDate":"2021-11-08"},{"lineNumber":134,"author":{"gitId":"Neha-5678"},"content":"    * The description remains unchanged.","lastModifiedDate":"2021-11-08"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":136,"author":{"gitId":"tanhuakun"},"content":"    \u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2021-11-08"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":138,"author":{"gitId":"Neha-5678"},"content":"3. You can also assign this task, __Science Report__ to __David__.","lastModifiedDate":"2021-11-08"},{"lineNumber":139,"author":{"gitId":"Neha-5678"},"content":"    * Take note of the index of the task you would like to","lastModifiedDate":"2021-11-08"},{"lineNumber":140,"author":{"gitId":"Neha-5678"},"content":"      assign and the index of the student to whom the task should be assigned. In this case, the index of","lastModifiedDate":"2021-11-08"},{"lineNumber":141,"author":{"gitId":"Neha-5678"},"content":"      __Science Report__ is __3__ while the index of __David__ is __4__.","lastModifiedDate":"2021-11-08"},{"lineNumber":142,"author":{"gitId":"Neha-5678"},"content":"    * Type the command `task -as 4 3` in the Command Panel and hit `Enter`.","lastModifiedDate":"2021-11-08"},{"lineNumber":143,"author":{"gitId":"Neha-5678"},"content":"    * This assigns __Science Report__ to __David__.","lastModifiedDate":"2021-11-08"},{"lineNumber":144,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":145,"author":{"gitId":"kvihashini"},"content":"### Managing Groups","lastModifiedDate":"2021-11-06"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":147,"author":{"gitId":"kvihashini"},"content":"Let us now add \"David\" to a group named \"CS2103T\".","lastModifiedDate":"2021-11-06"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":149,"author":{"gitId":"kvihashini"},"content":"1.  Type `group -a 4 n/CS2103T` in the Command Panel and hit `Enter`.","lastModifiedDate":"2021-11-08"},{"lineNumber":150,"author":{"gitId":"kvihashini"},"content":"    * This creates a group named __CS2103T__ and includes __David__ who is at `STUDENT_INDEX` 4 in the Person Panel.","lastModifiedDate":"2021-11-11"},{"lineNumber":151,"author":{"gitId":"kvihashini"},"content":"    * __CS2103T__ is now added to the Group Panel. It has an `GROUP_INDEX` of 3 in the Group Panel.","lastModifiedDate":"2021-11-11"},{"lineNumber":152,"author":{"gitId":"Neha-5678"},"content":"    * This group currently has __David__ inside","lastModifiedDate":"2021-11-08"},{"lineNumber":153,"author":{"gitId":"kvihashini"},"content":"      ![Add David To Group](images/imagesInUG/group-addDavidInGroup.png)","lastModifiedDate":"2021-11-06"},{"lineNumber":154,"author":{"gitId":"kvihashini"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":155,"author":{"gitId":"kvihashini"},"content":"2. Type `group -v 3` in the Command Panel and hit `Enter`.","lastModifiedDate":"2021-11-11"},{"lineNumber":156,"author":{"gitId":"kvihashini"},"content":"    * This displays the details of the group at `GROUP_INDEX` 3 in the Viewing Panel.","lastModifiedDate":"2021-11-11"},{"lineNumber":157,"author":{"gitId":"kvihashini"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":158,"author":{"gitId":"kvihashini"},"content":"You can refer to the [Features](#features) below for details of each command.","lastModifiedDate":"2021-11-06"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":160,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":162,"author":{"gitId":"-"},"content":"## Features","lastModifiedDate":"2020-05-23"},{"lineNumber":163,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":164,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-info\"\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":166,"author":{"gitId":"-"},"content":"**:information_source: Notes about the command format:**\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":168,"author":{"gitId":"-"},"content":"* Words in `UPPER_CASE` are the parameters to be supplied by the user.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":169,"author":{"gitId":"kvihashini"},"content":"  * e.g. in `add n/NAME`, `NAME` is a parameter which can be used as `add n/John Doe`.","lastModifiedDate":"2021-11-06"},{"lineNumber":170,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":171,"author":{"gitId":"eltonyeh"},"content":"* Items in square brackets `[]` are optional.\u003cbr\u003e","lastModifiedDate":"2021-11-05"},{"lineNumber":172,"author":{"gitId":"-"},"content":"  e.g `n/NAME [t/TAG]` can be used as `n/John Doe t/friend` or as `n/John Doe`.","lastModifiedDate":"2020-05-23"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":174,"author":{"gitId":"-"},"content":"* Items with `‚Ä¶`‚Äã after them can be used multiple times including zero times.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":175,"author":{"gitId":"-"},"content":"  e.g. `[t/TAG]‚Ä¶‚Äã` can be used as `¬†` (i.e. 0 times), `t/friend`, `t/friend t/family` etc.","lastModifiedDate":"2020-05-23"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":177,"author":{"gitId":"-"},"content":"* Parameters can be in any order.\u003cbr\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":178,"author":{"gitId":"-"},"content":"  e.g. if the command specifies `n/NAME p/PHONE_NUMBER`, `p/PHONE_NUMBER n/NAME` is also acceptable.","lastModifiedDate":"2020-05-23"},{"lineNumber":179,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":180,"author":{"gitId":"-"},"content":"* If a parameter is expected only once in the command but you specified it multiple times, only the last occurrence of the parameter will be taken.\u003cbr\u003e","lastModifiedDate":"2021-02-04"},{"lineNumber":181,"author":{"gitId":"-"},"content":"  e.g. if you specify `p/12341234 p/56785678`, only `p/56785678` will be taken.","lastModifiedDate":"2021-02-04"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-04"},{"lineNumber":183,"author":{"gitId":"-"},"content":"* Extraneous parameters for commands that do not take in parameters (such as `help`, `list`, `exit` and `clear`) will be ignored.\u003cbr\u003e","lastModifiedDate":"2021-02-03"},{"lineNumber":184,"author":{"gitId":"-"},"content":"  e.g. if the command specifies `help 123`, it will be interpreted as `help`.","lastModifiedDate":"2021-02-03"},{"lineNumber":185,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-02-03"},{"lineNumber":186,"author":{"gitId":"eltonyeh"},"content":"* `INDEX` parameters are very common in this application. Ensure that **they are a positive integer and is less than 2,147,483,648**.","lastModifiedDate":"2021-11-08"},{"lineNumber":187,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":188,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2020-05-23"},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":190,"author":{"gitId":"kvihashini"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-11-06"},{"lineNumber":191,"author":{"gitId":"jeremy-7007"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2021-11-08"},{"lineNumber":192,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":193,"author":{"gitId":"kvihashini"},"content":"### Students","lastModifiedDate":"2021-11-06"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":195,"author":{"gitId":"kvihashini"},"content":"#### Adding a student: `student -a`","lastModifiedDate":"2021-11-06"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":197,"author":{"gitId":"tanhuakun"},"content":"Adds a student to the Person Panel.","lastModifiedDate":"2021-11-08"},{"lineNumber":198,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":199,"author":{"gitId":"kvihashini"},"content":"If you have a new student to tutor, you can enter this command with their respective details to add ","lastModifiedDate":"2021-11-11"},{"lineNumber":200,"author":{"gitId":"kvihashini"},"content":"them to the Tutor Master.","lastModifiedDate":"2021-11-11"},{"lineNumber":201,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-11-11"},{"lineNumber":202,"author":{"gitId":"jeremy-7007"},"content":"Format: `student -a n/NAME p/PHONE_NUMBER e/EMAIL a/ADDRESS [t/TAG]‚Ä¶‚Äã`","lastModifiedDate":"2021-11-02"},{"lineNumber":203,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":204,"author":{"gitId":"jeremy-7007"},"content":"* Adds a student with the specified `NAME`","lastModifiedDate":"2021-09-28"},{"lineNumber":205,"author":{"gitId":"jeremy-7007"},"content":"* `-a` refers to the add command","lastModifiedDate":"2021-09-28"},{"lineNumber":206,"author":{"gitId":"eltonyeh"},"content":"* Two students are considered the same if all their names, phone numbers and emails are the same. It is a requirement that **same students can not be added to the app simultaneously**.","lastModifiedDate":"2021-11-05"},{"lineNumber":207,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":208,"author":{"gitId":"kvihashini"},"content":"Examples:","lastModifiedDate":"2021-09-28"},{"lineNumber":209,"author":{"gitId":"jeremy-7007"},"content":"* `student -a n/John p/12345678 e/john@mail.com a/42 Wallaby Way, Sydney`\u003cbr\u003e","lastModifiedDate":"2021-11-02"},{"lineNumber":210,"author":{"gitId":"jeremy-7007"},"content":"  adds a student with the name John, phone number 12345678, email john@mail.com and address at 42 Wallaby Way, Sydney","lastModifiedDate":"2021-11-02"},{"lineNumber":211,"author":{"gitId":"jeremy-7007"},"content":"* `student -a n/Barbara p/12344321 e/barber@gmail.com a/123 Sesame Street t/graduate t/actress`\u003cbr\u003e","lastModifiedDate":"2021-11-02"},{"lineNumber":212,"author":{"gitId":"jeremy-7007"},"content":"  adds a student with the name Barbara, phone number 12344321, email barber@gmail.com, address at 123 Sesame Street, and tags graduate and actress","lastModifiedDate":"2021-11-02"},{"lineNumber":213,"author":{"gitId":"tanhuakun"},"content":"  ","lastModifiedDate":"2021-11-08"},{"lineNumber":214,"author":{"gitId":"kvihashini"},"content":"#### Viewing a student: `student -v`","lastModifiedDate":"2021-11-06"},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":216,"author":{"gitId":"eltonyeh"},"content":"Views a particular student\u0027s details in the Person Panel.","lastModifiedDate":"2021-11-08"},{"lineNumber":217,"author":{"gitId":"eltonyeh"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":218,"author":{"gitId":"kvihashini"},"content":"Let\u0027s say you want to look at a particular student in detail.","lastModifiedDate":"2021-11-11"},{"lineNumber":219,"author":{"gitId":"kvihashini"},"content":"You can type this command to view their full name, phone number, email address, address and any ","lastModifiedDate":"2021-11-11"},{"lineNumber":220,"author":{"gitId":"kvihashini"},"content":"other lessons, tasks, exams or groups they belong to.","lastModifiedDate":"2021-11-11"},{"lineNumber":221,"author":{"gitId":"eltonyeh"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":222,"author":{"gitId":"kvihashini"},"content":"Format: `student -v STUDENT_INDEX`","lastModifiedDate":"2021-11-11"},{"lineNumber":223,"author":{"gitId":"eltonyeh"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":224,"author":{"gitId":"kvihashini"},"content":"* Views the student details specified at `STUDENT_INDEX`. `STUDENT_INDEX` should be a positive number.","lastModifiedDate":"2021-11-11"},{"lineNumber":225,"author":{"gitId":"eltonyeh"},"content":"* `-v` refers to the view command.","lastModifiedDate":"2021-09-28"},{"lineNumber":226,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":227,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2021-09-28"},{"lineNumber":228,"author":{"gitId":"tanhuakun"},"content":"* `student -v 3` view the student details at index 3.","lastModifiedDate":"2021-11-08"},{"lineNumber":229,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":230,"author":{"gitId":"kvihashini"},"content":"![studentview](images/imagesInUG/student-view.png)","lastModifiedDate":"2021-11-03"},{"lineNumber":231,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":232,"author":{"gitId":"jeremy-7007"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2021-11-08"},{"lineNumber":233,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":234,"author":{"gitId":"kvihashini"},"content":"#### Editing a student: `student -e`","lastModifiedDate":"2021-11-06"},{"lineNumber":235,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":236,"author":{"gitId":"tanhuakun"},"content":"Edits the details of a student in the Person Panel.","lastModifiedDate":"2021-11-08"},{"lineNumber":237,"author":{"gitId":"eltonyeh"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":238,"author":{"gitId":"kvihashini"},"content":"Let\u0027s say one of your students changed their email address. You can edit the particular student\u0027s","lastModifiedDate":"2021-11-11"},{"lineNumber":239,"author":{"gitId":"kvihashini"},"content":"email address by entering the command below with the updated email address.","lastModifiedDate":"2021-11-11"},{"lineNumber":240,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":241,"author":{"gitId":"kvihashini"},"content":"Format: `student -e STUDENT_INDEX [n/NAME] [p/PHONE_NUMBER] [e/EMAIL] [a/ADDRESS] [t/TAG]‚Ä¶‚Äã`","lastModifiedDate":"2021-11-11"},{"lineNumber":242,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":243,"author":{"gitId":"kvihashini"},"content":"* Edits the details of the student specified by the `STUDENT_INDEX`. `STUDENT_INDEX` should be a","lastModifiedDate":"2021-11-11"},{"lineNumber":244,"author":{"gitId":"kvihashini"},"content":"  positive number and refers to the index number of a student in the Person Panel.","lastModifiedDate":"2021-11-11"},{"lineNumber":245,"author":{"gitId":"eltonyeh"},"content":"* `-e` refers to the edit command","lastModifiedDate":"2021-09-28"},{"lineNumber":246,"author":{"gitId":"eltonyeh"},"content":"* It is a requirement that **at least one of the optional fields should be provided**.","lastModifiedDate":"2021-09-28"},{"lineNumber":247,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":248,"author":{"gitId":"eltonyeh"},"content":"Example:","lastModifiedDate":"2021-09-28"},{"lineNumber":249,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":250,"author":{"gitId":"tanhuakun"},"content":"* `student -e 3 p/88888888 e/johnny@mail.com` edits the phone number and email","lastModifiedDate":"2021-11-08"},{"lineNumber":251,"author":{"gitId":"kvihashini"},"content":"  address of the third student in the Person Panel to 88888888 and johnny@mail.com","lastModifiedDate":"2021-11-11"},{"lineNumber":252,"author":{"gitId":"eltonyeh"},"content":"  respectively.","lastModifiedDate":"2021-09-28"},{"lineNumber":253,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":254,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":255,"author":{"gitId":"kvihashini"},"content":"#### Deleting a student: `student -d`","lastModifiedDate":"2021-11-06"},{"lineNumber":256,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":257,"author":{"gitId":"kvihashini"},"content":"Deletes the specific student in the Person Panel.","lastModifiedDate":"2021-11-06"},{"lineNumber":258,"author":{"gitId":"Neha-5678"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":259,"author":{"gitId":"kvihashini"},"content":"If you happen to not teach a particular student anymore, you can enter this command to delete ","lastModifiedDate":"2021-11-11"},{"lineNumber":260,"author":{"gitId":"kvihashini"},"content":"the student. Executing this command will also remove the student from any groups they are in.","lastModifiedDate":"2021-11-11"},{"lineNumber":261,"author":{"gitId":"Neha-5678"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":262,"author":{"gitId":"kvihashini"},"content":"Format: `student -d STUDENT_INDEX`","lastModifiedDate":"2021-11-11"},{"lineNumber":263,"author":{"gitId":"Neha-5678"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":264,"author":{"gitId":"kvihashini"},"content":"* Deletes the student specified by the `STUDENT_INDEX`.","lastModifiedDate":"2021-11-11"},{"lineNumber":265,"author":{"gitId":"Neha-5678"},"content":"* `-d` refers to the edit command","lastModifiedDate":"2021-09-28"},{"lineNumber":266,"author":{"gitId":"kvihashini"},"content":"* `STUDENT_INDEX` should be a positive number and refers to the index number of a student in the Person Panel.","lastModifiedDate":"2021-11-11"},{"lineNumber":267,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":268,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2021-09-28"},{"lineNumber":269,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":270,"author":{"gitId":"kvihashini"},"content":"* `student -d 3` deletes the third student in the Person Panel","lastModifiedDate":"2021-11-11"},{"lineNumber":271,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":272,"author":{"gitId":"kvihashini"},"content":"#### Listing all students : `list`","lastModifiedDate":"2021-11-06"},{"lineNumber":273,"author":{"gitId":"kvihashini"},"content":"Shows a list of all students in the Person Panel.","lastModifiedDate":"2021-11-06"},{"lineNumber":274,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":275,"author":{"gitId":"kvihashini"},"content":"Format: `list`","lastModifiedDate":"2021-09-28"},{"lineNumber":276,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":277,"author":{"gitId":"tanhuakun"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2021-11-08"},{"lineNumber":278,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":279,"author":{"gitId":"kvihashini"},"content":"#### Locating students by name: `student -f`","lastModifiedDate":"2021-11-06"},{"lineNumber":280,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":281,"author":{"gitId":"kvihashini"},"content":"Finds students whose names contain any of the given keywords.","lastModifiedDate":"2021-09-28"},{"lineNumber":282,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":283,"author":{"gitId":"kvihashini"},"content":"Suppose you would like to further edit or manage a students\u0027 details, you can narrow down","lastModifiedDate":"2021-11-11"},{"lineNumber":284,"author":{"gitId":"kvihashini"},"content":"list of students in the Person Panel to only display students that you search for.","lastModifiedDate":"2021-11-11"},{"lineNumber":285,"author":{"gitId":"kvihashini"},"content":"","lastModifiedDate":"2021-11-11"},{"lineNumber":286,"author":{"gitId":"tanhuakun"},"content":"Format: `student -f KEYWORD‚Ä¶‚Äã`","lastModifiedDate":"2021-10-03"},{"lineNumber":287,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":288,"author":{"gitId":"-"},"content":"* The search is case-insensitive. e.g `hans` will match `Hans`","lastModifiedDate":"2020-05-23"},{"lineNumber":289,"author":{"gitId":"-"},"content":"* The order of the keywords does not matter. e.g. `Hans Bo` will match `Bo Hans`","lastModifiedDate":"2020-05-23"},{"lineNumber":290,"author":{"gitId":"-"},"content":"* Only the name is searched.","lastModifiedDate":"2020-05-23"},{"lineNumber":291,"author":{"gitId":"-"},"content":"* Only full words will be matched e.g. `Han` will not match `Hans`","lastModifiedDate":"2020-05-23"},{"lineNumber":292,"author":{"gitId":"kvihashini"},"content":"* Students matching at least one keyword will be returned (i.e. `OR` search).","lastModifiedDate":"2021-11-11"},{"lineNumber":293,"author":{"gitId":"-"},"content":"  e.g. `Hans Bo` will return `Hans Gruber`, `Bo Yang`","lastModifiedDate":"2020-05-23"},{"lineNumber":294,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":295,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2020-05-23"},{"lineNumber":296,"author":{"gitId":"tanhuakun"},"content":"* `student -f John` returns `john` and `John Doe`","lastModifiedDate":"2021-10-03"},{"lineNumber":297,"author":{"gitId":"tanhuakun"},"content":"* `student -f alex david` returns `Alex Yeoh`, `David Li`\u003cbr\u003e","lastModifiedDate":"2021-10-03"},{"lineNumber":298,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":299,"author":{"gitId":"kvihashini"},"content":"#### Adding a lesson to a student: `student -al`","lastModifiedDate":"2021-11-06"},{"lineNumber":300,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":301,"author":{"gitId":"kvihashini"},"content":"Adds a lesson to a student.","lastModifiedDate":"2021-11-11"},{"lineNumber":302,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":303,"author":{"gitId":"kvihashini"},"content":"Let\u0027s say you would like to note down your lesson schedule with your student,","lastModifiedDate":"2021-11-11"},{"lineNumber":304,"author":{"gitId":"kvihashini"},"content":"you should specify the lesson subject, as well as the day of week and time of the lesson.","lastModifiedDate":"2021-11-11"},{"lineNumber":305,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":306,"author":{"gitId":"kvihashini"},"content":"Format: `student -al STUDENT_INDEX s/SUBJECT st/START_TIME et/END_TIME d/DAY`","lastModifiedDate":"2021-11-11"},{"lineNumber":307,"author":{"gitId":"kvihashini"},"content":"","lastModifiedDate":"2021-11-11"},{"lineNumber":308,"author":{"gitId":"kvihashini"},"content":"* Adds a lesson to the student specified by the `STUDENT_INDEX`.","lastModifiedDate":"2021-11-11"},{"lineNumber":309,"author":{"gitId":"tanhuakun"},"content":"* `SUBJECT` takes in any input with at least one alphanumeric character.","lastModifiedDate":"2021-10-19"},{"lineNumber":310,"author":{"gitId":"tanhuakun"},"content":"* `DAY` takes in the following inputs: `Mon Tue Wed Thu Fri Sat Sun`.","lastModifiedDate":"2021-10-19"},{"lineNumber":311,"author":{"gitId":"tanhuakun"},"content":"* `START_TIME` and `END_TIME` takes in the time in 24-hour, HH:MM, format. For example `08:00`","lastModifiedDate":"2021-10-19"},{"lineNumber":312,"author":{"gitId":"tanhuakun"},"content":"  for 8am.","lastModifiedDate":"2021-10-19"},{"lineNumber":313,"author":{"gitId":"tanhuakun"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-info\"\u003e","lastModifiedDate":"2021-11-05"},{"lineNumber":314,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":315,"author":{"gitId":"tanhuakun"},"content":"**:information_source: Overlapping lessons:**\u003cbr\u003e","lastModifiedDate":"2021-11-05"},{"lineNumber":316,"author":{"gitId":"tanhuakun"},"content":"* The same student cannot be allocated to multiple lessons that are overlapping. Overlap is defined as being","lastModifiedDate":"2021-11-05"},{"lineNumber":317,"author":{"gitId":"tanhuakun"},"content":"  on the same day and within the same time frame.","lastModifiedDate":"2021-11-05"},{"lineNumber":318,"author":{"gitId":"tanhuakun"},"content":"* However, lessons of different students can still overlap. This may be disallowed in a future version.","lastModifiedDate":"2021-11-05"},{"lineNumber":319,"author":{"gitId":"tanhuakun"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-11-05"},{"lineNumber":320,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":321,"author":{"gitId":"tanhuakun"},"content":"Example:","lastModifiedDate":"2021-10-19"},{"lineNumber":322,"author":{"gitId":"tanhuakun"},"content":"* `student -al 1 s/Biology st/08:00 et/09:00 d/Mon` adds a lesson with the subject name biology","lastModifiedDate":"2021-11-08"},{"lineNumber":323,"author":{"gitId":"tanhuakun"},"content":"  starting at 8am and ending at 9am on Mondays.","lastModifiedDate":"2021-10-19"},{"lineNumber":324,"author":{"gitId":"kvihashini"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":325,"author":{"gitId":"kvihashini"},"content":"![studentaddlesson](images/imagesInUG/student-addlesson.png)","lastModifiedDate":"2021-11-03"},{"lineNumber":326,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":327,"author":{"gitId":"kvihashini"},"content":"#### Deleting a lesson from a student: `student -dl`","lastModifiedDate":"2021-11-06"},{"lineNumber":328,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":329,"author":{"gitId":"kvihashini"},"content":"Deletes a lesson from the specific student.","lastModifiedDate":"2021-11-11"},{"lineNumber":330,"author":{"gitId":"kvihashini"},"content":"","lastModifiedDate":"2021-11-11"},{"lineNumber":331,"author":{"gitId":"kvihashini"},"content":"If you are not continuing a student\u0027s lesson anymore, you can enter this command to ","lastModifiedDate":"2021-11-11"},{"lineNumber":332,"author":{"gitId":"kvihashini"},"content":"remove the lesson from your schedule.","lastModifiedDate":"2021-11-11"},{"lineNumber":333,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":334,"author":{"gitId":"tanhuakun"},"content":"Format: `student -dl STUDENT_INDEX LESSON_INDEX`","lastModifiedDate":"2021-11-08"},{"lineNumber":335,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":336,"author":{"gitId":"tanhuakun"},"content":"* Specifies the student at `STUDENT_INDEX`.","lastModifiedDate":"2021-11-08"},{"lineNumber":337,"author":{"gitId":"tanhuakun"},"content":"* Deletes the specified lesson at `LESSON_INDEX` of the student specified.","lastModifiedDate":"2021-10-19"},{"lineNumber":338,"author":{"gitId":"tanhuakun"},"content":"* Both `STUDENT_INDEX` and `LESSON_INDEX` must be a positive number.","lastModifiedDate":"2021-11-08"},{"lineNumber":339,"author":{"gitId":"tanhuakun"},"content":"* The `LESSON_INDEX` can be found by using the [student viewing command](#viewing-a-student-student--v) as shown below.","lastModifiedDate":"2021-11-05"},{"lineNumber":340,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":341,"author":{"gitId":"kvihashini"},"content":"![studentLessonIndex](images/imagesInUG/student-findLesson.png)","lastModifiedDate":"2021-11-07"},{"lineNumber":342,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":343,"author":{"gitId":"tanhuakun"},"content":"Example:","lastModifiedDate":"2021-10-19"},{"lineNumber":344,"author":{"gitId":"tanhuakun"},"content":"* `student -dl 1 1` deletes the first lesson from the first student.","lastModifiedDate":"2021-10-19"},{"lineNumber":345,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":346,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":347,"author":{"gitId":"kvihashini"},"content":"#### Adding an exam to a student: `student -ae`","lastModifiedDate":"2021-11-06"},{"lineNumber":348,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":349,"author":{"gitId":"kvihashini"},"content":"Adds an exam to the specific student.","lastModifiedDate":"2021-11-11"},{"lineNumber":350,"author":{"gitId":"kvihashini"},"content":"","lastModifiedDate":"2021-11-11"},{"lineNumber":351,"author":{"gitId":"kvihashini"},"content":"If you would like to note down one of your student\u0027s exam dates, you should specify","lastModifiedDate":"2021-11-11"},{"lineNumber":352,"author":{"gitId":"tanhuakun"},"content":"the date and time of the exam as well as the subject that the exam is for.","lastModifiedDate":"2021-11-11"},{"lineNumber":353,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":354,"author":{"gitId":"kvihashini"},"content":"Format: `student -ae STUDENT_INDEX s/SUBJECT d/DATE_TIME`","lastModifiedDate":"2021-11-11"},{"lineNumber":355,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":356,"author":{"gitId":"kvihashini"},"content":"* Adds an exam to the student specified by the `STUDENT_INDEX`.","lastModifiedDate":"2021-11-11"},{"lineNumber":357,"author":{"gitId":"tanhuakun"},"content":"* `SUBJECT` takes in any input with at least one alphanumeric character.","lastModifiedDate":"2021-10-19"},{"lineNumber":358,"author":{"gitId":"tanhuakun"},"content":"* `DATE_TIME` takes in a date and time in the following format: `yyyy-MM-dd HH:mm`.","lastModifiedDate":"2021-10-19"},{"lineNumber":359,"author":{"gitId":"tanhuakun"},"content":"* There are currently no restrictions on `DATE_TIME`, please ensure that the exam dates are correct.","lastModifiedDate":"2021-11-05"},{"lineNumber":360,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":361,"author":{"gitId":"tanhuakun"},"content":"Example:","lastModifiedDate":"2021-10-19"},{"lineNumber":362,"author":{"gitId":"tanhuakun"},"content":"* `student -ae 1 s/Math d/2021-12-20 14:00` adds an exam with the subject name Math","lastModifiedDate":"2021-11-08"},{"lineNumber":363,"author":{"gitId":"tanhuakun"},"content":"  on 20th December 2021, 2pm.","lastModifiedDate":"2021-10-19"},{"lineNumber":364,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":365,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":366,"author":{"gitId":"kvihashini"},"content":"#### Deleting an exam from a student: `student -de`","lastModifiedDate":"2021-11-06"},{"lineNumber":367,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":368,"author":{"gitId":"kvihashini"},"content":"Deletes an exam from the specific student.","lastModifiedDate":"2021-11-11"},{"lineNumber":369,"author":{"gitId":"kvihashini"},"content":"","lastModifiedDate":"2021-11-11"},{"lineNumber":370,"author":{"gitId":"kvihashini"},"content":"If you do not want to note down a particular student\u0027s exam anymore, you can remove it by","lastModifiedDate":"2021-11-11"},{"lineNumber":371,"author":{"gitId":"kvihashini"},"content":"entering this command.","lastModifiedDate":"2021-11-11"},{"lineNumber":372,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":373,"author":{"gitId":"tanhuakun"},"content":"Format: `student -de STUDENT_INDEX EXAM_INDEX`","lastModifiedDate":"2021-11-08"},{"lineNumber":374,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":375,"author":{"gitId":"tanhuakun"},"content":"* Specifies the student at `STUDENT_INDEX`.","lastModifiedDate":"2021-11-08"},{"lineNumber":376,"author":{"gitId":"kvihashini"},"content":"* Deletes the specified exam at `EXAM_INDEX` of the student specified.","lastModifiedDate":"2021-11-06"},{"lineNumber":377,"author":{"gitId":"tanhuakun"},"content":"* Both `STUDENT_INDEX` and `EXAM_INDEX` must be a positive number.","lastModifiedDate":"2021-11-08"},{"lineNumber":378,"author":{"gitId":"tanhuakun"},"content":"* The `EXAM_INDEX` can be found by using the [student viewing command](#viewing-a-student-student--v), similarly to","lastModifiedDate":"2021-11-05"},{"lineNumber":379,"author":{"gitId":"tanhuakun"},"content":"deleting lessons.","lastModifiedDate":"2021-11-05"},{"lineNumber":380,"author":{"gitId":"kvihashini"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":381,"author":{"gitId":"tanhuakun"},"content":"Example:","lastModifiedDate":"2021-11-05"},{"lineNumber":382,"author":{"gitId":"tanhuakun"},"content":"* `student -de 1 1` deletes the first exam from the first student.","lastModifiedDate":"2021-10-19"},{"lineNumber":383,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":384,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":385,"author":{"gitId":"kvihashini"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-11-06"},{"lineNumber":386,"author":{"gitId":"jeremy-7007"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":387,"author":{"gitId":"kvihashini"},"content":"### Groups","lastModifiedDate":"2021-11-06"},{"lineNumber":388,"author":{"gitId":"kvihashini"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":389,"author":{"gitId":"kvihashini"},"content":"#### Grouping students: `group -a`","lastModifiedDate":"2021-11-06"},{"lineNumber":390,"author":{"gitId":"kvihashini"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":391,"author":{"gitId":"kvihashini"},"content":"Group students together. ","lastModifiedDate":"2021-11-11"},{"lineNumber":392,"author":{"gitId":"kvihashini"},"content":"","lastModifiedDate":"2021-11-11"},{"lineNumber":393,"author":{"gitId":"kvihashini"},"content":"This is useful for when you have a group of students that has the same lesson schedule or","lastModifiedDate":"2021-11-11"},{"lineNumber":394,"author":{"gitId":"tanhuakun"},"content":"tasks to complete.","lastModifiedDate":"2021-11-11"},{"lineNumber":395,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":396,"author":{"gitId":"kvihashini"},"content":"Format: `group -a STUDENT_INDEX‚Ä¶‚Äã n/GROUPNAME`","lastModifiedDate":"2021-11-11"},{"lineNumber":397,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":398,"author":{"gitId":"tanhuakun"},"content":"* Groups students into a group specified at `GROUPNAME`","lastModifiedDate":"2021-09-27"},{"lineNumber":399,"author":{"gitId":"Neha-5678"},"content":"* `-a` refers to the add group command","lastModifiedDate":"2021-10-28"},{"lineNumber":400,"author":{"gitId":"kvihashini"},"content":"* You can specify as many student index numbers as required.","lastModifiedDate":"2021-11-11"},{"lineNumber":401,"author":{"gitId":"kvihashini"},"content":"* The student index refers to the student index number shown in the displayed Person Panel.","lastModifiedDate":"2021-11-11"},{"lineNumber":402,"author":{"gitId":"kvihashini"},"content":"* The student index **must be a positive integer** 1, 2, 3, ‚Ä¶‚Äã","lastModifiedDate":"2021-11-11"},{"lineNumber":403,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":404,"author":{"gitId":"tanhuakun"},"content":"Examples:","lastModifiedDate":"2021-09-27"},{"lineNumber":405,"author":{"gitId":"Neha-5678"},"content":"* `group -a 1 3 5 n/Team2` creates a group \"Team2\" that includes students at index 1, 3 and 5.","lastModifiedDate":"2021-11-02"},{"lineNumber":406,"author":{"gitId":"kvihashini"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":407,"author":{"gitId":"kvihashini"},"content":"![groupadd](images/imagesInUG/group-add.png)","lastModifiedDate":"2021-11-03"},{"lineNumber":408,"author":{"gitId":"kvihashini"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":409,"author":{"gitId":"kvihashini"},"content":"#### Viewing a group: `group -v`","lastModifiedDate":"2021-11-06"},{"lineNumber":410,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":411,"author":{"gitId":"kvihashini"},"content":"Views a group of students.","lastModifiedDate":"2021-11-06"},{"lineNumber":412,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":413,"author":{"gitId":"kvihashini"},"content":"Let\u0027s say you want to look at all the students inside one of your groups. ","lastModifiedDate":"2021-11-11"},{"lineNumber":414,"author":{"gitId":"kvihashini"},"content":"Instead of viewing each student individually to see the group they are in, you can type this command to ","lastModifiedDate":"2021-11-11"},{"lineNumber":415,"author":{"gitId":"kvihashini"},"content":"view your students, your lessons and the tasks with the group.","lastModifiedDate":"2021-11-11"},{"lineNumber":416,"author":{"gitId":"kvihashini"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":417,"author":{"gitId":"kvihashini"},"content":"Format: `group -v GROUP_INDEX`","lastModifiedDate":"2021-11-11"},{"lineNumber":418,"author":{"gitId":"kvihashini"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":419,"author":{"gitId":"kvihashini"},"content":"* Views a group of students specified at `GROUP_INDEX`","lastModifiedDate":"2021-11-11"},{"lineNumber":420,"author":{"gitId":"kvihashini"},"content":"* `-v` refers to view group command.","lastModifiedDate":"2021-11-06"},{"lineNumber":421,"author":{"gitId":"kvihashini"},"content":"* The group index refers to the group index number shown in the displayed Group Panel.","lastModifiedDate":"2021-11-11"},{"lineNumber":422,"author":{"gitId":"kvihashini"},"content":"* The group index **must be a positive integer** 1, 2, 3, ‚Ä¶‚Äã","lastModifiedDate":"2021-11-11"},{"lineNumber":423,"author":{"gitId":"kvihashini"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":424,"author":{"gitId":"kvihashini"},"content":"Examples:","lastModifiedDate":"2021-11-06"},{"lineNumber":425,"author":{"gitId":"kvihashini"},"content":"* `group -v 5` views the group specified at the index 5.","lastModifiedDate":"2021-11-06"},{"lineNumber":426,"author":{"gitId":"kvihashini"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":427,"author":{"gitId":"tanhuakun"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2021-11-08"},{"lineNumber":428,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":429,"author":{"gitId":"kvihashini"},"content":"#### Deleting a group: `group -d`","lastModifiedDate":"2021-11-06"},{"lineNumber":430,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":431,"author":{"gitId":"kvihashini"},"content":"Deletes a group of students.","lastModifiedDate":"2021-10-24"},{"lineNumber":432,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":433,"author":{"gitId":"kvihashini"},"content":"If you have stopped teaching a particular group of students, you can easily remove the group","lastModifiedDate":"2021-11-11"},{"lineNumber":434,"author":{"gitId":"Neha-5678"},"content":"from the application by typing this command. This will not remove any students in the group from your Person Panel.","lastModifiedDate":"2021-11-11"},{"lineNumber":435,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":436,"author":{"gitId":"kvihashini"},"content":"Format: `group -d GROUP_INDEX`","lastModifiedDate":"2021-11-11"},{"lineNumber":437,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":438,"author":{"gitId":"kvihashini"},"content":"* Deletes a group of students specified at `GROUP_INDEX`","lastModifiedDate":"2021-11-11"},{"lineNumber":439,"author":{"gitId":"Neha-5678"},"content":"* `-d` refers to delete group command.","lastModifiedDate":"2021-10-28"},{"lineNumber":440,"author":{"gitId":"kvihashini"},"content":"* The group index refers to the group index number shown in the Group Panel.","lastModifiedDate":"2021-11-11"},{"lineNumber":441,"author":{"gitId":"kvihashini"},"content":"* The group index **must be a positive integer** 1, 2, 3, ‚Ä¶‚Äã","lastModifiedDate":"2021-11-11"},{"lineNumber":442,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":443,"author":{"gitId":"-"},"content":"Examples:","lastModifiedDate":"2021-10-24"},{"lineNumber":444,"author":{"gitId":"kvihashini"},"content":"* `group -d 5` deletes the group specified at the index 5.","lastModifiedDate":"2021-11-06"},{"lineNumber":445,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":446,"author":{"gitId":"kvihashini"},"content":"#### Adding a lesson to a group: `group -al`","lastModifiedDate":"2021-11-06"},{"lineNumber":447,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":448,"author":{"gitId":"kvihashini"},"content":"Adds a lesson to the specific group.","lastModifiedDate":"2021-11-11"},{"lineNumber":449,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":450,"author":{"gitId":"kvihashini"},"content":"If you would like to note down your lesson schedule with the entire group, ","lastModifiedDate":"2021-11-11"},{"lineNumber":451,"author":{"gitId":"kvihashini"},"content":"you should specify the lesson subject, as well as the day of week and time of the lesson.","lastModifiedDate":"2021-11-11"},{"lineNumber":452,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":453,"author":{"gitId":"kvihashini"},"content":"Format: `group -al GROUP_INDEX s/SUBJECT st/START_TIME et/END_TIME d/DAY`","lastModifiedDate":"2021-11-11"},{"lineNumber":454,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":455,"author":{"gitId":"kvihashini"},"content":"* Adds a lesson to the group specified by the `GROUP_INDEX`.","lastModifiedDate":"2021-11-11"},{"lineNumber":456,"author":{"gitId":"tanhuakun"},"content":"* `SUBJECT` takes in any input with at least one alphanumeric character.","lastModifiedDate":"2021-10-26"},{"lineNumber":457,"author":{"gitId":"tanhuakun"},"content":"* `DAY` takes in the following inputs: `Mon Tue Wed Thu Fri Sat Sun`.","lastModifiedDate":"2021-10-26"},{"lineNumber":458,"author":{"gitId":"tanhuakun"},"content":"* `START_TIME` and `END_TIME` takes in the time in 24-hour, HH:MM, format. For example `08:00`","lastModifiedDate":"2021-10-26"},{"lineNumber":459,"author":{"gitId":"tanhuakun"},"content":"  for 8am.","lastModifiedDate":"2021-10-26"},{"lineNumber":460,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":461,"author":{"gitId":"tanhuakun"},"content":"\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-info\"\u003e","lastModifiedDate":"2021-11-05"},{"lineNumber":462,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":463,"author":{"gitId":"tanhuakun"},"content":"**:information_source: Overlapping lessons:**\u003cbr\u003e","lastModifiedDate":"2021-11-05"},{"lineNumber":464,"author":{"gitId":"tanhuakun"},"content":"* A group cannot be allocated a lesson if any students within the group have overlapping lessons. Overlap is defined as being","lastModifiedDate":"2021-11-05"},{"lineNumber":465,"author":{"gitId":"tanhuakun"},"content":"  on the same day and within the same time frame.","lastModifiedDate":"2021-11-05"},{"lineNumber":466,"author":{"gitId":"tanhuakun"},"content":"* However, lessons of different students or groups can still overlap. This may be disallowed in a future version.","lastModifiedDate":"2021-11-05"},{"lineNumber":467,"author":{"gitId":"tanhuakun"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-11-05"},{"lineNumber":468,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":469,"author":{"gitId":"tanhuakun"},"content":"Example:","lastModifiedDate":"2021-10-26"},{"lineNumber":470,"author":{"gitId":"tanhuakun"},"content":"* `group -al 1 s/Biology st/08:00 et/09:00 d/Mon` adds a lesson with the subject name biology","lastModifiedDate":"2021-11-08"},{"lineNumber":471,"author":{"gitId":"tanhuakun"},"content":"  starting at 8am and ending at 9am on Mondays.","lastModifiedDate":"2021-10-26"},{"lineNumber":472,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":473,"author":{"gitId":"tanhuakun"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2021-11-08"},{"lineNumber":474,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":475,"author":{"gitId":"kvihashini"},"content":"#### Deleting a lesson from a group: `group -dl`","lastModifiedDate":"2021-11-06"},{"lineNumber":476,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":477,"author":{"gitId":"kvihashini"},"content":"Deletes a lesson from the specific group.","lastModifiedDate":"2021-11-11"},{"lineNumber":478,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":479,"author":{"gitId":"kvihashini"},"content":"If you are not continuing this lesson with the group anymore, you can type this command to ","lastModifiedDate":"2021-11-11"},{"lineNumber":480,"author":{"gitId":"kvihashini"},"content":"remove the lesson from the group.","lastModifiedDate":"2021-11-11"},{"lineNumber":481,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":482,"author":{"gitId":"kvihashini"},"content":"Format: `group -dl GROUP_","lastModifiedDate":"2021-11-11"},{"lineNumber":483,"author":{"gitId":"kvihashini"},"content":"LESSON_INDEX`","lastModifiedDate":"2021-11-11"},{"lineNumber":484,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":485,"author":{"gitId":"tanhuakun"},"content":"* Specifies the group at `GROUP_INDEX`.","lastModifiedDate":"2021-10-26"},{"lineNumber":486,"author":{"gitId":"tanhuakun"},"content":"* Deletes the specified lesson at `LESSON_INDEX` of the group specified.","lastModifiedDate":"2021-10-26"},{"lineNumber":487,"author":{"gitId":"tanhuakun"},"content":"  The `LESSON_INDEX` can be found using the [group viewing command](#viewing-a-group-group--v).","lastModifiedDate":"2021-11-07"},{"lineNumber":488,"author":{"gitId":"tanhuakun"},"content":"* Both `GROUP_INDEX` and `LESSON_INDEX` must be a positive number.","lastModifiedDate":"2021-10-26"},{"lineNumber":489,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":490,"author":{"gitId":"tanhuakun"},"content":"Example:","lastModifiedDate":"2021-10-26"},{"lineNumber":491,"author":{"gitId":"tanhuakun"},"content":"* `group -dl 1 1` deletes the first lesson from the first group.","lastModifiedDate":"2021-10-26"},{"lineNumber":492,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":493,"author":{"gitId":"kvihashini"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-11-06"},{"lineNumber":494,"author":{"gitId":"jeremy-7007"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":495,"author":{"gitId":"kvihashini"},"content":"### Tasks","lastModifiedDate":"2021-11-06"},{"lineNumber":496,"author":{"gitId":"kvihashini"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":497,"author":{"gitId":"kvihashini"},"content":"#### Adding a task: `task -a`","lastModifiedDate":"2021-11-06"},{"lineNumber":498,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":499,"author":{"gitId":"kvihashini"},"content":"Adds a task to the Task Panel.","lastModifiedDate":"2021-11-06"},{"lineNumber":500,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":501,"author":{"gitId":"Neha-5678"},"content":"Let\u0027s say, you have come up with a challenging task for your students. You may create a new task in Tutor Master by executing ","lastModifiedDate":"2021-11-11"},{"lineNumber":502,"author":{"gitId":"Neha-5678"},"content":"the `task -a` command and specifying the `NAME` and `DEADLINE` of the task. ","lastModifiedDate":"2021-11-11"},{"lineNumber":503,"author":{"gitId":"Neha-5678"},"content":"","lastModifiedDate":"2021-11-11"},{"lineNumber":504,"author":{"gitId":"eltonyeh"},"content":"Format: `task -a n/NAME d/DEADLINE`","lastModifiedDate":"2021-10-12"},{"lineNumber":505,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":506,"author":{"gitId":"eltonyeh"},"content":"* Adds a task with the name `NAME` and deadline `DEADLINE`","lastModifiedDate":"2021-10-12"},{"lineNumber":507,"author":{"gitId":"eltonyeh"},"content":"* The deadline must be in the format `YYYY-MM-DD`","lastModifiedDate":"2021-10-12"},{"lineNumber":508,"author":{"gitId":"eltonyeh"},"content":"* `-a` refers to the add command","lastModifiedDate":"2021-09-28"},{"lineNumber":509,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":510,"author":{"gitId":"tanhuakun"},"content":"Examples:","lastModifiedDate":"2021-09-27"},{"lineNumber":511,"author":{"gitId":"kvihashini"},"content":"* `task -a n/CS2100 Lab 1 d/2021-10-10` adds the task \"CS2100 Lab 1\"","lastModifiedDate":"2021-11-02"},{"lineNumber":512,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":513,"author":{"gitId":"tanhuakun"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2021-11-08"},{"lineNumber":514,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":515,"author":{"gitId":"kvihashini"},"content":"#### Editing a task: `task -e`","lastModifiedDate":"2021-11-06"},{"lineNumber":516,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":517,"author":{"gitId":"kvihashini"},"content":"Edits a task in the Task Panel.","lastModifiedDate":"2021-11-06"},{"lineNumber":518,"author":{"gitId":"Neha-5678"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":519,"author":{"gitId":"Neha-5678"},"content":"Let\u0027s say that the deadline for one of your tasks changed. In that case, instead of deleting the existing task and","lastModifiedDate":"2021-11-11"},{"lineNumber":520,"author":{"gitId":"Neha-5678"},"content":"creating a new one with the updated deadline, you can simply edit the deadline of the task by typing the command below.  ","lastModifiedDate":"2021-11-11"},{"lineNumber":521,"author":{"gitId":"Neha-5678"},"content":"","lastModifiedDate":"2021-11-11"},{"lineNumber":522,"author":{"gitId":"kvihashini"},"content":"Format: `task -e TASK_INDEX [n/NAME] [d/DEADLINE]`","lastModifiedDate":"2021-11-11"},{"lineNumber":523,"author":{"gitId":"Neha-5678"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":524,"author":{"gitId":"kvihashini"},"content":"* Edits a task with the index `TASK_INDEX`. The index should be a positive number and refers to the index number of the task in the students‚Äô task list","lastModifiedDate":"2021-11-11"},{"lineNumber":525,"author":{"gitId":"Neha-5678"},"content":"* The deadline must be in the format `YYYY-MM-DD`","lastModifiedDate":"2021-11-11"},{"lineNumber":526,"author":{"gitId":"eltonyeh"},"content":"* `-e` refers to the edit command","lastModifiedDate":"2021-09-28"},{"lineNumber":527,"author":{"gitId":"Neha-5678"},"content":"* It is a requirement that **at least one of the optional fields should be provided!**","lastModifiedDate":"2021-10-30"},{"lineNumber":528,"author":{"gitId":"Neha-5678"},"content":"* The current value will be updated to the value input by the user","lastModifiedDate":"2021-09-28"},{"lineNumber":529,"author":{"gitId":"Neha-5678"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":530,"author":{"gitId":"Neha-5678"},"content":"Examples:","lastModifiedDate":"2021-09-28"},{"lineNumber":531,"author":{"gitId":"eltonyeh"},"content":"* `task -e 4 d/2021-12-31` edits the deadline of the fourth task to 31 December 2021","lastModifiedDate":"2021-11-08"},{"lineNumber":532,"author":{"gitId":"kvihashini"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":533,"author":{"gitId":"kvihashini"},"content":"![taskedit](images/imagesInUG/task-edit.png)","lastModifiedDate":"2021-11-03"},{"lineNumber":534,"author":{"gitId":"kvihashini"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":535,"author":{"gitId":"tanhuakun"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2021-11-08"},{"lineNumber":536,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":537,"author":{"gitId":"kvihashini"},"content":"#### Deleting a task: `task -d`","lastModifiedDate":"2021-11-06"},{"lineNumber":538,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":539,"author":{"gitId":"kvihashini"},"content":"Deletes the specific task from the Task Panel.","lastModifiedDate":"2021-11-06"},{"lineNumber":540,"author":{"gitId":"kvihashini"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":541,"author":{"gitId":"Neha-5678"},"content":"Now, let us assume that all your students have completed a task and you no longer have to store it in Tutor Master. You can ","lastModifiedDate":"2021-11-11"},{"lineNumber":542,"author":{"gitId":"Neha-5678"},"content":"simply delete the task by using the command below and specifying the index of the task in the Task Panel. ","lastModifiedDate":"2021-11-11"},{"lineNumber":543,"author":{"gitId":"Neha-5678"},"content":"","lastModifiedDate":"2021-11-11"},{"lineNumber":544,"author":{"gitId":"kvihashini"},"content":"Format: `task -d TASK_INDEX`","lastModifiedDate":"2021-11-11"},{"lineNumber":545,"author":{"gitId":"kvihashini"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":546,"author":{"gitId":"kvihashini"},"content":"* Deletes the task specified at `TASK_INDEX`. The index should be a positive number.","lastModifiedDate":"2021-11-11"},{"lineNumber":547,"author":{"gitId":"kvihashini"},"content":"* `-d` refers to the deletion command.","lastModifiedDate":"2021-09-28"},{"lineNumber":548,"author":{"gitId":"kvihashini"},"content":"* The task index refers to the index number shown in the displayed Task Panel.","lastModifiedDate":"2021-11-11"},{"lineNumber":549,"author":{"gitId":"kvihashini"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":550,"author":{"gitId":"kvihashini"},"content":"Examples:","lastModifiedDate":"2021-09-28"},{"lineNumber":551,"author":{"gitId":"jeremy-7007"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":552,"author":{"gitId":"kvihashini"},"content":"* `task -d 1` deletes the task at index 1","lastModifiedDate":"2021-09-28"},{"lineNumber":553,"author":{"gitId":"kvihashini"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":554,"author":{"gitId":"kvihashini"},"content":"#### Finding a task by name: `task -f`","lastModifiedDate":"2021-11-06"},{"lineNumber":555,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":556,"author":{"gitId":"Neha-5678"},"content":"Find tasks whose names contain any of the given keywords.","lastModifiedDate":"2021-10-28"},{"lineNumber":557,"author":{"gitId":"Neha-5678"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":558,"author":{"gitId":"Neha-5678"},"content":"Let\u0027s say you would like to look up all the tasks with the name __English__. Instead of having to scroll through the","lastModifiedDate":"2021-11-11"},{"lineNumber":559,"author":{"gitId":"Neha-5678"},"content":"long list of tasks in the Task Panel, you simply have to use the find task command and specify __English__ as the keyword.","lastModifiedDate":"2021-11-11"},{"lineNumber":560,"author":{"gitId":"Neha-5678"},"content":"","lastModifiedDate":"2021-11-11"},{"lineNumber":561,"author":{"gitId":"Neha-5678"},"content":"Format: `task -f KEYWORD‚Ä¶‚Äã`","lastModifiedDate":"2021-10-28"},{"lineNumber":562,"author":{"gitId":"Neha-5678"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":563,"author":{"gitId":"Neha-5678"},"content":"* The search is case-insensitive. e.g `report` will match `Report`","lastModifiedDate":"2021-10-28"},{"lineNumber":564,"author":{"gitId":"Neha-5678"},"content":"* The order of the keywords does not matter. e.g. `Report Lab` will match `Lab Report`","lastModifiedDate":"2021-10-28"},{"lineNumber":565,"author":{"gitId":"Neha-5678"},"content":"* Only the name is searched.","lastModifiedDate":"2021-10-28"},{"lineNumber":566,"author":{"gitId":"Neha-5678"},"content":"* Only full words will be matched e.g. `Rep` will not match `Report`","lastModifiedDate":"2021-10-28"},{"lineNumber":567,"author":{"gitId":"kvihashini"},"content":"* Students matching at least one keyword will be returned (i.e. `OR` search).","lastModifiedDate":"2021-11-11"},{"lineNumber":568,"author":{"gitId":"Neha-5678"},"content":"  e.g. `Report Submission` will return `Report 1`, `Lab Submission`","lastModifiedDate":"2021-10-28"},{"lineNumber":569,"author":{"gitId":"Neha-5678"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":570,"author":{"gitId":"Neha-5678"},"content":"Examples:","lastModifiedDate":"2021-10-28"},{"lineNumber":571,"author":{"gitId":"kvihashini"},"content":"* `task -f Report` returns `Report 1` and `Report Submission`","lastModifiedDate":"2021-11-03"},{"lineNumber":572,"author":{"gitId":"kvihashini"},"content":"* `task -f lab submission` returns `Lab Submission`, `Report Submission`\u003cbr\u003e","lastModifiedDate":"2021-11-03"},{"lineNumber":573,"author":{"gitId":"kvihashini"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":574,"author":{"gitId":"kvihashini"},"content":"![taskfind](images/imagesInUG/task-find.png)","lastModifiedDate":"2021-11-03"},{"lineNumber":575,"author":{"gitId":"kvihashini"},"content":"","lastModifiedDate":"2021-11-03"},{"lineNumber":576,"author":{"gitId":"Neha-5678"},"content":"#### Listing all tasks: `task -l`","lastModifiedDate":"2021-11-11"},{"lineNumber":577,"author":{"gitId":"Neha-5678"},"content":"","lastModifiedDate":"2021-11-11"},{"lineNumber":578,"author":{"gitId":"Neha-5678"},"content":"Shows a list of all the tasks in the Task Panel.","lastModifiedDate":"2021-11-11"},{"lineNumber":579,"author":{"gitId":"Neha-5678"},"content":"","lastModifiedDate":"2021-11-11"},{"lineNumber":580,"author":{"gitId":"Neha-5678"},"content":"After looking up a particular task using the `task -f` command, let\u0027s assume that you would like to view all the tasks ","lastModifiedDate":"2021-11-11"},{"lineNumber":581,"author":{"gitId":"Neha-5678"},"content":"in the task panel. In that case, you can simply execute the `task -l` command. ","lastModifiedDate":"2021-11-11"},{"lineNumber":582,"author":{"gitId":"Neha-5678"},"content":"","lastModifiedDate":"2021-11-11"},{"lineNumber":583,"author":{"gitId":"Neha-5678"},"content":"Format: `task -l`","lastModifiedDate":"2021-11-11"},{"lineNumber":584,"author":{"gitId":"Neha-5678"},"content":"","lastModifiedDate":"2021-11-11"},{"lineNumber":585,"author":{"gitId":"kvihashini"},"content":"#### Assigning tasks to students: `task -as`","lastModifiedDate":"2021-11-06"},{"lineNumber":586,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":587,"author":{"gitId":"kvihashini"},"content":"Assigns a specific task to students‚Äô task list.","lastModifiedDate":"2021-09-28"},{"lineNumber":588,"author":{"gitId":"kvihashini"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":589,"author":{"gitId":"Neha-5678"},"content":"In the situation that you would like to assign a task to a particular student, you could use the command below by specifying","lastModifiedDate":"2021-11-11"},{"lineNumber":590,"author":{"gitId":"Neha-5678"},"content":"the index of the student in the Student Panel and the index of the task to be assigned in the Task Panel. ","lastModifiedDate":"2021-11-11"},{"lineNumber":591,"author":{"gitId":"Neha-5678"},"content":"","lastModifiedDate":"2021-11-11"},{"lineNumber":592,"author":{"gitId":"kvihashini"},"content":"Format: `task -as STUDENT_INDEX TASK_INDEX`","lastModifiedDate":"2021-11-11"},{"lineNumber":593,"author":{"gitId":"kvihashini"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":594,"author":{"gitId":"kvihashini"},"content":"* Assigns the task specified at index `TASK_INDEX` to the ‚ÄúStudent‚Äù object specified at index `STUDENT_INDEX`.","lastModifiedDate":"2021-11-11"},{"lineNumber":595,"author":{"gitId":"eltonyeh"},"content":"* `-as` refers to the \"assign to student\" command.","lastModifiedDate":"2021-10-26"},{"lineNumber":596,"author":{"gitId":"kvihashini"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":597,"author":{"gitId":"kvihashini"},"content":"Examples:","lastModifiedDate":"2021-09-28"},{"lineNumber":598,"author":{"gitId":"eltonyeh"},"content":"* `task -as 2 4` adds the task at the index 4 to the student at the index 2","lastModifiedDate":"2021-10-26"},{"lineNumber":599,"author":{"gitId":"eltonyeh"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":600,"author":{"gitId":"tanhuakun"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2021-11-08"},{"lineNumber":601,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":602,"author":{"gitId":"kvihashini"},"content":"#### Assigning tasks to groups: `task -ag`","lastModifiedDate":"2021-11-06"},{"lineNumber":603,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":604,"author":{"gitId":"eltonyeh"},"content":"Assigns a specific task to groups‚Äô task list.","lastModifiedDate":"2021-10-26"},{"lineNumber":605,"author":{"gitId":"eltonyeh"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":606,"author":{"gitId":"Neha-5678"},"content":"Let\u0027s say you would like to assign a particular task to all the students in a class. Instead of having to assign the task","lastModifiedDate":"2021-11-11"},{"lineNumber":607,"author":{"gitId":"Neha-5678"},"content":"to each student individually, you can directly assign the task to all the students in one go by using the command below.","lastModifiedDate":"2021-11-11"},{"lineNumber":608,"author":{"gitId":"Neha-5678"},"content":"","lastModifiedDate":"2021-11-11"},{"lineNumber":609,"author":{"gitId":"kvihashini"},"content":"Format: `task -ag GROUP_INDEX TASK_INDEX`","lastModifiedDate":"2021-11-11"},{"lineNumber":610,"author":{"gitId":"eltonyeh"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":611,"author":{"gitId":"kvihashini"},"content":"* Assigns the task specified at index `TASK_INDEX` to the ‚ÄúGroup‚Äù object specified at index `GROUP_INDEX`.","lastModifiedDate":"2021-11-11"},{"lineNumber":612,"author":{"gitId":"eltonyeh"},"content":"* `-ag` refers to the \"assign to group\" command.","lastModifiedDate":"2021-10-26"},{"lineNumber":613,"author":{"gitId":"eltonyeh"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":614,"author":{"gitId":"eltonyeh"},"content":"Examples:","lastModifiedDate":"2021-10-26"},{"lineNumber":615,"author":{"gitId":"eltonyeh"},"content":"* `task -ag 2 4` adds the task at the index 4 to the group at the index 2","lastModifiedDate":"2021-10-26"},{"lineNumber":616,"author":{"gitId":"kvihashini"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":617,"author":{"gitId":"kvihashini"},"content":"#### Unassigning tasks from students: `task -unas`","lastModifiedDate":"2021-11-06"},{"lineNumber":618,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":619,"author":{"gitId":"eltonyeh"},"content":"Unassigns a specific task from students‚Äô task list.","lastModifiedDate":"2021-10-26"},{"lineNumber":620,"author":{"gitId":"eltonyeh"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":621,"author":{"gitId":"Neha-5678"},"content":"Suppose you assigned a particular task to a student by accident, you can simply unassign the task by entering the command below. ","lastModifiedDate":"2021-11-11"},{"lineNumber":622,"author":{"gitId":"Neha-5678"},"content":"","lastModifiedDate":"2021-11-11"},{"lineNumber":623,"author":{"gitId":"kvihashini"},"content":"Format: `task -unas STUDENT_INDEX TASK_INDEX`","lastModifiedDate":"2021-11-11"},{"lineNumber":624,"author":{"gitId":"eltonyeh"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":625,"author":{"gitId":"kvihashini"},"content":"* Unassigns the task specified at index `TASK_INDEX` from the ‚ÄúStudent‚Äù object specified at index `STUDENT_INDEX`.","lastModifiedDate":"2021-11-11"},{"lineNumber":626,"author":{"gitId":"eltonyeh"},"content":"* `-unas` refers to the \"unassign from student\" command.","lastModifiedDate":"2021-10-26"},{"lineNumber":627,"author":{"gitId":"eltonyeh"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":628,"author":{"gitId":"eltonyeh"},"content":"Examples:","lastModifiedDate":"2021-10-26"},{"lineNumber":629,"author":{"gitId":"eltonyeh"},"content":"* `task -unas 2 4` removes the task at the index 4 from the student at the index 2","lastModifiedDate":"2021-10-26"},{"lineNumber":630,"author":{"gitId":"eltonyeh"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":631,"author":{"gitId":"kvihashini"},"content":"#### Unassigning tasks from groups: `task -unag`","lastModifiedDate":"2021-11-06"},{"lineNumber":632,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":633,"author":{"gitId":"eltonyeh"},"content":"Unassigns a specific task from groups‚Äô task list.","lastModifiedDate":"2021-10-26"},{"lineNumber":634,"author":{"gitId":"eltonyeh"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":635,"author":{"gitId":"Neha-5678"},"content":"If you wish to remove a task that has already been assigned to a class of students to reduce their workload, you could simply ","lastModifiedDate":"2021-11-11"},{"lineNumber":636,"author":{"gitId":"Neha-5678"},"content":"execute the command below. ","lastModifiedDate":"2021-11-11"},{"lineNumber":637,"author":{"gitId":"Neha-5678"},"content":"","lastModifiedDate":"2021-11-11"},{"lineNumber":638,"author":{"gitId":"kvihashini"},"content":"Format: `task -unag GROUP_INDEX TASK_INDEX`","lastModifiedDate":"2021-11-11"},{"lineNumber":639,"author":{"gitId":"eltonyeh"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":640,"author":{"gitId":"kvihashini"},"content":"* Unassigns the task specified at index `TASK_INDEX` from the ‚ÄúGroup‚Äù object specified at index `GROUP_INDEX`.","lastModifiedDate":"2021-11-11"},{"lineNumber":641,"author":{"gitId":"eltonyeh"},"content":"* `-unag` refers to the \"unassign from group\" command.","lastModifiedDate":"2021-10-26"},{"lineNumber":642,"author":{"gitId":"kvihashini"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":643,"author":{"gitId":"kvihashini"},"content":"Examples:","lastModifiedDate":"2021-09-28"},{"lineNumber":644,"author":{"gitId":"eltonyeh"},"content":"* `task -unag 2 4` removes the task at the index 4 from the group at the index 2","lastModifiedDate":"2021-10-26"},{"lineNumber":645,"author":{"gitId":"jeremy-7007"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":646,"author":{"gitId":"tanhuakun"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2021-11-08"},{"lineNumber":647,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":648,"author":{"gitId":"kvihashini"},"content":"#### Marking a task as done by student: `task -do`","lastModifiedDate":"2021-11-06"},{"lineNumber":649,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":650,"author":{"gitId":"jeremy-7007"},"content":"Marks that a student has done a task. ","lastModifiedDate":"2021-10-29"},{"lineNumber":651,"author":{"gitId":"jeremy-7007"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":652,"author":{"gitId":"Neha-5678"},"content":"Suppose a particular student has already completed a particular task assigned to him or her and you would like to track ","lastModifiedDate":"2021-11-11"},{"lineNumber":653,"author":{"gitId":"Neha-5678"},"content":"this information, you could simply indicate that the student has done the task by using the command below.","lastModifiedDate":"2021-11-11"},{"lineNumber":654,"author":{"gitId":"jeremy-7007"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":655,"author":{"gitId":"kvihashini"},"content":"Format: `task -do STUDENT_INDEX TASK_INDEX`","lastModifiedDate":"2021-11-11"},{"lineNumber":656,"author":{"gitId":"jeremy-7007"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":657,"author":{"gitId":"kvihashini"},"content":"* Marks the task specified at index `TASK_INDEX` as done by the ‚ÄúStudent‚Äù object specified at index `STUDENT_INDEX`.","lastModifiedDate":"2021-11-11"},{"lineNumber":658,"author":{"gitId":"jeremy-7007"},"content":"* `-do` refers to the \"mark as done\" command.","lastModifiedDate":"2021-10-29"},{"lineNumber":659,"author":{"gitId":"jeremy-7007"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":660,"author":{"gitId":"jeremy-7007"},"content":"Examples:","lastModifiedDate":"2021-10-29"},{"lineNumber":661,"author":{"gitId":"jeremy-7007"},"content":"* `task -do 2 4` marks the task at the index 4 as done by the student at the index 2","lastModifiedDate":"2021-10-29"},{"lineNumber":662,"author":{"gitId":"jeremy-7007"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":663,"author":{"gitId":"Neha-5678"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":664,"author":{"gitId":"kvihashini"},"content":"#### Marking a task as done by group: `task -dog`  (Coming soon)","lastModifiedDate":"2021-11-08"},{"lineNumber":665,"author":{"gitId":"Neha-5678"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":666,"author":{"gitId":"Neha-5678"},"content":"Marks that a group has done a task.","lastModifiedDate":"2021-11-08"},{"lineNumber":667,"author":{"gitId":"Neha-5678"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":668,"author":{"gitId":"kvihashini"},"content":"Format: `task -dog GROUP_INDEX TASK_INDEX`","lastModifiedDate":"2021-11-11"},{"lineNumber":669,"author":{"gitId":"Neha-5678"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":670,"author":{"gitId":"kvihashini"},"content":"* Marks the task specified at index `TASK_INDEX` as done by the Group object specified at index `GROUP_INDEX`.","lastModifiedDate":"2021-11-11"},{"lineNumber":671,"author":{"gitId":"Neha-5678"},"content":"* `-dog` refers to the \"mark as done by group\" command.","lastModifiedDate":"2021-11-08"},{"lineNumber":672,"author":{"gitId":"Neha-5678"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":673,"author":{"gitId":"Neha-5678"},"content":"Examples:","lastModifiedDate":"2021-11-08"},{"lineNumber":674,"author":{"gitId":"Neha-5678"},"content":"* `task -dog 2 4` marks the task at the index 4 as done by the group at the index 2","lastModifiedDate":"2021-11-08"},{"lineNumber":675,"author":{"gitId":"Neha-5678"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":676,"author":{"gitId":"kvihashini"},"content":"#### Marking a task as not done by student: `task -undo`","lastModifiedDate":"2021-11-06"},{"lineNumber":677,"author":{"gitId":"Neha-5678"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":678,"author":{"gitId":"jeremy-7007"},"content":"Marks that a student has not done a task.","lastModifiedDate":"2021-10-29"},{"lineNumber":679,"author":{"gitId":"jeremy-7007"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":680,"author":{"gitId":"Neha-5678"},"content":"In the case that a student has already completed a task and you would like him or her to reattempt it, you could simply ","lastModifiedDate":"2021-11-11"},{"lineNumber":681,"author":{"gitId":"Neha-5678"},"content":"indicate the task as undone by the student by using the command below.","lastModifiedDate":"2021-11-11"},{"lineNumber":682,"author":{"gitId":"Neha-5678"},"content":"","lastModifiedDate":"2021-11-11"},{"lineNumber":683,"author":{"gitId":"kvihashini"},"content":"Format: `task -undo STUDENT_INDEX TASK_INDEX`","lastModifiedDate":"2021-11-11"},{"lineNumber":684,"author":{"gitId":"jeremy-7007"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":685,"author":{"gitId":"kvihashini"},"content":"* Marks the task specified at index `TASK_INDEX` as not done by the ‚ÄúStudent‚Äù object specified at index `STUDENT_INDEX`.","lastModifiedDate":"2021-11-11"},{"lineNumber":686,"author":{"gitId":"jeremy-7007"},"content":"* `-undo` refers to the \"mark as undone\" command.","lastModifiedDate":"2021-10-29"},{"lineNumber":687,"author":{"gitId":"jeremy-7007"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":688,"author":{"gitId":"jeremy-7007"},"content":"Examples:","lastModifiedDate":"2021-10-29"},{"lineNumber":689,"author":{"gitId":"jeremy-7007"},"content":"* `task -undo 2 4` marks the task at the index 4 as not done by the student at the index 2","lastModifiedDate":"2021-10-29"},{"lineNumber":690,"author":{"gitId":"kvihashini"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":691,"author":{"gitId":"tanhuakun"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2021-11-08"},{"lineNumber":692,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":693,"author":{"gitId":"kvihashini"},"content":"#### Marking a task as not done by group: `task -undog`  (Coming soon)","lastModifiedDate":"2021-11-08"},{"lineNumber":694,"author":{"gitId":"Neha-5678"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":695,"author":{"gitId":"Neha-5678"},"content":"Marks that a group has not done a task.","lastModifiedDate":"2021-11-08"},{"lineNumber":696,"author":{"gitId":"Neha-5678"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":697,"author":{"gitId":"kvihashini"},"content":"Format: `task -undog GROUP_INDEX TASK_INDEX`","lastModifiedDate":"2021-11-11"},{"lineNumber":698,"author":{"gitId":"Neha-5678"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":699,"author":{"gitId":"kvihashini"},"content":"* Marks the task specified at index `TASK_INDEX` as not done by the Group object specified at index `GROUP_INDEX`.","lastModifiedDate":"2021-11-11"},{"lineNumber":700,"author":{"gitId":"Neha-5678"},"content":"* `-undog` refers to the \"mark as undone for group\" command.","lastModifiedDate":"2021-11-08"},{"lineNumber":701,"author":{"gitId":"Neha-5678"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":702,"author":{"gitId":"Neha-5678"},"content":"Examples:","lastModifiedDate":"2021-11-08"},{"lineNumber":703,"author":{"gitId":"Neha-5678"},"content":"* `task -undog 2 4` marks the task at the index 4 as not done by the group at the index 2","lastModifiedDate":"2021-11-08"},{"lineNumber":704,"author":{"gitId":"Neha-5678"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":705,"author":{"gitId":"kvihashini"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-11-06"},{"lineNumber":706,"author":{"gitId":"jeremy-7007"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":707,"author":{"gitId":"kvihashini"},"content":"### Others","lastModifiedDate":"2021-11-06"},{"lineNumber":708,"author":{"gitId":"kvihashini"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":709,"author":{"gitId":"tanhuakun"},"content":"#### Viewing schedule : `schedule`","lastModifiedDate":"2021-11-06"},{"lineNumber":710,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":711,"author":{"gitId":"tanhuakun"},"content":"Views the current lesson schedule for the week.","lastModifiedDate":"2021-11-06"},{"lineNumber":712,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":713,"author":{"gitId":"tanhuakun"},"content":"Format: `schedule`","lastModifiedDate":"2021-11-11"},{"lineNumber":714,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-11-11"},{"lineNumber":715,"author":{"gitId":"kvihashini"},"content":"#### Viewing help : `help`","lastModifiedDate":"2021-11-06"},{"lineNumber":716,"author":{"gitId":"kvihashini"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":717,"author":{"gitId":"tanhuakun"},"content":"Views an info page for a list of commands and examples","lastModifiedDate":"2021-11-08"},{"lineNumber":718,"author":{"gitId":"kvihashini"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":719,"author":{"gitId":"kvihashini"},"content":"Format: `help`","lastModifiedDate":"2021-11-06"},{"lineNumber":720,"author":{"gitId":"kvihashini"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":721,"author":{"gitId":"kvihashini"},"content":"#### Clearing all entries : `clear`","lastModifiedDate":"2021-11-06"},{"lineNumber":722,"author":{"gitId":"eltonyeh"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":723,"author":{"gitId":"eltonyeh"},"content":"Clears all entries in Tutor Master.","lastModifiedDate":"2021-09-28"},{"lineNumber":724,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":725,"author":{"gitId":"-"},"content":"Format: `clear`","lastModifiedDate":"2021-09-28"},{"lineNumber":726,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":727,"author":{"gitId":"kvihashini"},"content":"#### Exiting the program : `exit`","lastModifiedDate":"2021-11-06"},{"lineNumber":728,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":729,"author":{"gitId":"-"},"content":"Exits the program.","lastModifiedDate":"2021-09-28"},{"lineNumber":730,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":731,"author":{"gitId":"-"},"content":"Format: `exit`","lastModifiedDate":"2021-09-28"},{"lineNumber":732,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":733,"author":{"gitId":"kvihashini"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2021-11-06"},{"lineNumber":734,"author":{"gitId":"jeremy-7007"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2021-11-08"},{"lineNumber":735,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":736,"author":{"gitId":"kvihashini"},"content":"#### Saving the data","lastModifiedDate":"2021-11-06"},{"lineNumber":737,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":738,"author":{"gitId":"eltonyeh"},"content":"Tutor Master data are saved in the hard disk automatically after any command that changes the data. There is no need to save manually.","lastModifiedDate":"2021-09-28"},{"lineNumber":739,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":740,"author":{"gitId":"kvihashini"},"content":"#### Editing the data file","lastModifiedDate":"2021-11-06"},{"lineNumber":741,"author":{"gitId":"eltonyeh"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":742,"author":{"gitId":"eltonyeh"},"content":"Tutor Master data are saved as a JSON file `[JAR file location]/data/tutormaster.json`. Advanced users are welcome to update data directly by editing that data file.","lastModifiedDate":"2021-09-28"},{"lineNumber":743,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":744,"author":{"gitId":"-"},"content":"\u003cdiv markdown\u003d\"span\" class\u003d\"alert alert-warning\"\u003e:exclamation: **Caution:**","lastModifiedDate":"2021-09-28"},{"lineNumber":745,"author":{"gitId":"eltonyeh"},"content":"If your changes to the data file makes its format invalid, Tutor Master will discard all data and start with an empty data file at the next run.","lastModifiedDate":"2021-09-28"},{"lineNumber":746,"author":{"gitId":"-"},"content":"\u003c/div\u003e","lastModifiedDate":"2021-09-28"},{"lineNumber":747,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":748,"author":{"gitId":"kvihashini"},"content":"#### Archiving data files (Coming Soon)","lastModifiedDate":"2021-11-08"},{"lineNumber":749,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":750,"author":{"gitId":"-"},"content":"_Details coming soon ..._","lastModifiedDate":"2021-09-28"},{"lineNumber":751,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":752,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":753,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":754,"author":{"gitId":"-"},"content":"## FAQ","lastModifiedDate":"2020-05-23"},{"lineNumber":755,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":756,"author":{"gitId":"tanhuakun"},"content":"**Q**: How do I transfer my data to another Computer? \u003cbr\u003e","lastModifiedDate":"2021-11-11"},{"lineNumber":757,"author":{"gitId":"kvihashini"},"content":"**A**: Install the app in the other computer and overwrite the empty data file it creates with the file that contains the data of your previous Tutor Master home folder.","lastModifiedDate":"2021-09-28"},{"lineNumber":758,"author":{"gitId":"kvihashini"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":759,"author":{"gitId":"tanhuakun"},"content":"**Q**: How do I edit lesson details of a student? \u003cbr\u003e","lastModifiedDate":"2021-11-11"},{"lineNumber":760,"author":{"gitId":"tanhuakun"},"content":"**A**: There is currently no functionality for that, the workaround will be to [delete the lesson](#deleting-a-lesson-from-a-student-student--dl)","lastModifiedDate":"2021-11-11"},{"lineNumber":761,"author":{"gitId":"tanhuakun"},"content":"first before [adding it again](#adding-a-lesson-to-a-student-student--al) with the new details.","lastModifiedDate":"2021-11-11"},{"lineNumber":762,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-11-11"},{"lineNumber":763,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":764,"author":{"gitId":"-"},"content":"--------------------------------------------------------------------------------------------------------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":765,"author":{"gitId":"jeremy-7007"},"content":"\u003cdiv style\u003d\"page-break-after: always;\"\u003e\u003c/div\u003e","lastModifiedDate":"2021-11-08"},{"lineNumber":766,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":767,"author":{"gitId":"-"},"content":"## Command summary","lastModifiedDate":"2020-05-23"},{"lineNumber":768,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":769,"author":{"gitId":"-"},"content":"Action | Format, Examples","lastModifiedDate":"2020-05-23"},{"lineNumber":770,"author":{"gitId":"-"},"content":"--------|------------------","lastModifiedDate":"2020-05-23"},{"lineNumber":771,"author":{"gitId":"kvihashini"},"content":"**Add a student** | `student -a n/NAME p/PHONE_NUMBER e/EMAIL a/ADDRESS [t/TAG]‚Ä¶‚Äã` \u003cbr\u003e e.g., `student -a n/John p/12345678 e/john@mail.com a/42 Wallaby Way, Sydney`","lastModifiedDate":"2021-11-06"},{"lineNumber":772,"author":{"gitId":"kvihashini"},"content":"**Edit a student** | `student -e STUDENT_INDEX [n/NAME] [p/PHONE_NUMBER] [e/EMAIL] [a/ADDRESS] [t/TAG]‚Ä¶‚Äã` \u003cbr\u003e e.g., `student -e 3 c/88888888 e/johnny@mail.com`","lastModifiedDate":"2021-11-11"},{"lineNumber":773,"author":{"gitId":"kvihashini"},"content":"**View a student** | `student -v STUDENT_INDEX` \u003cbr\u003e e.g., `student -v 3`","lastModifiedDate":"2021-11-11"},{"lineNumber":774,"author":{"gitId":"kvihashini"},"content":"**Delete a student** | `student -d STUDENT_INDEX` \u003cbr\u003e e.g., `student -d 3`","lastModifiedDate":"2021-11-11"},{"lineNumber":775,"author":{"gitId":"kvihashini"},"content":"**Find a student** | `student -f KEYWORD‚Ä¶‚Äã` \u003cbr\u003e e.g., `student -f John`","lastModifiedDate":"2021-11-06"},{"lineNumber":776,"author":{"gitId":"eltonyeh"},"content":"**List all students** | `list`","lastModifiedDate":"2021-09-28"},{"lineNumber":777,"author":{"gitId":"kvihashini"},"content":"**Add a lesson to a student** | `student -al STUDENT_INDEX s/SUBJECT st/START_TIME et/END_TIME d/DAY` \u003cbr\u003e e.g. `student -al 1 s/Biology st/08:00 et/09:00 d/Mon`","lastModifiedDate":"2021-11-11"},{"lineNumber":778,"author":{"gitId":"kvihashini"},"content":"**Delete a lesson from a student** | `student -dl STUDENT_INDEX LESSON_INDEX` \u003cbr\u003e e.g. `student -dl 1 1`","lastModifiedDate":"2021-11-11"},{"lineNumber":779,"author":{"gitId":"kvihashini"},"content":"**Add an exam to a student** | `student -ae STUDENT_INDEX s/SUBJECT d/DATE_TIME` \u003cbr\u003e e.g. `student -ae 1 s/Math d/2021-12-20 14:00`","lastModifiedDate":"2021-11-11"},{"lineNumber":780,"author":{"gitId":"kvihashini"},"content":"**Delete an exam from a student** | `student -de STUDENT_INDEX EXAM_INDEX` \u003cbr\u003e e.g. `student -de 1 1`","lastModifiedDate":"2021-11-11"},{"lineNumber":781,"author":{"gitId":"kvihashini"},"content":"**Group students** | `group -a STUDENT_INDEX‚Ä¶‚Äã n/GROUP_NAME` \u003cbr\u003e e.g., `group -a 1 3 5 n/Team2`","lastModifiedDate":"2021-11-11"},{"lineNumber":782,"author":{"gitId":"kvihashini"},"content":"**View a group** | `group -v GROUP_INDEX` \u003cbr\u003e e.g., `group -v 5`","lastModifiedDate":"2021-11-11"},{"lineNumber":783,"author":{"gitId":"kvihashini"},"content":"**Delete a group** | `group -d GROUP_INDEX` \u003cbr\u003e e.g., `group -d 2`","lastModifiedDate":"2021-11-11"},{"lineNumber":784,"author":{"gitId":"kvihashini"},"content":"**Add a lesson to a group** | `group -al GROUP_INDEX s/SUBJECT st/START_TIME et/END_TIME d/DAY` \u003cbr\u003e e.g. `group -al 1 s/Chinese st/16:00 et/18:00 d/Thu`","lastModifiedDate":"2021-11-11"},{"lineNumber":785,"author":{"gitId":"kvihashini"},"content":"**Delete a lesson from a group** | `group -dl GROUP_INDEX LESSON_INDEX` \u003cbr\u003e e.g. `group -dl 1 1`","lastModifiedDate":"2021-11-06"},{"lineNumber":786,"author":{"gitId":"kvihashini"},"content":"**Add a task** | `task -a n/NAME d/DEADLINE` \u003cbr\u003e e.g., `task -a n/CS2100 Lab 1 d/2021-10-10`","lastModifiedDate":"2021-11-06"},{"lineNumber":787,"author":{"gitId":"kvihashini"},"content":"**Edit a task** | `task -e TASK_INDEX [n/NAME] [d/DEADLINE]` \u003cbr\u003e e.g., `task -e 4 d/2021-12-31`","lastModifiedDate":"2021-11-11"},{"lineNumber":788,"author":{"gitId":"kvihashini"},"content":"**Delete a task** | `task -d TASK_INDEX` \u003cbr\u003e e.g., `task -d 1`","lastModifiedDate":"2021-11-11"},{"lineNumber":789,"author":{"gitId":"kvihashini"},"content":"**Find a task** | `task -f KEYWORD‚Ä¶‚Äã` \u003cbr\u003e e.g., `task -f Report`","lastModifiedDate":"2021-11-06"},{"lineNumber":790,"author":{"gitId":"kvihashini"},"content":"**Assign a task to a student** | `task -as STUDENT_INDEX TASK_INDEX` \u003cbr\u003e e.g., `task -as 2 4`","lastModifiedDate":"2021-11-11"},{"lineNumber":791,"author":{"gitId":"kvihashini"},"content":"**Assign a task to a group** | `task -ag GROUP_INDEX TASK_INDEX` \u003cbr\u003e e.g., `task -ag 2 4`","lastModifiedDate":"2021-11-11"},{"lineNumber":792,"author":{"gitId":"kvihashini"},"content":"**Unassign a task from a student** | `task -unas STUDENT_INDEX TASK_INDEX` \u003cbr\u003e e.g., `task -unas 2 4`","lastModifiedDate":"2021-11-11"},{"lineNumber":793,"author":{"gitId":"kvihashini"},"content":"**Unassign a task from a group** | `task -unag GROUP_INDEX TASK_INDEX` \u003cbr\u003e e.g., `task -unag 2 4`","lastModifiedDate":"2021-11-11"},{"lineNumber":794,"author":{"gitId":"kvihashini"},"content":"**Mark task as done by student** | `task -do STUDENT_INDEX TASK_INDEX` \u003cbr\u003e e.g., `task -do 2 4`","lastModifiedDate":"2021-11-11"},{"lineNumber":795,"author":{"gitId":"kvihashini"},"content":"**Mark task as done by group (coming soon)** | `task -dog GROUP_INDEX TASK_INDEX` \u003cbr\u003e e.g., `task -dog 2 4`","lastModifiedDate":"2021-11-11"},{"lineNumber":796,"author":{"gitId":"kvihashini"},"content":"**Mark task as not done by student** | `task -undo STUDENT_INDEX TASK_INDEX` \u003cbr\u003e e.g., `task -undo 2 4`","lastModifiedDate":"2021-11-11"},{"lineNumber":797,"author":{"gitId":"kvihashini"},"content":"**Mark task as not done by group (coming soon)** | `task -undo GROUP_INDEX TASK_INDEX` \u003cbr\u003e e.g., `task -undog 2 4`","lastModifiedDate":"2021-11-11"},{"lineNumber":798,"author":{"gitId":"tanhuakun"},"content":"**Schedule** | `schedule`","lastModifiedDate":"2021-11-06"},{"lineNumber":799,"author":{"gitId":"-"},"content":"**Help** | `help`","lastModifiedDate":"2021-11-06"},{"lineNumber":800,"author":{"gitId":"eltonyeh"},"content":"**Clear all entries** | `clear`","lastModifiedDate":"2021-09-28"},{"lineNumber":801,"author":{"gitId":"eltonyeh"},"content":"**Exit** | `exit`","lastModifiedDate":"2021-09-28"}],"authorContributionMap":{"Neha-5678":115,"jeremy-7007":37,"kvihashini":289,"tanhuakun":179,"eltonyeh":51,"-":130}},{"path":"docs/_sass/minima/_base.scss","fileType":"other","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"html {","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"  font-size: $base-font-size;","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * Reset some basic elements","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":8,"author":{"gitId":"-"},"content":"body, h1, h2, h3, h4, h5, h6,","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"p, blockquote, pre, hr,","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"dl, dd, ol, ul, figure {","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"  margin: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"  padding: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * Basic styling","lastModifiedDate":"2020-05-23"},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":21,"author":{"gitId":"-"},"content":"body {","lastModifiedDate":"2020-05-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"  font: $base-font-weight #{$base-font-size}/#{$base-line-height} $base-font-family;","lastModifiedDate":"2020-05-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"  color: $text-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"  background-color: $background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":25,"author":{"gitId":"-"},"content":"  -webkit-text-size-adjust: 100%;","lastModifiedDate":"2020-05-23"},{"lineNumber":26,"author":{"gitId":"-"},"content":"  -webkit-font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     -moz-font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"       -o-font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":29,"author":{"gitId":"-"},"content":"          font-feature-settings: \"kern\" 1;","lastModifiedDate":"2020-05-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"  font-kerning: normal;","lastModifiedDate":"2020-05-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"  display: flex;","lastModifiedDate":"2020-05-23"},{"lineNumber":32,"author":{"gitId":"-"},"content":"  min-height: 100vh;","lastModifiedDate":"2020-05-23"},{"lineNumber":33,"author":{"gitId":"-"},"content":"  flex-direction: column;","lastModifiedDate":"2020-05-23"},{"lineNumber":34,"author":{"gitId":"-"},"content":"  overflow-wrap: break-word;","lastModifiedDate":"2020-05-23"},{"lineNumber":35,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":" * Set `margin-bottom` to maintain vertical rhythm","lastModifiedDate":"2020-05-23"},{"lineNumber":41,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":42,"author":{"gitId":"-"},"content":"h1, h2, h3, h4, h5, h6,","lastModifiedDate":"2020-05-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"p, blockquote, pre,","lastModifiedDate":"2020-05-23"},{"lineNumber":44,"author":{"gitId":"-"},"content":"ul, ol, dl, figure,","lastModifiedDate":"2020-05-23"},{"lineNumber":45,"author":{"gitId":"-"},"content":"%vertical-rhythm {","lastModifiedDate":"2020-05-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"  margin-bottom: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":49,"author":{"gitId":"-"},"content":"hr {","lastModifiedDate":"2020-05-23"},{"lineNumber":50,"author":{"gitId":"-"},"content":"  margin-top: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"  margin-bottom: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":54,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":" * `main` element","lastModifiedDate":"2020-05-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":57,"author":{"gitId":"-"},"content":"main {","lastModifiedDate":"2020-05-23"},{"lineNumber":58,"author":{"gitId":"-"},"content":"  display: block; /* Default value of `display` of `main` element is \u0027inline\u0027 in IE 11. */","lastModifiedDate":"2020-05-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":64,"author":{"gitId":"-"},"content":" * Images","lastModifiedDate":"2020-05-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"img {","lastModifiedDate":"2020-05-23"},{"lineNumber":67,"author":{"gitId":"-"},"content":"  max-width: 100%;","lastModifiedDate":"2020-05-23"},{"lineNumber":68,"author":{"gitId":"-"},"content":"  vertical-align: middle;","lastModifiedDate":"2020-05-23"},{"lineNumber":69,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":73,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":74,"author":{"gitId":"-"},"content":" * Figures","lastModifiedDate":"2020-05-23"},{"lineNumber":75,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"figure \u003e img {","lastModifiedDate":"2020-05-23"},{"lineNumber":77,"author":{"gitId":"-"},"content":"  display: block;","lastModifiedDate":"2020-05-23"},{"lineNumber":78,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"figcaption {","lastModifiedDate":"2020-05-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"  font-size: $small-font-size;","lastModifiedDate":"2020-05-23"},{"lineNumber":82,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":86,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":87,"author":{"gitId":"-"},"content":" * Lists","lastModifiedDate":"2020-05-23"},{"lineNumber":88,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":89,"author":{"gitId":"-"},"content":"ul, ol {","lastModifiedDate":"2020-05-23"},{"lineNumber":90,"author":{"gitId":"-"},"content":"  margin-left: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":91,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"li {","lastModifiedDate":"2020-05-23"},{"lineNumber":94,"author":{"gitId":"-"},"content":"  \u003e ul,","lastModifiedDate":"2020-05-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"  \u003e ol {","lastModifiedDate":"2020-05-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    margin-bottom: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":98,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":" * Headings","lastModifiedDate":"2020-05-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"h1, h2, h3, h4, h5, h6 {","lastModifiedDate":"2020-05-23"},{"lineNumber":106,"author":{"gitId":"-"},"content":"  font-weight: $base-font-weight;","lastModifiedDate":"2020-05-23"},{"lineNumber":107,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":112,"author":{"gitId":"-"},"content":" * Links","lastModifiedDate":"2020-05-23"},{"lineNumber":113,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":114,"author":{"gitId":"-"},"content":"a {","lastModifiedDate":"2020-05-23"},{"lineNumber":115,"author":{"gitId":"-"},"content":"  color: $link-base-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"  text-decoration: none;","lastModifiedDate":"2020-05-23"},{"lineNumber":117,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":118,"author":{"gitId":"-"},"content":"  \u0026:visited {","lastModifiedDate":"2020-05-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    color: $link-visited-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":120,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":122,"author":{"gitId":"-"},"content":"  \u0026:hover {","lastModifiedDate":"2020-05-23"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    color: $text-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    text-decoration: underline;","lastModifiedDate":"2020-05-23"},{"lineNumber":125,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":127,"author":{"gitId":"-"},"content":"  .social-media-list \u0026:hover {","lastModifiedDate":"2020-05-23"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    text-decoration: none;","lastModifiedDate":"2020-05-23"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    .username {","lastModifiedDate":"2020-05-23"},{"lineNumber":131,"author":{"gitId":"-"},"content":"      text-decoration: underline;","lastModifiedDate":"2020-05-23"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":133,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":" * Blockquotes","lastModifiedDate":"2020-05-23"},{"lineNumber":139,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":140,"author":{"gitId":"-"},"content":"blockquote {","lastModifiedDate":"2020-05-23"},{"lineNumber":141,"author":{"gitId":"-"},"content":"  color: $brand-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":142,"author":{"gitId":"-"},"content":"  border-left: 4px solid $brand-color-light;","lastModifiedDate":"2020-05-23"},{"lineNumber":143,"author":{"gitId":"-"},"content":"  padding-left: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":144,"author":{"gitId":"-"},"content":"  @include relative-font-size(1.125);","lastModifiedDate":"2020-05-23"},{"lineNumber":145,"author":{"gitId":"-"},"content":"  font-style: italic;","lastModifiedDate":"2020-05-23"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":147,"author":{"gitId":"-"},"content":"  \u003e :last-child {","lastModifiedDate":"2020-05-23"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    margin-bottom: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":149,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":150,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":151,"author":{"gitId":"-"},"content":"  i, em {","lastModifiedDate":"2020-05-23"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    font-style: normal;","lastModifiedDate":"2020-05-23"},{"lineNumber":153,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":154,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":158,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":159,"author":{"gitId":"-"},"content":" * Code formatting","lastModifiedDate":"2020-05-23"},{"lineNumber":160,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":161,"author":{"gitId":"-"},"content":"pre,","lastModifiedDate":"2020-05-23"},{"lineNumber":162,"author":{"gitId":"-"},"content":"code {","lastModifiedDate":"2020-05-23"},{"lineNumber":163,"author":{"gitId":"-"},"content":"  font-family: $code-font-family;","lastModifiedDate":"2020-05-23"},{"lineNumber":164,"author":{"gitId":"-"},"content":"  font-size: 0.9375em;","lastModifiedDate":"2020-05-23"},{"lineNumber":165,"author":{"gitId":"-"},"content":"  border: 1px solid $brand-color-light;","lastModifiedDate":"2020-05-23"},{"lineNumber":166,"author":{"gitId":"-"},"content":"  border-radius: 3px;","lastModifiedDate":"2020-05-23"},{"lineNumber":167,"author":{"gitId":"-"},"content":"  background-color: $code-background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":168,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":170,"author":{"gitId":"-"},"content":"code {","lastModifiedDate":"2020-05-23"},{"lineNumber":171,"author":{"gitId":"-"},"content":"  padding: 1px 5px;","lastModifiedDate":"2020-05-23"},{"lineNumber":172,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":174,"author":{"gitId":"-"},"content":"pre {","lastModifiedDate":"2020-05-23"},{"lineNumber":175,"author":{"gitId":"-"},"content":"  padding: 8px 12px;","lastModifiedDate":"2020-05-23"},{"lineNumber":176,"author":{"gitId":"-"},"content":"  overflow-x: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":178,"author":{"gitId":"-"},"content":"  \u003e code {","lastModifiedDate":"2020-05-23"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    border: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    padding-right: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":181,"author":{"gitId":"-"},"content":"    padding-left: 0;","lastModifiedDate":"2020-05-23"},{"lineNumber":182,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":183,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":184,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":185,"author":{"gitId":"-"},"content":".highlight {","lastModifiedDate":"2020-05-23"},{"lineNumber":186,"author":{"gitId":"-"},"content":"  border-radius: 3px;","lastModifiedDate":"2020-05-23"},{"lineNumber":187,"author":{"gitId":"-"},"content":"  background: $code-background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":188,"author":{"gitId":"-"},"content":"  @extend %vertical-rhythm;","lastModifiedDate":"2020-05-23"},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":190,"author":{"gitId":"-"},"content":"  .highlighter-rouge \u0026 {","lastModifiedDate":"2020-05-23"},{"lineNumber":191,"author":{"gitId":"-"},"content":"    background: $code-background-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":192,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":193,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":194,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":197,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":198,"author":{"gitId":"-"},"content":" * Wrapper","lastModifiedDate":"2020-05-23"},{"lineNumber":199,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":200,"author":{"gitId":"-"},"content":".wrapper {","lastModifiedDate":"2020-05-23"},{"lineNumber":201,"author":{"gitId":"-"},"content":"  max-width: calc(#{$content-width} - (#{$spacing-unit}));","lastModifiedDate":"2020-05-23"},{"lineNumber":202,"author":{"gitId":"-"},"content":"  margin-right: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":203,"author":{"gitId":"-"},"content":"  margin-left: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":204,"author":{"gitId":"-"},"content":"  padding-right: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":205,"author":{"gitId":"-"},"content":"  padding-left: $spacing-unit / 2;","lastModifiedDate":"2020-05-23"},{"lineNumber":206,"author":{"gitId":"-"},"content":"  @extend %clearfix;","lastModifiedDate":"2020-05-23"},{"lineNumber":207,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":208,"author":{"gitId":"-"},"content":"  @media screen and (min-width: $on-large) {","lastModifiedDate":"2020-05-23"},{"lineNumber":209,"author":{"gitId":"-"},"content":"    max-width: calc(#{$content-width} - (#{$spacing-unit} * 2));","lastModifiedDate":"2020-05-23"},{"lineNumber":210,"author":{"gitId":"-"},"content":"    padding-right: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":211,"author":{"gitId":"-"},"content":"    padding-left: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":212,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":213,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":214,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":215,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":217,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":218,"author":{"gitId":"-"},"content":" * Clearfix","lastModifiedDate":"2020-05-23"},{"lineNumber":219,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":220,"author":{"gitId":"-"},"content":"%clearfix:after {","lastModifiedDate":"2020-05-23"},{"lineNumber":221,"author":{"gitId":"-"},"content":"  content: \"\";","lastModifiedDate":"2020-05-23"},{"lineNumber":222,"author":{"gitId":"-"},"content":"  display: table;","lastModifiedDate":"2020-05-23"},{"lineNumber":223,"author":{"gitId":"-"},"content":"  clear: both;","lastModifiedDate":"2020-05-23"},{"lineNumber":224,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":225,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":226,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":227,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":228,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":229,"author":{"gitId":"-"},"content":" * Icons","lastModifiedDate":"2020-05-23"},{"lineNumber":230,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":231,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":232,"author":{"gitId":"-"},"content":".orange {","lastModifiedDate":"2020-05-23"},{"lineNumber":233,"author":{"gitId":"-"},"content":"  color: #f66a0a;","lastModifiedDate":"2020-05-23"},{"lineNumber":234,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":235,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":236,"author":{"gitId":"-"},"content":".grey {","lastModifiedDate":"2020-05-23"},{"lineNumber":237,"author":{"gitId":"-"},"content":"  color: #828282;","lastModifiedDate":"2020-05-23"},{"lineNumber":238,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":239,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":240,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2020-05-23"},{"lineNumber":241,"author":{"gitId":"-"},"content":" * Tables","lastModifiedDate":"2020-05-23"},{"lineNumber":242,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2020-05-23"},{"lineNumber":243,"author":{"gitId":"-"},"content":"table {","lastModifiedDate":"2020-05-23"},{"lineNumber":244,"author":{"gitId":"-"},"content":"  margin-bottom: $spacing-unit;","lastModifiedDate":"2020-05-23"},{"lineNumber":245,"author":{"gitId":"-"},"content":"  width: 100%;","lastModifiedDate":"2020-05-23"},{"lineNumber":246,"author":{"gitId":"-"},"content":"  text-align: $table-text-align;","lastModifiedDate":"2020-05-23"},{"lineNumber":247,"author":{"gitId":"-"},"content":"  color: $table-text-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":248,"author":{"gitId":"-"},"content":"  border-collapse: collapse;","lastModifiedDate":"2020-05-23"},{"lineNumber":249,"author":{"gitId":"-"},"content":"  border: 1px solid $table-border-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":250,"author":{"gitId":"-"},"content":"  tr {","lastModifiedDate":"2020-05-23"},{"lineNumber":251,"author":{"gitId":"-"},"content":"    \u0026:nth-child(even) {","lastModifiedDate":"2020-05-23"},{"lineNumber":252,"author":{"gitId":"-"},"content":"      background-color: $table-zebra-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":253,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2020-05-23"},{"lineNumber":254,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":255,"author":{"gitId":"-"},"content":"  th, td {","lastModifiedDate":"2020-05-23"},{"lineNumber":256,"author":{"gitId":"-"},"content":"    padding: ($spacing-unit / 3) ($spacing-unit / 2);","lastModifiedDate":"2020-05-23"},{"lineNumber":257,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":258,"author":{"gitId":"-"},"content":"  th {","lastModifiedDate":"2020-05-23"},{"lineNumber":259,"author":{"gitId":"-"},"content":"    background-color: $table-header-bg-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":260,"author":{"gitId":"-"},"content":"    border: 1px solid $table-header-border;","lastModifiedDate":"2020-05-23"},{"lineNumber":261,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":262,"author":{"gitId":"-"},"content":"  td {","lastModifiedDate":"2020-05-23"},{"lineNumber":263,"author":{"gitId":"-"},"content":"    border: 1px solid $table-border-color;","lastModifiedDate":"2020-05-23"},{"lineNumber":264,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":265,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":266,"author":{"gitId":"-"},"content":"  @include media-query($on-laptop) {","lastModifiedDate":"2020-05-23"},{"lineNumber":267,"author":{"gitId":"-"},"content":"    display: block;","lastModifiedDate":"2020-05-23"},{"lineNumber":268,"author":{"gitId":"-"},"content":"    overflow-x: auto;","lastModifiedDate":"2020-05-23"},{"lineNumber":269,"author":{"gitId":"-"},"content":"    -webkit-overflow-scrolling: touch;","lastModifiedDate":"2020-05-23"},{"lineNumber":270,"author":{"gitId":"-"},"content":"            -ms-overflow-style: -ms-autohiding-scrollbar;","lastModifiedDate":"2020-05-23"},{"lineNumber":271,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2020-05-23"},{"lineNumber":272,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2020-05-23"},{"lineNumber":273,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-01-11"},{"lineNumber":274,"author":{"gitId":"-"},"content":"@media print {","lastModifiedDate":"2021-01-12"},{"lineNumber":275,"author":{"gitId":"-"},"content":"  /**","lastModifiedDate":"2021-01-11"},{"lineNumber":276,"author":{"gitId":"-"},"content":"  * Prevents page break from cutting through content when printing","lastModifiedDate":"2021-01-12"},{"lineNumber":277,"author":{"gitId":"-"},"content":"  */","lastModifiedDate":"2021-01-11"},{"lineNumber":278,"author":{"gitId":"-"},"content":"  body {","lastModifiedDate":"2021-01-11"},{"lineNumber":279,"author":{"gitId":"-"},"content":"    display: block;","lastModifiedDate":"2021-01-11"},{"lineNumber":280,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-11"},{"lineNumber":281,"author":{"gitId":"-"},"content":"  /**","lastModifiedDate":"2021-01-12"},{"lineNumber":282,"author":{"gitId":"-"},"content":"  * Replaces the top navigation menu with the project name when printing","lastModifiedDate":"2021-01-12"},{"lineNumber":283,"author":{"gitId":"-"},"content":"  */","lastModifiedDate":"2021-01-12"},{"lineNumber":284,"author":{"gitId":"-"},"content":"  .site-header .wrapper {","lastModifiedDate":"2021-01-12"},{"lineNumber":285,"author":{"gitId":"-"},"content":"    display: none;","lastModifiedDate":"2021-01-12"},{"lineNumber":286,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-12"},{"lineNumber":287,"author":{"gitId":"-"},"content":"  .site-header {","lastModifiedDate":"2021-01-12"},{"lineNumber":288,"author":{"gitId":"-"},"content":"    text-align: center;","lastModifiedDate":"2021-01-12"},{"lineNumber":289,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-12"},{"lineNumber":290,"author":{"gitId":"-"},"content":"  .site-header:before {","lastModifiedDate":"2021-01-12"},{"lineNumber":291,"author":{"gitId":"tanhuakun"},"content":"    content: \"Tutor Master\";","lastModifiedDate":"2021-09-27"},{"lineNumber":292,"author":{"gitId":"-"},"content":"    font-size: 32px;","lastModifiedDate":"2021-01-12"},{"lineNumber":293,"author":{"gitId":"-"},"content":"  }","lastModifiedDate":"2021-01-11"},{"lineNumber":294,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-01-12"},{"lineNumber":295,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-01-12"}],"authorContributionMap":{"tanhuakun":1,"-":294}},{"path":"docs/diagrams/ArchitectureSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"Actor User as user USER_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"Participant \":UI\" as ui UI_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"Participant \":Logic\" as logic LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Participant \":Model\" as model MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"Participant \":Storage\" as storage STORAGE_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":10,"author":{"gitId":"Neha-5678"},"content":"user -[USER_COLOR]\u003e ui : \"student -d 1\"","lastModifiedDate":"2021-11-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"activate ui UI_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"Neha-5678"},"content":"ui -[UI_COLOR]\u003e logic : execute(\"student -d 1\")","lastModifiedDate":"2021-11-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"activate logic LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"logic -[LOGIC_COLOR]\u003e model : deletePerson(p)","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"activate model MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"model -[MODEL_COLOR]-\u003e logic","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"deactivate model","lastModifiedDate":"2019-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"logic -[LOGIC_COLOR]\u003e storage : saveAddressBook(addressBook)","lastModifiedDate":"2019-07-03"},{"lineNumber":23,"author":{"gitId":"-"},"content":"activate storage STORAGE_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":25,"author":{"gitId":"-"},"content":"storage -[STORAGE_COLOR]\u003e storage : Save to file","lastModifiedDate":"2019-07-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"activate storage STORAGE_COLOR_T1","lastModifiedDate":"2019-07-03"},{"lineNumber":27,"author":{"gitId":"-"},"content":"storage --[STORAGE_COLOR]\u003e storage","lastModifiedDate":"2020-05-23"},{"lineNumber":28,"author":{"gitId":"-"},"content":"deactivate storage","lastModifiedDate":"2019-07-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"storage --[STORAGE_COLOR]\u003e logic","lastModifiedDate":"2019-07-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"deactivate storage","lastModifiedDate":"2019-07-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"logic --[LOGIC_COLOR]\u003e ui","lastModifiedDate":"2019-07-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"deactivate logic","lastModifiedDate":"2019-07-03"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":36,"author":{"gitId":"-"},"content":"ui--[UI_COLOR]\u003e user","lastModifiedDate":"2019-07-03"},{"lineNumber":37,"author":{"gitId":"-"},"content":"deactivate ui","lastModifiedDate":"2019-07-03"},{"lineNumber":38,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"Neha-5678":2,"-":36}},{"path":"docs/diagrams/DeleteSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"participant \":AddressBookParser\" as AddressBookParser LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"participant \":DeleteCommandParser\" as DeleteCommandParser LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"participant \"d:DeleteCommand\" as DeleteCommand LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"participant \":CommandResult\" as CommandResult LOGIC_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"end box","lastModifiedDate":"2019-07-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"participant \":Model\" as Model MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"end box","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"kvihashini"},"content":"[-\u003e LogicManager : execute(\"student -d 1\")","lastModifiedDate":"2021-11-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"activate LogicManager","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":19,"author":{"gitId":"kvihashini"},"content":"LogicManager -\u003e AddressBookParser : parseCommand(\"student -d 1\")","lastModifiedDate":"2021-11-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"activate AddressBookParser","lastModifiedDate":"2019-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"create DeleteCommandParser","lastModifiedDate":"2019-07-03"},{"lineNumber":23,"author":{"gitId":"-"},"content":"AddressBookParser -\u003e DeleteCommandParser","lastModifiedDate":"2019-07-03"},{"lineNumber":24,"author":{"gitId":"-"},"content":"activate DeleteCommandParser","lastModifiedDate":"2019-07-03"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"DeleteCommandParser --\u003e AddressBookParser","lastModifiedDate":"2019-07-03"},{"lineNumber":27,"author":{"gitId":"-"},"content":"deactivate DeleteCommandParser","lastModifiedDate":"2019-07-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"AddressBookParser -\u003e DeleteCommandParser : parse(\"1\")","lastModifiedDate":"2019-07-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"activate DeleteCommandParser","lastModifiedDate":"2019-07-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"create DeleteCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"DeleteCommandParser -\u003e DeleteCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"activate DeleteCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":36,"author":{"gitId":"-"},"content":"DeleteCommand --\u003e DeleteCommandParser : d","lastModifiedDate":"2019-07-03"},{"lineNumber":37,"author":{"gitId":"-"},"content":"deactivate DeleteCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":39,"author":{"gitId":"-"},"content":"DeleteCommandParser --\u003e AddressBookParser : d","lastModifiedDate":"2019-07-03"},{"lineNumber":40,"author":{"gitId":"-"},"content":"deactivate DeleteCommandParser","lastModifiedDate":"2019-07-03"},{"lineNumber":41,"author":{"gitId":"-"},"content":"\u0027Hidden arrow to position the destroy marker below the end of the activation bar.","lastModifiedDate":"2019-07-03"},{"lineNumber":42,"author":{"gitId":"-"},"content":"DeleteCommandParser -[hidden]-\u003e AddressBookParser","lastModifiedDate":"2019-07-03"},{"lineNumber":43,"author":{"gitId":"-"},"content":"destroy DeleteCommandParser","lastModifiedDate":"2019-07-03"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":45,"author":{"gitId":"-"},"content":"AddressBookParser --\u003e LogicManager : d","lastModifiedDate":"2019-07-03"},{"lineNumber":46,"author":{"gitId":"-"},"content":"deactivate AddressBookParser","lastModifiedDate":"2019-07-03"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":48,"author":{"gitId":"-"},"content":"LogicManager -\u003e DeleteCommand : execute()","lastModifiedDate":"2019-07-03"},{"lineNumber":49,"author":{"gitId":"-"},"content":"activate DeleteCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":51,"author":{"gitId":"-"},"content":"DeleteCommand -\u003e Model : deletePerson(1)","lastModifiedDate":"2019-07-03"},{"lineNumber":52,"author":{"gitId":"-"},"content":"activate Model","lastModifiedDate":"2019-07-03"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":54,"author":{"gitId":"-"},"content":"Model --\u003e DeleteCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":55,"author":{"gitId":"-"},"content":"deactivate Model","lastModifiedDate":"2019-07-03"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":57,"author":{"gitId":"-"},"content":"create CommandResult","lastModifiedDate":"2019-07-03"},{"lineNumber":58,"author":{"gitId":"-"},"content":"DeleteCommand -\u003e CommandResult","lastModifiedDate":"2019-07-03"},{"lineNumber":59,"author":{"gitId":"-"},"content":"activate CommandResult","lastModifiedDate":"2019-07-03"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":61,"author":{"gitId":"-"},"content":"CommandResult --\u003e DeleteCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":62,"author":{"gitId":"-"},"content":"deactivate CommandResult","lastModifiedDate":"2019-07-03"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":64,"author":{"gitId":"-"},"content":"DeleteCommand --\u003e LogicManager : result","lastModifiedDate":"2019-07-03"},{"lineNumber":65,"author":{"gitId":"-"},"content":"deactivate DeleteCommand","lastModifiedDate":"2019-07-03"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":67,"author":{"gitId":"-"},"content":"[\u003c--LogicManager","lastModifiedDate":"2019-07-03"},{"lineNumber":68,"author":{"gitId":"-"},"content":"deactivate LogicManager","lastModifiedDate":"2019-07-03"},{"lineNumber":69,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"kvihashini":2,"-":67}},{"path":"docs/diagrams/EditTaskSequenceDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"Neha-5678"},"content":"@startuml","lastModifiedDate":"2021-10-21"},{"lineNumber":2,"author":{"gitId":"Neha-5678"},"content":"!include style.puml","lastModifiedDate":"2021-10-21"},{"lineNumber":3,"author":{"gitId":"Neha-5678"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":4,"author":{"gitId":"Neha-5678"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2021-10-21"},{"lineNumber":5,"author":{"gitId":"Neha-5678"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2021-10-21"},{"lineNumber":6,"author":{"gitId":"Neha-5678"},"content":"participant \":TaskCommandsParser\" as TaskCommandsParser LOGIC_COLOR","lastModifiedDate":"2021-10-21"},{"lineNumber":7,"author":{"gitId":"Neha-5678"},"content":"participant \":EditTaskCommand\" as EditTaskCommand LOGIC_COLOR","lastModifiedDate":"2021-10-21"},{"lineNumber":8,"author":{"gitId":"Neha-5678"},"content":"end box","lastModifiedDate":"2021-10-21"},{"lineNumber":9,"author":{"gitId":"Neha-5678"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":10,"author":{"gitId":"Neha-5678"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2021-10-21"},{"lineNumber":11,"author":{"gitId":"Neha-5678"},"content":"participant \":ModelManager\" as Model MODEL_COLOR","lastModifiedDate":"2021-11-07"},{"lineNumber":12,"author":{"gitId":"Neha-5678"},"content":"end box","lastModifiedDate":"2021-10-21"},{"lineNumber":13,"author":{"gitId":"Neha-5678"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":14,"author":{"gitId":"Neha-5678"},"content":"[-\u003e LogicManager : execute(\"task -e 3 n/Report 4\")","lastModifiedDate":"2021-10-21"},{"lineNumber":15,"author":{"gitId":"Neha-5678"},"content":"activate LogicManager","lastModifiedDate":"2021-10-21"},{"lineNumber":16,"author":{"gitId":"Neha-5678"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":17,"author":{"gitId":"Neha-5678"},"content":"LogicManager -\u003e TaskCommandsParser : parseCommand(\"task -e 3 n/Report 4\")","lastModifiedDate":"2021-11-07"},{"lineNumber":18,"author":{"gitId":"Neha-5678"},"content":"activate TaskCommandsParser","lastModifiedDate":"2021-10-21"},{"lineNumber":19,"author":{"gitId":"Neha-5678"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":20,"author":{"gitId":"Neha-5678"},"content":"create EditTaskCommand","lastModifiedDate":"2021-10-21"},{"lineNumber":21,"author":{"gitId":"Neha-5678"},"content":"TaskCommandsParser -\u003e EditTaskCommand : parseCommand(\"3 n/Report 4\")","lastModifiedDate":"2021-11-07"},{"lineNumber":22,"author":{"gitId":"Neha-5678"},"content":"activate EditTaskCommand","lastModifiedDate":"2021-10-21"},{"lineNumber":23,"author":{"gitId":"Neha-5678"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":24,"author":{"gitId":"Neha-5678"},"content":"EditTaskCommand --\u003e TaskCommandsParser","lastModifiedDate":"2021-11-07"},{"lineNumber":25,"author":{"gitId":"Neha-5678"},"content":"deactivate EditTaskCommand","lastModifiedDate":"2021-10-21"},{"lineNumber":26,"author":{"gitId":"Neha-5678"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":27,"author":{"gitId":"Neha-5678"},"content":"TaskCommandsParser --\u003e LogicManager : command","lastModifiedDate":"2021-11-07"},{"lineNumber":28,"author":{"gitId":"Neha-5678"},"content":"deactivate TaskCommandsParser","lastModifiedDate":"2021-10-21"},{"lineNumber":29,"author":{"gitId":"Neha-5678"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":30,"author":{"gitId":"Neha-5678"},"content":"LogicManager -\u003e EditTaskCommand : execute()","lastModifiedDate":"2021-10-21"},{"lineNumber":31,"author":{"gitId":"Neha-5678"},"content":"activate EditTaskCommand","lastModifiedDate":"2021-10-21"},{"lineNumber":32,"author":{"gitId":"Neha-5678"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":33,"author":{"gitId":"Neha-5678"},"content":"EditTaskCommand -\u003e Model : setTask(taskToEdit, editedTask)","lastModifiedDate":"2021-10-21"},{"lineNumber":34,"author":{"gitId":"Neha-5678"},"content":"activate Model","lastModifiedDate":"2021-10-21"},{"lineNumber":35,"author":{"gitId":"Neha-5678"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":36,"author":{"gitId":"Neha-5678"},"content":"Model --\u003e EditTaskCommand","lastModifiedDate":"2021-10-21"},{"lineNumber":37,"author":{"gitId":"Neha-5678"},"content":"deactivate Model","lastModifiedDate":"2021-10-21"},{"lineNumber":38,"author":{"gitId":"Neha-5678"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":39,"author":{"gitId":"Neha-5678"},"content":"EditTaskCommand -\u003e Model : updateFilteredTaskList(true)","lastModifiedDate":"2021-11-07"},{"lineNumber":40,"author":{"gitId":"Neha-5678"},"content":"activate Model","lastModifiedDate":"2021-11-07"},{"lineNumber":41,"author":{"gitId":"Neha-5678"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":42,"author":{"gitId":"Neha-5678"},"content":"Model --\u003e EditTaskCommand","lastModifiedDate":"2021-11-07"},{"lineNumber":43,"author":{"gitId":"Neha-5678"},"content":"deactivate Model","lastModifiedDate":"2021-11-07"},{"lineNumber":44,"author":{"gitId":"Neha-5678"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":45,"author":{"gitId":"Neha-5678"},"content":"EditTaskCommand --\u003e LogicManager : CommandResult","lastModifiedDate":"2021-11-07"},{"lineNumber":46,"author":{"gitId":"Neha-5678"},"content":"deactivate EditTaskCommand","lastModifiedDate":"2021-10-21"},{"lineNumber":47,"author":{"gitId":"Neha-5678"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":48,"author":{"gitId":"Neha-5678"},"content":"[\u003c--LogicManager","lastModifiedDate":"2021-10-21"},{"lineNumber":49,"author":{"gitId":"Neha-5678"},"content":"deactivate LogicManager","lastModifiedDate":"2021-10-21"},{"lineNumber":50,"author":{"gitId":"Neha-5678"},"content":"@enduml","lastModifiedDate":"2021-10-21"}],"authorContributionMap":{"Neha-5678":50}},{"path":"docs/diagrams/LessonDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"tanhuakun"},"content":"@startuml","lastModifiedDate":"2021-10-21"},{"lineNumber":2,"author":{"gitId":"tanhuakun"},"content":"!include style.puml","lastModifiedDate":"2021-10-21"},{"lineNumber":3,"author":{"gitId":"tanhuakun"},"content":"show members","lastModifiedDate":"2021-10-21"},{"lineNumber":4,"author":{"gitId":"tanhuakun"},"content":"hide empty members","lastModifiedDate":"2021-10-21"},{"lineNumber":5,"author":{"gitId":"tanhuakun"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2021-10-21"},{"lineNumber":6,"author":{"gitId":"tanhuakun"},"content":"skinparam arrowColor LOGIC_COLOR_T4","lastModifiedDate":"2021-10-21"},{"lineNumber":7,"author":{"gitId":"tanhuakun"},"content":"skinparam classBackgroundColor LOGIC_COLOR","lastModifiedDate":"2021-10-21"},{"lineNumber":8,"author":{"gitId":"tanhuakun"},"content":"skinparam classAttributeFontColor classFontColor","lastModifiedDate":"2021-10-21"},{"lineNumber":9,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":10,"author":{"gitId":"tanhuakun"},"content":"package \"Lesson classes\"{","lastModifiedDate":"2021-10-21"},{"lineNumber":11,"author":{"gitId":"tanhuakun"},"content":"Class NoOverlapLessonList","lastModifiedDate":"2021-10-21"},{"lineNumber":12,"author":{"gitId":"tanhuakun"},"content":"class Lesson {","lastModifiedDate":"2021-10-21"},{"lineNumber":13,"author":{"gitId":"tanhuakun"},"content":"    DayOfWeek dayOfWeek","lastModifiedDate":"2021-10-21"},{"lineNumber":14,"author":{"gitId":"tanhuakun"},"content":"}","lastModifiedDate":"2021-10-21"},{"lineNumber":15,"author":{"gitId":"tanhuakun"},"content":"Class Subject","lastModifiedDate":"2021-10-21"},{"lineNumber":16,"author":{"gitId":"tanhuakun"},"content":"Class Timeslot","lastModifiedDate":"2021-10-21"},{"lineNumber":17,"author":{"gitId":"tanhuakun"},"content":"Interface Attendee \u003c\u003cInterface\u003e\u003e","lastModifiedDate":"2021-10-21"},{"lineNumber":18,"author":{"gitId":"tanhuakun"},"content":"Interface LessonAssignable \u003c\u003cInterface\u003e\u003e","lastModifiedDate":"2021-10-21"},{"lineNumber":19,"author":{"gitId":"tanhuakun"},"content":"Class LessonWithAttendees","lastModifiedDate":"2021-10-21"},{"lineNumber":20,"author":{"gitId":"tanhuakun"},"content":"}","lastModifiedDate":"2021-10-21"},{"lineNumber":21,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":22,"author":{"gitId":"tanhuakun"},"content":"Class HiddenOutside #FFFFFF","lastModifiedDate":"2021-10-21"},{"lineNumber":23,"author":{"gitId":"tanhuakun"},"content":"Class HiddenOutside2 #FFFFFF","lastModifiedDate":"2021-10-21"},{"lineNumber":24,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":25,"author":{"gitId":"tanhuakun"},"content":"NoOverlapLessonList -down-\u003e \"*\" Lesson","lastModifiedDate":"2021-10-21"},{"lineNumber":26,"author":{"gitId":"tanhuakun"},"content":"Lesson *--\u003e \"1\" Subject","lastModifiedDate":"2021-10-21"},{"lineNumber":27,"author":{"gitId":"tanhuakun"},"content":"Lesson *--\u003e \"1\" Timeslot","lastModifiedDate":"2021-10-21"},{"lineNumber":28,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":29,"author":{"gitId":"tanhuakun"},"content":"LessonWithAttendees -up-\u003e \"1\" Lesson","lastModifiedDate":"2021-10-21"},{"lineNumber":30,"author":{"gitId":"tanhuakun"},"content":"LessonWithAttendees -up-\u003e \"*\" Attendee","lastModifiedDate":"2021-10-21"},{"lineNumber":31,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-10-21"},{"lineNumber":32,"author":{"gitId":"tanhuakun"},"content":"LessonAssignable .down.\u003e Lesson","lastModifiedDate":"2021-11-04"},{"lineNumber":33,"author":{"gitId":"tanhuakun"},"content":"HiddenOutside2 ..|\u003e LessonAssignable","lastModifiedDate":"2021-11-04"},{"lineNumber":34,"author":{"gitId":"tanhuakun"},"content":"HiddenOutside ..|\u003e Attendee","lastModifiedDate":"2021-10-21"},{"lineNumber":35,"author":{"gitId":"tanhuakun"},"content":"@enduml","lastModifiedDate":"2021-10-21"}],"authorContributionMap":{"tanhuakun":35}},{"path":"docs/diagrams/ModelClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam arrowColor MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam classBackgroundColor MODEL_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"Package Model \u003c\u003cRectangle\u003e\u003e{","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"Interface ReadOnlyAddressBook \u003c\u003cInterface\u003e\u003e","lastModifiedDate":"2019-07-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"Interface ReadOnlyUserPrefs \u003c\u003cInterface\u003e\u003e","lastModifiedDate":"2021-05-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"Interface Model \u003c\u003cInterface\u003e\u003e","lastModifiedDate":"2019-07-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"Class AddressBook","lastModifiedDate":"2019-07-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"Class ReadOnlyAddressBook","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"Class Model","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"Class ModelManager","lastModifiedDate":"2019-07-03"},{"lineNumber":15,"author":{"gitId":"-"},"content":"Class UserPrefs","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"Class ReadOnlyUserPrefs","lastModifiedDate":"2019-07-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":19,"author":{"gitId":"-"},"content":"Class UniquePersonList","lastModifiedDate":"2021-07-31"},{"lineNumber":20,"author":{"gitId":"jeremy-7007"},"content":"Class UniqueTaskList","lastModifiedDate":"2021-11-08"},{"lineNumber":21,"author":{"gitId":"jeremy-7007"},"content":"Class UniqueGroupList","lastModifiedDate":"2021-11-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"Class Person","lastModifiedDate":"2019-07-03"},{"lineNumber":23,"author":{"gitId":"jeremy-7007"},"content":"Class Task","lastModifiedDate":"2021-11-08"},{"lineNumber":24,"author":{"gitId":"jeremy-7007"},"content":"Class Group","lastModifiedDate":"2021-11-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":26,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":"Class HiddenOutside #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"HiddenOutside ..\u003e Model","lastModifiedDate":"2019-07-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"AddressBook .up.|\u003e ReadOnlyAddressBook","lastModifiedDate":"2019-07-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"ModelManager .up.|\u003e Model","lastModifiedDate":"2019-07-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"Model .right.\u003e ReadOnlyUserPrefs","lastModifiedDate":"2021-07-31"},{"lineNumber":35,"author":{"gitId":"-"},"content":"Model .left.\u003e ReadOnlyAddressBook","lastModifiedDate":"2021-07-31"},{"lineNumber":36,"author":{"gitId":"-"},"content":"ModelManager -left-\u003e \"1\" AddressBook","lastModifiedDate":"2021-07-31"},{"lineNumber":37,"author":{"gitId":"-"},"content":"ModelManager -right-\u003e \"1\" UserPrefs","lastModifiedDate":"2021-07-31"},{"lineNumber":38,"author":{"gitId":"-"},"content":"UserPrefs .up.|\u003e ReadOnlyUserPrefs","lastModifiedDate":"2019-07-03"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":40,"author":{"gitId":"-"},"content":"AddressBook *--\u003e \"1\" UniquePersonList","lastModifiedDate":"2019-07-30"},{"lineNumber":41,"author":{"gitId":"jeremy-7007"},"content":"AddressBook *--\u003e \"1\" UniqueTaskList","lastModifiedDate":"2021-11-08"},{"lineNumber":42,"author":{"gitId":"jeremy-7007"},"content":"AddressBook *--\u003e \"1\" UniqueGroupList","lastModifiedDate":"2021-11-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"UniquePersonList --\u003e \"~* all\" Person","lastModifiedDate":"2021-07-31"},{"lineNumber":44,"author":{"gitId":"jeremy-7007"},"content":"UniqueTaskList --\u003e \"~* all\" Task","lastModifiedDate":"2021-11-08"},{"lineNumber":45,"author":{"gitId":"jeremy-7007"},"content":"UniqueGroupList --\u003e \"~* all\" Group","lastModifiedDate":"2021-11-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":47,"author":{"gitId":"jeremy-7007"},"content":"ModelManager ---\u003e\"~* filtered\" Person","lastModifiedDate":"2021-11-08"},{"lineNumber":48,"author":{"gitId":"jeremy-7007"},"content":"ModelManager --\u003e\"~* filtered\" Task","lastModifiedDate":"2021-11-08"},{"lineNumber":49,"author":{"gitId":"jeremy-7007"},"content":"ModelManager --\u003e\"~* filtered\" Group","lastModifiedDate":"2021-11-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"jeremy-7007":11,"-":39}},{"path":"docs/diagrams/ModelClassDiagram2.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"jeremy-7007"},"content":"@startuml","lastModifiedDate":"2021-11-08"},{"lineNumber":2,"author":{"gitId":"jeremy-7007"},"content":"!include style.puml","lastModifiedDate":"2021-11-08"},{"lineNumber":3,"author":{"gitId":"jeremy-7007"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2021-11-08"},{"lineNumber":4,"author":{"gitId":"jeremy-7007"},"content":"skinparam arrowColor MODEL_COLOR","lastModifiedDate":"2021-11-08"},{"lineNumber":5,"author":{"gitId":"jeremy-7007"},"content":"skinparam classBackgroundColor MODEL_COLOR","lastModifiedDate":"2021-11-08"},{"lineNumber":6,"author":{"gitId":"jeremy-7007"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":7,"author":{"gitId":"jeremy-7007"},"content":"Interface HasUniqueId \u003c\u003cInterface\u003e\u003e","lastModifiedDate":"2021-11-08"},{"lineNumber":8,"author":{"gitId":"jeremy-7007"},"content":"Class UniqueId","lastModifiedDate":"2021-11-08"},{"lineNumber":9,"author":{"gitId":"jeremy-7007"},"content":"Class NoOverlapLessonList","lastModifiedDate":"2021-11-08"},{"lineNumber":10,"author":{"gitId":"jeremy-7007"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":11,"author":{"gitId":"jeremy-7007"},"content":"Package Person \u003c\u003cRectangle\u003e\u003e{","lastModifiedDate":"2021-11-08"},{"lineNumber":12,"author":{"gitId":"jeremy-7007"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":13,"author":{"gitId":"jeremy-7007"},"content":"Class Person","lastModifiedDate":"2021-11-08"},{"lineNumber":14,"author":{"gitId":"jeremy-7007"},"content":"Class Name","lastModifiedDate":"2021-11-08"},{"lineNumber":15,"author":{"gitId":"jeremy-7007"},"content":"Class Phone","lastModifiedDate":"2021-11-08"},{"lineNumber":16,"author":{"gitId":"jeremy-7007"},"content":"Class Email","lastModifiedDate":"2021-11-08"},{"lineNumber":17,"author":{"gitId":"jeremy-7007"},"content":"Class Address","lastModifiedDate":"2021-11-08"},{"lineNumber":18,"author":{"gitId":"jeremy-7007"},"content":"Class Tag","lastModifiedDate":"2021-11-08"},{"lineNumber":19,"author":{"gitId":"jeremy-7007"},"content":"Class Exam","lastModifiedDate":"2021-11-08"},{"lineNumber":20,"author":{"gitId":"jeremy-7007"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":21,"author":{"gitId":"jeremy-7007"},"content":"}","lastModifiedDate":"2021-11-08"},{"lineNumber":22,"author":{"gitId":"jeremy-7007"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":23,"author":{"gitId":"jeremy-7007"},"content":"Package Task \u003c\u003cRectangle\u003e\u003e{","lastModifiedDate":"2021-11-08"},{"lineNumber":24,"author":{"gitId":"jeremy-7007"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":25,"author":{"gitId":"jeremy-7007"},"content":"Class Task","lastModifiedDate":"2021-11-08"},{"lineNumber":26,"author":{"gitId":"jeremy-7007"},"content":"Class Description","lastModifiedDate":"2021-11-08"},{"lineNumber":27,"author":{"gitId":"jeremy-7007"},"content":"Class Deadline","lastModifiedDate":"2021-11-08"},{"lineNumber":28,"author":{"gitId":"jeremy-7007"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":29,"author":{"gitId":"jeremy-7007"},"content":"}","lastModifiedDate":"2021-11-08"},{"lineNumber":30,"author":{"gitId":"jeremy-7007"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":31,"author":{"gitId":"jeremy-7007"},"content":"Package Group \u003c\u003cRectangle\u003e\u003e{","lastModifiedDate":"2021-11-08"},{"lineNumber":32,"author":{"gitId":"jeremy-7007"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":33,"author":{"gitId":"jeremy-7007"},"content":"Class Group","lastModifiedDate":"2021-11-08"},{"lineNumber":34,"author":{"gitId":"jeremy-7007"},"content":"Class GroupName","lastModifiedDate":"2021-11-08"},{"lineNumber":35,"author":{"gitId":"jeremy-7007"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":36,"author":{"gitId":"jeremy-7007"},"content":"}","lastModifiedDate":"2021-11-08"},{"lineNumber":37,"author":{"gitId":"jeremy-7007"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":38,"author":{"gitId":"jeremy-7007"},"content":"Person *--\u003e Name","lastModifiedDate":"2021-11-08"},{"lineNumber":39,"author":{"gitId":"jeremy-7007"},"content":"Person *--\u003e Phone","lastModifiedDate":"2021-11-08"},{"lineNumber":40,"author":{"gitId":"jeremy-7007"},"content":"Person *--\u003e Email","lastModifiedDate":"2021-11-08"},{"lineNumber":41,"author":{"gitId":"jeremy-7007"},"content":"Person *--\u003e Address","lastModifiedDate":"2021-11-08"},{"lineNumber":42,"author":{"gitId":"jeremy-7007"},"content":"Person *--\u003e \"*\" Tag","lastModifiedDate":"2021-11-08"},{"lineNumber":43,"author":{"gitId":"jeremy-7007"},"content":"Person *--\u003e NoOverlapLessonList","lastModifiedDate":"2021-11-08"},{"lineNumber":44,"author":{"gitId":"jeremy-7007"},"content":"Person *--\u003e \"*\" Exam","lastModifiedDate":"2021-11-08"},{"lineNumber":45,"author":{"gitId":"jeremy-7007"},"content":"Person *-up-\u003e \"id\" UniqueId","lastModifiedDate":"2021-11-08"},{"lineNumber":46,"author":{"gitId":"jeremy-7007"},"content":"Person .up.|\u003e HasUniqueId","lastModifiedDate":"2021-11-08"},{"lineNumber":47,"author":{"gitId":"jeremy-7007"},"content":"Task *--\u003e Description","lastModifiedDate":"2021-11-08"},{"lineNumber":48,"author":{"gitId":"jeremy-7007"},"content":"Task *--\u003e Deadline","lastModifiedDate":"2021-11-08"},{"lineNumber":49,"author":{"gitId":"jeremy-7007"},"content":"Task *--\u003e \"id\" UniqueId","lastModifiedDate":"2021-11-08"},{"lineNumber":50,"author":{"gitId":"jeremy-7007"},"content":"Task ..|\u003e HasUniqueId","lastModifiedDate":"2021-11-08"},{"lineNumber":51,"author":{"gitId":"jeremy-7007"},"content":"Group *--\u003e GroupName","lastModifiedDate":"2021-11-08"},{"lineNumber":52,"author":{"gitId":"jeremy-7007"},"content":"Group *--\u003e NoOverlapLessonList","lastModifiedDate":"2021-11-08"},{"lineNumber":53,"author":{"gitId":"jeremy-7007"},"content":"Group *--\u003e \"id\" UniqueId","lastModifiedDate":"2021-11-08"},{"lineNumber":54,"author":{"gitId":"jeremy-7007"},"content":"Group ..|\u003e HasUniqueId","lastModifiedDate":"2021-11-08"},{"lineNumber":55,"author":{"gitId":"jeremy-7007"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":56,"author":{"gitId":"jeremy-7007"},"content":"@enduml","lastModifiedDate":"2021-11-08"}],"authorContributionMap":{"jeremy-7007":56}},{"path":"docs/diagrams/ModelClassDiagram3.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"jeremy-7007"},"content":"@startuml","lastModifiedDate":"2021-11-08"},{"lineNumber":2,"author":{"gitId":"jeremy-7007"},"content":"!include style.puml","lastModifiedDate":"2021-11-08"},{"lineNumber":3,"author":{"gitId":"jeremy-7007"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2021-11-08"},{"lineNumber":4,"author":{"gitId":"jeremy-7007"},"content":"skinparam arrowColor MODEL_COLOR","lastModifiedDate":"2021-11-08"},{"lineNumber":5,"author":{"gitId":"jeremy-7007"},"content":"skinparam classBackgroundColor MODEL_COLOR","lastModifiedDate":"2021-11-08"},{"lineNumber":6,"author":{"gitId":"jeremy-7007"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":7,"author":{"gitId":"jeremy-7007"},"content":"Class UniqueId","lastModifiedDate":"2021-11-08"},{"lineNumber":8,"author":{"gitId":"jeremy-7007"},"content":"Class Person","lastModifiedDate":"2021-11-08"},{"lineNumber":9,"author":{"gitId":"jeremy-7007"},"content":"Class Group","lastModifiedDate":"2021-11-08"},{"lineNumber":10,"author":{"gitId":"jeremy-7007"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":11,"author":{"gitId":"jeremy-7007"},"content":"Person *--\u003e \"assigned tasks\" UniqueId","lastModifiedDate":"2021-11-08"},{"lineNumber":12,"author":{"gitId":"jeremy-7007"},"content":"Person *--\u003e \"assigned groups\" UniqueId","lastModifiedDate":"2021-11-08"},{"lineNumber":13,"author":{"gitId":"jeremy-7007"},"content":"Group *-up-\u003e \"assigned tasks\" UniqueId","lastModifiedDate":"2021-11-08"},{"lineNumber":14,"author":{"gitId":"jeremy-7007"},"content":"Group *-up-\u003e \"assigned persons\" UniqueId","lastModifiedDate":"2021-11-08"},{"lineNumber":15,"author":{"gitId":"jeremy-7007"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":16,"author":{"gitId":"jeremy-7007"},"content":"@enduml","lastModifiedDate":"2021-11-08"}],"authorContributionMap":{"jeremy-7007":16}},{"path":"docs/diagrams/StorageClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam arrowColor STORAGE_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam classBackgroundColor STORAGE_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"package Storage{","lastModifiedDate":"2021-07-31"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":9,"author":{"gitId":"-"},"content":"package \"UserPrefs Storage\" #F4F6F6{","lastModifiedDate":"2021-07-31"},{"lineNumber":10,"author":{"gitId":"-"},"content":"Interface UserPrefsStorage \u003c\u003cInterface\u003e\u003e","lastModifiedDate":"2019-07-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"Class JsonUserPrefsStorage","lastModifiedDate":"2021-07-31"},{"lineNumber":12,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-07-31"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"Interface Storage \u003c\u003cInterface\u003e\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":15,"author":{"gitId":"-"},"content":"Class StorageManager","lastModifiedDate":"2019-07-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":17,"author":{"gitId":"-"},"content":"package \"AddressBook Storage\" #F4F6F6{","lastModifiedDate":"2021-07-31"},{"lineNumber":18,"author":{"gitId":"-"},"content":"Interface AddressBookStorage \u003c\u003cInterface\u003e\u003e","lastModifiedDate":"2021-07-31"},{"lineNumber":19,"author":{"gitId":"-"},"content":"Class JsonAddressBookStorage","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"Class JsonSerializableAddressBook","lastModifiedDate":"2021-07-31"},{"lineNumber":21,"author":{"gitId":"-"},"content":"Class JsonAdaptedPerson","lastModifiedDate":"2021-07-31"},{"lineNumber":22,"author":{"gitId":"Neha-5678"},"content":"Class JsonAdaptedTask","lastModifiedDate":"2021-11-08"},{"lineNumber":23,"author":{"gitId":"Neha-5678"},"content":"Class JsonAdaptedGroup","lastModifiedDate":"2021-11-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-07-31"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":26,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-07-31"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":28,"author":{"gitId":"-"},"content":"Class HiddenOutside #FFFFFF","lastModifiedDate":"2021-07-31"},{"lineNumber":29,"author":{"gitId":"-"},"content":"HiddenOutside ..\u003e Storage","lastModifiedDate":"2021-07-31"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-07-31"},{"lineNumber":31,"author":{"gitId":"-"},"content":"StorageManager .up.|\u003e Storage","lastModifiedDate":"2021-07-31"},{"lineNumber":32,"author":{"gitId":"-"},"content":"StorageManager -up-\u003e \"1\" UserPrefsStorage","lastModifiedDate":"2021-07-31"},{"lineNumber":33,"author":{"gitId":"-"},"content":"StorageManager -up-\u003e \"1\" AddressBookStorage","lastModifiedDate":"2021-07-31"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":35,"author":{"gitId":"-"},"content":"Storage -left-|\u003e UserPrefsStorage","lastModifiedDate":"2021-07-31"},{"lineNumber":36,"author":{"gitId":"-"},"content":"Storage -right-|\u003e AddressBookStorage","lastModifiedDate":"2021-07-31"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":38,"author":{"gitId":"-"},"content":"JsonUserPrefsStorage .up.|\u003e UserPrefsStorage","lastModifiedDate":"2021-07-31"},{"lineNumber":39,"author":{"gitId":"-"},"content":"JsonAddressBookStorage .up.|\u003e AddressBookStorage","lastModifiedDate":"2021-07-31"},{"lineNumber":40,"author":{"gitId":"-"},"content":"JsonAddressBookStorage ..\u003e JsonSerializableAddressBook","lastModifiedDate":"2021-07-31"},{"lineNumber":41,"author":{"gitId":"-"},"content":"JsonSerializableAddressBook --\u003e \"*\" JsonAdaptedPerson","lastModifiedDate":"2021-07-31"},{"lineNumber":42,"author":{"gitId":"Neha-5678"},"content":"JsonSerializableAddressBook --\u003e \"*\" JsonAdaptedTask","lastModifiedDate":"2021-11-08"},{"lineNumber":43,"author":{"gitId":"Neha-5678"},"content":"JsonSerializableAddressBook --\u003e \"*\" JsonAdaptedGroup","lastModifiedDate":"2021-11-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-03-31"},{"lineNumber":45,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"Neha-5678":4,"-":41}},{"path":"docs/diagrams/TaskAssignment.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"jeremy-7007"},"content":"@startuml","lastModifiedDate":"2021-10-19"},{"lineNumber":2,"author":{"gitId":"jeremy-7007"},"content":"!include style.puml","lastModifiedDate":"2021-11-08"},{"lineNumber":3,"author":{"gitId":"jeremy-7007"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":4,"author":{"gitId":"jeremy-7007"},"content":"show members","lastModifiedDate":"2021-11-08"},{"lineNumber":5,"author":{"gitId":"jeremy-7007"},"content":"hide empty members","lastModifiedDate":"2021-11-08"},{"lineNumber":6,"author":{"gitId":"jeremy-7007"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2021-11-08"},{"lineNumber":7,"author":{"gitId":"jeremy-7007"},"content":"skinparam arrowColor MODEL_COLOR_T4","lastModifiedDate":"2021-11-08"},{"lineNumber":8,"author":{"gitId":"jeremy-7007"},"content":"skinparam classBackgroundColor MODEL_COLOR","lastModifiedDate":"2021-11-08"},{"lineNumber":9,"author":{"gitId":"jeremy-7007"},"content":"skinparam classAttributeFontColor classFontColor","lastModifiedDate":"2021-11-08"},{"lineNumber":10,"author":{"gitId":"jeremy-7007"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":11,"author":{"gitId":"jeremy-7007"},"content":"UniqueId \"*\" \u003c--\u003e \"1\" Person","lastModifiedDate":"2021-10-19"},{"lineNumber":12,"author":{"gitId":"jeremy-7007"},"content":"UniqueId \"*\" \u003c--\u003e \"1\" Task","lastModifiedDate":"2021-10-19"},{"lineNumber":13,"author":{"gitId":"jeremy-7007"},"content":"UniqueId \"*\" \u003c--\u003e \"1\" Group","lastModifiedDate":"2021-11-08"},{"lineNumber":14,"author":{"gitId":"jeremy-7007"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":15,"author":{"gitId":"jeremy-7007"},"content":"class UniqueId {","lastModifiedDate":"2021-10-19"},{"lineNumber":16,"author":{"gitId":"jeremy-7007"},"content":"    owner","lastModifiedDate":"2021-10-19"},{"lineNumber":17,"author":{"gitId":"jeremy-7007"},"content":"    id","lastModifiedDate":"2021-10-19"},{"lineNumber":18,"author":{"gitId":"jeremy-7007"},"content":"}","lastModifiedDate":"2021-10-19"},{"lineNumber":19,"author":{"gitId":"jeremy-7007"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":20,"author":{"gitId":"jeremy-7007"},"content":"class Person {","lastModifiedDate":"2021-10-19"},{"lineNumber":21,"author":{"gitId":"jeremy-7007"},"content":"    UniqueId id","lastModifiedDate":"2021-10-19"},{"lineNumber":22,"author":{"gitId":"jeremy-7007"},"content":"    updateAssignedTaskIds()","lastModifiedDate":"2021-10-19"},{"lineNumber":23,"author":{"gitId":"jeremy-7007"},"content":"}","lastModifiedDate":"2021-10-19"},{"lineNumber":24,"author":{"gitId":"jeremy-7007"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":25,"author":{"gitId":"jeremy-7007"},"content":"class Task {","lastModifiedDate":"2021-10-19"},{"lineNumber":26,"author":{"gitId":"jeremy-7007"},"content":"    UniqueId id","lastModifiedDate":"2021-10-19"},{"lineNumber":27,"author":{"gitId":"jeremy-7007"},"content":"}","lastModifiedDate":"2021-11-08"},{"lineNumber":28,"author":{"gitId":"jeremy-7007"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":29,"author":{"gitId":"jeremy-7007"},"content":"class Group {","lastModifiedDate":"2021-11-08"},{"lineNumber":30,"author":{"gitId":"jeremy-7007"},"content":"    UniqueId id","lastModifiedDate":"2021-11-08"},{"lineNumber":31,"author":{"gitId":"jeremy-7007"},"content":"    updateAssignedTaskIds()","lastModifiedDate":"2021-11-08"},{"lineNumber":32,"author":{"gitId":"jeremy-7007"},"content":"}","lastModifiedDate":"2021-10-19"},{"lineNumber":33,"author":{"gitId":"jeremy-7007"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":34,"author":{"gitId":"jeremy-7007"},"content":"@enduml","lastModifiedDate":"2021-10-19"}],"authorContributionMap":{"jeremy-7007":34}},{"path":"docs/diagrams/UiClassDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@startuml","lastModifiedDate":"2019-07-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"!include style.puml","lastModifiedDate":"2019-07-03"},{"lineNumber":3,"author":{"gitId":"-"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2019-07-03"},{"lineNumber":4,"author":{"gitId":"-"},"content":"skinparam arrowColor UI_COLOR_T4","lastModifiedDate":"2019-07-03"},{"lineNumber":5,"author":{"gitId":"-"},"content":"skinparam classBackgroundColor UI_COLOR","lastModifiedDate":"2019-07-03"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":7,"author":{"gitId":"-"},"content":"package UI \u003c\u003cRectangle\u003e\u003e{","lastModifiedDate":"2019-07-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"Interface Ui \u003c\u003cInterface\u003e\u003e","lastModifiedDate":"2019-07-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"Class \"{abstract}\\nUiPart\" as UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":10,"author":{"gitId":"-"},"content":"Class UiManager","lastModifiedDate":"2019-07-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"Class MainWindow","lastModifiedDate":"2019-07-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"Class HelpWindow","lastModifiedDate":"2019-07-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"Class ResultDisplay","lastModifiedDate":"2019-07-03"},{"lineNumber":14,"author":{"gitId":"kvihashini"},"content":"Class XYZListPanel","lastModifiedDate":"2021-11-08"},{"lineNumber":15,"author":{"gitId":"kvihashini"},"content":"Class XYZCard","lastModifiedDate":"2021-11-08"},{"lineNumber":16,"author":{"gitId":"kvihashini"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"Class StatusBarFooter","lastModifiedDate":"2019-07-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"Class CommandBox","lastModifiedDate":"2019-07-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"package Model \u003c\u003cRectangle\u003e\u003e {","lastModifiedDate":"2019-07-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"Class HiddenModel #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":23,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":25,"author":{"gitId":"-"},"content":"package Logic \u003c\u003cRectangle\u003e\u003e {","lastModifiedDate":"2019-07-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"Class HiddenLogic #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":27,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2019-07-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"Class HiddenOutside #FFFFFF","lastModifiedDate":"2019-07-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"HiddenOutside ..\u003e Ui","lastModifiedDate":"2019-07-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"UiManager .left.|\u003e Ui","lastModifiedDate":"2019-07-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"UiManager -down-\u003e \"1\" MainWindow","lastModifiedDate":"2021-07-31"},{"lineNumber":34,"author":{"gitId":"-"},"content":"MainWindow *-down-\u003e  \"1\" CommandBox","lastModifiedDate":"2021-07-31"},{"lineNumber":35,"author":{"gitId":"-"},"content":"MainWindow *-down-\u003e \"1\" ResultDisplay","lastModifiedDate":"2021-07-31"},{"lineNumber":36,"author":{"gitId":"kvihashini"},"content":"MainWindow *-down-\u003e \"1\" XYZListPanel","lastModifiedDate":"2021-11-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"MainWindow *-down-\u003e \"1\" StatusBarFooter","lastModifiedDate":"2021-07-31"},{"lineNumber":38,"author":{"gitId":"-"},"content":"MainWindow --\u003e \"0..1\" HelpWindow","lastModifiedDate":"2021-07-31"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":40,"author":{"gitId":"kvihashini"},"content":"XYZListPanel -down-\u003e \"*\" XYZCard","lastModifiedDate":"2021-11-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":42,"author":{"gitId":"-"},"content":"MainWindow -left-|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":44,"author":{"gitId":"-"},"content":"ResultDisplay --|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":45,"author":{"gitId":"-"},"content":"CommandBox --|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":46,"author":{"gitId":"kvihashini"},"content":"XYZListPanel --|\u003e UiPart","lastModifiedDate":"2021-11-08"},{"lineNumber":47,"author":{"gitId":"kvihashini"},"content":"XYZCard --|\u003e UiPart","lastModifiedDate":"2021-11-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"StatusBarFooter --|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":49,"author":{"gitId":"-"},"content":"HelpWindow --|\u003e UiPart","lastModifiedDate":"2021-07-31"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":51,"author":{"gitId":"kvihashini"},"content":"XYZCard ..\u003e Model","lastModifiedDate":"2021-11-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"UiManager -right-\u003e Logic","lastModifiedDate":"2019-07-03"},{"lineNumber":53,"author":{"gitId":"-"},"content":"MainWindow -left-\u003e Logic","lastModifiedDate":"2019-07-03"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":55,"author":{"gitId":"kvihashini"},"content":"XYZListPanel -[hidden]left- HelpWindow","lastModifiedDate":"2021-11-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"HelpWindow -[hidden]left- CommandBox","lastModifiedDate":"2019-07-03"},{"lineNumber":57,"author":{"gitId":"-"},"content":"CommandBox -[hidden]left- ResultDisplay","lastModifiedDate":"2019-07-03"},{"lineNumber":58,"author":{"gitId":"-"},"content":"ResultDisplay -[hidden]left- StatusBarFooter","lastModifiedDate":"2019-07-30"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-07-03"},{"lineNumber":60,"author":{"gitId":"-"},"content":"MainWindow -[hidden]-|\u003e UiPart","lastModifiedDate":"2019-07-03"},{"lineNumber":61,"author":{"gitId":"-"},"content":"@enduml","lastModifiedDate":"2019-07-03"}],"authorContributionMap":{"kvihashini":9,"-":52}},{"path":"docs/diagrams/UniqueIdDiagram.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"eltonyeh"},"content":"@startuml","lastModifiedDate":"2021-10-20"},{"lineNumber":2,"author":{"gitId":"eltonyeh"},"content":"!include style.puml","lastModifiedDate":"2021-10-20"},{"lineNumber":3,"author":{"gitId":"eltonyeh"},"content":"skinparam arrowThickness 1.1","lastModifiedDate":"2021-10-20"},{"lineNumber":4,"author":{"gitId":"eltonyeh"},"content":"skinparam arrowColor MODEL_COLOR","lastModifiedDate":"2021-10-20"},{"lineNumber":5,"author":{"gitId":"eltonyeh"},"content":"skinparam classBackgroundColor MODEL_COLOR","lastModifiedDate":"2021-10-20"},{"lineNumber":6,"author":{"gitId":"eltonyeh"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":7,"author":{"gitId":"eltonyeh"},"content":"Interface HasUniqueId \u003c\u003cInterface\u003e\u003e","lastModifiedDate":"2021-10-20"},{"lineNumber":8,"author":{"gitId":"eltonyeh"},"content":"Class UniqueId","lastModifiedDate":"2021-10-20"},{"lineNumber":9,"author":{"gitId":"eltonyeh"},"content":"Class Person","lastModifiedDate":"2021-10-20"},{"lineNumber":10,"author":{"gitId":"eltonyeh"},"content":"Class Task","lastModifiedDate":"2021-10-20"},{"lineNumber":11,"author":{"gitId":"eltonyeh"},"content":"Class Group","lastModifiedDate":"2021-10-20"},{"lineNumber":12,"author":{"gitId":"eltonyeh"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":13,"author":{"gitId":"eltonyeh"},"content":"Task .up.|\u003e HasUniqueId","lastModifiedDate":"2021-10-20"},{"lineNumber":14,"author":{"gitId":"eltonyeh"},"content":"Person .up.|\u003e HasUniqueId","lastModifiedDate":"2021-10-20"},{"lineNumber":15,"author":{"gitId":"eltonyeh"},"content":"Group .up.|\u003e HasUniqueId","lastModifiedDate":"2021-10-20"},{"lineNumber":16,"author":{"gitId":"eltonyeh"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":17,"author":{"gitId":"eltonyeh"},"content":"HasUniqueId \"1\" \u003c-right-\u003e \"1\" UniqueId","lastModifiedDate":"2021-10-20"},{"lineNumber":18,"author":{"gitId":"eltonyeh"},"content":"@enduml","lastModifiedDate":"2021-10-20"}],"authorContributionMap":{"eltonyeh":18}},{"path":"docs/diagrams/ViewStudent.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"kvihashini"},"content":"@startuml","lastModifiedDate":"2021-10-20"},{"lineNumber":2,"author":{"gitId":"kvihashini"},"content":"!include style.puml","lastModifiedDate":"2021-10-20"},{"lineNumber":3,"author":{"gitId":"kvihashini"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":4,"author":{"gitId":"kvihashini"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2021-10-20"},{"lineNumber":5,"author":{"gitId":"kvihashini"},"content":"participant \":LogicManager\" as LogicManager LOGIC_COLOR","lastModifiedDate":"2021-10-20"},{"lineNumber":6,"author":{"gitId":"kvihashini"},"content":"participant \":PersonCommandsParser\" as PersonCommandsParser LOGIC_COLOR","lastModifiedDate":"2021-10-20"},{"lineNumber":7,"author":{"gitId":"kvihashini"},"content":"participant \":ViewPersonCommand\" as ViewPersonCommand LOGIC_COLOR","lastModifiedDate":"2021-10-20"},{"lineNumber":8,"author":{"gitId":"kvihashini"},"content":"end box","lastModifiedDate":"2021-10-20"},{"lineNumber":9,"author":{"gitId":"kvihashini"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":10,"author":{"gitId":"kvihashini"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2021-10-20"},{"lineNumber":11,"author":{"gitId":"kvihashini"},"content":"participant \":ModelManager\" as ModelManager MODEL_COLOR","lastModifiedDate":"2021-11-07"},{"lineNumber":12,"author":{"gitId":"kvihashini"},"content":"participant \":AddressBook\" as AddressBook MODEL_COLOR","lastModifiedDate":"2021-10-20"},{"lineNumber":13,"author":{"gitId":"kvihashini"},"content":"end box","lastModifiedDate":"2021-10-20"},{"lineNumber":14,"author":{"gitId":"kvihashini"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":15,"author":{"gitId":"kvihashini"},"content":"[-\u003e LogicManager : execute(student -v 3)","lastModifiedDate":"2021-10-20"},{"lineNumber":16,"author":{"gitId":"kvihashini"},"content":"activate LogicManager","lastModifiedDate":"2021-10-20"},{"lineNumber":17,"author":{"gitId":"kvihashini"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":18,"author":{"gitId":"kvihashini"},"content":"LogicManager -\u003e PersonCommandsParser : parseCommand(student -v 3)","lastModifiedDate":"2021-11-07"},{"lineNumber":19,"author":{"gitId":"kvihashini"},"content":"activate PersonCommandsParser","lastModifiedDate":"2021-10-20"},{"lineNumber":20,"author":{"gitId":"kvihashini"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":21,"author":{"gitId":"kvihashini"},"content":"create ViewPersonCommand","lastModifiedDate":"2021-10-20"},{"lineNumber":22,"author":{"gitId":"kvihashini"},"content":"PersonCommandsParser -\u003e ViewPersonCommand : parse(3)","lastModifiedDate":"2021-11-07"},{"lineNumber":23,"author":{"gitId":"kvihashini"},"content":"activate ViewPersonCommand","lastModifiedDate":"2021-10-20"},{"lineNumber":24,"author":{"gitId":"kvihashini"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":25,"author":{"gitId":"kvihashini"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":26,"author":{"gitId":"kvihashini"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":27,"author":{"gitId":"kvihashini"},"content":"ViewPersonCommand --\u003e PersonCommandsParser","lastModifiedDate":"2021-11-07"},{"lineNumber":28,"author":{"gitId":"kvihashini"},"content":"deactivate ViewPersonCommand","lastModifiedDate":"2021-11-07"},{"lineNumber":29,"author":{"gitId":"kvihashini"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":30,"author":{"gitId":"kvihashini"},"content":"PersonCommandsParser --\u003e LogicManager : command","lastModifiedDate":"2021-11-07"},{"lineNumber":31,"author":{"gitId":"kvihashini"},"content":"deactivate PersonCommandsParser","lastModifiedDate":"2021-10-20"},{"lineNumber":32,"author":{"gitId":"kvihashini"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":33,"author":{"gitId":"kvihashini"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":34,"author":{"gitId":"kvihashini"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":35,"author":{"gitId":"kvihashini"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":36,"author":{"gitId":"kvihashini"},"content":"LogicManager -\u003e ViewPersonCommand : execute()","lastModifiedDate":"2021-10-20"},{"lineNumber":37,"author":{"gitId":"kvihashini"},"content":"activate ViewPersonCommand","lastModifiedDate":"2021-10-20"},{"lineNumber":38,"author":{"gitId":"kvihashini"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":39,"author":{"gitId":"kvihashini"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":40,"author":{"gitId":"kvihashini"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":41,"author":{"gitId":"kvihashini"},"content":"ViewPersonCommand -\u003e AddressBook : get(3)","lastModifiedDate":"2021-11-07"},{"lineNumber":42,"author":{"gitId":"kvihashini"},"content":"activate AddressBook","lastModifiedDate":"2021-10-20"},{"lineNumber":43,"author":{"gitId":"kvihashini"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":44,"author":{"gitId":"kvihashini"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":45,"author":{"gitId":"kvihashini"},"content":"AddressBook --\u003e ViewPersonCommand : Person","lastModifiedDate":"2021-10-20"},{"lineNumber":46,"author":{"gitId":"kvihashini"},"content":"deactivate AddressBook","lastModifiedDate":"2021-10-20"},{"lineNumber":47,"author":{"gitId":"kvihashini"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":48,"author":{"gitId":"kvihashini"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":49,"author":{"gitId":"kvihashini"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":50,"author":{"gitId":"kvihashini"},"content":"ViewPersonCommand -\u003e ModelManager : setPersonToView(Person)","lastModifiedDate":"2021-11-07"},{"lineNumber":51,"author":{"gitId":"kvihashini"},"content":"activate ModelManager","lastModifiedDate":"2021-11-07"},{"lineNumber":52,"author":{"gitId":"kvihashini"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":53,"author":{"gitId":"kvihashini"},"content":"ModelManager --\u003e ViewPersonCommand","lastModifiedDate":"2021-11-07"},{"lineNumber":54,"author":{"gitId":"kvihashini"},"content":"deactivate ModelManager","lastModifiedDate":"2021-11-07"},{"lineNumber":55,"author":{"gitId":"kvihashini"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":56,"author":{"gitId":"kvihashini"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":57,"author":{"gitId":"kvihashini"},"content":"ViewPersonCommand -\u003e ModelManager : setViewingType(PERSON)","lastModifiedDate":"2021-11-07"},{"lineNumber":58,"author":{"gitId":"kvihashini"},"content":"activate ModelManager","lastModifiedDate":"2021-11-07"},{"lineNumber":59,"author":{"gitId":"kvihashini"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":60,"author":{"gitId":"kvihashini"},"content":"ModelManager --\u003e ViewPersonCommand","lastModifiedDate":"2021-11-07"},{"lineNumber":61,"author":{"gitId":"kvihashini"},"content":"deactivate ModelManager","lastModifiedDate":"2021-11-07"},{"lineNumber":62,"author":{"gitId":"kvihashini"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":63,"author":{"gitId":"kvihashini"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":64,"author":{"gitId":"kvihashini"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":65,"author":{"gitId":"kvihashini"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":66,"author":{"gitId":"kvihashini"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":67,"author":{"gitId":"kvihashini"},"content":"ViewPersonCommand --\u003e LogicManager : CommandResult","lastModifiedDate":"2021-10-20"},{"lineNumber":68,"author":{"gitId":"kvihashini"},"content":"deactivate ViewPersonCommand","lastModifiedDate":"2021-10-20"},{"lineNumber":69,"author":{"gitId":"kvihashini"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":70,"author":{"gitId":"kvihashini"},"content":"[\u003c-- LogicManager","lastModifiedDate":"2021-10-20"},{"lineNumber":71,"author":{"gitId":"kvihashini"},"content":"deactivate LogicManager","lastModifiedDate":"2021-10-20"},{"lineNumber":72,"author":{"gitId":"kvihashini"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":73,"author":{"gitId":"kvihashini"},"content":"@enduml","lastModifiedDate":"2021-10-20"}],"authorContributionMap":{"kvihashini":73}},{"path":"docs/diagrams/ViewTypes.puml","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"tanhuakun"},"content":"@startuml","lastModifiedDate":"2021-11-04"},{"lineNumber":2,"author":{"gitId":"tanhuakun"},"content":"!include style.puml","lastModifiedDate":"2021-11-04"},{"lineNumber":3,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":4,"author":{"gitId":"tanhuakun"},"content":"box Logic LOGIC_COLOR_T1","lastModifiedDate":"2021-11-04"},{"lineNumber":5,"author":{"gitId":"tanhuakun"},"content":"participant \":Command\" as Command LOGIC_COLOR","lastModifiedDate":"2021-11-04"},{"lineNumber":6,"author":{"gitId":"tanhuakun"},"content":"end box","lastModifiedDate":"2021-11-04"},{"lineNumber":7,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":8,"author":{"gitId":"tanhuakun"},"content":"box Model MODEL_COLOR_T1","lastModifiedDate":"2021-11-04"},{"lineNumber":9,"author":{"gitId":"tanhuakun"},"content":"participant \":ModelManager\" as Model MODEL_COLOR","lastModifiedDate":"2021-11-04"},{"lineNumber":10,"author":{"gitId":"tanhuakun"},"content":"participant \":ObservableProperty\" as ObservableProperty MODEL_COLOR","lastModifiedDate":"2021-11-04"},{"lineNumber":11,"author":{"gitId":"tanhuakun"},"content":"end box","lastModifiedDate":"2021-11-04"},{"lineNumber":12,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":13,"author":{"gitId":"tanhuakun"},"content":"participant \":ChangeListener\" as ChangeListener #747d7d","lastModifiedDate":"2021-11-04"},{"lineNumber":14,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":15,"author":{"gitId":"tanhuakun"},"content":"box UI UI_COLOR_T1","lastModifiedDate":"2021-11-04"},{"lineNumber":16,"author":{"gitId":"tanhuakun"},"content":"participant \"ViewingPanel\" as ViewingPanel UI_COLOR","lastModifiedDate":"2021-11-04"},{"lineNumber":17,"author":{"gitId":"tanhuakun"},"content":"endbox","lastModifiedDate":"2021-11-04"},{"lineNumber":18,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":19,"author":{"gitId":"tanhuakun"},"content":"[-\u003e Command : execute(Model)","lastModifiedDate":"2021-11-04"},{"lineNumber":20,"author":{"gitId":"tanhuakun"},"content":"activate Command","lastModifiedDate":"2021-11-04"},{"lineNumber":21,"author":{"gitId":"tanhuakun"},"content":"Command -\u003e Model : setViewingType(newValue)","lastModifiedDate":"2021-11-04"},{"lineNumber":22,"author":{"gitId":"tanhuakun"},"content":"activate Model","lastModifiedDate":"2021-11-04"},{"lineNumber":23,"author":{"gitId":"tanhuakun"},"content":"Model -\u003e ObservableProperty : set(newValue)","lastModifiedDate":"2021-11-04"},{"lineNumber":24,"author":{"gitId":"tanhuakun"},"content":"activate ObservableProperty","lastModifiedDate":"2021-11-04"},{"lineNumber":25,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":26,"author":{"gitId":"tanhuakun"},"content":"ObservableProperty -\u003e ChangeListener : changed(ObservableValue,\\noldValue, oldValue)","lastModifiedDate":"2021-11-04"},{"lineNumber":27,"author":{"gitId":"tanhuakun"},"content":"activate ChangeListener","lastModifiedDate":"2021-11-04"},{"lineNumber":28,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":29,"author":{"gitId":"tanhuakun"},"content":"ChangeListener -\u003e ViewingPanel : changeOnValue(newValue);","lastModifiedDate":"2021-11-04"},{"lineNumber":30,"author":{"gitId":"tanhuakun"},"content":"activate ViewingPanel","lastModifiedDate":"2021-11-04"},{"lineNumber":31,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":32,"author":{"gitId":"tanhuakun"},"content":"ViewingPanel --\u003e ChangeListener","lastModifiedDate":"2021-11-04"},{"lineNumber":33,"author":{"gitId":"tanhuakun"},"content":"deactivate ViewingPanel","lastModifiedDate":"2021-11-04"},{"lineNumber":34,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":35,"author":{"gitId":"tanhuakun"},"content":"ChangeListener --\u003e ObservableProperty","lastModifiedDate":"2021-11-04"},{"lineNumber":36,"author":{"gitId":"tanhuakun"},"content":"deactivate ChangeListener","lastModifiedDate":"2021-11-04"},{"lineNumber":37,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":38,"author":{"gitId":"tanhuakun"},"content":"ObservableProperty --\u003e Model","lastModifiedDate":"2021-11-04"},{"lineNumber":39,"author":{"gitId":"tanhuakun"},"content":"deactivate ObservableProperty","lastModifiedDate":"2021-11-04"},{"lineNumber":40,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":41,"author":{"gitId":"tanhuakun"},"content":"Model --\u003e Command","lastModifiedDate":"2021-11-04"},{"lineNumber":42,"author":{"gitId":"tanhuakun"},"content":"deactivate Model","lastModifiedDate":"2021-11-04"},{"lineNumber":43,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":44,"author":{"gitId":"tanhuakun"},"content":"[\u003c-- Command","lastModifiedDate":"2021-11-04"},{"lineNumber":45,"author":{"gitId":"tanhuakun"},"content":"deactivate Command","lastModifiedDate":"2021-11-04"},{"lineNumber":46,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":47,"author":{"gitId":"tanhuakun"},"content":"@enduml","lastModifiedDate":"2021-11-04"}],"authorContributionMap":{"tanhuakun":47}},{"path":"docs/index.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"layout: page","lastModifiedDate":"2020-05-23"},{"lineNumber":3,"author":{"gitId":"kvihashini"},"content":"title: Tutor Master","lastModifiedDate":"2021-10-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":"---","lastModifiedDate":"2020-05-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"[![CI Status](https://github.com/se-edu/addressbook-level3/workflows/Java%20CI/badge.svg)](https://github.com/se-edu/addressbook-level3/actions)","lastModifiedDate":"2020-05-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"[![codecov](https://codecov.io/gh/AY2122S1-CS2103T-W16-4/tp/branch/master/graph/badge.svg?token\u003d8YA6V58X41)](https://codecov.io/gh/AY2122S1-CS2103T-W16-4/tp)","lastModifiedDate":"2021-09-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"![Ui](images/Ui.png)","lastModifiedDate":"2020-05-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":11,"author":{"gitId":"kvihashini"},"content":"**Tutor Master is a desktop app for freelance tutors to manage their students‚Äô grades, assignment submission and tuition fee payment.** While it has a GUI, most of the user interactions happen using a CLI (Command Line Interface).","lastModifiedDate":"2021-10-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":13,"author":{"gitId":"kvihashini"},"content":"* If you are interested in using Tutor Master, head over to the [_Quick Start_ section of the **User Guide**](UserGuide.html#quick-start).","lastModifiedDate":"2021-10-24"},{"lineNumber":14,"author":{"gitId":"kvihashini"},"content":"* If you are interested about developing Tutor Master, the [**Developer Guide**](DeveloperGuide.html) is a good place to start.","lastModifiedDate":"2021-10-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":17,"author":{"gitId":"-"},"content":"**Acknowledgements**","lastModifiedDate":"2020-05-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-05-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"* Libraries used: [JavaFX](https://openjfx.io/), [Jackson](https://github.com/FasterXML/jackson), [JUnit5](https://github.com/junit-team/junit5)","lastModifiedDate":"2020-05-23"}],"authorContributionMap":{"kvihashini":4,"-":15}},{"path":"docs/team/eltonyeh.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"eltonyeh"},"content":"---","lastModifiedDate":"2021-09-28"},{"lineNumber":2,"author":{"gitId":"eltonyeh"},"content":"layout: page","lastModifiedDate":"2021-09-28"},{"lineNumber":3,"author":{"gitId":"eltonyeh"},"content":"title: Yeh Yu Cheng\u0027s Project Portfolio Page","lastModifiedDate":"2021-11-04"},{"lineNumber":4,"author":{"gitId":"eltonyeh"},"content":"---","lastModifiedDate":"2021-09-28"},{"lineNumber":5,"author":{"gitId":"eltonyeh"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":6,"author":{"gitId":"eltonyeh"},"content":"### Project: Tutor Master","lastModifiedDate":"2021-11-08"},{"lineNumber":7,"author":{"gitId":"eltonyeh"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":8,"author":{"gitId":"eltonyeh"},"content":"**Tutor Master** is a desktop application for experienced freelance tutors to keep track of their students. More specifically, it helps tutors to record student details and the tasks, lessons and exams assigned to them. Besides, tutors can view their teaching schedule in Tutor Master. The app is mainly written in Java and has about 12k LoC.","lastModifiedDate":"2021-11-08"},{"lineNumber":9,"author":{"gitId":"eltonyeh"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":10,"author":{"gitId":"eltonyeh"},"content":"Users can interact with Tutor Master using a CLI (command-line interface), while also benefit from the GUI we provided.","lastModifiedDate":"2021-11-04"},{"lineNumber":11,"author":{"gitId":"eltonyeh"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":12,"author":{"gitId":"eltonyeh"},"content":"Contributed code: [RepoSense link](https://nus-cs2103-ay2122s1.github.io/tp-dashboard/?search\u003d\u0026sort\u003dgroupTitle\u0026sortWithin\u003dtitle\u0026timeframe\u003dcommit\u0026mergegroup\u003d\u0026groupSelect\u003dgroupByRepos\u0026breakdown\u003dtrue\u0026checkedFileTypes\u003ddocs~functional-code~test-code~other\u0026since\u003d2021-09-17\u0026tabOpen\u003dtrue\u0026tabType\u003dauthorship\u0026tabAuthor\u003deltonyeh\u0026tabRepo\u003dAY2122S1-CS2103T-W16-4%2Ftp%5Bmaster%5D\u0026authorshipIsMergeGroup\u003dfalse\u0026authorshipFileTypes\u003ddocs~functional-code~test-code\u0026authorshipIsBinaryFileTypeChecked\u003dfalse)","lastModifiedDate":"2021-11-08"},{"lineNumber":13,"author":{"gitId":"eltonyeh"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":14,"author":{"gitId":"eltonyeh"},"content":"#### Enhancements","lastModifiedDate":"2021-11-08"},{"lineNumber":15,"author":{"gitId":"eltonyeh"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":16,"author":{"gitId":"eltonyeh"},"content":"- **Internal Design**: Create the `UniqueId` class","lastModifiedDate":"2021-11-08"},{"lineNumber":17,"author":{"gitId":"eltonyeh"},"content":"  - What it does: this allows we to uniquely identify entities including students, groups, tasks, lessons and exams by generating unique id for each object.","lastModifiedDate":"2021-11-08"},{"lineNumber":18,"author":{"gitId":"eltonyeh"},"content":"  - Justification: the idea of \"unique\" id is not that trivial; we need to ensure that there is nearly no possibility to have duplicate ids while trying to make the system easy to implement. [Detail explanation](https://ay2122s1-cs2103t-w16-4.github.io/tp/DeveloperGuide.html#design-consideration)","lastModifiedDate":"2021-11-08"},{"lineNumber":19,"author":{"gitId":"eltonyeh"},"content":"- **Internal Design**: Create the interfaces `HasUniqueId` and `TaskAssignable`","lastModifiedDate":"2021-11-08"},{"lineNumber":20,"author":{"gitId":"eltonyeh"},"content":"  - What it does: `HasUniqueId` is used when a class has a unique id. `TaskAssignable` is used when a class can be assigned a task.","lastModifiedDate":"2021-11-08"},{"lineNumber":21,"author":{"gitId":"eltonyeh"},"content":"  - Justification: The main reason to implement these interfaces is to make the code structure more inheritable and decrease duplicate code. For instance, we can (un)assign tasks to `TaskAssignable` instead of `Student` and `Group` separately.","lastModifiedDate":"2021-11-08"},{"lineNumber":22,"author":{"gitId":"eltonyeh"},"content":"- **New Feature**: Ability to add tasks to the app","lastModifiedDate":"2021-11-08"},{"lineNumber":23,"author":{"gitId":"eltonyeh"},"content":"  - What it does: This allows users to create new tasks and store them in Tutor Master through a command. They can assign tasks to students/groups later. Task added is reusable, i.e., tasks can be assigned to multiple student/group.","lastModifiedDate":"2021-11-08"},{"lineNumber":24,"author":{"gitId":"eltonyeh"},"content":"- **New Feature**: Ability to assign tasks to `TaskAssignable` (Students and Groups)","lastModifiedDate":"2021-11-08"},{"lineNumber":25,"author":{"gitId":"eltonyeh"},"content":"  - What it does: this allows users to assign tasks to their students or student groups through a command.","lastModifiedDate":"2021-11-08"},{"lineNumber":26,"author":{"gitId":"eltonyeh"},"content":"  - Justification: My main contribution is","lastModifiedDate":"2021-11-08"},{"lineNumber":27,"author":{"gitId":"eltonyeh"},"content":"    - Combine the command of assigning tasks to students and assigning tasks to groups into a more generic command.","lastModifiedDate":"2021-11-04"},{"lineNumber":28,"author":{"gitId":"eltonyeh"},"content":"    - Reduce duplicate code and increase the code reusability by interfaces and inheritance.","lastModifiedDate":"2021-11-08"},{"lineNumber":29,"author":{"gitId":"eltonyeh"},"content":"  - Credit: this feature is based on the command of assigning tasks to students created by my teammate. ","lastModifiedDate":"2021-11-08"},{"lineNumber":30,"author":{"gitId":"eltonyeh"},"content":"- **New Feature**: Ability to unassign tasks from `TaskAssignable` (Students and Groups)","lastModifiedDate":"2021-11-08"},{"lineNumber":31,"author":{"gitId":"eltonyeh"},"content":"  - This allows users to unassign tasks from students/groups. It is the reverse action compared to the feature above.","lastModifiedDate":"2021-11-08"},{"lineNumber":32,"author":{"gitId":"eltonyeh"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":33,"author":{"gitId":"eltonyeh"},"content":"#### Contributions to the user guide","lastModifiedDate":"2021-11-08"},{"lineNumber":34,"author":{"gitId":"eltonyeh"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":35,"author":{"gitId":"eltonyeh"},"content":"- Wrote the guide of the commands about:","lastModifiedDate":"2021-11-08"},{"lineNumber":36,"author":{"gitId":"eltonyeh"},"content":"  - clearing all entries","lastModifiedDate":"2021-11-08"},{"lineNumber":37,"author":{"gitId":"eltonyeh"},"content":"  - viewing student detail","lastModifiedDate":"2021-11-08"},{"lineNumber":38,"author":{"gitId":"eltonyeh"},"content":"  - editing student detail","lastModifiedDate":"2021-11-08"},{"lineNumber":39,"author":{"gitId":"eltonyeh"},"content":"  - adding a task","lastModifiedDate":"2021-11-08"},{"lineNumber":40,"author":{"gitId":"eltonyeh"},"content":"  - assigning and unassigning a task","lastModifiedDate":"2021-11-08"},{"lineNumber":41,"author":{"gitId":"eltonyeh"},"content":"- Fix some command mismatches","lastModifiedDate":"2021-11-08"},{"lineNumber":42,"author":{"gitId":"eltonyeh"},"content":"- Draft the command summary","lastModifiedDate":"2021-11-08"},{"lineNumber":43,"author":{"gitId":"eltonyeh"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":44,"author":{"gitId":"eltonyeh"},"content":"#### Contributions to the developer guide","lastModifiedDate":"2021-11-08"},{"lineNumber":45,"author":{"gitId":"eltonyeh"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":46,"author":{"gitId":"eltonyeh"},"content":"- Add implementation detail of the `UniqueId` interface, including the related UML diagram.","lastModifiedDate":"2021-11-08"},{"lineNumber":47,"author":{"gitId":"eltonyeh"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":48,"author":{"gitId":"eltonyeh"},"content":"#### Contributions to team-based tasks","lastModifiedDate":"2021-11-08"},{"lineNumber":49,"author":{"gitId":"eltonyeh"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":50,"author":{"gitId":"eltonyeh"},"content":"- Update site-wide settings, i.e., change some `Addressbook` to `TutorMaster` in `README.md`, `_config.yml`, etc.","lastModifiedDate":"2021-11-08"},{"lineNumber":51,"author":{"gitId":"eltonyeh"},"content":"- Wrote the acknowledgement note","lastModifiedDate":"2021-11-08"},{"lineNumber":52,"author":{"gitId":"eltonyeh"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":53,"author":{"gitId":"eltonyeh"},"content":"#### Community","lastModifiedDate":"2021-11-08"},{"lineNumber":54,"author":{"gitId":"eltonyeh"},"content":"  - Solved 16 issues assigned to myself. [Full list](https://github.com/AY2122S1-CS2103T-W16-4/tp/issues?q\u003dis%3Aissue+author%3Aeltonyeh)","lastModifiedDate":"2021-11-08"},{"lineNumber":55,"author":{"gitId":"eltonyeh"},"content":"  - Created 23 pull requests for our team. [Full list](https://github.com/AY2122S1-CS2103T-W16-4/tp/pulls?q\u003dis%3Apr+author%3Aeltonyeh)","lastModifiedDate":"2021-11-08"},{"lineNumber":56,"author":{"gitId":"eltonyeh"},"content":"    - Some notable PRs: [#62](https://github.com/AY2122S1-CS2103T-W16-4/tp/pull/62), [#81](https://github.com/AY2122S1-CS2103T-W16-4/tp/pull/81), [#129](https://github.com/AY2122S1-CS2103T-W16-4/tp/pull/129), [#213](https://github.com/AY2122S1-CS2103T-W16-4/tp/pull/213), [#237](https://github.com/AY2122S1-CS2103T-W16-4/tp/pull/237)","lastModifiedDate":"2021-11-08"},{"lineNumber":57,"author":{"gitId":"eltonyeh"},"content":"  - Reviewed 17 pull requests created by my teammates. [Full list](https://github.com/AY2122S1-CS2103T-W16-4/tp/pulls?q\u003dis%3Apr+reviewed-by%3Aeltonyeh)","lastModifiedDate":"2021-11-08"},{"lineNumber":58,"author":{"gitId":"eltonyeh"},"content":"    - Some notable reviews: [#71](https://github.com/AY2122S1-CS2103T-W16-4/tp/pull/71), [#74](https://github.com/AY2122S1-CS2103T-W16-4/tp/pull/74)","lastModifiedDate":"2021-11-08"},{"lineNumber":59,"author":{"gitId":"eltonyeh"},"content":"  - Report 12 bugs/suggestions for Group W08-2 to help them enhance their product. [Full list](https://github.com/eltonyeh/ped/issues)","lastModifiedDate":"2021-11-08"}],"authorContributionMap":{"eltonyeh":59}},{"path":"docs/team/jeremy-7007.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"jeremy-7007"},"content":"---","lastModifiedDate":"2021-09-28"},{"lineNumber":2,"author":{"gitId":"jeremy-7007"},"content":"layout: page","lastModifiedDate":"2021-09-28"},{"lineNumber":3,"author":{"gitId":"jeremy-7007"},"content":"title: Quoc Huy\u0027s Project Portfolio Page","lastModifiedDate":"2021-09-28"},{"lineNumber":4,"author":{"gitId":"jeremy-7007"},"content":"---","lastModifiedDate":"2021-09-28"},{"lineNumber":5,"author":{"gitId":"jeremy-7007"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":6,"author":{"gitId":"jeremy-7007"},"content":"My name is Le Quoc Huy, and I am part of the development team for Tutor Master","lastModifiedDate":"2021-11-08"},{"lineNumber":7,"author":{"gitId":"jeremy-7007"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":8,"author":{"gitId":"jeremy-7007"},"content":"### Project: Tutor Master","lastModifiedDate":"2021-11-08"},{"lineNumber":9,"author":{"gitId":"jeremy-7007"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":10,"author":{"gitId":"jeremy-7007"},"content":"TutorMaster is a desktop app for freelance tutors to manage their students‚Äô details and related tasks. It is optimised for use via a Command Line Interface (CLI) while still benefiting from a Graphical User Interface (GUI).","lastModifiedDate":"2021-11-08"},{"lineNumber":11,"author":{"gitId":"jeremy-7007"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":12,"author":{"gitId":"jeremy-7007"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2021-09-28"},{"lineNumber":13,"author":{"gitId":"jeremy-7007"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":14,"author":{"gitId":"jeremy-7007"},"content":"- **Code contributed:** [RepoSense link](https://nus-cs2103-ay2122s1.github.io/tp-dashboard/?search\u003d\u0026sort\u003dgroupTitle\u0026sortWithin\u003dtitle\u0026since\u003d2021-09-17\u0026timeframe\u003dcommit\u0026mergegroup\u003d\u0026groupSelect\u003dgroupByRepos\u0026breakdown\u003dfalse\u0026tabOpen\u003dtrue\u0026tabType\u003dauthorship\u0026tabAuthor\u003djeremy-7007\u0026tabRepo\u003dAY2122S1-CS2103T-W16-4%2Ftp%5Bmaster%5D\u0026authorshipIsMergeGroup\u003dfalse\u0026authorshipFileTypes\u003ddocs~functional-code~test-code~other\u0026authorshipIsBinaryFileTypeChecked\u003dfalse)","lastModifiedDate":"2021-11-08"},{"lineNumber":15,"author":{"gitId":"jeremy-7007"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":16,"author":{"gitId":"jeremy-7007"},"content":"- **Enhancements implemented:**","lastModifiedDate":"2021-11-08"},{"lineNumber":17,"author":{"gitId":"jeremy-7007"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":18,"author":{"gitId":"jeremy-7007"},"content":"  - Logic","lastModifiedDate":"2021-11-08"},{"lineNumber":19,"author":{"gitId":"jeremy-7007"},"content":"    - Created commands for assigning and unassigning a task to a student [#78](https://github.com/AY2122S1-CS2103T-W16-4/tp/pull/78)","lastModifiedDate":"2021-11-08"},{"lineNumber":20,"author":{"gitId":"jeremy-7007"},"content":"    - Created commands for marking a student\u0027s task as *done* and *not done* [#141](https://github.com/AY2122S1-CS2103T-W16-4/tp/pull/141)","lastModifiedDate":"2021-11-08"},{"lineNumber":21,"author":{"gitId":"jeremy-7007"},"content":"    - Created command to delete tasks, removing task assignments in the process [#142](https://github.com/AY2122S1-CS2103T-W16-4/tp/pull/142)","lastModifiedDate":"2021-11-08"},{"lineNumber":22,"author":{"gitId":"jeremy-7007"},"content":"  - Model","lastModifiedDate":"2021-11-08"},{"lineNumber":23,"author":{"gitId":"jeremy-7007"},"content":"    - Added support for keeping a list of assigned tasks in each student [#78](https://github.com/AY2122S1-CS2103T-W16-4/tp/pull/78)","lastModifiedDate":"2021-11-08"},{"lineNumber":24,"author":{"gitId":"jeremy-7007"},"content":"    - Added support for keeping track of whether a student has done a task assigned to him [#141](https://github.com/AY2122S1-CS2103T-W16-4/tp/pull/141)","lastModifiedDate":"2021-11-08"},{"lineNumber":25,"author":{"gitId":"jeremy-7007"},"content":"  - Storage","lastModifiedDate":"2021-11-08"},{"lineNumber":26,"author":{"gitId":"jeremy-7007"},"content":"    - Added storage method to keep track of assigned tasks in each student [#78](https://github.com/AY2122S1-CS2103T-W16-4/tp/pull/78)","lastModifiedDate":"2021-11-08"},{"lineNumber":27,"author":{"gitId":"jeremy-7007"},"content":"    - Added storage method to keep track of whether a student has done a task assigned to him [#141](https://github.com/AY2122S1-CS2103T-W16-4/tp/pull/141)","lastModifiedDate":"2021-11-08"},{"lineNumber":28,"author":{"gitId":"jeremy-7007"},"content":"  - UI","lastModifiedDate":"2021-11-08"},{"lineNumber":29,"author":{"gitId":"jeremy-7007"},"content":"    - Showed in the student details whether tasks assigned to him has been done [#225](https://github.com/AY2122S1-CS2103T-W16-4/tp/pull/225)","lastModifiedDate":"2021-11-08"},{"lineNumber":30,"author":{"gitId":"jeremy-7007"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":31,"author":{"gitId":"jeremy-7007"},"content":"- **Contributions to documentation:**","lastModifiedDate":"2021-11-08"},{"lineNumber":32,"author":{"gitId":"jeremy-7007"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":33,"author":{"gitId":"jeremy-7007"},"content":"  - **User Guide**","lastModifiedDate":"2021-11-08"},{"lineNumber":34,"author":{"gitId":"jeremy-7007"},"content":"    - Added documentation for *add student* command [#34](https://github.com/AY2122S1-CS2103T-W16-4/tp/pull/34) [#37](https://github.com/AY2122S1-CS2103T-W16-4/tp/pull/37)","lastModifiedDate":"2021-11-08"},{"lineNumber":35,"author":{"gitId":"jeremy-7007"},"content":"    - Added documentation for *help* command [#34](https://github.com/AY2122S1-CS2103T-W16-4/tp/pull/34)","lastModifiedDate":"2021-11-08"},{"lineNumber":36,"author":{"gitId":"jeremy-7007"},"content":"  - **Developer Guide**","lastModifiedDate":"2021-11-08"},{"lineNumber":37,"author":{"gitId":"jeremy-7007"},"content":"    - Added use cases for deleting and assigning tasks [#38](https://github.com/AY2122S1-CS2103T-W16-4/tp/pull/38)","lastModifiedDate":"2021-11-08"},{"lineNumber":38,"author":{"gitId":"jeremy-7007"},"content":"    - Detailed the implementation of task assignment [#99](https://github.com/AY2122S1-CS2103T-W16-4/tp/pull/99)","lastModifiedDate":"2021-11-08"},{"lineNumber":39,"author":{"gitId":"jeremy-7007"},"content":"    - Updated the model diagram and description [#251](https://github.com/AY2122S1-CS2103T-W16-4/tp/pull/251)","lastModifiedDate":"2021-11-08"},{"lineNumber":40,"author":{"gitId":"jeremy-7007"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":41,"author":{"gitId":"jeremy-7007"},"content":"- **Contributions to team-based tasks:**","lastModifiedDate":"2021-11-08"},{"lineNumber":42,"author":{"gitId":"jeremy-7007"},"content":"  - Set up the GitHub team org and repo","lastModifiedDate":"2021-11-08"},{"lineNumber":43,"author":{"gitId":"jeremy-7007"},"content":"  - Managed releases","lastModifiedDate":"2021-11-08"},{"lineNumber":44,"author":{"gitId":"jeremy-7007"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":45,"author":{"gitId":"jeremy-7007"},"content":"- **Review/mentoring contributions:**","lastModifiedDate":"2021-11-08"},{"lineNumber":46,"author":{"gitId":"jeremy-7007"},"content":"  - Discussed and commented on index bug fixing [#197](https://github.com/AY2122S1-CS2103T-W16-4/tp/pull/197)","lastModifiedDate":"2021-11-08"},{"lineNumber":47,"author":{"gitId":"jeremy-7007"},"content":"  - Initiated discussion on using unique ids to link different entities like student, task and group","lastModifiedDate":"2021-11-08"}],"authorContributionMap":{"jeremy-7007":47}},{"path":"docs/team/kvihashini.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"kvihashini"},"content":"---","lastModifiedDate":"2021-09-27"},{"lineNumber":2,"author":{"gitId":"kvihashini"},"content":"layout: page","lastModifiedDate":"2021-09-27"},{"lineNumber":3,"author":{"gitId":"kvihashini"},"content":"title: Keerthi\u0027s Project Portfolio Page","lastModifiedDate":"2021-09-27"},{"lineNumber":4,"author":{"gitId":"kvihashini"},"content":"---","lastModifiedDate":"2021-09-27"},{"lineNumber":5,"author":{"gitId":"kvihashini"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":6,"author":{"gitId":"kvihashini"},"content":"My name is Keerthi Vihashini and I am one of the developers of Tutor Master.","lastModifiedDate":"2021-11-06"},{"lineNumber":7,"author":{"gitId":"kvihashini"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":8,"author":{"gitId":"kvihashini"},"content":"TutorMaster is a desktop app for freelance tutors to manage their students‚Äô details and related tasks. It is optimised for use via a Command Line Interface (CLI) while still benefiting from a Graphical User Interface (GUI).","lastModifiedDate":"2021-11-07"},{"lineNumber":9,"author":{"gitId":"kvihashini"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":10,"author":{"gitId":"kvihashini"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2021-09-27"},{"lineNumber":11,"author":{"gitId":"kvihashini"},"content":"","lastModifiedDate":"2021-09-27"},{"lineNumber":12,"author":{"gitId":"kvihashini"},"content":"**Code contributed**: [RepoSense](https://nus-cs2103-ay2122s1.github.io/tp-dashboard/?search\u003d\u0026sort\u003dgroupTitle\u0026sortWithin\u003dtitle\u0026since\u003d2021-09-17\u0026timeframe\u003dcommit\u0026mergegroup\u003d\u0026groupSelect\u003dgroupByRepos\u0026breakdown\u003dfalse\u0026tabOpen\u003dtrue\u0026tabType\u003dauthorship\u0026tabAuthor\u003dkvihashini\u0026tabRepo\u003dAY2122S1-CS2103T-W16-4%2Ftp%5Bmaster%5D\u0026authorshipIsMergeGroup\u003dfalse\u0026authorshipFileTypes\u003ddocs~functional-code~test-code~other\u0026authorshipIsBinaryFileTypeChecked\u003dfalse)","lastModifiedDate":"2021-11-06"},{"lineNumber":13,"author":{"gitId":"kvihashini"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":14,"author":{"gitId":"kvihashini"},"content":"**Pull Requests and Issues**: [PRs](https://github.com/AY2122S1-CS2103T-W16-4/tp/pulls?q\u003dis%3Apr+author%3Akvihashini)","lastModifiedDate":"2021-11-08"},{"lineNumber":15,"author":{"gitId":"kvihashini"},"content":", [Issues](https://github.com/AY2122S1-CS2103T-W16-4/tp/issues?q\u003dis%3Aissue+author%3Akvihashini+is%3Aclosed)","lastModifiedDate":"2021-11-08"},{"lineNumber":16,"author":{"gitId":"kvihashini"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":17,"author":{"gitId":"kvihashini"},"content":"**Enhancements implemented**:","lastModifiedDate":"2021-11-06"},{"lineNumber":18,"author":{"gitId":"kvihashini"},"content":"* Added skeleton model for Groups. [\\#48](https://github.com/AY2122S1-CS2103T-W16-4/tp/issues/48)","lastModifiedDate":"2021-10-17"},{"lineNumber":19,"author":{"gitId":"kvihashini"},"content":"* Added \u0027view student\u0027 command and wrote tests for the command. [\\#47](https://github.com/AY2122S1-CS2103T-W16-4/tp/issues/47)","lastModifiedDate":"2021-10-17"},{"lineNumber":20,"author":{"gitId":"kvihashini"},"content":"* Added \u0027delete group\u0027 command and wrote tests for the command. [\\#89](https://github.com/AY2122S1-CS2103T-W16-4/tp/issues/89)","lastModifiedDate":"2021-10-24"},{"lineNumber":21,"author":{"gitId":"kvihashini"},"content":"* Added \u0027view group\u0027 command and wrote tests for the command. [\\#123](https://github.com/AY2122S1-CS2103T-W16-4/tp/issues/123)","lastModifiedDate":"2021-11-07"},{"lineNumber":22,"author":{"gitId":"kvihashini"},"content":"* UI","lastModifiedDate":"2021-11-06"},{"lineNumber":23,"author":{"gitId":"kvihashini"},"content":"    * Designed UI mockup [\\#2](https://github.com/AY2122S1-CS2103T-W16-4/tp/issues/2)","lastModifiedDate":"2021-11-06"},{"lineNumber":24,"author":{"gitId":"kvihashini"},"content":"    * Modifed UI to include Tasks and Groups panel to view all tasks and groups a tutor has. [\\#56](https://github.com/AY2122S1-CS2103T-W16-4/tp/issues/56). [\\#88](https://github.com/AY2122S1-CS2103T-W16-4/tp/issues/88)","lastModifiedDate":"2021-11-06"},{"lineNumber":25,"author":{"gitId":"kvihashini"},"content":"    * Created GroupViewCard to support viewing a group in the Viewing Panel. [\\#123](https://github.com/AY2122S1-CS2103T-W16-4/tp/issues/123)","lastModifiedDate":"2021-11-06"},{"lineNumber":26,"author":{"gitId":"kvihashini"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":27,"author":{"gitId":"kvihashini"},"content":"**Documentation**:","lastModifiedDate":"2021-11-06"},{"lineNumber":28,"author":{"gitId":"kvihashini"},"content":"* User Guide:","lastModifiedDate":"2021-09-27"},{"lineNumber":29,"author":{"gitId":"kvihashini"},"content":"  * Added documentation for the features `view group`, `delete task` and `assign task` [\\#10](https://github.com/AY2122S1-CS2103T-W16-4/tp/issues/10)","lastModifiedDate":"2021-11-06"},{"lineNumber":30,"author":{"gitId":"kvihashini"},"content":"  * Added section on \"How To Use The User Guide\" [\\#244](https://github.com/AY2122S1-CS2103T-W16-4/tp/pull/244)","lastModifiedDate":"2021-11-08"},{"lineNumber":31,"author":{"gitId":"kvihashini"},"content":"* Developer Guide:","lastModifiedDate":"2021-09-27"},{"lineNumber":32,"author":{"gitId":"kvihashini"},"content":"  * Added non-functional requirements and glossary terms. [\\#3](https://github.com/AY2122S1-CS2103T-W16-4/tp/issues/3), [\\#4](https://github.com/AY2122S1-CS2103T-W16-4/tp/issues/4)","lastModifiedDate":"2021-10-17"},{"lineNumber":33,"author":{"gitId":"kvihashini"},"content":"  * Added implementation of feature `view student\u0027 [\\#104](https://github.com/AY2122S1-CS2103T-W16-4/tp/pull/104)","lastModifiedDate":"2021-11-07"},{"lineNumber":34,"author":{"gitId":"kvihashini"},"content":"  * Added instructions for manual testing and included use case for saving data [\\#234](https://github.com/AY2122S1-CS2103T-W16-4/tp/pull/234)","lastModifiedDate":"2021-11-08"},{"lineNumber":35,"author":{"gitId":"kvihashini"},"content":"  * Updated UI class diagram to match project [\\#247](https://github.com/AY2122S1-CS2103T-W16-4/tp/pull/247)","lastModifiedDate":"2021-11-08"},{"lineNumber":36,"author":{"gitId":"kvihashini"},"content":"  * Updated sequence diagram for \u0027Logic\u0027 to match project [\\#247](https://github.com/AY2122S1-CS2103T-W16-4/tp/pull/247)","lastModifiedDate":"2021-11-08"},{"lineNumber":37,"author":{"gitId":"kvihashini"},"content":"  ","lastModifiedDate":"2021-11-08"},{"lineNumber":38,"author":{"gitId":"kvihashini"},"content":"* README:","lastModifiedDate":"2021-10-17"},{"lineNumber":39,"author":{"gitId":"kvihashini"},"content":"  * Updated README to match project. [\\#25](https://github.com/AY2122S1-CS2103T-W16-4/tp/issues/25)","lastModifiedDate":"2021-10-17"}],"authorContributionMap":{"kvihashini":39}},{"path":"docs/team/neha-5678.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"Neha-5678"},"content":"---","lastModifiedDate":"2021-11-07"},{"lineNumber":2,"author":{"gitId":"Neha-5678"},"content":"layout: page","lastModifiedDate":"2021-11-07"},{"lineNumber":3,"author":{"gitId":"Neha-5678"},"content":"title: Neharikha\u0027s Project Portfolio Page","lastModifiedDate":"2021-11-07"},{"lineNumber":4,"author":{"gitId":"Neha-5678"},"content":"---","lastModifiedDate":"2021-11-07"},{"lineNumber":5,"author":{"gitId":"Neha-5678"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":6,"author":{"gitId":"Neha-5678"},"content":"My name is Srinivasan Neharikha and I am one of the developers of TutorMaster.","lastModifiedDate":"2021-11-05"},{"lineNumber":7,"author":{"gitId":"Neha-5678"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":8,"author":{"gitId":"Neha-5678"},"content":"### Project: Tutor Master","lastModifiedDate":"2021-09-28"},{"lineNumber":9,"author":{"gitId":"Neha-5678"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":10,"author":{"gitId":"Neha-5678"},"content":"TutorMaster is a desktop app for freelance tutors to manage their students‚Äô details and related tasks.","lastModifiedDate":"2021-11-05"},{"lineNumber":11,"author":{"gitId":"Neha-5678"},"content":"It is optimised for use via a Command Line Interface (CLI) while still benefiting from a Graphical User Interface (GUI).","lastModifiedDate":"2021-11-05"},{"lineNumber":12,"author":{"gitId":"Neha-5678"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":13,"author":{"gitId":"Neha-5678"},"content":"Given below are my contributions to the project.","lastModifiedDate":"2021-09-28"},{"lineNumber":14,"author":{"gitId":"Neha-5678"},"content":"","lastModifiedDate":"2021-09-28"},{"lineNumber":15,"author":{"gitId":"Neha-5678"},"content":"**Code contributed**: [RepoSense](https://nus-cs2103-ay2122s1.github.io/tp-dashboard/?search\u003d\u0026sort\u003dgroupTitle\u0026sortWithin\u003dtitle\u0026since\u003d2021-09-17\u0026timeframe\u003dcommit\u0026mergegroup\u003d\u0026groupSelect\u003dgroupByRepos\u0026breakdown\u003dfalse\u0026tabOpen\u003dtrue\u0026tabType\u003dauthorship\u0026tabAuthor\u003dNeha-5678\u0026tabRepo\u003dAY2122S1-CS2103T-W16-4%2Ftp%5Bmaster%5D\u0026authorshipIsMergeGroup\u003dfalse\u0026authorshipFileTypes\u003ddocs~functional-code~test-code\u0026authorshipIsBinaryFileTypeChecked\u003dfalse)","lastModifiedDate":"2021-11-07"},{"lineNumber":16,"author":{"gitId":"Neha-5678"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":17,"author":{"gitId":"Neha-5678"},"content":"* **Enhancements Implemented**:","lastModifiedDate":"2021-11-07"},{"lineNumber":18,"author":{"gitId":"Neha-5678"},"content":"  * Logic","lastModifiedDate":"2021-11-05"},{"lineNumber":19,"author":{"gitId":"Neha-5678"},"content":"    * Created parsers and commands for edit task feature [\\#94](https://github.com/AY2122S1-CS2103T-W16-4/tp/issues/94)","lastModifiedDate":"2021-11-08"},{"lineNumber":20,"author":{"gitId":"Neha-5678"},"content":"    * Created parsers and commands for find task feature [\\#116](https://github.com/AY2122S1-CS2103T-W16-4/tp/issues/116)","lastModifiedDate":"2021-11-08"},{"lineNumber":21,"author":{"gitId":"Neha-5678"},"content":"    * Created list task feature [\\#131](https://github.com/AY2122S1-CS2103T-W16-4/tp/issues/131)","lastModifiedDate":"2021-11-05"},{"lineNumber":22,"author":{"gitId":"Neha-5678"},"content":"    * Edited delete group feature to delete the group ids from the respective persons [\\#134](https://github.com/AY2122S1-CS2103T-W16-4/tp/issues/134)","lastModifiedDate":"2021-11-05"},{"lineNumber":23,"author":{"gitId":"Neha-5678"},"content":"  * Model","lastModifiedDate":"2021-11-05"},{"lineNumber":24,"author":{"gitId":"Neha-5678"},"content":"    * Added Model for Tasks [\\#54](https://github.com/AY2122S1-CS2103T-W16-4/tp/issues/54)","lastModifiedDate":"2021-11-05"},{"lineNumber":25,"author":{"gitId":"Neha-5678"},"content":"  * Storage","lastModifiedDate":"2021-11-05"},{"lineNumber":26,"author":{"gitId":"Neha-5678"},"content":"    * Added storage for Tasks [\\#72](https://github.com/AY2122S1-CS2103T-W16-4/tp/issues/72)","lastModifiedDate":"2021-11-05"},{"lineNumber":27,"author":{"gitId":"Neha-5678"},"content":"    * Added storage for Groups [\\#134](https://github.com/AY2122S1-CS2103T-W16-4/tp/issues/134)","lastModifiedDate":"2021-11-05"},{"lineNumber":28,"author":{"gitId":"Neha-5678"},"content":"    * Difficulty faced: It was difficult to save the Unique Id objects of each Task or Group in the Json file as ","lastModifiedDate":"2021-11-08"},{"lineNumber":29,"author":{"gitId":"Neha-5678"},"content":"      the Json file only supports some types. Hence, I had to convert it to a string to save it in the Json file. When ","lastModifiedDate":"2021-11-08"},{"lineNumber":30,"author":{"gitId":"Neha-5678"},"content":"      parsing the Json files, I had to convert the string to a UniqueId object again which involved additional ","lastModifiedDate":"2021-11-08"},{"lineNumber":31,"author":{"gitId":"Neha-5678"},"content":"      constructors.","lastModifiedDate":"2021-11-08"},{"lineNumber":32,"author":{"gitId":"Neha-5678"},"content":"  * Included more sample data for the various aspects of our project (e.g. Students, Tasks, Groups etc.) so that they appear ","lastModifiedDate":"2021-11-08"},{"lineNumber":33,"author":{"gitId":"Neha-5678"},"content":"    when the jar file is first launched. This aims to make the application more user-friendly. [\\#214](https://github.com/AY2122S1-CS2103T-W16-4/tp/pull/214)","lastModifiedDate":"2021-11-08"},{"lineNumber":34,"author":{"gitId":"Neha-5678"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":35,"author":{"gitId":"Neha-5678"},"content":"* **Documentation**:","lastModifiedDate":"2021-09-28"},{"lineNumber":36,"author":{"gitId":"Neha-5678"},"content":"  * User Guide:","lastModifiedDate":"2021-09-28"},{"lineNumber":37,"author":{"gitId":"Neha-5678"},"content":"    * Added documentation for the features `Editing a task`, `Listing all tasks` and `Finding a task by name` [\\#140](https://github.com/AY2122S1-CS2103T-W16-4/tp/pull/140/files), [\\#20](https://github.com/AY2122S1-CS2103T-W16-4/tp/issues/20)","lastModifiedDate":"2021-11-07"},{"lineNumber":38,"author":{"gitId":"Neha-5678"},"content":"    * Added screenshots for Quick Start [\\#235](https://github.com/AY2122S1-CS2103T-W16-4/tp/issues/235)","lastModifiedDate":"2021-11-07"},{"lineNumber":39,"author":{"gitId":"Neha-5678"},"content":"    * Added the Managing Tasks section in the Quick Start [\\#252](https://github.com/AY2122S1-CS2103T-W16-4/tp/pull/252)","lastModifiedDate":"2021-11-08"},{"lineNumber":40,"author":{"gitId":"Neha-5678"},"content":"  * Developer Guide:","lastModifiedDate":"2021-09-28"},{"lineNumber":41,"author":{"gitId":"Neha-5678"},"content":"    * Added value proposition to match our project direction. [\\#35](https://github.com/AY2122S1-CS2103T-W16-4/tp/issues/35)","lastModifiedDate":"2021-11-07"},{"lineNumber":42,"author":{"gitId":"Neha-5678"},"content":"    * Wrote some user stories [\\#39](https://github.com/AY2122S1-CS2103T-W16-4/tp/issues/39)","lastModifiedDate":"2021-11-07"},{"lineNumber":43,"author":{"gitId":"Neha-5678"},"content":"    * Added implementation details for **Edit a task** [\\#235](https://github.com/AY2122S1-CS2103T-W16-4/tp/issues/235)","lastModifiedDate":"2021-11-08"},{"lineNumber":44,"author":{"gitId":"Neha-5678"},"content":"    * Edited the existing diagrams to match our project\u0027s implementation [\\#245](https://github.com/AY2122S1-CS2103T-W16-4/tp/issues/245)","lastModifiedDate":"2021-11-08"},{"lineNumber":45,"author":{"gitId":"Neha-5678"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":46,"author":{"gitId":"Neha-5678"},"content":"* **Testing**:","lastModifiedDate":"2021-11-08"},{"lineNumber":47,"author":{"gitId":"Neha-5678"},"content":"  * Logic.Commands","lastModifiedDate":"2021-11-08"},{"lineNumber":48,"author":{"gitId":"Neha-5678"},"content":"    * Testing for EditTaskCommand [\\#95](https://github.com/AY2122S1-CS2103T-W16-4/tp/issues/95)","lastModifiedDate":"2021-11-08"},{"lineNumber":49,"author":{"gitId":"Neha-5678"},"content":"    * Testing for FindTaskCommand [\\#116](https://github.com/AY2122S1-CS2103T-W16-4/tp/issues/116)","lastModifiedDate":"2021-11-08"},{"lineNumber":50,"author":{"gitId":"Neha-5678"},"content":"    * Testing for ListTaskCommand [\\#131](https://github.com/AY2122S1-CS2103T-W16-4/tp/issues/131)","lastModifiedDate":"2021-11-08"},{"lineNumber":51,"author":{"gitId":"Neha-5678"},"content":"  * Storage","lastModifiedDate":"2021-11-08"},{"lineNumber":52,"author":{"gitId":"Neha-5678"},"content":"    * JsonAdaptedTask [\\#73](https://github.com/AY2122S1-CS2103T-W16-4/tp/issues/73)","lastModifiedDate":"2021-11-08"},{"lineNumber":53,"author":{"gitId":"Neha-5678"},"content":"    * JsonAdaptedGroup [\\#221](https://github.com/AY2122S1-CS2103T-W16-4/tp/issues/221)","lastModifiedDate":"2021-11-08"},{"lineNumber":54,"author":{"gitId":"Neha-5678"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":55,"author":{"gitId":"Neha-5678"},"content":"* **Other Contributions**:","lastModifiedDate":"2021-11-08"},{"lineNumber":56,"author":{"gitId":"Neha-5678"},"content":"  * Team Tasks:","lastModifiedDate":"2021-11-08"},{"lineNumber":57,"author":{"gitId":"Neha-5678"},"content":"    * Documented the value proposition of our product [\\#35](https://github.com/AY2122S1-CS2103T-W16-4/tp/issues/35)","lastModifiedDate":"2021-11-08"},{"lineNumber":58,"author":{"gitId":"Neha-5678"},"content":"    * Add QuickStart to UserGuide [\\#252](https://github.com/AY2122S1-CS2103T-W16-4/tp/pull/252)","lastModifiedDate":"2021-11-08"},{"lineNumber":59,"author":{"gitId":"Neha-5678"},"content":"  * Contributions beyond the project team: ","lastModifiedDate":"2021-11-08"},{"lineNumber":60,"author":{"gitId":"Neha-5678"},"content":"    * Found and reported bugs or shared suggestions to improve W17-1 team\u0027s project. [PED issues](https://github.com/neha-5678/ped/issues)","lastModifiedDate":"2021-11-08"},{"lineNumber":61,"author":{"gitId":"Neha-5678"},"content":"  ","lastModifiedDate":"2021-11-08"},{"lineNumber":62,"author":{"gitId":"Neha-5678"},"content":"","lastModifiedDate":"2021-11-05"}],"authorContributionMap":{"Neha-5678":62}},{"path":"docs/team/tanhuakun.md","fileType":"docs","lines":[{"lineNumber":1,"author":{"gitId":"tanhuakun"},"content":"---","lastModifiedDate":"2021-11-08"},{"lineNumber":2,"author":{"gitId":"tanhuakun"},"content":"layout: page","lastModifiedDate":"2021-11-08"},{"lineNumber":3,"author":{"gitId":"tanhuakun"},"content":"title: Tan Hua Kun\u0027s Project Portfolio Page","lastModifiedDate":"2021-11-08"},{"lineNumber":4,"author":{"gitId":"tanhuakun"},"content":"---","lastModifiedDate":"2021-11-08"},{"lineNumber":5,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":6,"author":{"gitId":"tanhuakun"},"content":"My name is Tan Hua Kun and I am one of the developers of Tutor Master.","lastModifiedDate":"2021-11-08"},{"lineNumber":7,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":8,"author":{"gitId":"tanhuakun"},"content":"#### Project Tutor Master","lastModifiedDate":"2021-11-08"},{"lineNumber":9,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":10,"author":{"gitId":"tanhuakun"},"content":"Tutor Master is a desktop application aimed to help Tutors manage and organise their many students and lessons. It is CLI oriented and is made for those who are good with typing.","lastModifiedDate":"2021-11-08"},{"lineNumber":11,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":12,"author":{"gitId":"tanhuakun"},"content":"#### What I have contributed:","lastModifiedDate":"2021-11-08"},{"lineNumber":13,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":14,"author":{"gitId":"tanhuakun"},"content":"View my code contribution here: [RepoSense](https://nus-cs2103-ay2122s1.github.io/tp-dashboard/?search\u003dtanhuakun\u0026sort\u003dgroupTitle\u0026sortWithin\u003dtitle\u0026timeframe\u003dcommit\u0026mergegroup\u003d\u0026groupSelect\u003dgroupByRepos\u0026breakdown\u003dtrue\u0026checkedFileTypes\u003ddocs~functional-code~test-code~other\u0026since\u003d2021-09-17\u0026tabOpen\u003dtrue\u0026tabType\u003dauthorship\u0026tabAuthor\u003dtanhuakun\u0026tabRepo\u003dAY2122S1-CS2103T-W16-4%2Ftp%5Bmaster%5D\u0026authorshipIsMergeGroup\u003dfalse\u0026authorshipFileTypes\u003ddocs~functional-code~test-code~other\u0026authorshipIsBinaryFileTypeChecked\u003dfalse)","lastModifiedDate":"2021-11-08"},{"lineNumber":15,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":16,"author":{"gitId":"tanhuakun"},"content":"* ##### Features","lastModifiedDate":"2021-11-08"},{"lineNumber":17,"author":{"gitId":"tanhuakun"},"content":"    * Logic","lastModifiedDate":"2021-10-19"},{"lineNumber":18,"author":{"gitId":"tanhuakun"},"content":"        * Created Parsers and Commands to deal with lessons and exams, adding people to a group.","lastModifiedDate":"2021-11-08"},{"lineNumber":19,"author":{"gitId":"tanhuakun"},"content":"        * Created command to view schedule.","lastModifiedDate":"2021-11-04"},{"lineNumber":20,"author":{"gitId":"tanhuakun"},"content":"    * Model","lastModifiedDate":"2021-10-19"},{"lineNumber":21,"author":{"gitId":"tanhuakun"},"content":"        * Person","lastModifiedDate":"2021-10-19"},{"lineNumber":22,"author":{"gitId":"tanhuakun"},"content":"            * Added Lessons List and Exam to [Person.java](https://github.com/AY2122S1-CS2103T-W16-4/tp/blob/master/src/main/java/seedu/address/model/person/Person.java).","lastModifiedDate":"2021-11-08"},{"lineNumber":23,"author":{"gitId":"tanhuakun"},"content":"            * Added [PersonWithDetails.java](https://github.com/AY2122S1-CS2103T-W16-4/tp/blob/master/src/main/java/seedu/address/model/person/PersonWithDetails.java) for the UI to get a person with all his details.","lastModifiedDate":"2021-11-08"},{"lineNumber":24,"author":{"gitId":"tanhuakun"},"content":"        * Lesson","lastModifiedDate":"2021-11-08"},{"lineNumber":25,"author":{"gitId":"tanhuakun"},"content":"            * Created the entire [lesson package](https://github.com/AY2122S1-CS2103T-W16-4/tp/tree/master/src/main/java/seedu/address/model/lesson).","lastModifiedDate":"2021-11-08"},{"lineNumber":26,"author":{"gitId":"tanhuakun"},"content":"        * Model","lastModifiedDate":"2021-11-04"},{"lineNumber":27,"author":{"gitId":"tanhuakun"},"content":"            * Update [ModelManager.java](https://github.com/AY2122S1-CS2103T-W16-4/tp/blob/master/src/main/java/seedu/address/model/ModelManager.java) to include methods for ViewingType and viewing contents.","lastModifiedDate":"2021-11-08"},{"lineNumber":28,"author":{"gitId":"tanhuakun"},"content":"        * Id.UniqueIdMapper","lastModifiedDate":"2021-11-04"},{"lineNumber":29,"author":{"gitId":"tanhuakun"},"content":"            * [Implemented this interface](https://github.com/AY2122S1-CS2103T-W16-4/tp/blob/master/src/main/java/seedu/address/model/id/UniqueIdMapper.java) for retrieving HasUniqueId objects when given UniqueIds.","lastModifiedDate":"2021-11-08"},{"lineNumber":30,"author":{"gitId":"tanhuakun"},"content":"    * Storage","lastModifiedDate":"2021-10-19"},{"lineNumber":31,"author":{"gitId":"tanhuakun"},"content":"        * Enabled storage for Lessons and Exams. Basically [JsonAdaptedLesson](https://github.com/AY2122S1-CS2103T-W16-4/tp/blob/master/src/main/java/seedu/address/storage/JsonAdaptedLesson.java),","lastModifiedDate":"2021-11-08"},{"lineNumber":32,"author":{"gitId":"tanhuakun"},"content":"          [JsonAdaptedExam](https://github.com/AY2122S1-CS2103T-W16-4/tp/blob/master/src/main/java/seedu/address/storage/JsonAdaptedExam.java)","lastModifiedDate":"2021-11-08"},{"lineNumber":33,"author":{"gitId":"tanhuakun"},"content":"          and [JsonAdaptedTimeslot](https://github.com/AY2122S1-CS2103T-W16-4/tp/blob/master/src/main/java/seedu/address/storage/JsonAdaptedTimeslot.java).","lastModifiedDate":"2021-11-08"},{"lineNumber":34,"author":{"gitId":"tanhuakun"},"content":"    * UI","lastModifiedDate":"2021-11-04"},{"lineNumber":35,"author":{"gitId":"tanhuakun"},"content":"        * Viewing Panel","lastModifiedDate":"2021-11-04"},{"lineNumber":36,"author":{"gitId":"tanhuakun"},"content":"            * Created [ViewingPanel](https://github.com/AY2122S1-CS2103T-W16-4/tp/blob/master/src/main/java/seedu/address/ui/ViewingPanel.java),","lastModifiedDate":"2021-11-08"},{"lineNumber":37,"author":{"gitId":"tanhuakun"},"content":"              [PersonViewCard](https://github.com/AY2122S1-CS2103T-W16-4/tp/blob/master/src/main/java/seedu/address/ui/PersonViewCard.java),","lastModifiedDate":"2021-11-08"},{"lineNumber":38,"author":{"gitId":"tanhuakun"},"content":"              [LessonScheduleCard](https://github.com/AY2122S1-CS2103T-W16-4/tp/blob/master/src/main/java/seedu/address/ui/LessonScheduleCard.java)","lastModifiedDate":"2021-11-08"},{"lineNumber":39,"author":{"gitId":"tanhuakun"},"content":"              and [LessonSchedulePanel](https://github.com/AY2122S1-CS2103T-W16-4/tp/blob/master/src/main/java/seedu/address/ui/LessonSchedulePanel.java) for the viewing panel.","lastModifiedDate":"2021-11-08"},{"lineNumber":40,"author":{"gitId":"tanhuakun"},"content":"            * Modified other UI components, css and FXML files to enable the viewing panel.","lastModifiedDate":"2021-11-08"},{"lineNumber":41,"author":{"gitId":"tanhuakun"},"content":"* ##### Documentation","lastModifiedDate":"2021-11-08"},{"lineNumber":42,"author":{"gitId":"tanhuakun"},"content":"    * User Guide","lastModifiedDate":"2021-11-08"},{"lineNumber":43,"author":{"gitId":"tanhuakun"},"content":"        * Student lesson and exam commands","lastModifiedDate":"2021-11-08"},{"lineNumber":44,"author":{"gitId":"tanhuakun"},"content":"        * Schedule Command","lastModifiedDate":"2021-11-08"},{"lineNumber":45,"author":{"gitId":"tanhuakun"},"content":"        * [Quick start: Managing Students](https://ay2122s1-cs2103t-w16-4.github.io/tp/UserGuide.html#managing-students)","lastModifiedDate":"2021-11-08"},{"lineNumber":46,"author":{"gitId":"tanhuakun"},"content":"    * Developer Guide","lastModifiedDate":"2021-11-08"},{"lineNumber":47,"author":{"gitId":"tanhuakun"},"content":"        * Wrote some user stories","lastModifiedDate":"2021-11-08"},{"lineNumber":48,"author":{"gitId":"tanhuakun"},"content":"        * Add implementation details for [Changing View Panel](https://ay2122s1-cs2103t-w16-4.github.io/tp/DeveloperGuide.html#changing-view-panel) and [Lessons](https://ay2122s1-cs2103t-w16-4.github.io/tp/DeveloperGuide.html#lessons).","lastModifiedDate":"2021-11-08"},{"lineNumber":49,"author":{"gitId":"tanhuakun"},"content":"        * Add some instructions for manual testing and an adding lesson use case.","lastModifiedDate":"2021-11-08"},{"lineNumber":50,"author":{"gitId":"tanhuakun"},"content":"* ##### Testing","lastModifiedDate":"2021-11-08"},{"lineNumber":51,"author":{"gitId":"tanhuakun"},"content":"    * [Tests for lesson](https://github.com/AY2122S1-CS2103T-W16-4/tp/tree/master/src/test/java/seedu/address/model/lesson)","lastModifiedDate":"2021-11-08"},{"lineNumber":52,"author":{"gitId":"tanhuakun"},"content":"    * Logic.Parser","lastModifiedDate":"2021-11-08"},{"lineNumber":53,"author":{"gitId":"tanhuakun"},"content":"        * [Add exams parser](https://github.com/AY2122S1-CS2103T-W16-4/tp/blob/master/src/test/java/seedu/address/logic/parser/persons/PersonAddExamParserTest.java) and [remove exam parser](https://github.com/AY2122S1-CS2103T-W16-4/tp/blob/master/src/test/java/seedu/address/logic/parser/persons/PersonRemoveExamParserTest.java)","lastModifiedDate":"2021-11-08"},{"lineNumber":54,"author":{"gitId":"tanhuakun"},"content":"        * [Add lesson parser](https://github.com/AY2122S1-CS2103T-W16-4/tp/blob/master/src/test/java/seedu/address/logic/parser/persons/PersonAddLessonParserTest.java) and [remove lesson parser](https://github.com/AY2122S1-CS2103T-W16-4/tp/blob/master/src/test/java/seedu/address/logic/parser/persons/PersonRemoveLessonParserTest.java)","lastModifiedDate":"2021-11-08"},{"lineNumber":55,"author":{"gitId":"tanhuakun"},"content":"        * [Add group parser](https://github.com/AY2122S1-CS2103T-W16-4/tp/blob/master/src/test/java/seedu/address/logic/parser/groups/AddGroupCommandParserTest.java).","lastModifiedDate":"2021-11-08"},{"lineNumber":56,"author":{"gitId":"tanhuakun"},"content":"    * Logic.Commands","lastModifiedDate":"2021-11-08"},{"lineNumber":57,"author":{"gitId":"tanhuakun"},"content":"        * [Add group command](https://github.com/AY2122S1-CS2103T-W16-4/tp/blob/master/src/test/java/seedu/address/logic/commands/groups/AddGroupCommandIntegrationTest.java).","lastModifiedDate":"2021-11-08"},{"lineNumber":58,"author":{"gitId":"tanhuakun"},"content":"    * Storage","lastModifiedDate":"2021-11-08"},{"lineNumber":59,"author":{"gitId":"tanhuakun"},"content":"        * JsonAdaptedLessonTest and JsonAdaptedTimeslotTest.","lastModifiedDate":"2021-11-08"},{"lineNumber":60,"author":{"gitId":"tanhuakun"},"content":"    * Modified existing test cases such as JsonAdaptedPerson and Person.","lastModifiedDate":"2021-11-08"},{"lineNumber":61,"author":{"gitId":"tanhuakun"},"content":"* ##### Team Tasks:","lastModifiedDate":"2021-11-08"},{"lineNumber":62,"author":{"gitId":"tanhuakun"},"content":"    * [Refactor commands](https://github.com/AY2122S1-CS2103T-W16-4/tp/pull/45) to be split into subsections. Original AB3 used \"add, delete, edit\" but refactored it to use","lastModifiedDate":"2021-11-08"},{"lineNumber":63,"author":{"gitId":"tanhuakun"},"content":"    \"student -a, student -d, student -e\" respectively.","lastModifiedDate":"2021-11-08"},{"lineNumber":64,"author":{"gitId":"tanhuakun"},"content":"    * [Update almost every command](https://github.com/AY2122S1-CS2103T-W16-4/tp/pull/206)","lastModifiedDate":"2021-11-08"},{"lineNumber":65,"author":{"gitId":"tanhuakun"},"content":"    to refresh viewing panel accordingly. This is so that details in the viewing panel are up to date when a command affects the Model.","lastModifiedDate":"2021-11-08"},{"lineNumber":66,"author":{"gitId":"tanhuakun"},"content":"    * Closed duplicate issues from PED before team members start working on it. For example [here](https://github.com/AY2122S1-CS2103T-W16-4/tp/issues/143) and [here](https://github.com/AY2122S1-CS2103T-W16-4/tp/issues/148) and many more.","lastModifiedDate":"2021-11-08"},{"lineNumber":67,"author":{"gitId":"tanhuakun"},"content":"    * [Update all commands](https://github.com/AY2122S1-CS2103T-W16-4/tp/pull/197) to validate indexes in the preamble properly. An issue highlighted in PED.","lastModifiedDate":"2021-11-08"},{"lineNumber":68,"author":{"gitId":"tanhuakun"},"content":"* ##### Reviewing PRs","lastModifiedDate":"2021-11-08"},{"lineNumber":69,"author":{"gitId":"tanhuakun"},"content":"    * Provided some comments, such as [here](https://github.com/AY2122S1-CS2103T-W16-4/tp/pull/127) and [here](https://github.com/AY2122S1-CS2103T-W16-4/tp/pull/135).","lastModifiedDate":"2021-11-08"}],"authorContributionMap":{"tanhuakun":69}},{"path":"src/main/java/seedu/address/MainApp.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.application.Application;","lastModifiedDate":"2016-08-26"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Config;","lastModifiedDate":"2016-09-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Version;","lastModifiedDate":"2016-09-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.DataConversionException;","lastModifiedDate":"2016-09-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.ConfigUtil;","lastModifiedDate":"2016-10-07"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2016-09-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.Logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.LogicManager;","lastModifiedDate":"2016-09-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2017-01-18"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-01-18"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-01-18"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2017-01-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2018-12-06"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-01-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.util.SampleDataUtil;","lastModifiedDate":"2016-12-20"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.storage.AddressBookStorage;","lastModifiedDate":"2017-02-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonAddressBookStorage;","lastModifiedDate":"2018-11-27"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonUserPrefsStorage;","lastModifiedDate":"2017-02-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.storage.Storage;","lastModifiedDate":"2016-09-25"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.storage.StorageManager;","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.storage.UserPrefsStorage;","lastModifiedDate":"2017-02-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import seedu.address.ui.Ui;","lastModifiedDate":"2016-09-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import seedu.address.ui.UiManager;","lastModifiedDate":"2016-09-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":" * Runs the application.","lastModifiedDate":"2019-02-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"public class MainApp extends Application {","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"jeremy-7007"},"content":"    public static final Version VERSION \u003d new Version(1, 4, 0, false);","lastModifiedDate":"2021-11-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(MainApp.class);","lastModifiedDate":"2017-04-01"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-01"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    protected Ui ui;","lastModifiedDate":"2016-09-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    protected Logic logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    protected Storage storage;","lastModifiedDate":"2016-09-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    protected Model model;","lastModifiedDate":"2016-09-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    protected Config config;","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public void init() throws Exception {","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        logger.info(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d[ Initializing AddressBook ]\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");","lastModifiedDate":"2016-09-29"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        super.init();","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        AppParameters appParameters \u003d AppParameters.parse(getParameters());","lastModifiedDate":"2018-04-21"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        config \u003d initConfig(appParameters.getConfigPath());","lastModifiedDate":"2018-04-21"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        UserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(config.getUserPrefsFilePath());","lastModifiedDate":"2017-02-25"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d initPrefs(userPrefsStorage);","lastModifiedDate":"2018-12-06"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        AddressBookStorage addressBookStorage \u003d new JsonAddressBookStorage(userPrefs.getAddressBookFilePath());","lastModifiedDate":"2018-11-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        storage \u003d new StorageManager(addressBookStorage, userPrefsStorage);","lastModifiedDate":"2017-02-25"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        initLogging(config);","lastModifiedDate":"2016-09-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        model \u003d initModelManager(storage, userPrefs);","lastModifiedDate":"2016-09-25"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        ui \u003d new UiManager(logic);","lastModifiedDate":"2018-12-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     * Returns a {@code ModelManager} with the data from {@code storage}\u0027s address book and {@code userPrefs}. \u003cbr\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     * The data from the sample address book will be used instead if {@code storage}\u0027s address book is not found,","lastModifiedDate":"2017-08-16"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     * or an empty address book will be used instead if errors occur when reading {@code storage}\u0027s address book.","lastModifiedDate":"2017-08-16"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    private Model initModelManager(Storage storage, ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        Optional\u003cReadOnlyAddressBook\u003e addressBookOptional;","lastModifiedDate":"2016-09-24"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        ReadOnlyAddressBook initialData;","lastModifiedDate":"2016-09-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":80,"author":{"gitId":"-"},"content":"            addressBookOptional \u003d storage.readAddressBook();","lastModifiedDate":"2016-09-25"},{"lineNumber":81,"author":{"gitId":"-"},"content":"            if (!addressBookOptional.isPresent()) {","lastModifiedDate":"2016-09-24"},{"lineNumber":82,"author":{"gitId":"-"},"content":"                logger.info(\"Data file not found. Will be starting with a sample AddressBook\");","lastModifiedDate":"2016-12-20"},{"lineNumber":83,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-09-24"},{"lineNumber":84,"author":{"gitId":"-"},"content":"            initialData \u003d addressBookOptional.orElseGet(SampleDataUtil::getSampleAddressBook);","lastModifiedDate":"2016-12-20"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        } catch (DataConversionException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":86,"author":{"gitId":"-"},"content":"            logger.warning(\"Data file not in the correct format. Will be starting with an empty AddressBook\");","lastModifiedDate":"2016-09-24"},{"lineNumber":87,"author":{"gitId":"-"},"content":"            initialData \u003d new AddressBook();","lastModifiedDate":"2016-09-24"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-10-01"},{"lineNumber":89,"author":{"gitId":"-"},"content":"            logger.warning(\"Problem while reading from the file. Will be starting with an empty AddressBook\");","lastModifiedDate":"2016-10-12"},{"lineNumber":90,"author":{"gitId":"-"},"content":"            initialData \u003d new AddressBook();","lastModifiedDate":"2016-09-24"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":92,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":93,"author":{"gitId":"Neha-5678"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        return new ModelManager(initialData, userPrefs);","lastModifiedDate":"2016-09-25"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    private void initLogging(Config config) {","lastModifiedDate":"2016-09-24"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        LogsCenter.init(config);","lastModifiedDate":"2016-09-23"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     * Returns a {@code Config} using the file at {@code configFilePath}. \u003cbr\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     * The default file path {@code Config#DEFAULT_CONFIG_FILE} will be used instead","lastModifiedDate":"2017-08-16"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     * if {@code configFilePath} is null.","lastModifiedDate":"2017-08-16"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    protected Config initConfig(Path configFilePath) {","lastModifiedDate":"2018-04-21"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        Config initializedConfig;","lastModifiedDate":"2016-09-24"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        Path configFilePathUsed;","lastModifiedDate":"2018-04-21"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        configFilePathUsed \u003d Config.DEFAULT_CONFIG_FILE;","lastModifiedDate":"2016-09-24"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        if (configFilePath !\u003d null) {","lastModifiedDate":"2016-09-24"},{"lineNumber":113,"author":{"gitId":"-"},"content":"            logger.info(\"Custom Config file specified \" + configFilePath);","lastModifiedDate":"2016-09-24"},{"lineNumber":114,"author":{"gitId":"-"},"content":"            configFilePathUsed \u003d configFilePath;","lastModifiedDate":"2016-09-24"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        logger.info(\"Using config file : \" + configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":120,"author":{"gitId":"-"},"content":"            Optional\u003cConfig\u003e configOptional \u003d ConfigUtil.readConfig(configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":121,"author":{"gitId":"-"},"content":"            initializedConfig \u003d configOptional.orElse(new Config());","lastModifiedDate":"2016-09-24"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        } catch (DataConversionException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":123,"author":{"gitId":"-"},"content":"            logger.warning(\"Config file at \" + configFilePathUsed + \" is not in the correct format. \"","lastModifiedDate":"2017-05-22"},{"lineNumber":124,"author":{"gitId":"-"},"content":"                    + \"Using default config properties\");","lastModifiedDate":"2017-05-22"},{"lineNumber":125,"author":{"gitId":"-"},"content":"            initializedConfig \u003d new Config();","lastModifiedDate":"2016-09-24"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        //Update config file in case it was missing to begin with or there are new/unused fields","lastModifiedDate":"2016-09-24"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":130,"author":{"gitId":"-"},"content":"            ConfigUtil.saveConfig(initializedConfig, configFilePathUsed);","lastModifiedDate":"2016-09-24"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":132,"author":{"gitId":"-"},"content":"            logger.warning(\"Failed to save config file : \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        return initializedConfig;","lastModifiedDate":"2016-09-24"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":138,"author":{"gitId":"-"},"content":"     * Returns a {@code UserPrefs} using the file at {@code storage}\u0027s user prefs file path,","lastModifiedDate":"2017-08-16"},{"lineNumber":139,"author":{"gitId":"-"},"content":"     * or a new {@code UserPrefs} with default configuration if errors occur when","lastModifiedDate":"2017-08-16"},{"lineNumber":140,"author":{"gitId":"-"},"content":"     * reading from the file.","lastModifiedDate":"2017-08-16"},{"lineNumber":141,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    protected UserPrefs initPrefs(UserPrefsStorage storage) {","lastModifiedDate":"2017-02-25"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        Path prefsFilePath \u003d storage.getUserPrefsFilePath();","lastModifiedDate":"2018-04-21"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        logger.info(\"Using prefs file : \" + prefsFilePath);","lastModifiedDate":"2016-09-24"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        UserPrefs initializedPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":148,"author":{"gitId":"-"},"content":"            Optional\u003cUserPrefs\u003e prefsOptional \u003d storage.readUserPrefs();","lastModifiedDate":"2016-09-25"},{"lineNumber":149,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d prefsOptional.orElse(new UserPrefs());","lastModifiedDate":"2016-09-24"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        } catch (DataConversionException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":151,"author":{"gitId":"-"},"content":"            logger.warning(\"UserPrefs file at \" + prefsFilePath + \" is not in the correct format. \"","lastModifiedDate":"2017-05-22"},{"lineNumber":152,"author":{"gitId":"-"},"content":"                    + \"Using default user prefs\");","lastModifiedDate":"2017-05-22"},{"lineNumber":153,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":155,"author":{"gitId":"-"},"content":"            logger.warning(\"Problem while reading from the file. Will be starting with an empty AddressBook\");","lastModifiedDate":"2016-10-12"},{"lineNumber":156,"author":{"gitId":"-"},"content":"            initializedPrefs \u003d new UserPrefs();","lastModifiedDate":"2016-09-24"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        //Update prefs file in case it was missing to begin with or there are new/unused fields","lastModifiedDate":"2016-09-24"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":161,"author":{"gitId":"-"},"content":"            storage.saveUserPrefs(initializedPrefs);","lastModifiedDate":"2016-09-25"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":163,"author":{"gitId":"-"},"content":"            logger.warning(\"Failed to save config file : \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        return initializedPrefs;","lastModifiedDate":"2016-09-24"},{"lineNumber":167,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":168,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":169,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":170,"author":{"gitId":"-"},"content":"    public void start(Stage primaryStage) {","lastModifiedDate":"2016-08-08"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        logger.info(\"Starting AddressBook \" + MainApp.VERSION);","lastModifiedDate":"2016-09-29"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        ui.start(primaryStage);","lastModifiedDate":"2016-09-25"},{"lineNumber":173,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":174,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":176,"author":{"gitId":"-"},"content":"    public void stop() {","lastModifiedDate":"2016-08-08"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        logger.info(\"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d [ Stopping Address Book ] \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\");","lastModifiedDate":"2016-09-29"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-24"},{"lineNumber":179,"author":{"gitId":"-"},"content":"            storage.saveUserPrefs(model.getUserPrefs());","lastModifiedDate":"2018-12-06"},{"lineNumber":180,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-24"},{"lineNumber":181,"author":{"gitId":"-"},"content":"            logger.severe(\"Failed to save preferences \" + StringUtil.getDetails(e));","lastModifiedDate":"2016-09-24"},{"lineNumber":182,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-08"},{"lineNumber":183,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-26"},{"lineNumber":184,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"Neha-5678":1,"jeremy-7007":1,"-":182}},{"path":"src/main/java/seedu/address/commons/core/GuiSettings.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.commons.core;","lastModifiedDate":"2016-09-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.awt.Point;","lastModifiedDate":"2017-01-18"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.io.Serializable;","lastModifiedDate":"2016-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2016-09-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * A Serializable class that contains the GUI settings.","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Guarantees: immutable.","lastModifiedDate":"2018-11-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class GuiSettings implements Serializable {","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"tanhuakun"},"content":"    private static final double DEFAULT_HEIGHT \u003d 670;","lastModifiedDate":"2021-11-08"},{"lineNumber":14,"author":{"gitId":"tanhuakun"},"content":"    private static final double DEFAULT_WIDTH \u003d 1000;","lastModifiedDate":"2021-11-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    private final double windowWidth;","lastModifiedDate":"2018-11-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    private final double windowHeight;","lastModifiedDate":"2018-11-27"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private final Point windowCoordinates;","lastModifiedDate":"2018-11-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     * Constructs a {@code GuiSettings} with the default height, width and position.","lastModifiedDate":"2020-05-27"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public GuiSettings() {","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        windowWidth \u003d DEFAULT_WIDTH;","lastModifiedDate":"2018-08-14"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        windowHeight \u003d DEFAULT_HEIGHT;","lastModifiedDate":"2018-08-14"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        windowCoordinates \u003d null; // null represent no coordinates","lastModifiedDate":"2018-08-14"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Constructs a {@code GuiSettings} with the specified height, width and position.","lastModifiedDate":"2020-05-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public GuiSettings(double windowWidth, double windowHeight, int xPosition, int yPosition) {","lastModifiedDate":"2018-11-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        this.windowWidth \u003d windowWidth;","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        this.windowHeight \u003d windowHeight;","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        windowCoordinates \u003d new Point(xPosition, yPosition);","lastModifiedDate":"2018-08-14"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public double getWindowWidth() {","lastModifiedDate":"2018-11-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        return windowWidth;","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public double getWindowHeight() {","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        return windowHeight;","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public Point getWindowCoordinates() {","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        return windowCoordinates !\u003d null ? new Point(windowCoordinates) : null;","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2016-09-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2016-09-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        if (!(other instanceof GuiSettings)) { //this handles null as well.","lastModifiedDate":"2016-09-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2016-09-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        GuiSettings o \u003d (GuiSettings) other;","lastModifiedDate":"2016-09-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        return windowWidth \u003d\u003d o.windowWidth","lastModifiedDate":"2018-11-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"                \u0026\u0026 windowHeight \u003d\u003d o.windowHeight","lastModifiedDate":"2018-11-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"                \u0026\u0026 Objects.equals(windowCoordinates, o.windowCoordinates);","lastModifiedDate":"2018-11-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        return Objects.hash(windowWidth, windowHeight, windowCoordinates);","lastModifiedDate":"2016-09-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-09-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2016-09-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        sb.append(\"Width : \" + windowWidth + \"\\n\");","lastModifiedDate":"2016-09-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        sb.append(\"Height : \" + windowHeight + \"\\n\");","lastModifiedDate":"2016-09-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        sb.append(\"Position : \" + windowCoordinates);","lastModifiedDate":"2016-09-24"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2016-09-24"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":79,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"tanhuakun":2,"-":77}},{"path":"src/main/java/seedu/address/commons/core/Messages.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.commons.core;","lastModifiedDate":"2016-09-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Container for user visible messages.","lastModifiedDate":"2016-08-24"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class Messages {","lastModifiedDate":"2016-08-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_UNKNOWN_COMMAND \u003d \"Unknown command\";","lastModifiedDate":"2016-09-21"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_COMMAND_FORMAT \u003d \"Invalid command format! \\n%1$s\";","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"jeremy-7007"},"content":"    public static final String MESSAGE_INVALID_PERSON_DISPLAYED_INDEX \u003d \"The student index provided is invalid\";","lastModifiedDate":"2021-10-28"},{"lineNumber":11,"author":{"gitId":"jeremy-7007"},"content":"    public static final String MESSAGE_INVALID_TASK_DISPLAYED_INDEX \u003d \"The task index provided is invalid\";","lastModifiedDate":"2021-10-12"},{"lineNumber":12,"author":{"gitId":"kvihashini"},"content":"    public static final String MESSAGE_INVALID_GROUP_DISPLAYED_INDEX \u003d \"The group index provided is invalid\";","lastModifiedDate":"2021-10-24"},{"lineNumber":13,"author":{"gitId":"tanhuakun"},"content":"    public static final String MESSAGE_INVALID_LESSON_DISPLAYED_INDEX \u003d \"The lesson index provided is invalid\";","lastModifiedDate":"2021-10-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_PERSONS_LISTED_OVERVIEW \u003d \"%1$d persons listed!\";","lastModifiedDate":"2016-08-24"},{"lineNumber":15,"author":{"gitId":"tanhuakun"},"content":"    public static final String MESSAGE_INVALID_EXAM_INDEX \u003d \"Exam index provided is invalid!\";","lastModifiedDate":"2021-10-25"},{"lineNumber":16,"author":{"gitId":"Neha-5678"},"content":"    public static final String MESSAGE_TASKS_LISTED_OVERVIEW \u003d \"%1$d tasks listed!\";","lastModifiedDate":"2021-10-25"},{"lineNumber":17,"author":{"gitId":"tanhuakun"},"content":"    public static final String MESSAGE_WRONG_INDEX_NUM_FORMAT \u003d \"Expected %d indexes, got %d instead\";","lastModifiedDate":"2021-11-02"},{"lineNumber":18,"author":{"gitId":"tanhuakun"},"content":"    public static final String MESSAGE_INVALID_INDEX_GIVEN \u003d \"Index provided is invalid, did you ensure that each \"","lastModifiedDate":"2021-11-02"},{"lineNumber":19,"author":{"gitId":"tanhuakun"},"content":"            + \"index is a positive integer and less than 2,147,483,648\";","lastModifiedDate":"2021-11-02"},{"lineNumber":20,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"Neha-5678":1,"jeremy-7007":2,"kvihashini":1,"tanhuakun":5,"-":11}},{"path":"src/main/java/seedu/address/commons/core/index/Index.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.commons.core.index;","lastModifiedDate":"2017-05-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":3,"author":{"gitId":"tanhuakun"},"content":"import java.util.Comparator;","lastModifiedDate":"2021-10-20"},{"lineNumber":4,"author":{"gitId":"tanhuakun"},"content":"import java.util.Objects;","lastModifiedDate":"2021-10-25"},{"lineNumber":5,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":6,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-05-24"},{"lineNumber":7,"author":{"gitId":"-"},"content":" * Represents a zero-based or one-based index.","lastModifiedDate":"2017-05-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2017-05-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * {@code Index} should be used right from the start (when parsing in a new user input), so that if the current","lastModifiedDate":"2017-05-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * component wants to communicate with another component, it can send an {@code Index} to avoid having to know what","lastModifiedDate":"2017-05-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":" * base the other component is using for its index. However, after receiving the {@code Index}, that component can","lastModifiedDate":"2017-05-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * convert it back to an int if the index will not be passed to a different component again.","lastModifiedDate":"2017-05-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-05-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public class Index {","lastModifiedDate":"2017-05-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    private int zeroBasedIndex;","lastModifiedDate":"2017-05-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * Index can only be created by calling {@link Index#fromZeroBased(int)} or","lastModifiedDate":"2017-05-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * {@link Index#fromOneBased(int)}.","lastModifiedDate":"2017-05-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private Index(int zeroBasedIndex) {","lastModifiedDate":"2017-05-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        if (zeroBasedIndex \u003c 0) {","lastModifiedDate":"2017-05-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"            throw new IndexOutOfBoundsException();","lastModifiedDate":"2017-05-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        this.zeroBasedIndex \u003d zeroBasedIndex;","lastModifiedDate":"2017-05-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public int getZeroBased() {","lastModifiedDate":"2017-05-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        return zeroBasedIndex;","lastModifiedDate":"2017-05-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public int getOneBased() {","lastModifiedDate":"2017-05-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        return zeroBasedIndex + 1;","lastModifiedDate":"2017-05-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":37,"author":{"gitId":"tanhuakun"},"content":"    /**","lastModifiedDate":"2021-10-20"},{"lineNumber":38,"author":{"gitId":"tanhuakun"},"content":"     * Checks if current index is greater than the given index","lastModifiedDate":"2021-10-20"},{"lineNumber":39,"author":{"gitId":"tanhuakun"},"content":"     * @param other to compare with","lastModifiedDate":"2021-10-20"},{"lineNumber":40,"author":{"gitId":"tanhuakun"},"content":"     * @return true if this is greater than the other index","lastModifiedDate":"2021-10-20"},{"lineNumber":41,"author":{"gitId":"tanhuakun"},"content":"     */","lastModifiedDate":"2021-10-20"},{"lineNumber":42,"author":{"gitId":"tanhuakun"},"content":"    public boolean isGreaterThan(Index other) {","lastModifiedDate":"2021-10-20"},{"lineNumber":43,"author":{"gitId":"tanhuakun"},"content":"        return zeroBasedIndex \u003e other.getZeroBased();","lastModifiedDate":"2021-10-20"},{"lineNumber":44,"author":{"gitId":"tanhuakun"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":45,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":46,"author":{"gitId":"tanhuakun"},"content":"    /**","lastModifiedDate":"2021-10-20"},{"lineNumber":47,"author":{"gitId":"tanhuakun"},"content":"     * Checks if current index is lesser than the given index","lastModifiedDate":"2021-10-20"},{"lineNumber":48,"author":{"gitId":"tanhuakun"},"content":"     * @param other to compare with","lastModifiedDate":"2021-10-20"},{"lineNumber":49,"author":{"gitId":"tanhuakun"},"content":"     * @return true if this is lesser than the other index","lastModifiedDate":"2021-10-20"},{"lineNumber":50,"author":{"gitId":"tanhuakun"},"content":"     */","lastModifiedDate":"2021-10-20"},{"lineNumber":51,"author":{"gitId":"tanhuakun"},"content":"    public boolean isLesserThan(Index other) {","lastModifiedDate":"2021-10-20"},{"lineNumber":52,"author":{"gitId":"tanhuakun"},"content":"        return zeroBasedIndex \u003c other.getZeroBased();","lastModifiedDate":"2021-10-20"},{"lineNumber":53,"author":{"gitId":"tanhuakun"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":54,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * Creates a new {@code Index} using a zero-based index.","lastModifiedDate":"2017-05-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public static Index fromZeroBased(int zeroBasedIndex) {","lastModifiedDate":"2017-05-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        return new Index(zeroBasedIndex);","lastModifiedDate":"2017-05-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * Creates a new {@code Index} using a one-based index.","lastModifiedDate":"2017-05-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public static Index fromOneBased(int oneBasedIndex) {","lastModifiedDate":"2017-05-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        return new Index(oneBasedIndex - 1);","lastModifiedDate":"2017-05-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-05-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-05-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"                || (other instanceof Index // instanceof handles nulls","lastModifiedDate":"2017-05-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"                \u0026\u0026 zeroBasedIndex \u003d\u003d ((Index) other).zeroBasedIndex); // state check","lastModifiedDate":"2018-08-14"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":75,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":76,"author":{"gitId":"tanhuakun"},"content":"    @Override","lastModifiedDate":"2021-10-25"},{"lineNumber":77,"author":{"gitId":"tanhuakun"},"content":"    public int hashCode() {","lastModifiedDate":"2021-10-25"},{"lineNumber":78,"author":{"gitId":"tanhuakun"},"content":"        return Objects.hash(zeroBasedIndex);","lastModifiedDate":"2021-10-25"},{"lineNumber":79,"author":{"gitId":"tanhuakun"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":80,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":81,"author":{"gitId":"tanhuakun"},"content":"    /**","lastModifiedDate":"2021-10-20"},{"lineNumber":82,"author":{"gitId":"tanhuakun"},"content":"     * Comparator class for sorting index in descending order","lastModifiedDate":"2021-10-20"},{"lineNumber":83,"author":{"gitId":"tanhuakun"},"content":"     */","lastModifiedDate":"2021-10-20"},{"lineNumber":84,"author":{"gitId":"tanhuakun"},"content":"    public static class SortDescending implements Comparator\u003cIndex\u003e {","lastModifiedDate":"2021-10-20"},{"lineNumber":85,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":86,"author":{"gitId":"tanhuakun"},"content":"        @Override","lastModifiedDate":"2021-10-20"},{"lineNumber":87,"author":{"gitId":"tanhuakun"},"content":"        public int compare(Index first, Index second) {","lastModifiedDate":"2021-10-20"},{"lineNumber":88,"author":{"gitId":"tanhuakun"},"content":"            if (first.isGreaterThan(second)) {","lastModifiedDate":"2021-10-20"},{"lineNumber":89,"author":{"gitId":"tanhuakun"},"content":"                return -1;","lastModifiedDate":"2021-10-20"},{"lineNumber":90,"author":{"gitId":"tanhuakun"},"content":"            } else if (first.isLesserThan(second)) {","lastModifiedDate":"2021-10-20"},{"lineNumber":91,"author":{"gitId":"tanhuakun"},"content":"                return 1;","lastModifiedDate":"2021-10-20"},{"lineNumber":92,"author":{"gitId":"tanhuakun"},"content":"            } else {","lastModifiedDate":"2021-10-20"},{"lineNumber":93,"author":{"gitId":"tanhuakun"},"content":"                return 0;","lastModifiedDate":"2021-10-20"},{"lineNumber":94,"author":{"gitId":"tanhuakun"},"content":"            }","lastModifiedDate":"2021-10-20"},{"lineNumber":95,"author":{"gitId":"tanhuakun"},"content":"        }","lastModifiedDate":"2021-10-20"},{"lineNumber":96,"author":{"gitId":"tanhuakun"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":97,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-24"}],"authorContributionMap":{"tanhuakun":43,"-":54}},{"path":"src/main/java/seedu/address/logic/Logic.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"tanhuakun"},"content":"import javafx.beans.value.ObservableValue;","lastModifiedDate":"2021-10-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-09-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2016-09-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-12-03"},{"lineNumber":12,"author":{"gitId":"tanhuakun"},"content":"import seedu.address.model.ViewingType;","lastModifiedDate":"2021-10-25"},{"lineNumber":13,"author":{"gitId":"Neha-5678"},"content":"import seedu.address.model.group.Group;","lastModifiedDate":"2021-10-25"},{"lineNumber":14,"author":{"gitId":"kvihashini"},"content":"import seedu.address.model.group.GroupWithDetails;","lastModifiedDate":"2021-10-25"},{"lineNumber":15,"author":{"gitId":"tanhuakun"},"content":"import seedu.address.model.lesson.LessonWithAttendees;","lastModifiedDate":"2021-10-20"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":17,"author":{"gitId":"tanhuakun"},"content":"import seedu.address.model.person.PersonWithDetails;","lastModifiedDate":"2021-10-25"},{"lineNumber":18,"author":{"gitId":"Neha-5678"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2021-10-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":" * API of the Logic component","lastModifiedDate":"2016-09-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":23,"author":{"gitId":"-"},"content":"public interface Logic {","lastModifiedDate":"2016-09-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2016-09-25"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * @param commandText The command as entered by the user.","lastModifiedDate":"2016-09-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * @return the result of the command execution.","lastModifiedDate":"2016-09-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * @throws CommandException If an error occurs during command execution.","lastModifiedDate":"2017-02-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * @throws ParseException If an error occurs during parsing.","lastModifiedDate":"2017-03-11"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    CommandResult execute(String commandText) throws CommandException, ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * Returns the AddressBook.","lastModifiedDate":"2018-12-03"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-12-03"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * @see seedu.address.model.Model#getAddressBook()","lastModifiedDate":"2018-12-03"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-03"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    ReadOnlyAddressBook getAddressBook();","lastModifiedDate":"2018-12-03"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-03"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    /** Returns an unmodifiable view of the filtered list of persons */","lastModifiedDate":"2017-09-01"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    ObservableList\u003cPerson\u003e getFilteredPersonList();","lastModifiedDate":"2018-01-10"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-26"},{"lineNumber":43,"author":{"gitId":"Neha-5678"},"content":"    /** Returns an unmodifiable view of the filtered list of tasks */","lastModifiedDate":"2021-10-25"},{"lineNumber":44,"author":{"gitId":"Neha-5678"},"content":"    ObservableList\u003cTask\u003e getFilteredTaskList();","lastModifiedDate":"2021-10-25"},{"lineNumber":45,"author":{"gitId":"Neha-5678"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":46,"author":{"gitId":"Neha-5678"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":47,"author":{"gitId":"Neha-5678"},"content":"    /** Returns an unmodifiable view of the filtered list of groups */","lastModifiedDate":"2021-10-25"},{"lineNumber":48,"author":{"gitId":"Neha-5678"},"content":"    ObservableList\u003cGroup\u003e getFilteredGroupList();","lastModifiedDate":"2021-10-25"},{"lineNumber":49,"author":{"gitId":"Neha-5678"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":50,"author":{"gitId":"tanhuakun"},"content":"    /** Returns a list of lessons with the corresponding attendees */","lastModifiedDate":"2021-10-20"},{"lineNumber":51,"author":{"gitId":"tanhuakun"},"content":"    ObservableList\u003cLessonWithAttendees\u003e getSortedLessonsWithAttendees();","lastModifiedDate":"2021-10-25"},{"lineNumber":52,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":53,"author":{"gitId":"tanhuakun"},"content":"    /** Returns the viewing type currently */","lastModifiedDate":"2021-10-25"},{"lineNumber":54,"author":{"gitId":"tanhuakun"},"content":"    ObservableValue\u003cViewingType\u003e getViewingType();","lastModifiedDate":"2021-10-25"},{"lineNumber":55,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":56,"author":{"gitId":"tanhuakun"},"content":"    /** Returns the currently viewing person */","lastModifiedDate":"2021-10-25"},{"lineNumber":57,"author":{"gitId":"tanhuakun"},"content":"    ObservableValue\u003cPersonWithDetails\u003e getViewingPersonWithDetails();","lastModifiedDate":"2021-10-25"},{"lineNumber":58,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":59,"author":{"gitId":"kvihashini"},"content":"    /** Returns the currently viewing group */","lastModifiedDate":"2021-10-25"},{"lineNumber":60,"author":{"gitId":"kvihashini"},"content":"    ObservableValue\u003cGroupWithDetails\u003e getViewingGroupWithDetails();","lastModifiedDate":"2021-10-25"},{"lineNumber":61,"author":{"gitId":"kvihashini"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 address book file path.","lastModifiedDate":"2018-11-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    Path getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     * Set the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    void setGuiSettings(GuiSettings guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"Neha-5678":9,"kvihashini":4,"tanhuakun":13,"-":50}},{"path":"src/main/java/seedu/address/logic/LogicManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-12-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"tanhuakun"},"content":"import javafx.beans.value.ObservableValue;","lastModifiedDate":"2021-10-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-09-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-29"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2016-09-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2016-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.AddressBookParser;","lastModifiedDate":"2017-07-07"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-12-03"},{"lineNumber":18,"author":{"gitId":"tanhuakun"},"content":"import seedu.address.model.ViewingType;","lastModifiedDate":"2021-10-25"},{"lineNumber":19,"author":{"gitId":"Neha-5678"},"content":"import seedu.address.model.group.Group;","lastModifiedDate":"2021-10-25"},{"lineNumber":20,"author":{"gitId":"kvihashini"},"content":"import seedu.address.model.group.GroupWithDetails;","lastModifiedDate":"2021-10-25"},{"lineNumber":21,"author":{"gitId":"tanhuakun"},"content":"import seedu.address.model.lesson.LessonWithAttendees;","lastModifiedDate":"2021-10-20"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":23,"author":{"gitId":"tanhuakun"},"content":"import seedu.address.model.person.PersonWithDetails;","lastModifiedDate":"2021-10-25"},{"lineNumber":24,"author":{"gitId":"Neha-5678"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2021-10-25"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.storage.Storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":" * The main LogicManager of the app.","lastModifiedDate":"2016-09-22"},{"lineNumber":29,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-21"},{"lineNumber":30,"author":{"gitId":"-"},"content":"public class LogicManager implements Logic {","lastModifiedDate":"2018-12-09"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public static final String FILE_OPS_ERROR_MESSAGE \u003d \"Could not save data to file: \";","lastModifiedDate":"2018-12-09"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(LogicManager.class);","lastModifiedDate":"2016-09-29"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private final Model model;","lastModifiedDate":"2016-09-25"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private final Storage storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private final AddressBookParser addressBookParser;","lastModifiedDate":"2017-07-07"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     * Constructs a {@code LogicManager} with the given {@code Model} and {@code Storage}.","lastModifiedDate":"2020-05-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public LogicManager(Model model, Storage storage) {","lastModifiedDate":"2018-12-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        this.model \u003d model;","lastModifiedDate":"2016-09-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        this.storage \u003d storage;","lastModifiedDate":"2018-12-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        addressBookParser \u003d new AddressBookParser();","lastModifiedDate":"2018-01-25"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public CommandResult execute(String commandText) throws CommandException, ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        logger.info(\"----------------[USER COMMAND][\" + commandText + \"]\");","lastModifiedDate":"2016-09-29"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        CommandResult commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        Command command \u003d addressBookParser.parseCommand(commandText);","lastModifiedDate":"2017-07-07"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        commandResult \u003d command.execute(model);","lastModifiedDate":"2019-01-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-12-09"},{"lineNumber":56,"author":{"gitId":"-"},"content":"            storage.saveAddressBook(model.getAddressBook());","lastModifiedDate":"2018-12-09"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        } catch (IOException ioe) {","lastModifiedDate":"2018-12-09"},{"lineNumber":58,"author":{"gitId":"-"},"content":"            throw new CommandException(FILE_OPS_ERROR_MESSAGE + ioe, ioe);","lastModifiedDate":"2018-12-09"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        return commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-12-03"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2018-12-03"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        return model.getAddressBook();","lastModifiedDate":"2018-12-03"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-03"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-03"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        return model.getFilteredPersonList();","lastModifiedDate":"2016-09-25"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-29"},{"lineNumber":74,"author":{"gitId":"Neha-5678"},"content":"    public ObservableList\u003cTask\u003e getFilteredTaskList() {","lastModifiedDate":"2021-10-25"},{"lineNumber":75,"author":{"gitId":"Neha-5678"},"content":"        return model.getFilteredTaskList();","lastModifiedDate":"2021-10-25"},{"lineNumber":76,"author":{"gitId":"Neha-5678"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":77,"author":{"gitId":"Neha-5678"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":78,"author":{"gitId":"Neha-5678"},"content":"    @Override","lastModifiedDate":"2021-10-25"},{"lineNumber":79,"author":{"gitId":"Neha-5678"},"content":"    public ObservableList\u003cGroup\u003e getFilteredGroupList() {","lastModifiedDate":"2021-10-25"},{"lineNumber":80,"author":{"gitId":"Neha-5678"},"content":"        return model.getFilteredGroupList();","lastModifiedDate":"2021-10-25"},{"lineNumber":81,"author":{"gitId":"Neha-5678"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":82,"author":{"gitId":"Neha-5678"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":83,"author":{"gitId":"tanhuakun"},"content":"    @Override","lastModifiedDate":"2021-10-20"},{"lineNumber":84,"author":{"gitId":"tanhuakun"},"content":"    public ObservableList\u003cLessonWithAttendees\u003e getSortedLessonsWithAttendees() {","lastModifiedDate":"2021-10-25"},{"lineNumber":85,"author":{"gitId":"tanhuakun"},"content":"        return model.getSortedLessonsWithAttendees();","lastModifiedDate":"2021-10-20"},{"lineNumber":86,"author":{"gitId":"tanhuakun"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":87,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":88,"author":{"gitId":"tanhuakun"},"content":"    @Override","lastModifiedDate":"2021-10-25"},{"lineNumber":89,"author":{"gitId":"tanhuakun"},"content":"    public ObservableValue\u003cViewingType\u003e getViewingType() {","lastModifiedDate":"2021-10-25"},{"lineNumber":90,"author":{"gitId":"tanhuakun"},"content":"        return model.getViewingType();","lastModifiedDate":"2021-10-25"},{"lineNumber":91,"author":{"gitId":"tanhuakun"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":92,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":93,"author":{"gitId":"tanhuakun"},"content":"    @Override","lastModifiedDate":"2021-10-25"},{"lineNumber":94,"author":{"gitId":"tanhuakun"},"content":"    public ObservableValue\u003cPersonWithDetails\u003e getViewingPersonWithDetails() {","lastModifiedDate":"2021-10-25"},{"lineNumber":95,"author":{"gitId":"tanhuakun"},"content":"        return model.getViewingPersonWithDetails();","lastModifiedDate":"2021-10-25"},{"lineNumber":96,"author":{"gitId":"tanhuakun"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":97,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":98,"author":{"gitId":"kvihashini"},"content":"    @Override","lastModifiedDate":"2021-10-25"},{"lineNumber":99,"author":{"gitId":"kvihashini"},"content":"    public ObservableValue\u003cGroupWithDetails\u003e getViewingGroupWithDetails() {","lastModifiedDate":"2021-10-25"},{"lineNumber":100,"author":{"gitId":"kvihashini"},"content":"        return model.getViewingGroupWithDetails();","lastModifiedDate":"2021-10-25"},{"lineNumber":101,"author":{"gitId":"kvihashini"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":102,"author":{"gitId":"kvihashini"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        return model.getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        return model.getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        model.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":117,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"Neha-5678":11,"kvihashini":6,"tanhuakun":19,"-":81}},{"path":"src/main/java/seedu/address/logic/commands/CommandResult.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2018-12-09"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * Represents the result of a command execution.","lastModifiedDate":"2016-08-24"},{"lineNumber":9,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class CommandResult {","lastModifiedDate":"2016-08-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    private final String feedbackToUser;","lastModifiedDate":"2018-12-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    /** Help information should be shown to the user. */","lastModifiedDate":"2018-12-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    private final boolean showHelp;","lastModifiedDate":"2018-12-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    /** The application should exit. */","lastModifiedDate":"2018-12-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private final boolean exit;","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":21,"author":{"gitId":"tanhuakun"},"content":"     * Constructs a {@code CommandResult} with the specified fields but with a default ViewType","lastModifiedDate":"2021-10-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public CommandResult(String feedbackToUser, boolean showHelp, boolean exit) {","lastModifiedDate":"2021-10-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        this.feedbackToUser \u003d requireNonNull(feedbackToUser);","lastModifiedDate":"2017-05-15"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        this.showHelp \u003d showHelp;","lastModifiedDate":"2018-12-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        this.exit \u003d exit;","lastModifiedDate":"2018-12-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     * Constructs a {@code CommandResult} with the specified {@code feedbackToUser},","lastModifiedDate":"2018-12-09"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * and other fields set to their default value.","lastModifiedDate":"2018-12-09"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public CommandResult(String feedbackToUser) {","lastModifiedDate":"2018-12-09"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        this(feedbackToUser, false, false);","lastModifiedDate":"2018-12-09"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public String getFeedbackToUser() {","lastModifiedDate":"2018-12-09"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        return feedbackToUser;","lastModifiedDate":"2018-12-09"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public boolean isShowHelp() {","lastModifiedDate":"2018-12-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        return showHelp;","lastModifiedDate":"2018-12-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public boolean isExit() {","lastModifiedDate":"2018-12-09"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        return exit;","lastModifiedDate":"2018-12-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-12-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2018-12-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2018-12-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-12-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2018-12-09"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        if (!(other instanceof CommandResult)) {","lastModifiedDate":"2018-12-09"},{"lineNumber":57,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-12-09"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        CommandResult otherCommandResult \u003d (CommandResult) other;","lastModifiedDate":"2018-12-09"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        return feedbackToUser.equals(otherCommandResult.feedbackToUser)","lastModifiedDate":"2018-12-09"},{"lineNumber":62,"author":{"gitId":"-"},"content":"                \u0026\u0026 showHelp \u003d\u003d otherCommandResult.showHelp","lastModifiedDate":"2018-12-09"},{"lineNumber":63,"author":{"gitId":"-"},"content":"                \u0026\u0026 exit \u003d\u003d otherCommandResult.exit;","lastModifiedDate":"2021-10-25"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-12-09"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2018-12-09"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        return Objects.hash(feedbackToUser, showHelp, exit);","lastModifiedDate":"2021-10-25"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":71,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"tanhuakun":1,"-":70}},{"path":"src/main/java/seedu/address/logic/commands/ScheduleCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tanhuakun"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-10-20"},{"lineNumber":2,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":3,"author":{"gitId":"tanhuakun"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-20"},{"lineNumber":4,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":5,"author":{"gitId":"tanhuakun"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-10-20"},{"lineNumber":6,"author":{"gitId":"tanhuakun"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-10-20"},{"lineNumber":7,"author":{"gitId":"tanhuakun"},"content":"import seedu.address.model.ViewingType;","lastModifiedDate":"2021-10-25"},{"lineNumber":8,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":9,"author":{"gitId":"tanhuakun"},"content":"public class ScheduleCommand extends Command {","lastModifiedDate":"2021-10-20"},{"lineNumber":10,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":11,"author":{"gitId":"tanhuakun"},"content":"    public static final String COMMAND_WORD \u003d \"schedule\";","lastModifiedDate":"2021-10-20"},{"lineNumber":12,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":13,"author":{"gitId":"tanhuakun"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Showing schedule\";","lastModifiedDate":"2021-10-20"},{"lineNumber":14,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":15,"author":{"gitId":"tanhuakun"},"content":"    @Override","lastModifiedDate":"2021-10-20"},{"lineNumber":16,"author":{"gitId":"tanhuakun"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2021-10-20"},{"lineNumber":17,"author":{"gitId":"tanhuakun"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-10-20"},{"lineNumber":18,"author":{"gitId":"tanhuakun"},"content":"        model.updateLessonWithAttendeesList();","lastModifiedDate":"2021-10-25"},{"lineNumber":19,"author":{"gitId":"tanhuakun"},"content":"        model.setViewingType(ViewingType.SCHEDULE);","lastModifiedDate":"2021-10-25"},{"lineNumber":20,"author":{"gitId":"tanhuakun"},"content":"        return new CommandResult(MESSAGE_SUCCESS);","lastModifiedDate":"2021-10-25"},{"lineNumber":21,"author":{"gitId":"tanhuakun"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":22,"author":{"gitId":"tanhuakun"},"content":"}","lastModifiedDate":"2021-10-20"}],"authorContributionMap":{"tanhuakun":22}},{"path":"src/main/java/seedu/address/logic/commands/groups/AddGroupCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tanhuakun"},"content":"package seedu.address.logic.commands.groups;","lastModifiedDate":"2021-10-23"},{"lineNumber":2,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":3,"author":{"gitId":"tanhuakun"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-23"},{"lineNumber":4,"author":{"gitId":"tanhuakun"},"content":"import java.util.HashSet;","lastModifiedDate":"2021-10-23"},{"lineNumber":5,"author":{"gitId":"tanhuakun"},"content":"import java.util.List;","lastModifiedDate":"2021-10-23"},{"lineNumber":6,"author":{"gitId":"tanhuakun"},"content":"import java.util.Objects;","lastModifiedDate":"2021-10-25"},{"lineNumber":7,"author":{"gitId":"tanhuakun"},"content":"import java.util.Set;","lastModifiedDate":"2021-10-23"},{"lineNumber":8,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":9,"author":{"gitId":"tanhuakun"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2021-10-23"},{"lineNumber":10,"author":{"gitId":"tanhuakun"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-10-23"},{"lineNumber":11,"author":{"gitId":"tanhuakun"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2021-10-23"},{"lineNumber":12,"author":{"gitId":"tanhuakun"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2021-10-23"},{"lineNumber":13,"author":{"gitId":"tanhuakun"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-10-23"},{"lineNumber":14,"author":{"gitId":"tanhuakun"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-10-23"},{"lineNumber":15,"author":{"gitId":"tanhuakun"},"content":"import seedu.address.model.ViewingType;","lastModifiedDate":"2021-11-04"},{"lineNumber":16,"author":{"gitId":"tanhuakun"},"content":"import seedu.address.model.group.Group;","lastModifiedDate":"2021-10-23"},{"lineNumber":17,"author":{"gitId":"tanhuakun"},"content":"import seedu.address.model.id.UniqueId;","lastModifiedDate":"2021-10-23"},{"lineNumber":18,"author":{"gitId":"tanhuakun"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2021-10-23"},{"lineNumber":19,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":20,"author":{"gitId":"tanhuakun"},"content":"/**","lastModifiedDate":"2021-10-23"},{"lineNumber":21,"author":{"gitId":"tanhuakun"},"content":" * Adds a group to the model with the associated person ids.","lastModifiedDate":"2021-10-23"},{"lineNumber":22,"author":{"gitId":"tanhuakun"},"content":" */","lastModifiedDate":"2021-10-23"},{"lineNumber":23,"author":{"gitId":"tanhuakun"},"content":"public class AddGroupCommand extends Command {","lastModifiedDate":"2021-10-23"},{"lineNumber":24,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":25,"author":{"gitId":"tanhuakun"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"New group created: %1$s\";","lastModifiedDate":"2021-10-23"},{"lineNumber":26,"author":{"gitId":"tanhuakun"},"content":"    public static final String MESSAGE_DUPLICATE_GROUP \u003d \"This group already exists in the address book\";","lastModifiedDate":"2021-10-23"},{"lineNumber":27,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":28,"author":{"gitId":"tanhuakun"},"content":"    private final Group toAdd;","lastModifiedDate":"2021-10-23"},{"lineNumber":29,"author":{"gitId":"tanhuakun"},"content":"    private final List\u003cIndex\u003e personsIndex;","lastModifiedDate":"2021-10-23"},{"lineNumber":30,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":31,"author":{"gitId":"tanhuakun"},"content":"    /**","lastModifiedDate":"2021-10-23"},{"lineNumber":32,"author":{"gitId":"tanhuakun"},"content":"     * Constructs a {@code AddGroupCommand} with the given parameters","lastModifiedDate":"2021-10-23"},{"lineNumber":33,"author":{"gitId":"tanhuakun"},"content":"     *","lastModifiedDate":"2021-10-25"},{"lineNumber":34,"author":{"gitId":"tanhuakun"},"content":"     * @param toAdd        Group to add","lastModifiedDate":"2021-10-23"},{"lineNumber":35,"author":{"gitId":"tanhuakun"},"content":"     * @param personsIndex List of indexes of persons to add","lastModifiedDate":"2021-10-23"},{"lineNumber":36,"author":{"gitId":"tanhuakun"},"content":"     */","lastModifiedDate":"2021-10-23"},{"lineNumber":37,"author":{"gitId":"tanhuakun"},"content":"    public AddGroupCommand(Group toAdd, List\u003cIndex\u003e personsIndex) {","lastModifiedDate":"2021-10-23"},{"lineNumber":38,"author":{"gitId":"tanhuakun"},"content":"        this.toAdd \u003d toAdd;","lastModifiedDate":"2021-10-23"},{"lineNumber":39,"author":{"gitId":"tanhuakun"},"content":"        this.personsIndex \u003d new ArrayList\u003c\u003e(personsIndex);","lastModifiedDate":"2021-10-23"},{"lineNumber":40,"author":{"gitId":"tanhuakun"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":41,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":42,"author":{"gitId":"tanhuakun"},"content":"    @Override","lastModifiedDate":"2021-10-23"},{"lineNumber":43,"author":{"gitId":"tanhuakun"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2021-10-23"},{"lineNumber":44,"author":{"gitId":"tanhuakun"},"content":"        if (model.hasGroup(toAdd)) {","lastModifiedDate":"2021-10-23"},{"lineNumber":45,"author":{"gitId":"tanhuakun"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_GROUP);","lastModifiedDate":"2021-10-23"},{"lineNumber":46,"author":{"gitId":"tanhuakun"},"content":"        }","lastModifiedDate":"2021-10-23"},{"lineNumber":47,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":48,"author":{"gitId":"tanhuakun"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2021-10-23"},{"lineNumber":49,"author":{"gitId":"tanhuakun"},"content":"        Set\u003cUniqueId\u003e personsId \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2021-10-23"},{"lineNumber":50,"author":{"gitId":"tanhuakun"},"content":"        ArrayList\u003cPerson\u003e personsToReplace \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-23"},{"lineNumber":51,"author":{"gitId":"tanhuakun"},"content":"        ArrayList\u003cPerson\u003e personsWithGroupId \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-23"},{"lineNumber":52,"author":{"gitId":"tanhuakun"},"content":"        for (Index index : personsIndex) {","lastModifiedDate":"2021-10-23"},{"lineNumber":53,"author":{"gitId":"tanhuakun"},"content":"            if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2021-10-23"},{"lineNumber":54,"author":{"gitId":"tanhuakun"},"content":"                throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2021-10-23"},{"lineNumber":55,"author":{"gitId":"tanhuakun"},"content":"            }","lastModifiedDate":"2021-10-23"},{"lineNumber":56,"author":{"gitId":"tanhuakun"},"content":"            Person person \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2021-10-23"},{"lineNumber":57,"author":{"gitId":"tanhuakun"},"content":"            assert !person.hasGroupId(toAdd.getId()); // its a new group, there should not be an exisitng id!","lastModifiedDate":"2021-10-23"},{"lineNumber":58,"author":{"gitId":"tanhuakun"},"content":"            personsId.add(person.getId());","lastModifiedDate":"2021-10-23"},{"lineNumber":59,"author":{"gitId":"tanhuakun"},"content":"            personsToReplace.add(person);","lastModifiedDate":"2021-10-23"},{"lineNumber":60,"author":{"gitId":"tanhuakun"},"content":"            personsWithGroupId.add(person.addGroupId(toAdd.getId()));","lastModifiedDate":"2021-10-23"},{"lineNumber":61,"author":{"gitId":"tanhuakun"},"content":"        }","lastModifiedDate":"2021-10-23"},{"lineNumber":62,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":63,"author":{"gitId":"tanhuakun"},"content":"        assert personsId.size() \u003d\u003d personsIndex.size(); // all indexes are added with distinct ids.","lastModifiedDate":"2021-10-23"},{"lineNumber":64,"author":{"gitId":"tanhuakun"},"content":"        // update persons","lastModifiedDate":"2021-10-23"},{"lineNumber":65,"author":{"gitId":"tanhuakun"},"content":"        for (int i \u003d 0; i \u003c personsToReplace.size(); i++) {","lastModifiedDate":"2021-10-23"},{"lineNumber":66,"author":{"gitId":"tanhuakun"},"content":"            model.setPerson(personsToReplace.get(i), personsWithGroupId.get(i));","lastModifiedDate":"2021-10-23"},{"lineNumber":67,"author":{"gitId":"tanhuakun"},"content":"        }","lastModifiedDate":"2021-10-23"},{"lineNumber":68,"author":{"gitId":"tanhuakun"},"content":"        // add group!","lastModifiedDate":"2021-10-23"},{"lineNumber":69,"author":{"gitId":"tanhuakun"},"content":"        Group withIds \u003d toAdd.updateAssignedPersonIds(personsId);","lastModifiedDate":"2021-10-23"},{"lineNumber":70,"author":{"gitId":"tanhuakun"},"content":"        model.addGroup(withIds);","lastModifiedDate":"2021-10-23"},{"lineNumber":71,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":72,"author":{"gitId":"tanhuakun"},"content":"        model.setGroupToView(withIds);","lastModifiedDate":"2021-11-04"},{"lineNumber":73,"author":{"gitId":"tanhuakun"},"content":"        model.setViewingType(ViewingType.GROUP);","lastModifiedDate":"2021-11-04"},{"lineNumber":74,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":75,"author":{"gitId":"tanhuakun"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, withIds));","lastModifiedDate":"2021-10-23"},{"lineNumber":76,"author":{"gitId":"tanhuakun"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":77,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":78,"author":{"gitId":"tanhuakun"},"content":"    @Override","lastModifiedDate":"2021-10-25"},{"lineNumber":79,"author":{"gitId":"tanhuakun"},"content":"    public boolean equals(Object o) {","lastModifiedDate":"2021-10-25"},{"lineNumber":80,"author":{"gitId":"tanhuakun"},"content":"        if (this \u003d\u003d o) {","lastModifiedDate":"2021-10-25"},{"lineNumber":81,"author":{"gitId":"tanhuakun"},"content":"            return true;","lastModifiedDate":"2021-10-25"},{"lineNumber":82,"author":{"gitId":"tanhuakun"},"content":"        }","lastModifiedDate":"2021-10-25"},{"lineNumber":83,"author":{"gitId":"tanhuakun"},"content":"        if (o \u003d\u003d null || !(o instanceof AddGroupCommand)) {","lastModifiedDate":"2021-10-25"},{"lineNumber":84,"author":{"gitId":"tanhuakun"},"content":"            return false;","lastModifiedDate":"2021-10-25"},{"lineNumber":85,"author":{"gitId":"tanhuakun"},"content":"        }","lastModifiedDate":"2021-10-25"},{"lineNumber":86,"author":{"gitId":"tanhuakun"},"content":"        AddGroupCommand that \u003d (AddGroupCommand) o;","lastModifiedDate":"2021-10-25"},{"lineNumber":87,"author":{"gitId":"tanhuakun"},"content":"        return toAdd.isSameGroup(that.toAdd) \u0026\u0026 Objects.equals(personsIndex, that.personsIndex);","lastModifiedDate":"2021-10-25"},{"lineNumber":88,"author":{"gitId":"tanhuakun"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":89,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":90,"author":{"gitId":"tanhuakun"},"content":"    @Override","lastModifiedDate":"2021-10-25"},{"lineNumber":91,"author":{"gitId":"tanhuakun"},"content":"    public int hashCode() {","lastModifiedDate":"2021-10-25"},{"lineNumber":92,"author":{"gitId":"tanhuakun"},"content":"        return Objects.hash(toAdd, personsIndex);","lastModifiedDate":"2021-10-25"},{"lineNumber":93,"author":{"gitId":"tanhuakun"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":94,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":95,"author":{"gitId":"tanhuakun"},"content":"}","lastModifiedDate":"2021-10-23"}],"authorContributionMap":{"tanhuakun":95}},{"path":"src/main/java/seedu/address/logic/commands/groups/DeleteGroupCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kvihashini"},"content":"package seedu.address.logic.commands.groups;","lastModifiedDate":"2021-10-24"},{"lineNumber":2,"author":{"gitId":"kvihashini"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":3,"author":{"gitId":"kvihashini"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-24"},{"lineNumber":4,"author":{"gitId":"tanhuakun"},"content":"import static seedu.address.logic.parser.CliSyntax.GROUP_COMMAND;","lastModifiedDate":"2021-11-05"},{"lineNumber":5,"author":{"gitId":"kvihashini"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":6,"author":{"gitId":"kvihashini"},"content":"import java.util.List;","lastModifiedDate":"2021-10-24"},{"lineNumber":7,"author":{"gitId":"kvihashini"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":8,"author":{"gitId":"kvihashini"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2021-10-24"},{"lineNumber":9,"author":{"gitId":"kvihashini"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-10-24"},{"lineNumber":10,"author":{"gitId":"kvihashini"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2021-10-24"},{"lineNumber":11,"author":{"gitId":"kvihashini"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2021-10-24"},{"lineNumber":12,"author":{"gitId":"kvihashini"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-10-24"},{"lineNumber":13,"author":{"gitId":"kvihashini"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-10-24"},{"lineNumber":14,"author":{"gitId":"tanhuakun"},"content":"import seedu.address.model.ViewingType;","lastModifiedDate":"2021-11-04"},{"lineNumber":15,"author":{"gitId":"kvihashini"},"content":"import seedu.address.model.group.Group;","lastModifiedDate":"2021-10-24"},{"lineNumber":16,"author":{"gitId":"kvihashini"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":17,"author":{"gitId":"kvihashini"},"content":"/**","lastModifiedDate":"2021-10-24"},{"lineNumber":18,"author":{"gitId":"kvihashini"},"content":" * Deletes a group identified using it\u0027s displayed index from the address book.","lastModifiedDate":"2021-10-24"},{"lineNumber":19,"author":{"gitId":"kvihashini"},"content":" */","lastModifiedDate":"2021-10-24"},{"lineNumber":20,"author":{"gitId":"kvihashini"},"content":"public class DeleteGroupCommand extends Command {","lastModifiedDate":"2021-10-24"},{"lineNumber":21,"author":{"gitId":"kvihashini"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":22,"author":{"gitId":"kvihashini"},"content":"    public static final String COMMAND_WORD \u003d \"-d\";","lastModifiedDate":"2021-10-25"},{"lineNumber":23,"author":{"gitId":"kvihashini"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":24,"author":{"gitId":"tanhuakun"},"content":"    public static final String MESSAGE_USAGE \u003d GROUP_COMMAND + \" \" + COMMAND_WORD","lastModifiedDate":"2021-11-05"},{"lineNumber":25,"author":{"gitId":"kvihashini"},"content":"            + \": Deletes the group identified by the index number used in the displayed group list.\\n\"","lastModifiedDate":"2021-10-24"},{"lineNumber":26,"author":{"gitId":"kvihashini"},"content":"            + \"Parameters: INDEX (must be a positive integer)\\n\"","lastModifiedDate":"2021-10-24"},{"lineNumber":27,"author":{"gitId":"Neha-5678"},"content":"            + \"Example: \" + GROUP_COMMAND + \" \" + COMMAND_WORD + \" 1\";","lastModifiedDate":"2021-11-08"},{"lineNumber":28,"author":{"gitId":"kvihashini"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":29,"author":{"gitId":"kvihashini"},"content":"    public static final String MESSAGE_DELETE_GROUP_SUCCESS \u003d \"Deleted Group: %1$s\";","lastModifiedDate":"2021-10-24"},{"lineNumber":30,"author":{"gitId":"kvihashini"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":31,"author":{"gitId":"kvihashini"},"content":"    private final Index targetIndex;","lastModifiedDate":"2021-10-24"},{"lineNumber":32,"author":{"gitId":"kvihashini"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":33,"author":{"gitId":"kvihashini"},"content":"    public DeleteGroupCommand(Index targetIndex) {","lastModifiedDate":"2021-10-24"},{"lineNumber":34,"author":{"gitId":"kvihashini"},"content":"        this.targetIndex \u003d targetIndex;","lastModifiedDate":"2021-10-24"},{"lineNumber":35,"author":{"gitId":"kvihashini"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":36,"author":{"gitId":"kvihashini"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":37,"author":{"gitId":"kvihashini"},"content":"    @Override","lastModifiedDate":"2021-10-24"},{"lineNumber":38,"author":{"gitId":"kvihashini"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2021-10-24"},{"lineNumber":39,"author":{"gitId":"kvihashini"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-10-24"},{"lineNumber":40,"author":{"gitId":"kvihashini"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":41,"author":{"gitId":"kvihashini"},"content":"        List\u003cGroup\u003e lastShownList \u003d model.getFilteredGroupList();","lastModifiedDate":"2021-10-24"},{"lineNumber":42,"author":{"gitId":"kvihashini"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":43,"author":{"gitId":"kvihashini"},"content":"        if (targetIndex.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2021-10-24"},{"lineNumber":44,"author":{"gitId":"kvihashini"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_GROUP_DISPLAYED_INDEX);","lastModifiedDate":"2021-10-24"},{"lineNumber":45,"author":{"gitId":"kvihashini"},"content":"        }","lastModifiedDate":"2021-10-24"},{"lineNumber":46,"author":{"gitId":"kvihashini"},"content":"        Group groupToDelete \u003d lastShownList.get(targetIndex.getZeroBased());","lastModifiedDate":"2021-10-24"},{"lineNumber":47,"author":{"gitId":"kvihashini"},"content":"        model.deleteGroup(groupToDelete);","lastModifiedDate":"2021-10-24"},{"lineNumber":48,"author":{"gitId":"tanhuakun"},"content":"        model.updateLessonWithAttendeesList();","lastModifiedDate":"2021-10-25"},{"lineNumber":49,"author":{"gitId":"tanhuakun"},"content":"        model.setViewingType(ViewingType.SCHEDULE);","lastModifiedDate":"2021-11-04"},{"lineNumber":50,"author":{"gitId":"kvihashini"},"content":"        return new CommandResult(String.format(MESSAGE_DELETE_GROUP_SUCCESS, groupToDelete));","lastModifiedDate":"2021-10-24"},{"lineNumber":51,"author":{"gitId":"kvihashini"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":52,"author":{"gitId":"kvihashini"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":53,"author":{"gitId":"kvihashini"},"content":"    @Override","lastModifiedDate":"2021-10-24"},{"lineNumber":54,"author":{"gitId":"kvihashini"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-24"},{"lineNumber":55,"author":{"gitId":"kvihashini"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-10-24"},{"lineNumber":56,"author":{"gitId":"kvihashini"},"content":"                || (other instanceof DeleteGroupCommand // instanceof handles nulls","lastModifiedDate":"2021-10-24"},{"lineNumber":57,"author":{"gitId":"kvihashini"},"content":"                \u0026\u0026 targetIndex.equals(((DeleteGroupCommand) other).targetIndex)); // state check","lastModifiedDate":"2021-10-24"},{"lineNumber":58,"author":{"gitId":"kvihashini"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":59,"author":{"gitId":"kvihashini"},"content":"}","lastModifiedDate":"2021-10-24"}],"authorContributionMap":{"Neha-5678":1,"kvihashini":53,"tanhuakun":5}},{"path":"src/main/java/seedu/address/logic/commands/groups/GroupAddLessonCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tanhuakun"},"content":"package seedu.address.logic.commands.groups;","lastModifiedDate":"2021-10-24"},{"lineNumber":2,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":3,"author":{"gitId":"tanhuakun"},"content":"import java.util.List;","lastModifiedDate":"2021-10-24"},{"lineNumber":4,"author":{"gitId":"tanhuakun"},"content":"import java.util.Set;","lastModifiedDate":"2021-10-24"},{"lineNumber":5,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":6,"author":{"gitId":"tanhuakun"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2021-10-24"},{"lineNumber":7,"author":{"gitId":"tanhuakun"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-10-24"},{"lineNumber":8,"author":{"gitId":"tanhuakun"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2021-10-24"},{"lineNumber":9,"author":{"gitId":"tanhuakun"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2021-10-24"},{"lineNumber":10,"author":{"gitId":"tanhuakun"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-10-24"},{"lineNumber":11,"author":{"gitId":"tanhuakun"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-10-24"},{"lineNumber":12,"author":{"gitId":"tanhuakun"},"content":"import seedu.address.model.ViewingType;","lastModifiedDate":"2021-11-04"},{"lineNumber":13,"author":{"gitId":"tanhuakun"},"content":"import seedu.address.model.group.Group;","lastModifiedDate":"2021-10-24"},{"lineNumber":14,"author":{"gitId":"tanhuakun"},"content":"import seedu.address.model.id.UniqueIdMapper;","lastModifiedDate":"2021-10-24"},{"lineNumber":15,"author":{"gitId":"tanhuakun"},"content":"import seedu.address.model.lesson.Lesson;","lastModifiedDate":"2021-10-24"},{"lineNumber":16,"author":{"gitId":"tanhuakun"},"content":"import seedu.address.model.lesson.exceptions.CannotAssignException;","lastModifiedDate":"2021-10-24"},{"lineNumber":17,"author":{"gitId":"tanhuakun"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2021-10-24"},{"lineNumber":18,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":19,"author":{"gitId":"tanhuakun"},"content":"public class GroupAddLessonCommand extends Command {","lastModifiedDate":"2021-10-24"},{"lineNumber":20,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":21,"author":{"gitId":"tanhuakun"},"content":"    public static final String CANNOT_ASSIGN_MESSAGE \u003d \" in the group cannot be assigned this lesson\";","lastModifiedDate":"2021-10-24"},{"lineNumber":22,"author":{"gitId":"tanhuakun"},"content":"    public static final String ADD_LESSON_SUCCESS \u003d \"Lesson added\";","lastModifiedDate":"2021-11-05"},{"lineNumber":23,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":24,"author":{"gitId":"tanhuakun"},"content":"    private final Index groupIndex;","lastModifiedDate":"2021-10-24"},{"lineNumber":25,"author":{"gitId":"tanhuakun"},"content":"    private final Lesson lessonToAdd;","lastModifiedDate":"2021-10-24"},{"lineNumber":26,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":27,"author":{"gitId":"tanhuakun"},"content":"    /**","lastModifiedDate":"2021-10-24"},{"lineNumber":28,"author":{"gitId":"tanhuakun"},"content":"     * Constructs a {@code GroupAddLessonCommand} with the given index and lesson","lastModifiedDate":"2021-10-24"},{"lineNumber":29,"author":{"gitId":"tanhuakun"},"content":"     * @param index of group to add lesson to","lastModifiedDate":"2021-10-24"},{"lineNumber":30,"author":{"gitId":"tanhuakun"},"content":"     * @param lesson to add","lastModifiedDate":"2021-10-24"},{"lineNumber":31,"author":{"gitId":"tanhuakun"},"content":"     */","lastModifiedDate":"2021-10-24"},{"lineNumber":32,"author":{"gitId":"tanhuakun"},"content":"    public GroupAddLessonCommand(Index index, Lesson lesson) {","lastModifiedDate":"2021-10-24"},{"lineNumber":33,"author":{"gitId":"tanhuakun"},"content":"        groupIndex \u003d index;","lastModifiedDate":"2021-10-24"},{"lineNumber":34,"author":{"gitId":"tanhuakun"},"content":"        lessonToAdd \u003d lesson;","lastModifiedDate":"2021-10-24"},{"lineNumber":35,"author":{"gitId":"tanhuakun"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":36,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":37,"author":{"gitId":"tanhuakun"},"content":"    @Override","lastModifiedDate":"2021-10-24"},{"lineNumber":38,"author":{"gitId":"tanhuakun"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2021-10-24"},{"lineNumber":39,"author":{"gitId":"tanhuakun"},"content":"        List\u003cGroup\u003e groupList \u003d model.getFilteredGroupList();","lastModifiedDate":"2021-10-24"},{"lineNumber":40,"author":{"gitId":"tanhuakun"},"content":"        if (groupIndex.getZeroBased() \u003e\u003d groupList.size()) {","lastModifiedDate":"2021-10-24"},{"lineNumber":41,"author":{"gitId":"tanhuakun"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_GROUP_DISPLAYED_INDEX);","lastModifiedDate":"2021-10-25"},{"lineNumber":42,"author":{"gitId":"tanhuakun"},"content":"        }","lastModifiedDate":"2021-10-24"},{"lineNumber":43,"author":{"gitId":"tanhuakun"},"content":"        Group group \u003d groupList.get(groupIndex.getZeroBased());","lastModifiedDate":"2021-10-24"},{"lineNumber":44,"author":{"gitId":"tanhuakun"},"content":"        Group groupWithLesson;","lastModifiedDate":"2021-10-24"},{"lineNumber":45,"author":{"gitId":"tanhuakun"},"content":"        try {","lastModifiedDate":"2021-10-24"},{"lineNumber":46,"author":{"gitId":"tanhuakun"},"content":"            groupWithLesson \u003d group.assignLesson(lessonToAdd);","lastModifiedDate":"2021-10-24"},{"lineNumber":47,"author":{"gitId":"tanhuakun"},"content":"        } catch (CannotAssignException e) {","lastModifiedDate":"2021-10-24"},{"lineNumber":48,"author":{"gitId":"tanhuakun"},"content":"            throw new CommandException(e.getMessage());","lastModifiedDate":"2021-10-24"},{"lineNumber":49,"author":{"gitId":"tanhuakun"},"content":"        }","lastModifiedDate":"2021-10-24"},{"lineNumber":50,"author":{"gitId":"tanhuakun"},"content":"        assert group.isSameGroup(groupWithLesson); // assigning lesson should not change details","lastModifiedDate":"2021-10-24"},{"lineNumber":51,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":52,"author":{"gitId":"tanhuakun"},"content":"        UniqueIdMapper\u003cPerson\u003e personMapper \u003d model.getPersonMapper();","lastModifiedDate":"2021-10-24"},{"lineNumber":53,"author":{"gitId":"tanhuakun"},"content":"        Set\u003cPerson\u003e personsInGroup \u003d personMapper.getFromUniqueIds(group.getAssignedPersonIds());","lastModifiedDate":"2021-10-24"},{"lineNumber":54,"author":{"gitId":"tanhuakun"},"content":"        for (Person person : personsInGroup) {","lastModifiedDate":"2021-10-24"},{"lineNumber":55,"author":{"gitId":"tanhuakun"},"content":"            if (!person.canAssignLesson(lessonToAdd)) {","lastModifiedDate":"2021-10-24"},{"lineNumber":56,"author":{"gitId":"tanhuakun"},"content":"                throw new CommandException(person.getAttendeeDetails() + CANNOT_ASSIGN_MESSAGE);","lastModifiedDate":"2021-10-24"},{"lineNumber":57,"author":{"gitId":"tanhuakun"},"content":"            }","lastModifiedDate":"2021-10-24"},{"lineNumber":58,"author":{"gitId":"tanhuakun"},"content":"        }","lastModifiedDate":"2021-10-24"},{"lineNumber":59,"author":{"gitId":"tanhuakun"},"content":"        model.setGroup(group, groupWithLesson);","lastModifiedDate":"2021-10-24"},{"lineNumber":60,"author":{"gitId":"tanhuakun"},"content":"        model.updateLessonWithAttendeesList();","lastModifiedDate":"2021-10-25"},{"lineNumber":61,"author":{"gitId":"tanhuakun"},"content":"        model.updateFilteredGroupList(Model.PREDICATE_SHOW_ALL_GROUPS);","lastModifiedDate":"2021-10-25"},{"lineNumber":62,"author":{"gitId":"tanhuakun"},"content":"        model.setGroupToView(groupWithLesson);","lastModifiedDate":"2021-11-04"},{"lineNumber":63,"author":{"gitId":"tanhuakun"},"content":"        model.setViewingType(ViewingType.GROUP);","lastModifiedDate":"2021-11-04"},{"lineNumber":64,"author":{"gitId":"tanhuakun"},"content":"        return new CommandResult(ADD_LESSON_SUCCESS);","lastModifiedDate":"2021-11-05"},{"lineNumber":65,"author":{"gitId":"tanhuakun"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":66,"author":{"gitId":"tanhuakun"},"content":"}","lastModifiedDate":"2021-10-24"}],"authorContributionMap":{"tanhuakun":66}},{"path":"src/main/java/seedu/address/logic/commands/groups/GroupRemoveLessonCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tanhuakun"},"content":"package seedu.address.logic.commands.groups;","lastModifiedDate":"2021-10-25"},{"lineNumber":2,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":3,"author":{"gitId":"tanhuakun"},"content":"import java.util.List;","lastModifiedDate":"2021-10-25"},{"lineNumber":4,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":5,"author":{"gitId":"tanhuakun"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2021-10-25"},{"lineNumber":6,"author":{"gitId":"tanhuakun"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-10-25"},{"lineNumber":7,"author":{"gitId":"tanhuakun"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2021-10-25"},{"lineNumber":8,"author":{"gitId":"tanhuakun"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2021-10-25"},{"lineNumber":9,"author":{"gitId":"tanhuakun"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-10-25"},{"lineNumber":10,"author":{"gitId":"tanhuakun"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-10-25"},{"lineNumber":11,"author":{"gitId":"tanhuakun"},"content":"import seedu.address.model.ViewingType;","lastModifiedDate":"2021-11-04"},{"lineNumber":12,"author":{"gitId":"tanhuakun"},"content":"import seedu.address.model.group.Group;","lastModifiedDate":"2021-10-25"},{"lineNumber":13,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":14,"author":{"gitId":"tanhuakun"},"content":"public class GroupRemoveLessonCommand extends Command {","lastModifiedDate":"2021-10-25"},{"lineNumber":15,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":16,"author":{"gitId":"tanhuakun"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Lesson deleted\";","lastModifiedDate":"2021-11-05"},{"lineNumber":17,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":18,"author":{"gitId":"tanhuakun"},"content":"    private Index groupIndex;","lastModifiedDate":"2021-10-25"},{"lineNumber":19,"author":{"gitId":"tanhuakun"},"content":"    private Index lessonIndex;","lastModifiedDate":"2021-10-25"},{"lineNumber":20,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":21,"author":{"gitId":"tanhuakun"},"content":"    /**","lastModifiedDate":"2021-10-25"},{"lineNumber":22,"author":{"gitId":"tanhuakun"},"content":"     * Constructs a GroupRemoveLessonCommand object with the given group index and lesson index.","lastModifiedDate":"2021-10-25"},{"lineNumber":23,"author":{"gitId":"tanhuakun"},"content":"     * @param groupIndex of group to remove lesson from.","lastModifiedDate":"2021-10-25"},{"lineNumber":24,"author":{"gitId":"tanhuakun"},"content":"     * @param lessonIndex of lesson in group to remove.","lastModifiedDate":"2021-10-25"},{"lineNumber":25,"author":{"gitId":"tanhuakun"},"content":"     */","lastModifiedDate":"2021-10-25"},{"lineNumber":26,"author":{"gitId":"tanhuakun"},"content":"    public GroupRemoveLessonCommand(Index groupIndex, Index lessonIndex) {","lastModifiedDate":"2021-10-25"},{"lineNumber":27,"author":{"gitId":"tanhuakun"},"content":"        this.groupIndex \u003d groupIndex;","lastModifiedDate":"2021-10-25"},{"lineNumber":28,"author":{"gitId":"tanhuakun"},"content":"        this.lessonIndex \u003d lessonIndex;","lastModifiedDate":"2021-10-25"},{"lineNumber":29,"author":{"gitId":"tanhuakun"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":30,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":31,"author":{"gitId":"tanhuakun"},"content":"    @Override","lastModifiedDate":"2021-10-25"},{"lineNumber":32,"author":{"gitId":"tanhuakun"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2021-10-25"},{"lineNumber":33,"author":{"gitId":"tanhuakun"},"content":"        List\u003cGroup\u003e groups \u003d model.getFilteredGroupList();","lastModifiedDate":"2021-10-25"},{"lineNumber":34,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":35,"author":{"gitId":"tanhuakun"},"content":"        if (groupIndex.getZeroBased() \u003e\u003d groups.size()) {","lastModifiedDate":"2021-10-25"},{"lineNumber":36,"author":{"gitId":"tanhuakun"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_GROUP_DISPLAYED_INDEX);","lastModifiedDate":"2021-10-25"},{"lineNumber":37,"author":{"gitId":"tanhuakun"},"content":"        }","lastModifiedDate":"2021-10-25"},{"lineNumber":38,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":39,"author":{"gitId":"tanhuakun"},"content":"        Group toRemoveFrom \u003d groups.get(groupIndex.getZeroBased());","lastModifiedDate":"2021-10-25"},{"lineNumber":40,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":41,"author":{"gitId":"tanhuakun"},"content":"        if (!toRemoveFrom.isValidLessonIndex(lessonIndex.getZeroBased())) {","lastModifiedDate":"2021-10-25"},{"lineNumber":42,"author":{"gitId":"tanhuakun"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_LESSON_DISPLAYED_INDEX);","lastModifiedDate":"2021-10-25"},{"lineNumber":43,"author":{"gitId":"tanhuakun"},"content":"        }","lastModifiedDate":"2021-10-25"},{"lineNumber":44,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":45,"author":{"gitId":"tanhuakun"},"content":"        Group removedLesson \u003d toRemoveFrom.unassignLesson(lessonIndex.getZeroBased());","lastModifiedDate":"2021-10-25"},{"lineNumber":46,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":47,"author":{"gitId":"tanhuakun"},"content":"        model.setGroup(toRemoveFrom, removedLesson);","lastModifiedDate":"2021-10-25"},{"lineNumber":48,"author":{"gitId":"tanhuakun"},"content":"        model.updateFilteredGroupList(Model.PREDICATE_SHOW_ALL_GROUPS);","lastModifiedDate":"2021-10-25"},{"lineNumber":49,"author":{"gitId":"tanhuakun"},"content":"        model.setGroupToView(removedLesson);","lastModifiedDate":"2021-11-04"},{"lineNumber":50,"author":{"gitId":"tanhuakun"},"content":"        model.setViewingType(ViewingType.GROUP);","lastModifiedDate":"2021-11-04"},{"lineNumber":51,"author":{"gitId":"tanhuakun"},"content":"        return new CommandResult(MESSAGE_SUCCESS);","lastModifiedDate":"2021-10-25"},{"lineNumber":52,"author":{"gitId":"tanhuakun"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":53,"author":{"gitId":"tanhuakun"},"content":"}","lastModifiedDate":"2021-10-25"}],"authorContributionMap":{"tanhuakun":53}},{"path":"src/main/java/seedu/address/logic/commands/groups/ViewGroupCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kvihashini"},"content":"package seedu.address.logic.commands.groups;","lastModifiedDate":"2021-10-25"},{"lineNumber":2,"author":{"gitId":"kvihashini"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":3,"author":{"gitId":"kvihashini"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-25"},{"lineNumber":4,"author":{"gitId":"tanhuakun"},"content":"import static seedu.address.logic.parser.CliSyntax.GROUP_COMMAND;","lastModifiedDate":"2021-11-05"},{"lineNumber":5,"author":{"gitId":"kvihashini"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":6,"author":{"gitId":"kvihashini"},"content":"import java.util.List;","lastModifiedDate":"2021-10-25"},{"lineNumber":7,"author":{"gitId":"kvihashini"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":8,"author":{"gitId":"kvihashini"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2021-10-25"},{"lineNumber":9,"author":{"gitId":"kvihashini"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-10-25"},{"lineNumber":10,"author":{"gitId":"kvihashini"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2021-10-25"},{"lineNumber":11,"author":{"gitId":"kvihashini"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2021-10-25"},{"lineNumber":12,"author":{"gitId":"kvihashini"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-10-25"},{"lineNumber":13,"author":{"gitId":"kvihashini"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-10-25"},{"lineNumber":14,"author":{"gitId":"kvihashini"},"content":"import seedu.address.model.ViewingType;","lastModifiedDate":"2021-10-25"},{"lineNumber":15,"author":{"gitId":"kvihashini"},"content":"import seedu.address.model.group.Group;","lastModifiedDate":"2021-10-25"},{"lineNumber":16,"author":{"gitId":"kvihashini"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":17,"author":{"gitId":"kvihashini"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":18,"author":{"gitId":"kvihashini"},"content":"/**","lastModifiedDate":"2021-10-25"},{"lineNumber":19,"author":{"gitId":"kvihashini"},"content":" * Deletes a group identified using it\u0027s displayed index from the address book.","lastModifiedDate":"2021-10-25"},{"lineNumber":20,"author":{"gitId":"kvihashini"},"content":" */","lastModifiedDate":"2021-10-25"},{"lineNumber":21,"author":{"gitId":"kvihashini"},"content":"public class ViewGroupCommand extends Command {","lastModifiedDate":"2021-10-25"},{"lineNumber":22,"author":{"gitId":"kvihashini"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":23,"author":{"gitId":"kvihashini"},"content":"    public static final String COMMAND_WORD \u003d \"-v\";","lastModifiedDate":"2021-10-25"},{"lineNumber":24,"author":{"gitId":"kvihashini"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":25,"author":{"gitId":"tanhuakun"},"content":"    public static final String MESSAGE_USAGE \u003d GROUP_COMMAND + \" \" + COMMAND_WORD","lastModifiedDate":"2021-11-05"},{"lineNumber":26,"author":{"gitId":"kvihashini"},"content":"            + \": Views a group in the groups list.\\n\"","lastModifiedDate":"2021-10-25"},{"lineNumber":27,"author":{"gitId":"kvihashini"},"content":"            + \"Parameters: INDEX (must be a positive integer)\\n\"","lastModifiedDate":"2021-10-25"},{"lineNumber":28,"author":{"gitId":"Neha-5678"},"content":"            + \"Example: \" + GROUP_COMMAND + \" \" + COMMAND_WORD + \" 1\";","lastModifiedDate":"2021-11-08"},{"lineNumber":29,"author":{"gitId":"kvihashini"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":30,"author":{"gitId":"kvihashini"},"content":"    public static final String MESSAGE_VIEW_GROUP_SUCCESS \u003d \"View Group: %1$s\";","lastModifiedDate":"2021-10-25"},{"lineNumber":31,"author":{"gitId":"kvihashini"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":32,"author":{"gitId":"kvihashini"},"content":"    private final Index targetIndex;","lastModifiedDate":"2021-10-25"},{"lineNumber":33,"author":{"gitId":"kvihashini"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":34,"author":{"gitId":"kvihashini"},"content":"    public ViewGroupCommand(Index targetIndex) {","lastModifiedDate":"2021-10-25"},{"lineNumber":35,"author":{"gitId":"kvihashini"},"content":"        this.targetIndex \u003d targetIndex;","lastModifiedDate":"2021-10-25"},{"lineNumber":36,"author":{"gitId":"kvihashini"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":37,"author":{"gitId":"kvihashini"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":38,"author":{"gitId":"kvihashini"},"content":"    @Override","lastModifiedDate":"2021-10-25"},{"lineNumber":39,"author":{"gitId":"kvihashini"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2021-10-25"},{"lineNumber":40,"author":{"gitId":"kvihashini"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-10-25"},{"lineNumber":41,"author":{"gitId":"kvihashini"},"content":"        List\u003cGroup\u003e lastShownList \u003d model.getFilteredGroupList();","lastModifiedDate":"2021-10-25"},{"lineNumber":42,"author":{"gitId":"kvihashini"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":43,"author":{"gitId":"kvihashini"},"content":"        if (targetIndex.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2021-10-25"},{"lineNumber":44,"author":{"gitId":"kvihashini"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_GROUP_DISPLAYED_INDEX);","lastModifiedDate":"2021-10-25"},{"lineNumber":45,"author":{"gitId":"kvihashini"},"content":"        }","lastModifiedDate":"2021-10-25"},{"lineNumber":46,"author":{"gitId":"kvihashini"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":47,"author":{"gitId":"kvihashini"},"content":"        Group groupToView \u003d lastShownList.get(targetIndex.getZeroBased());","lastModifiedDate":"2021-10-25"},{"lineNumber":48,"author":{"gitId":"kvihashini"},"content":"        model.setGroupToView(groupToView);","lastModifiedDate":"2021-10-25"},{"lineNumber":49,"author":{"gitId":"kvihashini"},"content":"        model.setViewingType(ViewingType.GROUP);","lastModifiedDate":"2021-10-25"},{"lineNumber":50,"author":{"gitId":"kvihashini"},"content":"        return new CommandResult(String.format(MESSAGE_VIEW_GROUP_SUCCESS, groupToView));","lastModifiedDate":"2021-10-25"},{"lineNumber":51,"author":{"gitId":"kvihashini"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":52,"author":{"gitId":"kvihashini"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":53,"author":{"gitId":"kvihashini"},"content":"    @Override","lastModifiedDate":"2021-10-25"},{"lineNumber":54,"author":{"gitId":"kvihashini"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-25"},{"lineNumber":55,"author":{"gitId":"kvihashini"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-10-25"},{"lineNumber":56,"author":{"gitId":"kvihashini"},"content":"                || (other instanceof ViewGroupCommand // instanceof handles nulls","lastModifiedDate":"2021-10-25"},{"lineNumber":57,"author":{"gitId":"kvihashini"},"content":"                \u0026\u0026 targetIndex.equals(((ViewGroupCommand) other).targetIndex)); // state check","lastModifiedDate":"2021-10-25"},{"lineNumber":58,"author":{"gitId":"kvihashini"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":59,"author":{"gitId":"kvihashini"},"content":"}","lastModifiedDate":"2021-10-25"}],"authorContributionMap":{"Neha-5678":1,"kvihashini":56,"tanhuakun":2}},{"path":"src/main/java/seedu/address/logic/commands/persons/AddPersonCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tanhuakun"},"content":"package seedu.address.logic.commands.persons;","lastModifiedDate":"2021-10-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"tanhuakun"},"content":"import static seedu.address.logic.parser.CliSyntax.PERSON_COMMAND;","lastModifiedDate":"2021-11-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-05-09"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-05-09"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-05-09"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-05-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":11,"author":{"gitId":"tanhuakun"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2021-10-03"},{"lineNumber":12,"author":{"gitId":"tanhuakun"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2021-10-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":15,"author":{"gitId":"tanhuakun"},"content":"import seedu.address.model.ViewingType;","lastModifiedDate":"2021-11-04"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-01-18"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * Adds a person to the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"tanhuakun"},"content":"public class AddPersonCommand extends Command {","lastModifiedDate":"2021-10-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"tanhuakun"},"content":"    public static final String COMMAND_WORD \u003d \"-a\";","lastModifiedDate":"2021-10-03"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"tanhuakun"},"content":"    public static final String MESSAGE_USAGE \u003d PERSON_COMMAND + \" \" + COMMAND_WORD","lastModifiedDate":"2021-11-05"},{"lineNumber":26,"author":{"gitId":"Neha-5678"},"content":"            + \": Adds a student to the address book. \"","lastModifiedDate":"2021-11-06"},{"lineNumber":27,"author":{"gitId":"-"},"content":"            + \"Parameters: \"","lastModifiedDate":"2017-06-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"            + PREFIX_NAME + \"NAME \"","lastModifiedDate":"2017-06-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"            + PREFIX_PHONE + \"PHONE \"","lastModifiedDate":"2017-05-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            + PREFIX_EMAIL + \"EMAIL \"","lastModifiedDate":"2017-05-09"},{"lineNumber":31,"author":{"gitId":"-"},"content":"            + PREFIX_ADDRESS + \"ADDRESS \"","lastModifiedDate":"2017-05-09"},{"lineNumber":32,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_TAG + \"TAG]...\\n\"","lastModifiedDate":"2017-05-09"},{"lineNumber":33,"author":{"gitId":"tanhuakun"},"content":"            + \"Example: \" + PERSON_COMMAND + \" \" + COMMAND_WORD + \" \"","lastModifiedDate":"2021-11-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            + PREFIX_NAME + \"John Doe \"","lastModifiedDate":"2017-06-06"},{"lineNumber":35,"author":{"gitId":"-"},"content":"            + PREFIX_PHONE + \"98765432 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"            + PREFIX_EMAIL + \"johnd@example.com \"","lastModifiedDate":"2017-05-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":"            + PREFIX_ADDRESS + \"311, Clementi Ave 2, #02-25 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            + PREFIX_TAG + \"friends \"","lastModifiedDate":"2017-05-09"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            + PREFIX_TAG + \"owesMoney\";","lastModifiedDate":"2017-05-09"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"New person added: %1$s\";","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DUPLICATE_PERSON \u003d \"This person already exists in the address book\";","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    private final Person toAdd;","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":47,"author":{"gitId":"tanhuakun"},"content":"     * Creates an AddPersonCommand to add the specified {@code Person}","lastModifiedDate":"2021-10-03"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":49,"author":{"gitId":"tanhuakun"},"content":"    public AddPersonCommand(Person person) {","lastModifiedDate":"2021-10-03"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        requireNonNull(person);","lastModifiedDate":"2018-01-10"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        toAdd \u003d person;","lastModifiedDate":"2018-01-10"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2017-05-15"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        if (model.hasPerson(toAdd)) {","lastModifiedDate":"2018-08-07"},{"lineNumber":59,"author":{"gitId":"-"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2018-08-07"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        model.addPerson(toAdd);","lastModifiedDate":"2016-09-25"},{"lineNumber":63,"author":{"gitId":"tanhuakun"},"content":"        model.setPersonToView(toAdd);","lastModifiedDate":"2021-11-04"},{"lineNumber":64,"author":{"gitId":"tanhuakun"},"content":"        model.setViewingType(ViewingType.PERSON);","lastModifiedDate":"2021-11-04"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, toAdd));","lastModifiedDate":"2016-08-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-22"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-22"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-06-22"},{"lineNumber":71,"author":{"gitId":"tanhuakun"},"content":"                || (other instanceof AddPersonCommand // instanceof handles nulls","lastModifiedDate":"2021-10-03"},{"lineNumber":72,"author":{"gitId":"eltonyeh"},"content":"                \u0026\u0026 toAdd.hasSameData(((AddPersonCommand) other).toAdd));","lastModifiedDate":"2021-11-05"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-22"},{"lineNumber":74,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"Neha-5678":1,"tanhuakun":14,"eltonyeh":1,"-":58}},{"path":"src/main/java/seedu/address/logic/commands/persons/DeletePersonCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tanhuakun"},"content":"package seedu.address.logic.commands.persons;","lastModifiedDate":"2021-10-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"tanhuakun"},"content":"import static seedu.address.logic.parser.CliSyntax.PERSON_COMMAND;","lastModifiedDate":"2021-11-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-09-01"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2016-09-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":10,"author":{"gitId":"tanhuakun"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2021-10-03"},{"lineNumber":11,"author":{"gitId":"tanhuakun"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2021-10-03"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":14,"author":{"gitId":"kvihashini"},"content":"import seedu.address.model.ViewingType;","lastModifiedDate":"2021-11-06"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * Deletes a person identified using it\u0027s displayed index from the address book.","lastModifiedDate":"2018-04-01"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":20,"author":{"gitId":"tanhuakun"},"content":"public class DeletePersonCommand extends Command {","lastModifiedDate":"2021-10-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"tanhuakun"},"content":"    public static final String COMMAND_WORD \u003d \"-d\";","lastModifiedDate":"2021-10-03"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":24,"author":{"gitId":"tanhuakun"},"content":"    public static final String MESSAGE_USAGE \u003d PERSON_COMMAND + \" \" + COMMAND_WORD","lastModifiedDate":"2021-11-05"},{"lineNumber":25,"author":{"gitId":"Neha-5678"},"content":"            + \": Deletes the student identified by the index number used in the displayed student list.\\n\"","lastModifiedDate":"2021-11-06"},{"lineNumber":26,"author":{"gitId":"-"},"content":"            + \"Parameters: INDEX (must be a positive integer)\\n\"","lastModifiedDate":"2016-09-29"},{"lineNumber":27,"author":{"gitId":"tanhuakun"},"content":"            + \"Example: \" + PERSON_COMMAND + \" \" + COMMAND_WORD + \" 1\";","lastModifiedDate":"2021-11-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DELETE_PERSON_SUCCESS \u003d \"Deleted Person: %1$s\";","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private final Index targetIndex;","lastModifiedDate":"2017-06-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"tanhuakun"},"content":"    public DeletePersonCommand(Index targetIndex) {","lastModifiedDate":"2021-10-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        this.targetIndex \u003d targetIndex;","lastModifiedDate":"2016-09-22"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2018-04-19"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        if (targetIndex.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2018-04-19"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2018-04-19"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        Person personToDelete \u003d lastShownList.get(targetIndex.getZeroBased());","lastModifiedDate":"2018-04-19"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        model.deletePerson(personToDelete);","lastModifiedDate":"2016-09-25"},{"lineNumber":47,"author":{"gitId":"kvihashini"},"content":"        model.updateLessonWithAttendeesList();","lastModifiedDate":"2021-11-06"},{"lineNumber":48,"author":{"gitId":"kvihashini"},"content":"        model.setViewingType(ViewingType.SCHEDULE);","lastModifiedDate":"2021-11-06"},{"lineNumber":49,"author":{"gitId":"kvihashini"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        return new CommandResult(String.format(MESSAGE_DELETE_PERSON_SUCCESS, personToDelete));","lastModifiedDate":"2016-09-22"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-06-27"},{"lineNumber":56,"author":{"gitId":"tanhuakun"},"content":"                || (other instanceof DeletePersonCommand // instanceof handles nulls","lastModifiedDate":"2021-10-03"},{"lineNumber":57,"author":{"gitId":"tanhuakun"},"content":"                \u0026\u0026 targetIndex.equals(((DeletePersonCommand) other).targetIndex)); // state check","lastModifiedDate":"2021-10-03"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"Neha-5678":1,"kvihashini":4,"tanhuakun":11,"-":43}},{"path":"src/main/java/seedu/address/logic/commands/persons/EditPersonCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tanhuakun"},"content":"package seedu.address.logic.commands.persons;","lastModifiedDate":"2021-10-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"tanhuakun"},"content":"import static seedu.address.logic.parser.CliSyntax.PERSON_COMMAND;","lastModifiedDate":"2021-11-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-05-09"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-05-09"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-05-09"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-05-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2017-08-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":12,"author":{"gitId":"tanhuakun"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-16"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2018-01-11"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-01-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-12-26"},{"lineNumber":16,"author":{"gitId":"jeremy-7007"},"content":"import java.util.Map;","lastModifiedDate":"2021-10-26"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2016-12-26"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2016-12-26"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.CollectionUtil;","lastModifiedDate":"2016-12-26"},{"lineNumber":23,"author":{"gitId":"tanhuakun"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2021-10-03"},{"lineNumber":24,"author":{"gitId":"tanhuakun"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2021-10-03"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":27,"author":{"gitId":"tanhuakun"},"content":"import seedu.address.model.ViewingType;","lastModifiedDate":"2021-11-04"},{"lineNumber":28,"author":{"gitId":"tanhuakun"},"content":"import seedu.address.model.group.Group;","lastModifiedDate":"2021-10-24"},{"lineNumber":29,"author":{"gitId":"jeremy-7007"},"content":"import seedu.address.model.id.UniqueId;","lastModifiedDate":"2021-10-12"},{"lineNumber":30,"author":{"gitId":"tanhuakun"},"content":"import seedu.address.model.id.UniqueIdMapper;","lastModifiedDate":"2021-10-24"},{"lineNumber":31,"author":{"gitId":"tanhuakun"},"content":"import seedu.address.model.lesson.Lesson;","lastModifiedDate":"2021-10-19"},{"lineNumber":32,"author":{"gitId":"tanhuakun"},"content":"import seedu.address.model.lesson.NoOverlapLessonList;","lastModifiedDate":"2021-10-05"},{"lineNumber":33,"author":{"gitId":"tanhuakun"},"content":"import seedu.address.model.lesson.exceptions.CannotAssignException;","lastModifiedDate":"2021-10-20"},{"lineNumber":34,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2016-12-26"},{"lineNumber":35,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2016-12-26"},{"lineNumber":36,"author":{"gitId":"tanhuakun"},"content":"import seedu.address.model.person.Exam;","lastModifiedDate":"2021-10-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2016-12-26"},{"lineNumber":38,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2016-12-26"},{"lineNumber":39,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2016-12-26"},{"lineNumber":40,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-07"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":42,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-12-26"},{"lineNumber":43,"author":{"gitId":"-"},"content":" * Edits the details of an existing person in the address book.","lastModifiedDate":"2016-12-26"},{"lineNumber":44,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-12-26"},{"lineNumber":45,"author":{"gitId":"tanhuakun"},"content":"public class EditPersonCommand extends Command {","lastModifiedDate":"2021-10-03"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":47,"author":{"gitId":"tanhuakun"},"content":"    public static final String COMMAND_WORD \u003d \"-e\";","lastModifiedDate":"2021-10-03"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":49,"author":{"gitId":"tanhuakun"},"content":"    public static final String MESSAGE_USAGE \u003d PERSON_COMMAND + \" \" + COMMAND_WORD","lastModifiedDate":"2021-11-05"},{"lineNumber":50,"author":{"gitId":"Neha-5678"},"content":"            + \": Edits the details of the student identified \"","lastModifiedDate":"2021-11-06"},{"lineNumber":51,"author":{"gitId":"Neha-5678"},"content":"            + \"by the index number used in the displayed student list. \"","lastModifiedDate":"2021-11-06"},{"lineNumber":52,"author":{"gitId":"-"},"content":"            + \"Existing values will be overwritten by the input values.\\n\"","lastModifiedDate":"2016-12-26"},{"lineNumber":53,"author":{"gitId":"-"},"content":"            + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2017-06-06"},{"lineNumber":54,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_NAME + \"NAME] \"","lastModifiedDate":"2017-06-06"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_PHONE + \"PHONE] \"","lastModifiedDate":"2017-05-09"},{"lineNumber":56,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_EMAIL + \"EMAIL] \"","lastModifiedDate":"2017-05-09"},{"lineNumber":57,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_ADDRESS + \"ADDRESS] \"","lastModifiedDate":"2017-05-09"},{"lineNumber":58,"author":{"gitId":"-"},"content":"            + \"[\" + PREFIX_TAG + \"TAG]...\\n\"","lastModifiedDate":"2017-05-09"},{"lineNumber":59,"author":{"gitId":"tanhuakun"},"content":"            + \"Example: \" + PERSON_COMMAND + \" \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2021-11-05"},{"lineNumber":60,"author":{"gitId":"-"},"content":"            + PREFIX_PHONE + \"91234567 \"","lastModifiedDate":"2017-05-09"},{"lineNumber":61,"author":{"gitId":"-"},"content":"            + PREFIX_EMAIL + \"johndoe@example.com\";","lastModifiedDate":"2017-05-09"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_NOT_EDITED \u003d \"At least one field to edit must be provided.\";","lastModifiedDate":"2016-12-26"},{"lineNumber":64,"author":{"gitId":"Neha-5678"},"content":"    public static final String MESSAGE_DUPLICATE_PERSON \u003d \"This student already exists in the address book.\";","lastModifiedDate":"2021-11-06"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    private final Index index;","lastModifiedDate":"2017-05-25"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    private final EditPersonDescriptor editPersonDescriptor;","lastModifiedDate":"2016-12-26"},{"lineNumber":68,"author":{"gitId":"tanhuakun"},"content":"    private final String successMsg;","lastModifiedDate":"2021-10-19"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":71,"author":{"gitId":"-"},"content":"     * @param index of the person in the filtered person list to edit","lastModifiedDate":"2017-05-25"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     * @param editPersonDescriptor details to edit the person with","lastModifiedDate":"2016-12-26"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":74,"author":{"gitId":"tanhuakun"},"content":"    public EditPersonCommand(Index index, EditPersonDescriptor editPersonDescriptor, String successMsg) {","lastModifiedDate":"2021-10-19"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        requireNonNull(index);","lastModifiedDate":"2017-05-25"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        requireNonNull(editPersonDescriptor);","lastModifiedDate":"2017-05-15"},{"lineNumber":77,"author":{"gitId":"tanhuakun"},"content":"        requireNonNull(successMsg);","lastModifiedDate":"2021-10-19"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        this.index \u003d index;","lastModifiedDate":"2017-05-25"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        this.editPersonDescriptor \u003d new EditPersonDescriptor(editPersonDescriptor);","lastModifiedDate":"2016-12-26"},{"lineNumber":80,"author":{"gitId":"tanhuakun"},"content":"        this.successMsg \u003d successMsg;","lastModifiedDate":"2021-10-19"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-26"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2019-01-25"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2018-04-19"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2018-04-19"},{"lineNumber":89,"author":{"gitId":"-"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2018-04-19"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        Person personToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2018-04-19"},{"lineNumber":93,"author":{"gitId":"tanhuakun"},"content":"        Person editedPerson \u003d createEditedPerson(personToEdit, editPersonDescriptor, model);","lastModifiedDate":"2021-10-24"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        if (!personToEdit.isSamePerson(editedPerson) \u0026\u0026 model.hasPerson(editedPerson)) {","lastModifiedDate":"2018-08-07"},{"lineNumber":96,"author":{"gitId":"-"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2018-08-07"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-07"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-07"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        model.setPerson(personToEdit, editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":100,"author":{"gitId":"tanhuakun"},"content":"        model.updateLessonWithAttendeesList();","lastModifiedDate":"2021-10-25"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2017-08-05"},{"lineNumber":102,"author":{"gitId":"tanhuakun"},"content":"        model.setPersonToView(editedPerson);","lastModifiedDate":"2021-11-04"},{"lineNumber":103,"author":{"gitId":"tanhuakun"},"content":"        model.setViewingType(ViewingType.PERSON);","lastModifiedDate":"2021-11-04"},{"lineNumber":104,"author":{"gitId":"tanhuakun"},"content":"        return new CommandResult(String.format(successMsg, editedPerson));","lastModifiedDate":"2021-10-19"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":108,"author":{"gitId":"-"},"content":"     * Creates and returns a {@code Person} with the details of {@code personToEdit}","lastModifiedDate":"2016-12-26"},{"lineNumber":109,"author":{"gitId":"-"},"content":"     * edited with {@code editPersonDescriptor}.","lastModifiedDate":"2016-12-26"},{"lineNumber":110,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":111,"author":{"gitId":"tanhuakun"},"content":"    private static Person createEditedPerson(Person personToEdit, EditPersonDescriptor editPersonDescriptor,","lastModifiedDate":"2021-10-24"},{"lineNumber":112,"author":{"gitId":"tanhuakun"},"content":"            Model model)","lastModifiedDate":"2021-10-24"},{"lineNumber":113,"author":{"gitId":"tanhuakun"},"content":"            throws CommandException {","lastModifiedDate":"2021-10-19"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        assert personToEdit !\u003d null;","lastModifiedDate":"2016-12-26"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        Name updatedName \u003d editPersonDescriptor.getName().orElse(personToEdit.getName());","lastModifiedDate":"2017-06-21"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        Phone updatedPhone \u003d editPersonDescriptor.getPhone().orElse(personToEdit.getPhone());","lastModifiedDate":"2017-06-21"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        Email updatedEmail \u003d editPersonDescriptor.getEmail().orElse(personToEdit.getEmail());","lastModifiedDate":"2017-06-21"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        Address updatedAddress \u003d editPersonDescriptor.getAddress().orElse(personToEdit.getAddress());","lastModifiedDate":"2017-06-21"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e updatedTags \u003d editPersonDescriptor.getTags().orElse(personToEdit.getTags());","lastModifiedDate":"2017-06-21"},{"lineNumber":121,"author":{"gitId":"jeremy-7007"},"content":"        Set\u003cUniqueId\u003e updatedAssignedTaskIds \u003d personToEdit.getAssignedTaskIds(); // not allowed to be edited here","lastModifiedDate":"2021-10-12"},{"lineNumber":122,"author":{"gitId":"jeremy-7007"},"content":"        Map\u003cUniqueId, Boolean\u003e updatedTasksCompletion \u003d personToEdit.getTasksCompletion(); // not editable here","lastModifiedDate":"2021-10-26"},{"lineNumber":123,"author":{"gitId":"tanhuakun"},"content":"        NoOverlapLessonList lessonList \u003d personToEdit.getLessonsList();","lastModifiedDate":"2021-10-19"},{"lineNumber":124,"author":{"gitId":"tanhuakun"},"content":"        List\u003cExam\u003e exams \u003d personToEdit.getExams();","lastModifiedDate":"2021-10-19"},{"lineNumber":125,"author":{"gitId":"tanhuakun"},"content":"        Set\u003cUniqueId\u003e assignedGroupIds \u003d personToEdit.getAssignedGroupIds();","lastModifiedDate":"2021-10-23"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":127,"author":{"gitId":"tanhuakun"},"content":"        Person newPerson \u003d new Person(personToEdit.getId(), updatedName, updatedPhone, updatedEmail,","lastModifiedDate":"2021-10-26"},{"lineNumber":128,"author":{"gitId":"jeremy-7007"},"content":"                updatedAddress, updatedTags, updatedAssignedTaskIds,","lastModifiedDate":"2021-10-26"},{"lineNumber":129,"author":{"gitId":"jeremy-7007"},"content":"                updatedTasksCompletion, lessonList, exams, assignedGroupIds);","lastModifiedDate":"2021-10-26"},{"lineNumber":130,"author":{"gitId":"tanhuakun"},"content":"        newPerson \u003d editPersonDescriptor.updateLessons(newPerson, model.getGroupMapper());","lastModifiedDate":"2021-10-24"},{"lineNumber":131,"author":{"gitId":"tanhuakun"},"content":"        newPerson \u003d editPersonDescriptor.updateExams(newPerson);","lastModifiedDate":"2021-10-19"},{"lineNumber":132,"author":{"gitId":"tanhuakun"},"content":"        return newPerson;","lastModifiedDate":"2021-10-19"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-08"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-05-08"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2017-05-08"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2017-05-08"},{"lineNumber":139,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-05-08"},{"lineNumber":140,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-08"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-05-08"},{"lineNumber":143,"author":{"gitId":"tanhuakun"},"content":"        if (!(other instanceof EditPersonCommand)) {","lastModifiedDate":"2021-10-03"},{"lineNumber":144,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-05-08"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-08"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2017-05-08"},{"lineNumber":148,"author":{"gitId":"tanhuakun"},"content":"        EditPersonCommand e \u003d (EditPersonCommand) other;","lastModifiedDate":"2021-10-03"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        return index.equals(e.index)","lastModifiedDate":"2017-05-25"},{"lineNumber":150,"author":{"gitId":"tanhuakun"},"content":"                \u0026\u0026 editPersonDescriptor.equals(e.editPersonDescriptor)","lastModifiedDate":"2021-10-19"},{"lineNumber":151,"author":{"gitId":"tanhuakun"},"content":"                \u0026\u0026 successMsg.equals(successMsg);","lastModifiedDate":"2021-10-19"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-08"},{"lineNumber":153,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-26"},{"lineNumber":155,"author":{"gitId":"-"},"content":"     * Stores the details to edit the person with. Each non-empty field value will replace the","lastModifiedDate":"2016-12-26"},{"lineNumber":156,"author":{"gitId":"-"},"content":"     * corresponding field value of the person.","lastModifiedDate":"2016-12-26"},{"lineNumber":157,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-26"},{"lineNumber":158,"author":{"gitId":"-"},"content":"    public static class EditPersonDescriptor {","lastModifiedDate":"2016-12-26"},{"lineNumber":159,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":160,"author":{"gitId":"tanhuakun"},"content":"        public static final String CANNOT_ASSIGN_LESSON_GROUP \u003d \"lesson conflicts with lessons in group: \";","lastModifiedDate":"2021-10-24"},{"lineNumber":161,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        private Name name;","lastModifiedDate":"2017-06-21"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        private Phone phone;","lastModifiedDate":"2017-06-21"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        private Email email;","lastModifiedDate":"2017-06-21"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        private Address address;","lastModifiedDate":"2017-06-21"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        private Set\u003cTag\u003e tags;","lastModifiedDate":"2017-06-21"},{"lineNumber":167,"author":{"gitId":"tanhuakun"},"content":"        private List\u003cIndex\u003e lessonsToRemove \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-19"},{"lineNumber":168,"author":{"gitId":"tanhuakun"},"content":"        private List\u003cLesson\u003e lessonsToAdd \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-19"},{"lineNumber":169,"author":{"gitId":"tanhuakun"},"content":"        private List\u003cIndex\u003e examsToRemove \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-19"},{"lineNumber":170,"author":{"gitId":"tanhuakun"},"content":"        private List\u003cExam\u003e examsToAdd \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-19"},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        public EditPersonDescriptor() {}","lastModifiedDate":"2016-12-26"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":175,"author":{"gitId":"-"},"content":"         * Copy constructor.","lastModifiedDate":"2018-01-11"},{"lineNumber":176,"author":{"gitId":"-"},"content":"         * A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2018-01-11"},{"lineNumber":177,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        public EditPersonDescriptor(EditPersonDescriptor toCopy) {","lastModifiedDate":"2016-12-26"},{"lineNumber":179,"author":{"gitId":"-"},"content":"            setName(toCopy.name);","lastModifiedDate":"2018-01-15"},{"lineNumber":180,"author":{"gitId":"-"},"content":"            setPhone(toCopy.phone);","lastModifiedDate":"2018-01-15"},{"lineNumber":181,"author":{"gitId":"-"},"content":"            setEmail(toCopy.email);","lastModifiedDate":"2018-01-15"},{"lineNumber":182,"author":{"gitId":"-"},"content":"            setAddress(toCopy.address);","lastModifiedDate":"2018-01-15"},{"lineNumber":183,"author":{"gitId":"-"},"content":"            setTags(toCopy.tags);","lastModifiedDate":"2018-01-11"},{"lineNumber":184,"author":{"gitId":"tanhuakun"},"content":"            lessonsToRemove.addAll(toCopy.lessonsToRemove);","lastModifiedDate":"2021-10-19"},{"lineNumber":185,"author":{"gitId":"tanhuakun"},"content":"            lessonsToAdd.addAll(toCopy.lessonsToAdd);","lastModifiedDate":"2021-10-19"},{"lineNumber":186,"author":{"gitId":"tanhuakun"},"content":"            examsToRemove.addAll(toCopy.examsToRemove);","lastModifiedDate":"2021-10-19"},{"lineNumber":187,"author":{"gitId":"tanhuakun"},"content":"            examsToAdd.addAll(toCopy.examsToAdd);","lastModifiedDate":"2021-10-19"},{"lineNumber":188,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":190,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":191,"author":{"gitId":"tanhuakun"},"content":"        /**","lastModifiedDate":"2021-10-24"},{"lineNumber":192,"author":{"gitId":"tanhuakun"},"content":"         * Util method to remove lesson from a person","lastModifiedDate":"2021-10-24"},{"lineNumber":193,"author":{"gitId":"tanhuakun"},"content":"         * @param personToEdit person to remove lesson from","lastModifiedDate":"2021-10-24"},{"lineNumber":194,"author":{"gitId":"tanhuakun"},"content":"         * @param lessonsToRemove indexes to remove","lastModifiedDate":"2021-10-24"},{"lineNumber":195,"author":{"gitId":"tanhuakun"},"content":"         * @return Person with lessons removed","lastModifiedDate":"2021-10-24"},{"lineNumber":196,"author":{"gitId":"tanhuakun"},"content":"         * @throws IndexOutOfBoundsException if any index is out of bounds","lastModifiedDate":"2021-10-24"},{"lineNumber":197,"author":{"gitId":"tanhuakun"},"content":"         */","lastModifiedDate":"2021-10-24"},{"lineNumber":198,"author":{"gitId":"tanhuakun"},"content":"        private static Person removeLessons(Person personToEdit,","lastModifiedDate":"2021-10-24"},{"lineNumber":199,"author":{"gitId":"tanhuakun"},"content":"                List\u003cIndex\u003e lessonsToRemove) throws IndexOutOfBoundsException {","lastModifiedDate":"2021-10-24"},{"lineNumber":200,"author":{"gitId":"tanhuakun"},"content":"            // sort because removing from the back will not hurt the earlier indexes!","lastModifiedDate":"2021-10-24"},{"lineNumber":201,"author":{"gitId":"tanhuakun"},"content":"            lessonsToRemove.sort(new Index.SortDescending());","lastModifiedDate":"2021-10-24"},{"lineNumber":202,"author":{"gitId":"tanhuakun"},"content":"            for (Index i : lessonsToRemove) {","lastModifiedDate":"2021-10-24"},{"lineNumber":203,"author":{"gitId":"tanhuakun"},"content":"                personToEdit \u003d personToEdit.unassignLesson(i.getZeroBased());","lastModifiedDate":"2021-10-24"},{"lineNumber":204,"author":{"gitId":"tanhuakun"},"content":"            }","lastModifiedDate":"2021-10-24"},{"lineNumber":205,"author":{"gitId":"tanhuakun"},"content":"            return personToEdit;","lastModifiedDate":"2021-10-24"},{"lineNumber":206,"author":{"gitId":"tanhuakun"},"content":"        }","lastModifiedDate":"2021-10-24"},{"lineNumber":207,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":208,"author":{"gitId":"tanhuakun"},"content":"        /**","lastModifiedDate":"2021-10-24"},{"lineNumber":209,"author":{"gitId":"tanhuakun"},"content":"         * Util method to add all lessons to a person","lastModifiedDate":"2021-10-24"},{"lineNumber":210,"author":{"gitId":"tanhuakun"},"content":"         * @param personToEdit to add lessons to","lastModifiedDate":"2021-10-24"},{"lineNumber":211,"author":{"gitId":"tanhuakun"},"content":"         * @param lessonsToAdd to the person","lastModifiedDate":"2021-10-24"},{"lineNumber":212,"author":{"gitId":"tanhuakun"},"content":"         * @return Person with lessons added","lastModifiedDate":"2021-10-24"},{"lineNumber":213,"author":{"gitId":"tanhuakun"},"content":"         * @throws CannotAssignException","lastModifiedDate":"2021-10-24"},{"lineNumber":214,"author":{"gitId":"tanhuakun"},"content":"         */","lastModifiedDate":"2021-10-24"},{"lineNumber":215,"author":{"gitId":"tanhuakun"},"content":"        private static Person addLessons(Person personToEdit, List\u003cLesson\u003e lessonsToAdd)","lastModifiedDate":"2021-10-24"},{"lineNumber":216,"author":{"gitId":"tanhuakun"},"content":"                throws CannotAssignException {","lastModifiedDate":"2021-10-24"},{"lineNumber":217,"author":{"gitId":"tanhuakun"},"content":"            for (Lesson l : lessonsToAdd) {","lastModifiedDate":"2021-10-24"},{"lineNumber":218,"author":{"gitId":"tanhuakun"},"content":"                personToEdit \u003d personToEdit.assignLesson(l);","lastModifiedDate":"2021-10-24"},{"lineNumber":219,"author":{"gitId":"tanhuakun"},"content":"            }","lastModifiedDate":"2021-10-24"},{"lineNumber":220,"author":{"gitId":"tanhuakun"},"content":"            return personToEdit;","lastModifiedDate":"2021-10-24"},{"lineNumber":221,"author":{"gitId":"tanhuakun"},"content":"        }","lastModifiedDate":"2021-10-24"},{"lineNumber":222,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":223,"author":{"gitId":"tanhuakun"},"content":"        /**","lastModifiedDate":"2021-10-24"},{"lineNumber":224,"author":{"gitId":"tanhuakun"},"content":"         * Util method to find a group that cannot be assigned the lesson","lastModifiedDate":"2021-10-24"},{"lineNumber":225,"author":{"gitId":"tanhuakun"},"content":"         * @param groups to check","lastModifiedDate":"2021-10-24"},{"lineNumber":226,"author":{"gitId":"tanhuakun"},"content":"         * @param lessons to check","lastModifiedDate":"2021-10-24"},{"lineNumber":227,"author":{"gitId":"tanhuakun"},"content":"         * @return Optional group that is conflicting with lessons","lastModifiedDate":"2021-10-24"},{"lineNumber":228,"author":{"gitId":"tanhuakun"},"content":"         */","lastModifiedDate":"2021-10-24"},{"lineNumber":229,"author":{"gitId":"tanhuakun"},"content":"        private static Optional\u003cGroup\u003e findConflictingLessonGroup(Set\u003cGroup\u003e groups, List\u003cLesson\u003e lessons) {","lastModifiedDate":"2021-10-26"},{"lineNumber":230,"author":{"gitId":"tanhuakun"},"content":"            for (Lesson lesson : lessons) {","lastModifiedDate":"2021-10-24"},{"lineNumber":231,"author":{"gitId":"tanhuakun"},"content":"                for (Group group : groups) {","lastModifiedDate":"2021-10-24"},{"lineNumber":232,"author":{"gitId":"tanhuakun"},"content":"                    if (!group.canAssignLesson(lesson)) {","lastModifiedDate":"2021-10-24"},{"lineNumber":233,"author":{"gitId":"tanhuakun"},"content":"                        return Optional.of(group);","lastModifiedDate":"2021-10-24"},{"lineNumber":234,"author":{"gitId":"tanhuakun"},"content":"                    }","lastModifiedDate":"2021-10-24"},{"lineNumber":235,"author":{"gitId":"tanhuakun"},"content":"                }","lastModifiedDate":"2021-10-24"},{"lineNumber":236,"author":{"gitId":"tanhuakun"},"content":"            }","lastModifiedDate":"2021-10-24"},{"lineNumber":237,"author":{"gitId":"tanhuakun"},"content":"            return Optional.empty();","lastModifiedDate":"2021-10-24"},{"lineNumber":238,"author":{"gitId":"tanhuakun"},"content":"        }","lastModifiedDate":"2021-10-24"},{"lineNumber":239,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":240,"author":{"gitId":"tanhuakun"},"content":"        /**","lastModifiedDate":"2021-10-26"},{"lineNumber":241,"author":{"gitId":"tanhuakun"},"content":"         * Util method to remove exams from a person","lastModifiedDate":"2021-10-26"},{"lineNumber":242,"author":{"gitId":"tanhuakun"},"content":"         * @param personToEdit person to remove exams from","lastModifiedDate":"2021-10-26"},{"lineNumber":243,"author":{"gitId":"tanhuakun"},"content":"         * @param examsToRemove indexes to remove","lastModifiedDate":"2021-10-26"},{"lineNumber":244,"author":{"gitId":"tanhuakun"},"content":"         * @return Person with exams removed","lastModifiedDate":"2021-10-26"},{"lineNumber":245,"author":{"gitId":"tanhuakun"},"content":"         * @throws IndexOutOfBoundsException if any index is out of bounds","lastModifiedDate":"2021-10-26"},{"lineNumber":246,"author":{"gitId":"tanhuakun"},"content":"         */","lastModifiedDate":"2021-10-26"},{"lineNumber":247,"author":{"gitId":"tanhuakun"},"content":"        private static Person removeExams(Person personToEdit,","lastModifiedDate":"2021-10-26"},{"lineNumber":248,"author":{"gitId":"tanhuakun"},"content":"                List\u003cIndex\u003e examsToRemove) throws IndexOutOfBoundsException {","lastModifiedDate":"2021-10-26"},{"lineNumber":249,"author":{"gitId":"tanhuakun"},"content":"            // sort because removing from the back will not hurt the earlier indexes!","lastModifiedDate":"2021-10-26"},{"lineNumber":250,"author":{"gitId":"tanhuakun"},"content":"            examsToRemove.sort(new Index.SortDescending());","lastModifiedDate":"2021-10-26"},{"lineNumber":251,"author":{"gitId":"tanhuakun"},"content":"            for (Index i : examsToRemove) {","lastModifiedDate":"2021-10-26"},{"lineNumber":252,"author":{"gitId":"tanhuakun"},"content":"                personToEdit \u003d personToEdit.removeExam(i.getZeroBased());","lastModifiedDate":"2021-10-26"},{"lineNumber":253,"author":{"gitId":"tanhuakun"},"content":"            }","lastModifiedDate":"2021-10-26"},{"lineNumber":254,"author":{"gitId":"tanhuakun"},"content":"            return personToEdit;","lastModifiedDate":"2021-10-26"},{"lineNumber":255,"author":{"gitId":"tanhuakun"},"content":"        }","lastModifiedDate":"2021-10-26"},{"lineNumber":256,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":257,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":258,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2016-12-26"},{"lineNumber":259,"author":{"gitId":"-"},"content":"         * Returns true if at least one field is edited.","lastModifiedDate":"2016-12-26"},{"lineNumber":260,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-12-26"},{"lineNumber":261,"author":{"gitId":"-"},"content":"        public boolean isAnyFieldEdited() {","lastModifiedDate":"2016-12-26"},{"lineNumber":262,"author":{"gitId":"-"},"content":"            return CollectionUtil.isAnyNonNull(name, phone, email, address, tags);","lastModifiedDate":"2018-08-14"},{"lineNumber":263,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":264,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":265,"author":{"gitId":"-"},"content":"        public void setName(Name name) {","lastModifiedDate":"2017-06-21"},{"lineNumber":266,"author":{"gitId":"-"},"content":"            this.name \u003d name;","lastModifiedDate":"2017-06-21"},{"lineNumber":267,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":268,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":269,"author":{"gitId":"-"},"content":"        public Optional\u003cName\u003e getName() {","lastModifiedDate":"2016-12-26"},{"lineNumber":270,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(name);","lastModifiedDate":"2017-06-21"},{"lineNumber":271,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":272,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":273,"author":{"gitId":"-"},"content":"        public void setPhone(Phone phone) {","lastModifiedDate":"2017-06-21"},{"lineNumber":274,"author":{"gitId":"-"},"content":"            this.phone \u003d phone;","lastModifiedDate":"2017-06-21"},{"lineNumber":275,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":276,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":277,"author":{"gitId":"-"},"content":"        public Optional\u003cPhone\u003e getPhone() {","lastModifiedDate":"2016-12-26"},{"lineNumber":278,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(phone);","lastModifiedDate":"2017-06-21"},{"lineNumber":279,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":280,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":281,"author":{"gitId":"-"},"content":"        public void setEmail(Email email) {","lastModifiedDate":"2017-06-21"},{"lineNumber":282,"author":{"gitId":"-"},"content":"            this.email \u003d email;","lastModifiedDate":"2017-06-21"},{"lineNumber":283,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":284,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":285,"author":{"gitId":"-"},"content":"        public Optional\u003cEmail\u003e getEmail() {","lastModifiedDate":"2016-12-26"},{"lineNumber":286,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(email);","lastModifiedDate":"2017-06-21"},{"lineNumber":287,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":288,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":289,"author":{"gitId":"-"},"content":"        public void setAddress(Address address) {","lastModifiedDate":"2017-06-21"},{"lineNumber":290,"author":{"gitId":"-"},"content":"            this.address \u003d address;","lastModifiedDate":"2017-06-21"},{"lineNumber":291,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":292,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":293,"author":{"gitId":"-"},"content":"        public Optional\u003cAddress\u003e getAddress() {","lastModifiedDate":"2016-12-26"},{"lineNumber":294,"author":{"gitId":"-"},"content":"            return Optional.ofNullable(address);","lastModifiedDate":"2017-06-21"},{"lineNumber":295,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":296,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":297,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":298,"author":{"gitId":"-"},"content":"         * Sets {@code tags} to this object\u0027s {@code tags}.","lastModifiedDate":"2018-01-11"},{"lineNumber":299,"author":{"gitId":"-"},"content":"         * A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2018-01-11"},{"lineNumber":300,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":301,"author":{"gitId":"-"},"content":"        public void setTags(Set\u003cTag\u003e tags) {","lastModifiedDate":"2017-06-21"},{"lineNumber":302,"author":{"gitId":"-"},"content":"            this.tags \u003d (tags !\u003d null) ? new HashSet\u003c\u003e(tags) : null;","lastModifiedDate":"2018-01-11"},{"lineNumber":303,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":304,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-26"},{"lineNumber":305,"author":{"gitId":"tanhuakun"},"content":"        /**","lastModifiedDate":"2021-10-19"},{"lineNumber":306,"author":{"gitId":"tanhuakun"},"content":"         * Returns an unmodifiable tag set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2021-10-19"},{"lineNumber":307,"author":{"gitId":"tanhuakun"},"content":"         * if modification is attempted.","lastModifiedDate":"2021-10-19"},{"lineNumber":308,"author":{"gitId":"tanhuakun"},"content":"         * Returns {@code Optional#empty()} if {@code tags} is null.","lastModifiedDate":"2021-10-19"},{"lineNumber":309,"author":{"gitId":"tanhuakun"},"content":"         */","lastModifiedDate":"2021-10-19"},{"lineNumber":310,"author":{"gitId":"tanhuakun"},"content":"        public Optional\u003cSet\u003cTag\u003e\u003e getTags() {","lastModifiedDate":"2021-10-19"},{"lineNumber":311,"author":{"gitId":"tanhuakun"},"content":"            return (tags !\u003d null) ? Optional.of(Collections.unmodifiableSet(tags)) : Optional.empty();","lastModifiedDate":"2021-10-19"},{"lineNumber":312,"author":{"gitId":"tanhuakun"},"content":"        }","lastModifiedDate":"2021-10-05"},{"lineNumber":313,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":314,"author":{"gitId":"tanhuakun"},"content":"        /**","lastModifiedDate":"2021-10-19"},{"lineNumber":315,"author":{"gitId":"tanhuakun"},"content":"         * Adds a lesson to be added to the person later","lastModifiedDate":"2021-10-19"},{"lineNumber":316,"author":{"gitId":"tanhuakun"},"content":"         */","lastModifiedDate":"2021-10-19"},{"lineNumber":317,"author":{"gitId":"tanhuakun"},"content":"        public void addLesson(Lesson l) {","lastModifiedDate":"2021-10-19"},{"lineNumber":318,"author":{"gitId":"tanhuakun"},"content":"            requireNonNull(l);","lastModifiedDate":"2021-10-19"},{"lineNumber":319,"author":{"gitId":"tanhuakun"},"content":"            lessonsToAdd.add(l);","lastModifiedDate":"2021-10-19"},{"lineNumber":320,"author":{"gitId":"tanhuakun"},"content":"        }","lastModifiedDate":"2021-10-05"},{"lineNumber":321,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":322,"author":{"gitId":"tanhuakun"},"content":"        /**","lastModifiedDate":"2021-10-19"},{"lineNumber":323,"author":{"gitId":"tanhuakun"},"content":"         * Adds an index of a lesson to be removed from the person later","lastModifiedDate":"2021-10-19"},{"lineNumber":324,"author":{"gitId":"tanhuakun"},"content":"         */","lastModifiedDate":"2021-10-19"},{"lineNumber":325,"author":{"gitId":"tanhuakun"},"content":"        public void removeLesson(Index index) {","lastModifiedDate":"2021-10-19"},{"lineNumber":326,"author":{"gitId":"tanhuakun"},"content":"            requireNonNull(index);","lastModifiedDate":"2021-10-19"},{"lineNumber":327,"author":{"gitId":"tanhuakun"},"content":"            lessonsToRemove.add(index);","lastModifiedDate":"2021-10-19"},{"lineNumber":328,"author":{"gitId":"tanhuakun"},"content":"        }","lastModifiedDate":"2021-10-16"},{"lineNumber":329,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":330,"author":{"gitId":"tanhuakun"},"content":"        /**","lastModifiedDate":"2021-10-19"},{"lineNumber":331,"author":{"gitId":"tanhuakun"},"content":"         * Adds an exam to be added to the person later","lastModifiedDate":"2021-10-19"},{"lineNumber":332,"author":{"gitId":"tanhuakun"},"content":"         */","lastModifiedDate":"2021-10-19"},{"lineNumber":333,"author":{"gitId":"tanhuakun"},"content":"        public void addExam(Exam e) {","lastModifiedDate":"2021-10-19"},{"lineNumber":334,"author":{"gitId":"tanhuakun"},"content":"            requireNonNull(e);","lastModifiedDate":"2021-10-19"},{"lineNumber":335,"author":{"gitId":"tanhuakun"},"content":"            examsToAdd.add(e);","lastModifiedDate":"2021-10-19"},{"lineNumber":336,"author":{"gitId":"tanhuakun"},"content":"        }","lastModifiedDate":"2021-10-16"},{"lineNumber":337,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":338,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2018-01-11"},{"lineNumber":339,"author":{"gitId":"tanhuakun"},"content":"         * Adds an index of an exam to be removed from the person later","lastModifiedDate":"2021-10-19"},{"lineNumber":340,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2018-01-11"},{"lineNumber":341,"author":{"gitId":"tanhuakun"},"content":"        public void removeExam(Index index) {","lastModifiedDate":"2021-10-19"},{"lineNumber":342,"author":{"gitId":"tanhuakun"},"content":"            requireNonNull(index);","lastModifiedDate":"2021-10-19"},{"lineNumber":343,"author":{"gitId":"tanhuakun"},"content":"            examsToRemove.add(index);","lastModifiedDate":"2021-10-19"},{"lineNumber":344,"author":{"gitId":"tanhuakun"},"content":"        }","lastModifiedDate":"2021-10-19"},{"lineNumber":345,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":346,"author":{"gitId":"tanhuakun"},"content":"        /**","lastModifiedDate":"2021-10-19"},{"lineNumber":347,"author":{"gitId":"tanhuakun"},"content":"         * Updates the lesson of a person according to the specified order previously.","lastModifiedDate":"2021-10-19"},{"lineNumber":348,"author":{"gitId":"tanhuakun"},"content":"         * @param personToEdit person to update lessons list.","lastModifiedDate":"2021-10-19"},{"lineNumber":349,"author":{"gitId":"tanhuakun"},"content":"         * @return Person with updated lessons list, removal is done before adding.","lastModifiedDate":"2021-10-19"},{"lineNumber":350,"author":{"gitId":"tanhuakun"},"content":"         * @throws CommandException if any specified index or lesson is invalid","lastModifiedDate":"2021-10-19"},{"lineNumber":351,"author":{"gitId":"tanhuakun"},"content":"         */","lastModifiedDate":"2021-10-19"},{"lineNumber":352,"author":{"gitId":"tanhuakun"},"content":"        public Person updateLessons(Person personToEdit, UniqueIdMapper\u003cGroup\u003e mapper) throws CommandException {","lastModifiedDate":"2021-10-24"},{"lineNumber":353,"author":{"gitId":"tanhuakun"},"content":"            // removes lesson first before adding lessons","lastModifiedDate":"2021-10-19"},{"lineNumber":354,"author":{"gitId":"tanhuakun"},"content":"            try {","lastModifiedDate":"2021-10-20"},{"lineNumber":355,"author":{"gitId":"tanhuakun"},"content":"                personToEdit \u003d removeLessons(personToEdit, lessonsToRemove);","lastModifiedDate":"2021-10-24"},{"lineNumber":356,"author":{"gitId":"tanhuakun"},"content":"            } catch (IndexOutOfBoundsException index) {","lastModifiedDate":"2021-10-19"},{"lineNumber":357,"author":{"gitId":"tanhuakun"},"content":"                throw new CommandException(Messages.MESSAGE_INVALID_LESSON_DISPLAYED_INDEX);","lastModifiedDate":"2021-11-02"},{"lineNumber":358,"author":{"gitId":"tanhuakun"},"content":"            }","lastModifiedDate":"2021-10-19"},{"lineNumber":359,"author":{"gitId":"tanhuakun"},"content":"            // adding lessons","lastModifiedDate":"2021-10-24"},{"lineNumber":360,"author":{"gitId":"tanhuakun"},"content":"            try {","lastModifiedDate":"2021-10-19"},{"lineNumber":361,"author":{"gitId":"tanhuakun"},"content":"                // first cross-check with all groups;","lastModifiedDate":"2021-10-24"},{"lineNumber":362,"author":{"gitId":"tanhuakun"},"content":"                Set\u003cGroup\u003e groupsPersonIsIn \u003d mapper.getFromUniqueIds(personToEdit.getAssignedGroupIds());","lastModifiedDate":"2021-10-24"},{"lineNumber":363,"author":{"gitId":"tanhuakun"},"content":"                Optional\u003cGroup\u003e conflictingGroup \u003d findConflictingLessonGroup(groupsPersonIsIn, lessonsToAdd);","lastModifiedDate":"2021-10-26"},{"lineNumber":364,"author":{"gitId":"tanhuakun"},"content":"                conflictingGroup.ifPresent(group -\u003e {","lastModifiedDate":"2021-10-26"},{"lineNumber":365,"author":{"gitId":"tanhuakun"},"content":"                    throw new CannotAssignException(CANNOT_ASSIGN_LESSON_GROUP + group.getName());","lastModifiedDate":"2021-10-24"},{"lineNumber":366,"author":{"gitId":"tanhuakun"},"content":"                });","lastModifiedDate":"2021-10-24"},{"lineNumber":367,"author":{"gitId":"tanhuakun"},"content":"                // now try add lesson to person","lastModifiedDate":"2021-10-24"},{"lineNumber":368,"author":{"gitId":"tanhuakun"},"content":"                personToEdit \u003d addLessons(personToEdit, lessonsToAdd);","lastModifiedDate":"2021-10-24"},{"lineNumber":369,"author":{"gitId":"tanhuakun"},"content":"            } catch (CannotAssignException e) {","lastModifiedDate":"2021-10-20"},{"lineNumber":370,"author":{"gitId":"tanhuakun"},"content":"                throw new CommandException(e.getMessage());","lastModifiedDate":"2021-10-19"},{"lineNumber":371,"author":{"gitId":"tanhuakun"},"content":"            }","lastModifiedDate":"2021-10-19"},{"lineNumber":372,"author":{"gitId":"tanhuakun"},"content":"            return personToEdit;","lastModifiedDate":"2021-10-19"},{"lineNumber":373,"author":{"gitId":"tanhuakun"},"content":"        }","lastModifiedDate":"2021-10-19"},{"lineNumber":374,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":375,"author":{"gitId":"tanhuakun"},"content":"        /**","lastModifiedDate":"2021-10-19"},{"lineNumber":376,"author":{"gitId":"tanhuakun"},"content":"         * Updates the exams of a person according to the specified order previously.","lastModifiedDate":"2021-10-19"},{"lineNumber":377,"author":{"gitId":"tanhuakun"},"content":"         * @param personToEdit person to update exams list.","lastModifiedDate":"2021-10-19"},{"lineNumber":378,"author":{"gitId":"tanhuakun"},"content":"         * @return Person with updated exams list, removal is done before adding.","lastModifiedDate":"2021-10-19"},{"lineNumber":379,"author":{"gitId":"tanhuakun"},"content":"         * @throws CommandException if any specified index is invalid","lastModifiedDate":"2021-10-19"},{"lineNumber":380,"author":{"gitId":"tanhuakun"},"content":"         */","lastModifiedDate":"2021-10-19"},{"lineNumber":381,"author":{"gitId":"tanhuakun"},"content":"        public Person updateExams(Person personToEdit) throws CommandException {","lastModifiedDate":"2021-10-19"},{"lineNumber":382,"author":{"gitId":"tanhuakun"},"content":"            // removes lesson first before adding lessons","lastModifiedDate":"2021-10-19"},{"lineNumber":383,"author":{"gitId":"tanhuakun"},"content":"            try {","lastModifiedDate":"2021-10-20"},{"lineNumber":384,"author":{"gitId":"tanhuakun"},"content":"                // sort because removing from the back will not hurt the earlier indexes!","lastModifiedDate":"2021-10-20"},{"lineNumber":385,"author":{"gitId":"tanhuakun"},"content":"                personToEdit \u003d removeExams(personToEdit, examsToRemove);","lastModifiedDate":"2021-10-26"},{"lineNumber":386,"author":{"gitId":"tanhuakun"},"content":"            } catch (IndexOutOfBoundsException index) {","lastModifiedDate":"2021-10-19"},{"lineNumber":387,"author":{"gitId":"tanhuakun"},"content":"                throw new CommandException(Messages.MESSAGE_INVALID_EXAM_INDEX);","lastModifiedDate":"2021-10-25"},{"lineNumber":388,"author":{"gitId":"tanhuakun"},"content":"            }","lastModifiedDate":"2021-10-19"},{"lineNumber":389,"author":{"gitId":"tanhuakun"},"content":"            for (Exam e : examsToAdd) {","lastModifiedDate":"2021-10-19"},{"lineNumber":390,"author":{"gitId":"tanhuakun"},"content":"                personToEdit \u003d personToEdit.addExam(e);","lastModifiedDate":"2021-10-19"},{"lineNumber":391,"author":{"gitId":"tanhuakun"},"content":"            }","lastModifiedDate":"2021-10-19"},{"lineNumber":392,"author":{"gitId":"tanhuakun"},"content":"            return personToEdit;","lastModifiedDate":"2021-10-19"},{"lineNumber":393,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-26"},{"lineNumber":394,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":395,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2017-05-05"},{"lineNumber":396,"author":{"gitId":"-"},"content":"        public boolean equals(Object other) {","lastModifiedDate":"2017-05-05"},{"lineNumber":397,"author":{"gitId":"-"},"content":"            // short circuit if same object","lastModifiedDate":"2017-05-05"},{"lineNumber":398,"author":{"gitId":"-"},"content":"            if (other \u003d\u003d this) {","lastModifiedDate":"2017-05-05"},{"lineNumber":399,"author":{"gitId":"-"},"content":"                return true;","lastModifiedDate":"2017-05-05"},{"lineNumber":400,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-05-05"},{"lineNumber":401,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":402,"author":{"gitId":"-"},"content":"            // instanceof handles nulls","lastModifiedDate":"2017-05-05"},{"lineNumber":403,"author":{"gitId":"-"},"content":"            if (!(other instanceof EditPersonDescriptor)) {","lastModifiedDate":"2017-05-05"},{"lineNumber":404,"author":{"gitId":"-"},"content":"                return false;","lastModifiedDate":"2017-05-05"},{"lineNumber":405,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2017-05-05"},{"lineNumber":406,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":407,"author":{"gitId":"-"},"content":"            // state check","lastModifiedDate":"2017-05-05"},{"lineNumber":408,"author":{"gitId":"-"},"content":"            EditPersonDescriptor e \u003d (EditPersonDescriptor) other;","lastModifiedDate":"2017-05-05"},{"lineNumber":409,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-21"},{"lineNumber":410,"author":{"gitId":"-"},"content":"            return getName().equals(e.getName())","lastModifiedDate":"2017-06-21"},{"lineNumber":411,"author":{"gitId":"-"},"content":"                    \u0026\u0026 getPhone().equals(e.getPhone())","lastModifiedDate":"2017-06-21"},{"lineNumber":412,"author":{"gitId":"-"},"content":"                    \u0026\u0026 getEmail().equals(e.getEmail())","lastModifiedDate":"2017-06-21"},{"lineNumber":413,"author":{"gitId":"-"},"content":"                    \u0026\u0026 getAddress().equals(e.getAddress())","lastModifiedDate":"2017-06-21"},{"lineNumber":414,"author":{"gitId":"tanhuakun"},"content":"                    \u0026\u0026 getTags().equals(e.getTags())","lastModifiedDate":"2021-10-05"},{"lineNumber":415,"author":{"gitId":"tanhuakun"},"content":"                    \u0026\u0026 lessonsToAdd.equals(e.lessonsToAdd)","lastModifiedDate":"2021-10-19"},{"lineNumber":416,"author":{"gitId":"tanhuakun"},"content":"                    \u0026\u0026 lessonsToRemove.equals(lessonsToRemove)","lastModifiedDate":"2021-10-19"},{"lineNumber":417,"author":{"gitId":"tanhuakun"},"content":"                    \u0026\u0026 examsToAdd.equals(e.examsToAdd)","lastModifiedDate":"2021-10-19"},{"lineNumber":418,"author":{"gitId":"tanhuakun"},"content":"                    \u0026\u0026 examsToRemove.equals(e.examsToRemove);","lastModifiedDate":"2021-10-19"},{"lineNumber":419,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-05"},{"lineNumber":420,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-26"},{"lineNumber":421,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-26"}],"authorContributionMap":{"Neha-5678":3,"jeremy-7007":6,"tanhuakun":209,"-":203}},{"path":"src/main/java/seedu/address/logic/commands/persons/FindPersonCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tanhuakun"},"content":"package seedu.address.logic.commands.persons;","lastModifiedDate":"2021-10-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2018-08-08"},{"lineNumber":4,"author":{"gitId":"tanhuakun"},"content":"import static seedu.address.logic.parser.CliSyntax.PERSON_COMMAND;","lastModifiedDate":"2021-11-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2018-04-01"},{"lineNumber":7,"author":{"gitId":"tanhuakun"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2021-10-03"},{"lineNumber":8,"author":{"gitId":"tanhuakun"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2021-10-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2018-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-22"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * Finds and lists all persons in address book whose name contains any of the argument keywords.","lastModifiedDate":"2016-09-22"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Keyword matching is case insensitive.","lastModifiedDate":"2018-04-01"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-22"},{"lineNumber":16,"author":{"gitId":"tanhuakun"},"content":"public class FindPersonCommand extends Command {","lastModifiedDate":"2021-10-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":18,"author":{"gitId":"tanhuakun"},"content":"    public static final String COMMAND_WORD \u003d \"-f\";","lastModifiedDate":"2021-10-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":20,"author":{"gitId":"tanhuakun"},"content":"    public static final String MESSAGE_USAGE \u003d PERSON_COMMAND + \" \" + COMMAND_WORD","lastModifiedDate":"2021-11-05"},{"lineNumber":21,"author":{"gitId":"Neha-5678"},"content":"            + \": Finds all students whose names contain any of \"","lastModifiedDate":"2021-11-06"},{"lineNumber":22,"author":{"gitId":"-"},"content":"            + \"the specified keywords (case-insensitive) and displays them as a list with index numbers.\\n\"","lastModifiedDate":"2018-04-01"},{"lineNumber":23,"author":{"gitId":"-"},"content":"            + \"Parameters: KEYWORD [MORE_KEYWORDS]...\\n\"","lastModifiedDate":"2016-09-22"},{"lineNumber":24,"author":{"gitId":"tanhuakun"},"content":"            + \"Example: \" + PERSON_COMMAND + \" \" + COMMAND_WORD + \" alice bob charlie\";","lastModifiedDate":"2021-11-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private final NameContainsKeywordsPredicate predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":28,"author":{"gitId":"tanhuakun"},"content":"    public FindPersonCommand(NameContainsKeywordsPredicate predicate) {","lastModifiedDate":"2021-10-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        this.predicate \u003d predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-22"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2019-01-25"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        requireNonNull(model);","lastModifiedDate":"2018-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(predicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        return new CommandResult(","lastModifiedDate":"2018-04-01"},{"lineNumber":37,"author":{"gitId":"-"},"content":"                String.format(Messages.MESSAGE_PERSONS_LISTED_OVERVIEW, model.getFilteredPersonList().size()));","lastModifiedDate":"2018-04-01"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-06-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2017-06-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2017-06-27"},{"lineNumber":43,"author":{"gitId":"tanhuakun"},"content":"                || (other instanceof FindPersonCommand // instanceof handles nulls","lastModifiedDate":"2021-10-03"},{"lineNumber":44,"author":{"gitId":"tanhuakun"},"content":"                \u0026\u0026 predicate.equals(((FindPersonCommand) other).predicate)); // state check","lastModifiedDate":"2021-10-03"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-22"}],"authorContributionMap":{"Neha-5678":1,"tanhuakun":11,"-":34}},{"path":"src/main/java/seedu/address/logic/commands/persons/ViewPersonCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kvihashini"},"content":"package seedu.address.logic.commands.persons;","lastModifiedDate":"2021-10-05"},{"lineNumber":2,"author":{"gitId":"kvihashini"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":3,"author":{"gitId":"kvihashini"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-05"},{"lineNumber":4,"author":{"gitId":"tanhuakun"},"content":"import static seedu.address.logic.parser.CliSyntax.PERSON_COMMAND;","lastModifiedDate":"2021-11-05"},{"lineNumber":5,"author":{"gitId":"kvihashini"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":6,"author":{"gitId":"kvihashini"},"content":"import java.util.List;","lastModifiedDate":"2021-10-05"},{"lineNumber":7,"author":{"gitId":"kvihashini"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":8,"author":{"gitId":"kvihashini"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2021-10-05"},{"lineNumber":9,"author":{"gitId":"kvihashini"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-10-05"},{"lineNumber":10,"author":{"gitId":"kvihashini"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2021-10-05"},{"lineNumber":11,"author":{"gitId":"kvihashini"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2021-10-05"},{"lineNumber":12,"author":{"gitId":"kvihashini"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-10-05"},{"lineNumber":13,"author":{"gitId":"kvihashini"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-10-05"},{"lineNumber":14,"author":{"gitId":"tanhuakun"},"content":"import seedu.address.model.ViewingType;","lastModifiedDate":"2021-10-25"},{"lineNumber":15,"author":{"gitId":"kvihashini"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2021-10-05"},{"lineNumber":16,"author":{"gitId":"kvihashini"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":17,"author":{"gitId":"kvihashini"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":18,"author":{"gitId":"kvihashini"},"content":"/**","lastModifiedDate":"2021-10-05"},{"lineNumber":19,"author":{"gitId":"kvihashini"},"content":" * Views a person identified using it\u0027s displayed index from the address book.","lastModifiedDate":"2021-10-25"},{"lineNumber":20,"author":{"gitId":"kvihashini"},"content":" */","lastModifiedDate":"2021-10-05"},{"lineNumber":21,"author":{"gitId":"kvihashini"},"content":"public class ViewPersonCommand extends Command {","lastModifiedDate":"2021-10-05"},{"lineNumber":22,"author":{"gitId":"kvihashini"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":23,"author":{"gitId":"kvihashini"},"content":"    public static final String COMMAND_WORD \u003d \"-v\";","lastModifiedDate":"2021-10-05"},{"lineNumber":24,"author":{"gitId":"kvihashini"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":25,"author":{"gitId":"tanhuakun"},"content":"    public static final String MESSAGE_USAGE \u003d PERSON_COMMAND + \" \" + COMMAND_WORD","lastModifiedDate":"2021-11-05"},{"lineNumber":26,"author":{"gitId":"Neha-5678"},"content":"            + \": Views a student in the students list.\\n\"","lastModifiedDate":"2021-11-06"},{"lineNumber":27,"author":{"gitId":"kvihashini"},"content":"            + \"Parameters: INDEX (must be a positive integer)\\n\"","lastModifiedDate":"2021-10-05"},{"lineNumber":28,"author":{"gitId":"tanhuakun"},"content":"            + \"Example: \" + PERSON_COMMAND + \" \" + COMMAND_WORD + \" 1\";","lastModifiedDate":"2021-11-05"},{"lineNumber":29,"author":{"gitId":"kvihashini"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":30,"author":{"gitId":"Neha-5678"},"content":"    public static final String MESSAGE_VIEW_PERSON_SUCCESS \u003d \"View Student: %1$s\";","lastModifiedDate":"2021-11-06"},{"lineNumber":31,"author":{"gitId":"kvihashini"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":32,"author":{"gitId":"kvihashini"},"content":"    private final Index targetIndex;","lastModifiedDate":"2021-10-05"},{"lineNumber":33,"author":{"gitId":"kvihashini"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":34,"author":{"gitId":"kvihashini"},"content":"    public ViewPersonCommand(Index targetIndex) {","lastModifiedDate":"2021-10-05"},{"lineNumber":35,"author":{"gitId":"kvihashini"},"content":"        this.targetIndex \u003d targetIndex;","lastModifiedDate":"2021-10-05"},{"lineNumber":36,"author":{"gitId":"kvihashini"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":37,"author":{"gitId":"kvihashini"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":38,"author":{"gitId":"kvihashini"},"content":"    @Override","lastModifiedDate":"2021-10-05"},{"lineNumber":39,"author":{"gitId":"kvihashini"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2021-10-05"},{"lineNumber":40,"author":{"gitId":"kvihashini"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-10-05"},{"lineNumber":41,"author":{"gitId":"kvihashini"},"content":"        List\u003cPerson\u003e lastShownList \u003d model.getFilteredPersonList();","lastModifiedDate":"2021-10-05"},{"lineNumber":42,"author":{"gitId":"kvihashini"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":43,"author":{"gitId":"kvihashini"},"content":"        if (targetIndex.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2021-10-05"},{"lineNumber":44,"author":{"gitId":"kvihashini"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2021-10-05"},{"lineNumber":45,"author":{"gitId":"kvihashini"},"content":"        }","lastModifiedDate":"2021-10-05"},{"lineNumber":46,"author":{"gitId":"kvihashini"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":47,"author":{"gitId":"kvihashini"},"content":"        Person personToView \u003d lastShownList.get(targetIndex.getZeroBased());","lastModifiedDate":"2021-10-05"},{"lineNumber":48,"author":{"gitId":"tanhuakun"},"content":"        model.setPersonToView(personToView);","lastModifiedDate":"2021-10-25"},{"lineNumber":49,"author":{"gitId":"tanhuakun"},"content":"        model.setViewingType(ViewingType.PERSON);","lastModifiedDate":"2021-10-25"},{"lineNumber":50,"author":{"gitId":"kvihashini"},"content":"        return new CommandResult(String.format(MESSAGE_VIEW_PERSON_SUCCESS, personToView));","lastModifiedDate":"2021-10-05"},{"lineNumber":51,"author":{"gitId":"kvihashini"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":52,"author":{"gitId":"kvihashini"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":53,"author":{"gitId":"kvihashini"},"content":"    @Override","lastModifiedDate":"2021-10-05"},{"lineNumber":54,"author":{"gitId":"kvihashini"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-05"},{"lineNumber":55,"author":{"gitId":"kvihashini"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-10-05"},{"lineNumber":56,"author":{"gitId":"kvihashini"},"content":"                || (other instanceof ViewPersonCommand // instanceof handles nulls","lastModifiedDate":"2021-10-05"},{"lineNumber":57,"author":{"gitId":"kvihashini"},"content":"                \u0026\u0026 targetIndex.equals(((ViewPersonCommand) other).targetIndex)); // state check","lastModifiedDate":"2021-10-05"},{"lineNumber":58,"author":{"gitId":"kvihashini"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":59,"author":{"gitId":"kvihashini"},"content":"}","lastModifiedDate":"2021-10-05"}],"authorContributionMap":{"Neha-5678":2,"kvihashini":51,"tanhuakun":6}},{"path":"src/main/java/seedu/address/logic/commands/tasks/AddTaskCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"eltonyeh"},"content":"package seedu.address.logic.commands.tasks;","lastModifiedDate":"2021-10-12"},{"lineNumber":2,"author":{"gitId":"eltonyeh"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":3,"author":{"gitId":"eltonyeh"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-12"},{"lineNumber":4,"author":{"gitId":"eltonyeh"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DEADLINE;","lastModifiedDate":"2021-10-12"},{"lineNumber":5,"author":{"gitId":"eltonyeh"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DESCRIPTION;","lastModifiedDate":"2021-10-12"},{"lineNumber":6,"author":{"gitId":"eltonyeh"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":7,"author":{"gitId":"eltonyeh"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2021-10-12"},{"lineNumber":8,"author":{"gitId":"eltonyeh"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2021-10-12"},{"lineNumber":9,"author":{"gitId":"eltonyeh"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-10-12"},{"lineNumber":10,"author":{"gitId":"eltonyeh"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-10-12"},{"lineNumber":11,"author":{"gitId":"eltonyeh"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2021-10-12"},{"lineNumber":12,"author":{"gitId":"eltonyeh"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":13,"author":{"gitId":"eltonyeh"},"content":"/**","lastModifiedDate":"2021-10-12"},{"lineNumber":14,"author":{"gitId":"eltonyeh"},"content":" * Adds a task to the address book.","lastModifiedDate":"2021-10-12"},{"lineNumber":15,"author":{"gitId":"eltonyeh"},"content":" */","lastModifiedDate":"2021-10-12"},{"lineNumber":16,"author":{"gitId":"eltonyeh"},"content":"public class AddTaskCommand extends Command {","lastModifiedDate":"2021-10-12"},{"lineNumber":17,"author":{"gitId":"eltonyeh"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":18,"author":{"gitId":"eltonyeh"},"content":"    public static final String COMMAND_WORD \u003d \"-a\";","lastModifiedDate":"2021-10-12"},{"lineNumber":19,"author":{"gitId":"eltonyeh"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":20,"author":{"gitId":"kvihashini"},"content":"    public static final String MESSAGE_USAGE \u003d \"task \" + COMMAND_WORD + \": Adds a task to the address book. \\n\"","lastModifiedDate":"2021-11-03"},{"lineNumber":21,"author":{"gitId":"eltonyeh"},"content":"            + \"Parameters: \"","lastModifiedDate":"2021-10-12"},{"lineNumber":22,"author":{"gitId":"eltonyeh"},"content":"            + PREFIX_DESCRIPTION + \"NAME \"","lastModifiedDate":"2021-10-12"},{"lineNumber":23,"author":{"gitId":"eltonyeh"},"content":"            + PREFIX_DEADLINE + \"DEADLINE\\n\"","lastModifiedDate":"2021-10-12"},{"lineNumber":24,"author":{"gitId":"kvihashini"},"content":"            + \"Example: \" + \" task \" + COMMAND_WORD + \" \"","lastModifiedDate":"2021-11-03"},{"lineNumber":25,"author":{"gitId":"eltonyeh"},"content":"            + PREFIX_DESCRIPTION + \"Report 1 \"","lastModifiedDate":"2021-10-12"},{"lineNumber":26,"author":{"gitId":"eltonyeh"},"content":"            + PREFIX_DEADLINE + \"2021-01-01\";","lastModifiedDate":"2021-10-12"},{"lineNumber":27,"author":{"gitId":"eltonyeh"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":28,"author":{"gitId":"eltonyeh"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"New task added: %1$s\";","lastModifiedDate":"2021-10-12"},{"lineNumber":29,"author":{"gitId":"eltonyeh"},"content":"    public static final String MESSAGE_DUPLICATE_TASK \u003d \"This task already exists in the address book\";","lastModifiedDate":"2021-10-12"},{"lineNumber":30,"author":{"gitId":"eltonyeh"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":31,"author":{"gitId":"eltonyeh"},"content":"    private final Task toAdd;","lastModifiedDate":"2021-10-12"},{"lineNumber":32,"author":{"gitId":"eltonyeh"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":33,"author":{"gitId":"eltonyeh"},"content":"    /**","lastModifiedDate":"2021-10-12"},{"lineNumber":34,"author":{"gitId":"eltonyeh"},"content":"     * Creates an AddTaskCommand to add the specified {@code Task}.","lastModifiedDate":"2021-10-12"},{"lineNumber":35,"author":{"gitId":"eltonyeh"},"content":"     */","lastModifiedDate":"2021-10-12"},{"lineNumber":36,"author":{"gitId":"eltonyeh"},"content":"    public AddTaskCommand(Task task) {","lastModifiedDate":"2021-10-12"},{"lineNumber":37,"author":{"gitId":"eltonyeh"},"content":"        requireNonNull(task);","lastModifiedDate":"2021-10-12"},{"lineNumber":38,"author":{"gitId":"eltonyeh"},"content":"        toAdd \u003d task;","lastModifiedDate":"2021-10-12"},{"lineNumber":39,"author":{"gitId":"eltonyeh"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":40,"author":{"gitId":"eltonyeh"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":41,"author":{"gitId":"eltonyeh"},"content":"    @Override","lastModifiedDate":"2021-10-12"},{"lineNumber":42,"author":{"gitId":"eltonyeh"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2021-10-12"},{"lineNumber":43,"author":{"gitId":"eltonyeh"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-10-12"},{"lineNumber":44,"author":{"gitId":"eltonyeh"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":45,"author":{"gitId":"eltonyeh"},"content":"        if (model.hasTask(toAdd)) {","lastModifiedDate":"2021-10-12"},{"lineNumber":46,"author":{"gitId":"eltonyeh"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_TASK);","lastModifiedDate":"2021-10-12"},{"lineNumber":47,"author":{"gitId":"eltonyeh"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":48,"author":{"gitId":"eltonyeh"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":49,"author":{"gitId":"eltonyeh"},"content":"        model.addTask(toAdd);","lastModifiedDate":"2021-10-12"},{"lineNumber":50,"author":{"gitId":"eltonyeh"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, toAdd));","lastModifiedDate":"2021-10-12"},{"lineNumber":51,"author":{"gitId":"eltonyeh"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":52,"author":{"gitId":"eltonyeh"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":53,"author":{"gitId":"eltonyeh"},"content":"    @Override","lastModifiedDate":"2021-10-12"},{"lineNumber":54,"author":{"gitId":"eltonyeh"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-12"},{"lineNumber":55,"author":{"gitId":"eltonyeh"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-10-12"},{"lineNumber":56,"author":{"gitId":"eltonyeh"},"content":"                || (other instanceof AddTaskCommand // instanceof handles nulls","lastModifiedDate":"2021-10-12"},{"lineNumber":57,"author":{"gitId":"eltonyeh"},"content":"                \u0026\u0026 toAdd.equals(((AddTaskCommand) other).toAdd));","lastModifiedDate":"2021-10-12"},{"lineNumber":58,"author":{"gitId":"eltonyeh"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":59,"author":{"gitId":"eltonyeh"},"content":"}","lastModifiedDate":"2021-10-12"},{"lineNumber":60,"author":{"gitId":"eltonyeh"},"content":"","lastModifiedDate":"2021-10-12"}],"authorContributionMap":{"kvihashini":2,"eltonyeh":58}},{"path":"src/main/java/seedu/address/logic/commands/tasks/AssignTaskCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"eltonyeh"},"content":"package seedu.address.logic.commands.tasks;","lastModifiedDate":"2021-10-26"},{"lineNumber":2,"author":{"gitId":"eltonyeh"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":3,"author":{"gitId":"jeremy-7007"},"content":"import java.util.Map;","lastModifiedDate":"2021-10-26"},{"lineNumber":4,"author":{"gitId":"eltonyeh"},"content":"import java.util.Set;","lastModifiedDate":"2021-10-26"},{"lineNumber":5,"author":{"gitId":"eltonyeh"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":6,"author":{"gitId":"eltonyeh"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-10-26"},{"lineNumber":7,"author":{"gitId":"eltonyeh"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2021-11-08"},{"lineNumber":8,"author":{"gitId":"eltonyeh"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-10-26"},{"lineNumber":9,"author":{"gitId":"eltonyeh"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-11-08"},{"lineNumber":10,"author":{"gitId":"eltonyeh"},"content":"import seedu.address.model.id.UniqueId;","lastModifiedDate":"2021-10-26"},{"lineNumber":11,"author":{"gitId":"eltonyeh"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":12,"author":{"gitId":"eltonyeh"},"content":"public abstract class AssignTaskCommand extends ManageTaskAssignmentCommand {","lastModifiedDate":"2021-11-07"},{"lineNumber":13,"author":{"gitId":"eltonyeh"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":14,"author":{"gitId":"eltonyeh"},"content":"    public static final String MESSAGE_USAGE \u003d \"%1$s: Assigns a task to the %2$s\"","lastModifiedDate":"2021-11-08"},{"lineNumber":15,"author":{"gitId":"eltonyeh"},"content":"            + ManageTaskAssignmentCommand.MESSAGE_USAGE;","lastModifiedDate":"2021-11-07"},{"lineNumber":16,"author":{"gitId":"eltonyeh"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":17,"author":{"gitId":"eltonyeh"},"content":"    public static final String OVERLAPPING_TASK \u003d \"Task is already assigned to this %s!\";","lastModifiedDate":"2021-10-26"},{"lineNumber":18,"author":{"gitId":"eltonyeh"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Task %1$s assigned to %3$s %2$s\";","lastModifiedDate":"2021-10-26"},{"lineNumber":19,"author":{"gitId":"eltonyeh"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":20,"author":{"gitId":"eltonyeh"},"content":"    /**","lastModifiedDate":"2021-10-26"},{"lineNumber":21,"author":{"gitId":"eltonyeh"},"content":"     * Constructs a {@code AssignTaskCommand}","lastModifiedDate":"2021-10-26"},{"lineNumber":22,"author":{"gitId":"eltonyeh"},"content":"     *","lastModifiedDate":"2021-10-26"},{"lineNumber":23,"author":{"gitId":"eltonyeh"},"content":"     * @param assigneeIndex the index of the {@code TaskAssignable} to be assigned a task","lastModifiedDate":"2021-10-26"},{"lineNumber":24,"author":{"gitId":"eltonyeh"},"content":"     * @param taskIndex the index of the task in the filtered task list to assign","lastModifiedDate":"2021-10-26"},{"lineNumber":25,"author":{"gitId":"eltonyeh"},"content":"     */","lastModifiedDate":"2021-10-26"},{"lineNumber":26,"author":{"gitId":"eltonyeh"},"content":"    public AssignTaskCommand(Index assigneeIndex, Index taskIndex) {","lastModifiedDate":"2021-10-26"},{"lineNumber":27,"author":{"gitId":"eltonyeh"},"content":"        super(assigneeIndex, taskIndex);","lastModifiedDate":"2021-11-07"},{"lineNumber":28,"author":{"gitId":"eltonyeh"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":29,"author":{"gitId":"eltonyeh"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":30,"author":{"gitId":"eltonyeh"},"content":"    protected void handleTaskDuplicationOrNotFound(Set\u003cUniqueId\u003e taskSet, UniqueId taskId, String assigneeType)","lastModifiedDate":"2021-11-07"},{"lineNumber":31,"author":{"gitId":"eltonyeh"},"content":"            throws CommandException {","lastModifiedDate":"2021-11-07"},{"lineNumber":32,"author":{"gitId":"eltonyeh"},"content":"        if (taskSet.contains(taskId)) {","lastModifiedDate":"2021-11-07"},{"lineNumber":33,"author":{"gitId":"eltonyeh"},"content":"            throw new CommandException(String.format(OVERLAPPING_TASK, assigneeType));","lastModifiedDate":"2021-10-26"},{"lineNumber":34,"author":{"gitId":"eltonyeh"},"content":"        }","lastModifiedDate":"2021-10-26"},{"lineNumber":35,"author":{"gitId":"eltonyeh"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":36,"author":{"gitId":"eltonyeh"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":37,"author":{"gitId":"eltonyeh"},"content":"    protected void manageTaskAssignment(Set\u003cUniqueId\u003e newTaskSet, Map\u003cUniqueId, Boolean\u003e newTasksCompletion,","lastModifiedDate":"2021-11-07"},{"lineNumber":38,"author":{"gitId":"eltonyeh"},"content":"                                        UniqueId taskId) {","lastModifiedDate":"2021-11-07"},{"lineNumber":39,"author":{"gitId":"eltonyeh"},"content":"        newTaskSet.add(taskId);","lastModifiedDate":"2021-11-07"},{"lineNumber":40,"author":{"gitId":"eltonyeh"},"content":"        newTasksCompletion.put(taskId, false);","lastModifiedDate":"2021-11-07"},{"lineNumber":41,"author":{"gitId":"eltonyeh"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":42,"author":{"gitId":"eltonyeh"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":43,"author":{"gitId":"eltonyeh"},"content":"    public CommandResult executeWithGivenMessage(Model model, String assigneeType) throws CommandException {","lastModifiedDate":"2021-11-08"},{"lineNumber":44,"author":{"gitId":"eltonyeh"},"content":"        return executeWithGivenMessage(model, assigneeType, MESSAGE_SUCCESS);","lastModifiedDate":"2021-11-08"},{"lineNumber":45,"author":{"gitId":"eltonyeh"},"content":"    }","lastModifiedDate":"2021-11-08"},{"lineNumber":46,"author":{"gitId":"eltonyeh"},"content":"}","lastModifiedDate":"2021-10-26"}],"authorContributionMap":{"jeremy-7007":1,"eltonyeh":45}},{"path":"src/main/java/seedu/address/logic/commands/tasks/AssignTaskToGroupCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"eltonyeh"},"content":"package seedu.address.logic.commands.tasks;","lastModifiedDate":"2021-10-26"},{"lineNumber":2,"author":{"gitId":"eltonyeh"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":3,"author":{"gitId":"eltonyeh"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2021-10-26"},{"lineNumber":4,"author":{"gitId":"eltonyeh"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_GROUPS;","lastModifiedDate":"2021-10-26"},{"lineNumber":5,"author":{"gitId":"eltonyeh"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_TASKS;","lastModifiedDate":"2021-10-26"},{"lineNumber":6,"author":{"gitId":"eltonyeh"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":7,"author":{"gitId":"eltonyeh"},"content":"import java.util.List;","lastModifiedDate":"2021-10-26"},{"lineNumber":8,"author":{"gitId":"eltonyeh"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":9,"author":{"gitId":"eltonyeh"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2021-10-26"},{"lineNumber":10,"author":{"gitId":"eltonyeh"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-10-26"},{"lineNumber":11,"author":{"gitId":"eltonyeh"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2021-10-26"},{"lineNumber":12,"author":{"gitId":"eltonyeh"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-10-26"},{"lineNumber":13,"author":{"gitId":"eltonyeh"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-10-26"},{"lineNumber":14,"author":{"gitId":"eltonyeh"},"content":"import seedu.address.model.TaskAssignable;","lastModifiedDate":"2021-10-26"},{"lineNumber":15,"author":{"gitId":"tanhuakun"},"content":"import seedu.address.model.ViewingType;","lastModifiedDate":"2021-11-04"},{"lineNumber":16,"author":{"gitId":"eltonyeh"},"content":"import seedu.address.model.group.Group;","lastModifiedDate":"2021-10-26"},{"lineNumber":17,"author":{"gitId":"eltonyeh"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":18,"author":{"gitId":"eltonyeh"},"content":"public class AssignTaskToGroupCommand extends AssignTaskCommand {","lastModifiedDate":"2021-10-26"},{"lineNumber":19,"author":{"gitId":"eltonyeh"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":20,"author":{"gitId":"eltonyeh"},"content":"    public static final String COMMAND_WORD \u003d \"-ag\";","lastModifiedDate":"2021-10-26"},{"lineNumber":21,"author":{"gitId":"eltonyeh"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":22,"author":{"gitId":"eltonyeh"},"content":"    public static final String MESSAGE_USAGE \u003d String.format(","lastModifiedDate":"2021-10-26"},{"lineNumber":23,"author":{"gitId":"eltonyeh"},"content":"            AssignTaskCommand.MESSAGE_USAGE, COMMAND_WORD, \"group\", \"GROUP\");","lastModifiedDate":"2021-10-26"},{"lineNumber":24,"author":{"gitId":"eltonyeh"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":25,"author":{"gitId":"eltonyeh"},"content":"    /**","lastModifiedDate":"2021-10-26"},{"lineNumber":26,"author":{"gitId":"eltonyeh"},"content":"     * Constructs a {@code AssignTaskToGroupCommand}.","lastModifiedDate":"2021-10-26"},{"lineNumber":27,"author":{"gitId":"eltonyeh"},"content":"     *","lastModifiedDate":"2021-10-26"},{"lineNumber":28,"author":{"gitId":"eltonyeh"},"content":"     * @param groupIndex of the group in the filtered group list to assign to","lastModifiedDate":"2021-10-26"},{"lineNumber":29,"author":{"gitId":"eltonyeh"},"content":"     * @param taskIndex of the task in the filtered task list to assign","lastModifiedDate":"2021-10-26"},{"lineNumber":30,"author":{"gitId":"eltonyeh"},"content":"     */","lastModifiedDate":"2021-10-26"},{"lineNumber":31,"author":{"gitId":"eltonyeh"},"content":"    public AssignTaskToGroupCommand(Index groupIndex, Index taskIndex) {","lastModifiedDate":"2021-10-26"},{"lineNumber":32,"author":{"gitId":"eltonyeh"},"content":"        super(groupIndex, taskIndex);","lastModifiedDate":"2021-10-26"},{"lineNumber":33,"author":{"gitId":"eltonyeh"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":34,"author":{"gitId":"eltonyeh"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":35,"author":{"gitId":"eltonyeh"},"content":"    @Override","lastModifiedDate":"2021-10-26"},{"lineNumber":36,"author":{"gitId":"eltonyeh"},"content":"    protected String invalidDisplayedIndexMessage() {","lastModifiedDate":"2021-10-26"},{"lineNumber":37,"author":{"gitId":"eltonyeh"},"content":"        return Messages.MESSAGE_INVALID_GROUP_DISPLAYED_INDEX;","lastModifiedDate":"2021-10-26"},{"lineNumber":38,"author":{"gitId":"eltonyeh"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":39,"author":{"gitId":"eltonyeh"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":40,"author":{"gitId":"eltonyeh"},"content":"    @Override","lastModifiedDate":"2021-10-26"},{"lineNumber":41,"author":{"gitId":"eltonyeh"},"content":"    protected List\u003cGroup\u003e getTaskAssignableListFromModel(Model model) {","lastModifiedDate":"2021-10-26"},{"lineNumber":42,"author":{"gitId":"eltonyeh"},"content":"        return model.getFilteredGroupList();","lastModifiedDate":"2021-10-26"},{"lineNumber":43,"author":{"gitId":"eltonyeh"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":44,"author":{"gitId":"eltonyeh"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":45,"author":{"gitId":"eltonyeh"},"content":"    @Override","lastModifiedDate":"2021-10-26"},{"lineNumber":46,"author":{"gitId":"eltonyeh"},"content":"    protected void updateModel(Model model, TaskAssignable taskAssignableToEdit, TaskAssignable","lastModifiedDate":"2021-10-26"},{"lineNumber":47,"author":{"gitId":"eltonyeh"},"content":"            newTaskAssignable) {","lastModifiedDate":"2021-10-26"},{"lineNumber":48,"author":{"gitId":"eltonyeh"},"content":"        requireAllNonNull(model, taskAssignableToEdit, newTaskAssignable);","lastModifiedDate":"2021-10-26"},{"lineNumber":49,"author":{"gitId":"eltonyeh"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":50,"author":{"gitId":"eltonyeh"},"content":"        if (!(taskAssignableToEdit instanceof Group \u0026\u0026 newTaskAssignable instanceof Group)) {","lastModifiedDate":"2021-10-26"},{"lineNumber":51,"author":{"gitId":"eltonyeh"},"content":"            return;","lastModifiedDate":"2021-10-26"},{"lineNumber":52,"author":{"gitId":"eltonyeh"},"content":"        }","lastModifiedDate":"2021-10-26"},{"lineNumber":53,"author":{"gitId":"eltonyeh"},"content":"        Group groupToEdit \u003d (Group) taskAssignableToEdit;","lastModifiedDate":"2021-10-26"},{"lineNumber":54,"author":{"gitId":"eltonyeh"},"content":"        Group newGroup \u003d (Group) newTaskAssignable;","lastModifiedDate":"2021-10-26"},{"lineNumber":55,"author":{"gitId":"eltonyeh"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":56,"author":{"gitId":"eltonyeh"},"content":"        model.setGroup(groupToEdit, newGroup);","lastModifiedDate":"2021-10-26"},{"lineNumber":57,"author":{"gitId":"eltonyeh"},"content":"        model.updateFilteredGroupList(PREDICATE_SHOW_ALL_GROUPS);","lastModifiedDate":"2021-10-26"},{"lineNumber":58,"author":{"gitId":"eltonyeh"},"content":"        model.updateFilteredTaskList(PREDICATE_SHOW_ALL_TASKS);","lastModifiedDate":"2021-10-26"},{"lineNumber":59,"author":{"gitId":"tanhuakun"},"content":"        model.setGroupToView(newGroup);","lastModifiedDate":"2021-11-04"},{"lineNumber":60,"author":{"gitId":"tanhuakun"},"content":"        model.setViewingType(ViewingType.GROUP);","lastModifiedDate":"2021-11-04"},{"lineNumber":61,"author":{"gitId":"eltonyeh"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":62,"author":{"gitId":"eltonyeh"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":63,"author":{"gitId":"eltonyeh"},"content":"    @Override","lastModifiedDate":"2021-10-26"},{"lineNumber":64,"author":{"gitId":"eltonyeh"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2021-10-26"},{"lineNumber":65,"author":{"gitId":"eltonyeh"},"content":"        return executeWithGivenMessage(model, \"group\");","lastModifiedDate":"2021-10-26"},{"lineNumber":66,"author":{"gitId":"eltonyeh"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":67,"author":{"gitId":"eltonyeh"},"content":"}","lastModifiedDate":"2021-10-26"}],"authorContributionMap":{"eltonyeh":64,"tanhuakun":3}},{"path":"src/main/java/seedu/address/logic/commands/tasks/AssignTaskToPersonCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jeremy-7007"},"content":"package seedu.address.logic.commands.tasks;","lastModifiedDate":"2021-10-12"},{"lineNumber":2,"author":{"gitId":"jeremy-7007"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":3,"author":{"gitId":"eltonyeh"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2021-10-26"},{"lineNumber":4,"author":{"gitId":"jeremy-7007"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2021-10-12"},{"lineNumber":5,"author":{"gitId":"jeremy-7007"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_TASKS;","lastModifiedDate":"2021-10-12"},{"lineNumber":6,"author":{"gitId":"jeremy-7007"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":7,"author":{"gitId":"jeremy-7007"},"content":"import java.util.List;","lastModifiedDate":"2021-10-12"},{"lineNumber":8,"author":{"gitId":"jeremy-7007"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":9,"author":{"gitId":"jeremy-7007"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2021-10-12"},{"lineNumber":10,"author":{"gitId":"jeremy-7007"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-10-12"},{"lineNumber":11,"author":{"gitId":"jeremy-7007"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2021-10-12"},{"lineNumber":12,"author":{"gitId":"jeremy-7007"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-10-12"},{"lineNumber":13,"author":{"gitId":"jeremy-7007"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-10-12"},{"lineNumber":14,"author":{"gitId":"eltonyeh"},"content":"import seedu.address.model.TaskAssignable;","lastModifiedDate":"2021-10-26"},{"lineNumber":15,"author":{"gitId":"tanhuakun"},"content":"import seedu.address.model.ViewingType;","lastModifiedDate":"2021-11-04"},{"lineNumber":16,"author":{"gitId":"jeremy-7007"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2021-10-12"},{"lineNumber":17,"author":{"gitId":"jeremy-7007"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":18,"author":{"gitId":"eltonyeh"},"content":"public class AssignTaskToPersonCommand extends AssignTaskCommand {","lastModifiedDate":"2021-10-26"},{"lineNumber":19,"author":{"gitId":"jeremy-7007"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":20,"author":{"gitId":"eltonyeh"},"content":"    public static final String COMMAND_WORD \u003d \"-as\";","lastModifiedDate":"2021-10-26"},{"lineNumber":21,"author":{"gitId":"jeremy-7007"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":22,"author":{"gitId":"eltonyeh"},"content":"    public static final String MESSAGE_USAGE \u003d String.format(","lastModifiedDate":"2021-10-26"},{"lineNumber":23,"author":{"gitId":"eltonyeh"},"content":"            AssignTaskCommand.MESSAGE_USAGE, COMMAND_WORD, \"student\", \"STUDENT\");","lastModifiedDate":"2021-10-26"},{"lineNumber":24,"author":{"gitId":"jeremy-7007"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":25,"author":{"gitId":"jeremy-7007"},"content":"    /**","lastModifiedDate":"2021-10-12"},{"lineNumber":26,"author":{"gitId":"jeremy-7007"},"content":"     * Constructs a {@code AssignTaskToPersonCommand}","lastModifiedDate":"2021-10-12"},{"lineNumber":27,"author":{"gitId":"jeremy-7007"},"content":"     *","lastModifiedDate":"2021-10-12"},{"lineNumber":28,"author":{"gitId":"jeremy-7007"},"content":"     * @param personIndex of the person in the filtered person list to assign to","lastModifiedDate":"2021-10-12"},{"lineNumber":29,"author":{"gitId":"jeremy-7007"},"content":"     * @param taskIndex of the task in the filtered task list to assign","lastModifiedDate":"2021-10-12"},{"lineNumber":30,"author":{"gitId":"jeremy-7007"},"content":"     */","lastModifiedDate":"2021-10-12"},{"lineNumber":31,"author":{"gitId":"jeremy-7007"},"content":"    public AssignTaskToPersonCommand(Index personIndex, Index taskIndex) {","lastModifiedDate":"2021-10-12"},{"lineNumber":32,"author":{"gitId":"eltonyeh"},"content":"        super(personIndex, taskIndex);","lastModifiedDate":"2021-10-26"},{"lineNumber":33,"author":{"gitId":"eltonyeh"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":34,"author":{"gitId":"jeremy-7007"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":35,"author":{"gitId":"jeremy-7007"},"content":"    @Override","lastModifiedDate":"2021-10-12"},{"lineNumber":36,"author":{"gitId":"eltonyeh"},"content":"    protected String invalidDisplayedIndexMessage() {","lastModifiedDate":"2021-10-26"},{"lineNumber":37,"author":{"gitId":"eltonyeh"},"content":"        return Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX;","lastModifiedDate":"2021-10-26"},{"lineNumber":38,"author":{"gitId":"jeremy-7007"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":39,"author":{"gitId":"jeremy-7007"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":40,"author":{"gitId":"eltonyeh"},"content":"    @Override","lastModifiedDate":"2021-10-26"},{"lineNumber":41,"author":{"gitId":"eltonyeh"},"content":"    protected List\u003cPerson\u003e getTaskAssignableListFromModel(Model model) {","lastModifiedDate":"2021-10-26"},{"lineNumber":42,"author":{"gitId":"eltonyeh"},"content":"        return model.getFilteredPersonList();","lastModifiedDate":"2021-10-26"},{"lineNumber":43,"author":{"gitId":"jeremy-7007"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":44,"author":{"gitId":"jeremy-7007"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":45,"author":{"gitId":"eltonyeh"},"content":"    @Override","lastModifiedDate":"2021-10-26"},{"lineNumber":46,"author":{"gitId":"eltonyeh"},"content":"    protected void updateModel(Model model, TaskAssignable taskAssignableToEdit, TaskAssignable","lastModifiedDate":"2021-10-26"},{"lineNumber":47,"author":{"gitId":"eltonyeh"},"content":"            newTaskAssignable) {","lastModifiedDate":"2021-10-26"},{"lineNumber":48,"author":{"gitId":"eltonyeh"},"content":"        requireAllNonNull(model, taskAssignableToEdit, newTaskAssignable);","lastModifiedDate":"2021-10-26"},{"lineNumber":49,"author":{"gitId":"jeremy-7007"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":50,"author":{"gitId":"eltonyeh"},"content":"        if (!(taskAssignableToEdit instanceof Person \u0026\u0026 newTaskAssignable instanceof Person)) {","lastModifiedDate":"2021-10-26"},{"lineNumber":51,"author":{"gitId":"eltonyeh"},"content":"            return;","lastModifiedDate":"2021-10-26"},{"lineNumber":52,"author":{"gitId":"jeremy-7007"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":53,"author":{"gitId":"eltonyeh"},"content":"        Person personToEdit \u003d (Person) taskAssignableToEdit;","lastModifiedDate":"2021-10-26"},{"lineNumber":54,"author":{"gitId":"eltonyeh"},"content":"        Person newPerson \u003d (Person) newTaskAssignable;","lastModifiedDate":"2021-10-26"},{"lineNumber":55,"author":{"gitId":"jeremy-7007"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":56,"author":{"gitId":"jeremy-7007"},"content":"        model.setPerson(personToEdit, newPerson);","lastModifiedDate":"2021-10-12"},{"lineNumber":57,"author":{"gitId":"jeremy-7007"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2021-10-12"},{"lineNumber":58,"author":{"gitId":"jeremy-7007"},"content":"        model.updateFilteredTaskList(PREDICATE_SHOW_ALL_TASKS);","lastModifiedDate":"2021-10-12"},{"lineNumber":59,"author":{"gitId":"tanhuakun"},"content":"        model.setPersonToView(newPerson);","lastModifiedDate":"2021-11-04"},{"lineNumber":60,"author":{"gitId":"tanhuakun"},"content":"        model.setViewingType(ViewingType.PERSON);","lastModifiedDate":"2021-11-04"},{"lineNumber":61,"author":{"gitId":"jeremy-7007"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":62,"author":{"gitId":"jeremy-7007"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":63,"author":{"gitId":"eltonyeh"},"content":"    @Override","lastModifiedDate":"2021-10-26"},{"lineNumber":64,"author":{"gitId":"eltonyeh"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2021-10-26"},{"lineNumber":65,"author":{"gitId":"eltonyeh"},"content":"        return executeWithGivenMessage(model, \"student\");","lastModifiedDate":"2021-10-26"},{"lineNumber":66,"author":{"gitId":"eltonyeh"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":67,"author":{"gitId":"jeremy-7007"},"content":"}","lastModifiedDate":"2021-10-12"}],"authorContributionMap":{"jeremy-7007":39,"eltonyeh":25,"tanhuakun":3}},{"path":"src/main/java/seedu/address/logic/commands/tasks/DeleteTaskCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jeremy-7007"},"content":"package seedu.address.logic.commands.tasks;","lastModifiedDate":"2021-10-28"},{"lineNumber":2,"author":{"gitId":"jeremy-7007"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":3,"author":{"gitId":"jeremy-7007"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-29"},{"lineNumber":4,"author":{"gitId":"jeremy-7007"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":5,"author":{"gitId":"jeremy-7007"},"content":"import java.util.HashMap;","lastModifiedDate":"2021-10-29"},{"lineNumber":6,"author":{"gitId":"jeremy-7007"},"content":"import java.util.HashSet;","lastModifiedDate":"2021-10-29"},{"lineNumber":7,"author":{"gitId":"jeremy-7007"},"content":"import java.util.List;","lastModifiedDate":"2021-10-29"},{"lineNumber":8,"author":{"gitId":"jeremy-7007"},"content":"import java.util.Map;","lastModifiedDate":"2021-10-29"},{"lineNumber":9,"author":{"gitId":"jeremy-7007"},"content":"import java.util.Set;","lastModifiedDate":"2021-10-29"},{"lineNumber":10,"author":{"gitId":"jeremy-7007"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":11,"author":{"gitId":"jeremy-7007"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2021-10-29"},{"lineNumber":12,"author":{"gitId":"jeremy-7007"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-10-29"},{"lineNumber":13,"author":{"gitId":"jeremy-7007"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2021-10-28"},{"lineNumber":14,"author":{"gitId":"jeremy-7007"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2021-10-29"},{"lineNumber":15,"author":{"gitId":"jeremy-7007"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-10-29"},{"lineNumber":16,"author":{"gitId":"jeremy-7007"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-10-29"},{"lineNumber":17,"author":{"gitId":"jeremy-7007"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2021-10-29"},{"lineNumber":18,"author":{"gitId":"tanhuakun"},"content":"import seedu.address.model.ViewingType;","lastModifiedDate":"2021-11-04"},{"lineNumber":19,"author":{"gitId":"jeremy-7007"},"content":"import seedu.address.model.group.Group;","lastModifiedDate":"2021-10-29"},{"lineNumber":20,"author":{"gitId":"jeremy-7007"},"content":"import seedu.address.model.id.UniqueId;","lastModifiedDate":"2021-10-29"},{"lineNumber":21,"author":{"gitId":"jeremy-7007"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2021-10-29"},{"lineNumber":22,"author":{"gitId":"jeremy-7007"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2021-10-29"},{"lineNumber":23,"author":{"gitId":"jeremy-7007"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":24,"author":{"gitId":"jeremy-7007"},"content":"public class DeleteTaskCommand extends Command {","lastModifiedDate":"2021-10-28"},{"lineNumber":25,"author":{"gitId":"jeremy-7007"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":26,"author":{"gitId":"jeremy-7007"},"content":"    public static final String COMMAND_WORD \u003d \"-d\";","lastModifiedDate":"2021-10-28"},{"lineNumber":27,"author":{"gitId":"jeremy-7007"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":28,"author":{"gitId":"kvihashini"},"content":"    public static final String MESSAGE_USAGE \u003d \"task \" + COMMAND_WORD","lastModifiedDate":"2021-11-03"},{"lineNumber":29,"author":{"gitId":"jeremy-7007"},"content":"            + \": Deletes the task identified by the index number used in the displayed task list.\\n\"","lastModifiedDate":"2021-10-29"},{"lineNumber":30,"author":{"gitId":"jeremy-7007"},"content":"            + \"Parameters: INDEX (must be a positive integer)\\n\"","lastModifiedDate":"2021-10-28"},{"lineNumber":31,"author":{"gitId":"kvihashini"},"content":"            + \"Example: \" + \"task \" + COMMAND_WORD + \" 1\";","lastModifiedDate":"2021-11-03"},{"lineNumber":32,"author":{"gitId":"jeremy-7007"},"content":"    public static final String MESSAGE_DELETE_TASK_SUCCESS \u003d \"Deleted Task: %1$s\";","lastModifiedDate":"2021-10-29"},{"lineNumber":33,"author":{"gitId":"jeremy-7007"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":34,"author":{"gitId":"jeremy-7007"},"content":"    private final Index targetIndex;","lastModifiedDate":"2021-10-29"},{"lineNumber":35,"author":{"gitId":"jeremy-7007"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":36,"author":{"gitId":"jeremy-7007"},"content":"    public DeleteTaskCommand(Index targetIndex) {","lastModifiedDate":"2021-10-29"},{"lineNumber":37,"author":{"gitId":"jeremy-7007"},"content":"        this.targetIndex \u003d targetIndex;","lastModifiedDate":"2021-10-29"},{"lineNumber":38,"author":{"gitId":"jeremy-7007"},"content":"    }","lastModifiedDate":"2021-10-29"},{"lineNumber":39,"author":{"gitId":"jeremy-7007"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":40,"author":{"gitId":"jeremy-7007"},"content":"    @Override","lastModifiedDate":"2021-10-29"},{"lineNumber":41,"author":{"gitId":"jeremy-7007"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2021-10-29"},{"lineNumber":42,"author":{"gitId":"jeremy-7007"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-10-29"},{"lineNumber":43,"author":{"gitId":"jeremy-7007"},"content":"        List\u003cTask\u003e lastShownTaskList \u003d model.getFilteredTaskList();","lastModifiedDate":"2021-10-29"},{"lineNumber":44,"author":{"gitId":"jeremy-7007"},"content":"        ReadOnlyAddressBook addressBook \u003d model.getAddressBook();","lastModifiedDate":"2021-10-29"},{"lineNumber":45,"author":{"gitId":"jeremy-7007"},"content":"        List\u003cPerson\u003e allPersonList \u003d addressBook.getPersonList();","lastModifiedDate":"2021-10-29"},{"lineNumber":46,"author":{"gitId":"jeremy-7007"},"content":"        List\u003cGroup\u003e allGroupList \u003d addressBook.getGroupList();","lastModifiedDate":"2021-10-29"},{"lineNumber":47,"author":{"gitId":"jeremy-7007"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":48,"author":{"gitId":"jeremy-7007"},"content":"        if (targetIndex.getZeroBased() \u003e\u003d lastShownTaskList.size()) {","lastModifiedDate":"2021-10-29"},{"lineNumber":49,"author":{"gitId":"jeremy-7007"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_TASK_DISPLAYED_INDEX);","lastModifiedDate":"2021-10-29"},{"lineNumber":50,"author":{"gitId":"jeremy-7007"},"content":"        }","lastModifiedDate":"2021-10-29"},{"lineNumber":51,"author":{"gitId":"jeremy-7007"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":52,"author":{"gitId":"jeremy-7007"},"content":"        Task taskToDelete \u003d lastShownTaskList.get(targetIndex.getZeroBased());","lastModifiedDate":"2021-10-29"},{"lineNumber":53,"author":{"gitId":"jeremy-7007"},"content":"        UniqueId taskId \u003d taskToDelete.getId();","lastModifiedDate":"2021-10-29"},{"lineNumber":54,"author":{"gitId":"jeremy-7007"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":55,"author":{"gitId":"jeremy-7007"},"content":"        // Iterate through all persons in the model to find and unassign task","lastModifiedDate":"2021-10-29"},{"lineNumber":56,"author":{"gitId":"jeremy-7007"},"content":"        allPersonList.forEach((person) -\u003e {","lastModifiedDate":"2021-10-29"},{"lineNumber":57,"author":{"gitId":"jeremy-7007"},"content":"            Set\u003cUniqueId\u003e previousAssignedTaskIds \u003d person.getAssignedTaskIds();","lastModifiedDate":"2021-10-29"},{"lineNumber":58,"author":{"gitId":"jeremy-7007"},"content":"            Set\u003cUniqueId\u003e newAssignedTaskIds \u003d new HashSet\u003c\u003e(previousAssignedTaskIds);","lastModifiedDate":"2021-10-29"},{"lineNumber":59,"author":{"gitId":"jeremy-7007"},"content":"            Map\u003cUniqueId, Boolean\u003e previousTaskCompletion \u003d person.getTasksCompletion();","lastModifiedDate":"2021-10-29"},{"lineNumber":60,"author":{"gitId":"jeremy-7007"},"content":"            Map\u003cUniqueId, Boolean\u003e newTaskCompletion \u003d new HashMap\u003c\u003e(previousTaskCompletion);","lastModifiedDate":"2021-10-29"},{"lineNumber":61,"author":{"gitId":"jeremy-7007"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":62,"author":{"gitId":"jeremy-7007"},"content":"            if (previousAssignedTaskIds.contains(taskId)) {","lastModifiedDate":"2021-10-29"},{"lineNumber":63,"author":{"gitId":"jeremy-7007"},"content":"                newAssignedTaskIds.remove(taskId);","lastModifiedDate":"2021-10-29"},{"lineNumber":64,"author":{"gitId":"jeremy-7007"},"content":"                newTaskCompletion.remove(taskId);","lastModifiedDate":"2021-10-29"},{"lineNumber":65,"author":{"gitId":"jeremy-7007"},"content":"            }","lastModifiedDate":"2021-10-29"},{"lineNumber":66,"author":{"gitId":"jeremy-7007"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":67,"author":{"gitId":"jeremy-7007"},"content":"            Person newPerson \u003d person.updateAssignedTaskIds(newAssignedTaskIds);","lastModifiedDate":"2021-10-29"},{"lineNumber":68,"author":{"gitId":"jeremy-7007"},"content":"            newPerson \u003d newPerson.updateTasksCompletion(newTaskCompletion);","lastModifiedDate":"2021-10-29"},{"lineNumber":69,"author":{"gitId":"jeremy-7007"},"content":"            model.setPerson(person, newPerson);","lastModifiedDate":"2021-10-29"},{"lineNumber":70,"author":{"gitId":"jeremy-7007"},"content":"        });","lastModifiedDate":"2021-10-29"},{"lineNumber":71,"author":{"gitId":"jeremy-7007"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":72,"author":{"gitId":"jeremy-7007"},"content":"        // Iterate through all groups in the model to find and unassign task","lastModifiedDate":"2021-10-29"},{"lineNumber":73,"author":{"gitId":"jeremy-7007"},"content":"        allGroupList.forEach((group) -\u003e {","lastModifiedDate":"2021-10-29"},{"lineNumber":74,"author":{"gitId":"jeremy-7007"},"content":"            Set\u003cUniqueId\u003e previousAssignedTaskIds \u003d group.getAssignedTaskIds();","lastModifiedDate":"2021-10-29"},{"lineNumber":75,"author":{"gitId":"jeremy-7007"},"content":"            Set\u003cUniqueId\u003e newAssignedTaskIds \u003d new HashSet\u003c\u003e(previousAssignedTaskIds);","lastModifiedDate":"2021-10-29"},{"lineNumber":76,"author":{"gitId":"jeremy-7007"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":77,"author":{"gitId":"jeremy-7007"},"content":"            if (previousAssignedTaskIds.contains(taskId)) {","lastModifiedDate":"2021-10-29"},{"lineNumber":78,"author":{"gitId":"jeremy-7007"},"content":"                newAssignedTaskIds.remove(taskId);","lastModifiedDate":"2021-10-29"},{"lineNumber":79,"author":{"gitId":"jeremy-7007"},"content":"            }","lastModifiedDate":"2021-10-29"},{"lineNumber":80,"author":{"gitId":"jeremy-7007"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":81,"author":{"gitId":"jeremy-7007"},"content":"            Group newGroup \u003d group.updateAssignedTaskIds(newAssignedTaskIds);","lastModifiedDate":"2021-10-29"},{"lineNumber":82,"author":{"gitId":"jeremy-7007"},"content":"            model.setGroup(group, newGroup);","lastModifiedDate":"2021-10-29"},{"lineNumber":83,"author":{"gitId":"jeremy-7007"},"content":"        });","lastModifiedDate":"2021-10-29"},{"lineNumber":84,"author":{"gitId":"jeremy-7007"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":85,"author":{"gitId":"jeremy-7007"},"content":"        model.deleteTask(taskToDelete);","lastModifiedDate":"2021-10-29"},{"lineNumber":86,"author":{"gitId":"jeremy-7007"},"content":"        model.updateLessonWithAttendeesList();","lastModifiedDate":"2021-10-29"},{"lineNumber":87,"author":{"gitId":"tanhuakun"},"content":"        model.setViewingType(ViewingType.SCHEDULE);","lastModifiedDate":"2021-11-04"},{"lineNumber":88,"author":{"gitId":"jeremy-7007"},"content":"        return new CommandResult(String.format(MESSAGE_DELETE_TASK_SUCCESS, taskToDelete));","lastModifiedDate":"2021-10-29"},{"lineNumber":89,"author":{"gitId":"jeremy-7007"},"content":"    }","lastModifiedDate":"2021-10-29"},{"lineNumber":90,"author":{"gitId":"jeremy-7007"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":91,"author":{"gitId":"jeremy-7007"},"content":"    @Override","lastModifiedDate":"2021-10-29"},{"lineNumber":92,"author":{"gitId":"jeremy-7007"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-29"},{"lineNumber":93,"author":{"gitId":"jeremy-7007"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-10-29"},{"lineNumber":94,"author":{"gitId":"jeremy-7007"},"content":"                || (other instanceof DeleteTaskCommand // instanceof handles nulls","lastModifiedDate":"2021-10-29"},{"lineNumber":95,"author":{"gitId":"jeremy-7007"},"content":"                \u0026\u0026 targetIndex.equals(((DeleteTaskCommand) other).targetIndex)); // state check","lastModifiedDate":"2021-10-29"},{"lineNumber":96,"author":{"gitId":"jeremy-7007"},"content":"    }","lastModifiedDate":"2021-10-29"},{"lineNumber":97,"author":{"gitId":"jeremy-7007"},"content":"}","lastModifiedDate":"2021-10-28"}],"authorContributionMap":{"jeremy-7007":93,"kvihashini":2,"tanhuakun":2}},{"path":"src/main/java/seedu/address/logic/commands/tasks/EditTaskCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Neha-5678"},"content":"package seedu.address.logic.commands.tasks;","lastModifiedDate":"2021-10-19"},{"lineNumber":2,"author":{"gitId":"Neha-5678"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":3,"author":{"gitId":"Neha-5678"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-19"},{"lineNumber":4,"author":{"gitId":"Neha-5678"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DEADLINE;","lastModifiedDate":"2021-10-19"},{"lineNumber":5,"author":{"gitId":"Neha-5678"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DESCRIPTION;","lastModifiedDate":"2021-10-19"},{"lineNumber":6,"author":{"gitId":"Neha-5678"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_TASKS;","lastModifiedDate":"2021-10-19"},{"lineNumber":7,"author":{"gitId":"Neha-5678"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":8,"author":{"gitId":"Neha-5678"},"content":"import java.util.List;","lastModifiedDate":"2021-10-19"},{"lineNumber":9,"author":{"gitId":"Neha-5678"},"content":"import java.util.Optional;","lastModifiedDate":"2021-10-19"},{"lineNumber":10,"author":{"gitId":"Neha-5678"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":11,"author":{"gitId":"Neha-5678"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2021-10-19"},{"lineNumber":12,"author":{"gitId":"Neha-5678"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-10-19"},{"lineNumber":13,"author":{"gitId":"Neha-5678"},"content":"import seedu.address.commons.util.CollectionUtil;","lastModifiedDate":"2021-10-19"},{"lineNumber":14,"author":{"gitId":"Neha-5678"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2021-10-19"},{"lineNumber":15,"author":{"gitId":"Neha-5678"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2021-10-19"},{"lineNumber":16,"author":{"gitId":"Neha-5678"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-10-19"},{"lineNumber":17,"author":{"gitId":"Neha-5678"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-10-19"},{"lineNumber":18,"author":{"gitId":"tanhuakun"},"content":"import seedu.address.model.ViewingType;","lastModifiedDate":"2021-11-04"},{"lineNumber":19,"author":{"gitId":"Neha-5678"},"content":"import seedu.address.model.id.UniqueId;","lastModifiedDate":"2021-10-19"},{"lineNumber":20,"author":{"gitId":"Neha-5678"},"content":"import seedu.address.model.task.Deadline;","lastModifiedDate":"2021-10-19"},{"lineNumber":21,"author":{"gitId":"Neha-5678"},"content":"import seedu.address.model.task.Description;","lastModifiedDate":"2021-10-19"},{"lineNumber":22,"author":{"gitId":"Neha-5678"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2021-10-19"},{"lineNumber":23,"author":{"gitId":"Neha-5678"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":24,"author":{"gitId":"Neha-5678"},"content":"/**","lastModifiedDate":"2021-10-19"},{"lineNumber":25,"author":{"gitId":"Neha-5678"},"content":" * Edits an existing task in the address book.","lastModifiedDate":"2021-10-19"},{"lineNumber":26,"author":{"gitId":"Neha-5678"},"content":" */","lastModifiedDate":"2021-10-19"},{"lineNumber":27,"author":{"gitId":"Neha-5678"},"content":"public class EditTaskCommand extends Command {","lastModifiedDate":"2021-10-19"},{"lineNumber":28,"author":{"gitId":"Neha-5678"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":29,"author":{"gitId":"Neha-5678"},"content":"    public static final String COMMAND_WORD \u003d \"-e\";","lastModifiedDate":"2021-10-19"},{"lineNumber":30,"author":{"gitId":"Neha-5678"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":31,"author":{"gitId":"kvihashini"},"content":"    public static final String MESSAGE_USAGE \u003d \"task \" + COMMAND_WORD + \": Edits the details of the task identified \"","lastModifiedDate":"2021-11-03"},{"lineNumber":32,"author":{"gitId":"Neha-5678"},"content":"            + \"by the index number used in the displayed task list. \"","lastModifiedDate":"2021-10-19"},{"lineNumber":33,"author":{"gitId":"Neha-5678"},"content":"            + \"Existing values will be overwritten by the input values.\\n\"","lastModifiedDate":"2021-10-19"},{"lineNumber":34,"author":{"gitId":"Neha-5678"},"content":"            + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2021-10-19"},{"lineNumber":35,"author":{"gitId":"Neha-5678"},"content":"            + \"[\" + PREFIX_DESCRIPTION + \"NAME] \"","lastModifiedDate":"2021-10-19"},{"lineNumber":36,"author":{"gitId":"Neha-5678"},"content":"            + \"[\" + PREFIX_DEADLINE + \"DEADLINE]\\n\"","lastModifiedDate":"2021-10-19"},{"lineNumber":37,"author":{"gitId":"kvihashini"},"content":"            + \"Example: \" + \"task \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2021-11-03"},{"lineNumber":38,"author":{"gitId":"Neha-5678"},"content":"            + PREFIX_DESCRIPTION + \"Report 2 \"","lastModifiedDate":"2021-10-19"},{"lineNumber":39,"author":{"gitId":"Neha-5678"},"content":"            + PREFIX_DEADLINE + \"2021-01-02\";","lastModifiedDate":"2021-10-19"},{"lineNumber":40,"author":{"gitId":"Neha-5678"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":41,"author":{"gitId":"Neha-5678"},"content":"    public static final String MESSAGE_EDIT_TASK_SUCCESS \u003d \"Edited Task: %1$s\";","lastModifiedDate":"2021-10-19"},{"lineNumber":42,"author":{"gitId":"Neha-5678"},"content":"    public static final String MESSAGE_NOT_EDITED \u003d \"At least one field to edit must be provided.\";","lastModifiedDate":"2021-10-19"},{"lineNumber":43,"author":{"gitId":"Neha-5678"},"content":"    public static final String MESSAGE_DUPLICATE_TASK \u003d \"This task already exists in the address book.\";","lastModifiedDate":"2021-10-19"},{"lineNumber":44,"author":{"gitId":"Neha-5678"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":45,"author":{"gitId":"Neha-5678"},"content":"    private final Index index;","lastModifiedDate":"2021-10-19"},{"lineNumber":46,"author":{"gitId":"Neha-5678"},"content":"    private final EditTaskDescriptor editTaskDescriptor;","lastModifiedDate":"2021-10-19"},{"lineNumber":47,"author":{"gitId":"Neha-5678"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":48,"author":{"gitId":"Neha-5678"},"content":"    /**","lastModifiedDate":"2021-10-19"},{"lineNumber":49,"author":{"gitId":"Neha-5678"},"content":"     * @param index of the task in the filtered task list to edit","lastModifiedDate":"2021-10-19"},{"lineNumber":50,"author":{"gitId":"Neha-5678"},"content":"     * @param editTaskDescriptor details to edit the task with","lastModifiedDate":"2021-10-19"},{"lineNumber":51,"author":{"gitId":"Neha-5678"},"content":"     */","lastModifiedDate":"2021-10-19"},{"lineNumber":52,"author":{"gitId":"Neha-5678"},"content":"    public EditTaskCommand(Index index, EditTaskDescriptor editTaskDescriptor) {","lastModifiedDate":"2021-10-19"},{"lineNumber":53,"author":{"gitId":"Neha-5678"},"content":"        requireNonNull(index);","lastModifiedDate":"2021-10-19"},{"lineNumber":54,"author":{"gitId":"Neha-5678"},"content":"        requireNonNull(editTaskDescriptor);","lastModifiedDate":"2021-10-19"},{"lineNumber":55,"author":{"gitId":"Neha-5678"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":56,"author":{"gitId":"Neha-5678"},"content":"        this.index \u003d index;","lastModifiedDate":"2021-10-19"},{"lineNumber":57,"author":{"gitId":"Neha-5678"},"content":"        this.editTaskDescriptor \u003d new EditTaskDescriptor(editTaskDescriptor);","lastModifiedDate":"2021-10-19"},{"lineNumber":58,"author":{"gitId":"Neha-5678"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":59,"author":{"gitId":"Neha-5678"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":60,"author":{"gitId":"Neha-5678"},"content":"    @Override","lastModifiedDate":"2021-10-19"},{"lineNumber":61,"author":{"gitId":"Neha-5678"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2021-10-19"},{"lineNumber":62,"author":{"gitId":"Neha-5678"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-10-19"},{"lineNumber":63,"author":{"gitId":"Neha-5678"},"content":"        List\u003cTask\u003e lastShownList \u003d model.getFilteredTaskList();","lastModifiedDate":"2021-10-19"},{"lineNumber":64,"author":{"gitId":"Neha-5678"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":65,"author":{"gitId":"Neha-5678"},"content":"        if (index.getZeroBased() \u003e\u003d lastShownList.size()) {","lastModifiedDate":"2021-10-19"},{"lineNumber":66,"author":{"gitId":"Neha-5678"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_TASK_DISPLAYED_INDEX);","lastModifiedDate":"2021-10-19"},{"lineNumber":67,"author":{"gitId":"Neha-5678"},"content":"        }","lastModifiedDate":"2021-10-19"},{"lineNumber":68,"author":{"gitId":"Neha-5678"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":69,"author":{"gitId":"Neha-5678"},"content":"        Task taskToEdit \u003d lastShownList.get(index.getZeroBased());","lastModifiedDate":"2021-10-19"},{"lineNumber":70,"author":{"gitId":"Neha-5678"},"content":"        Task editedTask \u003d createEditedTask(taskToEdit, editTaskDescriptor);","lastModifiedDate":"2021-10-19"},{"lineNumber":71,"author":{"gitId":"Neha-5678"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":72,"author":{"gitId":"Neha-5678"},"content":"        if (!taskToEdit.isSameTask(editedTask) \u0026\u0026 model.hasTask(editedTask)) {","lastModifiedDate":"2021-10-19"},{"lineNumber":73,"author":{"gitId":"Neha-5678"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_TASK);","lastModifiedDate":"2021-10-19"},{"lineNumber":74,"author":{"gitId":"Neha-5678"},"content":"        }","lastModifiedDate":"2021-10-19"},{"lineNumber":75,"author":{"gitId":"Neha-5678"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":76,"author":{"gitId":"Neha-5678"},"content":"        model.setTask(taskToEdit, editedTask);","lastModifiedDate":"2021-10-19"},{"lineNumber":77,"author":{"gitId":"Neha-5678"},"content":"        model.updateFilteredTaskList(PREDICATE_SHOW_ALL_TASKS);","lastModifiedDate":"2021-10-19"},{"lineNumber":78,"author":{"gitId":"tanhuakun"},"content":"        model.updateLessonWithAttendeesList();","lastModifiedDate":"2021-11-04"},{"lineNumber":79,"author":{"gitId":"tanhuakun"},"content":"        model.setViewingType(ViewingType.SCHEDULE);","lastModifiedDate":"2021-11-04"},{"lineNumber":80,"author":{"gitId":"Neha-5678"},"content":"        return new CommandResult(String.format(MESSAGE_EDIT_TASK_SUCCESS, editedTask));","lastModifiedDate":"2021-10-19"},{"lineNumber":81,"author":{"gitId":"Neha-5678"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":82,"author":{"gitId":"Neha-5678"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":83,"author":{"gitId":"Neha-5678"},"content":"    /**","lastModifiedDate":"2021-10-19"},{"lineNumber":84,"author":{"gitId":"Neha-5678"},"content":"     * Creates and returns a {@code Task} with the details of {@code taskToEdit}","lastModifiedDate":"2021-10-19"},{"lineNumber":85,"author":{"gitId":"Neha-5678"},"content":"     * edited with {@code editTaskDescriptor}.","lastModifiedDate":"2021-10-19"},{"lineNumber":86,"author":{"gitId":"Neha-5678"},"content":"     */","lastModifiedDate":"2021-10-19"},{"lineNumber":87,"author":{"gitId":"Neha-5678"},"content":"    private static Task createEditedTask(Task taskToEdit, EditTaskDescriptor editTaskDescriptor) {","lastModifiedDate":"2021-10-19"},{"lineNumber":88,"author":{"gitId":"Neha-5678"},"content":"        assert taskToEdit !\u003d null;","lastModifiedDate":"2021-10-19"},{"lineNumber":89,"author":{"gitId":"Neha-5678"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":90,"author":{"gitId":"Neha-5678"},"content":"        Description updatedDescription \u003d editTaskDescriptor.getDescription().orElse(taskToEdit.getDescription());","lastModifiedDate":"2021-10-19"},{"lineNumber":91,"author":{"gitId":"Neha-5678"},"content":"        Deadline updatedDeadline \u003d editTaskDescriptor.getDeadline().orElse(taskToEdit.getDeadline());","lastModifiedDate":"2021-10-19"},{"lineNumber":92,"author":{"gitId":"Neha-5678"},"content":"        UniqueId uniqueId \u003d taskToEdit.getId();","lastModifiedDate":"2021-10-19"},{"lineNumber":93,"author":{"gitId":"Neha-5678"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":94,"author":{"gitId":"Neha-5678"},"content":"        return new Task(updatedDescription, updatedDeadline, uniqueId);","lastModifiedDate":"2021-10-19"},{"lineNumber":95,"author":{"gitId":"Neha-5678"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":96,"author":{"gitId":"Neha-5678"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":97,"author":{"gitId":"Neha-5678"},"content":"    @Override","lastModifiedDate":"2021-10-19"},{"lineNumber":98,"author":{"gitId":"Neha-5678"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-19"},{"lineNumber":99,"author":{"gitId":"Neha-5678"},"content":"        // short circuit if same object","lastModifiedDate":"2021-10-19"},{"lineNumber":100,"author":{"gitId":"Neha-5678"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2021-10-19"},{"lineNumber":101,"author":{"gitId":"Neha-5678"},"content":"            return true;","lastModifiedDate":"2021-10-19"},{"lineNumber":102,"author":{"gitId":"Neha-5678"},"content":"        }","lastModifiedDate":"2021-10-19"},{"lineNumber":103,"author":{"gitId":"Neha-5678"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":104,"author":{"gitId":"Neha-5678"},"content":"        // instanceof handles nulls","lastModifiedDate":"2021-10-19"},{"lineNumber":105,"author":{"gitId":"Neha-5678"},"content":"        if (!(other instanceof EditTaskCommand)) {","lastModifiedDate":"2021-10-19"},{"lineNumber":106,"author":{"gitId":"Neha-5678"},"content":"            return false;","lastModifiedDate":"2021-10-19"},{"lineNumber":107,"author":{"gitId":"Neha-5678"},"content":"        }","lastModifiedDate":"2021-10-19"},{"lineNumber":108,"author":{"gitId":"Neha-5678"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":109,"author":{"gitId":"Neha-5678"},"content":"        // state check","lastModifiedDate":"2021-10-19"},{"lineNumber":110,"author":{"gitId":"Neha-5678"},"content":"        EditTaskCommand e \u003d (EditTaskCommand) other;","lastModifiedDate":"2021-10-19"},{"lineNumber":111,"author":{"gitId":"Neha-5678"},"content":"        return index.equals(e.index)","lastModifiedDate":"2021-10-19"},{"lineNumber":112,"author":{"gitId":"Neha-5678"},"content":"                \u0026\u0026 editTaskDescriptor.equals(e.editTaskDescriptor);","lastModifiedDate":"2021-10-19"},{"lineNumber":113,"author":{"gitId":"Neha-5678"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":114,"author":{"gitId":"Neha-5678"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":115,"author":{"gitId":"Neha-5678"},"content":"    /**","lastModifiedDate":"2021-10-19"},{"lineNumber":116,"author":{"gitId":"Neha-5678"},"content":"     * Stores the details to edit the person with. Each non-empty field value will replace the","lastModifiedDate":"2021-10-19"},{"lineNumber":117,"author":{"gitId":"Neha-5678"},"content":"     * corresponding field value of the person.","lastModifiedDate":"2021-10-19"},{"lineNumber":118,"author":{"gitId":"Neha-5678"},"content":"     */","lastModifiedDate":"2021-10-19"},{"lineNumber":119,"author":{"gitId":"Neha-5678"},"content":"    public static class EditTaskDescriptor {","lastModifiedDate":"2021-10-19"},{"lineNumber":120,"author":{"gitId":"Neha-5678"},"content":"        private Description description;","lastModifiedDate":"2021-10-19"},{"lineNumber":121,"author":{"gitId":"Neha-5678"},"content":"        private Deadline deadline;","lastModifiedDate":"2021-10-19"},{"lineNumber":122,"author":{"gitId":"Neha-5678"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":123,"author":{"gitId":"Neha-5678"},"content":"        public EditTaskDescriptor() {}","lastModifiedDate":"2021-10-19"},{"lineNumber":124,"author":{"gitId":"Neha-5678"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":125,"author":{"gitId":"Neha-5678"},"content":"        /**","lastModifiedDate":"2021-10-19"},{"lineNumber":126,"author":{"gitId":"Neha-5678"},"content":"         * Copy constructor.","lastModifiedDate":"2021-10-19"},{"lineNumber":127,"author":{"gitId":"Neha-5678"},"content":"         * A defensive copy of {@code tags} is used internally.","lastModifiedDate":"2021-10-19"},{"lineNumber":128,"author":{"gitId":"Neha-5678"},"content":"         */","lastModifiedDate":"2021-10-19"},{"lineNumber":129,"author":{"gitId":"Neha-5678"},"content":"        public EditTaskDescriptor(EditTaskDescriptor toCopy) {","lastModifiedDate":"2021-10-19"},{"lineNumber":130,"author":{"gitId":"Neha-5678"},"content":"            setDescription(toCopy.description);","lastModifiedDate":"2021-10-19"},{"lineNumber":131,"author":{"gitId":"Neha-5678"},"content":"            setDeadline(toCopy.deadline);","lastModifiedDate":"2021-10-19"},{"lineNumber":132,"author":{"gitId":"Neha-5678"},"content":"        }","lastModifiedDate":"2021-10-19"},{"lineNumber":133,"author":{"gitId":"Neha-5678"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":134,"author":{"gitId":"Neha-5678"},"content":"        /**","lastModifiedDate":"2021-10-19"},{"lineNumber":135,"author":{"gitId":"Neha-5678"},"content":"         * Returns true if at least one field is edited.","lastModifiedDate":"2021-10-19"},{"lineNumber":136,"author":{"gitId":"Neha-5678"},"content":"         */","lastModifiedDate":"2021-10-19"},{"lineNumber":137,"author":{"gitId":"Neha-5678"},"content":"        public boolean isAnyFieldEdited() {","lastModifiedDate":"2021-10-19"},{"lineNumber":138,"author":{"gitId":"Neha-5678"},"content":"            return CollectionUtil.isAnyNonNull(description, deadline);","lastModifiedDate":"2021-10-19"},{"lineNumber":139,"author":{"gitId":"Neha-5678"},"content":"        }","lastModifiedDate":"2021-10-19"},{"lineNumber":140,"author":{"gitId":"Neha-5678"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":141,"author":{"gitId":"Neha-5678"},"content":"        public void setDescription(Description description) {","lastModifiedDate":"2021-10-19"},{"lineNumber":142,"author":{"gitId":"Neha-5678"},"content":"            this.description \u003d description;","lastModifiedDate":"2021-10-19"},{"lineNumber":143,"author":{"gitId":"Neha-5678"},"content":"        }","lastModifiedDate":"2021-10-19"},{"lineNumber":144,"author":{"gitId":"Neha-5678"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":145,"author":{"gitId":"Neha-5678"},"content":"        public Optional\u003cDescription\u003e getDescription() {","lastModifiedDate":"2021-10-19"},{"lineNumber":146,"author":{"gitId":"Neha-5678"},"content":"            return Optional.ofNullable(description);","lastModifiedDate":"2021-10-19"},{"lineNumber":147,"author":{"gitId":"Neha-5678"},"content":"        }","lastModifiedDate":"2021-10-19"},{"lineNumber":148,"author":{"gitId":"Neha-5678"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":149,"author":{"gitId":"Neha-5678"},"content":"        public void setDeadline(Deadline deadline) {","lastModifiedDate":"2021-10-19"},{"lineNumber":150,"author":{"gitId":"Neha-5678"},"content":"            this.deadline \u003d deadline;","lastModifiedDate":"2021-10-19"},{"lineNumber":151,"author":{"gitId":"Neha-5678"},"content":"        }","lastModifiedDate":"2021-10-19"},{"lineNumber":152,"author":{"gitId":"Neha-5678"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":153,"author":{"gitId":"Neha-5678"},"content":"        public Optional\u003cDeadline\u003e getDeadline() {","lastModifiedDate":"2021-10-19"},{"lineNumber":154,"author":{"gitId":"Neha-5678"},"content":"            return Optional.ofNullable(deadline);","lastModifiedDate":"2021-10-19"},{"lineNumber":155,"author":{"gitId":"Neha-5678"},"content":"        }","lastModifiedDate":"2021-10-19"},{"lineNumber":156,"author":{"gitId":"Neha-5678"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":157,"author":{"gitId":"Neha-5678"},"content":"        @Override","lastModifiedDate":"2021-10-19"},{"lineNumber":158,"author":{"gitId":"Neha-5678"},"content":"        public boolean equals(Object other) {","lastModifiedDate":"2021-10-19"},{"lineNumber":159,"author":{"gitId":"Neha-5678"},"content":"            // short circuit if same object","lastModifiedDate":"2021-10-19"},{"lineNumber":160,"author":{"gitId":"Neha-5678"},"content":"            if (other \u003d\u003d this) {","lastModifiedDate":"2021-10-19"},{"lineNumber":161,"author":{"gitId":"Neha-5678"},"content":"                return true;","lastModifiedDate":"2021-10-19"},{"lineNumber":162,"author":{"gitId":"Neha-5678"},"content":"            }","lastModifiedDate":"2021-10-19"},{"lineNumber":163,"author":{"gitId":"Neha-5678"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":164,"author":{"gitId":"Neha-5678"},"content":"            // instanceof handles nulls","lastModifiedDate":"2021-10-19"},{"lineNumber":165,"author":{"gitId":"Neha-5678"},"content":"            if (!(other instanceof EditTaskDescriptor)) {","lastModifiedDate":"2021-10-19"},{"lineNumber":166,"author":{"gitId":"Neha-5678"},"content":"                return false;","lastModifiedDate":"2021-10-19"},{"lineNumber":167,"author":{"gitId":"Neha-5678"},"content":"            }","lastModifiedDate":"2021-10-19"},{"lineNumber":168,"author":{"gitId":"Neha-5678"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":169,"author":{"gitId":"Neha-5678"},"content":"            // state check","lastModifiedDate":"2021-10-19"},{"lineNumber":170,"author":{"gitId":"Neha-5678"},"content":"            EditTaskDescriptor e \u003d (EditTaskDescriptor) other;","lastModifiedDate":"2021-10-19"},{"lineNumber":171,"author":{"gitId":"Neha-5678"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":172,"author":{"gitId":"Neha-5678"},"content":"            return getDescription().equals(e.getDescription())","lastModifiedDate":"2021-10-19"},{"lineNumber":173,"author":{"gitId":"Neha-5678"},"content":"                    \u0026\u0026 getDeadline().equals(e.getDeadline());","lastModifiedDate":"2021-10-19"},{"lineNumber":174,"author":{"gitId":"Neha-5678"},"content":"        }","lastModifiedDate":"2021-10-19"},{"lineNumber":175,"author":{"gitId":"Neha-5678"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":176,"author":{"gitId":"Neha-5678"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":177,"author":{"gitId":"Neha-5678"},"content":"}","lastModifiedDate":"2021-10-19"}],"authorContributionMap":{"Neha-5678":172,"kvihashini":2,"tanhuakun":3}},{"path":"src/main/java/seedu/address/logic/commands/tasks/FindTaskCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Neha-5678"},"content":"package seedu.address.logic.commands.tasks;","lastModifiedDate":"2021-10-25"},{"lineNumber":2,"author":{"gitId":"Neha-5678"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":3,"author":{"gitId":"Neha-5678"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-25"},{"lineNumber":4,"author":{"gitId":"Neha-5678"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":5,"author":{"gitId":"Neha-5678"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2021-10-25"},{"lineNumber":6,"author":{"gitId":"Neha-5678"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2021-10-25"},{"lineNumber":7,"author":{"gitId":"Neha-5678"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2021-10-25"},{"lineNumber":8,"author":{"gitId":"Neha-5678"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-10-25"},{"lineNumber":9,"author":{"gitId":"Neha-5678"},"content":"import seedu.address.model.task.TaskNameContainsKeywordsPredicate;","lastModifiedDate":"2021-10-25"},{"lineNumber":10,"author":{"gitId":"Neha-5678"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":11,"author":{"gitId":"Neha-5678"},"content":"/**","lastModifiedDate":"2021-11-07"},{"lineNumber":12,"author":{"gitId":"Neha-5678"},"content":" * Finds and lists all tasks in address book whose name contains any of the argument keywords.","lastModifiedDate":"2021-11-07"},{"lineNumber":13,"author":{"gitId":"Neha-5678"},"content":" * Keyword matching is case insensitive.","lastModifiedDate":"2021-11-07"},{"lineNumber":14,"author":{"gitId":"Neha-5678"},"content":" */","lastModifiedDate":"2021-11-07"},{"lineNumber":15,"author":{"gitId":"Neha-5678"},"content":"public class FindTaskCommand extends Command {","lastModifiedDate":"2021-10-25"},{"lineNumber":16,"author":{"gitId":"Neha-5678"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":17,"author":{"gitId":"Neha-5678"},"content":"    public static final String COMMAND_WORD \u003d \"-f\";","lastModifiedDate":"2021-10-25"},{"lineNumber":18,"author":{"gitId":"Neha-5678"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":19,"author":{"gitId":"Neha-5678"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Finds all tasks whose descriptions contain any of \"","lastModifiedDate":"2021-10-25"},{"lineNumber":20,"author":{"gitId":"Neha-5678"},"content":"            + \"the specified keywords (case-insensitive) and displays them as a list with index numbers.\\n\"","lastModifiedDate":"2021-10-25"},{"lineNumber":21,"author":{"gitId":"Neha-5678"},"content":"            + \"Parameters: KEYWORD [MORE_KEYWORDS]...\\n\"","lastModifiedDate":"2021-10-25"},{"lineNumber":22,"author":{"gitId":"Neha-5678"},"content":"            + \"Example: \" + COMMAND_WORD + \" report assignment\";","lastModifiedDate":"2021-10-25"},{"lineNumber":23,"author":{"gitId":"Neha-5678"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":24,"author":{"gitId":"Neha-5678"},"content":"    private final TaskNameContainsKeywordsPredicate predicate;","lastModifiedDate":"2021-10-25"},{"lineNumber":25,"author":{"gitId":"Neha-5678"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":26,"author":{"gitId":"Neha-5678"},"content":"    public FindTaskCommand(TaskNameContainsKeywordsPredicate predicate) {","lastModifiedDate":"2021-10-25"},{"lineNumber":27,"author":{"gitId":"Neha-5678"},"content":"        this.predicate \u003d predicate;","lastModifiedDate":"2021-10-25"},{"lineNumber":28,"author":{"gitId":"Neha-5678"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":29,"author":{"gitId":"Neha-5678"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":30,"author":{"gitId":"Neha-5678"},"content":"    @Override","lastModifiedDate":"2021-10-25"},{"lineNumber":31,"author":{"gitId":"Neha-5678"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2021-10-25"},{"lineNumber":32,"author":{"gitId":"Neha-5678"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-10-25"},{"lineNumber":33,"author":{"gitId":"Neha-5678"},"content":"        model.updateFilteredTaskList(predicate);","lastModifiedDate":"2021-10-25"},{"lineNumber":34,"author":{"gitId":"Neha-5678"},"content":"        return new CommandResult(","lastModifiedDate":"2021-10-25"},{"lineNumber":35,"author":{"gitId":"Neha-5678"},"content":"                String.format(Messages.MESSAGE_TASKS_LISTED_OVERVIEW, model.getFilteredTaskList().size()));","lastModifiedDate":"2021-10-25"},{"lineNumber":36,"author":{"gitId":"Neha-5678"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":37,"author":{"gitId":"Neha-5678"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":38,"author":{"gitId":"Neha-5678"},"content":"    @Override","lastModifiedDate":"2021-10-25"},{"lineNumber":39,"author":{"gitId":"Neha-5678"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-25"},{"lineNumber":40,"author":{"gitId":"Neha-5678"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-10-25"},{"lineNumber":41,"author":{"gitId":"Neha-5678"},"content":"                || (other instanceof FindTaskCommand // instanceof handles nulls","lastModifiedDate":"2021-10-25"},{"lineNumber":42,"author":{"gitId":"Neha-5678"},"content":"                \u0026\u0026 predicate.equals(((FindTaskCommand) other).predicate)); // state check","lastModifiedDate":"2021-10-25"},{"lineNumber":43,"author":{"gitId":"Neha-5678"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":44,"author":{"gitId":"Neha-5678"},"content":"}","lastModifiedDate":"2021-10-25"}],"authorContributionMap":{"Neha-5678":44}},{"path":"src/main/java/seedu/address/logic/commands/tasks/ListTaskCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Neha-5678"},"content":"package seedu.address.logic.commands.tasks;","lastModifiedDate":"2021-10-26"},{"lineNumber":2,"author":{"gitId":"Neha-5678"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":3,"author":{"gitId":"Neha-5678"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-26"},{"lineNumber":4,"author":{"gitId":"Neha-5678"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_TASKS;","lastModifiedDate":"2021-10-26"},{"lineNumber":5,"author":{"gitId":"Neha-5678"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":6,"author":{"gitId":"Neha-5678"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2021-10-26"},{"lineNumber":7,"author":{"gitId":"Neha-5678"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2021-10-26"},{"lineNumber":8,"author":{"gitId":"Neha-5678"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-10-26"},{"lineNumber":9,"author":{"gitId":"Neha-5678"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":10,"author":{"gitId":"Neha-5678"},"content":"/**","lastModifiedDate":"2021-10-26"},{"lineNumber":11,"author":{"gitId":"Neha-5678"},"content":" * Lists all persons in the address book to the user.","lastModifiedDate":"2021-10-26"},{"lineNumber":12,"author":{"gitId":"Neha-5678"},"content":" */","lastModifiedDate":"2021-10-26"},{"lineNumber":13,"author":{"gitId":"Neha-5678"},"content":"public class ListTaskCommand extends Command {","lastModifiedDate":"2021-10-26"},{"lineNumber":14,"author":{"gitId":"Neha-5678"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":15,"author":{"gitId":"Neha-5678"},"content":"    public static final String COMMAND_WORD \u003d \"-l\";","lastModifiedDate":"2021-10-26"},{"lineNumber":16,"author":{"gitId":"Neha-5678"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":17,"author":{"gitId":"Neha-5678"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Listed all tasks\";","lastModifiedDate":"2021-10-26"},{"lineNumber":18,"author":{"gitId":"Neha-5678"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":19,"author":{"gitId":"Neha-5678"},"content":"    @Override","lastModifiedDate":"2021-10-26"},{"lineNumber":20,"author":{"gitId":"Neha-5678"},"content":"    public CommandResult execute(Model model) {","lastModifiedDate":"2021-10-26"},{"lineNumber":21,"author":{"gitId":"Neha-5678"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-10-26"},{"lineNumber":22,"author":{"gitId":"Neha-5678"},"content":"        model.updateFilteredTaskList(PREDICATE_SHOW_ALL_TASKS);","lastModifiedDate":"2021-10-26"},{"lineNumber":23,"author":{"gitId":"Neha-5678"},"content":"        return new CommandResult(MESSAGE_SUCCESS);","lastModifiedDate":"2021-10-26"},{"lineNumber":24,"author":{"gitId":"Neha-5678"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":25,"author":{"gitId":"Neha-5678"},"content":"}","lastModifiedDate":"2021-10-26"}],"authorContributionMap":{"Neha-5678":25}},{"path":"src/main/java/seedu/address/logic/commands/tasks/ManageTaskAssignmentCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"eltonyeh"},"content":"package seedu.address.logic.commands.tasks;","lastModifiedDate":"2021-11-07"},{"lineNumber":2,"author":{"gitId":"eltonyeh"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":3,"author":{"gitId":"eltonyeh"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-11-07"},{"lineNumber":4,"author":{"gitId":"eltonyeh"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2021-11-07"},{"lineNumber":5,"author":{"gitId":"eltonyeh"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":6,"author":{"gitId":"eltonyeh"},"content":"import java.util.HashMap;","lastModifiedDate":"2021-11-07"},{"lineNumber":7,"author":{"gitId":"eltonyeh"},"content":"import java.util.HashSet;","lastModifiedDate":"2021-11-07"},{"lineNumber":8,"author":{"gitId":"eltonyeh"},"content":"import java.util.List;","lastModifiedDate":"2021-11-07"},{"lineNumber":9,"author":{"gitId":"eltonyeh"},"content":"import java.util.Map;","lastModifiedDate":"2021-11-07"},{"lineNumber":10,"author":{"gitId":"eltonyeh"},"content":"import java.util.Set;","lastModifiedDate":"2021-11-07"},{"lineNumber":11,"author":{"gitId":"eltonyeh"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":12,"author":{"gitId":"eltonyeh"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2021-11-07"},{"lineNumber":13,"author":{"gitId":"eltonyeh"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-11-07"},{"lineNumber":14,"author":{"gitId":"eltonyeh"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2021-11-07"},{"lineNumber":15,"author":{"gitId":"eltonyeh"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2021-11-07"},{"lineNumber":16,"author":{"gitId":"eltonyeh"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-11-07"},{"lineNumber":17,"author":{"gitId":"eltonyeh"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-11-07"},{"lineNumber":18,"author":{"gitId":"eltonyeh"},"content":"import seedu.address.model.TaskAssignable;","lastModifiedDate":"2021-11-07"},{"lineNumber":19,"author":{"gitId":"eltonyeh"},"content":"import seedu.address.model.id.UniqueId;","lastModifiedDate":"2021-11-07"},{"lineNumber":20,"author":{"gitId":"eltonyeh"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2021-11-07"},{"lineNumber":21,"author":{"gitId":"eltonyeh"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":22,"author":{"gitId":"eltonyeh"},"content":"/**","lastModifiedDate":"2021-11-07"},{"lineNumber":23,"author":{"gitId":"eltonyeh"},"content":" * This class serves as the base class for any {@code Command} subclasses related to assigning or unassigning tasks","lastModifiedDate":"2021-11-07"},{"lineNumber":24,"author":{"gitId":"eltonyeh"},"content":" * to {@code TaskAssignable}s.","lastModifiedDate":"2021-11-07"},{"lineNumber":25,"author":{"gitId":"eltonyeh"},"content":" */","lastModifiedDate":"2021-11-07"},{"lineNumber":26,"author":{"gitId":"eltonyeh"},"content":"public abstract class ManageTaskAssignmentCommand extends Command {","lastModifiedDate":"2021-11-07"},{"lineNumber":27,"author":{"gitId":"eltonyeh"},"content":"    /**","lastModifiedDate":"2021-11-07"},{"lineNumber":28,"author":{"gitId":"eltonyeh"},"content":"     * Subclasses should Complete the beginning of the message by adding suitable detail.","lastModifiedDate":"2021-11-07"},{"lineNumber":29,"author":{"gitId":"eltonyeh"},"content":"     */","lastModifiedDate":"2021-11-07"},{"lineNumber":30,"author":{"gitId":"eltonyeh"},"content":"    public static final String MESSAGE_USAGE \u003d \" identified by the index numbers used in the displayed %2$s list and\"","lastModifiedDate":"2021-11-07"},{"lineNumber":31,"author":{"gitId":"eltonyeh"},"content":"            + \" the displayed task list. \"","lastModifiedDate":"2021-11-07"},{"lineNumber":32,"author":{"gitId":"eltonyeh"},"content":"            + \"Parameters: %3$s INDEX (must be a positive integer) \"","lastModifiedDate":"2021-11-07"},{"lineNumber":33,"author":{"gitId":"eltonyeh"},"content":"            + \"TASK INDEX (must be a positive integer) \";","lastModifiedDate":"2021-11-07"},{"lineNumber":34,"author":{"gitId":"eltonyeh"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":35,"author":{"gitId":"eltonyeh"},"content":"    public static final String MESSAGE_DUPLICATE_TASK_ASSIGNABLE \u003d \"This %s already exists in the address book\";","lastModifiedDate":"2021-11-07"},{"lineNumber":36,"author":{"gitId":"eltonyeh"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":37,"author":{"gitId":"eltonyeh"},"content":"    private final Index assigneeIndex;","lastModifiedDate":"2021-11-07"},{"lineNumber":38,"author":{"gitId":"eltonyeh"},"content":"    private final Index taskIndex;","lastModifiedDate":"2021-11-07"},{"lineNumber":39,"author":{"gitId":"eltonyeh"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":40,"author":{"gitId":"eltonyeh"},"content":"    /**","lastModifiedDate":"2021-11-07"},{"lineNumber":41,"author":{"gitId":"eltonyeh"},"content":"     * Constructs a {@code ManageTaskAssignmentCommand}","lastModifiedDate":"2021-11-07"},{"lineNumber":42,"author":{"gitId":"eltonyeh"},"content":"     *","lastModifiedDate":"2021-11-07"},{"lineNumber":43,"author":{"gitId":"eltonyeh"},"content":"     * @param assigneeIndex the index of the {@code TaskAssignable} to be (un)assigned a task","lastModifiedDate":"2021-11-07"},{"lineNumber":44,"author":{"gitId":"eltonyeh"},"content":"     * @param taskIndex the index of the task in the filtered task list to (un)assign","lastModifiedDate":"2021-11-07"},{"lineNumber":45,"author":{"gitId":"eltonyeh"},"content":"     */","lastModifiedDate":"2021-11-07"},{"lineNumber":46,"author":{"gitId":"eltonyeh"},"content":"    public ManageTaskAssignmentCommand(Index assigneeIndex, Index taskIndex) {","lastModifiedDate":"2021-11-07"},{"lineNumber":47,"author":{"gitId":"eltonyeh"},"content":"        requireAllNonNull(assigneeIndex, taskIndex);","lastModifiedDate":"2021-11-07"},{"lineNumber":48,"author":{"gitId":"eltonyeh"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":49,"author":{"gitId":"eltonyeh"},"content":"        this.assigneeIndex \u003d assigneeIndex;","lastModifiedDate":"2021-11-07"},{"lineNumber":50,"author":{"gitId":"eltonyeh"},"content":"        this.taskIndex \u003d taskIndex;","lastModifiedDate":"2021-11-07"},{"lineNumber":51,"author":{"gitId":"eltonyeh"},"content":"    }","lastModifiedDate":"2021-11-07"},{"lineNumber":52,"author":{"gitId":"eltonyeh"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":53,"author":{"gitId":"eltonyeh"},"content":"    protected abstract String invalidDisplayedIndexMessage();","lastModifiedDate":"2021-11-07"},{"lineNumber":54,"author":{"gitId":"eltonyeh"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":55,"author":{"gitId":"eltonyeh"},"content":"    /**","lastModifiedDate":"2021-11-07"},{"lineNumber":56,"author":{"gitId":"eltonyeh"},"content":"     * Returns a filtered list of {@code TaskAssignable} from the model.","lastModifiedDate":"2021-11-07"},{"lineNumber":57,"author":{"gitId":"eltonyeh"},"content":"     *","lastModifiedDate":"2021-11-07"},{"lineNumber":58,"author":{"gitId":"eltonyeh"},"content":"     * @param model The model where we want to retrieve the list from.","lastModifiedDate":"2021-11-07"},{"lineNumber":59,"author":{"gitId":"eltonyeh"},"content":"     * @return A filtered list.","lastModifiedDate":"2021-11-07"},{"lineNumber":60,"author":{"gitId":"eltonyeh"},"content":"     */","lastModifiedDate":"2021-11-07"},{"lineNumber":61,"author":{"gitId":"eltonyeh"},"content":"    protected abstract List\u003c? extends TaskAssignable\u003e getTaskAssignableListFromModel(Model model);","lastModifiedDate":"2021-11-07"},{"lineNumber":62,"author":{"gitId":"eltonyeh"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":63,"author":{"gitId":"eltonyeh"},"content":"    /**","lastModifiedDate":"2021-11-07"},{"lineNumber":64,"author":{"gitId":"eltonyeh"},"content":"     * Update the model after the command is executed.","lastModifiedDate":"2021-11-07"},{"lineNumber":65,"author":{"gitId":"eltonyeh"},"content":"     *","lastModifiedDate":"2021-11-07"},{"lineNumber":66,"author":{"gitId":"eltonyeh"},"content":"     * @param model The model to be modified.","lastModifiedDate":"2021-11-07"},{"lineNumber":67,"author":{"gitId":"eltonyeh"},"content":"     */","lastModifiedDate":"2021-11-07"},{"lineNumber":68,"author":{"gitId":"eltonyeh"},"content":"    protected abstract void updateModel(Model model, TaskAssignable taskAssignableToEdit, TaskAssignable","lastModifiedDate":"2021-11-07"},{"lineNumber":69,"author":{"gitId":"eltonyeh"},"content":"            newTaskAssignable);","lastModifiedDate":"2021-11-07"},{"lineNumber":70,"author":{"gitId":"eltonyeh"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":71,"author":{"gitId":"eltonyeh"},"content":"    protected abstract void handleTaskDuplicationOrNotFound(Set\u003cUniqueId\u003e taskSet, UniqueId taskId, String assigneeType)","lastModifiedDate":"2021-11-07"},{"lineNumber":72,"author":{"gitId":"eltonyeh"},"content":"            throws CommandException;","lastModifiedDate":"2021-11-07"},{"lineNumber":73,"author":{"gitId":"eltonyeh"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":74,"author":{"gitId":"eltonyeh"},"content":"    protected abstract void manageTaskAssignment(Set\u003cUniqueId\u003e newTaskSet, Map\u003cUniqueId, Boolean\u003e newTasksCompletion,","lastModifiedDate":"2021-11-07"},{"lineNumber":75,"author":{"gitId":"eltonyeh"},"content":"            UniqueId taskId);","lastModifiedDate":"2021-11-07"},{"lineNumber":76,"author":{"gitId":"eltonyeh"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":77,"author":{"gitId":"eltonyeh"},"content":"    /**","lastModifiedDate":"2021-11-07"},{"lineNumber":78,"author":{"gitId":"eltonyeh"},"content":"     * Executes the command on the given model.","lastModifiedDate":"2021-11-07"},{"lineNumber":79,"author":{"gitId":"eltonyeh"},"content":"     *","lastModifiedDate":"2021-11-07"},{"lineNumber":80,"author":{"gitId":"eltonyeh"},"content":"     * @param model The model we want to apply the command on.","lastModifiedDate":"2021-11-07"},{"lineNumber":81,"author":{"gitId":"eltonyeh"},"content":"     * @param assigneeType The type of the assignee, e.g., student, group, ...","lastModifiedDate":"2021-11-07"},{"lineNumber":82,"author":{"gitId":"eltonyeh"},"content":"     * @return Feedback message of the operation result for display.","lastModifiedDate":"2021-11-07"},{"lineNumber":83,"author":{"gitId":"eltonyeh"},"content":"     * @throws CommandException If an error occurs during command execution.","lastModifiedDate":"2021-11-07"},{"lineNumber":84,"author":{"gitId":"eltonyeh"},"content":"     */","lastModifiedDate":"2021-11-07"},{"lineNumber":85,"author":{"gitId":"eltonyeh"},"content":"    public CommandResult executeWithGivenMessage(Model model, String assigneeType, String successMessage)","lastModifiedDate":"2021-11-08"},{"lineNumber":86,"author":{"gitId":"eltonyeh"},"content":"            throws CommandException {","lastModifiedDate":"2021-11-08"},{"lineNumber":87,"author":{"gitId":"eltonyeh"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-11-07"},{"lineNumber":88,"author":{"gitId":"eltonyeh"},"content":"        List\u003c? extends TaskAssignable\u003e assigneeList \u003d getTaskAssignableListFromModel(model);","lastModifiedDate":"2021-11-07"},{"lineNumber":89,"author":{"gitId":"eltonyeh"},"content":"        List\u003cTask\u003e taskList \u003d model.getFilteredTaskList();","lastModifiedDate":"2021-11-07"},{"lineNumber":90,"author":{"gitId":"eltonyeh"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":91,"author":{"gitId":"eltonyeh"},"content":"        if (assigneeIndex.getZeroBased() \u003e\u003d assigneeList.size()) {","lastModifiedDate":"2021-11-07"},{"lineNumber":92,"author":{"gitId":"eltonyeh"},"content":"            throw new CommandException(invalidDisplayedIndexMessage());","lastModifiedDate":"2021-11-07"},{"lineNumber":93,"author":{"gitId":"eltonyeh"},"content":"        }","lastModifiedDate":"2021-11-07"},{"lineNumber":94,"author":{"gitId":"eltonyeh"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":95,"author":{"gitId":"eltonyeh"},"content":"        if (taskIndex.getZeroBased() \u003e\u003d taskList.size()) {","lastModifiedDate":"2021-11-07"},{"lineNumber":96,"author":{"gitId":"eltonyeh"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_TASK_DISPLAYED_INDEX);","lastModifiedDate":"2021-11-07"},{"lineNumber":97,"author":{"gitId":"eltonyeh"},"content":"        }","lastModifiedDate":"2021-11-07"},{"lineNumber":98,"author":{"gitId":"eltonyeh"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":99,"author":{"gitId":"eltonyeh"},"content":"        TaskAssignable taskAssignableToEdit \u003d assigneeList.get(assigneeIndex.getZeroBased());","lastModifiedDate":"2021-11-07"},{"lineNumber":100,"author":{"gitId":"eltonyeh"},"content":"        Task taskToAssign \u003d taskList.get(taskIndex.getZeroBased());","lastModifiedDate":"2021-11-07"},{"lineNumber":101,"author":{"gitId":"eltonyeh"},"content":"        Set\u003cUniqueId\u003e previousAssignedTaskSet \u003d taskAssignableToEdit.getAssignedTaskIds();","lastModifiedDate":"2021-11-07"},{"lineNumber":102,"author":{"gitId":"eltonyeh"},"content":"        Map\u003cUniqueId, Boolean\u003e previousTasksCompletion \u003d taskAssignableToEdit.getTasksCompletion();","lastModifiedDate":"2021-11-07"},{"lineNumber":103,"author":{"gitId":"eltonyeh"},"content":"        UniqueId taskId \u003d taskToAssign.getId();","lastModifiedDate":"2021-11-07"},{"lineNumber":104,"author":{"gitId":"eltonyeh"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":105,"author":{"gitId":"eltonyeh"},"content":"        handleTaskDuplicationOrNotFound(previousAssignedTaskSet, taskId, assigneeType);","lastModifiedDate":"2021-11-07"},{"lineNumber":106,"author":{"gitId":"eltonyeh"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":107,"author":{"gitId":"eltonyeh"},"content":"        Set\u003cUniqueId\u003e newAssignedTaskSet \u003d new HashSet\u003c\u003e(previousAssignedTaskSet);","lastModifiedDate":"2021-11-07"},{"lineNumber":108,"author":{"gitId":"eltonyeh"},"content":"        Map\u003cUniqueId, Boolean\u003e newTasksCompletion \u003d new HashMap\u003c\u003e(previousTasksCompletion);","lastModifiedDate":"2021-11-07"},{"lineNumber":109,"author":{"gitId":"eltonyeh"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":110,"author":{"gitId":"eltonyeh"},"content":"        manageTaskAssignment(newAssignedTaskSet, newTasksCompletion, taskId);","lastModifiedDate":"2021-11-07"},{"lineNumber":111,"author":{"gitId":"eltonyeh"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":112,"author":{"gitId":"eltonyeh"},"content":"        TaskAssignable newTaskAssignable \u003d taskAssignableToEdit.updateAssignedTaskIds(newAssignedTaskSet);","lastModifiedDate":"2021-11-07"},{"lineNumber":113,"author":{"gitId":"eltonyeh"},"content":"        newTaskAssignable \u003d newTaskAssignable.updateTasksCompletion(newTasksCompletion);","lastModifiedDate":"2021-11-07"},{"lineNumber":114,"author":{"gitId":"eltonyeh"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":115,"author":{"gitId":"eltonyeh"},"content":"        if (!taskAssignableToEdit.isSameTaskAssignable(newTaskAssignable)","lastModifiedDate":"2021-11-07"},{"lineNumber":116,"author":{"gitId":"eltonyeh"},"content":"                \u0026\u0026 newTaskAssignable.isInModel(model)) {","lastModifiedDate":"2021-11-07"},{"lineNumber":117,"author":{"gitId":"eltonyeh"},"content":"            throw new CommandException(String.format(MESSAGE_DUPLICATE_TASK_ASSIGNABLE, assigneeType));","lastModifiedDate":"2021-11-07"},{"lineNumber":118,"author":{"gitId":"eltonyeh"},"content":"        }","lastModifiedDate":"2021-11-07"},{"lineNumber":119,"author":{"gitId":"eltonyeh"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":120,"author":{"gitId":"eltonyeh"},"content":"        updateModel(model, taskAssignableToEdit, newTaskAssignable);","lastModifiedDate":"2021-11-07"},{"lineNumber":121,"author":{"gitId":"eltonyeh"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":122,"author":{"gitId":"eltonyeh"},"content":"        return new CommandResult(String.format(successMessage, taskToAssign.getDescription(),","lastModifiedDate":"2021-11-08"},{"lineNumber":123,"author":{"gitId":"eltonyeh"},"content":"                newTaskAssignable.getNameInString(), assigneeType));","lastModifiedDate":"2021-11-07"},{"lineNumber":124,"author":{"gitId":"eltonyeh"},"content":"    }","lastModifiedDate":"2021-11-07"},{"lineNumber":125,"author":{"gitId":"eltonyeh"},"content":"}","lastModifiedDate":"2021-11-07"}],"authorContributionMap":{"eltonyeh":125}},{"path":"src/main/java/seedu/address/logic/commands/tasks/MarkTaskDoneStudentCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jeremy-7007"},"content":"package seedu.address.logic.commands.tasks;","lastModifiedDate":"2021-10-28"},{"lineNumber":2,"author":{"gitId":"jeremy-7007"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":3,"author":{"gitId":"jeremy-7007"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-28"},{"lineNumber":4,"author":{"gitId":"jeremy-7007"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2021-10-28"},{"lineNumber":5,"author":{"gitId":"jeremy-7007"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2021-10-28"},{"lineNumber":6,"author":{"gitId":"jeremy-7007"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_TASKS;","lastModifiedDate":"2021-10-28"},{"lineNumber":7,"author":{"gitId":"jeremy-7007"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":8,"author":{"gitId":"jeremy-7007"},"content":"import java.util.HashMap;","lastModifiedDate":"2021-10-28"},{"lineNumber":9,"author":{"gitId":"jeremy-7007"},"content":"import java.util.List;","lastModifiedDate":"2021-10-28"},{"lineNumber":10,"author":{"gitId":"jeremy-7007"},"content":"import java.util.Map;","lastModifiedDate":"2021-10-28"},{"lineNumber":11,"author":{"gitId":"jeremy-7007"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":12,"author":{"gitId":"jeremy-7007"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2021-10-28"},{"lineNumber":13,"author":{"gitId":"jeremy-7007"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-10-28"},{"lineNumber":14,"author":{"gitId":"jeremy-7007"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2021-10-28"},{"lineNumber":15,"author":{"gitId":"jeremy-7007"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2021-10-28"},{"lineNumber":16,"author":{"gitId":"jeremy-7007"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-10-28"},{"lineNumber":17,"author":{"gitId":"jeremy-7007"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-10-28"},{"lineNumber":18,"author":{"gitId":"tanhuakun"},"content":"import seedu.address.model.ViewingType;","lastModifiedDate":"2021-11-04"},{"lineNumber":19,"author":{"gitId":"jeremy-7007"},"content":"import seedu.address.model.id.UniqueId;","lastModifiedDate":"2021-10-28"},{"lineNumber":20,"author":{"gitId":"jeremy-7007"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2021-10-28"},{"lineNumber":21,"author":{"gitId":"jeremy-7007"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2021-10-28"},{"lineNumber":22,"author":{"gitId":"jeremy-7007"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":23,"author":{"gitId":"jeremy-7007"},"content":"public class MarkTaskDoneStudentCommand extends Command {","lastModifiedDate":"2021-10-28"},{"lineNumber":24,"author":{"gitId":"jeremy-7007"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":25,"author":{"gitId":"jeremy-7007"},"content":"    public static final String COMMAND_WORD \u003d \"-do\";","lastModifiedDate":"2021-10-28"},{"lineNumber":26,"author":{"gitId":"jeremy-7007"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":27,"author":{"gitId":"jeremy-7007"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Marks that a task has been done by a student. \"","lastModifiedDate":"2021-10-28"},{"lineNumber":28,"author":{"gitId":"jeremy-7007"},"content":"            + \"The student and task are indicated\"","lastModifiedDate":"2021-10-28"},{"lineNumber":29,"author":{"gitId":"jeremy-7007"},"content":"            + \"by the index numbers used in the displayed student list and the displayed task list. \"","lastModifiedDate":"2021-10-28"},{"lineNumber":30,"author":{"gitId":"jeremy-7007"},"content":"            + \"Parameters: STUDENT INDEX (must be a positive integer) \"","lastModifiedDate":"2021-10-28"},{"lineNumber":31,"author":{"gitId":"jeremy-7007"},"content":"            + \"TASK INDEX (must be a positive integer) \";","lastModifiedDate":"2021-10-28"},{"lineNumber":32,"author":{"gitId":"jeremy-7007"},"content":"    public static final String MISSING_TASK \u003d \"Specified task is not assigned to this student!\";","lastModifiedDate":"2021-10-28"},{"lineNumber":33,"author":{"gitId":"jeremy-7007"},"content":"    public static final String MESSAGE_DUPLICATE_PERSON \u003d \"This person already exists in the address book.\";","lastModifiedDate":"2021-10-28"},{"lineNumber":34,"author":{"gitId":"jeremy-7007"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Task %1$s marked as done by student %2$s\";","lastModifiedDate":"2021-10-28"},{"lineNumber":35,"author":{"gitId":"jeremy-7007"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":36,"author":{"gitId":"jeremy-7007"},"content":"    private final Index personIndex;","lastModifiedDate":"2021-10-28"},{"lineNumber":37,"author":{"gitId":"jeremy-7007"},"content":"    private final Index taskIndex;","lastModifiedDate":"2021-10-28"},{"lineNumber":38,"author":{"gitId":"jeremy-7007"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":39,"author":{"gitId":"jeremy-7007"},"content":"    /**","lastModifiedDate":"2021-10-28"},{"lineNumber":40,"author":{"gitId":"jeremy-7007"},"content":"     * Constructs a {@code MarkTaskDoneStudentCommand}","lastModifiedDate":"2021-10-28"},{"lineNumber":41,"author":{"gitId":"jeremy-7007"},"content":"     *","lastModifiedDate":"2021-10-28"},{"lineNumber":42,"author":{"gitId":"jeremy-7007"},"content":"     * @param personIndex the index of the {@code Student} who did the task","lastModifiedDate":"2021-10-28"},{"lineNumber":43,"author":{"gitId":"jeremy-7007"},"content":"     * @param taskIndex the index of the task in the filtered task list to mark as done","lastModifiedDate":"2021-10-28"},{"lineNumber":44,"author":{"gitId":"jeremy-7007"},"content":"     */","lastModifiedDate":"2021-10-28"},{"lineNumber":45,"author":{"gitId":"jeremy-7007"},"content":"    public MarkTaskDoneStudentCommand(Index personIndex, Index taskIndex) {","lastModifiedDate":"2021-10-28"},{"lineNumber":46,"author":{"gitId":"jeremy-7007"},"content":"        requireAllNonNull(personIndex, taskIndex);","lastModifiedDate":"2021-10-28"},{"lineNumber":47,"author":{"gitId":"jeremy-7007"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":48,"author":{"gitId":"jeremy-7007"},"content":"        this.personIndex \u003d personIndex;","lastModifiedDate":"2021-10-28"},{"lineNumber":49,"author":{"gitId":"jeremy-7007"},"content":"        this.taskIndex \u003d taskIndex;","lastModifiedDate":"2021-10-28"},{"lineNumber":50,"author":{"gitId":"jeremy-7007"},"content":"    }","lastModifiedDate":"2021-10-28"},{"lineNumber":51,"author":{"gitId":"jeremy-7007"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":52,"author":{"gitId":"jeremy-7007"},"content":"    @Override","lastModifiedDate":"2021-10-28"},{"lineNumber":53,"author":{"gitId":"jeremy-7007"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2021-10-28"},{"lineNumber":54,"author":{"gitId":"jeremy-7007"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-10-28"},{"lineNumber":55,"author":{"gitId":"jeremy-7007"},"content":"        List\u003cPerson\u003e lastShownPersonList \u003d model.getFilteredPersonList();","lastModifiedDate":"2021-10-28"},{"lineNumber":56,"author":{"gitId":"jeremy-7007"},"content":"        List\u003cTask\u003e taskList \u003d model.getFilteredTaskList();","lastModifiedDate":"2021-10-28"},{"lineNumber":57,"author":{"gitId":"jeremy-7007"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":58,"author":{"gitId":"jeremy-7007"},"content":"        if (personIndex.getZeroBased() \u003e\u003d lastShownPersonList.size()) {","lastModifiedDate":"2021-10-28"},{"lineNumber":59,"author":{"gitId":"jeremy-7007"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2021-10-28"},{"lineNumber":60,"author":{"gitId":"jeremy-7007"},"content":"        }","lastModifiedDate":"2021-10-28"},{"lineNumber":61,"author":{"gitId":"jeremy-7007"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":62,"author":{"gitId":"jeremy-7007"},"content":"        if (taskIndex.getZeroBased() \u003e\u003d taskList.size()) {","lastModifiedDate":"2021-10-28"},{"lineNumber":63,"author":{"gitId":"jeremy-7007"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_TASK_DISPLAYED_INDEX);","lastModifiedDate":"2021-10-28"},{"lineNumber":64,"author":{"gitId":"jeremy-7007"},"content":"        }","lastModifiedDate":"2021-10-28"},{"lineNumber":65,"author":{"gitId":"jeremy-7007"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":66,"author":{"gitId":"jeremy-7007"},"content":"        Person personToEdit \u003d lastShownPersonList.get(personIndex.getZeroBased());","lastModifiedDate":"2021-10-28"},{"lineNumber":67,"author":{"gitId":"jeremy-7007"},"content":"        Task taskAssigned \u003d taskList.get(taskIndex.getZeroBased());","lastModifiedDate":"2021-10-28"},{"lineNumber":68,"author":{"gitId":"jeremy-7007"},"content":"        Map\u003cUniqueId, Boolean\u003e previousTasksCompletion \u003d personToEdit.getTasksCompletion();","lastModifiedDate":"2021-10-28"},{"lineNumber":69,"author":{"gitId":"jeremy-7007"},"content":"        UniqueId taskId \u003d taskAssigned.getId();","lastModifiedDate":"2021-10-28"},{"lineNumber":70,"author":{"gitId":"jeremy-7007"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":71,"author":{"gitId":"jeremy-7007"},"content":"        if (!previousTasksCompletion.containsKey(taskId)) {","lastModifiedDate":"2021-10-28"},{"lineNumber":72,"author":{"gitId":"jeremy-7007"},"content":"            throw new CommandException(MISSING_TASK);","lastModifiedDate":"2021-10-28"},{"lineNumber":73,"author":{"gitId":"jeremy-7007"},"content":"        }","lastModifiedDate":"2021-10-28"},{"lineNumber":74,"author":{"gitId":"jeremy-7007"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":75,"author":{"gitId":"jeremy-7007"},"content":"        Map\u003cUniqueId, Boolean\u003e newTasksCompletion \u003d new HashMap\u003c\u003e(previousTasksCompletion);","lastModifiedDate":"2021-10-28"},{"lineNumber":76,"author":{"gitId":"jeremy-7007"},"content":"        newTasksCompletion.replace(taskId, true);","lastModifiedDate":"2021-10-28"},{"lineNumber":77,"author":{"gitId":"jeremy-7007"},"content":"        Person newPerson \u003d personToEdit.updateTasksCompletion(newTasksCompletion);","lastModifiedDate":"2021-10-28"},{"lineNumber":78,"author":{"gitId":"jeremy-7007"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":79,"author":{"gitId":"jeremy-7007"},"content":"        if (!personToEdit.isSamePerson(newPerson)","lastModifiedDate":"2021-10-28"},{"lineNumber":80,"author":{"gitId":"jeremy-7007"},"content":"                \u0026\u0026 model.hasPerson(newPerson)) {","lastModifiedDate":"2021-10-28"},{"lineNumber":81,"author":{"gitId":"jeremy-7007"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2021-10-28"},{"lineNumber":82,"author":{"gitId":"jeremy-7007"},"content":"        }","lastModifiedDate":"2021-10-28"},{"lineNumber":83,"author":{"gitId":"jeremy-7007"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":84,"author":{"gitId":"jeremy-7007"},"content":"        model.setPerson(personToEdit, newPerson);","lastModifiedDate":"2021-10-28"},{"lineNumber":85,"author":{"gitId":"jeremy-7007"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2021-10-28"},{"lineNumber":86,"author":{"gitId":"jeremy-7007"},"content":"        model.updateFilteredTaskList(PREDICATE_SHOW_ALL_TASKS);","lastModifiedDate":"2021-10-28"},{"lineNumber":87,"author":{"gitId":"tanhuakun"},"content":"        model.setPersonToView(newPerson);","lastModifiedDate":"2021-11-04"},{"lineNumber":88,"author":{"gitId":"tanhuakun"},"content":"        model.setViewingType(ViewingType.PERSON);","lastModifiedDate":"2021-11-04"},{"lineNumber":89,"author":{"gitId":"jeremy-7007"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":90,"author":{"gitId":"jeremy-7007"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, taskAssigned.getDescription(), newPerson.getName()));","lastModifiedDate":"2021-10-28"},{"lineNumber":91,"author":{"gitId":"jeremy-7007"},"content":"    }","lastModifiedDate":"2021-10-28"},{"lineNumber":92,"author":{"gitId":"jeremy-7007"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":93,"author":{"gitId":"jeremy-7007"},"content":"}","lastModifiedDate":"2021-10-28"}],"authorContributionMap":{"jeremy-7007":90,"tanhuakun":3}},{"path":"src/main/java/seedu/address/logic/commands/tasks/MarkTaskUndoneStudentCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jeremy-7007"},"content":"package seedu.address.logic.commands.tasks;","lastModifiedDate":"2021-10-28"},{"lineNumber":2,"author":{"gitId":"jeremy-7007"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":3,"author":{"gitId":"jeremy-7007"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-28"},{"lineNumber":4,"author":{"gitId":"jeremy-7007"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2021-10-28"},{"lineNumber":5,"author":{"gitId":"jeremy-7007"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2021-10-28"},{"lineNumber":6,"author":{"gitId":"jeremy-7007"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_TASKS;","lastModifiedDate":"2021-10-28"},{"lineNumber":7,"author":{"gitId":"jeremy-7007"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":8,"author":{"gitId":"jeremy-7007"},"content":"import java.util.HashMap;","lastModifiedDate":"2021-10-28"},{"lineNumber":9,"author":{"gitId":"jeremy-7007"},"content":"import java.util.List;","lastModifiedDate":"2021-10-28"},{"lineNumber":10,"author":{"gitId":"jeremy-7007"},"content":"import java.util.Map;","lastModifiedDate":"2021-10-28"},{"lineNumber":11,"author":{"gitId":"jeremy-7007"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":12,"author":{"gitId":"jeremy-7007"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2021-10-28"},{"lineNumber":13,"author":{"gitId":"jeremy-7007"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-10-28"},{"lineNumber":14,"author":{"gitId":"jeremy-7007"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2021-10-28"},{"lineNumber":15,"author":{"gitId":"jeremy-7007"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2021-10-28"},{"lineNumber":16,"author":{"gitId":"jeremy-7007"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-10-28"},{"lineNumber":17,"author":{"gitId":"jeremy-7007"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-10-28"},{"lineNumber":18,"author":{"gitId":"tanhuakun"},"content":"import seedu.address.model.ViewingType;","lastModifiedDate":"2021-11-04"},{"lineNumber":19,"author":{"gitId":"jeremy-7007"},"content":"import seedu.address.model.id.UniqueId;","lastModifiedDate":"2021-10-28"},{"lineNumber":20,"author":{"gitId":"jeremy-7007"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2021-10-28"},{"lineNumber":21,"author":{"gitId":"jeremy-7007"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2021-10-28"},{"lineNumber":22,"author":{"gitId":"jeremy-7007"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":23,"author":{"gitId":"jeremy-7007"},"content":"public class MarkTaskUndoneStudentCommand extends Command {","lastModifiedDate":"2021-10-28"},{"lineNumber":24,"author":{"gitId":"jeremy-7007"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":25,"author":{"gitId":"jeremy-7007"},"content":"    public static final String COMMAND_WORD \u003d \"-undo\";","lastModifiedDate":"2021-10-28"},{"lineNumber":26,"author":{"gitId":"jeremy-7007"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":27,"author":{"gitId":"jeremy-7007"},"content":"    public static final String MESSAGE_USAGE \u003d COMMAND_WORD + \": Marks that a task has not been done by a student. \"","lastModifiedDate":"2021-10-28"},{"lineNumber":28,"author":{"gitId":"jeremy-7007"},"content":"            + \"The student and task are indicated\"","lastModifiedDate":"2021-10-28"},{"lineNumber":29,"author":{"gitId":"jeremy-7007"},"content":"            + \"by the index numbers used in the displayed student list and the displayed task list. \"","lastModifiedDate":"2021-10-28"},{"lineNumber":30,"author":{"gitId":"jeremy-7007"},"content":"            + \"Parameters: STUDENT INDEX (must be a positive integer) \"","lastModifiedDate":"2021-10-28"},{"lineNumber":31,"author":{"gitId":"jeremy-7007"},"content":"            + \"TASK INDEX (must be a positive integer) \";","lastModifiedDate":"2021-10-28"},{"lineNumber":32,"author":{"gitId":"jeremy-7007"},"content":"    public static final String MISSING_TASK \u003d \"Specified task is not assigned to this student!\";","lastModifiedDate":"2021-10-28"},{"lineNumber":33,"author":{"gitId":"jeremy-7007"},"content":"    public static final String MESSAGE_DUPLICATE_PERSON \u003d \"This person already exists in the address book.\";","lastModifiedDate":"2021-10-28"},{"lineNumber":34,"author":{"gitId":"jeremy-7007"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Task %1$s marked as not done by student %2$s\";","lastModifiedDate":"2021-10-28"},{"lineNumber":35,"author":{"gitId":"jeremy-7007"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":36,"author":{"gitId":"jeremy-7007"},"content":"    private final Index personIndex;","lastModifiedDate":"2021-10-28"},{"lineNumber":37,"author":{"gitId":"jeremy-7007"},"content":"    private final Index taskIndex;","lastModifiedDate":"2021-10-28"},{"lineNumber":38,"author":{"gitId":"jeremy-7007"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":39,"author":{"gitId":"jeremy-7007"},"content":"    /**","lastModifiedDate":"2021-10-28"},{"lineNumber":40,"author":{"gitId":"jeremy-7007"},"content":"     * Constructs a {@code MarkTaskUndoneStudentCommand}","lastModifiedDate":"2021-10-28"},{"lineNumber":41,"author":{"gitId":"jeremy-7007"},"content":"     *","lastModifiedDate":"2021-10-28"},{"lineNumber":42,"author":{"gitId":"jeremy-7007"},"content":"     * @param personIndex the index of the {@code Student} who did the task","lastModifiedDate":"2021-10-28"},{"lineNumber":43,"author":{"gitId":"jeremy-7007"},"content":"     * @param taskIndex the index of the task in the filtered task list to mark as done","lastModifiedDate":"2021-10-28"},{"lineNumber":44,"author":{"gitId":"jeremy-7007"},"content":"     */","lastModifiedDate":"2021-10-28"},{"lineNumber":45,"author":{"gitId":"jeremy-7007"},"content":"    public MarkTaskUndoneStudentCommand(Index personIndex, Index taskIndex) {","lastModifiedDate":"2021-10-28"},{"lineNumber":46,"author":{"gitId":"jeremy-7007"},"content":"        requireAllNonNull(personIndex, taskIndex);","lastModifiedDate":"2021-10-28"},{"lineNumber":47,"author":{"gitId":"jeremy-7007"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":48,"author":{"gitId":"jeremy-7007"},"content":"        this.personIndex \u003d personIndex;","lastModifiedDate":"2021-10-28"},{"lineNumber":49,"author":{"gitId":"jeremy-7007"},"content":"        this.taskIndex \u003d taskIndex;","lastModifiedDate":"2021-10-28"},{"lineNumber":50,"author":{"gitId":"jeremy-7007"},"content":"    }","lastModifiedDate":"2021-10-28"},{"lineNumber":51,"author":{"gitId":"jeremy-7007"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":52,"author":{"gitId":"jeremy-7007"},"content":"    @Override","lastModifiedDate":"2021-10-28"},{"lineNumber":53,"author":{"gitId":"jeremy-7007"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2021-10-28"},{"lineNumber":54,"author":{"gitId":"jeremy-7007"},"content":"        requireNonNull(model);","lastModifiedDate":"2021-10-28"},{"lineNumber":55,"author":{"gitId":"jeremy-7007"},"content":"        List\u003cPerson\u003e lastShownPersonList \u003d model.getFilteredPersonList();","lastModifiedDate":"2021-10-28"},{"lineNumber":56,"author":{"gitId":"jeremy-7007"},"content":"        List\u003cTask\u003e taskList \u003d model.getFilteredTaskList();","lastModifiedDate":"2021-10-28"},{"lineNumber":57,"author":{"gitId":"jeremy-7007"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":58,"author":{"gitId":"jeremy-7007"},"content":"        if (personIndex.getZeroBased() \u003e\u003d lastShownPersonList.size()) {","lastModifiedDate":"2021-10-28"},{"lineNumber":59,"author":{"gitId":"jeremy-7007"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2021-10-28"},{"lineNumber":60,"author":{"gitId":"jeremy-7007"},"content":"        }","lastModifiedDate":"2021-10-28"},{"lineNumber":61,"author":{"gitId":"jeremy-7007"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":62,"author":{"gitId":"jeremy-7007"},"content":"        if (taskIndex.getZeroBased() \u003e\u003d taskList.size()) {","lastModifiedDate":"2021-10-28"},{"lineNumber":63,"author":{"gitId":"jeremy-7007"},"content":"            throw new CommandException(Messages.MESSAGE_INVALID_TASK_DISPLAYED_INDEX);","lastModifiedDate":"2021-10-28"},{"lineNumber":64,"author":{"gitId":"jeremy-7007"},"content":"        }","lastModifiedDate":"2021-10-28"},{"lineNumber":65,"author":{"gitId":"jeremy-7007"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":66,"author":{"gitId":"jeremy-7007"},"content":"        Person personToEdit \u003d lastShownPersonList.get(personIndex.getZeroBased());","lastModifiedDate":"2021-10-28"},{"lineNumber":67,"author":{"gitId":"jeremy-7007"},"content":"        Task taskAssigned \u003d taskList.get(taskIndex.getZeroBased());","lastModifiedDate":"2021-10-28"},{"lineNumber":68,"author":{"gitId":"jeremy-7007"},"content":"        Map\u003cUniqueId, Boolean\u003e previousTasksCompletion \u003d personToEdit.getTasksCompletion();","lastModifiedDate":"2021-10-28"},{"lineNumber":69,"author":{"gitId":"jeremy-7007"},"content":"        UniqueId taskId \u003d taskAssigned.getId();","lastModifiedDate":"2021-10-28"},{"lineNumber":70,"author":{"gitId":"jeremy-7007"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":71,"author":{"gitId":"jeremy-7007"},"content":"        if (!previousTasksCompletion.containsKey(taskId)) {","lastModifiedDate":"2021-10-28"},{"lineNumber":72,"author":{"gitId":"jeremy-7007"},"content":"            throw new CommandException(MISSING_TASK);","lastModifiedDate":"2021-10-28"},{"lineNumber":73,"author":{"gitId":"jeremy-7007"},"content":"        }","lastModifiedDate":"2021-10-28"},{"lineNumber":74,"author":{"gitId":"jeremy-7007"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":75,"author":{"gitId":"jeremy-7007"},"content":"        Map\u003cUniqueId, Boolean\u003e newTasksCompletion \u003d new HashMap\u003c\u003e(previousTasksCompletion);","lastModifiedDate":"2021-10-28"},{"lineNumber":76,"author":{"gitId":"jeremy-7007"},"content":"        newTasksCompletion.replace(taskId, false);","lastModifiedDate":"2021-10-28"},{"lineNumber":77,"author":{"gitId":"jeremy-7007"},"content":"        Person newPerson \u003d personToEdit.updateTasksCompletion(newTasksCompletion);","lastModifiedDate":"2021-10-28"},{"lineNumber":78,"author":{"gitId":"jeremy-7007"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":79,"author":{"gitId":"jeremy-7007"},"content":"        if (!personToEdit.isSamePerson(newPerson)","lastModifiedDate":"2021-10-28"},{"lineNumber":80,"author":{"gitId":"jeremy-7007"},"content":"                \u0026\u0026 model.hasPerson(newPerson)) {","lastModifiedDate":"2021-10-28"},{"lineNumber":81,"author":{"gitId":"jeremy-7007"},"content":"            throw new CommandException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2021-10-28"},{"lineNumber":82,"author":{"gitId":"jeremy-7007"},"content":"        }","lastModifiedDate":"2021-10-28"},{"lineNumber":83,"author":{"gitId":"jeremy-7007"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":84,"author":{"gitId":"jeremy-7007"},"content":"        model.setPerson(personToEdit, newPerson);","lastModifiedDate":"2021-10-28"},{"lineNumber":85,"author":{"gitId":"jeremy-7007"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2021-10-28"},{"lineNumber":86,"author":{"gitId":"jeremy-7007"},"content":"        model.updateFilteredTaskList(PREDICATE_SHOW_ALL_TASKS);","lastModifiedDate":"2021-10-28"},{"lineNumber":87,"author":{"gitId":"tanhuakun"},"content":"        model.setPersonToView(newPerson);","lastModifiedDate":"2021-11-04"},{"lineNumber":88,"author":{"gitId":"tanhuakun"},"content":"        model.setViewingType(ViewingType.PERSON);","lastModifiedDate":"2021-11-04"},{"lineNumber":89,"author":{"gitId":"jeremy-7007"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":90,"author":{"gitId":"jeremy-7007"},"content":"        return new CommandResult(String.format(MESSAGE_SUCCESS, taskAssigned.getDescription(), newPerson.getName()));","lastModifiedDate":"2021-10-28"},{"lineNumber":91,"author":{"gitId":"jeremy-7007"},"content":"    }","lastModifiedDate":"2021-10-28"},{"lineNumber":92,"author":{"gitId":"jeremy-7007"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":93,"author":{"gitId":"jeremy-7007"},"content":"}","lastModifiedDate":"2021-10-28"}],"authorContributionMap":{"jeremy-7007":90,"tanhuakun":3}},{"path":"src/main/java/seedu/address/logic/commands/tasks/UnassignTaskCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"eltonyeh"},"content":"package seedu.address.logic.commands.tasks;","lastModifiedDate":"2021-10-26"},{"lineNumber":2,"author":{"gitId":"eltonyeh"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":3,"author":{"gitId":"jeremy-7007"},"content":"import java.util.Map;","lastModifiedDate":"2021-10-26"},{"lineNumber":4,"author":{"gitId":"eltonyeh"},"content":"import java.util.Set;","lastModifiedDate":"2021-10-26"},{"lineNumber":5,"author":{"gitId":"eltonyeh"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":6,"author":{"gitId":"eltonyeh"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-10-26"},{"lineNumber":7,"author":{"gitId":"eltonyeh"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2021-11-08"},{"lineNumber":8,"author":{"gitId":"eltonyeh"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-10-26"},{"lineNumber":9,"author":{"gitId":"eltonyeh"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-11-08"},{"lineNumber":10,"author":{"gitId":"eltonyeh"},"content":"import seedu.address.model.id.UniqueId;","lastModifiedDate":"2021-10-26"},{"lineNumber":11,"author":{"gitId":"eltonyeh"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":12,"author":{"gitId":"eltonyeh"},"content":"public abstract class UnassignTaskCommand extends ManageTaskAssignmentCommand {","lastModifiedDate":"2021-11-07"},{"lineNumber":13,"author":{"gitId":"eltonyeh"},"content":"    public static final String MESSAGE_USAGE \u003d \"%1$s: Unassigns a task of the %2$s \"","lastModifiedDate":"2021-11-08"},{"lineNumber":14,"author":{"gitId":"eltonyeh"},"content":"            + ManageTaskAssignmentCommand.MESSAGE_USAGE;","lastModifiedDate":"2021-11-07"},{"lineNumber":15,"author":{"gitId":"eltonyeh"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":16,"author":{"gitId":"eltonyeh"},"content":"    public static final String MISSING_TASK \u003d \"Specified task is not assigned to this %s!\";","lastModifiedDate":"2021-10-26"},{"lineNumber":17,"author":{"gitId":"eltonyeh"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Task %1$s unassigned from %3$s %2$s\";","lastModifiedDate":"2021-10-26"},{"lineNumber":18,"author":{"gitId":"eltonyeh"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":19,"author":{"gitId":"eltonyeh"},"content":"    /**","lastModifiedDate":"2021-10-26"},{"lineNumber":20,"author":{"gitId":"eltonyeh"},"content":"     * Constructs a {@code UnassignTaskCommand}","lastModifiedDate":"2021-10-26"},{"lineNumber":21,"author":{"gitId":"eltonyeh"},"content":"     *","lastModifiedDate":"2021-10-26"},{"lineNumber":22,"author":{"gitId":"eltonyeh"},"content":"     * @param assigneeIndex the index of the {@code TaskAssignable} to be unassigned a task","lastModifiedDate":"2021-10-26"},{"lineNumber":23,"author":{"gitId":"eltonyeh"},"content":"     * @param taskIndex the index of the task in the filtered task list to unassign","lastModifiedDate":"2021-10-26"},{"lineNumber":24,"author":{"gitId":"eltonyeh"},"content":"     */","lastModifiedDate":"2021-10-26"},{"lineNumber":25,"author":{"gitId":"eltonyeh"},"content":"    public UnassignTaskCommand(Index assigneeIndex, Index taskIndex) {","lastModifiedDate":"2021-10-26"},{"lineNumber":26,"author":{"gitId":"eltonyeh"},"content":"        super(assigneeIndex, taskIndex);","lastModifiedDate":"2021-11-07"},{"lineNumber":27,"author":{"gitId":"eltonyeh"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":28,"author":{"gitId":"eltonyeh"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":29,"author":{"gitId":"eltonyeh"},"content":"    protected void handleTaskDuplicationOrNotFound(Set\u003cUniqueId\u003e taskSet, UniqueId taskId, String assigneeType)","lastModifiedDate":"2021-11-07"},{"lineNumber":30,"author":{"gitId":"eltonyeh"},"content":"            throws CommandException {","lastModifiedDate":"2021-11-07"},{"lineNumber":31,"author":{"gitId":"eltonyeh"},"content":"        if (!taskSet.contains(taskId)) {","lastModifiedDate":"2021-11-07"},{"lineNumber":32,"author":{"gitId":"eltonyeh"},"content":"            throw new CommandException(String.format(MISSING_TASK, assigneeType));","lastModifiedDate":"2021-10-26"},{"lineNumber":33,"author":{"gitId":"eltonyeh"},"content":"        }","lastModifiedDate":"2021-10-26"},{"lineNumber":34,"author":{"gitId":"eltonyeh"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":35,"author":{"gitId":"eltonyeh"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":36,"author":{"gitId":"eltonyeh"},"content":"    protected void manageTaskAssignment(Set\u003cUniqueId\u003e newTaskSet, Map\u003cUniqueId, Boolean\u003e newTasksCompletion,","lastModifiedDate":"2021-11-07"},{"lineNumber":37,"author":{"gitId":"eltonyeh"},"content":"                                        UniqueId taskId) {","lastModifiedDate":"2021-11-07"},{"lineNumber":38,"author":{"gitId":"eltonyeh"},"content":"        newTaskSet.remove(taskId);","lastModifiedDate":"2021-11-07"},{"lineNumber":39,"author":{"gitId":"eltonyeh"},"content":"        newTasksCompletion.remove(taskId);","lastModifiedDate":"2021-11-07"},{"lineNumber":40,"author":{"gitId":"eltonyeh"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":41,"author":{"gitId":"eltonyeh"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":42,"author":{"gitId":"eltonyeh"},"content":"    public CommandResult executeWithGivenMessage(Model model, String assigneeType) throws CommandException {","lastModifiedDate":"2021-11-08"},{"lineNumber":43,"author":{"gitId":"eltonyeh"},"content":"        return executeWithGivenMessage(model, assigneeType, MESSAGE_SUCCESS);","lastModifiedDate":"2021-11-08"},{"lineNumber":44,"author":{"gitId":"eltonyeh"},"content":"    }","lastModifiedDate":"2021-11-08"},{"lineNumber":45,"author":{"gitId":"eltonyeh"},"content":"}","lastModifiedDate":"2021-10-26"}],"authorContributionMap":{"jeremy-7007":1,"eltonyeh":44}},{"path":"src/main/java/seedu/address/logic/commands/tasks/UnassignTaskFromGroupCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"eltonyeh"},"content":"package seedu.address.logic.commands.tasks;","lastModifiedDate":"2021-10-26"},{"lineNumber":2,"author":{"gitId":"eltonyeh"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":3,"author":{"gitId":"eltonyeh"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2021-10-26"},{"lineNumber":4,"author":{"gitId":"eltonyeh"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_GROUPS;","lastModifiedDate":"2021-10-26"},{"lineNumber":5,"author":{"gitId":"eltonyeh"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_TASKS;","lastModifiedDate":"2021-10-26"},{"lineNumber":6,"author":{"gitId":"eltonyeh"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":7,"author":{"gitId":"eltonyeh"},"content":"import java.util.List;","lastModifiedDate":"2021-10-26"},{"lineNumber":8,"author":{"gitId":"eltonyeh"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":9,"author":{"gitId":"eltonyeh"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2021-10-26"},{"lineNumber":10,"author":{"gitId":"eltonyeh"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-10-26"},{"lineNumber":11,"author":{"gitId":"eltonyeh"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2021-10-26"},{"lineNumber":12,"author":{"gitId":"eltonyeh"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-10-26"},{"lineNumber":13,"author":{"gitId":"eltonyeh"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-10-26"},{"lineNumber":14,"author":{"gitId":"eltonyeh"},"content":"import seedu.address.model.TaskAssignable;","lastModifiedDate":"2021-10-26"},{"lineNumber":15,"author":{"gitId":"tanhuakun"},"content":"import seedu.address.model.ViewingType;","lastModifiedDate":"2021-11-04"},{"lineNumber":16,"author":{"gitId":"eltonyeh"},"content":"import seedu.address.model.group.Group;","lastModifiedDate":"2021-10-26"},{"lineNumber":17,"author":{"gitId":"eltonyeh"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":18,"author":{"gitId":"eltonyeh"},"content":"public class UnassignTaskFromGroupCommand extends UnassignTaskCommand {","lastModifiedDate":"2021-10-26"},{"lineNumber":19,"author":{"gitId":"eltonyeh"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":20,"author":{"gitId":"eltonyeh"},"content":"    public static final String COMMAND_WORD \u003d \"-unag\";","lastModifiedDate":"2021-10-26"},{"lineNumber":21,"author":{"gitId":"eltonyeh"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":22,"author":{"gitId":"eltonyeh"},"content":"    public static final String MESSAGE_USAGE \u003d String.format(","lastModifiedDate":"2021-10-26"},{"lineNumber":23,"author":{"gitId":"eltonyeh"},"content":"            UnassignTaskCommand.MESSAGE_USAGE, COMMAND_WORD, \"group\", \"GROUP\");","lastModifiedDate":"2021-10-26"},{"lineNumber":24,"author":{"gitId":"eltonyeh"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":25,"author":{"gitId":"eltonyeh"},"content":"    /**","lastModifiedDate":"2021-10-26"},{"lineNumber":26,"author":{"gitId":"eltonyeh"},"content":"     * Constructs a {@code UnassignTaskFromGroupCommand}","lastModifiedDate":"2021-10-26"},{"lineNumber":27,"author":{"gitId":"eltonyeh"},"content":"     *","lastModifiedDate":"2021-10-26"},{"lineNumber":28,"author":{"gitId":"eltonyeh"},"content":"     * @param groupIndex of the group in the filtered group list to unassign from","lastModifiedDate":"2021-10-26"},{"lineNumber":29,"author":{"gitId":"eltonyeh"},"content":"     * @param taskIndex of the task in the filtered task list to unassign","lastModifiedDate":"2021-10-26"},{"lineNumber":30,"author":{"gitId":"eltonyeh"},"content":"     */","lastModifiedDate":"2021-10-26"},{"lineNumber":31,"author":{"gitId":"eltonyeh"},"content":"    public UnassignTaskFromGroupCommand(Index groupIndex, Index taskIndex) {","lastModifiedDate":"2021-10-26"},{"lineNumber":32,"author":{"gitId":"eltonyeh"},"content":"        super(groupIndex, taskIndex);","lastModifiedDate":"2021-10-26"},{"lineNumber":33,"author":{"gitId":"eltonyeh"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":34,"author":{"gitId":"eltonyeh"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":35,"author":{"gitId":"eltonyeh"},"content":"    @Override","lastModifiedDate":"2021-10-26"},{"lineNumber":36,"author":{"gitId":"eltonyeh"},"content":"    protected String invalidDisplayedIndexMessage() {","lastModifiedDate":"2021-10-26"},{"lineNumber":37,"author":{"gitId":"eltonyeh"},"content":"        return Messages.MESSAGE_INVALID_GROUP_DISPLAYED_INDEX;","lastModifiedDate":"2021-10-26"},{"lineNumber":38,"author":{"gitId":"eltonyeh"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":39,"author":{"gitId":"eltonyeh"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":40,"author":{"gitId":"eltonyeh"},"content":"    @Override","lastModifiedDate":"2021-10-26"},{"lineNumber":41,"author":{"gitId":"eltonyeh"},"content":"    protected List\u003cGroup\u003e getTaskAssignableListFromModel(Model model) {","lastModifiedDate":"2021-10-26"},{"lineNumber":42,"author":{"gitId":"eltonyeh"},"content":"        return model.getFilteredGroupList();","lastModifiedDate":"2021-10-26"},{"lineNumber":43,"author":{"gitId":"eltonyeh"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":44,"author":{"gitId":"eltonyeh"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":45,"author":{"gitId":"eltonyeh"},"content":"    @Override","lastModifiedDate":"2021-10-26"},{"lineNumber":46,"author":{"gitId":"eltonyeh"},"content":"    protected void updateModel(Model model, TaskAssignable taskAssignableToEdit, TaskAssignable","lastModifiedDate":"2021-10-26"},{"lineNumber":47,"author":{"gitId":"eltonyeh"},"content":"            newTaskAssignable) {","lastModifiedDate":"2021-10-26"},{"lineNumber":48,"author":{"gitId":"eltonyeh"},"content":"        requireAllNonNull(model, taskAssignableToEdit, newTaskAssignable);","lastModifiedDate":"2021-10-26"},{"lineNumber":49,"author":{"gitId":"eltonyeh"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":50,"author":{"gitId":"eltonyeh"},"content":"        if (!(taskAssignableToEdit instanceof Group \u0026\u0026 newTaskAssignable instanceof Group)) {","lastModifiedDate":"2021-10-26"},{"lineNumber":51,"author":{"gitId":"eltonyeh"},"content":"            return;","lastModifiedDate":"2021-10-26"},{"lineNumber":52,"author":{"gitId":"eltonyeh"},"content":"        }","lastModifiedDate":"2021-10-26"},{"lineNumber":53,"author":{"gitId":"eltonyeh"},"content":"        Group groupToEdit \u003d (Group) taskAssignableToEdit;","lastModifiedDate":"2021-10-26"},{"lineNumber":54,"author":{"gitId":"eltonyeh"},"content":"        Group newGroup \u003d (Group) newTaskAssignable;","lastModifiedDate":"2021-10-26"},{"lineNumber":55,"author":{"gitId":"eltonyeh"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":56,"author":{"gitId":"eltonyeh"},"content":"        model.setGroup(groupToEdit, newGroup);","lastModifiedDate":"2021-10-26"},{"lineNumber":57,"author":{"gitId":"eltonyeh"},"content":"        model.updateFilteredGroupList(PREDICATE_SHOW_ALL_GROUPS);","lastModifiedDate":"2021-10-26"},{"lineNumber":58,"author":{"gitId":"eltonyeh"},"content":"        model.updateFilteredTaskList(PREDICATE_SHOW_ALL_TASKS);","lastModifiedDate":"2021-10-26"},{"lineNumber":59,"author":{"gitId":"tanhuakun"},"content":"        model.setGroupToView(newGroup);","lastModifiedDate":"2021-11-04"},{"lineNumber":60,"author":{"gitId":"tanhuakun"},"content":"        model.setViewingType(ViewingType.GROUP);","lastModifiedDate":"2021-11-04"},{"lineNumber":61,"author":{"gitId":"eltonyeh"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":62,"author":{"gitId":"eltonyeh"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":63,"author":{"gitId":"eltonyeh"},"content":"    @Override","lastModifiedDate":"2021-10-26"},{"lineNumber":64,"author":{"gitId":"eltonyeh"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2021-10-26"},{"lineNumber":65,"author":{"gitId":"eltonyeh"},"content":"        return executeWithGivenMessage(model, \"group\");","lastModifiedDate":"2021-10-26"},{"lineNumber":66,"author":{"gitId":"eltonyeh"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":67,"author":{"gitId":"eltonyeh"},"content":"}","lastModifiedDate":"2021-10-26"},{"lineNumber":68,"author":{"gitId":"eltonyeh"},"content":"","lastModifiedDate":"2021-10-26"}],"authorContributionMap":{"eltonyeh":65,"tanhuakun":3}},{"path":"src/main/java/seedu/address/logic/commands/tasks/UnassignTaskFromPersonCommand.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jeremy-7007"},"content":"package seedu.address.logic.commands.tasks;","lastModifiedDate":"2021-10-12"},{"lineNumber":2,"author":{"gitId":"jeremy-7007"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":3,"author":{"gitId":"eltonyeh"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2021-10-26"},{"lineNumber":4,"author":{"gitId":"jeremy-7007"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2021-10-12"},{"lineNumber":5,"author":{"gitId":"jeremy-7007"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_TASKS;","lastModifiedDate":"2021-10-12"},{"lineNumber":6,"author":{"gitId":"jeremy-7007"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":7,"author":{"gitId":"jeremy-7007"},"content":"import java.util.List;","lastModifiedDate":"2021-10-12"},{"lineNumber":8,"author":{"gitId":"jeremy-7007"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":9,"author":{"gitId":"jeremy-7007"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2021-10-12"},{"lineNumber":10,"author":{"gitId":"jeremy-7007"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-10-12"},{"lineNumber":11,"author":{"gitId":"jeremy-7007"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2021-10-12"},{"lineNumber":12,"author":{"gitId":"jeremy-7007"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-10-12"},{"lineNumber":13,"author":{"gitId":"jeremy-7007"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-10-12"},{"lineNumber":14,"author":{"gitId":"eltonyeh"},"content":"import seedu.address.model.TaskAssignable;","lastModifiedDate":"2021-10-26"},{"lineNumber":15,"author":{"gitId":"tanhuakun"},"content":"import seedu.address.model.ViewingType;","lastModifiedDate":"2021-11-04"},{"lineNumber":16,"author":{"gitId":"jeremy-7007"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2021-10-12"},{"lineNumber":17,"author":{"gitId":"jeremy-7007"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":18,"author":{"gitId":"eltonyeh"},"content":"public class UnassignTaskFromPersonCommand extends UnassignTaskCommand {","lastModifiedDate":"2021-10-26"},{"lineNumber":19,"author":{"gitId":"jeremy-7007"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":20,"author":{"gitId":"eltonyeh"},"content":"    public static final String COMMAND_WORD \u003d \"-unas\";","lastModifiedDate":"2021-10-26"},{"lineNumber":21,"author":{"gitId":"jeremy-7007"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":22,"author":{"gitId":"eltonyeh"},"content":"    public static final String MESSAGE_USAGE \u003d String.format(","lastModifiedDate":"2021-10-26"},{"lineNumber":23,"author":{"gitId":"eltonyeh"},"content":"            UnassignTaskCommand.MESSAGE_USAGE, COMMAND_WORD, \"student\", \"STUDENT\");","lastModifiedDate":"2021-10-26"},{"lineNumber":24,"author":{"gitId":"jeremy-7007"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":25,"author":{"gitId":"jeremy-7007"},"content":"    /**","lastModifiedDate":"2021-10-12"},{"lineNumber":26,"author":{"gitId":"jeremy-7007"},"content":"     * Constructs a {@code UnassignTaskFromPersonCommand}","lastModifiedDate":"2021-10-12"},{"lineNumber":27,"author":{"gitId":"jeremy-7007"},"content":"     *","lastModifiedDate":"2021-10-12"},{"lineNumber":28,"author":{"gitId":"jeremy-7007"},"content":"     * @param personIndex of the person in the filtered person list to unassign from","lastModifiedDate":"2021-10-12"},{"lineNumber":29,"author":{"gitId":"jeremy-7007"},"content":"     * @param taskIndex of the task in the filtered task list to unassign","lastModifiedDate":"2021-10-12"},{"lineNumber":30,"author":{"gitId":"jeremy-7007"},"content":"     */","lastModifiedDate":"2021-10-12"},{"lineNumber":31,"author":{"gitId":"jeremy-7007"},"content":"    public UnassignTaskFromPersonCommand(Index personIndex, Index taskIndex) {","lastModifiedDate":"2021-10-12"},{"lineNumber":32,"author":{"gitId":"eltonyeh"},"content":"        super(personIndex, taskIndex);","lastModifiedDate":"2021-10-26"},{"lineNumber":33,"author":{"gitId":"jeremy-7007"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":34,"author":{"gitId":"jeremy-7007"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":35,"author":{"gitId":"jeremy-7007"},"content":"    @Override","lastModifiedDate":"2021-10-12"},{"lineNumber":36,"author":{"gitId":"eltonyeh"},"content":"    protected String invalidDisplayedIndexMessage() {","lastModifiedDate":"2021-10-26"},{"lineNumber":37,"author":{"gitId":"eltonyeh"},"content":"        return Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX;","lastModifiedDate":"2021-10-26"},{"lineNumber":38,"author":{"gitId":"jeremy-7007"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":39,"author":{"gitId":"jeremy-7007"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":40,"author":{"gitId":"eltonyeh"},"content":"    @Override","lastModifiedDate":"2021-10-26"},{"lineNumber":41,"author":{"gitId":"eltonyeh"},"content":"    protected List\u003cPerson\u003e getTaskAssignableListFromModel(Model model) {","lastModifiedDate":"2021-10-26"},{"lineNumber":42,"author":{"gitId":"eltonyeh"},"content":"        return model.getFilteredPersonList();","lastModifiedDate":"2021-10-26"},{"lineNumber":43,"author":{"gitId":"jeremy-7007"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":44,"author":{"gitId":"jeremy-7007"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":45,"author":{"gitId":"eltonyeh"},"content":"    @Override","lastModifiedDate":"2021-10-26"},{"lineNumber":46,"author":{"gitId":"eltonyeh"},"content":"    protected void updateModel(Model model, TaskAssignable taskAssignableToEdit, TaskAssignable","lastModifiedDate":"2021-10-26"},{"lineNumber":47,"author":{"gitId":"eltonyeh"},"content":"            newTaskAssignable) {","lastModifiedDate":"2021-10-26"},{"lineNumber":48,"author":{"gitId":"eltonyeh"},"content":"        requireAllNonNull(model, taskAssignableToEdit, newTaskAssignable);","lastModifiedDate":"2021-10-26"},{"lineNumber":49,"author":{"gitId":"jeremy-7007"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":50,"author":{"gitId":"eltonyeh"},"content":"        if (!(taskAssignableToEdit instanceof Person \u0026\u0026 newTaskAssignable instanceof Person)) {","lastModifiedDate":"2021-10-26"},{"lineNumber":51,"author":{"gitId":"eltonyeh"},"content":"            return;","lastModifiedDate":"2021-10-26"},{"lineNumber":52,"author":{"gitId":"jeremy-7007"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":53,"author":{"gitId":"eltonyeh"},"content":"        Person personToEdit \u003d (Person) taskAssignableToEdit;","lastModifiedDate":"2021-10-26"},{"lineNumber":54,"author":{"gitId":"eltonyeh"},"content":"        Person newPerson \u003d (Person) newTaskAssignable;","lastModifiedDate":"2021-10-26"},{"lineNumber":55,"author":{"gitId":"jeremy-7007"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":56,"author":{"gitId":"jeremy-7007"},"content":"        model.setPerson(personToEdit, newPerson);","lastModifiedDate":"2021-10-12"},{"lineNumber":57,"author":{"gitId":"jeremy-7007"},"content":"        model.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2021-10-12"},{"lineNumber":58,"author":{"gitId":"jeremy-7007"},"content":"        model.updateFilteredTaskList(PREDICATE_SHOW_ALL_TASKS);","lastModifiedDate":"2021-10-12"},{"lineNumber":59,"author":{"gitId":"tanhuakun"},"content":"        model.setPersonToView(newPerson);","lastModifiedDate":"2021-11-04"},{"lineNumber":60,"author":{"gitId":"tanhuakun"},"content":"        model.setViewingType(ViewingType.PERSON);","lastModifiedDate":"2021-11-04"},{"lineNumber":61,"author":{"gitId":"eltonyeh"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":62,"author":{"gitId":"eltonyeh"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":63,"author":{"gitId":"eltonyeh"},"content":"    @Override","lastModifiedDate":"2021-10-26"},{"lineNumber":64,"author":{"gitId":"eltonyeh"},"content":"    public CommandResult execute(Model model) throws CommandException {","lastModifiedDate":"2021-10-26"},{"lineNumber":65,"author":{"gitId":"eltonyeh"},"content":"        return executeWithGivenMessage(model, \"student\");","lastModifiedDate":"2021-10-26"},{"lineNumber":66,"author":{"gitId":"jeremy-7007"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":67,"author":{"gitId":"jeremy-7007"},"content":"}","lastModifiedDate":"2021-10-12"}],"authorContributionMap":{"jeremy-7007":39,"eltonyeh":25,"tanhuakun":3}},{"path":"src/main/java/seedu/address/logic/parser/AddressBookParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2017-01-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ClearCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2017-01-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ExitCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.HelpCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ListCommand;","lastModifiedDate":"2017-01-18"},{"lineNumber":14,"author":{"gitId":"tanhuakun"},"content":"import seedu.address.logic.commands.ScheduleCommand;","lastModifiedDate":"2021-10-20"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":16,"author":{"gitId":"tanhuakun"},"content":"import seedu.address.logic.parser.groups.GroupCommandsParser;","lastModifiedDate":"2021-10-23"},{"lineNumber":17,"author":{"gitId":"tanhuakun"},"content":"import seedu.address.logic.parser.persons.PersonCommandsParser;","lastModifiedDate":"2021-10-03"},{"lineNumber":18,"author":{"gitId":"jeremy-7007"},"content":"import seedu.address.logic.parser.tasks.TaskCommandsParser;","lastModifiedDate":"2021-10-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":20,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":" * Parses user input.","lastModifiedDate":"2016-08-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"public class AddressBookParser {","lastModifiedDate":"2017-07-07"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * Used for initial separation of command word and args.","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private static final Pattern BASIC_COMMAND_FORMAT \u003d Pattern.compile(\"(?\u003ccommandWord\u003e\\\\S+)(?\u003carguments\u003e.*)\");","lastModifiedDate":"2016-09-22"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Parses user input into command for execution.","lastModifiedDate":"2016-08-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * @param userInput full user input string","lastModifiedDate":"2016-08-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     * @return the command based on the user input","lastModifiedDate":"2016-08-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public Command parseCommand(String userInput) throws ParseException {","lastModifiedDate":"2017-03-11"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        final Matcher matcher \u003d BASIC_COMMAND_FORMAT.matcher(userInput.trim());","lastModifiedDate":"2016-08-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        if (!matcher.matches()) {","lastModifiedDate":"2016-08-24"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE));","lastModifiedDate":"2017-03-11"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        final String commandWord \u003d matcher.group(\"commandWord\");","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        final String arguments \u003d matcher.group(\"arguments\");","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        switch (commandWord) {","lastModifiedDate":"2016-08-24"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"tanhuakun"},"content":"        case CliSyntax.PERSON_COMMAND:","lastModifiedDate":"2021-11-05"},{"lineNumber":48,"author":{"gitId":"tanhuakun"},"content":"            return PersonCommandsParser.parseCommand(arguments);","lastModifiedDate":"2021-10-03"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"jeremy-7007"},"content":"        case TaskCommandsParser.COMMAND_WORD:","lastModifiedDate":"2021-10-12"},{"lineNumber":51,"author":{"gitId":"jeremy-7007"},"content":"            return TaskCommandsParser.parseCommand(arguments);","lastModifiedDate":"2021-10-12"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":53,"author":{"gitId":"tanhuakun"},"content":"        case CliSyntax.GROUP_COMMAND:","lastModifiedDate":"2021-11-05"},{"lineNumber":54,"author":{"gitId":"tanhuakun"},"content":"            return GroupCommandsParser.parseCommand(arguments);","lastModifiedDate":"2021-10-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        case ClearCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":57,"author":{"gitId":"-"},"content":"            return new ClearCommand();","lastModifiedDate":"2016-09-21"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        case ListCommand.COMMAND_WORD:","lastModifiedDate":"2016-09-21"},{"lineNumber":60,"author":{"gitId":"-"},"content":"            return new ListCommand();","lastModifiedDate":"2016-09-21"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        case ExitCommand.COMMAND_WORD:","lastModifiedDate":"2016-08-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"            return new ExitCommand();","lastModifiedDate":"2016-08-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        case HelpCommand.COMMAND_WORD:","lastModifiedDate":"2016-08-26"},{"lineNumber":66,"author":{"gitId":"-"},"content":"            return new HelpCommand();","lastModifiedDate":"2016-08-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":68,"author":{"gitId":"tanhuakun"},"content":"        case ScheduleCommand.COMMAND_WORD:","lastModifiedDate":"2021-10-20"},{"lineNumber":69,"author":{"gitId":"tanhuakun"},"content":"            return new ScheduleCommand();","lastModifiedDate":"2021-10-20"},{"lineNumber":70,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        default:","lastModifiedDate":"2016-08-26"},{"lineNumber":72,"author":{"gitId":"-"},"content":"            throw new ParseException(MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2017-03-11"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"jeremy-7007":3,"tanhuakun":10,"-":63}},{"path":"src/main/java/seedu/address/logic/parser/ArgumentMultimap.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-03-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":3,"author":{"gitId":"tanhuakun"},"content":"import static seedu.address.logic.parser.ValidateUtil.hasExpectedSeparatedSegments;","lastModifiedDate":"2021-11-02"},{"lineNumber":4,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-03-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.HashMap;","lastModifiedDate":"2017-03-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-03-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Map;","lastModifiedDate":"2017-03-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-03-08"},{"lineNumber":10,"author":{"gitId":"tanhuakun"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2021-10-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-03-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":" * Stores mapping of prefixes to their respective arguments.","lastModifiedDate":"2017-03-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Each key may be associated with multiple argument values.","lastModifiedDate":"2017-03-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * Values for a given key are stored in a list, and the insertion ordering is maintained.","lastModifiedDate":"2017-03-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * Keys are unique, but the list of argument values may contain duplicate argument values, i.e. the same argument value","lastModifiedDate":"2017-03-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":" * can be inserted multiple times for the same prefix.","lastModifiedDate":"2017-03-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-03-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"public class ArgumentMultimap {","lastModifiedDate":"2017-03-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /** Prefixes mapped to their respective arguments**/","lastModifiedDate":"2017-03-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private final Map\u003cPrefix, List\u003cString\u003e\u003e argMultimap \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2017-03-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * Associates the specified argument value with {@code prefix} key in this map.","lastModifiedDate":"2017-03-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     * If the map previously contained a mapping for the key, the new value is appended to the list of existing values.","lastModifiedDate":"2017-03-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-03-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * @param prefix   Prefix key with which the specified argument value is to be associated","lastModifiedDate":"2017-03-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     * @param argValue Argument value to be associated with the specified prefix key","lastModifiedDate":"2017-03-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public void put(Prefix prefix, String argValue) {","lastModifiedDate":"2017-03-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        List\u003cString\u003e argValues \u003d getAllValues(prefix);","lastModifiedDate":"2017-03-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        argValues.add(argValue);","lastModifiedDate":"2017-03-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        argMultimap.put(prefix, argValues);","lastModifiedDate":"2017-03-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     * Returns the last value of {@code prefix}.","lastModifiedDate":"2017-03-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public Optional\u003cString\u003e getValue(Prefix prefix) {","lastModifiedDate":"2017-03-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        List\u003cString\u003e values \u003d getAllValues(prefix);","lastModifiedDate":"2017-03-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        return values.isEmpty() ? Optional.empty() : Optional.of(values.get(values.size() - 1));","lastModifiedDate":"2017-03-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     * Returns all values of {@code prefix}.","lastModifiedDate":"2017-03-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     * If the prefix does not exist or has no values, this will return an empty list.","lastModifiedDate":"2017-03-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * Modifying the returned list will not affect the underlying data structure of the ArgumentMultimap.","lastModifiedDate":"2017-03-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public List\u003cString\u003e getAllValues(Prefix prefix) {","lastModifiedDate":"2017-03-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        if (!argMultimap.containsKey(prefix)) {","lastModifiedDate":"2017-03-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"            return new ArrayList\u003c\u003e();","lastModifiedDate":"2017-03-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        return new ArrayList\u003c\u003e(argMultimap.get(prefix));","lastModifiedDate":"2017-03-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     * Returns the preamble (text before the first valid prefix). Trims any leading/trailing spaces.","lastModifiedDate":"2017-03-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public String getPreamble() {","lastModifiedDate":"2017-03-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        return getValue(new Prefix(\"\")).orElse(\"\");","lastModifiedDate":"2017-03-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-08"},{"lineNumber":63,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":64,"author":{"gitId":"tanhuakun"},"content":"    /**","lastModifiedDate":"2021-11-02"},{"lineNumber":65,"author":{"gitId":"tanhuakun"},"content":"     * Checks if the preamble has the number of segments expected , segments are separated by whitespace.","lastModifiedDate":"2021-11-02"},{"lineNumber":66,"author":{"gitId":"tanhuakun"},"content":"     * @param expected segements to expect","lastModifiedDate":"2021-11-02"},{"lineNumber":67,"author":{"gitId":"tanhuakun"},"content":"     * @return true if preamble has N segments.","lastModifiedDate":"2021-11-02"},{"lineNumber":68,"author":{"gitId":"tanhuakun"},"content":"     */","lastModifiedDate":"2021-11-02"},{"lineNumber":69,"author":{"gitId":"tanhuakun"},"content":"    public boolean preambleHasExpectedSegments(int expected) {","lastModifiedDate":"2021-11-02"},{"lineNumber":70,"author":{"gitId":"tanhuakun"},"content":"        String preamble \u003d getPreamble();","lastModifiedDate":"2021-11-02"},{"lineNumber":71,"author":{"gitId":"tanhuakun"},"content":"        return hasExpectedSeparatedSegments(preamble, expected);","lastModifiedDate":"2021-11-02"},{"lineNumber":72,"author":{"gitId":"tanhuakun"},"content":"    }","lastModifiedDate":"2021-11-02"},{"lineNumber":73,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":74,"author":{"gitId":"tanhuakun"},"content":"    /**","lastModifiedDate":"2021-10-12"},{"lineNumber":75,"author":{"gitId":"tanhuakun"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2021-10-12"},{"lineNumber":76,"author":{"gitId":"tanhuakun"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2021-10-12"},{"lineNumber":77,"author":{"gitId":"tanhuakun"},"content":"     */","lastModifiedDate":"2021-10-12"},{"lineNumber":78,"author":{"gitId":"tanhuakun"},"content":"    public boolean arePrefixesPresent(Prefix... prefixes) {","lastModifiedDate":"2021-10-12"},{"lineNumber":79,"author":{"gitId":"tanhuakun"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e getValue(prefix).isPresent());","lastModifiedDate":"2021-10-12"},{"lineNumber":80,"author":{"gitId":"tanhuakun"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":81,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-08"}],"authorContributionMap":{"tanhuakun":21,"-":60}},{"path":"src/main/java/seedu/address/logic/parser/CliSyntax.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11"},{"lineNumber":4,"author":{"gitId":"-"},"content":" * Contains Command Line Interface (CLI) syntax definitions common to multiple commands","lastModifiedDate":"2017-02-11"},{"lineNumber":5,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11"},{"lineNumber":6,"author":{"gitId":"-"},"content":"public class CliSyntax {","lastModifiedDate":"2017-02-11"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":8,"author":{"gitId":"tanhuakun"},"content":"    /* Umbrella command definitions */","lastModifiedDate":"2021-11-05"},{"lineNumber":9,"author":{"gitId":"tanhuakun"},"content":"    public static final String PERSON_COMMAND \u003d \"student\";","lastModifiedDate":"2021-11-05"},{"lineNumber":10,"author":{"gitId":"tanhuakun"},"content":"    public static final String GROUP_COMMAND \u003d \"group\";","lastModifiedDate":"2021-11-05"},{"lineNumber":11,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    /* Prefix definitions */","lastModifiedDate":"2017-02-11"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_NAME \u003d new Prefix(\"n/\");","lastModifiedDate":"2017-06-06"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_PHONE \u003d new Prefix(\"p/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_EMAIL \u003d new Prefix(\"e/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_ADDRESS \u003d new Prefix(\"a/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    public static final Prefix PREFIX_TAG \u003d new Prefix(\"t/\");","lastModifiedDate":"2017-02-11"},{"lineNumber":18,"author":{"gitId":"tanhuakun"},"content":"    public static final Prefix PREFIX_START_TIME \u003d new Prefix(\"st/\");","lastModifiedDate":"2021-10-05"},{"lineNumber":19,"author":{"gitId":"tanhuakun"},"content":"    public static final Prefix PREFIX_END_TIME \u003d new Prefix(\"et/\");","lastModifiedDate":"2021-10-05"},{"lineNumber":20,"author":{"gitId":"tanhuakun"},"content":"    public static final Prefix PREFIX_DAY \u003d new Prefix(\"d/\");","lastModifiedDate":"2021-10-05"},{"lineNumber":21,"author":{"gitId":"tanhuakun"},"content":"    public static final Prefix PREFIX_SUBJECT \u003d new Prefix(\"s/\");","lastModifiedDate":"2021-10-05"},{"lineNumber":22,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":23,"author":{"gitId":"eltonyeh"},"content":"    /* Prefixes for tasks */","lastModifiedDate":"2021-10-12"},{"lineNumber":24,"author":{"gitId":"eltonyeh"},"content":"    public static final Prefix PREFIX_DESCRIPTION \u003d new Prefix(\"n/\");","lastModifiedDate":"2021-10-12"},{"lineNumber":25,"author":{"gitId":"eltonyeh"},"content":"    public static final Prefix PREFIX_DEADLINE \u003d new Prefix(\"d/\");","lastModifiedDate":"2021-10-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":27,"author":{"gitId":"tanhuakun"},"content":"    public static final String MONDAY \u003d \"mon\";","lastModifiedDate":"2021-10-05"},{"lineNumber":28,"author":{"gitId":"tanhuakun"},"content":"    public static final String TUESDAY \u003d \"tue\";","lastModifiedDate":"2021-10-05"},{"lineNumber":29,"author":{"gitId":"tanhuakun"},"content":"    public static final String WEDNESDAY \u003d \"wed\";","lastModifiedDate":"2021-10-05"},{"lineNumber":30,"author":{"gitId":"tanhuakun"},"content":"    public static final String THURSDAY \u003d \"thu\";","lastModifiedDate":"2021-10-05"},{"lineNumber":31,"author":{"gitId":"tanhuakun"},"content":"    public static final String FRIDAY \u003d \"fri\";","lastModifiedDate":"2021-10-05"},{"lineNumber":32,"author":{"gitId":"tanhuakun"},"content":"    public static final String SATURDAY \u003d \"sat\";","lastModifiedDate":"2021-10-05"},{"lineNumber":33,"author":{"gitId":"tanhuakun"},"content":"    public static final String SUNDAY \u003d \"sun\";","lastModifiedDate":"2021-10-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-11"}],"authorContributionMap":{"tanhuakun":16,"eltonyeh":3,"-":15}},{"path":"src/main/java/seedu/address/logic/parser/ParserUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-02-11"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"tanhuakun"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-11-05"},{"lineNumber":5,"author":{"gitId":"tanhuakun"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_INDEX_GIVEN;","lastModifiedDate":"2021-11-05"},{"lineNumber":6,"author":{"gitId":"tanhuakun"},"content":"import static seedu.address.logic.parser.CliSyntax.FRIDAY;","lastModifiedDate":"2021-10-05"},{"lineNumber":7,"author":{"gitId":"tanhuakun"},"content":"import static seedu.address.logic.parser.CliSyntax.MONDAY;","lastModifiedDate":"2021-10-05"},{"lineNumber":8,"author":{"gitId":"tanhuakun"},"content":"import static seedu.address.logic.parser.CliSyntax.SATURDAY;","lastModifiedDate":"2021-10-05"},{"lineNumber":9,"author":{"gitId":"tanhuakun"},"content":"import static seedu.address.logic.parser.CliSyntax.SUNDAY;","lastModifiedDate":"2021-10-05"},{"lineNumber":10,"author":{"gitId":"tanhuakun"},"content":"import static seedu.address.logic.parser.CliSyntax.THURSDAY;","lastModifiedDate":"2021-10-05"},{"lineNumber":11,"author":{"gitId":"tanhuakun"},"content":"import static seedu.address.logic.parser.CliSyntax.TUESDAY;","lastModifiedDate":"2021-10-05"},{"lineNumber":12,"author":{"gitId":"tanhuakun"},"content":"import static seedu.address.logic.parser.CliSyntax.WEDNESDAY;","lastModifiedDate":"2021-10-05"},{"lineNumber":13,"author":{"gitId":"tanhuakun"},"content":"import static seedu.address.logic.parser.ValidateUtil.hasExpectedSeparatedSegments;","lastModifiedDate":"2021-11-05"},{"lineNumber":14,"author":{"gitId":"tanhuakun"},"content":"import static seedu.address.logic.parser.ValidateUtil.isEmptyOrOnlyWhitespace;","lastModifiedDate":"2021-11-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":16,"author":{"gitId":"tanhuakun"},"content":"import java.time.DayOfWeek;","lastModifiedDate":"2021-10-05"},{"lineNumber":17,"author":{"gitId":"tanhuakun"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-10-19"},{"lineNumber":18,"author":{"gitId":"tanhuakun"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-10-19"},{"lineNumber":19,"author":{"gitId":"tanhuakun"},"content":"import java.time.format.DateTimeParseException;","lastModifiedDate":"2021-10-19"},{"lineNumber":20,"author":{"gitId":"tanhuakun"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2017-02-11"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-02-11"},{"lineNumber":23,"author":{"gitId":"tanhuakun"},"content":"import java.util.List;","lastModifiedDate":"2021-10-12"},{"lineNumber":24,"author":{"gitId":"tanhuakun"},"content":"import java.util.Locale;","lastModifiedDate":"2021-10-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-02-11"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2017-02-11"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2018-07-10"},{"lineNumber":30,"author":{"gitId":"tanhuakun"},"content":"import seedu.address.model.group.GroupName;","lastModifiedDate":"2021-10-23"},{"lineNumber":31,"author":{"gitId":"tanhuakun"},"content":"import seedu.address.model.lesson.Subject;","lastModifiedDate":"2021-10-05"},{"lineNumber":32,"author":{"gitId":"tanhuakun"},"content":"import seedu.address.model.lesson.Timeslot;","lastModifiedDate":"2021-10-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2017-02-11"},{"lineNumber":34,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-02-11"},{"lineNumber":35,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-02-11"},{"lineNumber":36,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-02-11"},{"lineNumber":37,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-02-11"},{"lineNumber":38,"author":{"gitId":"eltonyeh"},"content":"import seedu.address.model.task.Deadline;","lastModifiedDate":"2021-10-12"},{"lineNumber":39,"author":{"gitId":"eltonyeh"},"content":"import seedu.address.model.task.Description;","lastModifiedDate":"2021-10-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":41,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-11"},{"lineNumber":42,"author":{"gitId":"-"},"content":" * Contains utility methods used for parsing strings in the various *Parser classes.","lastModifiedDate":"2017-07-18"},{"lineNumber":43,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-11"},{"lineNumber":44,"author":{"gitId":"-"},"content":"public class ParserUtil {","lastModifiedDate":"2017-02-11"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_INVALID_INDEX \u003d \"Index is not a non-zero unsigned integer.\";","lastModifiedDate":"2017-06-02"},{"lineNumber":47,"author":{"gitId":"tanhuakun"},"content":"    public static final String MESSAGE_INVALID_DAY \u003d \"Day is not recognized, it should be the short form of each day. \"","lastModifiedDate":"2021-10-05"},{"lineNumber":48,"author":{"gitId":"tanhuakun"},"content":"            + String.format(\"%s,%s,%s for example.\", MONDAY, WEDNESDAY, SATURDAY);","lastModifiedDate":"2021-10-05"},{"lineNumber":49,"author":{"gitId":"jeremy-7007"},"content":"    public static final String MESSAGE_INVALID_TWO_INDICES \u003d \"Exactly two non-zero unsigned integers expected\";","lastModifiedDate":"2021-10-12"},{"lineNumber":50,"author":{"gitId":"tanhuakun"},"content":"    public static final String DATE_TIME_FORMAT \u003d \"yyyy-MM-dd HH:mm\";","lastModifiedDate":"2021-10-19"},{"lineNumber":51,"author":{"gitId":"tanhuakun"},"content":"    public static final String INVALID_DATE_TIME_FORMAT \u003d \"Date time format not recognized, please use: \"","lastModifiedDate":"2021-10-19"},{"lineNumber":52,"author":{"gitId":"tanhuakun"},"content":"            + DATE_TIME_FORMAT;","lastModifiedDate":"2021-10-19"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-02"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-11"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     * Parses {@code oneBasedIndex} into an {@code Index} and returns it. Leading and trailing whitespaces will be","lastModifiedDate":"2017-05-25"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * trimmed.","lastModifiedDate":"2017-05-25"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     * @throws ParseException if the specified index is invalid (not non-zero unsigned integer).","lastModifiedDate":"2018-07-10"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-11"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public static Index parseIndex(String oneBasedIndex) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        String trimmedIndex \u003d oneBasedIndex.trim();","lastModifiedDate":"2017-05-25"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        if (!StringUtil.isNonZeroUnsignedInteger(trimmedIndex)) {","lastModifiedDate":"2017-06-02"},{"lineNumber":62,"author":{"gitId":"-"},"content":"            throw new ParseException(MESSAGE_INVALID_INDEX);","lastModifiedDate":"2018-07-10"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-02-11"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        return Index.fromOneBased(Integer.parseInt(trimmedIndex));","lastModifiedDate":"2017-05-25"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-11"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-11"},{"lineNumber":67,"author":{"gitId":"jeremy-7007"},"content":"    /**","lastModifiedDate":"2021-10-12"},{"lineNumber":68,"author":{"gitId":"jeremy-7007"},"content":"     * Parses {@code twoIndices} string into an {@code Index[]} and returns it. Leading and trailing whitespaces will","lastModifiedDate":"2021-10-12"},{"lineNumber":69,"author":{"gitId":"jeremy-7007"},"content":"     * be trimmed.","lastModifiedDate":"2021-10-12"},{"lineNumber":70,"author":{"gitId":"jeremy-7007"},"content":"     * @param twoIndices spaced separated string of valid Index numbers","lastModifiedDate":"2021-10-12"},{"lineNumber":71,"author":{"gitId":"jeremy-7007"},"content":"     * @return an array of two Indexes specified by the input","lastModifiedDate":"2021-10-12"},{"lineNumber":72,"author":{"gitId":"jeremy-7007"},"content":"     * @throws ParseException if the specified indices are invalid (not non-zero unsigned integer).","lastModifiedDate":"2021-10-12"},{"lineNumber":73,"author":{"gitId":"jeremy-7007"},"content":"     */","lastModifiedDate":"2021-10-12"},{"lineNumber":74,"author":{"gitId":"jeremy-7007"},"content":"    public static Index[] parseTwoIndices(String twoIndices) throws ParseException {","lastModifiedDate":"2021-10-12"},{"lineNumber":75,"author":{"gitId":"jeremy-7007"},"content":"        String trimmedTwoIndices \u003d twoIndices.trim();","lastModifiedDate":"2021-10-12"},{"lineNumber":76,"author":{"gitId":"jeremy-7007"},"content":"        String[] wordArray \u003d trimmedTwoIndices.split(\" \");","lastModifiedDate":"2021-10-12"},{"lineNumber":77,"author":{"gitId":"jeremy-7007"},"content":"        if (wordArray.length !\u003d 2) {","lastModifiedDate":"2021-10-12"},{"lineNumber":78,"author":{"gitId":"jeremy-7007"},"content":"            throw new ParseException(MESSAGE_INVALID_TWO_INDICES);","lastModifiedDate":"2021-10-12"},{"lineNumber":79,"author":{"gitId":"jeremy-7007"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":80,"author":{"gitId":"jeremy-7007"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":81,"author":{"gitId":"jeremy-7007"},"content":"        String trimmedPersonIndex \u003d wordArray[0].trim();","lastModifiedDate":"2021-10-12"},{"lineNumber":82,"author":{"gitId":"jeremy-7007"},"content":"        String trimmedTaskIndex \u003d wordArray[1].trim();","lastModifiedDate":"2021-10-12"},{"lineNumber":83,"author":{"gitId":"jeremy-7007"},"content":"        if (!StringUtil.isNonZeroUnsignedInteger(trimmedPersonIndex)) {","lastModifiedDate":"2021-10-12"},{"lineNumber":84,"author":{"gitId":"jeremy-7007"},"content":"            throw new ParseException(MESSAGE_INVALID_INDEX);","lastModifiedDate":"2021-10-12"},{"lineNumber":85,"author":{"gitId":"jeremy-7007"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":86,"author":{"gitId":"jeremy-7007"},"content":"        if (!StringUtil.isNonZeroUnsignedInteger(trimmedTaskIndex)) {","lastModifiedDate":"2021-10-12"},{"lineNumber":87,"author":{"gitId":"jeremy-7007"},"content":"            throw new ParseException(MESSAGE_INVALID_INDEX);","lastModifiedDate":"2021-10-12"},{"lineNumber":88,"author":{"gitId":"jeremy-7007"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":89,"author":{"gitId":"jeremy-7007"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":90,"author":{"gitId":"jeremy-7007"},"content":"        Index personIndex \u003d Index.fromOneBased(Integer.parseInt(trimmedPersonIndex));","lastModifiedDate":"2021-10-12"},{"lineNumber":91,"author":{"gitId":"jeremy-7007"},"content":"        Index taskIndex \u003d Index.fromOneBased(Integer.parseInt(trimmedTaskIndex));","lastModifiedDate":"2021-10-12"},{"lineNumber":92,"author":{"gitId":"jeremy-7007"},"content":"        return new Index[]{personIndex, taskIndex};","lastModifiedDate":"2021-10-12"},{"lineNumber":93,"author":{"gitId":"jeremy-7007"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":94,"author":{"gitId":"jeremy-7007"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":95,"author":{"gitId":"tanhuakun"},"content":"    /**","lastModifiedDate":"2021-10-12"},{"lineNumber":96,"author":{"gitId":"tanhuakun"},"content":"     * Parses a space separated string into a list of Indexes","lastModifiedDate":"2021-10-12"},{"lineNumber":97,"author":{"gitId":"tanhuakun"},"content":"     * @param oneBasedindexes spaced separated string of valid Index nums","lastModifiedDate":"2021-10-12"},{"lineNumber":98,"author":{"gitId":"tanhuakun"},"content":"     * @return a List of Indexes specified by the input","lastModifiedDate":"2021-10-12"},{"lineNumber":99,"author":{"gitId":"tanhuakun"},"content":"     * @throws ParseException if the specified index is invalid (not non-zero unsigned integer).","lastModifiedDate":"2021-10-12"},{"lineNumber":100,"author":{"gitId":"tanhuakun"},"content":"     */","lastModifiedDate":"2021-10-12"},{"lineNumber":101,"author":{"gitId":"tanhuakun"},"content":"    public static List\u003cIndex\u003e parseAllIndex(String oneBasedindexes) throws ParseException {","lastModifiedDate":"2021-10-12"},{"lineNumber":102,"author":{"gitId":"tanhuakun"},"content":"        String trimmedIndexes \u003d oneBasedindexes.trim();","lastModifiedDate":"2021-10-12"},{"lineNumber":103,"author":{"gitId":"tanhuakun"},"content":"        String[] splittedIndexes \u003d trimmedIndexes.split(\" \");","lastModifiedDate":"2021-10-12"},{"lineNumber":104,"author":{"gitId":"tanhuakun"},"content":"        List\u003cIndex\u003e list \u003d new ArrayList\u003c\u003e(splittedIndexes.length);","lastModifiedDate":"2021-10-12"},{"lineNumber":105,"author":{"gitId":"tanhuakun"},"content":"        for (int i \u003d 0; i \u003c splittedIndexes.length; i++) {","lastModifiedDate":"2021-10-12"},{"lineNumber":106,"author":{"gitId":"tanhuakun"},"content":"            if (!StringUtil.isNonZeroUnsignedInteger(splittedIndexes[i])) {","lastModifiedDate":"2021-10-12"},{"lineNumber":107,"author":{"gitId":"tanhuakun"},"content":"                throw new ParseException(MESSAGE_INVALID_INDEX);","lastModifiedDate":"2021-10-12"},{"lineNumber":108,"author":{"gitId":"tanhuakun"},"content":"            }","lastModifiedDate":"2021-10-12"},{"lineNumber":109,"author":{"gitId":"tanhuakun"},"content":"            list.add(Index.fromOneBased(Integer.parseInt(splittedIndexes[i])));","lastModifiedDate":"2021-10-12"},{"lineNumber":110,"author":{"gitId":"tanhuakun"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":111,"author":{"gitId":"tanhuakun"},"content":"        return list;","lastModifiedDate":"2021-10-12"},{"lineNumber":112,"author":{"gitId":"tanhuakun"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":113,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":114,"author":{"gitId":"tanhuakun"},"content":"    /**","lastModifiedDate":"2021-11-05"},{"lineNumber":115,"author":{"gitId":"tanhuakun"},"content":"     * Method for parsing indexes and throwing the relevant exceptions.","lastModifiedDate":"2021-11-05"},{"lineNumber":116,"author":{"gitId":"tanhuakun"},"content":"     * The user input provided must only contain indexes.","lastModifiedDate":"2021-11-05"},{"lineNumber":117,"author":{"gitId":"tanhuakun"},"content":"     * @param userInput to parse.","lastModifiedDate":"2021-11-05"},{"lineNumber":118,"author":{"gitId":"tanhuakun"},"content":"     * @param indexNumExpected number of indexes expected in the user input.","lastModifiedDate":"2021-11-05"},{"lineNumber":119,"author":{"gitId":"tanhuakun"},"content":"     * @param messageUsage message usage to throw if something goes wrong.","lastModifiedDate":"2021-11-05"},{"lineNumber":120,"author":{"gitId":"tanhuakun"},"content":"     * @return a list of indexes, in the order that they were placed.","lastModifiedDate":"2021-11-05"},{"lineNumber":121,"author":{"gitId":"tanhuakun"},"content":"     * @throws ParseException","lastModifiedDate":"2021-11-05"},{"lineNumber":122,"author":{"gitId":"tanhuakun"},"content":"     */","lastModifiedDate":"2021-11-05"},{"lineNumber":123,"author":{"gitId":"tanhuakun"},"content":"    public static List\u003cIndex\u003e parseOnlyIndexString(String userInput, int indexNumExpected, String messageUsage)","lastModifiedDate":"2021-11-05"},{"lineNumber":124,"author":{"gitId":"tanhuakun"},"content":"            throws ParseException {","lastModifiedDate":"2021-11-05"},{"lineNumber":125,"author":{"gitId":"tanhuakun"},"content":"        if (isEmptyOrOnlyWhitespace(userInput) || !hasExpectedSeparatedSegments(userInput, indexNumExpected)) {","lastModifiedDate":"2021-11-05"},{"lineNumber":126,"author":{"gitId":"tanhuakun"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2021-11-05"},{"lineNumber":127,"author":{"gitId":"tanhuakun"},"content":"                    messageUsage));","lastModifiedDate":"2021-11-05"},{"lineNumber":128,"author":{"gitId":"tanhuakun"},"content":"        }","lastModifiedDate":"2021-11-05"},{"lineNumber":129,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":130,"author":{"gitId":"tanhuakun"},"content":"        List\u003cIndex\u003e indexes;","lastModifiedDate":"2021-11-05"},{"lineNumber":131,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":132,"author":{"gitId":"tanhuakun"},"content":"        try {","lastModifiedDate":"2021-11-05"},{"lineNumber":133,"author":{"gitId":"tanhuakun"},"content":"            indexes \u003d parseAllIndex(userInput);","lastModifiedDate":"2021-11-05"},{"lineNumber":134,"author":{"gitId":"tanhuakun"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2021-11-05"},{"lineNumber":135,"author":{"gitId":"tanhuakun"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2021-11-05"},{"lineNumber":136,"author":{"gitId":"tanhuakun"},"content":"                    MESSAGE_INVALID_INDEX_GIVEN), pe);","lastModifiedDate":"2021-11-05"},{"lineNumber":137,"author":{"gitId":"tanhuakun"},"content":"        }","lastModifiedDate":"2021-11-05"},{"lineNumber":138,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":139,"author":{"gitId":"tanhuakun"},"content":"        return indexes;","lastModifiedDate":"2021-11-05"},{"lineNumber":140,"author":{"gitId":"tanhuakun"},"content":"    }","lastModifiedDate":"2021-11-05"},{"lineNumber":141,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-29"},{"lineNumber":143,"author":{"gitId":"-"},"content":"     * Parses a {@code String name} into a {@code Name}.","lastModifiedDate":"2017-05-29"},{"lineNumber":144,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-29"},{"lineNumber":145,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-29"},{"lineNumber":146,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code name} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":147,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-29"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    public static Name parseName(String name) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        requireNonNull(name);","lastModifiedDate":"2017-05-29"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        String trimmedName \u003d name.trim();","lastModifiedDate":"2017-05-29"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        if (!Name.isValidName(trimmedName)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":152,"author":{"gitId":"-"},"content":"            throw new ParseException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        return new Name(trimmedName);","lastModifiedDate":"2017-05-29"},{"lineNumber":155,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-29"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-29"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":158,"author":{"gitId":"-"},"content":"     * Parses a {@code String phone} into a {@code Phone}.","lastModifiedDate":"2017-05-30"},{"lineNumber":159,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":160,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":161,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code phone} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":162,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":163,"author":{"gitId":"-"},"content":"    public static Phone parsePhone(String phone) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        requireNonNull(phone);","lastModifiedDate":"2017-05-30"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        String trimmedPhone \u003d phone.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        if (!Phone.isValidPhone(trimmedPhone)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":167,"author":{"gitId":"-"},"content":"            throw new ParseException(Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        return new Phone(trimmedPhone);","lastModifiedDate":"2017-05-30"},{"lineNumber":170,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":173,"author":{"gitId":"-"},"content":"     * Parses a {@code String address} into an {@code Address}.","lastModifiedDate":"2017-05-30"},{"lineNumber":174,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":175,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":176,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code address} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":177,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":178,"author":{"gitId":"-"},"content":"    public static Address parseAddress(String address) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        requireNonNull(address);","lastModifiedDate":"2017-05-30"},{"lineNumber":180,"author":{"gitId":"-"},"content":"        String trimmedAddress \u003d address.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        if (!Address.isValidAddress(trimmedAddress)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":182,"author":{"gitId":"-"},"content":"            throw new ParseException(Address.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":183,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":184,"author":{"gitId":"-"},"content":"        return new Address(trimmedAddress);","lastModifiedDate":"2017-05-30"},{"lineNumber":185,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":187,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":188,"author":{"gitId":"-"},"content":"     * Parses a {@code String email} into an {@code Email}.","lastModifiedDate":"2017-05-30"},{"lineNumber":189,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":190,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":191,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code email} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":192,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":193,"author":{"gitId":"-"},"content":"    public static Email parseEmail(String email) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":194,"author":{"gitId":"-"},"content":"        requireNonNull(email);","lastModifiedDate":"2017-05-30"},{"lineNumber":195,"author":{"gitId":"-"},"content":"        String trimmedEmail \u003d email.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":196,"author":{"gitId":"-"},"content":"        if (!Email.isValidEmail(trimmedEmail)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":197,"author":{"gitId":"-"},"content":"            throw new ParseException(Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":198,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":199,"author":{"gitId":"-"},"content":"        return new Email(trimmedEmail);","lastModifiedDate":"2017-05-30"},{"lineNumber":200,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":201,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":202,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-30"},{"lineNumber":203,"author":{"gitId":"-"},"content":"     * Parses a {@code String tag} into a {@code Tag}.","lastModifiedDate":"2017-05-30"},{"lineNumber":204,"author":{"gitId":"-"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2017-05-30"},{"lineNumber":205,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-05-30"},{"lineNumber":206,"author":{"gitId":"-"},"content":"     * @throws ParseException if the given {@code tag} is invalid.","lastModifiedDate":"2018-07-10"},{"lineNumber":207,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-30"},{"lineNumber":208,"author":{"gitId":"-"},"content":"    public static Tag parseTag(String tag) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":209,"author":{"gitId":"-"},"content":"        requireNonNull(tag);","lastModifiedDate":"2017-05-30"},{"lineNumber":210,"author":{"gitId":"-"},"content":"        String trimmedTag \u003d tag.trim();","lastModifiedDate":"2017-05-30"},{"lineNumber":211,"author":{"gitId":"-"},"content":"        if (!Tag.isValidTagName(trimmedTag)) {","lastModifiedDate":"2017-05-30"},{"lineNumber":212,"author":{"gitId":"-"},"content":"            throw new ParseException(Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":213,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-30"},{"lineNumber":214,"author":{"gitId":"-"},"content":"        return new Tag(trimmedTag);","lastModifiedDate":"2017-05-30"},{"lineNumber":215,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-30"},{"lineNumber":216,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-30"},{"lineNumber":217,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-11"},{"lineNumber":218,"author":{"gitId":"-"},"content":"     * Parses {@code Collection\u003cString\u003e tags} into a {@code Set\u003cTag\u003e}.","lastModifiedDate":"2017-03-07"},{"lineNumber":219,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-11"},{"lineNumber":220,"author":{"gitId":"-"},"content":"    public static Set\u003cTag\u003e parseTags(Collection\u003cString\u003e tags) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":221,"author":{"gitId":"-"},"content":"        requireNonNull(tags);","lastModifiedDate":"2017-05-15"},{"lineNumber":222,"author":{"gitId":"-"},"content":"        final Set\u003cTag\u003e tagSet \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2017-02-11"},{"lineNumber":223,"author":{"gitId":"-"},"content":"        for (String tagName : tags) {","lastModifiedDate":"2017-02-11"},{"lineNumber":224,"author":{"gitId":"-"},"content":"            tagSet.add(parseTag(tagName));","lastModifiedDate":"2017-05-30"},{"lineNumber":225,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-02-11"},{"lineNumber":226,"author":{"gitId":"-"},"content":"        return tagSet;","lastModifiedDate":"2017-03-07"},{"lineNumber":227,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-11"},{"lineNumber":228,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":229,"author":{"gitId":"eltonyeh"},"content":"    /**","lastModifiedDate":"2021-10-12"},{"lineNumber":230,"author":{"gitId":"eltonyeh"},"content":"     * Parses a {@code String description} into a {@code Description}.","lastModifiedDate":"2021-10-12"},{"lineNumber":231,"author":{"gitId":"eltonyeh"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2021-10-12"},{"lineNumber":232,"author":{"gitId":"eltonyeh"},"content":"     *","lastModifiedDate":"2021-10-12"},{"lineNumber":233,"author":{"gitId":"eltonyeh"},"content":"     * @throws ParseException if the given {@code description} is invalid.","lastModifiedDate":"2021-10-12"},{"lineNumber":234,"author":{"gitId":"eltonyeh"},"content":"     */","lastModifiedDate":"2021-10-12"},{"lineNumber":235,"author":{"gitId":"eltonyeh"},"content":"    public static Description parseTaskDescription(String description) throws ParseException {","lastModifiedDate":"2021-10-12"},{"lineNumber":236,"author":{"gitId":"eltonyeh"},"content":"        requireNonNull(description);","lastModifiedDate":"2021-10-12"},{"lineNumber":237,"author":{"gitId":"eltonyeh"},"content":"        String trimmedDescription \u003d description.trim();","lastModifiedDate":"2021-10-12"},{"lineNumber":238,"author":{"gitId":"eltonyeh"},"content":"        if (!Description.isValidDescription(trimmedDescription)) {","lastModifiedDate":"2021-10-12"},{"lineNumber":239,"author":{"gitId":"eltonyeh"},"content":"            throw new ParseException(Description.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-12"},{"lineNumber":240,"author":{"gitId":"eltonyeh"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":241,"author":{"gitId":"eltonyeh"},"content":"        return new Description(trimmedDescription);","lastModifiedDate":"2021-10-12"},{"lineNumber":242,"author":{"gitId":"eltonyeh"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":243,"author":{"gitId":"eltonyeh"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":244,"author":{"gitId":"eltonyeh"},"content":"    /**","lastModifiedDate":"2021-10-12"},{"lineNumber":245,"author":{"gitId":"eltonyeh"},"content":"     * Parses a {@code String deadline} into a {@code Deadline}.","lastModifiedDate":"2021-10-12"},{"lineNumber":246,"author":{"gitId":"eltonyeh"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2021-10-12"},{"lineNumber":247,"author":{"gitId":"eltonyeh"},"content":"     *","lastModifiedDate":"2021-10-12"},{"lineNumber":248,"author":{"gitId":"eltonyeh"},"content":"     * @throws ParseException if the given {@code deadline} is invalid.","lastModifiedDate":"2021-10-12"},{"lineNumber":249,"author":{"gitId":"eltonyeh"},"content":"     */","lastModifiedDate":"2021-10-12"},{"lineNumber":250,"author":{"gitId":"eltonyeh"},"content":"    public static Deadline parseTaskDeadline(String deadline) throws ParseException {","lastModifiedDate":"2021-10-12"},{"lineNumber":251,"author":{"gitId":"eltonyeh"},"content":"        requireNonNull(deadline);","lastModifiedDate":"2021-10-12"},{"lineNumber":252,"author":{"gitId":"eltonyeh"},"content":"        String trimmedDeadline \u003d deadline.trim();","lastModifiedDate":"2021-10-12"},{"lineNumber":253,"author":{"gitId":"eltonyeh"},"content":"        if (!Deadline.isValidDeadline(trimmedDeadline)) {","lastModifiedDate":"2021-10-12"},{"lineNumber":254,"author":{"gitId":"eltonyeh"},"content":"            throw new ParseException(Deadline.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-12"},{"lineNumber":255,"author":{"gitId":"eltonyeh"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":256,"author":{"gitId":"eltonyeh"},"content":"        return new Deadline(trimmedDeadline);","lastModifiedDate":"2021-10-12"},{"lineNumber":257,"author":{"gitId":"eltonyeh"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":258,"author":{"gitId":"eltonyeh"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":259,"author":{"gitId":"tanhuakun"},"content":"    /**","lastModifiedDate":"2021-10-05"},{"lineNumber":260,"author":{"gitId":"tanhuakun"},"content":"     * Parses a {@code String subject} into a {@code Subject}.","lastModifiedDate":"2021-10-05"},{"lineNumber":261,"author":{"gitId":"tanhuakun"},"content":"     * @param subject string name of a subject","lastModifiedDate":"2021-10-05"},{"lineNumber":262,"author":{"gitId":"tanhuakun"},"content":"     * @return Subject that was represented by string","lastModifiedDate":"2021-10-05"},{"lineNumber":263,"author":{"gitId":"tanhuakun"},"content":"     * @throws ParseException if the {@code subject} is invalid.","lastModifiedDate":"2021-10-05"},{"lineNumber":264,"author":{"gitId":"tanhuakun"},"content":"     */","lastModifiedDate":"2021-10-05"},{"lineNumber":265,"author":{"gitId":"tanhuakun"},"content":"    public static Subject parseSubject(String subject) throws ParseException {","lastModifiedDate":"2021-10-05"},{"lineNumber":266,"author":{"gitId":"tanhuakun"},"content":"        requireNonNull(subject);","lastModifiedDate":"2021-10-05"},{"lineNumber":267,"author":{"gitId":"tanhuakun"},"content":"        subject \u003d subject.trim();","lastModifiedDate":"2021-10-05"},{"lineNumber":268,"author":{"gitId":"tanhuakun"},"content":"        if (!Subject.isValidSubject(subject)) {","lastModifiedDate":"2021-10-12"},{"lineNumber":269,"author":{"gitId":"tanhuakun"},"content":"            throw new ParseException(Subject.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-05"},{"lineNumber":270,"author":{"gitId":"tanhuakun"},"content":"        }","lastModifiedDate":"2021-10-05"},{"lineNumber":271,"author":{"gitId":"tanhuakun"},"content":"        return new Subject(subject);","lastModifiedDate":"2021-10-05"},{"lineNumber":272,"author":{"gitId":"tanhuakun"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":273,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":274,"author":{"gitId":"tanhuakun"},"content":"    /**","lastModifiedDate":"2021-10-05"},{"lineNumber":275,"author":{"gitId":"tanhuakun"},"content":"     * Parses a {@code String startTime} and {@code String endTime} into a {@code Timeslot}","lastModifiedDate":"2021-10-05"},{"lineNumber":276,"author":{"gitId":"tanhuakun"},"content":"     * @param startTime start time in required format","lastModifiedDate":"2021-10-05"},{"lineNumber":277,"author":{"gitId":"tanhuakun"},"content":"     * @param endTime end time in required format","lastModifiedDate":"2021-10-05"},{"lineNumber":278,"author":{"gitId":"tanhuakun"},"content":"     * @return Timeslot with the given start and end times","lastModifiedDate":"2021-10-05"},{"lineNumber":279,"author":{"gitId":"tanhuakun"},"content":"     * @throws ParseException if the timings are invalid","lastModifiedDate":"2021-10-05"},{"lineNumber":280,"author":{"gitId":"tanhuakun"},"content":"     */","lastModifiedDate":"2021-10-05"},{"lineNumber":281,"author":{"gitId":"tanhuakun"},"content":"    public static Timeslot parseTimeslot(String startTime, String endTime) throws ParseException {","lastModifiedDate":"2021-10-05"},{"lineNumber":282,"author":{"gitId":"tanhuakun"},"content":"        requireNonNull(startTime);","lastModifiedDate":"2021-10-05"},{"lineNumber":283,"author":{"gitId":"tanhuakun"},"content":"        requireNonNull(endTime);","lastModifiedDate":"2021-10-05"},{"lineNumber":284,"author":{"gitId":"tanhuakun"},"content":"        startTime \u003d startTime.trim();","lastModifiedDate":"2021-10-05"},{"lineNumber":285,"author":{"gitId":"tanhuakun"},"content":"        endTime \u003d endTime.trim();","lastModifiedDate":"2021-10-05"},{"lineNumber":286,"author":{"gitId":"tanhuakun"},"content":"        if (!Timeslot.isValidTimeslot(startTime, endTime)) {","lastModifiedDate":"2021-10-05"},{"lineNumber":287,"author":{"gitId":"tanhuakun"},"content":"            throw new ParseException(Timeslot.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-05"},{"lineNumber":288,"author":{"gitId":"tanhuakun"},"content":"        }","lastModifiedDate":"2021-10-05"},{"lineNumber":289,"author":{"gitId":"tanhuakun"},"content":"        return new Timeslot(startTime, endTime);","lastModifiedDate":"2021-10-05"},{"lineNumber":290,"author":{"gitId":"tanhuakun"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":291,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":292,"author":{"gitId":"tanhuakun"},"content":"    /**","lastModifiedDate":"2021-10-05"},{"lineNumber":293,"author":{"gitId":"tanhuakun"},"content":"     * Parses a {@code String day} into a {@code DayOfWeek}","lastModifiedDate":"2021-10-05"},{"lineNumber":294,"author":{"gitId":"tanhuakun"},"content":"     * @param day String representation of a day","lastModifiedDate":"2021-10-05"},{"lineNumber":295,"author":{"gitId":"tanhuakun"},"content":"     * @return a DayOfWeek with the day represented in the String","lastModifiedDate":"2021-10-05"},{"lineNumber":296,"author":{"gitId":"tanhuakun"},"content":"     * @throws ParseException if the String is invalid","lastModifiedDate":"2021-10-05"},{"lineNumber":297,"author":{"gitId":"tanhuakun"},"content":"     */","lastModifiedDate":"2021-10-05"},{"lineNumber":298,"author":{"gitId":"tanhuakun"},"content":"    public static DayOfWeek parseDayOfWeek(String day) throws ParseException {","lastModifiedDate":"2021-10-05"},{"lineNumber":299,"author":{"gitId":"tanhuakun"},"content":"        requireNonNull(day);","lastModifiedDate":"2021-10-05"},{"lineNumber":300,"author":{"gitId":"tanhuakun"},"content":"        day \u003d day.trim().toLowerCase(Locale.ROOT);","lastModifiedDate":"2021-10-05"},{"lineNumber":301,"author":{"gitId":"tanhuakun"},"content":"        int dayNum;","lastModifiedDate":"2021-10-05"},{"lineNumber":302,"author":{"gitId":"tanhuakun"},"content":"        switch(day) {","lastModifiedDate":"2021-10-05"},{"lineNumber":303,"author":{"gitId":"tanhuakun"},"content":"        case MONDAY:","lastModifiedDate":"2021-10-05"},{"lineNumber":304,"author":{"gitId":"tanhuakun"},"content":"            dayNum \u003d 1;","lastModifiedDate":"2021-10-05"},{"lineNumber":305,"author":{"gitId":"tanhuakun"},"content":"            break;","lastModifiedDate":"2021-10-05"},{"lineNumber":306,"author":{"gitId":"tanhuakun"},"content":"        case TUESDAY:","lastModifiedDate":"2021-10-05"},{"lineNumber":307,"author":{"gitId":"tanhuakun"},"content":"            dayNum \u003d 2;","lastModifiedDate":"2021-10-05"},{"lineNumber":308,"author":{"gitId":"tanhuakun"},"content":"            break;","lastModifiedDate":"2021-10-05"},{"lineNumber":309,"author":{"gitId":"tanhuakun"},"content":"        case WEDNESDAY:","lastModifiedDate":"2021-10-05"},{"lineNumber":310,"author":{"gitId":"tanhuakun"},"content":"            dayNum \u003d 3;","lastModifiedDate":"2021-10-05"},{"lineNumber":311,"author":{"gitId":"tanhuakun"},"content":"            break;","lastModifiedDate":"2021-10-05"},{"lineNumber":312,"author":{"gitId":"tanhuakun"},"content":"        case THURSDAY:","lastModifiedDate":"2021-10-05"},{"lineNumber":313,"author":{"gitId":"tanhuakun"},"content":"            dayNum \u003d 4;","lastModifiedDate":"2021-10-05"},{"lineNumber":314,"author":{"gitId":"tanhuakun"},"content":"            break;","lastModifiedDate":"2021-10-05"},{"lineNumber":315,"author":{"gitId":"tanhuakun"},"content":"        case FRIDAY:","lastModifiedDate":"2021-10-05"},{"lineNumber":316,"author":{"gitId":"tanhuakun"},"content":"            dayNum \u003d 5;","lastModifiedDate":"2021-10-05"},{"lineNumber":317,"author":{"gitId":"tanhuakun"},"content":"            break;","lastModifiedDate":"2021-10-05"},{"lineNumber":318,"author":{"gitId":"tanhuakun"},"content":"        case SATURDAY:","lastModifiedDate":"2021-10-05"},{"lineNumber":319,"author":{"gitId":"tanhuakun"},"content":"            dayNum \u003d 6;","lastModifiedDate":"2021-10-05"},{"lineNumber":320,"author":{"gitId":"tanhuakun"},"content":"            break;","lastModifiedDate":"2021-10-05"},{"lineNumber":321,"author":{"gitId":"tanhuakun"},"content":"        case SUNDAY:","lastModifiedDate":"2021-10-05"},{"lineNumber":322,"author":{"gitId":"tanhuakun"},"content":"            dayNum \u003d 7;","lastModifiedDate":"2021-10-05"},{"lineNumber":323,"author":{"gitId":"tanhuakun"},"content":"            break;","lastModifiedDate":"2021-10-05"},{"lineNumber":324,"author":{"gitId":"tanhuakun"},"content":"        default:","lastModifiedDate":"2021-10-05"},{"lineNumber":325,"author":{"gitId":"tanhuakun"},"content":"            throw new ParseException(MESSAGE_INVALID_DAY);","lastModifiedDate":"2021-10-05"},{"lineNumber":326,"author":{"gitId":"tanhuakun"},"content":"        }","lastModifiedDate":"2021-10-05"},{"lineNumber":327,"author":{"gitId":"tanhuakun"},"content":"        return DayOfWeek.of(dayNum);","lastModifiedDate":"2021-10-05"},{"lineNumber":328,"author":{"gitId":"tanhuakun"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":329,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":330,"author":{"gitId":"tanhuakun"},"content":"    /**","lastModifiedDate":"2021-10-19"},{"lineNumber":331,"author":{"gitId":"tanhuakun"},"content":"     * Local date time parser","lastModifiedDate":"2021-10-19"},{"lineNumber":332,"author":{"gitId":"tanhuakun"},"content":"     * @param str string to parse, it will be trimmed","lastModifiedDate":"2021-10-19"},{"lineNumber":333,"author":{"gitId":"tanhuakun"},"content":"     * @return LocalDateTime represented by string","lastModifiedDate":"2021-10-19"},{"lineNumber":334,"author":{"gitId":"tanhuakun"},"content":"     * @throws ParseException if date_time_format is not valid","lastModifiedDate":"2021-10-19"},{"lineNumber":335,"author":{"gitId":"tanhuakun"},"content":"     */","lastModifiedDate":"2021-10-19"},{"lineNumber":336,"author":{"gitId":"tanhuakun"},"content":"    public static LocalDateTime parseLocalDateTime(String str) throws ParseException {","lastModifiedDate":"2021-10-19"},{"lineNumber":337,"author":{"gitId":"tanhuakun"},"content":"        requireNonNull(str);","lastModifiedDate":"2021-10-19"},{"lineNumber":338,"author":{"gitId":"tanhuakun"},"content":"        str \u003d str.trim();","lastModifiedDate":"2021-10-19"},{"lineNumber":339,"author":{"gitId":"tanhuakun"},"content":"        try {","lastModifiedDate":"2021-10-19"},{"lineNumber":340,"author":{"gitId":"tanhuakun"},"content":"            LocalDateTime dateTime \u003d LocalDateTime.parse(str, DateTimeFormatter.ofPattern(DATE_TIME_FORMAT));","lastModifiedDate":"2021-10-19"},{"lineNumber":341,"author":{"gitId":"tanhuakun"},"content":"            return dateTime;","lastModifiedDate":"2021-10-19"},{"lineNumber":342,"author":{"gitId":"tanhuakun"},"content":"        } catch (DateTimeParseException p) {","lastModifiedDate":"2021-10-19"},{"lineNumber":343,"author":{"gitId":"tanhuakun"},"content":"            System.out.println(p.getMessage());","lastModifiedDate":"2021-10-19"},{"lineNumber":344,"author":{"gitId":"tanhuakun"},"content":"            throw new ParseException(INVALID_DATE_TIME_FORMAT);","lastModifiedDate":"2021-10-19"},{"lineNumber":345,"author":{"gitId":"tanhuakun"},"content":"        }","lastModifiedDate":"2021-10-19"},{"lineNumber":346,"author":{"gitId":"tanhuakun"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":347,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":348,"author":{"gitId":"tanhuakun"},"content":"    public static String localDateTimeAsString(LocalDateTime dateTime) {","lastModifiedDate":"2021-10-19"},{"lineNumber":349,"author":{"gitId":"tanhuakun"},"content":"        return dateTime.format(DateTimeFormatter.ofPattern(DATE_TIME_FORMAT));","lastModifiedDate":"2021-10-19"},{"lineNumber":350,"author":{"gitId":"tanhuakun"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":351,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":352,"author":{"gitId":"tanhuakun"},"content":"    /**","lastModifiedDate":"2021-10-23"},{"lineNumber":353,"author":{"gitId":"tanhuakun"},"content":"     * Parses a {@code String name} into a {@code GroupName}.","lastModifiedDate":"2021-10-23"},{"lineNumber":354,"author":{"gitId":"tanhuakun"},"content":"     * Leading and trailing whitespaces will be trimmed.","lastModifiedDate":"2021-10-23"},{"lineNumber":355,"author":{"gitId":"tanhuakun"},"content":"     *","lastModifiedDate":"2021-10-23"},{"lineNumber":356,"author":{"gitId":"tanhuakun"},"content":"     * @throws ParseException if the given {@code name} is invalid.","lastModifiedDate":"2021-10-23"},{"lineNumber":357,"author":{"gitId":"tanhuakun"},"content":"     */","lastModifiedDate":"2021-10-23"},{"lineNumber":358,"author":{"gitId":"tanhuakun"},"content":"    public static GroupName parseGroupName(String name) throws ParseException {","lastModifiedDate":"2021-10-23"},{"lineNumber":359,"author":{"gitId":"tanhuakun"},"content":"        requireNonNull(name);","lastModifiedDate":"2021-10-23"},{"lineNumber":360,"author":{"gitId":"tanhuakun"},"content":"        String trimmedName \u003d name.trim();","lastModifiedDate":"2021-10-23"},{"lineNumber":361,"author":{"gitId":"tanhuakun"},"content":"        if (!GroupName.isValidName(trimmedName)) {","lastModifiedDate":"2021-10-23"},{"lineNumber":362,"author":{"gitId":"tanhuakun"},"content":"            throw new ParseException(GroupName.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-23"},{"lineNumber":363,"author":{"gitId":"tanhuakun"},"content":"        }","lastModifiedDate":"2021-10-23"},{"lineNumber":364,"author":{"gitId":"tanhuakun"},"content":"        return new GroupName(trimmedName);","lastModifiedDate":"2021-10-23"},{"lineNumber":365,"author":{"gitId":"tanhuakun"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":366,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-11"}],"authorContributionMap":{"jeremy-7007":29,"tanhuakun":181,"eltonyeh":32,"-":124}},{"path":"src/main/java/seedu/address/logic/parser/ValidateUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tanhuakun"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2021-10-12"},{"lineNumber":2,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":3,"author":{"gitId":"tanhuakun"},"content":"/**","lastModifiedDate":"2021-10-12"},{"lineNumber":4,"author":{"gitId":"tanhuakun"},"content":" * Contains utility methods used for validating inputs if required","lastModifiedDate":"2021-10-12"},{"lineNumber":5,"author":{"gitId":"tanhuakun"},"content":" */","lastModifiedDate":"2021-10-12"},{"lineNumber":6,"author":{"gitId":"tanhuakun"},"content":"public class ValidateUtil {","lastModifiedDate":"2021-10-12"},{"lineNumber":7,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":8,"author":{"gitId":"tanhuakun"},"content":"    public static final String DAY_OF_WEEK_CONSTRAINTS \u003d \"Integer for day must be 1-7\";","lastModifiedDate":"2021-10-12"},{"lineNumber":9,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":10,"author":{"gitId":"tanhuakun"},"content":"    /**","lastModifiedDate":"2021-10-12"},{"lineNumber":11,"author":{"gitId":"tanhuakun"},"content":"     * Tests if integer is valid for DayOfWeek java class","lastModifiedDate":"2021-10-12"},{"lineNumber":12,"author":{"gitId":"tanhuakun"},"content":"     * @param test int to test","lastModifiedDate":"2021-10-12"},{"lineNumber":13,"author":{"gitId":"tanhuakun"},"content":"     * @return true if int is valid","lastModifiedDate":"2021-10-12"},{"lineNumber":14,"author":{"gitId":"tanhuakun"},"content":"     */","lastModifiedDate":"2021-10-12"},{"lineNumber":15,"author":{"gitId":"tanhuakun"},"content":"    public static boolean validDayOfWeekInteger(int test) {","lastModifiedDate":"2021-10-12"},{"lineNumber":16,"author":{"gitId":"tanhuakun"},"content":"        return test \u003e\u003d 1 \u0026\u0026 test \u003c\u003d 7;","lastModifiedDate":"2021-10-12"},{"lineNumber":17,"author":{"gitId":"tanhuakun"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":18,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":19,"author":{"gitId":"tanhuakun"},"content":"    /**","lastModifiedDate":"2021-11-02"},{"lineNumber":20,"author":{"gitId":"tanhuakun"},"content":"     * Tests if a String is empty or only whitespace.","lastModifiedDate":"2021-11-02"},{"lineNumber":21,"author":{"gitId":"tanhuakun"},"content":"     * @param str to check","lastModifiedDate":"2021-11-02"},{"lineNumber":22,"author":{"gitId":"tanhuakun"},"content":"     * @return true if the String is empty or only contains whitespace.","lastModifiedDate":"2021-11-02"},{"lineNumber":23,"author":{"gitId":"tanhuakun"},"content":"     */","lastModifiedDate":"2021-11-02"},{"lineNumber":24,"author":{"gitId":"tanhuakun"},"content":"    public static boolean isEmptyOrOnlyWhitespace(String str) {","lastModifiedDate":"2021-11-02"},{"lineNumber":25,"author":{"gitId":"tanhuakun"},"content":"        String trimmed \u003d str.trim();","lastModifiedDate":"2021-11-02"},{"lineNumber":26,"author":{"gitId":"tanhuakun"},"content":"        return trimmed.equals(\"\");","lastModifiedDate":"2021-11-02"},{"lineNumber":27,"author":{"gitId":"tanhuakun"},"content":"    }","lastModifiedDate":"2021-11-02"},{"lineNumber":28,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":29,"author":{"gitId":"tanhuakun"},"content":"    /**","lastModifiedDate":"2021-11-02"},{"lineNumber":30,"author":{"gitId":"tanhuakun"},"content":"     * Checks if given string has the expected number of segments. Segments are separated by whitespace.","lastModifiedDate":"2021-11-02"},{"lineNumber":31,"author":{"gitId":"tanhuakun"},"content":"     * @param str to check","lastModifiedDate":"2021-11-02"},{"lineNumber":32,"author":{"gitId":"tanhuakun"},"content":"     * @param expected number of segments","lastModifiedDate":"2021-11-02"},{"lineNumber":33,"author":{"gitId":"tanhuakun"},"content":"     * @return true if given string has the expected number of segments.","lastModifiedDate":"2021-11-02"},{"lineNumber":34,"author":{"gitId":"tanhuakun"},"content":"     */","lastModifiedDate":"2021-11-02"},{"lineNumber":35,"author":{"gitId":"tanhuakun"},"content":"    public static boolean hasExpectedSeparatedSegments(String str, int expected) {","lastModifiedDate":"2021-11-02"},{"lineNumber":36,"author":{"gitId":"tanhuakun"},"content":"        String[] split \u003d str.split(\" \");","lastModifiedDate":"2021-11-02"},{"lineNumber":37,"author":{"gitId":"tanhuakun"},"content":"        int count \u003d 0;","lastModifiedDate":"2021-11-02"},{"lineNumber":38,"author":{"gitId":"tanhuakun"},"content":"        for (String segment : split) {","lastModifiedDate":"2021-11-02"},{"lineNumber":39,"author":{"gitId":"tanhuakun"},"content":"            if (!isEmptyOrOnlyWhitespace(segment)) {","lastModifiedDate":"2021-11-02"},{"lineNumber":40,"author":{"gitId":"tanhuakun"},"content":"                count++;","lastModifiedDate":"2021-11-02"},{"lineNumber":41,"author":{"gitId":"tanhuakun"},"content":"            }","lastModifiedDate":"2021-11-02"},{"lineNumber":42,"author":{"gitId":"tanhuakun"},"content":"        }","lastModifiedDate":"2021-11-02"},{"lineNumber":43,"author":{"gitId":"tanhuakun"},"content":"        return count \u003d\u003d expected;","lastModifiedDate":"2021-11-02"},{"lineNumber":44,"author":{"gitId":"tanhuakun"},"content":"    }","lastModifiedDate":"2021-11-02"},{"lineNumber":45,"author":{"gitId":"tanhuakun"},"content":"}","lastModifiedDate":"2021-10-12"}],"authorContributionMap":{"tanhuakun":45}},{"path":"src/main/java/seedu/address/logic/parser/groups/AddGroupCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tanhuakun"},"content":"package seedu.address.logic.parser.groups;","lastModifiedDate":"2021-10-23"},{"lineNumber":2,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":3,"author":{"gitId":"tanhuakun"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-10-23"},{"lineNumber":4,"author":{"gitId":"tanhuakun"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_INDEX_GIVEN;","lastModifiedDate":"2021-11-02"},{"lineNumber":5,"author":{"gitId":"tanhuakun"},"content":"import static seedu.address.logic.parser.CliSyntax.GROUP_COMMAND;","lastModifiedDate":"2021-11-05"},{"lineNumber":6,"author":{"gitId":"tanhuakun"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2021-10-23"},{"lineNumber":7,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":8,"author":{"gitId":"tanhuakun"},"content":"import java.util.List;","lastModifiedDate":"2021-10-23"},{"lineNumber":9,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":10,"author":{"gitId":"tanhuakun"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-10-23"},{"lineNumber":11,"author":{"gitId":"tanhuakun"},"content":"import seedu.address.logic.commands.groups.AddGroupCommand;","lastModifiedDate":"2021-10-23"},{"lineNumber":12,"author":{"gitId":"tanhuakun"},"content":"import seedu.address.logic.parser.ArgumentMultimap;","lastModifiedDate":"2021-10-23"},{"lineNumber":13,"author":{"gitId":"tanhuakun"},"content":"import seedu.address.logic.parser.ArgumentTokenizer;","lastModifiedDate":"2021-10-23"},{"lineNumber":14,"author":{"gitId":"tanhuakun"},"content":"import seedu.address.logic.parser.Parser;","lastModifiedDate":"2021-10-23"},{"lineNumber":15,"author":{"gitId":"tanhuakun"},"content":"import seedu.address.logic.parser.ParserUtil;","lastModifiedDate":"2021-10-23"},{"lineNumber":16,"author":{"gitId":"tanhuakun"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-10-23"},{"lineNumber":17,"author":{"gitId":"tanhuakun"},"content":"import seedu.address.model.group.Group;","lastModifiedDate":"2021-10-23"},{"lineNumber":18,"author":{"gitId":"tanhuakun"},"content":"import seedu.address.model.group.GroupName;","lastModifiedDate":"2021-10-23"},{"lineNumber":19,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":20,"author":{"gitId":"tanhuakun"},"content":"public class AddGroupCommandParser implements Parser\u003cAddGroupCommand\u003e {","lastModifiedDate":"2021-10-23"},{"lineNumber":21,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":22,"author":{"gitId":"kvihashini"},"content":"    public static final String COMMAND_WORD \u003d \"-a\";","lastModifiedDate":"2021-10-25"},{"lineNumber":23,"author":{"gitId":"tanhuakun"},"content":"    public static final String MESSAGE_USAGE \u003d GROUP_COMMAND + \" \" + COMMAND_WORD","lastModifiedDate":"2021-11-05"},{"lineNumber":24,"author":{"gitId":"tanhuakun"},"content":"            + \": Creates a group with the persons identified \"","lastModifiedDate":"2021-11-05"},{"lineNumber":25,"author":{"gitId":"tanhuakun"},"content":"            + \"by the index number used in the displayed person list.\\n\"","lastModifiedDate":"2021-11-05"},{"lineNumber":26,"author":{"gitId":"tanhuakun"},"content":"            + \"Parameters: INDEX1 INDEX2 ... (must be distinct positive integers) \"","lastModifiedDate":"2021-10-23"},{"lineNumber":27,"author":{"gitId":"tanhuakun"},"content":"            + \"[\" + PREFIX_NAME + \"GROUP NAME]\\n\"","lastModifiedDate":"2021-11-05"},{"lineNumber":28,"author":{"gitId":"tanhuakun"},"content":"            + \"Example: \" + GROUP_COMMAND + \" \" + COMMAND_WORD + \"1 2 3 \"","lastModifiedDate":"2021-11-05"},{"lineNumber":29,"author":{"gitId":"tanhuakun"},"content":"            + PREFIX_NAME + \"Chinese Group \";","lastModifiedDate":"2021-11-05"},{"lineNumber":30,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":31,"author":{"gitId":"tanhuakun"},"content":"    public static final String MESSAGE_DUPLICATE_INDEX \u003d \"You cannot specify the same person multiple times!\";","lastModifiedDate":"2021-10-23"},{"lineNumber":32,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":33,"author":{"gitId":"tanhuakun"},"content":"    @Override","lastModifiedDate":"2021-10-23"},{"lineNumber":34,"author":{"gitId":"tanhuakun"},"content":"    public AddGroupCommand parse(String userInput) throws ParseException {","lastModifiedDate":"2021-10-23"},{"lineNumber":35,"author":{"gitId":"tanhuakun"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(userInput, PREFIX_NAME);","lastModifiedDate":"2021-10-23"},{"lineNumber":36,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":37,"author":{"gitId":"tanhuakun"},"content":"        if (!argMultimap.arePrefixesPresent(PREFIX_NAME)","lastModifiedDate":"2021-10-23"},{"lineNumber":38,"author":{"gitId":"tanhuakun"},"content":"                || argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2021-10-23"},{"lineNumber":39,"author":{"gitId":"tanhuakun"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, MESSAGE_USAGE));","lastModifiedDate":"2021-10-23"},{"lineNumber":40,"author":{"gitId":"tanhuakun"},"content":"        }","lastModifiedDate":"2021-10-23"},{"lineNumber":41,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":42,"author":{"gitId":"tanhuakun"},"content":"        List\u003cIndex\u003e indexes;","lastModifiedDate":"2021-10-23"},{"lineNumber":43,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":44,"author":{"gitId":"tanhuakun"},"content":"        try {","lastModifiedDate":"2021-10-23"},{"lineNumber":45,"author":{"gitId":"tanhuakun"},"content":"            indexes \u003d ParserUtil.parseAllIndex(argMultimap.getPreamble());","lastModifiedDate":"2021-10-23"},{"lineNumber":46,"author":{"gitId":"tanhuakun"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2021-10-23"},{"lineNumber":47,"author":{"gitId":"tanhuakun"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, MESSAGE_INVALID_INDEX_GIVEN), pe);","lastModifiedDate":"2021-11-02"},{"lineNumber":48,"author":{"gitId":"tanhuakun"},"content":"        }","lastModifiedDate":"2021-10-23"},{"lineNumber":49,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":50,"author":{"gitId":"tanhuakun"},"content":"        assert indexes.size() \u003e 0; // indexes should not be empty, since preamble is non-empty and no parse exception","lastModifiedDate":"2021-10-23"},{"lineNumber":51,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":52,"author":{"gitId":"tanhuakun"},"content":"        // attempting to do add the same person to group multiple times!","lastModifiedDate":"2021-10-23"},{"lineNumber":53,"author":{"gitId":"tanhuakun"},"content":"        if (indexes.size() !\u003d indexes.stream().distinct().count()) {","lastModifiedDate":"2021-10-23"},{"lineNumber":54,"author":{"gitId":"tanhuakun"},"content":"            throw new ParseException(MESSAGE_DUPLICATE_INDEX);","lastModifiedDate":"2021-10-23"},{"lineNumber":55,"author":{"gitId":"tanhuakun"},"content":"        }","lastModifiedDate":"2021-10-23"},{"lineNumber":56,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":57,"author":{"gitId":"tanhuakun"},"content":"        GroupName groupName \u003d ParserUtil.parseGroupName(argMultimap.getValue(PREFIX_NAME).get());","lastModifiedDate":"2021-10-23"},{"lineNumber":58,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":59,"author":{"gitId":"tanhuakun"},"content":"        Group group \u003d new Group(groupName);","lastModifiedDate":"2021-10-23"},{"lineNumber":60,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":61,"author":{"gitId":"tanhuakun"},"content":"        return new AddGroupCommand(group, indexes);","lastModifiedDate":"2021-10-23"},{"lineNumber":62,"author":{"gitId":"tanhuakun"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":63,"author":{"gitId":"tanhuakun"},"content":"}","lastModifiedDate":"2021-10-23"}],"authorContributionMap":{"kvihashini":1,"tanhuakun":62}},{"path":"src/main/java/seedu/address/logic/parser/groups/DeleteGroupCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kvihashini"},"content":"package seedu.address.logic.parser.groups;","lastModifiedDate":"2021-10-24"},{"lineNumber":2,"author":{"gitId":"kvihashini"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":3,"author":{"gitId":"kvihashini"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-10-24"},{"lineNumber":4,"author":{"gitId":"tanhuakun"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_INDEX_GIVEN;","lastModifiedDate":"2021-11-02"},{"lineNumber":5,"author":{"gitId":"tanhuakun"},"content":"import static seedu.address.logic.parser.ValidateUtil.hasExpectedSeparatedSegments;","lastModifiedDate":"2021-11-02"},{"lineNumber":6,"author":{"gitId":"tanhuakun"},"content":"import static seedu.address.logic.parser.ValidateUtil.isEmptyOrOnlyWhitespace;","lastModifiedDate":"2021-11-02"},{"lineNumber":7,"author":{"gitId":"kvihashini"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":8,"author":{"gitId":"kvihashini"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-10-24"},{"lineNumber":9,"author":{"gitId":"kvihashini"},"content":"import seedu.address.logic.commands.groups.DeleteGroupCommand;","lastModifiedDate":"2021-10-24"},{"lineNumber":10,"author":{"gitId":"kvihashini"},"content":"import seedu.address.logic.parser.Parser;","lastModifiedDate":"2021-10-24"},{"lineNumber":11,"author":{"gitId":"kvihashini"},"content":"import seedu.address.logic.parser.ParserUtil;","lastModifiedDate":"2021-10-24"},{"lineNumber":12,"author":{"gitId":"kvihashini"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-10-24"},{"lineNumber":13,"author":{"gitId":"kvihashini"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":14,"author":{"gitId":"kvihashini"},"content":"/**","lastModifiedDate":"2021-10-24"},{"lineNumber":15,"author":{"gitId":"kvihashini"},"content":" * Parses input arguments and creates a new DeleteGroupCommand object","lastModifiedDate":"2021-10-24"},{"lineNumber":16,"author":{"gitId":"kvihashini"},"content":" */","lastModifiedDate":"2021-10-24"},{"lineNumber":17,"author":{"gitId":"kvihashini"},"content":"public class DeleteGroupCommandParser implements Parser\u003cDeleteGroupCommand\u003e {","lastModifiedDate":"2021-10-24"},{"lineNumber":18,"author":{"gitId":"kvihashini"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":19,"author":{"gitId":"kvihashini"},"content":"    /**","lastModifiedDate":"2021-10-24"},{"lineNumber":20,"author":{"gitId":"kvihashini"},"content":"     * Parses the given {@code String} of arguments in the context of the DeleteGroupCommand","lastModifiedDate":"2021-10-24"},{"lineNumber":21,"author":{"gitId":"kvihashini"},"content":"     * and returns a DeleteGroupCommand object for execution.","lastModifiedDate":"2021-10-24"},{"lineNumber":22,"author":{"gitId":"kvihashini"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2021-10-24"},{"lineNumber":23,"author":{"gitId":"kvihashini"},"content":"     */","lastModifiedDate":"2021-10-24"},{"lineNumber":24,"author":{"gitId":"kvihashini"},"content":"    public DeleteGroupCommand parse(String args) throws ParseException {","lastModifiedDate":"2021-10-24"},{"lineNumber":25,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":26,"author":{"gitId":"tanhuakun"},"content":"        if (isEmptyOrOnlyWhitespace(args) || !hasExpectedSeparatedSegments(args, 1)) {","lastModifiedDate":"2021-11-02"},{"lineNumber":27,"author":{"gitId":"tanhuakun"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2021-11-02"},{"lineNumber":28,"author":{"gitId":"tanhuakun"},"content":"                    DeleteGroupCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-11-02"},{"lineNumber":29,"author":{"gitId":"tanhuakun"},"content":"        }","lastModifiedDate":"2021-11-02"},{"lineNumber":30,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":31,"author":{"gitId":"kvihashini"},"content":"        try {","lastModifiedDate":"2021-10-24"},{"lineNumber":32,"author":{"gitId":"kvihashini"},"content":"            Index index \u003d ParserUtil.parseIndex(args);","lastModifiedDate":"2021-10-24"},{"lineNumber":33,"author":{"gitId":"kvihashini"},"content":"            return new DeleteGroupCommand(index);","lastModifiedDate":"2021-10-24"},{"lineNumber":34,"author":{"gitId":"kvihashini"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2021-10-24"},{"lineNumber":35,"author":{"gitId":"kvihashini"},"content":"            throw new ParseException(","lastModifiedDate":"2021-10-24"},{"lineNumber":36,"author":{"gitId":"tanhuakun"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, MESSAGE_INVALID_INDEX_GIVEN), pe);","lastModifiedDate":"2021-11-02"},{"lineNumber":37,"author":{"gitId":"kvihashini"},"content":"        }","lastModifiedDate":"2021-10-24"},{"lineNumber":38,"author":{"gitId":"kvihashini"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":39,"author":{"gitId":"kvihashini"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":40,"author":{"gitId":"kvihashini"},"content":"}","lastModifiedDate":"2021-10-24"}],"authorContributionMap":{"kvihashini":30,"tanhuakun":10}},{"path":"src/main/java/seedu/address/logic/parser/groups/GroupAddLessonParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Neha-5678"},"content":"package seedu.address.logic.parser.groups;","lastModifiedDate":"2021-10-25"},{"lineNumber":2,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":3,"author":{"gitId":"tanhuakun"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-24"},{"lineNumber":4,"author":{"gitId":"tanhuakun"},"content":"import static seedu.address.logic.parser.CliSyntax.GROUP_COMMAND;","lastModifiedDate":"2021-11-05"},{"lineNumber":5,"author":{"gitId":"tanhuakun"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DAY;","lastModifiedDate":"2021-10-24"},{"lineNumber":6,"author":{"gitId":"tanhuakun"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_END_TIME;","lastModifiedDate":"2021-10-24"},{"lineNumber":7,"author":{"gitId":"tanhuakun"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_START_TIME;","lastModifiedDate":"2021-10-24"},{"lineNumber":8,"author":{"gitId":"tanhuakun"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_SUBJECT;","lastModifiedDate":"2021-10-24"},{"lineNumber":9,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":10,"author":{"gitId":"tanhuakun"},"content":"import seedu.address.logic.commands.groups.GroupAddLessonCommand;","lastModifiedDate":"2021-10-24"},{"lineNumber":11,"author":{"gitId":"tanhuakun"},"content":"import seedu.address.logic.parser.Parser;","lastModifiedDate":"2021-10-24"},{"lineNumber":12,"author":{"gitId":"tanhuakun"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-10-24"},{"lineNumber":13,"author":{"gitId":"tanhuakun"},"content":"import seedu.address.logic.parser.lessons.AddLessonParserUtil;","lastModifiedDate":"2021-11-05"},{"lineNumber":14,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":15,"author":{"gitId":"tanhuakun"},"content":"/**","lastModifiedDate":"2021-10-24"},{"lineNumber":16,"author":{"gitId":"tanhuakun"},"content":" * Parses input arguments and creates a new EditPersonCommand object","lastModifiedDate":"2021-10-24"},{"lineNumber":17,"author":{"gitId":"tanhuakun"},"content":" */","lastModifiedDate":"2021-10-24"},{"lineNumber":18,"author":{"gitId":"tanhuakun"},"content":"public class GroupAddLessonParser implements Parser\u003cGroupAddLessonCommand\u003e {","lastModifiedDate":"2021-10-24"},{"lineNumber":19,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":20,"author":{"gitId":"tanhuakun"},"content":"    public static final String COMMAND_WORD \u003d \"-al\";","lastModifiedDate":"2021-10-24"},{"lineNumber":21,"author":{"gitId":"tanhuakun"},"content":"    public static final String MESSAGE_USAGE \u003d GROUP_COMMAND + \" \" + COMMAND_WORD","lastModifiedDate":"2021-11-05"},{"lineNumber":22,"author":{"gitId":"tanhuakun"},"content":"            + \": Adds a lesson to the group identified \"","lastModifiedDate":"2021-11-05"},{"lineNumber":23,"author":{"gitId":"tanhuakun"},"content":"            + \"by the index number used in the displayed group list.\\n\"","lastModifiedDate":"2021-11-05"},{"lineNumber":24,"author":{"gitId":"tanhuakun"},"content":"            + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2021-10-24"},{"lineNumber":25,"author":{"gitId":"tanhuakun"},"content":"            + \"[\" + PREFIX_SUBJECT + \"SUBJECT] \"","lastModifiedDate":"2021-10-24"},{"lineNumber":26,"author":{"gitId":"tanhuakun"},"content":"            + \"[\" + PREFIX_START_TIME + \"HH:MM START TIME] \"","lastModifiedDate":"2021-10-24"},{"lineNumber":27,"author":{"gitId":"tanhuakun"},"content":"            + \"[\" + PREFIX_END_TIME + \"HH:MM END TIME] \"","lastModifiedDate":"2021-10-24"},{"lineNumber":28,"author":{"gitId":"tanhuakun"},"content":"            + \"[\" + PREFIX_DAY + \"DAY]\\n\"","lastModifiedDate":"2021-11-05"},{"lineNumber":29,"author":{"gitId":"tanhuakun"},"content":"            + \"Example: \" + GROUP_COMMAND + \" \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2021-11-05"},{"lineNumber":30,"author":{"gitId":"tanhuakun"},"content":"            + PREFIX_DAY + \"Fri \" + PREFIX_START_TIME + \"14:00 \" + PREFIX_END_TIME + \"18:00 \"","lastModifiedDate":"2021-11-05"},{"lineNumber":31,"author":{"gitId":"tanhuakun"},"content":"            + PREFIX_SUBJECT + \"Biology \";","lastModifiedDate":"2021-11-05"},{"lineNumber":32,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":33,"author":{"gitId":"tanhuakun"},"content":"    @Override","lastModifiedDate":"2021-10-24"},{"lineNumber":34,"author":{"gitId":"tanhuakun"},"content":"    public GroupAddLessonCommand parse(String userInput) throws ParseException {","lastModifiedDate":"2021-10-24"},{"lineNumber":35,"author":{"gitId":"tanhuakun"},"content":"        requireNonNull(userInput);","lastModifiedDate":"2021-10-24"},{"lineNumber":36,"author":{"gitId":"tanhuakun"},"content":"        AddLessonParserUtil lessonParserUtil \u003d AddLessonParserUtil.parseAddLesson(userInput, MESSAGE_USAGE);","lastModifiedDate":"2021-11-05"},{"lineNumber":37,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":38,"author":{"gitId":"tanhuakun"},"content":"        return new GroupAddLessonCommand(lessonParserUtil.getIndex(), lessonParserUtil.getLesson());","lastModifiedDate":"2021-11-05"},{"lineNumber":39,"author":{"gitId":"tanhuakun"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":40,"author":{"gitId":"tanhuakun"},"content":"}","lastModifiedDate":"2021-10-24"}],"authorContributionMap":{"Neha-5678":1,"tanhuakun":39}},{"path":"src/main/java/seedu/address/logic/parser/groups/GroupCommandsParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tanhuakun"},"content":"package seedu.address.logic.parser.groups;","lastModifiedDate":"2021-10-23"},{"lineNumber":2,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":3,"author":{"gitId":"tanhuakun"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-10-23"},{"lineNumber":4,"author":{"gitId":"tanhuakun"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2021-10-23"},{"lineNumber":5,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":6,"author":{"gitId":"tanhuakun"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2021-10-23"},{"lineNumber":7,"author":{"gitId":"tanhuakun"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2021-10-23"},{"lineNumber":8,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":9,"author":{"gitId":"tanhuakun"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2021-10-23"},{"lineNumber":10,"author":{"gitId":"tanhuakun"},"content":"import seedu.address.logic.commands.HelpCommand;","lastModifiedDate":"2021-10-23"},{"lineNumber":11,"author":{"gitId":"kvihashini"},"content":"import seedu.address.logic.commands.groups.DeleteGroupCommand;","lastModifiedDate":"2021-10-24"},{"lineNumber":12,"author":{"gitId":"kvihashini"},"content":"import seedu.address.logic.commands.groups.ViewGroupCommand;","lastModifiedDate":"2021-10-25"},{"lineNumber":13,"author":{"gitId":"tanhuakun"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-10-23"},{"lineNumber":14,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":15,"author":{"gitId":"tanhuakun"},"content":"public class GroupCommandsParser {","lastModifiedDate":"2021-10-23"},{"lineNumber":16,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":17,"author":{"gitId":"tanhuakun"},"content":"    /**","lastModifiedDate":"2021-10-23"},{"lineNumber":18,"author":{"gitId":"tanhuakun"},"content":"     * Used for further separation of command action and args.","lastModifiedDate":"2021-10-23"},{"lineNumber":19,"author":{"gitId":"tanhuakun"},"content":"     */","lastModifiedDate":"2021-10-23"},{"lineNumber":20,"author":{"gitId":"tanhuakun"},"content":"    private static final Pattern COMMAND_FORMAT \u003d Pattern.compile(\"(?\u003caction\u003e\\\\-\\\\S+)(?\u003carguments\u003e.*)\");","lastModifiedDate":"2021-10-23"},{"lineNumber":21,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":22,"author":{"gitId":"tanhuakun"},"content":"    /**","lastModifiedDate":"2021-10-23"},{"lineNumber":23,"author":{"gitId":"tanhuakun"},"content":"     * Parses user input into command for execution.","lastModifiedDate":"2021-10-23"},{"lineNumber":24,"author":{"gitId":"tanhuakun"},"content":"     *","lastModifiedDate":"2021-10-23"},{"lineNumber":25,"author":{"gitId":"tanhuakun"},"content":"     * @param commandArgs user input string after COMMAND_WORD","lastModifiedDate":"2021-10-23"},{"lineNumber":26,"author":{"gitId":"tanhuakun"},"content":"     * @return the command based on the user input","lastModifiedDate":"2021-10-23"},{"lineNumber":27,"author":{"gitId":"tanhuakun"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2021-10-23"},{"lineNumber":28,"author":{"gitId":"tanhuakun"},"content":"     */","lastModifiedDate":"2021-10-23"},{"lineNumber":29,"author":{"gitId":"tanhuakun"},"content":"    public static Command parseCommand(String commandArgs) throws ParseException {","lastModifiedDate":"2021-10-23"},{"lineNumber":30,"author":{"gitId":"tanhuakun"},"content":"        final Matcher matcher \u003d COMMAND_FORMAT.matcher(commandArgs.trim());","lastModifiedDate":"2021-10-23"},{"lineNumber":31,"author":{"gitId":"tanhuakun"},"content":"        if (!matcher.matches()) {","lastModifiedDate":"2021-10-23"},{"lineNumber":32,"author":{"gitId":"tanhuakun"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-10-23"},{"lineNumber":33,"author":{"gitId":"tanhuakun"},"content":"        }","lastModifiedDate":"2021-10-23"},{"lineNumber":34,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":35,"author":{"gitId":"tanhuakun"},"content":"        final String action \u003d matcher.group(\"action\");","lastModifiedDate":"2021-10-23"},{"lineNumber":36,"author":{"gitId":"tanhuakun"},"content":"        final String arguments \u003d matcher.group(\"arguments\");","lastModifiedDate":"2021-10-23"},{"lineNumber":37,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":38,"author":{"gitId":"tanhuakun"},"content":"        switch (action) {","lastModifiedDate":"2021-10-23"},{"lineNumber":39,"author":{"gitId":"tanhuakun"},"content":"        case AddGroupCommandParser.COMMAND_WORD:","lastModifiedDate":"2021-10-23"},{"lineNumber":40,"author":{"gitId":"tanhuakun"},"content":"            return new AddGroupCommandParser().parse(arguments);","lastModifiedDate":"2021-10-23"},{"lineNumber":41,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":42,"author":{"gitId":"tanhuakun"},"content":"        case GroupAddLessonParser.COMMAND_WORD:","lastModifiedDate":"2021-10-24"},{"lineNumber":43,"author":{"gitId":"tanhuakun"},"content":"            return new GroupAddLessonParser().parse(arguments);","lastModifiedDate":"2021-10-24"},{"lineNumber":44,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":45,"author":{"gitId":"tanhuakun"},"content":"        case GroupRemoveLessonParser.COMMAND_WORD:","lastModifiedDate":"2021-10-25"},{"lineNumber":46,"author":{"gitId":"tanhuakun"},"content":"            return new GroupRemoveLessonParser().parse(arguments);","lastModifiedDate":"2021-10-25"},{"lineNumber":47,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":48,"author":{"gitId":"kvihashini"},"content":"        case DeleteGroupCommand.COMMAND_WORD:","lastModifiedDate":"2021-10-24"},{"lineNumber":49,"author":{"gitId":"kvihashini"},"content":"            return new DeleteGroupCommandParser().parse(arguments);","lastModifiedDate":"2021-10-24"},{"lineNumber":50,"author":{"gitId":"kvihashini"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":51,"author":{"gitId":"kvihashini"},"content":"        case ViewGroupCommand.COMMAND_WORD:","lastModifiedDate":"2021-10-25"},{"lineNumber":52,"author":{"gitId":"kvihashini"},"content":"            return new ViewGroupCommandParser().parse(arguments);","lastModifiedDate":"2021-10-25"},{"lineNumber":53,"author":{"gitId":"kvihashini"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":54,"author":{"gitId":"tanhuakun"},"content":"        default:","lastModifiedDate":"2021-10-23"},{"lineNumber":55,"author":{"gitId":"tanhuakun"},"content":"            throw new ParseException(MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2021-10-23"},{"lineNumber":56,"author":{"gitId":"tanhuakun"},"content":"        }","lastModifiedDate":"2021-10-23"},{"lineNumber":57,"author":{"gitId":"tanhuakun"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":58,"author":{"gitId":"tanhuakun"},"content":"}","lastModifiedDate":"2021-10-23"}],"authorContributionMap":{"kvihashini":8,"tanhuakun":50}},{"path":"src/main/java/seedu/address/logic/parser/groups/GroupRemoveLessonParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tanhuakun"},"content":"package seedu.address.logic.parser.groups;","lastModifiedDate":"2021-10-25"},{"lineNumber":2,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":3,"author":{"gitId":"tanhuakun"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-25"},{"lineNumber":4,"author":{"gitId":"tanhuakun"},"content":"import static seedu.address.logic.parser.CliSyntax.GROUP_COMMAND;","lastModifiedDate":"2021-11-05"},{"lineNumber":5,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":6,"author":{"gitId":"tanhuakun"},"content":"import java.util.List;","lastModifiedDate":"2021-10-25"},{"lineNumber":7,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":8,"author":{"gitId":"tanhuakun"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-10-25"},{"lineNumber":9,"author":{"gitId":"tanhuakun"},"content":"import seedu.address.logic.commands.groups.GroupRemoveLessonCommand;","lastModifiedDate":"2021-10-25"},{"lineNumber":10,"author":{"gitId":"tanhuakun"},"content":"import seedu.address.logic.parser.Parser;","lastModifiedDate":"2021-10-25"},{"lineNumber":11,"author":{"gitId":"tanhuakun"},"content":"import seedu.address.logic.parser.ParserUtil;","lastModifiedDate":"2021-10-25"},{"lineNumber":12,"author":{"gitId":"tanhuakun"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-10-25"},{"lineNumber":13,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":14,"author":{"gitId":"tanhuakun"},"content":"/**","lastModifiedDate":"2021-10-25"},{"lineNumber":15,"author":{"gitId":"tanhuakun"},"content":" * Parses input arguments and creates a new EditPersonCommand object","lastModifiedDate":"2021-10-25"},{"lineNumber":16,"author":{"gitId":"tanhuakun"},"content":" */","lastModifiedDate":"2021-10-25"},{"lineNumber":17,"author":{"gitId":"tanhuakun"},"content":"public class GroupRemoveLessonParser implements Parser\u003cGroupRemoveLessonCommand\u003e {","lastModifiedDate":"2021-10-25"},{"lineNumber":18,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":19,"author":{"gitId":"tanhuakun"},"content":"    public static final String COMMAND_WORD \u003d \"-dl\";","lastModifiedDate":"2021-10-25"},{"lineNumber":20,"author":{"gitId":"tanhuakun"},"content":"    public static final String MESSAGE_USAGE \u003d GROUP_COMMAND + \" \" + COMMAND_WORD","lastModifiedDate":"2021-11-05"},{"lineNumber":21,"author":{"gitId":"tanhuakun"},"content":"            + \": Removes the lesson identified by the index number \"","lastModifiedDate":"2021-11-05"},{"lineNumber":22,"author":{"gitId":"tanhuakun"},"content":"            + \"from the group identified by the index number used in the displayed list.\\n\"","lastModifiedDate":"2021-11-05"},{"lineNumber":23,"author":{"gitId":"tanhuakun"},"content":"            + \"Parameters: INDEX1 INDEX2 (both must be a positive integer)\\n\"","lastModifiedDate":"2021-11-05"},{"lineNumber":24,"author":{"gitId":"tanhuakun"},"content":"            + \"Example: \" + GROUP_COMMAND + \" \" + COMMAND_WORD + \" 1 1\";","lastModifiedDate":"2021-11-05"},{"lineNumber":25,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":26,"author":{"gitId":"tanhuakun"},"content":"    @Override","lastModifiedDate":"2021-10-25"},{"lineNumber":27,"author":{"gitId":"tanhuakun"},"content":"    public GroupRemoveLessonCommand parse(String userInput) throws ParseException {","lastModifiedDate":"2021-10-25"},{"lineNumber":28,"author":{"gitId":"tanhuakun"},"content":"        requireNonNull(userInput);","lastModifiedDate":"2021-10-25"},{"lineNumber":29,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":30,"author":{"gitId":"tanhuakun"},"content":"        List\u003cIndex\u003e indexes \u003d ParserUtil.parseOnlyIndexString(userInput, 2, MESSAGE_USAGE);","lastModifiedDate":"2021-11-05"},{"lineNumber":31,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":32,"author":{"gitId":"tanhuakun"},"content":"        return new GroupRemoveLessonCommand(indexes.get(0), indexes.get(1));","lastModifiedDate":"2021-10-25"},{"lineNumber":33,"author":{"gitId":"tanhuakun"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":34,"author":{"gitId":"tanhuakun"},"content":"}","lastModifiedDate":"2021-10-25"}],"authorContributionMap":{"tanhuakun":34}},{"path":"src/main/java/seedu/address/logic/parser/groups/ViewGroupCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kvihashini"},"content":"package seedu.address.logic.parser.groups;","lastModifiedDate":"2021-10-25"},{"lineNumber":2,"author":{"gitId":"kvihashini"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":3,"author":{"gitId":"kvihashini"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-10-25"},{"lineNumber":4,"author":{"gitId":"tanhuakun"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_INDEX_GIVEN;","lastModifiedDate":"2021-11-02"},{"lineNumber":5,"author":{"gitId":"tanhuakun"},"content":"import static seedu.address.logic.parser.ValidateUtil.hasExpectedSeparatedSegments;","lastModifiedDate":"2021-11-02"},{"lineNumber":6,"author":{"gitId":"tanhuakun"},"content":"import static seedu.address.logic.parser.ValidateUtil.isEmptyOrOnlyWhitespace;","lastModifiedDate":"2021-11-02"},{"lineNumber":7,"author":{"gitId":"kvihashini"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":8,"author":{"gitId":"kvihashini"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-10-25"},{"lineNumber":9,"author":{"gitId":"kvihashini"},"content":"import seedu.address.logic.commands.groups.ViewGroupCommand;","lastModifiedDate":"2021-10-25"},{"lineNumber":10,"author":{"gitId":"kvihashini"},"content":"import seedu.address.logic.parser.Parser;","lastModifiedDate":"2021-10-25"},{"lineNumber":11,"author":{"gitId":"kvihashini"},"content":"import seedu.address.logic.parser.ParserUtil;","lastModifiedDate":"2021-10-25"},{"lineNumber":12,"author":{"gitId":"kvihashini"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-10-25"},{"lineNumber":13,"author":{"gitId":"kvihashini"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":14,"author":{"gitId":"kvihashini"},"content":"/**","lastModifiedDate":"2021-10-25"},{"lineNumber":15,"author":{"gitId":"kvihashini"},"content":" * Parses input arguments and creates a new ViewGroupCommand object","lastModifiedDate":"2021-10-25"},{"lineNumber":16,"author":{"gitId":"kvihashini"},"content":" */","lastModifiedDate":"2021-10-25"},{"lineNumber":17,"author":{"gitId":"kvihashini"},"content":"public class ViewGroupCommandParser implements Parser\u003cViewGroupCommand\u003e {","lastModifiedDate":"2021-10-25"},{"lineNumber":18,"author":{"gitId":"kvihashini"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":19,"author":{"gitId":"kvihashini"},"content":"    /**","lastModifiedDate":"2021-10-25"},{"lineNumber":20,"author":{"gitId":"kvihashini"},"content":"     * Parses the given {@code String} of arguments in the context of the ViewGroupCommand","lastModifiedDate":"2021-10-25"},{"lineNumber":21,"author":{"gitId":"kvihashini"},"content":"     * and returns a ViewGroupCommand object for execution.","lastModifiedDate":"2021-10-25"},{"lineNumber":22,"author":{"gitId":"kvihashini"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2021-10-25"},{"lineNumber":23,"author":{"gitId":"kvihashini"},"content":"     */","lastModifiedDate":"2021-10-25"},{"lineNumber":24,"author":{"gitId":"kvihashini"},"content":"    public ViewGroupCommand parse(String args) throws ParseException {","lastModifiedDate":"2021-10-25"},{"lineNumber":25,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":26,"author":{"gitId":"tanhuakun"},"content":"        if (isEmptyOrOnlyWhitespace(args) || !hasExpectedSeparatedSegments(args, 1)) {","lastModifiedDate":"2021-11-02"},{"lineNumber":27,"author":{"gitId":"tanhuakun"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2021-11-02"},{"lineNumber":28,"author":{"gitId":"tanhuakun"},"content":"                    ViewGroupCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-11-02"},{"lineNumber":29,"author":{"gitId":"tanhuakun"},"content":"        }","lastModifiedDate":"2021-11-02"},{"lineNumber":30,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":31,"author":{"gitId":"kvihashini"},"content":"        try {","lastModifiedDate":"2021-10-25"},{"lineNumber":32,"author":{"gitId":"kvihashini"},"content":"            Index index \u003d ParserUtil.parseIndex(args);","lastModifiedDate":"2021-10-25"},{"lineNumber":33,"author":{"gitId":"kvihashini"},"content":"            return new ViewGroupCommand(index);","lastModifiedDate":"2021-10-25"},{"lineNumber":34,"author":{"gitId":"kvihashini"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2021-10-25"},{"lineNumber":35,"author":{"gitId":"kvihashini"},"content":"            throw new ParseException(","lastModifiedDate":"2021-10-25"},{"lineNumber":36,"author":{"gitId":"tanhuakun"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, MESSAGE_INVALID_INDEX_GIVEN), pe);","lastModifiedDate":"2021-11-02"},{"lineNumber":37,"author":{"gitId":"kvihashini"},"content":"        }","lastModifiedDate":"2021-10-25"},{"lineNumber":38,"author":{"gitId":"kvihashini"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":39,"author":{"gitId":"kvihashini"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":40,"author":{"gitId":"kvihashini"},"content":"}","lastModifiedDate":"2021-10-25"}],"authorContributionMap":{"kvihashini":30,"tanhuakun":10}},{"path":"src/main/java/seedu/address/logic/parser/lessons/AddLessonParserUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tanhuakun"},"content":"package seedu.address.logic.parser.lessons;","lastModifiedDate":"2021-11-05"},{"lineNumber":2,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":3,"author":{"gitId":"tanhuakun"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-11-05"},{"lineNumber":4,"author":{"gitId":"tanhuakun"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-11-05"},{"lineNumber":5,"author":{"gitId":"tanhuakun"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_INDEX_GIVEN;","lastModifiedDate":"2021-11-05"},{"lineNumber":6,"author":{"gitId":"tanhuakun"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DAY;","lastModifiedDate":"2021-11-05"},{"lineNumber":7,"author":{"gitId":"tanhuakun"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_END_TIME;","lastModifiedDate":"2021-11-05"},{"lineNumber":8,"author":{"gitId":"tanhuakun"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_START_TIME;","lastModifiedDate":"2021-11-05"},{"lineNumber":9,"author":{"gitId":"tanhuakun"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_SUBJECT;","lastModifiedDate":"2021-11-05"},{"lineNumber":10,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":11,"author":{"gitId":"tanhuakun"},"content":"import java.time.DayOfWeek;","lastModifiedDate":"2021-11-05"},{"lineNumber":12,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":13,"author":{"gitId":"tanhuakun"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-11-05"},{"lineNumber":14,"author":{"gitId":"tanhuakun"},"content":"import seedu.address.logic.parser.ArgumentMultimap;","lastModifiedDate":"2021-11-05"},{"lineNumber":15,"author":{"gitId":"tanhuakun"},"content":"import seedu.address.logic.parser.ArgumentTokenizer;","lastModifiedDate":"2021-11-05"},{"lineNumber":16,"author":{"gitId":"tanhuakun"},"content":"import seedu.address.logic.parser.ParserUtil;","lastModifiedDate":"2021-11-05"},{"lineNumber":17,"author":{"gitId":"tanhuakun"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-11-05"},{"lineNumber":18,"author":{"gitId":"tanhuakun"},"content":"import seedu.address.model.lesson.Lesson;","lastModifiedDate":"2021-11-05"},{"lineNumber":19,"author":{"gitId":"tanhuakun"},"content":"import seedu.address.model.lesson.Subject;","lastModifiedDate":"2021-11-05"},{"lineNumber":20,"author":{"gitId":"tanhuakun"},"content":"import seedu.address.model.lesson.Timeslot;","lastModifiedDate":"2021-11-05"},{"lineNumber":21,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":22,"author":{"gitId":"tanhuakun"},"content":"public class AddLessonParserUtil {","lastModifiedDate":"2021-11-05"},{"lineNumber":23,"author":{"gitId":"tanhuakun"},"content":"    private final Lesson lesson;","lastModifiedDate":"2021-11-05"},{"lineNumber":24,"author":{"gitId":"tanhuakun"},"content":"    private final Index index;","lastModifiedDate":"2021-11-05"},{"lineNumber":25,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":26,"author":{"gitId":"tanhuakun"},"content":"    /**","lastModifiedDate":"2021-11-05"},{"lineNumber":27,"author":{"gitId":"tanhuakun"},"content":"     * Constructor that holds a lesson and index","lastModifiedDate":"2021-11-05"},{"lineNumber":28,"author":{"gitId":"tanhuakun"},"content":"     */","lastModifiedDate":"2021-11-05"},{"lineNumber":29,"author":{"gitId":"tanhuakun"},"content":"    private AddLessonParserUtil(Lesson lesson, Index index) {","lastModifiedDate":"2021-11-05"},{"lineNumber":30,"author":{"gitId":"tanhuakun"},"content":"        requireNonNull(lesson);","lastModifiedDate":"2021-11-05"},{"lineNumber":31,"author":{"gitId":"tanhuakun"},"content":"        requireNonNull(index);","lastModifiedDate":"2021-11-05"},{"lineNumber":32,"author":{"gitId":"tanhuakun"},"content":"        this.lesson \u003d lesson;","lastModifiedDate":"2021-11-05"},{"lineNumber":33,"author":{"gitId":"tanhuakun"},"content":"        this.index \u003d index;","lastModifiedDate":"2021-11-05"},{"lineNumber":34,"author":{"gitId":"tanhuakun"},"content":"    }","lastModifiedDate":"2021-11-05"},{"lineNumber":35,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":36,"author":{"gitId":"tanhuakun"},"content":"    /**","lastModifiedDate":"2021-11-05"},{"lineNumber":37,"author":{"gitId":"tanhuakun"},"content":"     * Parses a add lesson command and returns an object containing the lesson and index","lastModifiedDate":"2021-11-05"},{"lineNumber":38,"author":{"gitId":"tanhuakun"},"content":"     * @param userInput to parse","lastModifiedDate":"2021-11-05"},{"lineNumber":39,"author":{"gitId":"tanhuakun"},"content":"     * @return AddLessonParseUtil object with the lesson and index.","lastModifiedDate":"2021-11-05"},{"lineNumber":40,"author":{"gitId":"tanhuakun"},"content":"     * @throws ParseException if any fields are wrong.","lastModifiedDate":"2021-11-05"},{"lineNumber":41,"author":{"gitId":"tanhuakun"},"content":"     */","lastModifiedDate":"2021-11-05"},{"lineNumber":42,"author":{"gitId":"tanhuakun"},"content":"    public static AddLessonParserUtil parseAddLesson(String userInput, String messageUsage) throws ParseException {","lastModifiedDate":"2021-11-05"},{"lineNumber":43,"author":{"gitId":"tanhuakun"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2021-11-05"},{"lineNumber":44,"author":{"gitId":"tanhuakun"},"content":"                ArgumentTokenizer.tokenize(userInput, PREFIX_SUBJECT, PREFIX_START_TIME, PREFIX_END_TIME, PREFIX_DAY);","lastModifiedDate":"2021-11-05"},{"lineNumber":45,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":46,"author":{"gitId":"tanhuakun"},"content":"        if (!argMultimap.arePrefixesPresent(PREFIX_SUBJECT, PREFIX_START_TIME, PREFIX_END_TIME, PREFIX_DAY)","lastModifiedDate":"2021-11-05"},{"lineNumber":47,"author":{"gitId":"tanhuakun"},"content":"                || argMultimap.getPreamble().isEmpty() || !argMultimap.preambleHasExpectedSegments(1)) {","lastModifiedDate":"2021-11-05"},{"lineNumber":48,"author":{"gitId":"tanhuakun"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2021-11-05"},{"lineNumber":49,"author":{"gitId":"tanhuakun"},"content":"                    messageUsage));","lastModifiedDate":"2021-11-05"},{"lineNumber":50,"author":{"gitId":"tanhuakun"},"content":"        }","lastModifiedDate":"2021-11-05"},{"lineNumber":51,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":52,"author":{"gitId":"tanhuakun"},"content":"        Index index;","lastModifiedDate":"2021-11-05"},{"lineNumber":53,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":54,"author":{"gitId":"tanhuakun"},"content":"        try {","lastModifiedDate":"2021-11-05"},{"lineNumber":55,"author":{"gitId":"tanhuakun"},"content":"            index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2021-11-05"},{"lineNumber":56,"author":{"gitId":"tanhuakun"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2021-11-05"},{"lineNumber":57,"author":{"gitId":"tanhuakun"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2021-11-05"},{"lineNumber":58,"author":{"gitId":"tanhuakun"},"content":"                    MESSAGE_INVALID_INDEX_GIVEN), pe);","lastModifiedDate":"2021-11-05"},{"lineNumber":59,"author":{"gitId":"tanhuakun"},"content":"        }","lastModifiedDate":"2021-11-05"},{"lineNumber":60,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":61,"author":{"gitId":"tanhuakun"},"content":"        Timeslot timeslot \u003d ParserUtil.parseTimeslot(argMultimap.getValue(PREFIX_START_TIME).get(),","lastModifiedDate":"2021-11-05"},{"lineNumber":62,"author":{"gitId":"tanhuakun"},"content":"                argMultimap.getValue(PREFIX_END_TIME).get());","lastModifiedDate":"2021-11-05"},{"lineNumber":63,"author":{"gitId":"tanhuakun"},"content":"        Subject subject \u003d ParserUtil.parseSubject(argMultimap.getValue(PREFIX_SUBJECT).get());","lastModifiedDate":"2021-11-05"},{"lineNumber":64,"author":{"gitId":"tanhuakun"},"content":"        DayOfWeek dayOfWeek \u003d ParserUtil.parseDayOfWeek(argMultimap.getValue(PREFIX_DAY).get());","lastModifiedDate":"2021-11-05"},{"lineNumber":65,"author":{"gitId":"tanhuakun"},"content":"        Lesson lesson \u003d new Lesson(timeslot, subject, dayOfWeek);","lastModifiedDate":"2021-11-05"},{"lineNumber":66,"author":{"gitId":"tanhuakun"},"content":"        return new AddLessonParserUtil(lesson, index);","lastModifiedDate":"2021-11-05"},{"lineNumber":67,"author":{"gitId":"tanhuakun"},"content":"    }","lastModifiedDate":"2021-11-05"},{"lineNumber":68,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":69,"author":{"gitId":"tanhuakun"},"content":"    public Lesson getLesson() {","lastModifiedDate":"2021-11-05"},{"lineNumber":70,"author":{"gitId":"tanhuakun"},"content":"        return lesson;","lastModifiedDate":"2021-11-05"},{"lineNumber":71,"author":{"gitId":"tanhuakun"},"content":"    }","lastModifiedDate":"2021-11-05"},{"lineNumber":72,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":73,"author":{"gitId":"tanhuakun"},"content":"    public Index getIndex() {","lastModifiedDate":"2021-11-05"},{"lineNumber":74,"author":{"gitId":"tanhuakun"},"content":"        return index;","lastModifiedDate":"2021-11-05"},{"lineNumber":75,"author":{"gitId":"tanhuakun"},"content":"    }","lastModifiedDate":"2021-11-05"},{"lineNumber":76,"author":{"gitId":"tanhuakun"},"content":"}","lastModifiedDate":"2021-11-05"}],"authorContributionMap":{"tanhuakun":76}},{"path":"src/main/java/seedu/address/logic/parser/persons/AddPersonCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tanhuakun"},"content":"package seedu.address.logic.parser.persons;","lastModifiedDate":"2021-10-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-02-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-02-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-02-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-02-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-02-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":10,"author":{"gitId":"tanhuakun"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-16"},{"lineNumber":11,"author":{"gitId":"jeremy-7007"},"content":"import java.util.HashMap;","lastModifiedDate":"2021-10-26"},{"lineNumber":12,"author":{"gitId":"jeremy-7007"},"content":"import java.util.HashSet;","lastModifiedDate":"2021-10-12"},{"lineNumber":13,"author":{"gitId":"tanhuakun"},"content":"import java.util.List;","lastModifiedDate":"2021-10-16"},{"lineNumber":14,"author":{"gitId":"jeremy-7007"},"content":"import java.util.Map;","lastModifiedDate":"2021-10-26"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-17"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":17,"author":{"gitId":"tanhuakun"},"content":"import seedu.address.logic.commands.persons.AddPersonCommand;","lastModifiedDate":"2021-10-03"},{"lineNumber":18,"author":{"gitId":"tanhuakun"},"content":"import seedu.address.logic.parser.ArgumentMultimap;","lastModifiedDate":"2021-10-03"},{"lineNumber":19,"author":{"gitId":"tanhuakun"},"content":"import seedu.address.logic.parser.ArgumentTokenizer;","lastModifiedDate":"2021-10-03"},{"lineNumber":20,"author":{"gitId":"tanhuakun"},"content":"import seedu.address.logic.parser.Parser;","lastModifiedDate":"2021-10-03"},{"lineNumber":21,"author":{"gitId":"tanhuakun"},"content":"import seedu.address.logic.parser.ParserUtil;","lastModifiedDate":"2021-10-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":23,"author":{"gitId":"jeremy-7007"},"content":"import seedu.address.model.id.UniqueId;","lastModifiedDate":"2021-10-12"},{"lineNumber":24,"author":{"gitId":"tanhuakun"},"content":"import seedu.address.model.lesson.NoOverlapLessonList;","lastModifiedDate":"2021-10-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2017-03-17"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-03-17"},{"lineNumber":27,"author":{"gitId":"tanhuakun"},"content":"import seedu.address.model.person.Exam;","lastModifiedDate":"2021-10-16"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-03-17"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-03-17"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-03-17"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-17"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-02-05"},{"lineNumber":34,"author":{"gitId":"tanhuakun"},"content":" * Parses input arguments and creates a new AddPersonCommand object","lastModifiedDate":"2021-10-03"},{"lineNumber":35,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-02-05"},{"lineNumber":36,"author":{"gitId":"tanhuakun"},"content":"public class AddPersonCommandParser implements Parser\u003cAddPersonCommand\u003e {","lastModifiedDate":"2021-10-03"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-05"},{"lineNumber":39,"author":{"gitId":"tanhuakun"},"content":"     * Parses the given {@code String} of arguments in the context of the AddPersonCommand","lastModifiedDate":"2021-10-03"},{"lineNumber":40,"author":{"gitId":"tanhuakun"},"content":"     * and returns an AddPersonCommand object for execution.","lastModifiedDate":"2021-10-03"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-02-05"},{"lineNumber":43,"author":{"gitId":"tanhuakun"},"content":"    public AddPersonCommand parse(String args) throws ParseException {","lastModifiedDate":"2021-10-03"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2017-03-20"},{"lineNumber":45,"author":{"gitId":"-"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL, PREFIX_ADDRESS, PREFIX_TAG);","lastModifiedDate":"2017-06-06"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":47,"author":{"gitId":"tanhuakun"},"content":"        if (!argMultimap.arePrefixesPresent(PREFIX_NAME, PREFIX_ADDRESS, PREFIX_PHONE, PREFIX_EMAIL)","lastModifiedDate":"2021-10-12"},{"lineNumber":48,"author":{"gitId":"-"},"content":"                || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2017-12-23"},{"lineNumber":49,"author":{"gitId":"tanhuakun"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddPersonCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-10-03"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-03-17"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        Name name \u003d ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        Phone phone \u003d ParserUtil.parsePhone(argMultimap.getValue(PREFIX_PHONE).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        Email email \u003d ParserUtil.parseEmail(argMultimap.getValue(PREFIX_EMAIL).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        Address address \u003d ParserUtil.parseAddress(argMultimap.getValue(PREFIX_ADDRESS).get());","lastModifiedDate":"2018-07-10"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e tagList \u003d ParserUtil.parseTags(argMultimap.getAllValues(PREFIX_TAG));","lastModifiedDate":"2017-03-17"},{"lineNumber":57,"author":{"gitId":"jeremy-7007"},"content":"        Set\u003cUniqueId\u003e assignedTaskIds \u003d new HashSet\u003c\u003e(); // add command does not allow assigning tasks straight away","lastModifiedDate":"2021-10-12"},{"lineNumber":58,"author":{"gitId":"jeremy-7007"},"content":"        Map\u003cUniqueId, Boolean\u003e tasksCompletion \u003d new HashMap\u003c\u003e(); // add command does not assign tasks straight away","lastModifiedDate":"2021-10-26"},{"lineNumber":59,"author":{"gitId":"tanhuakun"},"content":"        NoOverlapLessonList noLessons \u003d new NoOverlapLessonList();","lastModifiedDate":"2021-10-16"},{"lineNumber":60,"author":{"gitId":"tanhuakun"},"content":"        List\u003cExam\u003e noExams \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-16"},{"lineNumber":61,"author":{"gitId":"tanhuakun"},"content":"        Set\u003cUniqueId\u003e noGroups \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2021-10-23"},{"lineNumber":62,"author":{"gitId":"tanhuakun"},"content":"        // default empty lessons list","lastModifiedDate":"2021-10-05"},{"lineNumber":63,"author":{"gitId":"jeremy-7007"},"content":"        Person person \u003d new Person(name, phone, email, address, tagList, assignedTaskIds, tasksCompletion,","lastModifiedDate":"2021-10-26"},{"lineNumber":64,"author":{"gitId":"tanhuakun"},"content":"                noLessons, noExams, noGroups);","lastModifiedDate":"2021-10-23"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-17"},{"lineNumber":66,"author":{"gitId":"tanhuakun"},"content":"        return new AddPersonCommand(person);","lastModifiedDate":"2021-10-03"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":69,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-02-05"}],"authorContributionMap":{"jeremy-7007":7,"tanhuakun":23,"-":39}},{"path":"src/main/java/seedu/address/logic/parser/persons/DeletePersonCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tanhuakun"},"content":"package seedu.address.logic.parser.persons;","lastModifiedDate":"2021-10-03"},{"lineNumber":2,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":3,"author":{"gitId":"tanhuakun"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-10-03"},{"lineNumber":4,"author":{"gitId":"tanhuakun"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_INDEX_GIVEN;","lastModifiedDate":"2021-11-02"},{"lineNumber":5,"author":{"gitId":"tanhuakun"},"content":"import static seedu.address.logic.parser.ValidateUtil.hasExpectedSeparatedSegments;","lastModifiedDate":"2021-11-02"},{"lineNumber":6,"author":{"gitId":"tanhuakun"},"content":"import static seedu.address.logic.parser.ValidateUtil.isEmptyOrOnlyWhitespace;","lastModifiedDate":"2021-11-02"},{"lineNumber":7,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":8,"author":{"gitId":"tanhuakun"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-10-03"},{"lineNumber":9,"author":{"gitId":"tanhuakun"},"content":"import seedu.address.logic.commands.persons.DeletePersonCommand;","lastModifiedDate":"2021-10-03"},{"lineNumber":10,"author":{"gitId":"tanhuakun"},"content":"import seedu.address.logic.parser.Parser;","lastModifiedDate":"2021-10-03"},{"lineNumber":11,"author":{"gitId":"tanhuakun"},"content":"import seedu.address.logic.parser.ParserUtil;","lastModifiedDate":"2021-10-03"},{"lineNumber":12,"author":{"gitId":"tanhuakun"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-10-03"},{"lineNumber":13,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":14,"author":{"gitId":"tanhuakun"},"content":"/**","lastModifiedDate":"2021-10-03"},{"lineNumber":15,"author":{"gitId":"tanhuakun"},"content":" * Parses input arguments and creates a new DeletePersonCommand object","lastModifiedDate":"2021-10-03"},{"lineNumber":16,"author":{"gitId":"tanhuakun"},"content":" */","lastModifiedDate":"2021-10-03"},{"lineNumber":17,"author":{"gitId":"tanhuakun"},"content":"public class DeletePersonCommandParser implements Parser\u003cDeletePersonCommand\u003e {","lastModifiedDate":"2021-10-03"},{"lineNumber":18,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":19,"author":{"gitId":"tanhuakun"},"content":"    /**","lastModifiedDate":"2021-10-03"},{"lineNumber":20,"author":{"gitId":"tanhuakun"},"content":"     * Parses the given {@code String} of arguments in the context of the DeletePersonCommand","lastModifiedDate":"2021-10-03"},{"lineNumber":21,"author":{"gitId":"tanhuakun"},"content":"     * and returns a DeletePersonCommand object for execution.","lastModifiedDate":"2021-10-03"},{"lineNumber":22,"author":{"gitId":"tanhuakun"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2021-10-03"},{"lineNumber":23,"author":{"gitId":"tanhuakun"},"content":"     */","lastModifiedDate":"2021-10-03"},{"lineNumber":24,"author":{"gitId":"tanhuakun"},"content":"    public DeletePersonCommand parse(String args) throws ParseException {","lastModifiedDate":"2021-10-03"},{"lineNumber":25,"author":{"gitId":"tanhuakun"},"content":"        if (isEmptyOrOnlyWhitespace(args) || !hasExpectedSeparatedSegments(args, 1)) {","lastModifiedDate":"2021-11-02"},{"lineNumber":26,"author":{"gitId":"tanhuakun"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2021-11-02"},{"lineNumber":27,"author":{"gitId":"tanhuakun"},"content":"                    DeletePersonCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-11-08"},{"lineNumber":28,"author":{"gitId":"tanhuakun"},"content":"        }","lastModifiedDate":"2021-11-02"},{"lineNumber":29,"author":{"gitId":"tanhuakun"},"content":"        try {","lastModifiedDate":"2021-10-03"},{"lineNumber":30,"author":{"gitId":"tanhuakun"},"content":"            Index index \u003d ParserUtil.parseIndex(args);","lastModifiedDate":"2021-10-03"},{"lineNumber":31,"author":{"gitId":"tanhuakun"},"content":"            return new DeletePersonCommand(index);","lastModifiedDate":"2021-10-03"},{"lineNumber":32,"author":{"gitId":"tanhuakun"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2021-10-03"},{"lineNumber":33,"author":{"gitId":"tanhuakun"},"content":"            throw new ParseException(","lastModifiedDate":"2021-10-03"},{"lineNumber":34,"author":{"gitId":"tanhuakun"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, MESSAGE_INVALID_INDEX_GIVEN), pe);","lastModifiedDate":"2021-11-02"},{"lineNumber":35,"author":{"gitId":"tanhuakun"},"content":"        }","lastModifiedDate":"2021-10-03"},{"lineNumber":36,"author":{"gitId":"tanhuakun"},"content":"    }","lastModifiedDate":"2021-10-03"},{"lineNumber":37,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":38,"author":{"gitId":"tanhuakun"},"content":"}","lastModifiedDate":"2021-10-03"}],"authorContributionMap":{"tanhuakun":38}},{"path":"src/main/java/seedu/address/logic/parser/persons/EditPersonCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tanhuakun"},"content":"package seedu.address.logic.parser.persons;","lastModifiedDate":"2021-10-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-01-26"},{"lineNumber":5,"author":{"gitId":"tanhuakun"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_INDEX_GIVEN;","lastModifiedDate":"2021-11-02"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-01-26"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-01-26"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-01-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-01-26"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2017-01-26"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-01-26"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Optional;","lastModifiedDate":"2017-01-26"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":18,"author":{"gitId":"tanhuakun"},"content":"import seedu.address.logic.commands.persons.EditPersonCommand;","lastModifiedDate":"2021-10-03"},{"lineNumber":19,"author":{"gitId":"tanhuakun"},"content":"import seedu.address.logic.commands.persons.EditPersonCommand.EditPersonDescriptor;","lastModifiedDate":"2021-10-03"},{"lineNumber":20,"author":{"gitId":"tanhuakun"},"content":"import seedu.address.logic.parser.ArgumentMultimap;","lastModifiedDate":"2021-10-03"},{"lineNumber":21,"author":{"gitId":"tanhuakun"},"content":"import seedu.address.logic.parser.ArgumentTokenizer;","lastModifiedDate":"2021-10-03"},{"lineNumber":22,"author":{"gitId":"tanhuakun"},"content":"import seedu.address.logic.parser.Parser;","lastModifiedDate":"2021-10-03"},{"lineNumber":23,"author":{"gitId":"tanhuakun"},"content":"import seedu.address.logic.parser.ParserUtil;","lastModifiedDate":"2021-10-03"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-07"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":27,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-01-26"},{"lineNumber":28,"author":{"gitId":"tanhuakun"},"content":" * Parses input arguments and creates a new EditPersonCommand object","lastModifiedDate":"2021-10-03"},{"lineNumber":29,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-01-26"},{"lineNumber":30,"author":{"gitId":"tanhuakun"},"content":"public class EditPersonCommandParser implements Parser\u003cEditPersonCommand\u003e {","lastModifiedDate":"2021-10-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":32,"author":{"gitId":"tanhuakun"},"content":"    public static final String MESSAGE_EDIT_PERSON_SUCCESS \u003d \"Edited Person: %1$s\";","lastModifiedDate":"2021-10-19"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":35,"author":{"gitId":"tanhuakun"},"content":"     * Parses the given {@code String} of arguments in the context of the EditPersonCommand","lastModifiedDate":"2021-10-03"},{"lineNumber":36,"author":{"gitId":"tanhuakun"},"content":"     * and returns an EditPersonCommand object for execution.","lastModifiedDate":"2021-10-03"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":38,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":39,"author":{"gitId":"tanhuakun"},"content":"    public EditPersonCommand parse(String args) throws ParseException {","lastModifiedDate":"2021-10-03"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        requireNonNull(args);","lastModifiedDate":"2017-05-15"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2017-03-20"},{"lineNumber":42,"author":{"gitId":"-"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_NAME, PREFIX_PHONE, PREFIX_EMAIL, PREFIX_ADDRESS, PREFIX_TAG);","lastModifiedDate":"2017-06-06"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":44,"author":{"gitId":"tanhuakun"},"content":"        if (argMultimap.getPreamble().isEmpty() || !argMultimap.preambleHasExpectedSegments(1)) {","lastModifiedDate":"2021-11-02"},{"lineNumber":45,"author":{"gitId":"tanhuakun"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2021-11-02"},{"lineNumber":46,"author":{"gitId":"tanhuakun"},"content":"                    EditPersonCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-11-02"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-11-02"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        EditPersonDescriptor editPersonDescriptor \u003d new EditPersonDescriptor();","lastModifiedDate":"2017-01-26"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_NAME).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":51,"author":{"gitId":"-"},"content":"            editPersonDescriptor.setName(ParserUtil.parseName(argMultimap.getValue(PREFIX_NAME).get()));","lastModifiedDate":"2018-07-10"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_PHONE).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":54,"author":{"gitId":"-"},"content":"            editPersonDescriptor.setPhone(ParserUtil.parsePhone(argMultimap.getValue(PREFIX_PHONE).get()));","lastModifiedDate":"2018-07-10"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_EMAIL).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":57,"author":{"gitId":"-"},"content":"            editPersonDescriptor.setEmail(ParserUtil.parseEmail(argMultimap.getValue(PREFIX_EMAIL).get()));","lastModifiedDate":"2018-07-10"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        if (argMultimap.getValue(PREFIX_ADDRESS).isPresent()) {","lastModifiedDate":"2018-07-10"},{"lineNumber":60,"author":{"gitId":"-"},"content":"            editPersonDescriptor.setAddress(ParserUtil.parseAddress(argMultimap.getValue(PREFIX_ADDRESS).get()));","lastModifiedDate":"2018-07-10"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-07-10"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        parseTagsForEdit(argMultimap.getAllValues(PREFIX_TAG)).ifPresent(editPersonDescriptor::setTags);","lastModifiedDate":"2017-06-21"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        if (!editPersonDescriptor.isAnyFieldEdited()) {","lastModifiedDate":"2017-01-26"},{"lineNumber":65,"author":{"gitId":"tanhuakun"},"content":"            throw new ParseException(EditPersonCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2021-10-03"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":68,"author":{"gitId":"tanhuakun"},"content":"        Index index;","lastModifiedDate":"2021-11-02"},{"lineNumber":69,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":70,"author":{"gitId":"tanhuakun"},"content":"        try {","lastModifiedDate":"2021-11-02"},{"lineNumber":71,"author":{"gitId":"tanhuakun"},"content":"            index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2021-11-02"},{"lineNumber":72,"author":{"gitId":"tanhuakun"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2021-11-02"},{"lineNumber":73,"author":{"gitId":"tanhuakun"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2021-11-02"},{"lineNumber":74,"author":{"gitId":"tanhuakun"},"content":"                    MESSAGE_INVALID_INDEX_GIVEN), pe);","lastModifiedDate":"2021-11-02"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-11-02"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":77,"author":{"gitId":"tanhuakun"},"content":"        return new EditPersonCommand(index, editPersonDescriptor, MESSAGE_EDIT_PERSON_SUCCESS);","lastModifiedDate":"2021-10-19"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     * Parses {@code Collection\u003cString\u003e tags} into a {@code Set\u003cTag\u003e} if {@code tags} is non-empty.","lastModifiedDate":"2017-03-07"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     * If {@code tags} contain only one element which is an empty string, it will be parsed into a","lastModifiedDate":"2017-01-26"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     * {@code Set\u003cTag\u003e} containing zero tags.","lastModifiedDate":"2017-03-07"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    private Optional\u003cSet\u003cTag\u003e\u003e parseTagsForEdit(Collection\u003cString\u003e tags) throws ParseException {","lastModifiedDate":"2018-07-10"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        assert tags !\u003d null;","lastModifiedDate":"2017-01-26"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        if (tags.isEmpty()) {","lastModifiedDate":"2017-01-26"},{"lineNumber":89,"author":{"gitId":"-"},"content":"            return Optional.empty();","lastModifiedDate":"2017-01-26"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        Collection\u003cString\u003e tagSet \u003d tags.size() \u003d\u003d 1 \u0026\u0026 tags.contains(\"\") ? Collections.emptySet() : tags;","lastModifiedDate":"2017-01-26"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        return Optional.of(ParserUtil.parseTags(tagSet));","lastModifiedDate":"2017-01-26"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":95,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-26"}],"authorContributionMap":{"tanhuakun":26,"-":69}},{"path":"src/main/java/seedu/address/logic/parser/persons/FindPersonCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tanhuakun"},"content":"package seedu.address.logic.parser.persons;","lastModifiedDate":"2021-10-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-01-26"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-01-26"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":7,"author":{"gitId":"tanhuakun"},"content":"import seedu.address.logic.commands.persons.FindPersonCommand;","lastModifiedDate":"2021-10-03"},{"lineNumber":8,"author":{"gitId":"tanhuakun"},"content":"import seedu.address.logic.parser.Parser;","lastModifiedDate":"2021-10-03"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-01-26"},{"lineNumber":13,"author":{"gitId":"tanhuakun"},"content":" * Parses input arguments and creates a new FindPersonCommand object","lastModifiedDate":"2021-10-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-01-26"},{"lineNumber":15,"author":{"gitId":"tanhuakun"},"content":"public class FindPersonCommandParser implements Parser\u003cFindPersonCommand\u003e {","lastModifiedDate":"2021-10-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-01-26"},{"lineNumber":18,"author":{"gitId":"tanhuakun"},"content":"     * Parses the given {@code String} of arguments in the context of the FindPersonCommand","lastModifiedDate":"2021-10-03"},{"lineNumber":19,"author":{"gitId":"tanhuakun"},"content":"     * and returns a FindPersonCommand object for execution.","lastModifiedDate":"2021-10-03"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2017-03-11"},{"lineNumber":21,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-01-26"},{"lineNumber":22,"author":{"gitId":"tanhuakun"},"content":"    public FindPersonCommand parse(String args) throws ParseException {","lastModifiedDate":"2021-10-03"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        String trimmedArgs \u003d args.trim();","lastModifiedDate":"2017-02-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        if (trimmedArgs.isEmpty()) {","lastModifiedDate":"2017-02-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"            throw new ParseException(","lastModifiedDate":"2017-03-11"},{"lineNumber":26,"author":{"gitId":"tanhuakun"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, FindPersonCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-10-03"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-01-26"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        String[] nameKeywords \u003d trimmedArgs.split(\"\\\\s+\");","lastModifiedDate":"2017-06-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":31,"author":{"gitId":"tanhuakun"},"content":"        return new FindPersonCommand(new NameContainsKeywordsPredicate(Arrays.asList(nameKeywords)));","lastModifiedDate":"2021-10-03"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-01-26"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-26"},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-01-26"}],"authorContributionMap":{"tanhuakun":10,"-":24}},{"path":"src/main/java/seedu/address/logic/parser/persons/PersonAddExamParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tanhuakun"},"content":"package seedu.address.logic.parser.persons;","lastModifiedDate":"2021-10-19"},{"lineNumber":2,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":3,"author":{"gitId":"tanhuakun"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-19"},{"lineNumber":4,"author":{"gitId":"tanhuakun"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-10-19"},{"lineNumber":5,"author":{"gitId":"tanhuakun"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_INDEX_GIVEN;","lastModifiedDate":"2021-11-02"},{"lineNumber":6,"author":{"gitId":"tanhuakun"},"content":"import static seedu.address.logic.parser.CliSyntax.PERSON_COMMAND;","lastModifiedDate":"2021-11-05"},{"lineNumber":7,"author":{"gitId":"tanhuakun"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DAY;","lastModifiedDate":"2021-10-19"},{"lineNumber":8,"author":{"gitId":"tanhuakun"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_SUBJECT;","lastModifiedDate":"2021-10-19"},{"lineNumber":9,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":10,"author":{"gitId":"tanhuakun"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-10-19"},{"lineNumber":11,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":12,"author":{"gitId":"tanhuakun"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-10-19"},{"lineNumber":13,"author":{"gitId":"tanhuakun"},"content":"import seedu.address.logic.commands.persons.EditPersonCommand;","lastModifiedDate":"2021-10-19"},{"lineNumber":14,"author":{"gitId":"tanhuakun"},"content":"import seedu.address.logic.parser.ArgumentMultimap;","lastModifiedDate":"2021-10-19"},{"lineNumber":15,"author":{"gitId":"tanhuakun"},"content":"import seedu.address.logic.parser.ArgumentTokenizer;","lastModifiedDate":"2021-10-19"},{"lineNumber":16,"author":{"gitId":"tanhuakun"},"content":"import seedu.address.logic.parser.Parser;","lastModifiedDate":"2021-10-19"},{"lineNumber":17,"author":{"gitId":"tanhuakun"},"content":"import seedu.address.logic.parser.ParserUtil;","lastModifiedDate":"2021-10-19"},{"lineNumber":18,"author":{"gitId":"tanhuakun"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-10-19"},{"lineNumber":19,"author":{"gitId":"tanhuakun"},"content":"import seedu.address.model.lesson.Subject;","lastModifiedDate":"2021-10-19"},{"lineNumber":20,"author":{"gitId":"tanhuakun"},"content":"import seedu.address.model.person.Exam;","lastModifiedDate":"2021-10-19"},{"lineNumber":21,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":22,"author":{"gitId":"tanhuakun"},"content":"/**","lastModifiedDate":"2021-10-19"},{"lineNumber":23,"author":{"gitId":"tanhuakun"},"content":" * Parses input arguments and creates a new EditPersonCommand object","lastModifiedDate":"2021-10-19"},{"lineNumber":24,"author":{"gitId":"tanhuakun"},"content":" */","lastModifiedDate":"2021-10-19"},{"lineNumber":25,"author":{"gitId":"tanhuakun"},"content":"public class PersonAddExamParser implements Parser\u003cEditPersonCommand\u003e {","lastModifiedDate":"2021-10-19"},{"lineNumber":26,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":27,"author":{"gitId":"tanhuakun"},"content":"    public static final String COMMAND_WORD \u003d \"-ae\";","lastModifiedDate":"2021-10-19"},{"lineNumber":28,"author":{"gitId":"tanhuakun"},"content":"    public static final String MESSAGE_USAGE \u003d PERSON_COMMAND + \" \" + COMMAND_WORD","lastModifiedDate":"2021-11-05"},{"lineNumber":29,"author":{"gitId":"tanhuakun"},"content":"            + \": Adds an exam to the person identified \"","lastModifiedDate":"2021-11-05"},{"lineNumber":30,"author":{"gitId":"tanhuakun"},"content":"            + \"by the index number used in the displayed person list.\\n\"","lastModifiedDate":"2021-11-05"},{"lineNumber":31,"author":{"gitId":"tanhuakun"},"content":"            + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2021-10-19"},{"lineNumber":32,"author":{"gitId":"tanhuakun"},"content":"            + \"[\" + PREFIX_SUBJECT + \"SUBJECT] \"","lastModifiedDate":"2021-10-19"},{"lineNumber":33,"author":{"gitId":"tanhuakun"},"content":"            + \"[\" + PREFIX_DAY + ParserUtil.DATE_TIME_FORMAT + \"]\\n\"","lastModifiedDate":"2021-11-05"},{"lineNumber":34,"author":{"gitId":"tanhuakun"},"content":"            + \"Example: \" + PERSON_COMMAND + \" \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2021-11-05"},{"lineNumber":35,"author":{"gitId":"tanhuakun"},"content":"            + PREFIX_DAY + \"2022-10-10 10:00 \" + PREFIX_SUBJECT + \"Chinese\";","lastModifiedDate":"2021-11-05"},{"lineNumber":36,"author":{"gitId":"tanhuakun"},"content":"    public static final String ADD_EXAM_SUCCESS \u003d \"Exam added to person:\\n%s\";","lastModifiedDate":"2021-11-05"},{"lineNumber":37,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":38,"author":{"gitId":"tanhuakun"},"content":"    @Override","lastModifiedDate":"2021-10-19"},{"lineNumber":39,"author":{"gitId":"tanhuakun"},"content":"    public EditPersonCommand parse(String userInput) throws ParseException {","lastModifiedDate":"2021-10-19"},{"lineNumber":40,"author":{"gitId":"tanhuakun"},"content":"        requireNonNull(userInput);","lastModifiedDate":"2021-10-19"},{"lineNumber":41,"author":{"gitId":"tanhuakun"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2021-10-19"},{"lineNumber":42,"author":{"gitId":"tanhuakun"},"content":"                ArgumentTokenizer.tokenize(userInput, PREFIX_SUBJECT, PREFIX_DAY);","lastModifiedDate":"2021-10-19"},{"lineNumber":43,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":44,"author":{"gitId":"tanhuakun"},"content":"        if (!argMultimap.arePrefixesPresent(PREFIX_SUBJECT, PREFIX_DAY)","lastModifiedDate":"2021-10-19"},{"lineNumber":45,"author":{"gitId":"tanhuakun"},"content":"                || argMultimap.getPreamble().isEmpty() || !argMultimap.preambleHasExpectedSegments(1)) {","lastModifiedDate":"2021-11-02"},{"lineNumber":46,"author":{"gitId":"tanhuakun"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2021-10-19"},{"lineNumber":47,"author":{"gitId":"tanhuakun"},"content":"                    MESSAGE_USAGE));","lastModifiedDate":"2021-10-19"},{"lineNumber":48,"author":{"gitId":"tanhuakun"},"content":"        }","lastModifiedDate":"2021-10-19"},{"lineNumber":49,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":50,"author":{"gitId":"tanhuakun"},"content":"        Index index;","lastModifiedDate":"2021-10-19"},{"lineNumber":51,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":52,"author":{"gitId":"tanhuakun"},"content":"        try {","lastModifiedDate":"2021-10-19"},{"lineNumber":53,"author":{"gitId":"tanhuakun"},"content":"            index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2021-10-19"},{"lineNumber":54,"author":{"gitId":"tanhuakun"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2021-10-19"},{"lineNumber":55,"author":{"gitId":"tanhuakun"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2021-10-19"},{"lineNumber":56,"author":{"gitId":"tanhuakun"},"content":"                    MESSAGE_INVALID_INDEX_GIVEN), pe);","lastModifiedDate":"2021-11-02"},{"lineNumber":57,"author":{"gitId":"tanhuakun"},"content":"        }","lastModifiedDate":"2021-10-19"},{"lineNumber":58,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":59,"author":{"gitId":"tanhuakun"},"content":"        Subject subject \u003d ParserUtil.parseSubject(argMultimap.getValue(PREFIX_SUBJECT).get());","lastModifiedDate":"2021-10-19"},{"lineNumber":60,"author":{"gitId":"tanhuakun"},"content":"        LocalDateTime dateTime \u003d ParserUtil.parseLocalDateTime(argMultimap.getValue(PREFIX_DAY).get());","lastModifiedDate":"2021-10-19"},{"lineNumber":61,"author":{"gitId":"tanhuakun"},"content":"        Exam exam \u003d new Exam(subject, dateTime);","lastModifiedDate":"2021-10-19"},{"lineNumber":62,"author":{"gitId":"tanhuakun"},"content":"        EditPersonCommand.EditPersonDescriptor editPersonDescriptor \u003d new EditPersonCommand.EditPersonDescriptor();","lastModifiedDate":"2021-10-19"},{"lineNumber":63,"author":{"gitId":"tanhuakun"},"content":"        editPersonDescriptor.addExam(exam);","lastModifiedDate":"2021-10-19"},{"lineNumber":64,"author":{"gitId":"tanhuakun"},"content":"        return new EditPersonCommand(index, editPersonDescriptor, ADD_EXAM_SUCCESS);","lastModifiedDate":"2021-10-19"},{"lineNumber":65,"author":{"gitId":"tanhuakun"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":66,"author":{"gitId":"tanhuakun"},"content":"}","lastModifiedDate":"2021-10-19"}],"authorContributionMap":{"tanhuakun":66}},{"path":"src/main/java/seedu/address/logic/parser/persons/PersonAddLessonParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tanhuakun"},"content":"package seedu.address.logic.parser.persons;","lastModifiedDate":"2021-10-05"},{"lineNumber":2,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":3,"author":{"gitId":"tanhuakun"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-05"},{"lineNumber":4,"author":{"gitId":"tanhuakun"},"content":"import static seedu.address.logic.parser.CliSyntax.PERSON_COMMAND;","lastModifiedDate":"2021-11-05"},{"lineNumber":5,"author":{"gitId":"tanhuakun"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DAY;","lastModifiedDate":"2021-10-05"},{"lineNumber":6,"author":{"gitId":"tanhuakun"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_END_TIME;","lastModifiedDate":"2021-10-05"},{"lineNumber":7,"author":{"gitId":"tanhuakun"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_START_TIME;","lastModifiedDate":"2021-10-05"},{"lineNumber":8,"author":{"gitId":"tanhuakun"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_SUBJECT;","lastModifiedDate":"2021-10-05"},{"lineNumber":9,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":10,"author":{"gitId":"tanhuakun"},"content":"import seedu.address.logic.commands.persons.EditPersonCommand;","lastModifiedDate":"2021-10-19"},{"lineNumber":11,"author":{"gitId":"tanhuakun"},"content":"import seedu.address.logic.parser.Parser;","lastModifiedDate":"2021-10-05"},{"lineNumber":12,"author":{"gitId":"tanhuakun"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-10-05"},{"lineNumber":13,"author":{"gitId":"tanhuakun"},"content":"import seedu.address.logic.parser.lessons.AddLessonParserUtil;","lastModifiedDate":"2021-11-05"},{"lineNumber":14,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":15,"author":{"gitId":"tanhuakun"},"content":"/**","lastModifiedDate":"2021-10-12"},{"lineNumber":16,"author":{"gitId":"tanhuakun"},"content":" * Parses input arguments and creates a new EditPersonCommand object","lastModifiedDate":"2021-10-19"},{"lineNumber":17,"author":{"gitId":"tanhuakun"},"content":" */","lastModifiedDate":"2021-10-12"},{"lineNumber":18,"author":{"gitId":"tanhuakun"},"content":"public class PersonAddLessonParser implements Parser\u003cEditPersonCommand\u003e {","lastModifiedDate":"2021-10-19"},{"lineNumber":19,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":20,"author":{"gitId":"tanhuakun"},"content":"    public static final String COMMAND_WORD \u003d \"-al\";","lastModifiedDate":"2021-10-19"},{"lineNumber":21,"author":{"gitId":"tanhuakun"},"content":"    public static final String MESSAGE_USAGE \u003d PERSON_COMMAND + \" \" + COMMAND_WORD","lastModifiedDate":"2021-11-05"},{"lineNumber":22,"author":{"gitId":"tanhuakun"},"content":"            + \": Adds a lesson to the person identified \"","lastModifiedDate":"2021-11-05"},{"lineNumber":23,"author":{"gitId":"tanhuakun"},"content":"            + \"by the index number used in the displayed person list.\\n\"","lastModifiedDate":"2021-11-05"},{"lineNumber":24,"author":{"gitId":"tanhuakun"},"content":"            + \"Parameters: INDEX (must be a positive integer) \"","lastModifiedDate":"2021-10-19"},{"lineNumber":25,"author":{"gitId":"tanhuakun"},"content":"            + \"[\" + PREFIX_SUBJECT + \"SUBJECT] \"","lastModifiedDate":"2021-10-19"},{"lineNumber":26,"author":{"gitId":"tanhuakun"},"content":"            + \"[\" + PREFIX_START_TIME + \"HH:MM START TIME] \"","lastModifiedDate":"2021-10-19"},{"lineNumber":27,"author":{"gitId":"tanhuakun"},"content":"            + \"[\" + PREFIX_END_TIME + \"HH:MM END TIME] \"","lastModifiedDate":"2021-10-19"},{"lineNumber":28,"author":{"gitId":"tanhuakun"},"content":"            + \"[\" + PREFIX_DAY + \"DAY]\\n\"","lastModifiedDate":"2021-11-05"},{"lineNumber":29,"author":{"gitId":"tanhuakun"},"content":"            + \"Example: \" + PERSON_COMMAND + \" \" + COMMAND_WORD + \" 1 \"","lastModifiedDate":"2021-11-05"},{"lineNumber":30,"author":{"gitId":"tanhuakun"},"content":"            + PREFIX_DAY + \"Thu \" + PREFIX_START_TIME + \"10:00 \" + PREFIX_END_TIME + \"12:00 \"","lastModifiedDate":"2021-11-05"},{"lineNumber":31,"author":{"gitId":"tanhuakun"},"content":"            + PREFIX_SUBJECT + \"Chinese \";","lastModifiedDate":"2021-11-05"},{"lineNumber":32,"author":{"gitId":"tanhuakun"},"content":"    public static final String ADD_LESSON_SUCCESS \u003d \"Lesson added to person:\\n%s\";","lastModifiedDate":"2021-11-05"},{"lineNumber":33,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":34,"author":{"gitId":"tanhuakun"},"content":"    @Override","lastModifiedDate":"2021-10-05"},{"lineNumber":35,"author":{"gitId":"tanhuakun"},"content":"    public EditPersonCommand parse(String userInput) throws ParseException {","lastModifiedDate":"2021-10-19"},{"lineNumber":36,"author":{"gitId":"tanhuakun"},"content":"        requireNonNull(userInput);","lastModifiedDate":"2021-10-05"},{"lineNumber":37,"author":{"gitId":"tanhuakun"},"content":"        AddLessonParserUtil lessonParser \u003d AddLessonParserUtil.parseAddLesson(userInput, MESSAGE_USAGE);","lastModifiedDate":"2021-11-05"},{"lineNumber":38,"author":{"gitId":"tanhuakun"},"content":"        EditPersonCommand.EditPersonDescriptor editPersonDescriptor \u003d new EditPersonCommand.EditPersonDescriptor();","lastModifiedDate":"2021-10-19"},{"lineNumber":39,"author":{"gitId":"tanhuakun"},"content":"        editPersonDescriptor.addLesson(lessonParser.getLesson());","lastModifiedDate":"2021-11-05"},{"lineNumber":40,"author":{"gitId":"tanhuakun"},"content":"        return new EditPersonCommand(lessonParser.getIndex(), editPersonDescriptor, ADD_LESSON_SUCCESS);","lastModifiedDate":"2021-11-05"},{"lineNumber":41,"author":{"gitId":"tanhuakun"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":42,"author":{"gitId":"tanhuakun"},"content":"}","lastModifiedDate":"2021-10-05"}],"authorContributionMap":{"tanhuakun":42}},{"path":"src/main/java/seedu/address/logic/parser/persons/PersonCommandsParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tanhuakun"},"content":"package seedu.address.logic.parser.persons;","lastModifiedDate":"2021-10-03"},{"lineNumber":2,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":3,"author":{"gitId":"tanhuakun"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-10-03"},{"lineNumber":4,"author":{"gitId":"tanhuakun"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2021-10-03"},{"lineNumber":5,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":6,"author":{"gitId":"tanhuakun"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2021-10-03"},{"lineNumber":7,"author":{"gitId":"tanhuakun"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2021-10-03"},{"lineNumber":8,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":9,"author":{"gitId":"tanhuakun"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2021-10-03"},{"lineNumber":10,"author":{"gitId":"tanhuakun"},"content":"import seedu.address.logic.commands.HelpCommand;","lastModifiedDate":"2021-10-03"},{"lineNumber":11,"author":{"gitId":"tanhuakun"},"content":"import seedu.address.logic.commands.persons.AddPersonCommand;","lastModifiedDate":"2021-10-03"},{"lineNumber":12,"author":{"gitId":"tanhuakun"},"content":"import seedu.address.logic.commands.persons.DeletePersonCommand;","lastModifiedDate":"2021-10-03"},{"lineNumber":13,"author":{"gitId":"tanhuakun"},"content":"import seedu.address.logic.commands.persons.EditPersonCommand;","lastModifiedDate":"2021-10-03"},{"lineNumber":14,"author":{"gitId":"tanhuakun"},"content":"import seedu.address.logic.commands.persons.FindPersonCommand;","lastModifiedDate":"2021-10-03"},{"lineNumber":15,"author":{"gitId":"kvihashini"},"content":"import seedu.address.logic.commands.persons.ViewPersonCommand;","lastModifiedDate":"2021-10-05"},{"lineNumber":16,"author":{"gitId":"tanhuakun"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-10-03"},{"lineNumber":17,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":18,"author":{"gitId":"tanhuakun"},"content":"public class PersonCommandsParser {","lastModifiedDate":"2021-10-03"},{"lineNumber":19,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":20,"author":{"gitId":"tanhuakun"},"content":"    /**","lastModifiedDate":"2021-10-03"},{"lineNumber":21,"author":{"gitId":"tanhuakun"},"content":"     * Used for further separation of command action and args.","lastModifiedDate":"2021-10-03"},{"lineNumber":22,"author":{"gitId":"tanhuakun"},"content":"     */","lastModifiedDate":"2021-10-03"},{"lineNumber":23,"author":{"gitId":"tanhuakun"},"content":"    private static final Pattern COMMAND_FORMAT \u003d Pattern.compile(\"(?\u003caction\u003e\\\\-\\\\S+)(?\u003carguments\u003e.*)\");","lastModifiedDate":"2021-10-03"},{"lineNumber":24,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":25,"author":{"gitId":"tanhuakun"},"content":"    /**","lastModifiedDate":"2021-10-03"},{"lineNumber":26,"author":{"gitId":"tanhuakun"},"content":"     * Parses user input into command for execution.","lastModifiedDate":"2021-10-03"},{"lineNumber":27,"author":{"gitId":"tanhuakun"},"content":"     *","lastModifiedDate":"2021-10-03"},{"lineNumber":28,"author":{"gitId":"tanhuakun"},"content":"     * @param commandArgs user input string after COMMAND_WORD","lastModifiedDate":"2021-10-03"},{"lineNumber":29,"author":{"gitId":"tanhuakun"},"content":"     * @return the command based on the user input","lastModifiedDate":"2021-10-03"},{"lineNumber":30,"author":{"gitId":"tanhuakun"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2021-10-03"},{"lineNumber":31,"author":{"gitId":"tanhuakun"},"content":"     */","lastModifiedDate":"2021-10-03"},{"lineNumber":32,"author":{"gitId":"tanhuakun"},"content":"    public static Command parseCommand(String commandArgs) throws ParseException {","lastModifiedDate":"2021-10-03"},{"lineNumber":33,"author":{"gitId":"tanhuakun"},"content":"        final Matcher matcher \u003d COMMAND_FORMAT.matcher(commandArgs.trim());","lastModifiedDate":"2021-10-03"},{"lineNumber":34,"author":{"gitId":"tanhuakun"},"content":"        if (!matcher.matches()) {","lastModifiedDate":"2021-10-03"},{"lineNumber":35,"author":{"gitId":"tanhuakun"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-10-03"},{"lineNumber":36,"author":{"gitId":"tanhuakun"},"content":"        }","lastModifiedDate":"2021-10-03"},{"lineNumber":37,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":38,"author":{"gitId":"tanhuakun"},"content":"        final String action \u003d matcher.group(\"action\");","lastModifiedDate":"2021-10-03"},{"lineNumber":39,"author":{"gitId":"tanhuakun"},"content":"        final String arguments \u003d matcher.group(\"arguments\");","lastModifiedDate":"2021-10-03"},{"lineNumber":40,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":41,"author":{"gitId":"tanhuakun"},"content":"        switch (action) {","lastModifiedDate":"2021-10-03"},{"lineNumber":42,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":43,"author":{"gitId":"tanhuakun"},"content":"        case AddPersonCommand.COMMAND_WORD:","lastModifiedDate":"2021-10-03"},{"lineNumber":44,"author":{"gitId":"tanhuakun"},"content":"            return new AddPersonCommandParser().parse(arguments);","lastModifiedDate":"2021-10-03"},{"lineNumber":45,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":46,"author":{"gitId":"tanhuakun"},"content":"        case EditPersonCommand.COMMAND_WORD:","lastModifiedDate":"2021-10-03"},{"lineNumber":47,"author":{"gitId":"tanhuakun"},"content":"            return new EditPersonCommandParser().parse(arguments);","lastModifiedDate":"2021-10-03"},{"lineNumber":48,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":49,"author":{"gitId":"tanhuakun"},"content":"        case DeletePersonCommand.COMMAND_WORD:","lastModifiedDate":"2021-10-03"},{"lineNumber":50,"author":{"gitId":"tanhuakun"},"content":"            return new DeletePersonCommandParser().parse(arguments);","lastModifiedDate":"2021-10-03"},{"lineNumber":51,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":52,"author":{"gitId":"tanhuakun"},"content":"        case FindPersonCommand.COMMAND_WORD:","lastModifiedDate":"2021-10-03"},{"lineNumber":53,"author":{"gitId":"tanhuakun"},"content":"            return new FindPersonCommandParser().parse(arguments);","lastModifiedDate":"2021-10-03"},{"lineNumber":54,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-10-03"},{"lineNumber":55,"author":{"gitId":"tanhuakun"},"content":"        case PersonAddLessonParser.COMMAND_WORD:","lastModifiedDate":"2021-10-19"},{"lineNumber":56,"author":{"gitId":"tanhuakun"},"content":"            return new PersonAddLessonParser().parse(arguments);","lastModifiedDate":"2021-10-12"},{"lineNumber":57,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":58,"author":{"gitId":"tanhuakun"},"content":"        case PersonRemoveLessonParser.COMMAND_WORD:","lastModifiedDate":"2021-10-19"},{"lineNumber":59,"author":{"gitId":"tanhuakun"},"content":"            return new PersonRemoveLessonParser().parse(arguments);","lastModifiedDate":"2021-10-12"},{"lineNumber":60,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":61,"author":{"gitId":"kvihashini"},"content":"        case ViewPersonCommand.COMMAND_WORD:","lastModifiedDate":"2021-10-05"},{"lineNumber":62,"author":{"gitId":"kvihashini"},"content":"            return new ViewPersonCommandParser().parse(arguments);","lastModifiedDate":"2021-10-05"},{"lineNumber":63,"author":{"gitId":"kvihashini"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":64,"author":{"gitId":"tanhuakun"},"content":"        case PersonAddExamParser.COMMAND_WORD:","lastModifiedDate":"2021-10-19"},{"lineNumber":65,"author":{"gitId":"tanhuakun"},"content":"            return new PersonAddExamParser().parse(arguments);","lastModifiedDate":"2021-10-19"},{"lineNumber":66,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":67,"author":{"gitId":"tanhuakun"},"content":"        case PersonRemoveExamParser.COMMAND_WORD:","lastModifiedDate":"2021-10-19"},{"lineNumber":68,"author":{"gitId":"tanhuakun"},"content":"            return new PersonRemoveExamParser().parse(arguments);","lastModifiedDate":"2021-10-19"},{"lineNumber":69,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":70,"author":{"gitId":"tanhuakun"},"content":"        default:","lastModifiedDate":"2021-10-03"},{"lineNumber":71,"author":{"gitId":"tanhuakun"},"content":"            throw new ParseException(MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2021-10-03"},{"lineNumber":72,"author":{"gitId":"tanhuakun"},"content":"        }","lastModifiedDate":"2021-10-03"},{"lineNumber":73,"author":{"gitId":"tanhuakun"},"content":"    }","lastModifiedDate":"2021-10-03"},{"lineNumber":74,"author":{"gitId":"tanhuakun"},"content":"}","lastModifiedDate":"2021-10-03"}],"authorContributionMap":{"kvihashini":4,"tanhuakun":70}},{"path":"src/main/java/seedu/address/logic/parser/persons/PersonRemoveExamParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tanhuakun"},"content":"package seedu.address.logic.parser.persons;","lastModifiedDate":"2021-10-19"},{"lineNumber":2,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":3,"author":{"gitId":"tanhuakun"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-19"},{"lineNumber":4,"author":{"gitId":"tanhuakun"},"content":"import static seedu.address.logic.parser.CliSyntax.PERSON_COMMAND;","lastModifiedDate":"2021-11-05"},{"lineNumber":5,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":6,"author":{"gitId":"tanhuakun"},"content":"import java.util.List;","lastModifiedDate":"2021-10-19"},{"lineNumber":7,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":8,"author":{"gitId":"tanhuakun"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-10-19"},{"lineNumber":9,"author":{"gitId":"tanhuakun"},"content":"import seedu.address.logic.commands.persons.EditPersonCommand;","lastModifiedDate":"2021-10-19"},{"lineNumber":10,"author":{"gitId":"tanhuakun"},"content":"import seedu.address.logic.parser.Parser;","lastModifiedDate":"2021-10-19"},{"lineNumber":11,"author":{"gitId":"tanhuakun"},"content":"import seedu.address.logic.parser.ParserUtil;","lastModifiedDate":"2021-10-19"},{"lineNumber":12,"author":{"gitId":"tanhuakun"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-10-19"},{"lineNumber":13,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":14,"author":{"gitId":"tanhuakun"},"content":"/**","lastModifiedDate":"2021-10-19"},{"lineNumber":15,"author":{"gitId":"tanhuakun"},"content":" * Parses input arguments and creates a new EditPersonCommand object","lastModifiedDate":"2021-10-19"},{"lineNumber":16,"author":{"gitId":"tanhuakun"},"content":" */","lastModifiedDate":"2021-10-19"},{"lineNumber":17,"author":{"gitId":"tanhuakun"},"content":"public class PersonRemoveExamParser implements Parser\u003cEditPersonCommand\u003e {","lastModifiedDate":"2021-10-19"},{"lineNumber":18,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":19,"author":{"gitId":"tanhuakun"},"content":"    public static final String COMMAND_WORD \u003d \"-de\";","lastModifiedDate":"2021-10-19"},{"lineNumber":20,"author":{"gitId":"tanhuakun"},"content":"    public static final String MESSAGE_USAGE \u003d PERSON_COMMAND + \" \" + COMMAND_WORD","lastModifiedDate":"2021-11-05"},{"lineNumber":21,"author":{"gitId":"tanhuakun"},"content":"            + \": Removes the exam identified by the index number \"","lastModifiedDate":"2021-11-05"},{"lineNumber":22,"author":{"gitId":"tanhuakun"},"content":"            + \"from the person identified by the index number used in the displayed list.\\n\"","lastModifiedDate":"2021-11-05"},{"lineNumber":23,"author":{"gitId":"tanhuakun"},"content":"            + \"Parameters: INDEX1 INDEX2 (both must be a positive integer)\\n\"","lastModifiedDate":"2021-11-05"},{"lineNumber":24,"author":{"gitId":"tanhuakun"},"content":"            + \"Example: \" + PERSON_COMMAND + \" \" + COMMAND_WORD + \" 1 1\";","lastModifiedDate":"2021-11-05"},{"lineNumber":25,"author":{"gitId":"tanhuakun"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Exam deleted from person:\\n%s\";","lastModifiedDate":"2021-11-05"},{"lineNumber":26,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":27,"author":{"gitId":"tanhuakun"},"content":"    @Override","lastModifiedDate":"2021-10-19"},{"lineNumber":28,"author":{"gitId":"tanhuakun"},"content":"    public EditPersonCommand parse(String userInput) throws ParseException {","lastModifiedDate":"2021-10-19"},{"lineNumber":29,"author":{"gitId":"tanhuakun"},"content":"        requireNonNull(userInput);","lastModifiedDate":"2021-10-19"},{"lineNumber":30,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":31,"author":{"gitId":"tanhuakun"},"content":"        List\u003cIndex\u003e indexes \u003d ParserUtil.parseOnlyIndexString(userInput, 2, MESSAGE_USAGE);","lastModifiedDate":"2021-11-05"},{"lineNumber":32,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":33,"author":{"gitId":"tanhuakun"},"content":"        EditPersonCommand.EditPersonDescriptor editPersonDescriptor \u003d new EditPersonCommand.EditPersonDescriptor();","lastModifiedDate":"2021-10-19"},{"lineNumber":34,"author":{"gitId":"tanhuakun"},"content":"        editPersonDescriptor.removeExam(indexes.get(1));","lastModifiedDate":"2021-10-19"},{"lineNumber":35,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":36,"author":{"gitId":"tanhuakun"},"content":"        return new EditPersonCommand(indexes.get(0), editPersonDescriptor, MESSAGE_SUCCESS);","lastModifiedDate":"2021-10-19"},{"lineNumber":37,"author":{"gitId":"tanhuakun"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":38,"author":{"gitId":"tanhuakun"},"content":"}","lastModifiedDate":"2021-10-19"}],"authorContributionMap":{"tanhuakun":38}},{"path":"src/main/java/seedu/address/logic/parser/persons/PersonRemoveLessonParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tanhuakun"},"content":"package seedu.address.logic.parser.persons;","lastModifiedDate":"2021-10-12"},{"lineNumber":2,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":3,"author":{"gitId":"tanhuakun"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-12"},{"lineNumber":4,"author":{"gitId":"tanhuakun"},"content":"import static seedu.address.logic.parser.CliSyntax.PERSON_COMMAND;","lastModifiedDate":"2021-11-05"},{"lineNumber":5,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":6,"author":{"gitId":"tanhuakun"},"content":"import java.util.List;","lastModifiedDate":"2021-10-12"},{"lineNumber":7,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":8,"author":{"gitId":"tanhuakun"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-10-12"},{"lineNumber":9,"author":{"gitId":"tanhuakun"},"content":"import seedu.address.logic.commands.persons.EditPersonCommand;","lastModifiedDate":"2021-10-19"},{"lineNumber":10,"author":{"gitId":"tanhuakun"},"content":"import seedu.address.logic.parser.Parser;","lastModifiedDate":"2021-10-12"},{"lineNumber":11,"author":{"gitId":"tanhuakun"},"content":"import seedu.address.logic.parser.ParserUtil;","lastModifiedDate":"2021-10-12"},{"lineNumber":12,"author":{"gitId":"tanhuakun"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-10-12"},{"lineNumber":13,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":14,"author":{"gitId":"tanhuakun"},"content":"/**","lastModifiedDate":"2021-10-12"},{"lineNumber":15,"author":{"gitId":"tanhuakun"},"content":" * Parses input arguments and creates a new EditPersonCommand object","lastModifiedDate":"2021-10-19"},{"lineNumber":16,"author":{"gitId":"tanhuakun"},"content":" */","lastModifiedDate":"2021-10-12"},{"lineNumber":17,"author":{"gitId":"tanhuakun"},"content":"public class PersonRemoveLessonParser implements Parser\u003cEditPersonCommand\u003e {","lastModifiedDate":"2021-10-19"},{"lineNumber":18,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":19,"author":{"gitId":"tanhuakun"},"content":"    public static final String COMMAND_WORD \u003d \"-dl\";","lastModifiedDate":"2021-10-19"},{"lineNumber":20,"author":{"gitId":"tanhuakun"},"content":"    public static final String MESSAGE_USAGE \u003d PERSON_COMMAND + \" \" + COMMAND_WORD","lastModifiedDate":"2021-11-05"},{"lineNumber":21,"author":{"gitId":"tanhuakun"},"content":"            + \": Removes the lesson identified by the index number \"","lastModifiedDate":"2021-11-05"},{"lineNumber":22,"author":{"gitId":"tanhuakun"},"content":"            + \"from the person identified by the index number used in the displayed list.\\n\"","lastModifiedDate":"2021-11-05"},{"lineNumber":23,"author":{"gitId":"tanhuakun"},"content":"            + \"Parameters: INDEX1 INDEX2 (both must be a positive integer)\\n\"","lastModifiedDate":"2021-11-05"},{"lineNumber":24,"author":{"gitId":"tanhuakun"},"content":"            + \"Example: \" + PERSON_COMMAND + \" \" + COMMAND_WORD + \" 1 1\";","lastModifiedDate":"2021-11-05"},{"lineNumber":25,"author":{"gitId":"tanhuakun"},"content":"    public static final String MESSAGE_SUCCESS \u003d \"Lesson deleted from person:\\n%s\";","lastModifiedDate":"2021-11-05"},{"lineNumber":26,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":27,"author":{"gitId":"tanhuakun"},"content":"    @Override","lastModifiedDate":"2021-10-12"},{"lineNumber":28,"author":{"gitId":"tanhuakun"},"content":"    public EditPersonCommand parse(String userInput) throws ParseException {","lastModifiedDate":"2021-10-19"},{"lineNumber":29,"author":{"gitId":"tanhuakun"},"content":"        requireNonNull(userInput);","lastModifiedDate":"2021-10-12"},{"lineNumber":30,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":31,"author":{"gitId":"tanhuakun"},"content":"        List\u003cIndex\u003e indexes \u003d ParserUtil.parseOnlyIndexString(userInput, 2, MESSAGE_USAGE);","lastModifiedDate":"2021-11-05"},{"lineNumber":32,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":33,"author":{"gitId":"tanhuakun"},"content":"        EditPersonCommand.EditPersonDescriptor editPersonDescriptor \u003d new EditPersonCommand.EditPersonDescriptor();","lastModifiedDate":"2021-10-19"},{"lineNumber":34,"author":{"gitId":"tanhuakun"},"content":"        editPersonDescriptor.removeLesson(indexes.get(1));","lastModifiedDate":"2021-10-19"},{"lineNumber":35,"author":{"gitId":"tanhuakun"},"content":"        return new EditPersonCommand(indexes.get(0), editPersonDescriptor, MESSAGE_SUCCESS);","lastModifiedDate":"2021-10-19"},{"lineNumber":36,"author":{"gitId":"tanhuakun"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":37,"author":{"gitId":"tanhuakun"},"content":"}","lastModifiedDate":"2021-10-12"}],"authorContributionMap":{"tanhuakun":37}},{"path":"src/main/java/seedu/address/logic/parser/persons/ViewPersonCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kvihashini"},"content":"package seedu.address.logic.parser.persons;","lastModifiedDate":"2021-10-05"},{"lineNumber":2,"author":{"gitId":"kvihashini"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":3,"author":{"gitId":"kvihashini"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-10-05"},{"lineNumber":4,"author":{"gitId":"tanhuakun"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_INDEX_GIVEN;","lastModifiedDate":"2021-11-02"},{"lineNumber":5,"author":{"gitId":"tanhuakun"},"content":"import static seedu.address.logic.parser.ValidateUtil.hasExpectedSeparatedSegments;","lastModifiedDate":"2021-11-02"},{"lineNumber":6,"author":{"gitId":"tanhuakun"},"content":"import static seedu.address.logic.parser.ValidateUtil.isEmptyOrOnlyWhitespace;","lastModifiedDate":"2021-11-02"},{"lineNumber":7,"author":{"gitId":"kvihashini"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":8,"author":{"gitId":"kvihashini"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-10-05"},{"lineNumber":9,"author":{"gitId":"kvihashini"},"content":"import seedu.address.logic.commands.persons.ViewPersonCommand;","lastModifiedDate":"2021-10-05"},{"lineNumber":10,"author":{"gitId":"kvihashini"},"content":"import seedu.address.logic.parser.Parser;","lastModifiedDate":"2021-10-05"},{"lineNumber":11,"author":{"gitId":"kvihashini"},"content":"import seedu.address.logic.parser.ParserUtil;","lastModifiedDate":"2021-10-05"},{"lineNumber":12,"author":{"gitId":"kvihashini"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-10-05"},{"lineNumber":13,"author":{"gitId":"kvihashini"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":14,"author":{"gitId":"kvihashini"},"content":"/**","lastModifiedDate":"2021-10-05"},{"lineNumber":15,"author":{"gitId":"kvihashini"},"content":" * Parses input arguments and creates a new ViewPersonCommand object","lastModifiedDate":"2021-10-05"},{"lineNumber":16,"author":{"gitId":"kvihashini"},"content":" */","lastModifiedDate":"2021-10-05"},{"lineNumber":17,"author":{"gitId":"kvihashini"},"content":"public class ViewPersonCommandParser implements Parser\u003cViewPersonCommand\u003e {","lastModifiedDate":"2021-10-05"},{"lineNumber":18,"author":{"gitId":"kvihashini"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":19,"author":{"gitId":"kvihashini"},"content":"    /**","lastModifiedDate":"2021-10-05"},{"lineNumber":20,"author":{"gitId":"kvihashini"},"content":"     * Parses the given {@code String} of arguments in the context of the ViewPersonCommand","lastModifiedDate":"2021-10-05"},{"lineNumber":21,"author":{"gitId":"kvihashini"},"content":"     * and returns a ViewPersonCommand object for execution.","lastModifiedDate":"2021-10-05"},{"lineNumber":22,"author":{"gitId":"kvihashini"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2021-10-05"},{"lineNumber":23,"author":{"gitId":"kvihashini"},"content":"     */","lastModifiedDate":"2021-10-05"},{"lineNumber":24,"author":{"gitId":"kvihashini"},"content":"    public ViewPersonCommand parse(String args) throws ParseException {","lastModifiedDate":"2021-10-05"},{"lineNumber":25,"author":{"gitId":"tanhuakun"},"content":"        if (isEmptyOrOnlyWhitespace(args) || !hasExpectedSeparatedSegments(args, 1)) {","lastModifiedDate":"2021-11-02"},{"lineNumber":26,"author":{"gitId":"tanhuakun"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2021-11-02"},{"lineNumber":27,"author":{"gitId":"tanhuakun"},"content":"                    ViewPersonCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-11-02"},{"lineNumber":28,"author":{"gitId":"tanhuakun"},"content":"        }","lastModifiedDate":"2021-11-02"},{"lineNumber":29,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":30,"author":{"gitId":"kvihashini"},"content":"        try {","lastModifiedDate":"2021-10-05"},{"lineNumber":31,"author":{"gitId":"kvihashini"},"content":"            Index index \u003d ParserUtil.parseIndex(args);","lastModifiedDate":"2021-10-05"},{"lineNumber":32,"author":{"gitId":"kvihashini"},"content":"            return new ViewPersonCommand(index);","lastModifiedDate":"2021-10-05"},{"lineNumber":33,"author":{"gitId":"kvihashini"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2021-10-05"},{"lineNumber":34,"author":{"gitId":"kvihashini"},"content":"            throw new ParseException(","lastModifiedDate":"2021-10-05"},{"lineNumber":35,"author":{"gitId":"tanhuakun"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, MESSAGE_INVALID_INDEX_GIVEN), pe);","lastModifiedDate":"2021-11-02"},{"lineNumber":36,"author":{"gitId":"kvihashini"},"content":"        }","lastModifiedDate":"2021-10-05"},{"lineNumber":37,"author":{"gitId":"kvihashini"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":38,"author":{"gitId":"kvihashini"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":39,"author":{"gitId":"kvihashini"},"content":"}","lastModifiedDate":"2021-10-05"}],"authorContributionMap":{"kvihashini":30,"tanhuakun":9}},{"path":"src/main/java/seedu/address/logic/parser/tasks/AddTaskCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"eltonyeh"},"content":"package seedu.address.logic.parser.tasks;","lastModifiedDate":"2021-10-12"},{"lineNumber":2,"author":{"gitId":"eltonyeh"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":3,"author":{"gitId":"eltonyeh"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-10-12"},{"lineNumber":4,"author":{"gitId":"eltonyeh"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DEADLINE;","lastModifiedDate":"2021-10-12"},{"lineNumber":5,"author":{"gitId":"eltonyeh"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DESCRIPTION;","lastModifiedDate":"2021-10-12"},{"lineNumber":6,"author":{"gitId":"eltonyeh"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":7,"author":{"gitId":"eltonyeh"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2021-10-12"},{"lineNumber":8,"author":{"gitId":"eltonyeh"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":9,"author":{"gitId":"eltonyeh"},"content":"import seedu.address.logic.commands.tasks.AddTaskCommand;","lastModifiedDate":"2021-10-12"},{"lineNumber":10,"author":{"gitId":"eltonyeh"},"content":"import seedu.address.logic.parser.ArgumentMultimap;","lastModifiedDate":"2021-10-12"},{"lineNumber":11,"author":{"gitId":"eltonyeh"},"content":"import seedu.address.logic.parser.ArgumentTokenizer;","lastModifiedDate":"2021-10-12"},{"lineNumber":12,"author":{"gitId":"eltonyeh"},"content":"import seedu.address.logic.parser.Parser;","lastModifiedDate":"2021-10-12"},{"lineNumber":13,"author":{"gitId":"eltonyeh"},"content":"import seedu.address.logic.parser.ParserUtil;","lastModifiedDate":"2021-10-12"},{"lineNumber":14,"author":{"gitId":"eltonyeh"},"content":"import seedu.address.logic.parser.Prefix;","lastModifiedDate":"2021-10-12"},{"lineNumber":15,"author":{"gitId":"eltonyeh"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-10-12"},{"lineNumber":16,"author":{"gitId":"eltonyeh"},"content":"import seedu.address.model.task.Deadline;","lastModifiedDate":"2021-10-12"},{"lineNumber":17,"author":{"gitId":"eltonyeh"},"content":"import seedu.address.model.task.Description;","lastModifiedDate":"2021-10-12"},{"lineNumber":18,"author":{"gitId":"eltonyeh"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2021-10-12"},{"lineNumber":19,"author":{"gitId":"eltonyeh"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":20,"author":{"gitId":"eltonyeh"},"content":"/**","lastModifiedDate":"2021-10-12"},{"lineNumber":21,"author":{"gitId":"Neha-5678"},"content":" * Parses input arguments and creates a new AddTaskCommand object.","lastModifiedDate":"2021-10-19"},{"lineNumber":22,"author":{"gitId":"eltonyeh"},"content":" */","lastModifiedDate":"2021-10-12"},{"lineNumber":23,"author":{"gitId":"eltonyeh"},"content":"public class AddTaskCommandParser implements Parser\u003cAddTaskCommand\u003e {","lastModifiedDate":"2021-10-12"},{"lineNumber":24,"author":{"gitId":"eltonyeh"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":25,"author":{"gitId":"eltonyeh"},"content":"    /**","lastModifiedDate":"2021-10-12"},{"lineNumber":26,"author":{"gitId":"eltonyeh"},"content":"     * Parses the given {@code String} of arguments in the context of the AddTaskCommand","lastModifiedDate":"2021-10-12"},{"lineNumber":27,"author":{"gitId":"eltonyeh"},"content":"     * and returns an AddTaskCommand object for execution.","lastModifiedDate":"2021-10-12"},{"lineNumber":28,"author":{"gitId":"eltonyeh"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2021-10-12"},{"lineNumber":29,"author":{"gitId":"eltonyeh"},"content":"     */","lastModifiedDate":"2021-10-12"},{"lineNumber":30,"author":{"gitId":"eltonyeh"},"content":"    public AddTaskCommand parse(String args) throws ParseException {","lastModifiedDate":"2021-10-12"},{"lineNumber":31,"author":{"gitId":"eltonyeh"},"content":"        ArgumentMultimap argMultimap \u003d ArgumentTokenizer.tokenize(args, PREFIX_DESCRIPTION, PREFIX_DEADLINE);","lastModifiedDate":"2021-10-12"},{"lineNumber":32,"author":{"gitId":"eltonyeh"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":33,"author":{"gitId":"eltonyeh"},"content":"        if (!arePrefixesPresent(argMultimap, PREFIX_DESCRIPTION, PREFIX_DEADLINE)","lastModifiedDate":"2021-10-12"},{"lineNumber":34,"author":{"gitId":"tanhuakun"},"content":"                || !argMultimap.getPreamble().isEmpty()) {","lastModifiedDate":"2021-11-04"},{"lineNumber":35,"author":{"gitId":"eltonyeh"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddTaskCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-10-12"},{"lineNumber":36,"author":{"gitId":"eltonyeh"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":37,"author":{"gitId":"eltonyeh"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":38,"author":{"gitId":"eltonyeh"},"content":"        Description description \u003d ParserUtil.parseTaskDescription(argMultimap.getValue(PREFIX_DESCRIPTION).get());","lastModifiedDate":"2021-10-12"},{"lineNumber":39,"author":{"gitId":"eltonyeh"},"content":"        Deadline deadline \u003d ParserUtil.parseTaskDeadline(argMultimap.getValue(PREFIX_DEADLINE).get());","lastModifiedDate":"2021-10-12"},{"lineNumber":40,"author":{"gitId":"eltonyeh"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":41,"author":{"gitId":"eltonyeh"},"content":"        // default empty lessons list","lastModifiedDate":"2021-10-12"},{"lineNumber":42,"author":{"gitId":"eltonyeh"},"content":"        Task task \u003d new Task(description, deadline);","lastModifiedDate":"2021-10-12"},{"lineNumber":43,"author":{"gitId":"eltonyeh"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":44,"author":{"gitId":"eltonyeh"},"content":"        return new AddTaskCommand(task);","lastModifiedDate":"2021-10-12"},{"lineNumber":45,"author":{"gitId":"eltonyeh"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":46,"author":{"gitId":"eltonyeh"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":47,"author":{"gitId":"eltonyeh"},"content":"    /**","lastModifiedDate":"2021-10-12"},{"lineNumber":48,"author":{"gitId":"eltonyeh"},"content":"     * Returns true if none of the prefixes contains empty {@code Optional} values in the given","lastModifiedDate":"2021-10-12"},{"lineNumber":49,"author":{"gitId":"eltonyeh"},"content":"     * {@code ArgumentMultimap}.","lastModifiedDate":"2021-10-12"},{"lineNumber":50,"author":{"gitId":"eltonyeh"},"content":"     */","lastModifiedDate":"2021-10-12"},{"lineNumber":51,"author":{"gitId":"eltonyeh"},"content":"    private static boolean arePrefixesPresent(ArgumentMultimap argumentMultimap, Prefix... prefixes) {","lastModifiedDate":"2021-10-12"},{"lineNumber":52,"author":{"gitId":"eltonyeh"},"content":"        return Stream.of(prefixes).allMatch(prefix -\u003e argumentMultimap.getValue(prefix).isPresent());","lastModifiedDate":"2021-10-12"},{"lineNumber":53,"author":{"gitId":"eltonyeh"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":54,"author":{"gitId":"eltonyeh"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":55,"author":{"gitId":"eltonyeh"},"content":"}","lastModifiedDate":"2021-10-12"},{"lineNumber":56,"author":{"gitId":"eltonyeh"},"content":"","lastModifiedDate":"2021-10-12"}],"authorContributionMap":{"Neha-5678":1,"eltonyeh":54,"tanhuakun":1}},{"path":"src/main/java/seedu/address/logic/parser/tasks/AssignTaskToGroupCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"eltonyeh"},"content":"package seedu.address.logic.parser.tasks;","lastModifiedDate":"2021-10-26"},{"lineNumber":2,"author":{"gitId":"eltonyeh"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":3,"author":{"gitId":"eltonyeh"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-26"},{"lineNumber":4,"author":{"gitId":"eltonyeh"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-10-26"},{"lineNumber":5,"author":{"gitId":"tanhuakun"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_INDEX_GIVEN;","lastModifiedDate":"2021-11-02"},{"lineNumber":6,"author":{"gitId":"tanhuakun"},"content":"import static seedu.address.logic.parser.ValidateUtil.hasExpectedSeparatedSegments;","lastModifiedDate":"2021-11-02"},{"lineNumber":7,"author":{"gitId":"tanhuakun"},"content":"import static seedu.address.logic.parser.ValidateUtil.isEmptyOrOnlyWhitespace;","lastModifiedDate":"2021-11-02"},{"lineNumber":8,"author":{"gitId":"eltonyeh"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":9,"author":{"gitId":"eltonyeh"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-10-26"},{"lineNumber":10,"author":{"gitId":"eltonyeh"},"content":"import seedu.address.logic.commands.tasks.AssignTaskToGroupCommand;","lastModifiedDate":"2021-10-26"},{"lineNumber":11,"author":{"gitId":"eltonyeh"},"content":"import seedu.address.logic.parser.Parser;","lastModifiedDate":"2021-10-26"},{"lineNumber":12,"author":{"gitId":"eltonyeh"},"content":"import seedu.address.logic.parser.ParserUtil;","lastModifiedDate":"2021-10-26"},{"lineNumber":13,"author":{"gitId":"eltonyeh"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-10-26"},{"lineNumber":14,"author":{"gitId":"eltonyeh"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":15,"author":{"gitId":"eltonyeh"},"content":"public class AssignTaskToGroupCommandParser implements Parser\u003cAssignTaskToGroupCommand\u003e {","lastModifiedDate":"2021-10-26"},{"lineNumber":16,"author":{"gitId":"eltonyeh"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":17,"author":{"gitId":"eltonyeh"},"content":"    /**","lastModifiedDate":"2021-10-26"},{"lineNumber":18,"author":{"gitId":"eltonyeh"},"content":"     * Parses the given {@code String} of arguments in the context of the AssignTaskToGroupCommand","lastModifiedDate":"2021-10-26"},{"lineNumber":19,"author":{"gitId":"eltonyeh"},"content":"     * and returns an AssignTaskToGroupCommand object for execution.","lastModifiedDate":"2021-10-26"},{"lineNumber":20,"author":{"gitId":"eltonyeh"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2021-10-26"},{"lineNumber":21,"author":{"gitId":"eltonyeh"},"content":"     */","lastModifiedDate":"2021-10-26"},{"lineNumber":22,"author":{"gitId":"eltonyeh"},"content":"    public AssignTaskToGroupCommand parse(String args) throws ParseException {","lastModifiedDate":"2021-10-26"},{"lineNumber":23,"author":{"gitId":"eltonyeh"},"content":"        requireNonNull(args);","lastModifiedDate":"2021-10-26"},{"lineNumber":24,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":25,"author":{"gitId":"tanhuakun"},"content":"        if (isEmptyOrOnlyWhitespace(args) || !hasExpectedSeparatedSegments(args, 2)) {","lastModifiedDate":"2021-11-02"},{"lineNumber":26,"author":{"gitId":"tanhuakun"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2021-11-02"},{"lineNumber":27,"author":{"gitId":"tanhuakun"},"content":"                    AssignTaskToGroupCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-11-02"},{"lineNumber":28,"author":{"gitId":"tanhuakun"},"content":"        }","lastModifiedDate":"2021-11-02"},{"lineNumber":29,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":30,"author":{"gitId":"eltonyeh"},"content":"        Index groupIndex;","lastModifiedDate":"2021-10-26"},{"lineNumber":31,"author":{"gitId":"eltonyeh"},"content":"        Index taskIndex;","lastModifiedDate":"2021-10-26"},{"lineNumber":32,"author":{"gitId":"eltonyeh"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":33,"author":{"gitId":"eltonyeh"},"content":"        try {","lastModifiedDate":"2021-10-26"},{"lineNumber":34,"author":{"gitId":"eltonyeh"},"content":"            Index[] indices \u003d ParserUtil.parseTwoIndices(args);","lastModifiedDate":"2021-10-26"},{"lineNumber":35,"author":{"gitId":"eltonyeh"},"content":"            groupIndex \u003d indices[0];","lastModifiedDate":"2021-10-26"},{"lineNumber":36,"author":{"gitId":"eltonyeh"},"content":"            taskIndex \u003d indices[1];","lastModifiedDate":"2021-10-26"},{"lineNumber":37,"author":{"gitId":"eltonyeh"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2021-10-26"},{"lineNumber":38,"author":{"gitId":"eltonyeh"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2021-10-26"},{"lineNumber":39,"author":{"gitId":"tanhuakun"},"content":"                    MESSAGE_INVALID_INDEX_GIVEN), pe);","lastModifiedDate":"2021-11-02"},{"lineNumber":40,"author":{"gitId":"eltonyeh"},"content":"        }","lastModifiedDate":"2021-10-26"},{"lineNumber":41,"author":{"gitId":"eltonyeh"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":42,"author":{"gitId":"eltonyeh"},"content":"        return new AssignTaskToGroupCommand(groupIndex, taskIndex);","lastModifiedDate":"2021-10-26"},{"lineNumber":43,"author":{"gitId":"eltonyeh"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":44,"author":{"gitId":"eltonyeh"},"content":"}","lastModifiedDate":"2021-10-26"},{"lineNumber":45,"author":{"gitId":"eltonyeh"},"content":"","lastModifiedDate":"2021-10-26"}],"authorContributionMap":{"eltonyeh":35,"tanhuakun":10}},{"path":"src/main/java/seedu/address/logic/parser/tasks/AssignTaskToPersonCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jeremy-7007"},"content":"package seedu.address.logic.parser.tasks;","lastModifiedDate":"2021-10-12"},{"lineNumber":2,"author":{"gitId":"jeremy-7007"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":3,"author":{"gitId":"jeremy-7007"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-12"},{"lineNumber":4,"author":{"gitId":"jeremy-7007"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-10-12"},{"lineNumber":5,"author":{"gitId":"tanhuakun"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_INDEX_GIVEN;","lastModifiedDate":"2021-11-02"},{"lineNumber":6,"author":{"gitId":"tanhuakun"},"content":"import static seedu.address.logic.parser.ValidateUtil.hasExpectedSeparatedSegments;","lastModifiedDate":"2021-11-02"},{"lineNumber":7,"author":{"gitId":"tanhuakun"},"content":"import static seedu.address.logic.parser.ValidateUtil.isEmptyOrOnlyWhitespace;","lastModifiedDate":"2021-11-02"},{"lineNumber":8,"author":{"gitId":"jeremy-7007"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":9,"author":{"gitId":"jeremy-7007"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-10-12"},{"lineNumber":10,"author":{"gitId":"jeremy-7007"},"content":"import seedu.address.logic.commands.tasks.AssignTaskToPersonCommand;","lastModifiedDate":"2021-10-12"},{"lineNumber":11,"author":{"gitId":"jeremy-7007"},"content":"import seedu.address.logic.parser.Parser;","lastModifiedDate":"2021-10-12"},{"lineNumber":12,"author":{"gitId":"jeremy-7007"},"content":"import seedu.address.logic.parser.ParserUtil;","lastModifiedDate":"2021-10-12"},{"lineNumber":13,"author":{"gitId":"jeremy-7007"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-10-12"},{"lineNumber":14,"author":{"gitId":"jeremy-7007"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":15,"author":{"gitId":"jeremy-7007"},"content":"public class AssignTaskToPersonCommandParser implements Parser\u003cAssignTaskToPersonCommand\u003e {","lastModifiedDate":"2021-10-12"},{"lineNumber":16,"author":{"gitId":"jeremy-7007"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":17,"author":{"gitId":"jeremy-7007"},"content":"    /**","lastModifiedDate":"2021-10-12"},{"lineNumber":18,"author":{"gitId":"jeremy-7007"},"content":"     * Parses the given {@code String} of arguments in the context of the AssignTaskToPersonCommand","lastModifiedDate":"2021-10-12"},{"lineNumber":19,"author":{"gitId":"jeremy-7007"},"content":"     * and returns an AssignTaskToPersonCommand object for execution.","lastModifiedDate":"2021-10-12"},{"lineNumber":20,"author":{"gitId":"jeremy-7007"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2021-10-12"},{"lineNumber":21,"author":{"gitId":"jeremy-7007"},"content":"     */","lastModifiedDate":"2021-10-12"},{"lineNumber":22,"author":{"gitId":"jeremy-7007"},"content":"    public AssignTaskToPersonCommand parse(String args) throws ParseException {","lastModifiedDate":"2021-10-12"},{"lineNumber":23,"author":{"gitId":"jeremy-7007"},"content":"        requireNonNull(args);","lastModifiedDate":"2021-10-12"},{"lineNumber":24,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":25,"author":{"gitId":"tanhuakun"},"content":"        if (isEmptyOrOnlyWhitespace(args) || !hasExpectedSeparatedSegments(args, 2)) {","lastModifiedDate":"2021-11-02"},{"lineNumber":26,"author":{"gitId":"tanhuakun"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2021-11-02"},{"lineNumber":27,"author":{"gitId":"tanhuakun"},"content":"                    AssignTaskToPersonCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-11-02"},{"lineNumber":28,"author":{"gitId":"tanhuakun"},"content":"        }","lastModifiedDate":"2021-11-02"},{"lineNumber":29,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":30,"author":{"gitId":"jeremy-7007"},"content":"        Index personIndex;","lastModifiedDate":"2021-10-12"},{"lineNumber":31,"author":{"gitId":"jeremy-7007"},"content":"        Index taskIndex;","lastModifiedDate":"2021-10-12"},{"lineNumber":32,"author":{"gitId":"jeremy-7007"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":33,"author":{"gitId":"jeremy-7007"},"content":"        try {","lastModifiedDate":"2021-10-12"},{"lineNumber":34,"author":{"gitId":"jeremy-7007"},"content":"            Index[] indices \u003d ParserUtil.parseTwoIndices(args);","lastModifiedDate":"2021-10-12"},{"lineNumber":35,"author":{"gitId":"jeremy-7007"},"content":"            personIndex \u003d indices[0];","lastModifiedDate":"2021-10-12"},{"lineNumber":36,"author":{"gitId":"jeremy-7007"},"content":"            taskIndex \u003d indices[1];","lastModifiedDate":"2021-10-12"},{"lineNumber":37,"author":{"gitId":"jeremy-7007"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2021-10-12"},{"lineNumber":38,"author":{"gitId":"jeremy-7007"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2021-10-12"},{"lineNumber":39,"author":{"gitId":"tanhuakun"},"content":"                    MESSAGE_INVALID_INDEX_GIVEN), pe);","lastModifiedDate":"2021-11-02"},{"lineNumber":40,"author":{"gitId":"jeremy-7007"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":41,"author":{"gitId":"jeremy-7007"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":42,"author":{"gitId":"jeremy-7007"},"content":"        return new AssignTaskToPersonCommand(personIndex, taskIndex);","lastModifiedDate":"2021-10-12"},{"lineNumber":43,"author":{"gitId":"jeremy-7007"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":44,"author":{"gitId":"jeremy-7007"},"content":"}","lastModifiedDate":"2021-10-12"}],"authorContributionMap":{"jeremy-7007":34,"tanhuakun":10}},{"path":"src/main/java/seedu/address/logic/parser/tasks/DeleteTaskCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jeremy-7007"},"content":"package seedu.address.logic.parser.tasks;","lastModifiedDate":"2021-10-28"},{"lineNumber":2,"author":{"gitId":"jeremy-7007"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":3,"author":{"gitId":"jeremy-7007"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-10-28"},{"lineNumber":4,"author":{"gitId":"tanhuakun"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_INDEX_GIVEN;","lastModifiedDate":"2021-11-02"},{"lineNumber":5,"author":{"gitId":"tanhuakun"},"content":"import static seedu.address.logic.parser.ValidateUtil.hasExpectedSeparatedSegments;","lastModifiedDate":"2021-11-02"},{"lineNumber":6,"author":{"gitId":"tanhuakun"},"content":"import static seedu.address.logic.parser.ValidateUtil.isEmptyOrOnlyWhitespace;","lastModifiedDate":"2021-11-02"},{"lineNumber":7,"author":{"gitId":"jeremy-7007"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":8,"author":{"gitId":"jeremy-7007"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-10-28"},{"lineNumber":9,"author":{"gitId":"jeremy-7007"},"content":"import seedu.address.logic.commands.tasks.DeleteTaskCommand;","lastModifiedDate":"2021-10-28"},{"lineNumber":10,"author":{"gitId":"jeremy-7007"},"content":"import seedu.address.logic.parser.Parser;","lastModifiedDate":"2021-10-28"},{"lineNumber":11,"author":{"gitId":"jeremy-7007"},"content":"import seedu.address.logic.parser.ParserUtil;","lastModifiedDate":"2021-10-28"},{"lineNumber":12,"author":{"gitId":"jeremy-7007"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-10-28"},{"lineNumber":13,"author":{"gitId":"jeremy-7007"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":14,"author":{"gitId":"jeremy-7007"},"content":"/**","lastModifiedDate":"2021-10-28"},{"lineNumber":15,"author":{"gitId":"jeremy-7007"},"content":" * Parses input arguments and creates a new DeleteTaskCommand object","lastModifiedDate":"2021-10-28"},{"lineNumber":16,"author":{"gitId":"jeremy-7007"},"content":" */","lastModifiedDate":"2021-10-28"},{"lineNumber":17,"author":{"gitId":"jeremy-7007"},"content":"public class DeleteTaskCommandParser implements Parser\u003cDeleteTaskCommand\u003e {","lastModifiedDate":"2021-10-28"},{"lineNumber":18,"author":{"gitId":"jeremy-7007"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":19,"author":{"gitId":"jeremy-7007"},"content":"    /**","lastModifiedDate":"2021-10-28"},{"lineNumber":20,"author":{"gitId":"jeremy-7007"},"content":"     * Parses the given {@code String} of arguments in the context of the DeleteTaskCommand","lastModifiedDate":"2021-10-28"},{"lineNumber":21,"author":{"gitId":"jeremy-7007"},"content":"     * and returns a DeleteTaskCommand object for execution.","lastModifiedDate":"2021-10-28"},{"lineNumber":22,"author":{"gitId":"jeremy-7007"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2021-10-28"},{"lineNumber":23,"author":{"gitId":"jeremy-7007"},"content":"     */","lastModifiedDate":"2021-10-28"},{"lineNumber":24,"author":{"gitId":"jeremy-7007"},"content":"    public DeleteTaskCommand parse(String args) throws ParseException {","lastModifiedDate":"2021-10-28"},{"lineNumber":25,"author":{"gitId":"tanhuakun"},"content":"        if (isEmptyOrOnlyWhitespace(args) || !hasExpectedSeparatedSegments(args, 1)) {","lastModifiedDate":"2021-11-02"},{"lineNumber":26,"author":{"gitId":"tanhuakun"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2021-11-02"},{"lineNumber":27,"author":{"gitId":"tanhuakun"},"content":"                    DeleteTaskCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-11-02"},{"lineNumber":28,"author":{"gitId":"tanhuakun"},"content":"        }","lastModifiedDate":"2021-11-02"},{"lineNumber":29,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":30,"author":{"gitId":"jeremy-7007"},"content":"        try {","lastModifiedDate":"2021-10-28"},{"lineNumber":31,"author":{"gitId":"jeremy-7007"},"content":"            Index index \u003d ParserUtil.parseIndex(args);","lastModifiedDate":"2021-10-28"},{"lineNumber":32,"author":{"gitId":"jeremy-7007"},"content":"            return new DeleteTaskCommand(index);","lastModifiedDate":"2021-10-28"},{"lineNumber":33,"author":{"gitId":"jeremy-7007"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2021-10-28"},{"lineNumber":34,"author":{"gitId":"jeremy-7007"},"content":"            throw new ParseException(","lastModifiedDate":"2021-10-28"},{"lineNumber":35,"author":{"gitId":"tanhuakun"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, MESSAGE_INVALID_INDEX_GIVEN), pe);","lastModifiedDate":"2021-11-02"},{"lineNumber":36,"author":{"gitId":"jeremy-7007"},"content":"        }","lastModifiedDate":"2021-10-28"},{"lineNumber":37,"author":{"gitId":"jeremy-7007"},"content":"    }","lastModifiedDate":"2021-10-28"},{"lineNumber":38,"author":{"gitId":"jeremy-7007"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":39,"author":{"gitId":"jeremy-7007"},"content":"}","lastModifiedDate":"2021-10-28"}],"authorContributionMap":{"jeremy-7007":30,"tanhuakun":9}},{"path":"src/main/java/seedu/address/logic/parser/tasks/EditTaskCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Neha-5678"},"content":"package seedu.address.logic.parser.tasks;","lastModifiedDate":"2021-10-19"},{"lineNumber":2,"author":{"gitId":"Neha-5678"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":3,"author":{"gitId":"Neha-5678"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-19"},{"lineNumber":4,"author":{"gitId":"Neha-5678"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-10-19"},{"lineNumber":5,"author":{"gitId":"tanhuakun"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_INDEX_GIVEN;","lastModifiedDate":"2021-11-02"},{"lineNumber":6,"author":{"gitId":"Neha-5678"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DEADLINE;","lastModifiedDate":"2021-10-19"},{"lineNumber":7,"author":{"gitId":"Neha-5678"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DESCRIPTION;","lastModifiedDate":"2021-10-19"},{"lineNumber":8,"author":{"gitId":"Neha-5678"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":9,"author":{"gitId":"Neha-5678"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-10-19"},{"lineNumber":10,"author":{"gitId":"Neha-5678"},"content":"import seedu.address.logic.commands.tasks.EditTaskCommand;","lastModifiedDate":"2021-10-19"},{"lineNumber":11,"author":{"gitId":"Neha-5678"},"content":"import seedu.address.logic.commands.tasks.EditTaskCommand.EditTaskDescriptor;","lastModifiedDate":"2021-10-19"},{"lineNumber":12,"author":{"gitId":"Neha-5678"},"content":"import seedu.address.logic.parser.ArgumentMultimap;","lastModifiedDate":"2021-10-19"},{"lineNumber":13,"author":{"gitId":"Neha-5678"},"content":"import seedu.address.logic.parser.ArgumentTokenizer;","lastModifiedDate":"2021-10-19"},{"lineNumber":14,"author":{"gitId":"Neha-5678"},"content":"import seedu.address.logic.parser.Parser;","lastModifiedDate":"2021-10-19"},{"lineNumber":15,"author":{"gitId":"Neha-5678"},"content":"import seedu.address.logic.parser.ParserUtil;","lastModifiedDate":"2021-10-19"},{"lineNumber":16,"author":{"gitId":"Neha-5678"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-10-19"},{"lineNumber":17,"author":{"gitId":"Neha-5678"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":18,"author":{"gitId":"Neha-5678"},"content":"/**","lastModifiedDate":"2021-10-19"},{"lineNumber":19,"author":{"gitId":"Neha-5678"},"content":" * Parses input arguments and creates a new EditTaskCommand object.","lastModifiedDate":"2021-10-19"},{"lineNumber":20,"author":{"gitId":"Neha-5678"},"content":" */","lastModifiedDate":"2021-10-19"},{"lineNumber":21,"author":{"gitId":"Neha-5678"},"content":"public class EditTaskCommandParser implements Parser\u003cEditTaskCommand\u003e {","lastModifiedDate":"2021-10-19"},{"lineNumber":22,"author":{"gitId":"Neha-5678"},"content":"    /**","lastModifiedDate":"2021-10-19"},{"lineNumber":23,"author":{"gitId":"Neha-5678"},"content":"     * Parses the given {@code String} of arguments in the context of the EditTaskCommand","lastModifiedDate":"2021-10-19"},{"lineNumber":24,"author":{"gitId":"Neha-5678"},"content":"     * and returns an EditTaskCommand object for execution.","lastModifiedDate":"2021-10-19"},{"lineNumber":25,"author":{"gitId":"Neha-5678"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2021-10-19"},{"lineNumber":26,"author":{"gitId":"Neha-5678"},"content":"     */","lastModifiedDate":"2021-10-19"},{"lineNumber":27,"author":{"gitId":"Neha-5678"},"content":"    public EditTaskCommand parse(String args) throws ParseException {","lastModifiedDate":"2021-10-19"},{"lineNumber":28,"author":{"gitId":"Neha-5678"},"content":"        requireNonNull(args);","lastModifiedDate":"2021-10-19"},{"lineNumber":29,"author":{"gitId":"Neha-5678"},"content":"        ArgumentMultimap argMultimap \u003d","lastModifiedDate":"2021-10-19"},{"lineNumber":30,"author":{"gitId":"Neha-5678"},"content":"                ArgumentTokenizer.tokenize(args, PREFIX_DESCRIPTION, PREFIX_DEADLINE);","lastModifiedDate":"2021-10-19"},{"lineNumber":31,"author":{"gitId":"Neha-5678"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":32,"author":{"gitId":"tanhuakun"},"content":"        if (argMultimap.getPreamble().isEmpty() || !argMultimap.preambleHasExpectedSegments(1)) {","lastModifiedDate":"2021-11-02"},{"lineNumber":33,"author":{"gitId":"tanhuakun"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2021-11-02"},{"lineNumber":34,"author":{"gitId":"kvihashini"},"content":"                    EditTaskCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-11-03"},{"lineNumber":35,"author":{"gitId":"tanhuakun"},"content":"        }","lastModifiedDate":"2021-11-02"},{"lineNumber":36,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":37,"author":{"gitId":"Neha-5678"},"content":"        EditTaskDescriptor editTaskDescriptor \u003d new EditTaskDescriptor();","lastModifiedDate":"2021-10-19"},{"lineNumber":38,"author":{"gitId":"Neha-5678"},"content":"        if (argMultimap.getValue(PREFIX_DESCRIPTION).isPresent()) {","lastModifiedDate":"2021-10-19"},{"lineNumber":39,"author":{"gitId":"Neha-5678"},"content":"            editTaskDescriptor.setDescription(ParserUtil.parseTaskDescription(argMultimap","lastModifiedDate":"2021-10-19"},{"lineNumber":40,"author":{"gitId":"Neha-5678"},"content":"                    .getValue(PREFIX_DESCRIPTION).get()));","lastModifiedDate":"2021-10-19"},{"lineNumber":41,"author":{"gitId":"Neha-5678"},"content":"        }","lastModifiedDate":"2021-10-19"},{"lineNumber":42,"author":{"gitId":"Neha-5678"},"content":"        if (argMultimap.getValue(PREFIX_DEADLINE).isPresent()) {","lastModifiedDate":"2021-10-19"},{"lineNumber":43,"author":{"gitId":"Neha-5678"},"content":"            editTaskDescriptor.setDeadline(ParserUtil.parseTaskDeadline(argMultimap.getValue(PREFIX_DEADLINE).get()));","lastModifiedDate":"2021-10-19"},{"lineNumber":44,"author":{"gitId":"Neha-5678"},"content":"        }","lastModifiedDate":"2021-10-19"},{"lineNumber":45,"author":{"gitId":"Neha-5678"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":46,"author":{"gitId":"Neha-5678"},"content":"        if (!editTaskDescriptor.isAnyFieldEdited()) {","lastModifiedDate":"2021-10-19"},{"lineNumber":47,"author":{"gitId":"Neha-5678"},"content":"            throw new ParseException(EditTaskCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2021-10-19"},{"lineNumber":48,"author":{"gitId":"Neha-5678"},"content":"        }","lastModifiedDate":"2021-10-19"},{"lineNumber":49,"author":{"gitId":"Neha-5678"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":50,"author":{"gitId":"tanhuakun"},"content":"        Index index;","lastModifiedDate":"2021-11-02"},{"lineNumber":51,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":52,"author":{"gitId":"tanhuakun"},"content":"        try {","lastModifiedDate":"2021-11-02"},{"lineNumber":53,"author":{"gitId":"tanhuakun"},"content":"            index \u003d ParserUtil.parseIndex(argMultimap.getPreamble());","lastModifiedDate":"2021-11-02"},{"lineNumber":54,"author":{"gitId":"tanhuakun"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2021-11-02"},{"lineNumber":55,"author":{"gitId":"tanhuakun"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2021-11-02"},{"lineNumber":56,"author":{"gitId":"tanhuakun"},"content":"                    MESSAGE_INVALID_INDEX_GIVEN), pe);","lastModifiedDate":"2021-11-02"},{"lineNumber":57,"author":{"gitId":"tanhuakun"},"content":"        }","lastModifiedDate":"2021-11-02"},{"lineNumber":58,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":59,"author":{"gitId":"Neha-5678"},"content":"        return new EditTaskCommand(index, editTaskDescriptor);","lastModifiedDate":"2021-10-19"},{"lineNumber":60,"author":{"gitId":"Neha-5678"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":61,"author":{"gitId":"Neha-5678"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":62,"author":{"gitId":"Neha-5678"},"content":"}","lastModifiedDate":"2021-10-19"}],"authorContributionMap":{"Neha-5678":47,"kvihashini":1,"tanhuakun":14}},{"path":"src/main/java/seedu/address/logic/parser/tasks/FindTaskCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Neha-5678"},"content":"package seedu.address.logic.parser.tasks;","lastModifiedDate":"2021-10-25"},{"lineNumber":2,"author":{"gitId":"Neha-5678"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":3,"author":{"gitId":"Neha-5678"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-10-25"},{"lineNumber":4,"author":{"gitId":"Neha-5678"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":5,"author":{"gitId":"Neha-5678"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-10-25"},{"lineNumber":6,"author":{"gitId":"Neha-5678"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":7,"author":{"gitId":"Neha-5678"},"content":"import seedu.address.logic.commands.tasks.FindTaskCommand;","lastModifiedDate":"2021-10-25"},{"lineNumber":8,"author":{"gitId":"Neha-5678"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-10-25"},{"lineNumber":9,"author":{"gitId":"Neha-5678"},"content":"import seedu.address.model.task.TaskNameContainsKeywordsPredicate;","lastModifiedDate":"2021-10-25"},{"lineNumber":10,"author":{"gitId":"Neha-5678"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":11,"author":{"gitId":"Neha-5678"},"content":"/**","lastModifiedDate":"2021-10-25"},{"lineNumber":12,"author":{"gitId":"Neha-5678"},"content":" * Parses input arguments and creates a new FindTaskCommand object","lastModifiedDate":"2021-10-25"},{"lineNumber":13,"author":{"gitId":"Neha-5678"},"content":" */","lastModifiedDate":"2021-10-25"},{"lineNumber":14,"author":{"gitId":"Neha-5678"},"content":"public class FindTaskCommandParser {","lastModifiedDate":"2021-10-25"},{"lineNumber":15,"author":{"gitId":"Neha-5678"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":16,"author":{"gitId":"Neha-5678"},"content":"    /**","lastModifiedDate":"2021-10-25"},{"lineNumber":17,"author":{"gitId":"Neha-5678"},"content":"     * Parses the given {@code String} of arguments in the context of the FindTaskCommand","lastModifiedDate":"2021-10-25"},{"lineNumber":18,"author":{"gitId":"Neha-5678"},"content":"     * and returns a FindTaskCommand object for execution.","lastModifiedDate":"2021-10-25"},{"lineNumber":19,"author":{"gitId":"Neha-5678"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2021-10-25"},{"lineNumber":20,"author":{"gitId":"Neha-5678"},"content":"     */","lastModifiedDate":"2021-10-25"},{"lineNumber":21,"author":{"gitId":"Neha-5678"},"content":"    public FindTaskCommand parse(String args) throws ParseException {","lastModifiedDate":"2021-10-25"},{"lineNumber":22,"author":{"gitId":"Neha-5678"},"content":"        String trimmedArgs \u003d args.trim();","lastModifiedDate":"2021-10-25"},{"lineNumber":23,"author":{"gitId":"Neha-5678"},"content":"        if (trimmedArgs.isEmpty()) {","lastModifiedDate":"2021-10-25"},{"lineNumber":24,"author":{"gitId":"Neha-5678"},"content":"            throw new ParseException(","lastModifiedDate":"2021-10-25"},{"lineNumber":25,"author":{"gitId":"Neha-5678"},"content":"                    String.format(MESSAGE_INVALID_COMMAND_FORMAT, FindTaskCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-10-25"},{"lineNumber":26,"author":{"gitId":"Neha-5678"},"content":"        }","lastModifiedDate":"2021-10-25"},{"lineNumber":27,"author":{"gitId":"Neha-5678"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":28,"author":{"gitId":"Neha-5678"},"content":"        String[] nameKeywords \u003d trimmedArgs.split(\"\\\\s+\");","lastModifiedDate":"2021-10-25"},{"lineNumber":29,"author":{"gitId":"Neha-5678"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":30,"author":{"gitId":"Neha-5678"},"content":"        return new FindTaskCommand(new TaskNameContainsKeywordsPredicate(Arrays.asList(nameKeywords)));","lastModifiedDate":"2021-10-25"},{"lineNumber":31,"author":{"gitId":"Neha-5678"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":32,"author":{"gitId":"Neha-5678"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":33,"author":{"gitId":"Neha-5678"},"content":"}","lastModifiedDate":"2021-10-25"}],"authorContributionMap":{"Neha-5678":33}},{"path":"src/main/java/seedu/address/logic/parser/tasks/MarkTaskDoneStudentCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jeremy-7007"},"content":"package seedu.address.logic.parser.tasks;","lastModifiedDate":"2021-10-28"},{"lineNumber":2,"author":{"gitId":"jeremy-7007"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":3,"author":{"gitId":"jeremy-7007"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-28"},{"lineNumber":4,"author":{"gitId":"jeremy-7007"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-10-28"},{"lineNumber":5,"author":{"gitId":"tanhuakun"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_INDEX_GIVEN;","lastModifiedDate":"2021-11-02"},{"lineNumber":6,"author":{"gitId":"tanhuakun"},"content":"import static seedu.address.logic.parser.ValidateUtil.hasExpectedSeparatedSegments;","lastModifiedDate":"2021-11-02"},{"lineNumber":7,"author":{"gitId":"tanhuakun"},"content":"import static seedu.address.logic.parser.ValidateUtil.isEmptyOrOnlyWhitespace;","lastModifiedDate":"2021-11-02"},{"lineNumber":8,"author":{"gitId":"jeremy-7007"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":9,"author":{"gitId":"jeremy-7007"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-10-28"},{"lineNumber":10,"author":{"gitId":"jeremy-7007"},"content":"import seedu.address.logic.commands.tasks.MarkTaskDoneStudentCommand;","lastModifiedDate":"2021-10-28"},{"lineNumber":11,"author":{"gitId":"jeremy-7007"},"content":"import seedu.address.logic.parser.Parser;","lastModifiedDate":"2021-10-28"},{"lineNumber":12,"author":{"gitId":"jeremy-7007"},"content":"import seedu.address.logic.parser.ParserUtil;","lastModifiedDate":"2021-10-28"},{"lineNumber":13,"author":{"gitId":"jeremy-7007"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-10-28"},{"lineNumber":14,"author":{"gitId":"jeremy-7007"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":15,"author":{"gitId":"jeremy-7007"},"content":"public class MarkTaskDoneStudentCommandParser implements Parser\u003cMarkTaskDoneStudentCommand\u003e {","lastModifiedDate":"2021-10-28"},{"lineNumber":16,"author":{"gitId":"jeremy-7007"},"content":"    /**","lastModifiedDate":"2021-10-28"},{"lineNumber":17,"author":{"gitId":"jeremy-7007"},"content":"     * Parses the given {@code String} of arguments in the context of the MarkTaskDoneStudentCommand","lastModifiedDate":"2021-10-28"},{"lineNumber":18,"author":{"gitId":"jeremy-7007"},"content":"     * and returns a MarkTaskDoneStudentCommand object for execution.","lastModifiedDate":"2021-10-28"},{"lineNumber":19,"author":{"gitId":"jeremy-7007"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2021-10-28"},{"lineNumber":20,"author":{"gitId":"jeremy-7007"},"content":"     */","lastModifiedDate":"2021-10-28"},{"lineNumber":21,"author":{"gitId":"jeremy-7007"},"content":"    public MarkTaskDoneStudentCommand parse(String args) throws ParseException {","lastModifiedDate":"2021-10-28"},{"lineNumber":22,"author":{"gitId":"jeremy-7007"},"content":"        requireNonNull(args);","lastModifiedDate":"2021-10-28"},{"lineNumber":23,"author":{"gitId":"tanhuakun"},"content":"        if (isEmptyOrOnlyWhitespace(args) || !hasExpectedSeparatedSegments(args, 2)) {","lastModifiedDate":"2021-11-02"},{"lineNumber":24,"author":{"gitId":"tanhuakun"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2021-11-02"},{"lineNumber":25,"author":{"gitId":"tanhuakun"},"content":"                    MarkTaskDoneStudentCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-11-02"},{"lineNumber":26,"author":{"gitId":"tanhuakun"},"content":"        }","lastModifiedDate":"2021-11-02"},{"lineNumber":27,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":28,"author":{"gitId":"jeremy-7007"},"content":"        Index personIndex;","lastModifiedDate":"2021-10-28"},{"lineNumber":29,"author":{"gitId":"jeremy-7007"},"content":"        Index taskIndex;","lastModifiedDate":"2021-10-28"},{"lineNumber":30,"author":{"gitId":"jeremy-7007"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":31,"author":{"gitId":"jeremy-7007"},"content":"        try {","lastModifiedDate":"2021-10-28"},{"lineNumber":32,"author":{"gitId":"jeremy-7007"},"content":"            Index[] indices \u003d ParserUtil.parseTwoIndices(args);","lastModifiedDate":"2021-10-28"},{"lineNumber":33,"author":{"gitId":"jeremy-7007"},"content":"            personIndex \u003d indices[0];","lastModifiedDate":"2021-10-28"},{"lineNumber":34,"author":{"gitId":"jeremy-7007"},"content":"            taskIndex \u003d indices[1];","lastModifiedDate":"2021-10-28"},{"lineNumber":35,"author":{"gitId":"jeremy-7007"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2021-10-28"},{"lineNumber":36,"author":{"gitId":"jeremy-7007"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2021-10-28"},{"lineNumber":37,"author":{"gitId":"tanhuakun"},"content":"                    MESSAGE_INVALID_INDEX_GIVEN), pe);","lastModifiedDate":"2021-11-02"},{"lineNumber":38,"author":{"gitId":"jeremy-7007"},"content":"        }","lastModifiedDate":"2021-10-28"},{"lineNumber":39,"author":{"gitId":"jeremy-7007"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":40,"author":{"gitId":"jeremy-7007"},"content":"        return new MarkTaskDoneStudentCommand(personIndex, taskIndex);","lastModifiedDate":"2021-10-28"},{"lineNumber":41,"author":{"gitId":"jeremy-7007"},"content":"    }","lastModifiedDate":"2021-10-28"},{"lineNumber":42,"author":{"gitId":"jeremy-7007"},"content":"}","lastModifiedDate":"2021-10-28"}],"authorContributionMap":{"jeremy-7007":33,"tanhuakun":9}},{"path":"src/main/java/seedu/address/logic/parser/tasks/MarkTaskUndoneStudentCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jeremy-7007"},"content":"package seedu.address.logic.parser.tasks;","lastModifiedDate":"2021-10-28"},{"lineNumber":2,"author":{"gitId":"jeremy-7007"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":3,"author":{"gitId":"jeremy-7007"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-28"},{"lineNumber":4,"author":{"gitId":"jeremy-7007"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-10-28"},{"lineNumber":5,"author":{"gitId":"tanhuakun"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_INDEX_GIVEN;","lastModifiedDate":"2021-11-02"},{"lineNumber":6,"author":{"gitId":"tanhuakun"},"content":"import static seedu.address.logic.parser.ValidateUtil.hasExpectedSeparatedSegments;","lastModifiedDate":"2021-11-02"},{"lineNumber":7,"author":{"gitId":"tanhuakun"},"content":"import static seedu.address.logic.parser.ValidateUtil.isEmptyOrOnlyWhitespace;","lastModifiedDate":"2021-11-02"},{"lineNumber":8,"author":{"gitId":"jeremy-7007"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":9,"author":{"gitId":"jeremy-7007"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-10-28"},{"lineNumber":10,"author":{"gitId":"jeremy-7007"},"content":"import seedu.address.logic.commands.tasks.MarkTaskUndoneStudentCommand;","lastModifiedDate":"2021-10-28"},{"lineNumber":11,"author":{"gitId":"jeremy-7007"},"content":"import seedu.address.logic.parser.Parser;","lastModifiedDate":"2021-10-28"},{"lineNumber":12,"author":{"gitId":"jeremy-7007"},"content":"import seedu.address.logic.parser.ParserUtil;","lastModifiedDate":"2021-10-28"},{"lineNumber":13,"author":{"gitId":"jeremy-7007"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-10-28"},{"lineNumber":14,"author":{"gitId":"jeremy-7007"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":15,"author":{"gitId":"jeremy-7007"},"content":"public class MarkTaskUndoneStudentCommandParser implements Parser\u003cMarkTaskUndoneStudentCommand\u003e {","lastModifiedDate":"2021-10-28"},{"lineNumber":16,"author":{"gitId":"jeremy-7007"},"content":"    /**","lastModifiedDate":"2021-10-28"},{"lineNumber":17,"author":{"gitId":"jeremy-7007"},"content":"     * Parses the given {@code String} of arguments in the context of the MarkTaskUndoneStudentCommand","lastModifiedDate":"2021-10-28"},{"lineNumber":18,"author":{"gitId":"jeremy-7007"},"content":"     * and returns a MarkTaskUndoneStudentCommand object for execution.","lastModifiedDate":"2021-10-28"},{"lineNumber":19,"author":{"gitId":"jeremy-7007"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2021-10-28"},{"lineNumber":20,"author":{"gitId":"jeremy-7007"},"content":"     */","lastModifiedDate":"2021-10-28"},{"lineNumber":21,"author":{"gitId":"jeremy-7007"},"content":"    public MarkTaskUndoneStudentCommand parse(String args) throws ParseException {","lastModifiedDate":"2021-10-28"},{"lineNumber":22,"author":{"gitId":"jeremy-7007"},"content":"        requireNonNull(args);","lastModifiedDate":"2021-10-28"},{"lineNumber":23,"author":{"gitId":"tanhuakun"},"content":"        if (isEmptyOrOnlyWhitespace(args) || !hasExpectedSeparatedSegments(args, 2)) {","lastModifiedDate":"2021-11-02"},{"lineNumber":24,"author":{"gitId":"tanhuakun"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2021-11-02"},{"lineNumber":25,"author":{"gitId":"tanhuakun"},"content":"                    MarkTaskUndoneStudentCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-11-02"},{"lineNumber":26,"author":{"gitId":"tanhuakun"},"content":"        }","lastModifiedDate":"2021-11-02"},{"lineNumber":27,"author":{"gitId":"jeremy-7007"},"content":"        Index personIndex;","lastModifiedDate":"2021-10-28"},{"lineNumber":28,"author":{"gitId":"jeremy-7007"},"content":"        Index taskIndex;","lastModifiedDate":"2021-10-28"},{"lineNumber":29,"author":{"gitId":"jeremy-7007"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":30,"author":{"gitId":"jeremy-7007"},"content":"        try {","lastModifiedDate":"2021-10-28"},{"lineNumber":31,"author":{"gitId":"jeremy-7007"},"content":"            Index[] indices \u003d ParserUtil.parseTwoIndices(args);","lastModifiedDate":"2021-10-28"},{"lineNumber":32,"author":{"gitId":"jeremy-7007"},"content":"            personIndex \u003d indices[0];","lastModifiedDate":"2021-10-28"},{"lineNumber":33,"author":{"gitId":"jeremy-7007"},"content":"            taskIndex \u003d indices[1];","lastModifiedDate":"2021-10-28"},{"lineNumber":34,"author":{"gitId":"jeremy-7007"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2021-10-28"},{"lineNumber":35,"author":{"gitId":"jeremy-7007"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2021-10-28"},{"lineNumber":36,"author":{"gitId":"tanhuakun"},"content":"                    MESSAGE_INVALID_INDEX_GIVEN), pe);","lastModifiedDate":"2021-11-02"},{"lineNumber":37,"author":{"gitId":"jeremy-7007"},"content":"        }","lastModifiedDate":"2021-10-28"},{"lineNumber":38,"author":{"gitId":"jeremy-7007"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":39,"author":{"gitId":"jeremy-7007"},"content":"        return new MarkTaskUndoneStudentCommand(personIndex, taskIndex);","lastModifiedDate":"2021-10-28"},{"lineNumber":40,"author":{"gitId":"jeremy-7007"},"content":"    }","lastModifiedDate":"2021-10-28"},{"lineNumber":41,"author":{"gitId":"jeremy-7007"},"content":"}","lastModifiedDate":"2021-10-28"}],"authorContributionMap":{"jeremy-7007":33,"tanhuakun":8}},{"path":"src/main/java/seedu/address/logic/parser/tasks/TaskCommandsParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"eltonyeh"},"content":"package seedu.address.logic.parser.tasks;","lastModifiedDate":"2021-10-12"},{"lineNumber":2,"author":{"gitId":"eltonyeh"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":3,"author":{"gitId":"eltonyeh"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-10-12"},{"lineNumber":4,"author":{"gitId":"eltonyeh"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2021-10-12"},{"lineNumber":5,"author":{"gitId":"eltonyeh"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":6,"author":{"gitId":"eltonyeh"},"content":"import java.util.regex.Matcher;","lastModifiedDate":"2021-10-12"},{"lineNumber":7,"author":{"gitId":"eltonyeh"},"content":"import java.util.regex.Pattern;","lastModifiedDate":"2021-10-12"},{"lineNumber":8,"author":{"gitId":"eltonyeh"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":9,"author":{"gitId":"eltonyeh"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2021-10-12"},{"lineNumber":10,"author":{"gitId":"eltonyeh"},"content":"import seedu.address.logic.commands.HelpCommand;","lastModifiedDate":"2021-10-12"},{"lineNumber":11,"author":{"gitId":"eltonyeh"},"content":"import seedu.address.logic.commands.tasks.AddTaskCommand;","lastModifiedDate":"2021-10-12"},{"lineNumber":12,"author":{"gitId":"eltonyeh"},"content":"import seedu.address.logic.commands.tasks.AssignTaskToGroupCommand;","lastModifiedDate":"2021-10-26"},{"lineNumber":13,"author":{"gitId":"jeremy-7007"},"content":"import seedu.address.logic.commands.tasks.AssignTaskToPersonCommand;","lastModifiedDate":"2021-10-12"},{"lineNumber":14,"author":{"gitId":"jeremy-7007"},"content":"import seedu.address.logic.commands.tasks.DeleteTaskCommand;","lastModifiedDate":"2021-10-29"},{"lineNumber":15,"author":{"gitId":"Neha-5678"},"content":"import seedu.address.logic.commands.tasks.EditTaskCommand;","lastModifiedDate":"2021-10-19"},{"lineNumber":16,"author":{"gitId":"Neha-5678"},"content":"import seedu.address.logic.commands.tasks.FindTaskCommand;","lastModifiedDate":"2021-10-25"},{"lineNumber":17,"author":{"gitId":"Neha-5678"},"content":"import seedu.address.logic.commands.tasks.ListTaskCommand;","lastModifiedDate":"2021-10-26"},{"lineNumber":18,"author":{"gitId":"jeremy-7007"},"content":"import seedu.address.logic.commands.tasks.MarkTaskDoneStudentCommand;","lastModifiedDate":"2021-10-28"},{"lineNumber":19,"author":{"gitId":"jeremy-7007"},"content":"import seedu.address.logic.commands.tasks.MarkTaskUndoneStudentCommand;","lastModifiedDate":"2021-10-28"},{"lineNumber":20,"author":{"gitId":"eltonyeh"},"content":"import seedu.address.logic.commands.tasks.UnassignTaskFromGroupCommand;","lastModifiedDate":"2021-10-26"},{"lineNumber":21,"author":{"gitId":"jeremy-7007"},"content":"import seedu.address.logic.commands.tasks.UnassignTaskFromPersonCommand;","lastModifiedDate":"2021-10-12"},{"lineNumber":22,"author":{"gitId":"eltonyeh"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-10-12"},{"lineNumber":23,"author":{"gitId":"eltonyeh"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":24,"author":{"gitId":"eltonyeh"},"content":"public class TaskCommandsParser {","lastModifiedDate":"2021-10-12"},{"lineNumber":25,"author":{"gitId":"eltonyeh"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":26,"author":{"gitId":"eltonyeh"},"content":"    public static final String COMMAND_WORD \u003d \"task\";","lastModifiedDate":"2021-10-12"},{"lineNumber":27,"author":{"gitId":"eltonyeh"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":28,"author":{"gitId":"eltonyeh"},"content":"    /**","lastModifiedDate":"2021-10-12"},{"lineNumber":29,"author":{"gitId":"eltonyeh"},"content":"     * Used for further separation of command action and args.","lastModifiedDate":"2021-10-12"},{"lineNumber":30,"author":{"gitId":"eltonyeh"},"content":"     */","lastModifiedDate":"2021-10-12"},{"lineNumber":31,"author":{"gitId":"eltonyeh"},"content":"    private static final Pattern COMMAND_FORMAT \u003d Pattern.compile(\"(?\u003caction\u003e\\\\-\\\\S+)(?\u003carguments\u003e.*)\");","lastModifiedDate":"2021-10-12"},{"lineNumber":32,"author":{"gitId":"eltonyeh"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":33,"author":{"gitId":"eltonyeh"},"content":"    /**","lastModifiedDate":"2021-10-12"},{"lineNumber":34,"author":{"gitId":"eltonyeh"},"content":"     * Parses user input into command for execution.","lastModifiedDate":"2021-10-12"},{"lineNumber":35,"author":{"gitId":"eltonyeh"},"content":"     *","lastModifiedDate":"2021-10-12"},{"lineNumber":36,"author":{"gitId":"eltonyeh"},"content":"     * @param commandArgs user input string after COMMAND_WORD","lastModifiedDate":"2021-10-12"},{"lineNumber":37,"author":{"gitId":"eltonyeh"},"content":"     * @return the command based on the user input","lastModifiedDate":"2021-10-12"},{"lineNumber":38,"author":{"gitId":"eltonyeh"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2021-10-12"},{"lineNumber":39,"author":{"gitId":"eltonyeh"},"content":"     */","lastModifiedDate":"2021-10-12"},{"lineNumber":40,"author":{"gitId":"eltonyeh"},"content":"    public static Command parseCommand(String commandArgs) throws ParseException {","lastModifiedDate":"2021-10-12"},{"lineNumber":41,"author":{"gitId":"eltonyeh"},"content":"        final Matcher matcher \u003d COMMAND_FORMAT.matcher(commandArgs.trim());","lastModifiedDate":"2021-10-12"},{"lineNumber":42,"author":{"gitId":"eltonyeh"},"content":"        if (!matcher.matches()) {","lastModifiedDate":"2021-10-12"},{"lineNumber":43,"author":{"gitId":"eltonyeh"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-10-12"},{"lineNumber":44,"author":{"gitId":"eltonyeh"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":45,"author":{"gitId":"eltonyeh"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":46,"author":{"gitId":"eltonyeh"},"content":"        final String action \u003d matcher.group(\"action\");","lastModifiedDate":"2021-10-12"},{"lineNumber":47,"author":{"gitId":"eltonyeh"},"content":"        final String arguments \u003d matcher.group(\"arguments\");","lastModifiedDate":"2021-10-12"},{"lineNumber":48,"author":{"gitId":"eltonyeh"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":49,"author":{"gitId":"eltonyeh"},"content":"        switch (action) {","lastModifiedDate":"2021-10-12"},{"lineNumber":50,"author":{"gitId":"eltonyeh"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":51,"author":{"gitId":"eltonyeh"},"content":"        case AddTaskCommand.COMMAND_WORD:","lastModifiedDate":"2021-10-12"},{"lineNumber":52,"author":{"gitId":"eltonyeh"},"content":"            return new AddTaskCommandParser().parse(arguments);","lastModifiedDate":"2021-10-12"},{"lineNumber":53,"author":{"gitId":"eltonyeh"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":54,"author":{"gitId":"Neha-5678"},"content":"        case EditTaskCommand.COMMAND_WORD:","lastModifiedDate":"2021-10-19"},{"lineNumber":55,"author":{"gitId":"Neha-5678"},"content":"            return new EditTaskCommandParser().parse(arguments);","lastModifiedDate":"2021-10-19"},{"lineNumber":56,"author":{"gitId":"Neha-5678"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":57,"author":{"gitId":"jeremy-7007"},"content":"        case DeleteTaskCommand.COMMAND_WORD:","lastModifiedDate":"2021-10-29"},{"lineNumber":58,"author":{"gitId":"jeremy-7007"},"content":"            return new DeleteTaskCommandParser().parse(arguments);","lastModifiedDate":"2021-10-29"},{"lineNumber":59,"author":{"gitId":"jeremy-7007"},"content":"","lastModifiedDate":"2021-10-29"},{"lineNumber":60,"author":{"gitId":"jeremy-7007"},"content":"        case AssignTaskToPersonCommand.COMMAND_WORD:","lastModifiedDate":"2021-10-12"},{"lineNumber":61,"author":{"gitId":"jeremy-7007"},"content":"            return new AssignTaskToPersonCommandParser().parse(arguments);","lastModifiedDate":"2021-10-12"},{"lineNumber":62,"author":{"gitId":"jeremy-7007"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":63,"author":{"gitId":"eltonyeh"},"content":"        case AssignTaskToGroupCommand.COMMAND_WORD:","lastModifiedDate":"2021-10-26"},{"lineNumber":64,"author":{"gitId":"eltonyeh"},"content":"            return new AssignTaskToGroupCommandParser().parse(arguments);","lastModifiedDate":"2021-10-26"},{"lineNumber":65,"author":{"gitId":"eltonyeh"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":66,"author":{"gitId":"jeremy-7007"},"content":"        case UnassignTaskFromPersonCommand.COMMAND_WORD:","lastModifiedDate":"2021-10-12"},{"lineNumber":67,"author":{"gitId":"jeremy-7007"},"content":"            return new UnassignTaskFromPersonCommandParser().parse(arguments);","lastModifiedDate":"2021-10-12"},{"lineNumber":68,"author":{"gitId":"jeremy-7007"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":69,"author":{"gitId":"eltonyeh"},"content":"        case UnassignTaskFromGroupCommand.COMMAND_WORD:","lastModifiedDate":"2021-10-26"},{"lineNumber":70,"author":{"gitId":"eltonyeh"},"content":"            return new UnassignTaskFromGroupCommandParser().parse(arguments);","lastModifiedDate":"2021-10-26"},{"lineNumber":71,"author":{"gitId":"eltonyeh"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":72,"author":{"gitId":"jeremy-7007"},"content":"        case MarkTaskDoneStudentCommand.COMMAND_WORD:","lastModifiedDate":"2021-10-28"},{"lineNumber":73,"author":{"gitId":"jeremy-7007"},"content":"            return new MarkTaskDoneStudentCommandParser().parse(arguments);","lastModifiedDate":"2021-10-28"},{"lineNumber":74,"author":{"gitId":"jeremy-7007"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":75,"author":{"gitId":"jeremy-7007"},"content":"        case MarkTaskUndoneStudentCommand.COMMAND_WORD:","lastModifiedDate":"2021-10-28"},{"lineNumber":76,"author":{"gitId":"jeremy-7007"},"content":"            return new MarkTaskUndoneStudentCommandParser().parse(arguments);","lastModifiedDate":"2021-10-28"},{"lineNumber":77,"author":{"gitId":"jeremy-7007"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":78,"author":{"gitId":"Neha-5678"},"content":"        case FindTaskCommand.COMMAND_WORD:","lastModifiedDate":"2021-10-25"},{"lineNumber":79,"author":{"gitId":"Neha-5678"},"content":"            return new FindTaskCommandParser().parse(arguments);","lastModifiedDate":"2021-10-25"},{"lineNumber":80,"author":{"gitId":"Neha-5678"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":81,"author":{"gitId":"Neha-5678"},"content":"        case ListTaskCommand.COMMAND_WORD:","lastModifiedDate":"2021-10-26"},{"lineNumber":82,"author":{"gitId":"Neha-5678"},"content":"            return new ListTaskCommand();","lastModifiedDate":"2021-10-26"},{"lineNumber":83,"author":{"gitId":"Neha-5678"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":84,"author":{"gitId":"eltonyeh"},"content":"        default:","lastModifiedDate":"2021-10-12"},{"lineNumber":85,"author":{"gitId":"eltonyeh"},"content":"            throw new ParseException(MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2021-10-12"},{"lineNumber":86,"author":{"gitId":"eltonyeh"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":87,"author":{"gitId":"eltonyeh"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":88,"author":{"gitId":"eltonyeh"},"content":"}","lastModifiedDate":"2021-10-12"}],"authorContributionMap":{"Neha-5678":12,"jeremy-7007":20,"eltonyeh":56}},{"path":"src/main/java/seedu/address/logic/parser/tasks/UnassignTaskFromGroupCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"eltonyeh"},"content":"package seedu.address.logic.parser.tasks;","lastModifiedDate":"2021-10-26"},{"lineNumber":2,"author":{"gitId":"eltonyeh"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":3,"author":{"gitId":"eltonyeh"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-26"},{"lineNumber":4,"author":{"gitId":"eltonyeh"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-10-26"},{"lineNumber":5,"author":{"gitId":"tanhuakun"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_INDEX_GIVEN;","lastModifiedDate":"2021-11-02"},{"lineNumber":6,"author":{"gitId":"tanhuakun"},"content":"import static seedu.address.logic.parser.ValidateUtil.hasExpectedSeparatedSegments;","lastModifiedDate":"2021-11-02"},{"lineNumber":7,"author":{"gitId":"tanhuakun"},"content":"import static seedu.address.logic.parser.ValidateUtil.isEmptyOrOnlyWhitespace;","lastModifiedDate":"2021-11-02"},{"lineNumber":8,"author":{"gitId":"eltonyeh"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":9,"author":{"gitId":"eltonyeh"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-10-26"},{"lineNumber":10,"author":{"gitId":"eltonyeh"},"content":"import seedu.address.logic.commands.tasks.UnassignTaskFromGroupCommand;","lastModifiedDate":"2021-10-26"},{"lineNumber":11,"author":{"gitId":"eltonyeh"},"content":"import seedu.address.logic.parser.Parser;","lastModifiedDate":"2021-10-26"},{"lineNumber":12,"author":{"gitId":"eltonyeh"},"content":"import seedu.address.logic.parser.ParserUtil;","lastModifiedDate":"2021-10-26"},{"lineNumber":13,"author":{"gitId":"eltonyeh"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-10-26"},{"lineNumber":14,"author":{"gitId":"eltonyeh"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":15,"author":{"gitId":"eltonyeh"},"content":"public class UnassignTaskFromGroupCommandParser implements Parser\u003cUnassignTaskFromGroupCommand\u003e {","lastModifiedDate":"2021-10-26"},{"lineNumber":16,"author":{"gitId":"eltonyeh"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":17,"author":{"gitId":"eltonyeh"},"content":"    /**","lastModifiedDate":"2021-10-26"},{"lineNumber":18,"author":{"gitId":"eltonyeh"},"content":"     * Parses the given {@code String} of arguments in the context of the UnassignTaskFromGroupCommand","lastModifiedDate":"2021-10-26"},{"lineNumber":19,"author":{"gitId":"eltonyeh"},"content":"     * and returns an UnassignTaskFromGroupCommand object for execution.","lastModifiedDate":"2021-10-26"},{"lineNumber":20,"author":{"gitId":"eltonyeh"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2021-10-26"},{"lineNumber":21,"author":{"gitId":"eltonyeh"},"content":"     */","lastModifiedDate":"2021-10-26"},{"lineNumber":22,"author":{"gitId":"eltonyeh"},"content":"    public UnassignTaskFromGroupCommand parse(String args) throws ParseException {","lastModifiedDate":"2021-10-26"},{"lineNumber":23,"author":{"gitId":"eltonyeh"},"content":"        requireNonNull(args);","lastModifiedDate":"2021-10-26"},{"lineNumber":24,"author":{"gitId":"tanhuakun"},"content":"        if (isEmptyOrOnlyWhitespace(args) || !hasExpectedSeparatedSegments(args, 2)) {","lastModifiedDate":"2021-11-02"},{"lineNumber":25,"author":{"gitId":"tanhuakun"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2021-11-02"},{"lineNumber":26,"author":{"gitId":"tanhuakun"},"content":"                    UnassignTaskFromGroupCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-11-02"},{"lineNumber":27,"author":{"gitId":"tanhuakun"},"content":"        }","lastModifiedDate":"2021-11-02"},{"lineNumber":28,"author":{"gitId":"eltonyeh"},"content":"        Index groupIndex;","lastModifiedDate":"2021-10-26"},{"lineNumber":29,"author":{"gitId":"eltonyeh"},"content":"        Index taskIndex;","lastModifiedDate":"2021-10-26"},{"lineNumber":30,"author":{"gitId":"eltonyeh"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":31,"author":{"gitId":"eltonyeh"},"content":"        try {","lastModifiedDate":"2021-10-26"},{"lineNumber":32,"author":{"gitId":"eltonyeh"},"content":"            Index[] indices \u003d ParserUtil.parseTwoIndices(args);","lastModifiedDate":"2021-10-26"},{"lineNumber":33,"author":{"gitId":"eltonyeh"},"content":"            groupIndex \u003d indices[0];","lastModifiedDate":"2021-10-26"},{"lineNumber":34,"author":{"gitId":"eltonyeh"},"content":"            taskIndex \u003d indices[1];","lastModifiedDate":"2021-10-26"},{"lineNumber":35,"author":{"gitId":"eltonyeh"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2021-10-26"},{"lineNumber":36,"author":{"gitId":"eltonyeh"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2021-10-26"},{"lineNumber":37,"author":{"gitId":"tanhuakun"},"content":"                    MESSAGE_INVALID_INDEX_GIVEN), pe);","lastModifiedDate":"2021-11-02"},{"lineNumber":38,"author":{"gitId":"eltonyeh"},"content":"        }","lastModifiedDate":"2021-10-26"},{"lineNumber":39,"author":{"gitId":"eltonyeh"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":40,"author":{"gitId":"eltonyeh"},"content":"        return new UnassignTaskFromGroupCommand(groupIndex, taskIndex);","lastModifiedDate":"2021-10-26"},{"lineNumber":41,"author":{"gitId":"eltonyeh"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":42,"author":{"gitId":"eltonyeh"},"content":"}","lastModifiedDate":"2021-10-26"}],"authorContributionMap":{"eltonyeh":34,"tanhuakun":8}},{"path":"src/main/java/seedu/address/logic/parser/tasks/UnassignTaskFromPersonCommandParser.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jeremy-7007"},"content":"package seedu.address.logic.parser.tasks;","lastModifiedDate":"2021-10-12"},{"lineNumber":2,"author":{"gitId":"jeremy-7007"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":3,"author":{"gitId":"jeremy-7007"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-12"},{"lineNumber":4,"author":{"gitId":"jeremy-7007"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-10-12"},{"lineNumber":5,"author":{"gitId":"tanhuakun"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_INDEX_GIVEN;","lastModifiedDate":"2021-11-02"},{"lineNumber":6,"author":{"gitId":"tanhuakun"},"content":"import static seedu.address.logic.parser.ValidateUtil.hasExpectedSeparatedSegments;","lastModifiedDate":"2021-11-02"},{"lineNumber":7,"author":{"gitId":"tanhuakun"},"content":"import static seedu.address.logic.parser.ValidateUtil.isEmptyOrOnlyWhitespace;","lastModifiedDate":"2021-11-02"},{"lineNumber":8,"author":{"gitId":"jeremy-7007"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":9,"author":{"gitId":"jeremy-7007"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-10-12"},{"lineNumber":10,"author":{"gitId":"jeremy-7007"},"content":"import seedu.address.logic.commands.tasks.UnassignTaskFromPersonCommand;","lastModifiedDate":"2021-10-12"},{"lineNumber":11,"author":{"gitId":"jeremy-7007"},"content":"import seedu.address.logic.parser.Parser;","lastModifiedDate":"2021-10-12"},{"lineNumber":12,"author":{"gitId":"jeremy-7007"},"content":"import seedu.address.logic.parser.ParserUtil;","lastModifiedDate":"2021-10-12"},{"lineNumber":13,"author":{"gitId":"jeremy-7007"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-10-12"},{"lineNumber":14,"author":{"gitId":"jeremy-7007"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":15,"author":{"gitId":"jeremy-7007"},"content":"public class UnassignTaskFromPersonCommandParser implements Parser\u003cUnassignTaskFromPersonCommand\u003e {","lastModifiedDate":"2021-10-12"},{"lineNumber":16,"author":{"gitId":"jeremy-7007"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":17,"author":{"gitId":"jeremy-7007"},"content":"    /**","lastModifiedDate":"2021-10-12"},{"lineNumber":18,"author":{"gitId":"eltonyeh"},"content":"     * Parses the given {@code String} of arguments in the context of the UnassignTaskFromPersonCommand","lastModifiedDate":"2021-10-26"},{"lineNumber":19,"author":{"gitId":"eltonyeh"},"content":"     * and returns an UnassignTaskFromPersonCommand object for execution.","lastModifiedDate":"2021-10-26"},{"lineNumber":20,"author":{"gitId":"jeremy-7007"},"content":"     * @throws ParseException if the user input does not conform the expected format","lastModifiedDate":"2021-10-12"},{"lineNumber":21,"author":{"gitId":"jeremy-7007"},"content":"     */","lastModifiedDate":"2021-10-12"},{"lineNumber":22,"author":{"gitId":"jeremy-7007"},"content":"    public UnassignTaskFromPersonCommand parse(String args) throws ParseException {","lastModifiedDate":"2021-10-12"},{"lineNumber":23,"author":{"gitId":"jeremy-7007"},"content":"        requireNonNull(args);","lastModifiedDate":"2021-10-12"},{"lineNumber":24,"author":{"gitId":"tanhuakun"},"content":"        if (isEmptyOrOnlyWhitespace(args) || !hasExpectedSeparatedSegments(args, 2)) {","lastModifiedDate":"2021-11-02"},{"lineNumber":25,"author":{"gitId":"tanhuakun"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2021-11-02"},{"lineNumber":26,"author":{"gitId":"tanhuakun"},"content":"                    UnassignTaskFromPersonCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-11-02"},{"lineNumber":27,"author":{"gitId":"tanhuakun"},"content":"        }","lastModifiedDate":"2021-11-02"},{"lineNumber":28,"author":{"gitId":"jeremy-7007"},"content":"        Index personIndex;","lastModifiedDate":"2021-10-12"},{"lineNumber":29,"author":{"gitId":"jeremy-7007"},"content":"        Index taskIndex;","lastModifiedDate":"2021-10-12"},{"lineNumber":30,"author":{"gitId":"jeremy-7007"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":31,"author":{"gitId":"jeremy-7007"},"content":"        try {","lastModifiedDate":"2021-10-12"},{"lineNumber":32,"author":{"gitId":"jeremy-7007"},"content":"            Index[] indices \u003d ParserUtil.parseTwoIndices(args);","lastModifiedDate":"2021-10-12"},{"lineNumber":33,"author":{"gitId":"jeremy-7007"},"content":"            personIndex \u003d indices[0];","lastModifiedDate":"2021-10-12"},{"lineNumber":34,"author":{"gitId":"jeremy-7007"},"content":"            taskIndex \u003d indices[1];","lastModifiedDate":"2021-10-12"},{"lineNumber":35,"author":{"gitId":"jeremy-7007"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2021-10-12"},{"lineNumber":36,"author":{"gitId":"jeremy-7007"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2021-10-12"},{"lineNumber":37,"author":{"gitId":"tanhuakun"},"content":"                    MESSAGE_INVALID_INDEX_GIVEN), pe);","lastModifiedDate":"2021-11-02"},{"lineNumber":38,"author":{"gitId":"jeremy-7007"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":39,"author":{"gitId":"jeremy-7007"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":40,"author":{"gitId":"jeremy-7007"},"content":"        return new UnassignTaskFromPersonCommand(personIndex, taskIndex);","lastModifiedDate":"2021-10-12"},{"lineNumber":41,"author":{"gitId":"jeremy-7007"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":42,"author":{"gitId":"jeremy-7007"},"content":"}","lastModifiedDate":"2021-10-12"}],"authorContributionMap":{"jeremy-7007":32,"tanhuakun":8,"eltonyeh":2}},{"path":"src/main/java/seedu/address/model/AddressBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":5,"author":{"gitId":"tanhuakun"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-16"},{"lineNumber":6,"author":{"gitId":"tanhuakun"},"content":"import java.util.Collections;","lastModifiedDate":"2021-10-16"},{"lineNumber":7,"author":{"gitId":"jeremy-7007"},"content":"import java.util.HashMap;","lastModifiedDate":"2021-11-06"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"jeremy-7007"},"content":"import java.util.Map;","lastModifiedDate":"2021-11-06"},{"lineNumber":10,"author":{"gitId":"tanhuakun"},"content":"import java.util.Set;","lastModifiedDate":"2021-10-25"},{"lineNumber":11,"author":{"gitId":"tanhuakun"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2021-11-04"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-01-19"},{"lineNumber":14,"author":{"gitId":"kvihashini"},"content":"import seedu.address.model.group.Group;","lastModifiedDate":"2021-10-18"},{"lineNumber":15,"author":{"gitId":"kvihashini"},"content":"import seedu.address.model.group.GroupWithDetails;","lastModifiedDate":"2021-10-25"},{"lineNumber":16,"author":{"gitId":"kvihashini"},"content":"import seedu.address.model.group.UniqueGroupList;","lastModifiedDate":"2021-10-18"},{"lineNumber":17,"author":{"gitId":"tanhuakun"},"content":"import seedu.address.model.id.UniqueId;","lastModifiedDate":"2021-10-23"},{"lineNumber":18,"author":{"gitId":"tanhuakun"},"content":"import seedu.address.model.id.UniqueIdMapper;","lastModifiedDate":"2021-10-24"},{"lineNumber":19,"author":{"gitId":"tanhuakun"},"content":"import seedu.address.model.lesson.Attendee;","lastModifiedDate":"2021-10-24"},{"lineNumber":20,"author":{"gitId":"tanhuakun"},"content":"import seedu.address.model.lesson.Lesson;","lastModifiedDate":"2021-10-24"},{"lineNumber":21,"author":{"gitId":"tanhuakun"},"content":"import seedu.address.model.lesson.LessonWithAttendees;","lastModifiedDate":"2021-10-20"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2016-08-24"},{"lineNumber":23,"author":{"gitId":"tanhuakun"},"content":"import seedu.address.model.person.PersonWithDetails;","lastModifiedDate":"2021-10-25"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.person.UniquePersonList;","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"eltonyeh"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2021-10-08"},{"lineNumber":26,"author":{"gitId":"eltonyeh"},"content":"import seedu.address.model.task.UniqueTaskList;","lastModifiedDate":"2021-10-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":" * Wraps all data at the address-book level","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"kvihashini"},"content":" * Duplicates are not allowed (by .isSamePerson/.isSameTask/.isSameGroup comparison)","lastModifiedDate":"2021-10-17"},{"lineNumber":31,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"public class AddressBook implements ReadOnlyAddressBook {","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private final UniquePersonList persons;","lastModifiedDate":"2016-08-26"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"eltonyeh"},"content":"    private final UniqueTaskList tasks;","lastModifiedDate":"2021-10-08"},{"lineNumber":37,"author":{"gitId":"eltonyeh"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":38,"author":{"gitId":"kvihashini"},"content":"    private final UniqueGroupList groups;","lastModifiedDate":"2021-10-17"},{"lineNumber":39,"author":{"gitId":"kvihashini"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    /*","lastModifiedDate":"2016-10-19"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * The \u0027unusual\u0027 code block below is a non-static initialization block, sometimes used to avoid duplication","lastModifiedDate":"2019-05-11"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     * between constructors. See https://docs.oracle.com/javase/tutorial/java/javaOO/initial.html","lastModifiedDate":"2016-10-19"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2016-10-19"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     * Note that non-static init blocks are not recommended to use. There are other ways to avoid duplication","lastModifiedDate":"2016-10-19"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     *   among constructors.","lastModifiedDate":"2016-10-19"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-19"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    {","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        persons \u003d new UniquePersonList();","lastModifiedDate":"2016-08-26"},{"lineNumber":49,"author":{"gitId":"eltonyeh"},"content":"        tasks \u003d new UniqueTaskList();","lastModifiedDate":"2021-10-08"},{"lineNumber":50,"author":{"gitId":"kvihashini"},"content":"        groups \u003d new UniqueGroupList();","lastModifiedDate":"2021-10-17"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public AddressBook() {}","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * Creates an AddressBook using the Persons in the {@code toBeCopied}","lastModifiedDate":"2018-03-29"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public AddressBook(ReadOnlyAddressBook toBeCopied) {","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        this();","lastModifiedDate":"2016-12-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        resetData(toBeCopied);","lastModifiedDate":"2016-12-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    //// list overwrite operations","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     * Replaces the contents of the person list with {@code persons}.","lastModifiedDate":"2018-08-07"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     * {@code persons} must not contain duplicate persons.","lastModifiedDate":"2018-08-07"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public void setPersons(List\u003cPerson\u003e persons) {","lastModifiedDate":"2018-08-07"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        this.persons.setPersons(persons);","lastModifiedDate":"2016-10-19"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":73,"author":{"gitId":"eltonyeh"},"content":"    /**","lastModifiedDate":"2021-10-08"},{"lineNumber":74,"author":{"gitId":"eltonyeh"},"content":"     * Replaces the contents of the task list with {@code tasks}.","lastModifiedDate":"2021-10-08"},{"lineNumber":75,"author":{"gitId":"kvihashini"},"content":"     * {@code tasks} must not contain duplicate tasks.","lastModifiedDate":"2021-10-24"},{"lineNumber":76,"author":{"gitId":"eltonyeh"},"content":"     */","lastModifiedDate":"2021-10-08"},{"lineNumber":77,"author":{"gitId":"eltonyeh"},"content":"    public void setTasks(List\u003cTask\u003e tasks) {","lastModifiedDate":"2021-10-08"},{"lineNumber":78,"author":{"gitId":"eltonyeh"},"content":"        this.tasks.setTasks(tasks);","lastModifiedDate":"2021-10-08"},{"lineNumber":79,"author":{"gitId":"eltonyeh"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":80,"author":{"gitId":"eltonyeh"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":81,"author":{"gitId":"kvihashini"},"content":"    /**","lastModifiedDate":"2021-10-24"},{"lineNumber":82,"author":{"gitId":"kvihashini"},"content":"     * Replaces the contents of the group list with {@code groups}.","lastModifiedDate":"2021-10-24"},{"lineNumber":83,"author":{"gitId":"kvihashini"},"content":"     * {@code groups} must not contain duplicate groups.","lastModifiedDate":"2021-10-24"},{"lineNumber":84,"author":{"gitId":"kvihashini"},"content":"     */","lastModifiedDate":"2021-10-24"},{"lineNumber":85,"author":{"gitId":"kvihashini"},"content":"    public void setGroups(List\u003cGroup\u003e groups) {","lastModifiedDate":"2021-10-24"},{"lineNumber":86,"author":{"gitId":"kvihashini"},"content":"        this.groups.setGroups(groups);","lastModifiedDate":"2021-10-24"},{"lineNumber":87,"author":{"gitId":"kvihashini"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":88,"author":{"gitId":"kvihashini"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":89,"author":{"gitId":"kvihashini"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     * Resets the existing data of this {@code AddressBook} with {@code newData}.","lastModifiedDate":"2017-08-16"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    public void resetData(ReadOnlyAddressBook newData) {","lastModifiedDate":"2016-08-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        requireNonNull(newData);","lastModifiedDate":"2017-05-15"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-20"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        setPersons(newData.getPersonList());","lastModifiedDate":"2018-03-29"},{"lineNumber":97,"author":{"gitId":"eltonyeh"},"content":"        setTasks(newData.getTaskList());","lastModifiedDate":"2021-10-08"},{"lineNumber":98,"author":{"gitId":"kvihashini"},"content":"        setGroups(newData.getGroupList());","lastModifiedDate":"2021-10-24"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    //// person-level operations","lastModifiedDate":"2016-08-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     * Returns true if a person with the same identity as {@code person} exists in the address book.","lastModifiedDate":"2018-08-06"},{"lineNumber":105,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":106,"author":{"gitId":"-"},"content":"    public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-06"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        requireNonNull(person);","lastModifiedDate":"2018-08-06"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        return persons.contains(person);","lastModifiedDate":"2018-08-06"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":112,"author":{"gitId":"-"},"content":"     * Adds a person to the address book.","lastModifiedDate":"2016-09-21"},{"lineNumber":113,"author":{"gitId":"-"},"content":"     * The person must not already exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":114,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    public void addPerson(Person p) {","lastModifiedDate":"2018-08-07"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        persons.add(p);","lastModifiedDate":"2018-03-29"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":120,"author":{"gitId":"-"},"content":"     * Replaces the given person {@code target} in the list with {@code editedPerson}.","lastModifiedDate":"2018-01-10"},{"lineNumber":121,"author":{"gitId":"-"},"content":"     * {@code target} must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":122,"author":{"gitId":"-"},"content":"     * The person identity of {@code editedPerson} must not be the same as another existing person in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":123,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-17"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        requireNonNull(editedPerson);","lastModifiedDate":"2018-01-10"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        persons.setPerson(target, editedPerson);","lastModifiedDate":"2018-03-29"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":131,"author":{"gitId":"-"},"content":"     * Removes {@code key} from this {@code AddressBook}.","lastModifiedDate":"2017-08-16"},{"lineNumber":132,"author":{"gitId":"tanhuakun"},"content":"     * Cleans up all references to this person.","lastModifiedDate":"2021-10-23"},{"lineNumber":133,"author":{"gitId":"tanhuakun"},"content":"     *","lastModifiedDate":"2021-10-23"},{"lineNumber":134,"author":{"gitId":"-"},"content":"     * {@code key} must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":135,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    public void removePerson(Person key) {","lastModifiedDate":"2018-08-07"},{"lineNumber":137,"author":{"gitId":"tanhuakun"},"content":"        UniqueId personId \u003d key.getId();","lastModifiedDate":"2021-10-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        persons.remove(key);","lastModifiedDate":"2018-02-28"},{"lineNumber":139,"author":{"gitId":"tanhuakun"},"content":"        assert !persons.contains(key); // assert removal first, before cleaning up.","lastModifiedDate":"2021-10-23"},{"lineNumber":140,"author":{"gitId":"tanhuakun"},"content":"        groups.cleanUpPersonId(personId);","lastModifiedDate":"2021-10-23"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":143,"author":{"gitId":"eltonyeh"},"content":"    //// task-level operations","lastModifiedDate":"2021-10-08"},{"lineNumber":144,"author":{"gitId":"eltonyeh"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":145,"author":{"gitId":"eltonyeh"},"content":"    /**","lastModifiedDate":"2021-10-08"},{"lineNumber":146,"author":{"gitId":"eltonyeh"},"content":"     * Returns true if a task with the same identity as {@code task} exists in the address book.","lastModifiedDate":"2021-10-08"},{"lineNumber":147,"author":{"gitId":"eltonyeh"},"content":"     */","lastModifiedDate":"2021-10-08"},{"lineNumber":148,"author":{"gitId":"eltonyeh"},"content":"    public boolean hasTask(Task task) {","lastModifiedDate":"2021-10-08"},{"lineNumber":149,"author":{"gitId":"eltonyeh"},"content":"        requireNonNull(task);","lastModifiedDate":"2021-10-08"},{"lineNumber":150,"author":{"gitId":"eltonyeh"},"content":"        return tasks.contains(task);","lastModifiedDate":"2021-10-08"},{"lineNumber":151,"author":{"gitId":"eltonyeh"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":152,"author":{"gitId":"eltonyeh"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":153,"author":{"gitId":"eltonyeh"},"content":"    /**","lastModifiedDate":"2021-10-08"},{"lineNumber":154,"author":{"gitId":"eltonyeh"},"content":"     * Adds a task to the address book.","lastModifiedDate":"2021-10-08"},{"lineNumber":155,"author":{"gitId":"eltonyeh"},"content":"     * The task must not already exist in the address book.","lastModifiedDate":"2021-10-08"},{"lineNumber":156,"author":{"gitId":"eltonyeh"},"content":"     */","lastModifiedDate":"2021-10-08"},{"lineNumber":157,"author":{"gitId":"eltonyeh"},"content":"    public void addTask(Task t) {","lastModifiedDate":"2021-10-08"},{"lineNumber":158,"author":{"gitId":"eltonyeh"},"content":"        tasks.add(t);","lastModifiedDate":"2021-10-08"},{"lineNumber":159,"author":{"gitId":"eltonyeh"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":160,"author":{"gitId":"eltonyeh"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":161,"author":{"gitId":"eltonyeh"},"content":"    /**","lastModifiedDate":"2021-10-08"},{"lineNumber":162,"author":{"gitId":"eltonyeh"},"content":"     * Replaces the given task {@code target} in the list with {@code editedTask}.","lastModifiedDate":"2021-10-08"},{"lineNumber":163,"author":{"gitId":"eltonyeh"},"content":"     * {@code target} must exist in the address book.","lastModifiedDate":"2021-10-08"},{"lineNumber":164,"author":{"gitId":"eltonyeh"},"content":"     * The task identity of {@code editedTask} must not be the same as another existing task in the address book.","lastModifiedDate":"2021-10-08"},{"lineNumber":165,"author":{"gitId":"eltonyeh"},"content":"     */","lastModifiedDate":"2021-10-08"},{"lineNumber":166,"author":{"gitId":"eltonyeh"},"content":"    public void setTask(Task target, Task editedTask) {","lastModifiedDate":"2021-10-08"},{"lineNumber":167,"author":{"gitId":"eltonyeh"},"content":"        requireNonNull(editedTask);","lastModifiedDate":"2021-10-08"},{"lineNumber":168,"author":{"gitId":"eltonyeh"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":169,"author":{"gitId":"eltonyeh"},"content":"        tasks.setTask(target, editedTask);","lastModifiedDate":"2021-10-08"},{"lineNumber":170,"author":{"gitId":"eltonyeh"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":171,"author":{"gitId":"eltonyeh"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":172,"author":{"gitId":"eltonyeh"},"content":"    /**","lastModifiedDate":"2021-10-08"},{"lineNumber":173,"author":{"gitId":"eltonyeh"},"content":"     * Removes {@code key} from this {@code AddressBook}.","lastModifiedDate":"2021-10-08"},{"lineNumber":174,"author":{"gitId":"eltonyeh"},"content":"     * {@code key} must exist in the address book.","lastModifiedDate":"2021-10-08"},{"lineNumber":175,"author":{"gitId":"eltonyeh"},"content":"     */","lastModifiedDate":"2021-10-08"},{"lineNumber":176,"author":{"gitId":"eltonyeh"},"content":"    public void removeTask(Task key) {","lastModifiedDate":"2021-10-08"},{"lineNumber":177,"author":{"gitId":"eltonyeh"},"content":"        tasks.remove(key);","lastModifiedDate":"2021-10-08"},{"lineNumber":178,"author":{"gitId":"eltonyeh"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":179,"author":{"gitId":"eltonyeh"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":180,"author":{"gitId":"kvihashini"},"content":"    //// group-level operations","lastModifiedDate":"2021-10-17"},{"lineNumber":181,"author":{"gitId":"kvihashini"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":182,"author":{"gitId":"kvihashini"},"content":"    /**","lastModifiedDate":"2021-10-17"},{"lineNumber":183,"author":{"gitId":"kvihashini"},"content":"     * Returns true if a group with the same identity as {@code group} exists in the address book.","lastModifiedDate":"2021-10-17"},{"lineNumber":184,"author":{"gitId":"kvihashini"},"content":"     */","lastModifiedDate":"2021-10-17"},{"lineNumber":185,"author":{"gitId":"kvihashini"},"content":"    public boolean hasGroup(Group group) {","lastModifiedDate":"2021-10-17"},{"lineNumber":186,"author":{"gitId":"kvihashini"},"content":"        requireNonNull(group);","lastModifiedDate":"2021-10-17"},{"lineNumber":187,"author":{"gitId":"kvihashini"},"content":"        return groups.contains(group);","lastModifiedDate":"2021-10-17"},{"lineNumber":188,"author":{"gitId":"kvihashini"},"content":"    }","lastModifiedDate":"2021-10-17"},{"lineNumber":189,"author":{"gitId":"kvihashini"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":190,"author":{"gitId":"kvihashini"},"content":"    /**","lastModifiedDate":"2021-10-17"},{"lineNumber":191,"author":{"gitId":"kvihashini"},"content":"     * Adds a group to the address book.","lastModifiedDate":"2021-10-17"},{"lineNumber":192,"author":{"gitId":"kvihashini"},"content":"     * The group must not already exist in the address book.","lastModifiedDate":"2021-10-17"},{"lineNumber":193,"author":{"gitId":"kvihashini"},"content":"     */","lastModifiedDate":"2021-10-17"},{"lineNumber":194,"author":{"gitId":"kvihashini"},"content":"    public void addGroup(Group g) {","lastModifiedDate":"2021-10-17"},{"lineNumber":195,"author":{"gitId":"kvihashini"},"content":"        groups.add(g);","lastModifiedDate":"2021-10-17"},{"lineNumber":196,"author":{"gitId":"kvihashini"},"content":"    }","lastModifiedDate":"2021-10-17"},{"lineNumber":197,"author":{"gitId":"kvihashini"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":198,"author":{"gitId":"kvihashini"},"content":"    /**","lastModifiedDate":"2021-10-17"},{"lineNumber":199,"author":{"gitId":"kvihashini"},"content":"     * Replaces the given group {@code target} in the list with {@code editedGroup}.","lastModifiedDate":"2021-10-17"},{"lineNumber":200,"author":{"gitId":"kvihashini"},"content":"     * {@code target} must exist in the address book.","lastModifiedDate":"2021-10-17"},{"lineNumber":201,"author":{"gitId":"kvihashini"},"content":"     * The group identity of {@code editedGroup} must not be the same as another existing group in the address book.","lastModifiedDate":"2021-10-17"},{"lineNumber":202,"author":{"gitId":"kvihashini"},"content":"     */","lastModifiedDate":"2021-10-17"},{"lineNumber":203,"author":{"gitId":"kvihashini"},"content":"    public void setGroup(Group target, Group editedGroup) {","lastModifiedDate":"2021-10-17"},{"lineNumber":204,"author":{"gitId":"kvihashini"},"content":"        requireNonNull(editedGroup);","lastModifiedDate":"2021-10-17"},{"lineNumber":205,"author":{"gitId":"kvihashini"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":206,"author":{"gitId":"kvihashini"},"content":"        groups.setGroup(target, editedGroup);","lastModifiedDate":"2021-10-17"},{"lineNumber":207,"author":{"gitId":"kvihashini"},"content":"    }","lastModifiedDate":"2021-10-17"},{"lineNumber":208,"author":{"gitId":"kvihashini"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":209,"author":{"gitId":"kvihashini"},"content":"    /**","lastModifiedDate":"2021-10-17"},{"lineNumber":210,"author":{"gitId":"kvihashini"},"content":"     * Removes {@code key} from this {@code AddressBook}.","lastModifiedDate":"2021-10-17"},{"lineNumber":211,"author":{"gitId":"kvihashini"},"content":"     * {@code key} must exist in the address book.","lastModifiedDate":"2021-10-17"},{"lineNumber":212,"author":{"gitId":"kvihashini"},"content":"     */","lastModifiedDate":"2021-10-17"},{"lineNumber":213,"author":{"gitId":"kvihashini"},"content":"    public void removeGroup(Group key) {","lastModifiedDate":"2021-10-17"},{"lineNumber":214,"author":{"gitId":"Neha-5678"},"content":"        UniqueId groupId \u003d key.getId();","lastModifiedDate":"2021-10-28"},{"lineNumber":215,"author":{"gitId":"kvihashini"},"content":"        groups.remove(key);","lastModifiedDate":"2021-10-17"},{"lineNumber":216,"author":{"gitId":"Neha-5678"},"content":"        assert !groups.contains(key); // assert removal first, before cleaning up.","lastModifiedDate":"2021-10-28"},{"lineNumber":217,"author":{"gitId":"Neha-5678"},"content":"        persons.cleanUpGroupId(groupId);","lastModifiedDate":"2021-10-28"},{"lineNumber":218,"author":{"gitId":"kvihashini"},"content":"    }","lastModifiedDate":"2021-10-17"},{"lineNumber":219,"author":{"gitId":"kvihashini"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":220,"author":{"gitId":"tanhuakun"},"content":"    public UniqueIdMapper\u003cPerson\u003e getPersonMapper() {","lastModifiedDate":"2021-10-24"},{"lineNumber":221,"author":{"gitId":"tanhuakun"},"content":"        return persons;","lastModifiedDate":"2021-10-24"},{"lineNumber":222,"author":{"gitId":"tanhuakun"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":223,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":224,"author":{"gitId":"tanhuakun"},"content":"    public UniqueIdMapper\u003cGroup\u003e getGroupMapper() {","lastModifiedDate":"2021-10-24"},{"lineNumber":225,"author":{"gitId":"tanhuakun"},"content":"        return groups;","lastModifiedDate":"2021-10-24"},{"lineNumber":226,"author":{"gitId":"tanhuakun"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":227,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":228,"author":{"gitId":"tanhuakun"},"content":"    public PersonWithDetails getPersonWithDetails(Person person) {","lastModifiedDate":"2021-10-25"},{"lineNumber":229,"author":{"gitId":"tanhuakun"},"content":"        Set\u003cGroupWithDetails\u003e groupsPersonIsIn \u003d groups.getFromUniqueIds(person.getAssignedGroupIds()).stream()","lastModifiedDate":"2021-11-04"},{"lineNumber":230,"author":{"gitId":"tanhuakun"},"content":"                .map(this::getGroupWithDetails)","lastModifiedDate":"2021-11-04"},{"lineNumber":231,"author":{"gitId":"tanhuakun"},"content":"                .collect(Collectors.toSet());","lastModifiedDate":"2021-11-04"},{"lineNumber":232,"author":{"gitId":"tanhuakun"},"content":"        Set\u003cTask\u003e tasksPersonHas \u003d tasks.getFromUniqueIds(person.getAssignedTaskIds());","lastModifiedDate":"2021-10-26"},{"lineNumber":233,"author":{"gitId":"jeremy-7007"},"content":"        Map\u003cTask, Boolean\u003e tasksCompletion \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2021-11-06"},{"lineNumber":234,"author":{"gitId":"jeremy-7007"},"content":"        Map\u003cUniqueId, Boolean\u003e tasksCompletionId \u003d person.getTasksCompletion();","lastModifiedDate":"2021-11-06"},{"lineNumber":235,"author":{"gitId":"jeremy-7007"},"content":"        tasksPersonHas.forEach(task -\u003e {","lastModifiedDate":"2021-11-06"},{"lineNumber":236,"author":{"gitId":"jeremy-7007"},"content":"            UniqueId taskId \u003d task.getId();","lastModifiedDate":"2021-11-06"},{"lineNumber":237,"author":{"gitId":"jeremy-7007"},"content":"            Boolean isDone \u003d tasksCompletionId.get(taskId);","lastModifiedDate":"2021-11-06"},{"lineNumber":238,"author":{"gitId":"jeremy-7007"},"content":"            assert !isDone.equals(null);","lastModifiedDate":"2021-11-06"},{"lineNumber":239,"author":{"gitId":"jeremy-7007"},"content":"            tasksCompletion.put(task, isDone);","lastModifiedDate":"2021-11-06"},{"lineNumber":240,"author":{"gitId":"jeremy-7007"},"content":"        });","lastModifiedDate":"2021-11-06"},{"lineNumber":241,"author":{"gitId":"jeremy-7007"},"content":"        return new PersonWithDetails(person, groupsPersonIsIn, tasksPersonHas, tasksCompletion);","lastModifiedDate":"2021-11-06"},{"lineNumber":242,"author":{"gitId":"tanhuakun"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":243,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":244,"author":{"gitId":"kvihashini"},"content":"    public GroupWithDetails getGroupWithDetails(Group group) {","lastModifiedDate":"2021-10-25"},{"lineNumber":245,"author":{"gitId":"kvihashini"},"content":"        Set\u003cPerson\u003e studentsInGroup \u003d persons.getFromUniqueIds(group.getAssignedPersonIds());","lastModifiedDate":"2021-10-25"},{"lineNumber":246,"author":{"gitId":"tanhuakun"},"content":"        Set\u003cTask\u003e tasksInGroup \u003d tasks.getFromUniqueIds(group.getAssignedTaskIds());","lastModifiedDate":"2021-11-04"},{"lineNumber":247,"author":{"gitId":"tanhuakun"},"content":"        return new GroupWithDetails(group, studentsInGroup, tasksInGroup);","lastModifiedDate":"2021-11-04"},{"lineNumber":248,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":249,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":250,"author":{"gitId":"-"},"content":"    //// util methods","lastModifiedDate":"2016-08-08"},{"lineNumber":251,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":252,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":253,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-08"},{"lineNumber":254,"author":{"gitId":"eltonyeh"},"content":"        return persons.asUnmodifiableObservableList().size() + \" persons, \"","lastModifiedDate":"2021-11-07"},{"lineNumber":255,"author":{"gitId":"eltonyeh"},"content":"                + tasks.asUnmodifiableObservableList().size() + \" tasks, \"","lastModifiedDate":"2021-11-07"},{"lineNumber":256,"author":{"gitId":"kvihashini"},"content":"                + groups.asUnmodifiableObservableList().size() + \" groups\";","lastModifiedDate":"2021-10-24"},{"lineNumber":257,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":258,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":259,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-08"},{"lineNumber":260,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e getPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":261,"author":{"gitId":"-"},"content":"        return persons.asUnmodifiableObservableList();","lastModifiedDate":"2018-04-05"},{"lineNumber":262,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-01"},{"lineNumber":263,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-01"},{"lineNumber":264,"author":{"gitId":"eltonyeh"},"content":"    @Override","lastModifiedDate":"2021-10-08"},{"lineNumber":265,"author":{"gitId":"eltonyeh"},"content":"    public ObservableList\u003cTask\u003e getTaskList() {","lastModifiedDate":"2021-10-08"},{"lineNumber":266,"author":{"gitId":"eltonyeh"},"content":"        return tasks.asUnmodifiableObservableList();","lastModifiedDate":"2021-10-08"},{"lineNumber":267,"author":{"gitId":"eltonyeh"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":268,"author":{"gitId":"eltonyeh"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":269,"author":{"gitId":"kvihashini"},"content":"    @Override","lastModifiedDate":"2021-10-17"},{"lineNumber":270,"author":{"gitId":"kvihashini"},"content":"    public ObservableList\u003cGroup\u003e getGroupList() {","lastModifiedDate":"2021-10-17"},{"lineNumber":271,"author":{"gitId":"kvihashini"},"content":"        return groups.asUnmodifiableObservableList();","lastModifiedDate":"2021-10-17"},{"lineNumber":272,"author":{"gitId":"kvihashini"},"content":"    }","lastModifiedDate":"2021-10-17"},{"lineNumber":273,"author":{"gitId":"kvihashini"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":274,"author":{"gitId":"tanhuakun"},"content":"    @Override","lastModifiedDate":"2021-10-16"},{"lineNumber":275,"author":{"gitId":"tanhuakun"},"content":"    public List\u003cLessonWithAttendees\u003e getSortedLessonsWithAttendees() {","lastModifiedDate":"2021-10-20"},{"lineNumber":276,"author":{"gitId":"tanhuakun"},"content":"        List\u003cLessonWithAttendees\u003e lessons \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-20"},{"lineNumber":277,"author":{"gitId":"tanhuakun"},"content":"        for (Person person : persons) {","lastModifiedDate":"2021-10-24"},{"lineNumber":278,"author":{"gitId":"tanhuakun"},"content":"            List\u003cAttendee\u003e newList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-24"},{"lineNumber":279,"author":{"gitId":"tanhuakun"},"content":"            newList.add(person);","lastModifiedDate":"2021-10-24"},{"lineNumber":280,"author":{"gitId":"tanhuakun"},"content":"            for (Lesson lesson : person.getLessons()) {","lastModifiedDate":"2021-10-24"},{"lineNumber":281,"author":{"gitId":"tanhuakun"},"content":"                lessons.add(new LessonWithAttendees(lesson, newList));","lastModifiedDate":"2021-10-24"},{"lineNumber":282,"author":{"gitId":"tanhuakun"},"content":"            }","lastModifiedDate":"2021-10-24"},{"lineNumber":283,"author":{"gitId":"tanhuakun"},"content":"        }","lastModifiedDate":"2021-10-24"},{"lineNumber":284,"author":{"gitId":"tanhuakun"},"content":"        for (Group group : groups) {","lastModifiedDate":"2021-10-24"},{"lineNumber":285,"author":{"gitId":"tanhuakun"},"content":"            List\u003cAttendee\u003e newList \u003d new ArrayList\u003c\u003e(persons.getFromUniqueIds(group.getAssignedPersonIds()));","lastModifiedDate":"2021-10-24"},{"lineNumber":286,"author":{"gitId":"tanhuakun"},"content":"            for (Lesson lesson : group.getLessons()) {","lastModifiedDate":"2021-10-24"},{"lineNumber":287,"author":{"gitId":"tanhuakun"},"content":"                lessons.add(new LessonWithAttendees(lesson, newList));","lastModifiedDate":"2021-10-24"},{"lineNumber":288,"author":{"gitId":"tanhuakun"},"content":"            }","lastModifiedDate":"2021-10-24"},{"lineNumber":289,"author":{"gitId":"tanhuakun"},"content":"        }","lastModifiedDate":"2021-10-16"},{"lineNumber":290,"author":{"gitId":"tanhuakun"},"content":"        Collections.sort(lessons, new LessonWithAttendees.SortByLesson());","lastModifiedDate":"2021-10-20"},{"lineNumber":291,"author":{"gitId":"tanhuakun"},"content":"        return lessons;","lastModifiedDate":"2021-10-16"},{"lineNumber":292,"author":{"gitId":"tanhuakun"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":293,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":294,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":295,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-21"},{"lineNumber":296,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-09-21"},{"lineNumber":297,"author":{"gitId":"-"},"content":"                || (other instanceof AddressBook // instanceof handles nulls","lastModifiedDate":"2016-09-21"},{"lineNumber":298,"author":{"gitId":"eltonyeh"},"content":"                \u0026\u0026 persons.equals(((AddressBook) other).persons)","lastModifiedDate":"2021-10-08"},{"lineNumber":299,"author":{"gitId":"kvihashini"},"content":"                \u0026\u0026 tasks.equals(((AddressBook) other).tasks)","lastModifiedDate":"2021-10-17"},{"lineNumber":300,"author":{"gitId":"kvihashini"},"content":"                \u0026\u0026 groups.equals(((AddressBook) other).groups));","lastModifiedDate":"2021-10-17"},{"lineNumber":301,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":302,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":303,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":304,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-21"},{"lineNumber":305,"author":{"gitId":"-"},"content":"        return persons.hashCode();","lastModifiedDate":"2018-03-29"},{"lineNumber":306,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":307,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"Neha-5678":3,"jeremy-7007":11,"kvihashini":65,"tanhuakun":52,"eltonyeh":58,"-":118}},{"path":"src/main/java/seedu/address/model/Model.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-09-25"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"tanhuakun"},"content":"import javafx.beans.value.ObservableValue;","lastModifiedDate":"2021-10-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":9,"author":{"gitId":"kvihashini"},"content":"import seedu.address.model.group.Group;","lastModifiedDate":"2021-10-18"},{"lineNumber":10,"author":{"gitId":"kvihashini"},"content":"import seedu.address.model.group.GroupWithDetails;","lastModifiedDate":"2021-10-25"},{"lineNumber":11,"author":{"gitId":"tanhuakun"},"content":"import seedu.address.model.id.UniqueIdMapper;","lastModifiedDate":"2021-10-24"},{"lineNumber":12,"author":{"gitId":"tanhuakun"},"content":"import seedu.address.model.lesson.LessonWithAttendees;","lastModifiedDate":"2021-10-20"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":14,"author":{"gitId":"tanhuakun"},"content":"import seedu.address.model.person.PersonWithDetails;","lastModifiedDate":"2021-10-25"},{"lineNumber":15,"author":{"gitId":"eltonyeh"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2021-10-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * The API of the Model component.","lastModifiedDate":"2016-09-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-25"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public interface Model {","lastModifiedDate":"2016-09-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /** {@code Predicate} that always evaluate to true */","lastModifiedDate":"2017-08-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    Predicate\u003cPerson\u003e PREDICATE_SHOW_ALL_PERSONS \u003d unused -\u003e true;","lastModifiedDate":"2018-01-10"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":24,"author":{"gitId":"eltonyeh"},"content":"    /** {@code Predicate} that always evaluate to true */","lastModifiedDate":"2021-10-08"},{"lineNumber":25,"author":{"gitId":"eltonyeh"},"content":"    Predicate\u003cTask\u003e PREDICATE_SHOW_ALL_TASKS \u003d unused -\u003e true;","lastModifiedDate":"2021-10-08"},{"lineNumber":26,"author":{"gitId":"eltonyeh"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":27,"author":{"gitId":"kvihashini"},"content":"    /** {@code Predicate} that always evaluate to true */","lastModifiedDate":"2021-10-17"},{"lineNumber":28,"author":{"gitId":"kvihashini"},"content":"    Predicate\u003cGroup\u003e PREDICATE_SHOW_ALL_GROUPS \u003d unused -\u003e true;","lastModifiedDate":"2021-10-17"},{"lineNumber":29,"author":{"gitId":"kvihashini"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Replaces user prefs data with the data in {@code userPrefs}.","lastModifiedDate":"2018-12-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    void setUserPrefs(ReadOnlyUserPrefs userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * Returns the user prefs.","lastModifiedDate":"2018-11-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    ReadOnlyUserPrefs getUserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    GuiSettings getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     * Sets the user prefs\u0027 GUI settings.","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    void setGuiSettings(GuiSettings guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     * Returns the user prefs\u0027 address book file path.","lastModifiedDate":"2018-11-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    Path getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * Sets the user prefs\u0027 address book file path.","lastModifiedDate":"2018-11-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    void setAddressBookFilePath(Path addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-11-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     * Replaces address book data with the data in {@code addressBook}.","lastModifiedDate":"2018-11-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-11-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    void setAddressBook(ReadOnlyAddressBook addressBook);","lastModifiedDate":"2018-11-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    /** Returns the AddressBook */","lastModifiedDate":"2016-09-25"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    ReadOnlyAddressBook getAddressBook();","lastModifiedDate":"2016-09-25"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-06"},{"lineNumber":69,"author":{"gitId":"-"},"content":"     * Returns true if a person with the same identity as {@code person} exists in the address book.","lastModifiedDate":"2018-08-06"},{"lineNumber":70,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-06"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    boolean hasPerson(Person person);","lastModifiedDate":"2018-08-06"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     * Deletes the given person.","lastModifiedDate":"2018-08-07"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     * The person must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    void deletePerson(Person target);","lastModifiedDate":"2018-08-07"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     * Adds the given person.","lastModifiedDate":"2018-08-07"},{"lineNumber":81,"author":{"gitId":"-"},"content":"     * {@code person} must not already exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":82,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    void addPerson(Person person);","lastModifiedDate":"2018-08-07"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * Replaces the given person {@code target} with {@code editedPerson}.","lastModifiedDate":"2017-06-07"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     * {@code target} must exist in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     * The person identity of {@code editedPerson} must not be the same as another existing person in the address book.","lastModifiedDate":"2018-08-07"},{"lineNumber":89,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    void setPerson(Person target, Person editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    /** Returns an unmodifiable view of the filtered person list */","lastModifiedDate":"2017-09-01"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    ObservableList\u003cPerson\u003e getFilteredPersonList();","lastModifiedDate":"2018-01-10"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-05"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     * Updates the filter of the filtered person list to filter by the given {@code predicate}.","lastModifiedDate":"2017-08-05"},{"lineNumber":97,"author":{"gitId":"-"},"content":"     * @throws NullPointerException if {@code predicate} is null.","lastModifiedDate":"2017-08-05"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-05"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate);","lastModifiedDate":"2018-01-10"},{"lineNumber":100,"author":{"gitId":"eltonyeh"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":101,"author":{"gitId":"eltonyeh"},"content":"    /**","lastModifiedDate":"2021-10-08"},{"lineNumber":102,"author":{"gitId":"eltonyeh"},"content":"     * Returns true if a task with the same identity as {@code task} exists in the address book.","lastModifiedDate":"2021-10-08"},{"lineNumber":103,"author":{"gitId":"eltonyeh"},"content":"     */","lastModifiedDate":"2021-10-08"},{"lineNumber":104,"author":{"gitId":"eltonyeh"},"content":"    boolean hasTask(Task task);","lastModifiedDate":"2021-10-08"},{"lineNumber":105,"author":{"gitId":"eltonyeh"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":106,"author":{"gitId":"eltonyeh"},"content":"    /**","lastModifiedDate":"2021-10-08"},{"lineNumber":107,"author":{"gitId":"eltonyeh"},"content":"     * Deletes the given task.","lastModifiedDate":"2021-10-08"},{"lineNumber":108,"author":{"gitId":"eltonyeh"},"content":"     * The task must exist in the address book.","lastModifiedDate":"2021-10-08"},{"lineNumber":109,"author":{"gitId":"eltonyeh"},"content":"     */","lastModifiedDate":"2021-10-08"},{"lineNumber":110,"author":{"gitId":"eltonyeh"},"content":"    void deleteTask(Task target);","lastModifiedDate":"2021-10-08"},{"lineNumber":111,"author":{"gitId":"eltonyeh"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":112,"author":{"gitId":"eltonyeh"},"content":"    /**","lastModifiedDate":"2021-10-08"},{"lineNumber":113,"author":{"gitId":"eltonyeh"},"content":"     * Adds the given task.","lastModifiedDate":"2021-10-08"},{"lineNumber":114,"author":{"gitId":"eltonyeh"},"content":"     * {@code task} must not already exist in the address book.","lastModifiedDate":"2021-10-08"},{"lineNumber":115,"author":{"gitId":"eltonyeh"},"content":"     */","lastModifiedDate":"2021-10-08"},{"lineNumber":116,"author":{"gitId":"eltonyeh"},"content":"    void addTask(Task task);","lastModifiedDate":"2021-10-08"},{"lineNumber":117,"author":{"gitId":"eltonyeh"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":118,"author":{"gitId":"eltonyeh"},"content":"    /**","lastModifiedDate":"2021-10-08"},{"lineNumber":119,"author":{"gitId":"eltonyeh"},"content":"     * Replaces the given task {@code target} with {@code editedTask}.","lastModifiedDate":"2021-10-08"},{"lineNumber":120,"author":{"gitId":"eltonyeh"},"content":"     * {@code target} must exist in the address book.","lastModifiedDate":"2021-10-08"},{"lineNumber":121,"author":{"gitId":"eltonyeh"},"content":"     * The task identity of {@code editedTask} must not be the same as another existing task in the address book.","lastModifiedDate":"2021-10-08"},{"lineNumber":122,"author":{"gitId":"eltonyeh"},"content":"     */","lastModifiedDate":"2021-10-08"},{"lineNumber":123,"author":{"gitId":"eltonyeh"},"content":"    void setTask(Task target, Task editedTask);","lastModifiedDate":"2021-10-08"},{"lineNumber":124,"author":{"gitId":"eltonyeh"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":125,"author":{"gitId":"eltonyeh"},"content":"    /** Returns an unmodifiable view of the filtered task list */","lastModifiedDate":"2021-10-08"},{"lineNumber":126,"author":{"gitId":"eltonyeh"},"content":"    ObservableList\u003cTask\u003e getFilteredTaskList();","lastModifiedDate":"2021-10-08"},{"lineNumber":127,"author":{"gitId":"eltonyeh"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":128,"author":{"gitId":"eltonyeh"},"content":"    /**","lastModifiedDate":"2021-10-08"},{"lineNumber":129,"author":{"gitId":"eltonyeh"},"content":"     * Updates the filter of the filtered task list to filter by the given {@code predicate}.","lastModifiedDate":"2021-10-08"},{"lineNumber":130,"author":{"gitId":"eltonyeh"},"content":"     * @throws NullPointerException if {@code predicate} is null.","lastModifiedDate":"2021-10-08"},{"lineNumber":131,"author":{"gitId":"eltonyeh"},"content":"     */","lastModifiedDate":"2021-10-08"},{"lineNumber":132,"author":{"gitId":"eltonyeh"},"content":"    void updateFilteredTaskList(Predicate\u003cTask\u003e predicate);","lastModifiedDate":"2021-10-08"},{"lineNumber":133,"author":{"gitId":"kvihashini"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":134,"author":{"gitId":"kvihashini"},"content":"    /**","lastModifiedDate":"2021-10-17"},{"lineNumber":135,"author":{"gitId":"kvihashini"},"content":"     * Returns true if a group with the same identity as {@code group} exists in the address book.","lastModifiedDate":"2021-10-17"},{"lineNumber":136,"author":{"gitId":"kvihashini"},"content":"     */","lastModifiedDate":"2021-10-17"},{"lineNumber":137,"author":{"gitId":"kvihashini"},"content":"    boolean hasGroup(Group group);","lastModifiedDate":"2021-10-17"},{"lineNumber":138,"author":{"gitId":"kvihashini"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":139,"author":{"gitId":"kvihashini"},"content":"    /**","lastModifiedDate":"2021-10-17"},{"lineNumber":140,"author":{"gitId":"kvihashini"},"content":"     * Deletes the given group.","lastModifiedDate":"2021-10-17"},{"lineNumber":141,"author":{"gitId":"kvihashini"},"content":"     * The group must exist in the address book.","lastModifiedDate":"2021-10-17"},{"lineNumber":142,"author":{"gitId":"kvihashini"},"content":"     */","lastModifiedDate":"2021-10-17"},{"lineNumber":143,"author":{"gitId":"kvihashini"},"content":"    void deleteGroup(Group group);","lastModifiedDate":"2021-10-17"},{"lineNumber":144,"author":{"gitId":"kvihashini"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":145,"author":{"gitId":"kvihashini"},"content":"    /**","lastModifiedDate":"2021-10-17"},{"lineNumber":146,"author":{"gitId":"kvihashini"},"content":"     * Adds the given group.","lastModifiedDate":"2021-10-17"},{"lineNumber":147,"author":{"gitId":"kvihashini"},"content":"     * {@code group} must not already exist in the address book.","lastModifiedDate":"2021-10-17"},{"lineNumber":148,"author":{"gitId":"kvihashini"},"content":"     */","lastModifiedDate":"2021-10-17"},{"lineNumber":149,"author":{"gitId":"kvihashini"},"content":"    void addGroup(Group group);","lastModifiedDate":"2021-10-17"},{"lineNumber":150,"author":{"gitId":"kvihashini"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":151,"author":{"gitId":"kvihashini"},"content":"    /**","lastModifiedDate":"2021-10-17"},{"lineNumber":152,"author":{"gitId":"kvihashini"},"content":"     * Replaces the given group {@code target} with {@code editedGroup}.","lastModifiedDate":"2021-10-17"},{"lineNumber":153,"author":{"gitId":"kvihashini"},"content":"     * {@code target} must exist in the address book.","lastModifiedDate":"2021-10-17"},{"lineNumber":154,"author":{"gitId":"kvihashini"},"content":"     * The group identity of {@code editedGroup} must not be the same as another existing group in the address book.","lastModifiedDate":"2021-10-17"},{"lineNumber":155,"author":{"gitId":"kvihashini"},"content":"     */","lastModifiedDate":"2021-10-17"},{"lineNumber":156,"author":{"gitId":"kvihashini"},"content":"    void setGroup(Group group, Group editedGroup);","lastModifiedDate":"2021-10-17"},{"lineNumber":157,"author":{"gitId":"kvihashini"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":158,"author":{"gitId":"kvihashini"},"content":"    /** Returns an unmodifiable view of the filtered group list */","lastModifiedDate":"2021-10-17"},{"lineNumber":159,"author":{"gitId":"kvihashini"},"content":"    ObservableList\u003cGroup\u003e getFilteredGroupList();","lastModifiedDate":"2021-10-17"},{"lineNumber":160,"author":{"gitId":"kvihashini"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":161,"author":{"gitId":"kvihashini"},"content":"    /**","lastModifiedDate":"2021-10-17"},{"lineNumber":162,"author":{"gitId":"kvihashini"},"content":"     * Updates the filter of the filtered group list to filter by the given {@code predicate}.","lastModifiedDate":"2021-10-17"},{"lineNumber":163,"author":{"gitId":"kvihashini"},"content":"     * @throws NullPointerException if {@code predicate} is null.","lastModifiedDate":"2021-10-17"},{"lineNumber":164,"author":{"gitId":"kvihashini"},"content":"     */","lastModifiedDate":"2021-10-17"},{"lineNumber":165,"author":{"gitId":"kvihashini"},"content":"    void updateFilteredGroupList(Predicate\u003cGroup\u003e predicate);","lastModifiedDate":"2021-10-17"},{"lineNumber":166,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":167,"author":{"gitId":"tanhuakun"},"content":"    /**","lastModifiedDate":"2021-10-20"},{"lineNumber":168,"author":{"gitId":"tanhuakun"},"content":"     * Gets the sorted lessons with its corresponding attendees","lastModifiedDate":"2021-10-20"},{"lineNumber":169,"author":{"gitId":"tanhuakun"},"content":"     * @return","lastModifiedDate":"2021-10-20"},{"lineNumber":170,"author":{"gitId":"tanhuakun"},"content":"     */","lastModifiedDate":"2021-10-20"},{"lineNumber":171,"author":{"gitId":"tanhuakun"},"content":"    ObservableList\u003cLessonWithAttendees\u003e getSortedLessonsWithAttendees();","lastModifiedDate":"2021-10-25"},{"lineNumber":172,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":173,"author":{"gitId":"tanhuakun"},"content":"    /**","lastModifiedDate":"2021-10-25"},{"lineNumber":174,"author":{"gitId":"tanhuakun"},"content":"     * Forces an update of the lesson with attendees list","lastModifiedDate":"2021-10-25"},{"lineNumber":175,"author":{"gitId":"tanhuakun"},"content":"     */","lastModifiedDate":"2021-10-25"},{"lineNumber":176,"author":{"gitId":"tanhuakun"},"content":"    void updateLessonWithAttendeesList();","lastModifiedDate":"2021-10-25"},{"lineNumber":177,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":178,"author":{"gitId":"tanhuakun"},"content":"    /**","lastModifiedDate":"2021-10-25"},{"lineNumber":179,"author":{"gitId":"tanhuakun"},"content":"     * Gets the current viewing type of the model.","lastModifiedDate":"2021-10-25"},{"lineNumber":180,"author":{"gitId":"tanhuakun"},"content":"     * Viewing type is used to determine what the user is viewing in the panel.","lastModifiedDate":"2021-10-25"},{"lineNumber":181,"author":{"gitId":"tanhuakun"},"content":"     * @return","lastModifiedDate":"2021-10-25"},{"lineNumber":182,"author":{"gitId":"tanhuakun"},"content":"     */","lastModifiedDate":"2021-10-25"},{"lineNumber":183,"author":{"gitId":"tanhuakun"},"content":"    ObservableValue\u003cViewingType\u003e getViewingType();","lastModifiedDate":"2021-10-25"},{"lineNumber":184,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":185,"author":{"gitId":"tanhuakun"},"content":"    /**","lastModifiedDate":"2021-10-25"},{"lineNumber":186,"author":{"gitId":"tanhuakun"},"content":"     * Sets the viewing type of the model.","lastModifiedDate":"2021-10-25"},{"lineNumber":187,"author":{"gitId":"tanhuakun"},"content":"     * @param type to set to.","lastModifiedDate":"2021-10-25"},{"lineNumber":188,"author":{"gitId":"tanhuakun"},"content":"     */","lastModifiedDate":"2021-10-25"},{"lineNumber":189,"author":{"gitId":"tanhuakun"},"content":"    void setViewingType(ViewingType type);","lastModifiedDate":"2021-10-25"},{"lineNumber":190,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":191,"author":{"gitId":"tanhuakun"},"content":"    /**","lastModifiedDate":"2021-10-25"},{"lineNumber":192,"author":{"gitId":"tanhuakun"},"content":"     * Gets the current person to be viewed by the user.","lastModifiedDate":"2021-10-25"},{"lineNumber":193,"author":{"gitId":"tanhuakun"},"content":"     * @return PersonWithDetails of the person to be viewed.","lastModifiedDate":"2021-10-25"},{"lineNumber":194,"author":{"gitId":"tanhuakun"},"content":"     */","lastModifiedDate":"2021-10-25"},{"lineNumber":195,"author":{"gitId":"tanhuakun"},"content":"    ObservableValue\u003cPersonWithDetails\u003e getViewingPersonWithDetails();","lastModifiedDate":"2021-10-25"},{"lineNumber":196,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":197,"author":{"gitId":"kvihashini"},"content":"    /**","lastModifiedDate":"2021-10-25"},{"lineNumber":198,"author":{"gitId":"kvihashini"},"content":"     * Gets the current group to be viewed by the user.","lastModifiedDate":"2021-10-25"},{"lineNumber":199,"author":{"gitId":"kvihashini"},"content":"     * @return GroupWithDetails of the group to be viewed.","lastModifiedDate":"2021-10-25"},{"lineNumber":200,"author":{"gitId":"kvihashini"},"content":"     */","lastModifiedDate":"2021-10-25"},{"lineNumber":201,"author":{"gitId":"kvihashini"},"content":"    ObservableValue\u003cGroupWithDetails\u003e getViewingGroupWithDetails();","lastModifiedDate":"2021-10-25"},{"lineNumber":202,"author":{"gitId":"kvihashini"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":203,"author":{"gitId":"tanhuakun"},"content":"    /**","lastModifiedDate":"2021-10-25"},{"lineNumber":204,"author":{"gitId":"tanhuakun"},"content":"     * Sets the current viewing of the Person.","lastModifiedDate":"2021-10-25"},{"lineNumber":205,"author":{"gitId":"tanhuakun"},"content":"     * It is the model\u0027s responsibility to figure out the person\u0027s details.","lastModifiedDate":"2021-10-25"},{"lineNumber":206,"author":{"gitId":"tanhuakun"},"content":"     *","lastModifiedDate":"2021-10-25"},{"lineNumber":207,"author":{"gitId":"tanhuakun"},"content":"     * @param person to set the PersonWithDetails","lastModifiedDate":"2021-10-25"},{"lineNumber":208,"author":{"gitId":"tanhuakun"},"content":"     */","lastModifiedDate":"2021-10-25"},{"lineNumber":209,"author":{"gitId":"tanhuakun"},"content":"    void setPersonToView(Person person);","lastModifiedDate":"2021-10-25"},{"lineNumber":210,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":211,"author":{"gitId":"kvihashini"},"content":"    /**","lastModifiedDate":"2021-10-25"},{"lineNumber":212,"author":{"gitId":"kvihashini"},"content":"     * Sets the current viewing of the Group.","lastModifiedDate":"2021-10-25"},{"lineNumber":213,"author":{"gitId":"kvihashini"},"content":"     * It is the model\u0027s responsibility to figure out the groups\u0027s details.","lastModifiedDate":"2021-10-25"},{"lineNumber":214,"author":{"gitId":"kvihashini"},"content":"     *","lastModifiedDate":"2021-10-25"},{"lineNumber":215,"author":{"gitId":"kvihashini"},"content":"     * @param group to set the GroupWithDetails","lastModifiedDate":"2021-10-25"},{"lineNumber":216,"author":{"gitId":"kvihashini"},"content":"     */","lastModifiedDate":"2021-10-25"},{"lineNumber":217,"author":{"gitId":"kvihashini"},"content":"    void setGroupToView(Group group);","lastModifiedDate":"2021-10-25"},{"lineNumber":218,"author":{"gitId":"kvihashini"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":219,"author":{"gitId":"tanhuakun"},"content":"    /**","lastModifiedDate":"2021-10-24"},{"lineNumber":220,"author":{"gitId":"tanhuakun"},"content":"     * Returns a mapper that can convert unique Ids to persons","lastModifiedDate":"2021-10-24"},{"lineNumber":221,"author":{"gitId":"tanhuakun"},"content":"     * @return the UniqueIdMapper","lastModifiedDate":"2021-10-24"},{"lineNumber":222,"author":{"gitId":"tanhuakun"},"content":"     */","lastModifiedDate":"2021-10-24"},{"lineNumber":223,"author":{"gitId":"tanhuakun"},"content":"    UniqueIdMapper\u003cPerson\u003e getPersonMapper();","lastModifiedDate":"2021-10-24"},{"lineNumber":224,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":225,"author":{"gitId":"tanhuakun"},"content":"    /**","lastModifiedDate":"2021-10-24"},{"lineNumber":226,"author":{"gitId":"tanhuakun"},"content":"     * Returns a mapper that can convert unique Ids to groups","lastModifiedDate":"2021-10-24"},{"lineNumber":227,"author":{"gitId":"tanhuakun"},"content":"     * @return the UniqueIdMapper","lastModifiedDate":"2021-10-24"},{"lineNumber":228,"author":{"gitId":"tanhuakun"},"content":"     */","lastModifiedDate":"2021-10-24"},{"lineNumber":229,"author":{"gitId":"tanhuakun"},"content":"    UniqueIdMapper\u003cGroup\u003e getGroupMapper();","lastModifiedDate":"2021-10-24"},{"lineNumber":230,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-25"}],"authorContributionMap":{"kvihashini":52,"tanhuakun":54,"eltonyeh":37,"-":87}},{"path":"src/main/java/seedu/address/model/ModelManager.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-08-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2017-05-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"tanhuakun"},"content":"import javafx.beans.property.ObjectProperty;","lastModifiedDate":"2021-10-25"},{"lineNumber":11,"author":{"gitId":"tanhuakun"},"content":"import javafx.beans.property.SimpleObjectProperty;","lastModifiedDate":"2021-10-25"},{"lineNumber":12,"author":{"gitId":"tanhuakun"},"content":"import javafx.beans.value.ObservableValue;","lastModifiedDate":"2021-10-25"},{"lineNumber":13,"author":{"gitId":"tanhuakun"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2021-10-25"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-09-01"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import javafx.collections.transformation.FilteredList;","lastModifiedDate":"2016-08-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-23"},{"lineNumber":18,"author":{"gitId":"kvihashini"},"content":"import seedu.address.model.group.Group;","lastModifiedDate":"2021-10-18"},{"lineNumber":19,"author":{"gitId":"kvihashini"},"content":"import seedu.address.model.group.GroupWithDetails;","lastModifiedDate":"2021-10-25"},{"lineNumber":20,"author":{"gitId":"tanhuakun"},"content":"import seedu.address.model.id.UniqueIdMapper;","lastModifiedDate":"2021-10-24"},{"lineNumber":21,"author":{"gitId":"tanhuakun"},"content":"import seedu.address.model.lesson.LessonWithAttendees;","lastModifiedDate":"2021-10-20"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":23,"author":{"gitId":"tanhuakun"},"content":"import seedu.address.model.person.PersonWithDetails;","lastModifiedDate":"2021-10-25"},{"lineNumber":24,"author":{"gitId":"eltonyeh"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2021-10-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":" * Represents the in-memory model of the address book data.","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"public class ModelManager implements Model {","lastModifiedDate":"2018-12-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(ModelManager.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private final AddressBook addressBook;","lastModifiedDate":"2019-01-25"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private final UserPrefs userPrefs;","lastModifiedDate":"2018-12-06"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private final FilteredList\u003cPerson\u003e filteredPersons;","lastModifiedDate":"2018-01-10"},{"lineNumber":35,"author":{"gitId":"eltonyeh"},"content":"    private final FilteredList\u003cTask\u003e filteredTasks;","lastModifiedDate":"2021-10-08"},{"lineNumber":36,"author":{"gitId":"kvihashini"},"content":"    private final FilteredList\u003cGroup\u003e filteredGroups;","lastModifiedDate":"2021-10-17"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"tanhuakun"},"content":"    private final ObservableList\u003cLessonWithAttendees\u003e lessonWithAttendees;","lastModifiedDate":"2021-10-25"},{"lineNumber":39,"author":{"gitId":"tanhuakun"},"content":"    private final ObjectProperty\u003cPersonWithDetails\u003e personWithDetails;","lastModifiedDate":"2021-10-25"},{"lineNumber":40,"author":{"gitId":"kvihashini"},"content":"    private final ObjectProperty\u003cGroupWithDetails\u003e groupWithDetails;","lastModifiedDate":"2021-10-25"},{"lineNumber":41,"author":{"gitId":"tanhuakun"},"content":"    private final ObjectProperty\u003cViewingType\u003e viewType;","lastModifiedDate":"2021-10-25"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     * Initializes a ModelManager with the given addressBook and userPrefs.","lastModifiedDate":"2016-12-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public ModelManager(ReadOnlyAddressBook addressBook, ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        super();","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        requireAllNonNull(addressBook, userPrefs);","lastModifiedDate":"2017-05-19"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        logger.fine(\"Initializing with address book: \" + addressBook + \" and user prefs \" + userPrefs);","lastModifiedDate":"2016-12-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        this.addressBook \u003d new AddressBook(addressBook);","lastModifiedDate":"2019-01-25"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        this.userPrefs \u003d new UserPrefs(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        filteredPersons \u003d new FilteredList\u003c\u003e(this.addressBook.getPersonList());","lastModifiedDate":"2019-01-25"},{"lineNumber":55,"author":{"gitId":"eltonyeh"},"content":"        filteredTasks \u003d new FilteredList\u003c\u003e(this.addressBook.getTaskList());","lastModifiedDate":"2021-10-08"},{"lineNumber":56,"author":{"gitId":"kvihashini"},"content":"        filteredGroups \u003d new FilteredList\u003c\u003e(this.addressBook.getGroupList());","lastModifiedDate":"2021-10-17"},{"lineNumber":57,"author":{"gitId":"tanhuakun"},"content":"        lessonWithAttendees \u003d FXCollections.observableArrayList(this.addressBook.getSortedLessonsWithAttendees());","lastModifiedDate":"2021-10-25"},{"lineNumber":58,"author":{"gitId":"tanhuakun"},"content":"        viewType \u003d new SimpleObjectProperty\u003c\u003e(ViewingType.SCHEDULE);","lastModifiedDate":"2021-10-25"},{"lineNumber":59,"author":{"gitId":"tanhuakun"},"content":"        personWithDetails \u003d new SimpleObjectProperty\u003c\u003e(null);","lastModifiedDate":"2021-10-25"},{"lineNumber":60,"author":{"gitId":"kvihashini"},"content":"        groupWithDetails \u003d new SimpleObjectProperty\u003c\u003e(null);","lastModifiedDate":"2021-10-25"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public ModelManager() {","lastModifiedDate":"2016-09-22"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        this(new AddressBook(), new UserPrefs());","lastModifiedDate":"2016-09-25"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d UserPrefs \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2018-11-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2018-12-06"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        requireNonNull(userPrefs);","lastModifiedDate":"2018-11-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        this.userPrefs.resetData(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2018-11-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        return userPrefs;","lastModifiedDate":"2018-11-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        return userPrefs.getGuiSettings();","lastModifiedDate":"2018-11-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        requireNonNull(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        return userPrefs.getAddressBookFilePath();","lastModifiedDate":"2018-11-27"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-11-27"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2018-11-27"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        requireNonNull(addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        userPrefs.setAddressBookFilePath(addressBookFilePath);","lastModifiedDate":"2018-11-27"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d AddressBook \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2018-11-27"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    public void setAddressBook(ReadOnlyAddressBook addressBook) {","lastModifiedDate":"2018-11-27"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        this.addressBook.resetData(addressBook);","lastModifiedDate":"2019-01-25"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2016-09-21"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        return addressBook;","lastModifiedDate":"2019-01-25"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2018-08-06"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    public boolean hasPerson(Person person) {","lastModifiedDate":"2018-08-15"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        requireNonNull(person);","lastModifiedDate":"2018-08-06"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        return addressBook.hasPerson(person);","lastModifiedDate":"2019-01-25"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    public void deletePerson(Person target) {","lastModifiedDate":"2018-08-15"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        addressBook.removePerson(target);","lastModifiedDate":"2019-01-25"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    public void addPerson(Person person) {","lastModifiedDate":"2018-08-15"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        addressBook.addPerson(person);","lastModifiedDate":"2019-01-25"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2017-08-05"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-26"},{"lineNumber":130,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-26"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-12-13"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-17"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        requireAllNonNull(target, editedPerson);","lastModifiedDate":"2017-06-07"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        addressBook.setPerson(target, editedPerson);","lastModifiedDate":"2019-01-25"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-13"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":137,"author":{"gitId":"eltonyeh"},"content":"    @Override","lastModifiedDate":"2021-10-08"},{"lineNumber":138,"author":{"gitId":"eltonyeh"},"content":"    public boolean hasTask(Task task) {","lastModifiedDate":"2021-10-08"},{"lineNumber":139,"author":{"gitId":"eltonyeh"},"content":"        requireNonNull(task);","lastModifiedDate":"2021-10-08"},{"lineNumber":140,"author":{"gitId":"eltonyeh"},"content":"        return addressBook.hasTask(task);","lastModifiedDate":"2021-10-08"},{"lineNumber":141,"author":{"gitId":"eltonyeh"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":142,"author":{"gitId":"eltonyeh"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":143,"author":{"gitId":"eltonyeh"},"content":"    @Override","lastModifiedDate":"2021-10-08"},{"lineNumber":144,"author":{"gitId":"eltonyeh"},"content":"    public void deleteTask(Task target) {","lastModifiedDate":"2021-10-08"},{"lineNumber":145,"author":{"gitId":"eltonyeh"},"content":"        addressBook.removeTask(target);","lastModifiedDate":"2021-10-08"},{"lineNumber":146,"author":{"gitId":"eltonyeh"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":147,"author":{"gitId":"eltonyeh"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":148,"author":{"gitId":"eltonyeh"},"content":"    @Override","lastModifiedDate":"2021-10-08"},{"lineNumber":149,"author":{"gitId":"eltonyeh"},"content":"    public void addTask(Task task) {","lastModifiedDate":"2021-10-08"},{"lineNumber":150,"author":{"gitId":"eltonyeh"},"content":"        addressBook.addTask(task);","lastModifiedDate":"2021-10-08"},{"lineNumber":151,"author":{"gitId":"eltonyeh"},"content":"        updateFilteredTaskList(PREDICATE_SHOW_ALL_TASKS);","lastModifiedDate":"2021-10-08"},{"lineNumber":152,"author":{"gitId":"eltonyeh"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":153,"author":{"gitId":"eltonyeh"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":154,"author":{"gitId":"eltonyeh"},"content":"    @Override","lastModifiedDate":"2021-10-08"},{"lineNumber":155,"author":{"gitId":"eltonyeh"},"content":"    public void setTask(Task target, Task editedTask) {","lastModifiedDate":"2021-10-08"},{"lineNumber":156,"author":{"gitId":"eltonyeh"},"content":"        requireAllNonNull(target, editedTask);","lastModifiedDate":"2021-10-08"},{"lineNumber":157,"author":{"gitId":"eltonyeh"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":158,"author":{"gitId":"eltonyeh"},"content":"        addressBook.setTask(target, editedTask);","lastModifiedDate":"2021-10-08"},{"lineNumber":159,"author":{"gitId":"eltonyeh"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":160,"author":{"gitId":"eltonyeh"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":161,"author":{"gitId":"kvihashini"},"content":"    @Override","lastModifiedDate":"2021-10-17"},{"lineNumber":162,"author":{"gitId":"kvihashini"},"content":"    public boolean hasGroup(Group group) {","lastModifiedDate":"2021-10-17"},{"lineNumber":163,"author":{"gitId":"kvihashini"},"content":"        requireNonNull(group);","lastModifiedDate":"2021-10-17"},{"lineNumber":164,"author":{"gitId":"kvihashini"},"content":"        return addressBook.hasGroup(group);","lastModifiedDate":"2021-10-17"},{"lineNumber":165,"author":{"gitId":"kvihashini"},"content":"    }","lastModifiedDate":"2021-10-17"},{"lineNumber":166,"author":{"gitId":"kvihashini"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":167,"author":{"gitId":"kvihashini"},"content":"    @Override","lastModifiedDate":"2021-10-17"},{"lineNumber":168,"author":{"gitId":"kvihashini"},"content":"    public void deleteGroup(Group target) {","lastModifiedDate":"2021-10-17"},{"lineNumber":169,"author":{"gitId":"kvihashini"},"content":"        addressBook.removeGroup(target);","lastModifiedDate":"2021-10-17"},{"lineNumber":170,"author":{"gitId":"kvihashini"},"content":"    }","lastModifiedDate":"2021-10-17"},{"lineNumber":171,"author":{"gitId":"kvihashini"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":172,"author":{"gitId":"kvihashini"},"content":"    @Override","lastModifiedDate":"2021-10-17"},{"lineNumber":173,"author":{"gitId":"kvihashini"},"content":"    public void addGroup(Group group) {","lastModifiedDate":"2021-10-17"},{"lineNumber":174,"author":{"gitId":"kvihashini"},"content":"        addressBook.addGroup(group);","lastModifiedDate":"2021-10-17"},{"lineNumber":175,"author":{"gitId":"kvihashini"},"content":"        updateFilteredGroupList(PREDICATE_SHOW_ALL_GROUPS);","lastModifiedDate":"2021-10-17"},{"lineNumber":176,"author":{"gitId":"kvihashini"},"content":"    }","lastModifiedDate":"2021-10-17"},{"lineNumber":177,"author":{"gitId":"kvihashini"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":178,"author":{"gitId":"kvihashini"},"content":"    @Override","lastModifiedDate":"2021-10-17"},{"lineNumber":179,"author":{"gitId":"kvihashini"},"content":"    public void setGroup(Group target, Group editedGroup) {","lastModifiedDate":"2021-10-17"},{"lineNumber":180,"author":{"gitId":"kvihashini"},"content":"        requireAllNonNull(target, editedGroup);","lastModifiedDate":"2021-10-17"},{"lineNumber":181,"author":{"gitId":"kvihashini"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":182,"author":{"gitId":"kvihashini"},"content":"        addressBook.setGroup(target, editedGroup);","lastModifiedDate":"2021-10-17"},{"lineNumber":183,"author":{"gitId":"kvihashini"},"content":"    }","lastModifiedDate":"2021-10-17"},{"lineNumber":184,"author":{"gitId":"kvihashini"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":185,"author":{"gitId":"-"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Filtered Person List Accessors \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2016-10-12"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":187,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-19"},{"lineNumber":188,"author":{"gitId":"-"},"content":"     * Returns an unmodifiable view of the list of {@code Person} backed by the internal list of","lastModifiedDate":"2018-01-10"},{"lineNumber":189,"author":{"gitId":"-"},"content":"     * {@code versionedAddressBook}","lastModifiedDate":"2018-06-11"},{"lineNumber":190,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-19"},{"lineNumber":191,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":192,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":193,"author":{"gitId":"-"},"content":"        return filteredPersons;","lastModifiedDate":"2018-12-09"},{"lineNumber":194,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":195,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":196,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-25"},{"lineNumber":197,"author":{"gitId":"-"},"content":"    public void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate) {","lastModifiedDate":"2018-01-10"},{"lineNumber":198,"author":{"gitId":"-"},"content":"        requireNonNull(predicate);","lastModifiedDate":"2017-08-05"},{"lineNumber":199,"author":{"gitId":"-"},"content":"        filteredPersons.setPredicate(predicate);","lastModifiedDate":"2017-06-12"},{"lineNumber":200,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":201,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":202,"author":{"gitId":"eltonyeh"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Filtered Task List Accessors \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2021-10-08"},{"lineNumber":203,"author":{"gitId":"eltonyeh"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":204,"author":{"gitId":"eltonyeh"},"content":"    /**","lastModifiedDate":"2021-10-08"},{"lineNumber":205,"author":{"gitId":"eltonyeh"},"content":"     * Returns an unmodifiable view of the list of {@code Task} backed by the internal list of","lastModifiedDate":"2021-10-08"},{"lineNumber":206,"author":{"gitId":"eltonyeh"},"content":"     * {@code versionedAddressBook}","lastModifiedDate":"2021-10-08"},{"lineNumber":207,"author":{"gitId":"eltonyeh"},"content":"     */","lastModifiedDate":"2021-10-08"},{"lineNumber":208,"author":{"gitId":"eltonyeh"},"content":"    @Override","lastModifiedDate":"2021-10-08"},{"lineNumber":209,"author":{"gitId":"eltonyeh"},"content":"    public ObservableList\u003cTask\u003e getFilteredTaskList() {","lastModifiedDate":"2021-10-08"},{"lineNumber":210,"author":{"gitId":"eltonyeh"},"content":"        return filteredTasks;","lastModifiedDate":"2021-10-08"},{"lineNumber":211,"author":{"gitId":"eltonyeh"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":212,"author":{"gitId":"eltonyeh"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":213,"author":{"gitId":"eltonyeh"},"content":"    @Override","lastModifiedDate":"2021-10-08"},{"lineNumber":214,"author":{"gitId":"eltonyeh"},"content":"    public void updateFilteredTaskList(Predicate\u003cTask\u003e predicate) {","lastModifiedDate":"2021-10-08"},{"lineNumber":215,"author":{"gitId":"eltonyeh"},"content":"        requireNonNull(predicate);","lastModifiedDate":"2021-10-08"},{"lineNumber":216,"author":{"gitId":"eltonyeh"},"content":"        filteredTasks.setPredicate(predicate);","lastModifiedDate":"2021-10-08"},{"lineNumber":217,"author":{"gitId":"eltonyeh"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":218,"author":{"gitId":"eltonyeh"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":219,"author":{"gitId":"kvihashini"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d Filtered Group List Accessors \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2021-10-17"},{"lineNumber":220,"author":{"gitId":"kvihashini"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":221,"author":{"gitId":"kvihashini"},"content":"    /**","lastModifiedDate":"2021-10-17"},{"lineNumber":222,"author":{"gitId":"kvihashini"},"content":"     * Returns an unmodifiable view of the list of {@code Group} backed by the internal list of","lastModifiedDate":"2021-10-17"},{"lineNumber":223,"author":{"gitId":"kvihashini"},"content":"     * {@code versionedAddressBook}","lastModifiedDate":"2021-10-17"},{"lineNumber":224,"author":{"gitId":"kvihashini"},"content":"     */","lastModifiedDate":"2021-10-17"},{"lineNumber":225,"author":{"gitId":"kvihashini"},"content":"    @Override","lastModifiedDate":"2021-10-17"},{"lineNumber":226,"author":{"gitId":"kvihashini"},"content":"    public ObservableList\u003cGroup\u003e getFilteredGroupList() {","lastModifiedDate":"2021-10-17"},{"lineNumber":227,"author":{"gitId":"kvihashini"},"content":"        return filteredGroups;","lastModifiedDate":"2021-10-17"},{"lineNumber":228,"author":{"gitId":"kvihashini"},"content":"    }","lastModifiedDate":"2021-10-17"},{"lineNumber":229,"author":{"gitId":"kvihashini"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":230,"author":{"gitId":"kvihashini"},"content":"    @Override","lastModifiedDate":"2021-10-17"},{"lineNumber":231,"author":{"gitId":"kvihashini"},"content":"    public void updateFilteredGroupList(Predicate\u003cGroup\u003e predicate) {","lastModifiedDate":"2021-10-17"},{"lineNumber":232,"author":{"gitId":"kvihashini"},"content":"        requireNonNull(predicate);","lastModifiedDate":"2021-10-17"},{"lineNumber":233,"author":{"gitId":"kvihashini"},"content":"        filteredGroups.setPredicate(predicate);","lastModifiedDate":"2021-10-17"},{"lineNumber":234,"author":{"gitId":"kvihashini"},"content":"    }","lastModifiedDate":"2021-10-17"},{"lineNumber":235,"author":{"gitId":"kvihashini"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":236,"author":{"gitId":"tanhuakun"},"content":"    //\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d mapper accessors \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d","lastModifiedDate":"2021-10-24"},{"lineNumber":237,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":238,"author":{"gitId":"tanhuakun"},"content":"    @Override","lastModifiedDate":"2021-10-24"},{"lineNumber":239,"author":{"gitId":"tanhuakun"},"content":"    public UniqueIdMapper\u003cPerson\u003e getPersonMapper() {","lastModifiedDate":"2021-10-24"},{"lineNumber":240,"author":{"gitId":"tanhuakun"},"content":"        return addressBook.getPersonMapper();","lastModifiedDate":"2021-10-24"},{"lineNumber":241,"author":{"gitId":"tanhuakun"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":242,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":243,"author":{"gitId":"tanhuakun"},"content":"    @Override","lastModifiedDate":"2021-10-24"},{"lineNumber":244,"author":{"gitId":"tanhuakun"},"content":"    public UniqueIdMapper\u003cGroup\u003e getGroupMapper() {","lastModifiedDate":"2021-10-24"},{"lineNumber":245,"author":{"gitId":"tanhuakun"},"content":"        return addressBook.getGroupMapper();","lastModifiedDate":"2021-10-24"},{"lineNumber":246,"author":{"gitId":"tanhuakun"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":247,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":248,"author":{"gitId":"tanhuakun"},"content":"    @Override","lastModifiedDate":"2021-10-20"},{"lineNumber":249,"author":{"gitId":"tanhuakun"},"content":"    public ObservableList\u003cLessonWithAttendees\u003e getSortedLessonsWithAttendees() {","lastModifiedDate":"2021-10-25"},{"lineNumber":250,"author":{"gitId":"tanhuakun"},"content":"        return lessonWithAttendees;","lastModifiedDate":"2021-10-25"},{"lineNumber":251,"author":{"gitId":"tanhuakun"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":252,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":253,"author":{"gitId":"tanhuakun"},"content":"    @Override","lastModifiedDate":"2021-10-25"},{"lineNumber":254,"author":{"gitId":"tanhuakun"},"content":"    public void updateLessonWithAttendeesList() {","lastModifiedDate":"2021-10-25"},{"lineNumber":255,"author":{"gitId":"tanhuakun"},"content":"        lessonWithAttendees.setAll(addressBook.getSortedLessonsWithAttendees());","lastModifiedDate":"2021-10-25"},{"lineNumber":256,"author":{"gitId":"tanhuakun"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":257,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":258,"author":{"gitId":"tanhuakun"},"content":"    @Override","lastModifiedDate":"2021-10-25"},{"lineNumber":259,"author":{"gitId":"tanhuakun"},"content":"    public ObservableValue\u003cViewingType\u003e getViewingType() {","lastModifiedDate":"2021-10-25"},{"lineNumber":260,"author":{"gitId":"tanhuakun"},"content":"        return viewType;","lastModifiedDate":"2021-10-25"},{"lineNumber":261,"author":{"gitId":"tanhuakun"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":262,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":263,"author":{"gitId":"tanhuakun"},"content":"    @Override","lastModifiedDate":"2021-10-25"},{"lineNumber":264,"author":{"gitId":"tanhuakun"},"content":"    public void setViewingType(ViewingType type) {","lastModifiedDate":"2021-10-25"},{"lineNumber":265,"author":{"gitId":"tanhuakun"},"content":"        viewType.set(type);","lastModifiedDate":"2021-10-25"},{"lineNumber":266,"author":{"gitId":"tanhuakun"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":267,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":268,"author":{"gitId":"tanhuakun"},"content":"    @Override","lastModifiedDate":"2021-10-25"},{"lineNumber":269,"author":{"gitId":"tanhuakun"},"content":"    public ObservableValue\u003cPersonWithDetails\u003e getViewingPersonWithDetails() {","lastModifiedDate":"2021-10-25"},{"lineNumber":270,"author":{"gitId":"tanhuakun"},"content":"        return personWithDetails;","lastModifiedDate":"2021-10-25"},{"lineNumber":271,"author":{"gitId":"tanhuakun"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":272,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":273,"author":{"gitId":"kvihashini"},"content":"    @Override","lastModifiedDate":"2021-10-25"},{"lineNumber":274,"author":{"gitId":"kvihashini"},"content":"    public ObservableValue\u003cGroupWithDetails\u003e getViewingGroupWithDetails() {","lastModifiedDate":"2021-10-25"},{"lineNumber":275,"author":{"gitId":"kvihashini"},"content":"        return groupWithDetails;","lastModifiedDate":"2021-10-25"},{"lineNumber":276,"author":{"gitId":"kvihashini"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":277,"author":{"gitId":"kvihashini"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":278,"author":{"gitId":"tanhuakun"},"content":"    @Override","lastModifiedDate":"2021-10-25"},{"lineNumber":279,"author":{"gitId":"tanhuakun"},"content":"    public void setPersonToView(Person person) {","lastModifiedDate":"2021-10-25"},{"lineNumber":280,"author":{"gitId":"tanhuakun"},"content":"        personWithDetails.set(addressBook.getPersonWithDetails(person));","lastModifiedDate":"2021-10-25"},{"lineNumber":281,"author":{"gitId":"tanhuakun"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":282,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":283,"author":{"gitId":"kvihashini"},"content":"    @Override","lastModifiedDate":"2021-10-25"},{"lineNumber":284,"author":{"gitId":"kvihashini"},"content":"    public void setGroupToView(Group group) {","lastModifiedDate":"2021-10-25"},{"lineNumber":285,"author":{"gitId":"kvihashini"},"content":"        groupWithDetails.set(addressBook.getGroupWithDetails(group));","lastModifiedDate":"2021-10-25"},{"lineNumber":286,"author":{"gitId":"kvihashini"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":287,"author":{"gitId":"kvihashini"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":288,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2017-05-31"},{"lineNumber":289,"author":{"gitId":"-"},"content":"    public boolean equals(Object obj) {","lastModifiedDate":"2017-05-31"},{"lineNumber":290,"author":{"gitId":"-"},"content":"        // short circuit if same object","lastModifiedDate":"2017-05-31"},{"lineNumber":291,"author":{"gitId":"-"},"content":"        if (obj \u003d\u003d this) {","lastModifiedDate":"2017-05-31"},{"lineNumber":292,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2017-05-31"},{"lineNumber":293,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-31"},{"lineNumber":294,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":295,"author":{"gitId":"-"},"content":"        // instanceof handles nulls","lastModifiedDate":"2017-05-31"},{"lineNumber":296,"author":{"gitId":"-"},"content":"        if (!(obj instanceof ModelManager)) {","lastModifiedDate":"2017-05-31"},{"lineNumber":297,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2017-05-31"},{"lineNumber":298,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-05-31"},{"lineNumber":299,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":300,"author":{"gitId":"-"},"content":"        // state check","lastModifiedDate":"2017-05-31"},{"lineNumber":301,"author":{"gitId":"-"},"content":"        ModelManager other \u003d (ModelManager) obj;","lastModifiedDate":"2017-05-31"},{"lineNumber":302,"author":{"gitId":"-"},"content":"        return addressBook.equals(other.addressBook)","lastModifiedDate":"2019-01-25"},{"lineNumber":303,"author":{"gitId":"-"},"content":"                \u0026\u0026 userPrefs.equals(other.userPrefs)","lastModifiedDate":"2018-11-27"},{"lineNumber":304,"author":{"gitId":"eltonyeh"},"content":"                \u0026\u0026 filteredPersons.equals(other.filteredPersons)","lastModifiedDate":"2021-10-08"},{"lineNumber":305,"author":{"gitId":"eltonyeh"},"content":"                \u0026\u0026 filteredTasks.equals(other.filteredTasks);","lastModifiedDate":"2021-10-08"},{"lineNumber":306,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31"},{"lineNumber":307,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":308,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"kvihashini":57,"tanhuakun":55,"eltonyeh":46,"-":150}},{"path":"src/main/java/seedu/address/model/ReadOnlyAddressBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"tanhuakun"},"content":"import java.util.List;","lastModifiedDate":"2021-10-16"},{"lineNumber":4,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"kvihashini"},"content":"import seedu.address.model.group.Group;","lastModifiedDate":"2021-10-18"},{"lineNumber":7,"author":{"gitId":"tanhuakun"},"content":"import seedu.address.model.lesson.LessonWithAttendees;","lastModifiedDate":"2021-10-20"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":9,"author":{"gitId":"eltonyeh"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2021-10-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":" * Unmodifiable view of an address book","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"public interface ReadOnlyAddressBook {","lastModifiedDate":"2019-01-25"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"     * Returns an unmodifiable view of the persons list.","lastModifiedDate":"2016-12-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * This list will not contain any duplicate persons.","lastModifiedDate":"2016-12-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    ObservableList\u003cPerson\u003e getPersonList();","lastModifiedDate":"2018-01-10"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"eltonyeh"},"content":"    /**","lastModifiedDate":"2021-10-08"},{"lineNumber":23,"author":{"gitId":"eltonyeh"},"content":"     * Returns an unmodifiable view of the tasks list.","lastModifiedDate":"2021-10-08"},{"lineNumber":24,"author":{"gitId":"eltonyeh"},"content":"     * This list will not contain any duplicate tasks.","lastModifiedDate":"2021-10-08"},{"lineNumber":25,"author":{"gitId":"eltonyeh"},"content":"     */","lastModifiedDate":"2021-10-08"},{"lineNumber":26,"author":{"gitId":"eltonyeh"},"content":"    ObservableList\u003cTask\u003e getTaskList();","lastModifiedDate":"2021-10-08"},{"lineNumber":27,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":28,"author":{"gitId":"kvihashini"},"content":"    /**","lastModifiedDate":"2021-10-17"},{"lineNumber":29,"author":{"gitId":"kvihashini"},"content":"     * Returns an unmodifiable view of the groups list.","lastModifiedDate":"2021-10-17"},{"lineNumber":30,"author":{"gitId":"kvihashini"},"content":"     * This list will not contain any duplicate groups.","lastModifiedDate":"2021-10-17"},{"lineNumber":31,"author":{"gitId":"kvihashini"},"content":"     */","lastModifiedDate":"2021-10-17"},{"lineNumber":32,"author":{"gitId":"kvihashini"},"content":"    ObservableList\u003cGroup\u003e getGroupList();","lastModifiedDate":"2021-10-17"},{"lineNumber":33,"author":{"gitId":"kvihashini"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":34,"author":{"gitId":"tanhuakun"},"content":"    /**","lastModifiedDate":"2021-10-16"},{"lineNumber":35,"author":{"gitId":"tanhuakun"},"content":"     * Returns a list of all lessons in a sorted manner","lastModifiedDate":"2021-10-16"},{"lineNumber":36,"author":{"gitId":"tanhuakun"},"content":"     * The attendee details are attached","lastModifiedDate":"2021-10-20"},{"lineNumber":37,"author":{"gitId":"tanhuakun"},"content":"     */","lastModifiedDate":"2021-10-16"},{"lineNumber":38,"author":{"gitId":"tanhuakun"},"content":"    List\u003cLessonWithAttendees\u003e getSortedLessonsWithAttendees();","lastModifiedDate":"2021-10-20"},{"lineNumber":39,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"kvihashini":7,"tanhuakun":9,"eltonyeh":6,"-":17}},{"path":"src/main/java/seedu/address/model/TaskAssignable.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"eltonyeh"},"content":"package seedu.address.model;","lastModifiedDate":"2021-10-20"},{"lineNumber":2,"author":{"gitId":"eltonyeh"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":3,"author":{"gitId":"jeremy-7007"},"content":"import java.util.Map;","lastModifiedDate":"2021-10-26"},{"lineNumber":4,"author":{"gitId":"eltonyeh"},"content":"import java.util.Set;","lastModifiedDate":"2021-10-20"},{"lineNumber":5,"author":{"gitId":"eltonyeh"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":6,"author":{"gitId":"eltonyeh"},"content":"import seedu.address.model.id.UniqueId;","lastModifiedDate":"2021-10-20"},{"lineNumber":7,"author":{"gitId":"eltonyeh"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":8,"author":{"gitId":"eltonyeh"},"content":"public interface TaskAssignable {","lastModifiedDate":"2021-10-20"},{"lineNumber":9,"author":{"gitId":"eltonyeh"},"content":"    /**","lastModifiedDate":"2021-10-20"},{"lineNumber":10,"author":{"gitId":"eltonyeh"},"content":"     * Returns an immutable tag set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2021-10-20"},{"lineNumber":11,"author":{"gitId":"eltonyeh"},"content":"     * if modification is attempted.","lastModifiedDate":"2021-10-20"},{"lineNumber":12,"author":{"gitId":"eltonyeh"},"content":"     */","lastModifiedDate":"2021-10-20"},{"lineNumber":13,"author":{"gitId":"eltonyeh"},"content":"    Set\u003cUniqueId\u003e getAssignedTaskIds();","lastModifiedDate":"2021-10-20"},{"lineNumber":14,"author":{"gitId":"eltonyeh"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":15,"author":{"gitId":"jeremy-7007"},"content":"    /**","lastModifiedDate":"2021-10-26"},{"lineNumber":16,"author":{"gitId":"jeremy-7007"},"content":"     * Returns a map of a task id to that task\u0027s completion","lastModifiedDate":"2021-10-26"},{"lineNumber":17,"author":{"gitId":"jeremy-7007"},"content":"     * Does nothing if the TaskAssignable does not support task completion","lastModifiedDate":"2021-10-26"},{"lineNumber":18,"author":{"gitId":"jeremy-7007"},"content":"     */","lastModifiedDate":"2021-10-26"},{"lineNumber":19,"author":{"gitId":"jeremy-7007"},"content":"    Map\u003cUniqueId, Boolean\u003e getTasksCompletion();","lastModifiedDate":"2021-10-26"},{"lineNumber":20,"author":{"gitId":"jeremy-7007"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":21,"author":{"gitId":"eltonyeh"},"content":"    /**","lastModifiedDate":"2021-10-26"},{"lineNumber":22,"author":{"gitId":"eltonyeh"},"content":"     * Gets the name in type {@code String}.","lastModifiedDate":"2021-10-26"},{"lineNumber":23,"author":{"gitId":"eltonyeh"},"content":"     *","lastModifiedDate":"2021-10-26"},{"lineNumber":24,"author":{"gitId":"eltonyeh"},"content":"     * @return The name in string.","lastModifiedDate":"2021-10-26"},{"lineNumber":25,"author":{"gitId":"eltonyeh"},"content":"     */","lastModifiedDate":"2021-10-26"},{"lineNumber":26,"author":{"gitId":"eltonyeh"},"content":"    String getNameInString();","lastModifiedDate":"2021-10-26"},{"lineNumber":27,"author":{"gitId":"eltonyeh"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":28,"author":{"gitId":"eltonyeh"},"content":"    /**","lastModifiedDate":"2021-10-20"},{"lineNumber":29,"author":{"gitId":"eltonyeh"},"content":"     * Immutable way of updating the assigned task id list","lastModifiedDate":"2021-10-20"},{"lineNumber":30,"author":{"gitId":"eltonyeh"},"content":"     *","lastModifiedDate":"2021-10-20"},{"lineNumber":31,"author":{"gitId":"eltonyeh"},"content":"     * @param newAssignedTaskIds the new assigned task id list","lastModifiedDate":"2021-10-20"},{"lineNumber":32,"author":{"gitId":"eltonyeh"},"content":"     * @return new TaskAssignable instance with the updated assigned task id list","lastModifiedDate":"2021-10-20"},{"lineNumber":33,"author":{"gitId":"eltonyeh"},"content":"     */","lastModifiedDate":"2021-10-20"},{"lineNumber":34,"author":{"gitId":"eltonyeh"},"content":"    TaskAssignable updateAssignedTaskIds(Set\u003cUniqueId\u003e newAssignedTaskIds);","lastModifiedDate":"2021-10-20"},{"lineNumber":35,"author":{"gitId":"eltonyeh"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":36,"author":{"gitId":"jeremy-7007"},"content":"    /**","lastModifiedDate":"2021-10-26"},{"lineNumber":37,"author":{"gitId":"jeremy-7007"},"content":"     * Immutable way of updating the task completion map","lastModifiedDate":"2021-10-26"},{"lineNumber":38,"author":{"gitId":"jeremy-7007"},"content":"     * Does nothing if the TaskAssignable does not support task completion","lastModifiedDate":"2021-10-26"},{"lineNumber":39,"author":{"gitId":"jeremy-7007"},"content":"     *","lastModifiedDate":"2021-10-26"},{"lineNumber":40,"author":{"gitId":"jeremy-7007"},"content":"     * @param newTasksCompletion the new task completion map","lastModifiedDate":"2021-10-26"},{"lineNumber":41,"author":{"gitId":"jeremy-7007"},"content":"     * @return new TaskAssignable instance with the updated task completion map","lastModifiedDate":"2021-10-26"},{"lineNumber":42,"author":{"gitId":"jeremy-7007"},"content":"     */","lastModifiedDate":"2021-10-26"},{"lineNumber":43,"author":{"gitId":"jeremy-7007"},"content":"    TaskAssignable updateTasksCompletion(Map\u003cUniqueId, Boolean\u003e newTasksCompletion);","lastModifiedDate":"2021-10-26"},{"lineNumber":44,"author":{"gitId":"jeremy-7007"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":45,"author":{"gitId":"eltonyeh"},"content":"    /**","lastModifiedDate":"2021-10-20"},{"lineNumber":46,"author":{"gitId":"eltonyeh"},"content":"     * This defines a weaker notion of equality between two {@code TaskAssignable}s.","lastModifiedDate":"2021-10-26"},{"lineNumber":47,"author":{"gitId":"eltonyeh"},"content":"     */","lastModifiedDate":"2021-10-26"},{"lineNumber":48,"author":{"gitId":"eltonyeh"},"content":"    boolean isSameTaskAssignable(TaskAssignable otherTaskAssignable);","lastModifiedDate":"2021-10-26"},{"lineNumber":49,"author":{"gitId":"eltonyeh"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":50,"author":{"gitId":"eltonyeh"},"content":"    /**","lastModifiedDate":"2021-10-26"},{"lineNumber":51,"author":{"gitId":"eltonyeh"},"content":"     * Checks if the {@code TaskAssignable} is already in the given model.","lastModifiedDate":"2021-10-26"},{"lineNumber":52,"author":{"gitId":"eltonyeh"},"content":"     *","lastModifiedDate":"2021-10-20"},{"lineNumber":53,"author":{"gitId":"eltonyeh"},"content":"     * @param model The model to be checked.","lastModifiedDate":"2021-10-26"},{"lineNumber":54,"author":{"gitId":"eltonyeh"},"content":"     * @return true if the instance is in the model; false otherwise.","lastModifiedDate":"2021-10-26"},{"lineNumber":55,"author":{"gitId":"eltonyeh"},"content":"     */","lastModifiedDate":"2021-10-20"},{"lineNumber":56,"author":{"gitId":"eltonyeh"},"content":"    boolean isInModel(Model model);","lastModifiedDate":"2021-10-26"},{"lineNumber":57,"author":{"gitId":"eltonyeh"},"content":"}","lastModifiedDate":"2021-10-20"}],"authorContributionMap":{"jeremy-7007":16,"eltonyeh":41}},{"path":"src/main/java/seedu/address/model/ViewingType.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tanhuakun"},"content":"package seedu.address.model;","lastModifiedDate":"2021-10-25"},{"lineNumber":2,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":3,"author":{"gitId":"tanhuakun"},"content":"public enum ViewingType {","lastModifiedDate":"2021-10-25"},{"lineNumber":4,"author":{"gitId":"kvihashini"},"content":"    SCHEDULE, PERSON, GROUP","lastModifiedDate":"2021-10-25"},{"lineNumber":5,"author":{"gitId":"tanhuakun"},"content":"}","lastModifiedDate":"2021-10-25"}],"authorContributionMap":{"kvihashini":1,"tanhuakun":4}},{"path":"src/main/java/seedu/address/model/group/Group.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kvihashini"},"content":"package seedu.address.model.group;","lastModifiedDate":"2021-10-08"},{"lineNumber":2,"author":{"gitId":"kvihashini"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":3,"author":{"gitId":"eltonyeh"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-20"},{"lineNumber":4,"author":{"gitId":"kvihashini"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2021-10-08"},{"lineNumber":5,"author":{"gitId":"kvihashini"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":6,"author":{"gitId":"eltonyeh"},"content":"import java.util.Collections;","lastModifiedDate":"2021-10-20"},{"lineNumber":7,"author":{"gitId":"jeremy-7007"},"content":"import java.util.HashMap;","lastModifiedDate":"2021-10-26"},{"lineNumber":8,"author":{"gitId":"eltonyeh"},"content":"import java.util.HashSet;","lastModifiedDate":"2021-10-20"},{"lineNumber":9,"author":{"gitId":"eltonyeh"},"content":"import java.util.List;","lastModifiedDate":"2021-10-20"},{"lineNumber":10,"author":{"gitId":"jeremy-7007"},"content":"import java.util.Map;","lastModifiedDate":"2021-10-26"},{"lineNumber":11,"author":{"gitId":"kvihashini"},"content":"import java.util.Objects;","lastModifiedDate":"2021-10-08"},{"lineNumber":12,"author":{"gitId":"eltonyeh"},"content":"import java.util.Set;","lastModifiedDate":"2021-10-20"},{"lineNumber":13,"author":{"gitId":"kvihashini"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":14,"author":{"gitId":"eltonyeh"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-10-20"},{"lineNumber":15,"author":{"gitId":"eltonyeh"},"content":"import seedu.address.model.TaskAssignable;","lastModifiedDate":"2021-10-20"},{"lineNumber":16,"author":{"gitId":"kvihashini"},"content":"import seedu.address.model.id.HasUniqueId;","lastModifiedDate":"2021-10-18"},{"lineNumber":17,"author":{"gitId":"kvihashini"},"content":"import seedu.address.model.id.UniqueId;","lastModifiedDate":"2021-10-18"},{"lineNumber":18,"author":{"gitId":"tanhuakun"},"content":"import seedu.address.model.id.exceptions.DuplicateIdException;","lastModifiedDate":"2021-10-23"},{"lineNumber":19,"author":{"gitId":"tanhuakun"},"content":"import seedu.address.model.id.exceptions.IdNotFoundException;","lastModifiedDate":"2021-10-23"},{"lineNumber":20,"author":{"gitId":"tanhuakun"},"content":"import seedu.address.model.lesson.Lesson;","lastModifiedDate":"2021-10-24"},{"lineNumber":21,"author":{"gitId":"tanhuakun"},"content":"import seedu.address.model.lesson.LessonAssignable;","lastModifiedDate":"2021-10-24"},{"lineNumber":22,"author":{"gitId":"tanhuakun"},"content":"import seedu.address.model.lesson.NoOverlapLessonList;","lastModifiedDate":"2021-10-24"},{"lineNumber":23,"author":{"gitId":"tanhuakun"},"content":"import seedu.address.model.lesson.exceptions.CannotAssignException;","lastModifiedDate":"2021-10-24"},{"lineNumber":24,"author":{"gitId":"tanhuakun"},"content":"import seedu.address.model.lesson.exceptions.OverlappingLessonsException;","lastModifiedDate":"2021-10-24"},{"lineNumber":25,"author":{"gitId":"kvihashini"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":26,"author":{"gitId":"kvihashini"},"content":"/**","lastModifiedDate":"2021-10-08"},{"lineNumber":27,"author":{"gitId":"kvihashini"},"content":" * Represents a Group in the address book.","lastModifiedDate":"2021-10-08"},{"lineNumber":28,"author":{"gitId":"kvihashini"},"content":" * Guarantees: details are present and not null, field values are validated, immutable.","lastModifiedDate":"2021-10-08"},{"lineNumber":29,"author":{"gitId":"kvihashini"},"content":" */","lastModifiedDate":"2021-10-08"},{"lineNumber":30,"author":{"gitId":"tanhuakun"},"content":"public class Group implements HasUniqueId, TaskAssignable, LessonAssignable {","lastModifiedDate":"2021-10-24"},{"lineNumber":31,"author":{"gitId":"kvihashini"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":32,"author":{"gitId":"kvihashini"},"content":"    // Identity fields","lastModifiedDate":"2021-10-08"},{"lineNumber":33,"author":{"gitId":"kvihashini"},"content":"    private final GroupName name;","lastModifiedDate":"2021-10-08"},{"lineNumber":34,"author":{"gitId":"kvihashini"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":35,"author":{"gitId":"kvihashini"},"content":"    // The id of the task","lastModifiedDate":"2021-10-18"},{"lineNumber":36,"author":{"gitId":"kvihashini"},"content":"    private final UniqueId id;","lastModifiedDate":"2021-10-18"},{"lineNumber":37,"author":{"gitId":"kvihashini"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":38,"author":{"gitId":"eltonyeh"},"content":"    // The id of tasks assigned to the group","lastModifiedDate":"2021-10-20"},{"lineNumber":39,"author":{"gitId":"eltonyeh"},"content":"    private final Set\u003cUniqueId\u003e assignedTaskIds \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2021-10-20"},{"lineNumber":40,"author":{"gitId":"eltonyeh"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":41,"author":{"gitId":"tanhuakun"},"content":"    // the id of persons assigned to this group.","lastModifiedDate":"2021-10-23"},{"lineNumber":42,"author":{"gitId":"tanhuakun"},"content":"    private final Set\u003cUniqueId\u003e assignedPersonIds \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2021-10-23"},{"lineNumber":43,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":44,"author":{"gitId":"tanhuakun"},"content":"    // lessons belonging to this group.","lastModifiedDate":"2021-10-24"},{"lineNumber":45,"author":{"gitId":"tanhuakun"},"content":"    private final NoOverlapLessonList lessonList;","lastModifiedDate":"2021-10-24"},{"lineNumber":46,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":47,"author":{"gitId":"kvihashini"},"content":"    /**","lastModifiedDate":"2021-10-08"},{"lineNumber":48,"author":{"gitId":"kvihashini"},"content":"     * Every field must be present and not null.","lastModifiedDate":"2021-10-08"},{"lineNumber":49,"author":{"gitId":"kvihashini"},"content":"     */","lastModifiedDate":"2021-10-08"},{"lineNumber":50,"author":{"gitId":"kvihashini"},"content":"    public Group(GroupName name) {","lastModifiedDate":"2021-10-08"},{"lineNumber":51,"author":{"gitId":"kvihashini"},"content":"        this.id \u003d UniqueId.generateId(this);","lastModifiedDate":"2021-10-18"},{"lineNumber":52,"author":{"gitId":"kvihashini"},"content":"        requireAllNonNull(name);","lastModifiedDate":"2021-10-08"},{"lineNumber":53,"author":{"gitId":"kvihashini"},"content":"        this.name \u003d name;","lastModifiedDate":"2021-10-08"},{"lineNumber":54,"author":{"gitId":"tanhuakun"},"content":"        this.lessonList \u003d new NoOverlapLessonList();","lastModifiedDate":"2021-10-24"},{"lineNumber":55,"author":{"gitId":"kvihashini"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":56,"author":{"gitId":"kvihashini"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":57,"author":{"gitId":"kvihashini"},"content":"    /**","lastModifiedDate":"2021-10-18"},{"lineNumber":58,"author":{"gitId":"kvihashini"},"content":"     * Every field must be present and not null.","lastModifiedDate":"2021-10-18"},{"lineNumber":59,"author":{"gitId":"kvihashini"},"content":"     */","lastModifiedDate":"2021-10-18"},{"lineNumber":60,"author":{"gitId":"kvihashini"},"content":"    public Group(GroupName name, UniqueId id) {","lastModifiedDate":"2021-10-18"},{"lineNumber":61,"author":{"gitId":"kvihashini"},"content":"        requireAllNonNull(name, id);","lastModifiedDate":"2021-10-18"},{"lineNumber":62,"author":{"gitId":"eltonyeh"},"content":"        this.id \u003d id;","lastModifiedDate":"2021-10-20"},{"lineNumber":63,"author":{"gitId":"eltonyeh"},"content":"        this.name \u003d name;","lastModifiedDate":"2021-10-20"},{"lineNumber":64,"author":{"gitId":"eltonyeh"},"content":"        id.setOwner(this);","lastModifiedDate":"2021-10-20"},{"lineNumber":65,"author":{"gitId":"tanhuakun"},"content":"        this.lessonList \u003d new NoOverlapLessonList();","lastModifiedDate":"2021-10-24"},{"lineNumber":66,"author":{"gitId":"eltonyeh"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":67,"author":{"gitId":"eltonyeh"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":68,"author":{"gitId":"eltonyeh"},"content":"    /**","lastModifiedDate":"2021-10-20"},{"lineNumber":69,"author":{"gitId":"eltonyeh"},"content":"     * Every field must be present and not null.","lastModifiedDate":"2021-10-20"},{"lineNumber":70,"author":{"gitId":"eltonyeh"},"content":"     */","lastModifiedDate":"2021-10-20"},{"lineNumber":71,"author":{"gitId":"tanhuakun"},"content":"    public Group(GroupName name, UniqueId id, Set\u003cUniqueId\u003e assignedTaskIds, Set\u003cUniqueId\u003e assignedPersonIds,","lastModifiedDate":"2021-10-24"},{"lineNumber":72,"author":{"gitId":"tanhuakun"},"content":"                 NoOverlapLessonList lessonList) {","lastModifiedDate":"2021-10-24"},{"lineNumber":73,"author":{"gitId":"tanhuakun"},"content":"        requireAllNonNull(name, id, assignedTaskIds, assignedPersonIds);","lastModifiedDate":"2021-10-23"},{"lineNumber":74,"author":{"gitId":"eltonyeh"},"content":"        this.id \u003d id;","lastModifiedDate":"2021-10-20"},{"lineNumber":75,"author":{"gitId":"kvihashini"},"content":"        this.name \u003d name;","lastModifiedDate":"2021-10-18"},{"lineNumber":76,"author":{"gitId":"eltonyeh"},"content":"        this.assignedTaskIds.addAll(assignedTaskIds);","lastModifiedDate":"2021-10-20"},{"lineNumber":77,"author":{"gitId":"tanhuakun"},"content":"        this.assignedPersonIds.addAll(assignedPersonIds);","lastModifiedDate":"2021-10-23"},{"lineNumber":78,"author":{"gitId":"tanhuakun"},"content":"        this.lessonList \u003d lessonList;","lastModifiedDate":"2021-10-24"},{"lineNumber":79,"author":{"gitId":"kvihashini"},"content":"        id.setOwner(this);","lastModifiedDate":"2021-10-18"},{"lineNumber":80,"author":{"gitId":"kvihashini"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":81,"author":{"gitId":"kvihashini"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":82,"author":{"gitId":"tanhuakun"},"content":"    /**","lastModifiedDate":"2021-10-23"},{"lineNumber":83,"author":{"gitId":"tanhuakun"},"content":"     * Constructs a group by copying details from the given group","lastModifiedDate":"2021-10-23"},{"lineNumber":84,"author":{"gitId":"eltonyeh"},"content":"     *","lastModifiedDate":"2021-10-26"},{"lineNumber":85,"author":{"gitId":"tanhuakun"},"content":"     * @param toCopy to copy","lastModifiedDate":"2021-10-23"},{"lineNumber":86,"author":{"gitId":"tanhuakun"},"content":"     */","lastModifiedDate":"2021-10-23"},{"lineNumber":87,"author":{"gitId":"tanhuakun"},"content":"    public Group(Group toCopy) {","lastModifiedDate":"2021-10-23"},{"lineNumber":88,"author":{"gitId":"tanhuakun"},"content":"        this.id \u003d toCopy.id;","lastModifiedDate":"2021-10-23"},{"lineNumber":89,"author":{"gitId":"tanhuakun"},"content":"        this.name \u003d toCopy.name;","lastModifiedDate":"2021-10-23"},{"lineNumber":90,"author":{"gitId":"tanhuakun"},"content":"        this.assignedTaskIds.addAll(toCopy.assignedTaskIds);","lastModifiedDate":"2021-10-23"},{"lineNumber":91,"author":{"gitId":"tanhuakun"},"content":"        this.assignedPersonIds.addAll(toCopy.assignedPersonIds);","lastModifiedDate":"2021-10-23"},{"lineNumber":92,"author":{"gitId":"tanhuakun"},"content":"        this.lessonList \u003d toCopy.lessonList;","lastModifiedDate":"2021-10-24"},{"lineNumber":93,"author":{"gitId":"eltonyeh"},"content":"        id.setOwner(this);","lastModifiedDate":"2021-10-26"},{"lineNumber":94,"author":{"gitId":"tanhuakun"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":95,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":96,"author":{"gitId":"kvihashini"},"content":"    public GroupName getName() {","lastModifiedDate":"2021-10-08"},{"lineNumber":97,"author":{"gitId":"kvihashini"},"content":"        return name;","lastModifiedDate":"2021-10-08"},{"lineNumber":98,"author":{"gitId":"kvihashini"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":99,"author":{"gitId":"kvihashini"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":100,"author":{"gitId":"kvihashini"},"content":"    public UniqueId getId() {","lastModifiedDate":"2021-10-18"},{"lineNumber":101,"author":{"gitId":"kvihashini"},"content":"        return id;","lastModifiedDate":"2021-10-18"},{"lineNumber":102,"author":{"gitId":"kvihashini"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":103,"author":{"gitId":"kvihashini"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":104,"author":{"gitId":"tanhuakun"},"content":"    public Set\u003cUniqueId\u003e getAssignedPersonIds() {","lastModifiedDate":"2021-10-23"},{"lineNumber":105,"author":{"gitId":"tanhuakun"},"content":"        return Collections.unmodifiableSet(assignedPersonIds);","lastModifiedDate":"2021-10-23"},{"lineNumber":106,"author":{"gitId":"tanhuakun"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":107,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":108,"author":{"gitId":"tanhuakun"},"content":"    /**","lastModifiedDate":"2021-10-23"},{"lineNumber":109,"author":{"gitId":"tanhuakun"},"content":"     * Checks if this group contains the person id.","lastModifiedDate":"2021-10-23"},{"lineNumber":110,"author":{"gitId":"tanhuakun"},"content":"     *","lastModifiedDate":"2021-10-23"},{"lineNumber":111,"author":{"gitId":"tanhuakun"},"content":"     * @param id to check.","lastModifiedDate":"2021-10-23"},{"lineNumber":112,"author":{"gitId":"tanhuakun"},"content":"     * @return true if this group contains the id.","lastModifiedDate":"2021-10-23"},{"lineNumber":113,"author":{"gitId":"tanhuakun"},"content":"     */","lastModifiedDate":"2021-10-23"},{"lineNumber":114,"author":{"gitId":"tanhuakun"},"content":"    public boolean containsPersonId(UniqueId id) {","lastModifiedDate":"2021-10-23"},{"lineNumber":115,"author":{"gitId":"tanhuakun"},"content":"        return assignedPersonIds.contains(id);","lastModifiedDate":"2021-10-23"},{"lineNumber":116,"author":{"gitId":"tanhuakun"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":117,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":118,"author":{"gitId":"tanhuakun"},"content":"    /**","lastModifiedDate":"2021-10-23"},{"lineNumber":119,"author":{"gitId":"tanhuakun"},"content":"     * Adds an id to the set of unique Ids, the id is presumed to belong to a person.","lastModifiedDate":"2021-10-23"},{"lineNumber":120,"author":{"gitId":"tanhuakun"},"content":"     *","lastModifiedDate":"2021-10-23"},{"lineNumber":121,"author":{"gitId":"tanhuakun"},"content":"     * @param id to add","lastModifiedDate":"2021-10-23"},{"lineNumber":122,"author":{"gitId":"tanhuakun"},"content":"     * @return new Group with added person id","lastModifiedDate":"2021-10-23"},{"lineNumber":123,"author":{"gitId":"tanhuakun"},"content":"     * @throws DuplicateIdException if the id was previously added","lastModifiedDate":"2021-10-23"},{"lineNumber":124,"author":{"gitId":"tanhuakun"},"content":"     */","lastModifiedDate":"2021-10-23"},{"lineNumber":125,"author":{"gitId":"tanhuakun"},"content":"    public Group addPersonId(UniqueId id) {","lastModifiedDate":"2021-10-23"},{"lineNumber":126,"author":{"gitId":"tanhuakun"},"content":"        if (assignedPersonIds.contains(id)) {","lastModifiedDate":"2021-10-23"},{"lineNumber":127,"author":{"gitId":"tanhuakun"},"content":"            throw new DuplicateIdException();","lastModifiedDate":"2021-10-23"},{"lineNumber":128,"author":{"gitId":"tanhuakun"},"content":"        }","lastModifiedDate":"2021-10-23"},{"lineNumber":129,"author":{"gitId":"tanhuakun"},"content":"        Group newGroup \u003d new Group(this);","lastModifiedDate":"2021-10-23"},{"lineNumber":130,"author":{"gitId":"tanhuakun"},"content":"        newGroup.assignedPersonIds.add(id);","lastModifiedDate":"2021-10-23"},{"lineNumber":131,"author":{"gitId":"tanhuakun"},"content":"        return newGroup;","lastModifiedDate":"2021-10-23"},{"lineNumber":132,"author":{"gitId":"tanhuakun"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":133,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":134,"author":{"gitId":"tanhuakun"},"content":"    /**","lastModifiedDate":"2021-10-23"},{"lineNumber":135,"author":{"gitId":"tanhuakun"},"content":"     * Removes an id from the set of unique Ids.","lastModifiedDate":"2021-10-23"},{"lineNumber":136,"author":{"gitId":"tanhuakun"},"content":"     *","lastModifiedDate":"2021-10-23"},{"lineNumber":137,"author":{"gitId":"tanhuakun"},"content":"     * @param id to remove","lastModifiedDate":"2021-10-23"},{"lineNumber":138,"author":{"gitId":"tanhuakun"},"content":"     * @return new Group with removed person id","lastModifiedDate":"2021-10-23"},{"lineNumber":139,"author":{"gitId":"tanhuakun"},"content":"     * @throws IdNotFoundException if the id is not found","lastModifiedDate":"2021-10-23"},{"lineNumber":140,"author":{"gitId":"tanhuakun"},"content":"     */","lastModifiedDate":"2021-10-23"},{"lineNumber":141,"author":{"gitId":"tanhuakun"},"content":"    public Group removePersonId(UniqueId id) {","lastModifiedDate":"2021-10-23"},{"lineNumber":142,"author":{"gitId":"tanhuakun"},"content":"        if (!assignedPersonIds.contains(id)) {","lastModifiedDate":"2021-10-23"},{"lineNumber":143,"author":{"gitId":"tanhuakun"},"content":"            throw new IdNotFoundException(id);","lastModifiedDate":"2021-10-23"},{"lineNumber":144,"author":{"gitId":"tanhuakun"},"content":"        }","lastModifiedDate":"2021-10-23"},{"lineNumber":145,"author":{"gitId":"tanhuakun"},"content":"        Group newGroup \u003d new Group(this);","lastModifiedDate":"2021-10-23"},{"lineNumber":146,"author":{"gitId":"tanhuakun"},"content":"        newGroup.assignedPersonIds.remove(id);","lastModifiedDate":"2021-10-23"},{"lineNumber":147,"author":{"gitId":"tanhuakun"},"content":"        return newGroup;","lastModifiedDate":"2021-10-23"},{"lineNumber":148,"author":{"gitId":"tanhuakun"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":149,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":150,"author":{"gitId":"eltonyeh"},"content":"    /**","lastModifiedDate":"2021-10-20"},{"lineNumber":151,"author":{"gitId":"eltonyeh"},"content":"     * Returns an immutable tag set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2021-10-20"},{"lineNumber":152,"author":{"gitId":"eltonyeh"},"content":"     * if modification is attempted.","lastModifiedDate":"2021-10-20"},{"lineNumber":153,"author":{"gitId":"eltonyeh"},"content":"     */","lastModifiedDate":"2021-10-20"},{"lineNumber":154,"author":{"gitId":"eltonyeh"},"content":"    @Override","lastModifiedDate":"2021-10-26"},{"lineNumber":155,"author":{"gitId":"eltonyeh"},"content":"    public Set\u003cUniqueId\u003e getAssignedTaskIds() {","lastModifiedDate":"2021-10-20"},{"lineNumber":156,"author":{"gitId":"eltonyeh"},"content":"        return Collections.unmodifiableSet(assignedTaskIds);","lastModifiedDate":"2021-10-20"},{"lineNumber":157,"author":{"gitId":"eltonyeh"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":158,"author":{"gitId":"eltonyeh"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":159,"author":{"gitId":"jeremy-7007"},"content":"    /**","lastModifiedDate":"2021-10-26"},{"lineNumber":160,"author":{"gitId":"jeremy-7007"},"content":"     * Returns only an empty unmodifiable map since class does not support task completion","lastModifiedDate":"2021-10-26"},{"lineNumber":161,"author":{"gitId":"jeremy-7007"},"content":"     */","lastModifiedDate":"2021-10-26"},{"lineNumber":162,"author":{"gitId":"jeremy-7007"},"content":"    @Override","lastModifiedDate":"2021-10-26"},{"lineNumber":163,"author":{"gitId":"jeremy-7007"},"content":"    public Map\u003cUniqueId, Boolean\u003e getTasksCompletion() {","lastModifiedDate":"2021-10-26"},{"lineNumber":164,"author":{"gitId":"jeremy-7007"},"content":"        return Collections.unmodifiableMap(new HashMap\u003c\u003e());","lastModifiedDate":"2021-10-26"},{"lineNumber":165,"author":{"gitId":"jeremy-7007"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":166,"author":{"gitId":"jeremy-7007"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":167,"author":{"gitId":"eltonyeh"},"content":"    /**","lastModifiedDate":"2021-10-20"},{"lineNumber":168,"author":{"gitId":"eltonyeh"},"content":"     * Immutable way of updating the assigned task id list","lastModifiedDate":"2021-10-20"},{"lineNumber":169,"author":{"gitId":"eltonyeh"},"content":"     *","lastModifiedDate":"2021-10-20"},{"lineNumber":170,"author":{"gitId":"eltonyeh"},"content":"     * @param newAssignedTaskIds the new assigned task id list","lastModifiedDate":"2021-10-20"},{"lineNumber":171,"author":{"gitId":"eltonyeh"},"content":"     * @return new Person instance with the updated assigned task id list","lastModifiedDate":"2021-10-20"},{"lineNumber":172,"author":{"gitId":"eltonyeh"},"content":"     */","lastModifiedDate":"2021-10-20"},{"lineNumber":173,"author":{"gitId":"eltonyeh"},"content":"    @Override","lastModifiedDate":"2021-10-26"},{"lineNumber":174,"author":{"gitId":"eltonyeh"},"content":"    public Group updateAssignedTaskIds(Set\u003cUniqueId\u003e newAssignedTaskIds) {","lastModifiedDate":"2021-10-20"},{"lineNumber":175,"author":{"gitId":"eltonyeh"},"content":"        requireNonNull(newAssignedTaskIds);","lastModifiedDate":"2021-10-20"},{"lineNumber":176,"author":{"gitId":"tanhuakun"},"content":"        return new Group(name, id, newAssignedTaskIds, assignedPersonIds, lessonList);","lastModifiedDate":"2021-10-24"},{"lineNumber":177,"author":{"gitId":"tanhuakun"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":178,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":179,"author":{"gitId":"jeremy-7007"},"content":"    /**","lastModifiedDate":"2021-10-26"},{"lineNumber":180,"author":{"gitId":"jeremy-7007"},"content":"     * Returns an identical copy of the Group since class does not support task completion","lastModifiedDate":"2021-10-26"},{"lineNumber":181,"author":{"gitId":"jeremy-7007"},"content":"     */","lastModifiedDate":"2021-10-26"},{"lineNumber":182,"author":{"gitId":"jeremy-7007"},"content":"    @Override","lastModifiedDate":"2021-10-26"},{"lineNumber":183,"author":{"gitId":"jeremy-7007"},"content":"    public Group updateTasksCompletion(Map\u003cUniqueId, Boolean\u003e newTasksCompletion) {","lastModifiedDate":"2021-10-26"},{"lineNumber":184,"author":{"gitId":"jeremy-7007"},"content":"        return new Group(name, id, assignedTaskIds, assignedPersonIds, lessonList);","lastModifiedDate":"2021-10-26"},{"lineNumber":185,"author":{"gitId":"jeremy-7007"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":186,"author":{"gitId":"jeremy-7007"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":187,"author":{"gitId":"tanhuakun"},"content":"    /**","lastModifiedDate":"2021-10-23"},{"lineNumber":188,"author":{"gitId":"tanhuakun"},"content":"     * Immutable way of updating the assigned person ids","lastModifiedDate":"2021-10-23"},{"lineNumber":189,"author":{"gitId":"tanhuakun"},"content":"     *","lastModifiedDate":"2021-10-23"},{"lineNumber":190,"author":{"gitId":"tanhuakun"},"content":"     * @param ids the new person ids","lastModifiedDate":"2021-10-23"},{"lineNumber":191,"author":{"gitId":"tanhuakun"},"content":"     * @return new Group instance with the updated assigned person id list","lastModifiedDate":"2021-10-23"},{"lineNumber":192,"author":{"gitId":"tanhuakun"},"content":"     */","lastModifiedDate":"2021-10-23"},{"lineNumber":193,"author":{"gitId":"tanhuakun"},"content":"    public Group updateAssignedPersonIds(Set\u003cUniqueId\u003e ids) {","lastModifiedDate":"2021-10-23"},{"lineNumber":194,"author":{"gitId":"tanhuakun"},"content":"        requireNonNull(ids);","lastModifiedDate":"2021-10-23"},{"lineNumber":195,"author":{"gitId":"tanhuakun"},"content":"        return new Group(name, id, assignedTaskIds, ids, lessonList);","lastModifiedDate":"2021-10-24"},{"lineNumber":196,"author":{"gitId":"eltonyeh"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":197,"author":{"gitId":"eltonyeh"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":198,"author":{"gitId":"eltonyeh"},"content":"    @Override","lastModifiedDate":"2021-10-26"},{"lineNumber":199,"author":{"gitId":"eltonyeh"},"content":"    public String getNameInString() {","lastModifiedDate":"2021-10-26"},{"lineNumber":200,"author":{"gitId":"eltonyeh"},"content":"        return name.toString();","lastModifiedDate":"2021-10-26"},{"lineNumber":201,"author":{"gitId":"eltonyeh"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":202,"author":{"gitId":"eltonyeh"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":203,"author":{"gitId":"eltonyeh"},"content":"    @Override","lastModifiedDate":"2021-10-26"},{"lineNumber":204,"author":{"gitId":"eltonyeh"},"content":"    public boolean isSameTaskAssignable(TaskAssignable otherTaskAssignable) {","lastModifiedDate":"2021-10-26"},{"lineNumber":205,"author":{"gitId":"eltonyeh"},"content":"        if (!(otherTaskAssignable instanceof Group)) {","lastModifiedDate":"2021-10-26"},{"lineNumber":206,"author":{"gitId":"eltonyeh"},"content":"            return false;","lastModifiedDate":"2021-10-26"},{"lineNumber":207,"author":{"gitId":"eltonyeh"},"content":"        }","lastModifiedDate":"2021-10-26"},{"lineNumber":208,"author":{"gitId":"eltonyeh"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":209,"author":{"gitId":"eltonyeh"},"content":"        return isSameGroup((Group) otherTaskAssignable);","lastModifiedDate":"2021-10-26"},{"lineNumber":210,"author":{"gitId":"eltonyeh"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":211,"author":{"gitId":"eltonyeh"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":212,"author":{"gitId":"eltonyeh"},"content":"    @Override","lastModifiedDate":"2021-10-26"},{"lineNumber":213,"author":{"gitId":"eltonyeh"},"content":"    public boolean isInModel(Model model) {","lastModifiedDate":"2021-10-26"},{"lineNumber":214,"author":{"gitId":"eltonyeh"},"content":"        return model.hasGroup(this);","lastModifiedDate":"2021-10-26"},{"lineNumber":215,"author":{"gitId":"eltonyeh"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":216,"author":{"gitId":"eltonyeh"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":217,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":218,"author":{"gitId":"tanhuakun"},"content":"    @Override","lastModifiedDate":"2021-10-24"},{"lineNumber":219,"author":{"gitId":"tanhuakun"},"content":"    public boolean canAssignLesson(Lesson lesson) {","lastModifiedDate":"2021-10-24"},{"lineNumber":220,"author":{"gitId":"tanhuakun"},"content":"        return !lessonList.doesLessonOverlap(lesson);","lastModifiedDate":"2021-10-26"},{"lineNumber":221,"author":{"gitId":"tanhuakun"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":222,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":223,"author":{"gitId":"tanhuakun"},"content":"    @Override","lastModifiedDate":"2021-10-24"},{"lineNumber":224,"author":{"gitId":"tanhuakun"},"content":"    public Group assignLesson(Lesson lesson) throws CannotAssignException {","lastModifiedDate":"2021-10-24"},{"lineNumber":225,"author":{"gitId":"tanhuakun"},"content":"        NoOverlapLessonList newList;","lastModifiedDate":"2021-10-24"},{"lineNumber":226,"author":{"gitId":"tanhuakun"},"content":"        try {","lastModifiedDate":"2021-10-24"},{"lineNumber":227,"author":{"gitId":"tanhuakun"},"content":"            newList \u003d lessonList.addLesson(lesson);","lastModifiedDate":"2021-10-24"},{"lineNumber":228,"author":{"gitId":"tanhuakun"},"content":"        } catch (OverlappingLessonsException e) {","lastModifiedDate":"2021-10-24"},{"lineNumber":229,"author":{"gitId":"tanhuakun"},"content":"            throw new CannotAssignException(e.getMessage());","lastModifiedDate":"2021-10-24"},{"lineNumber":230,"author":{"gitId":"tanhuakun"},"content":"        }","lastModifiedDate":"2021-10-24"},{"lineNumber":231,"author":{"gitId":"tanhuakun"},"content":"        return new Group(name, id, assignedTaskIds, assignedPersonIds, newList);","lastModifiedDate":"2021-10-24"},{"lineNumber":232,"author":{"gitId":"tanhuakun"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":233,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":234,"author":{"gitId":"tanhuakun"},"content":"    @Override","lastModifiedDate":"2021-10-25"},{"lineNumber":235,"author":{"gitId":"tanhuakun"},"content":"    public boolean isValidLessonIndex(int index) {","lastModifiedDate":"2021-10-25"},{"lineNumber":236,"author":{"gitId":"tanhuakun"},"content":"        return lessonList.isValidIndex(index);","lastModifiedDate":"2021-10-25"},{"lineNumber":237,"author":{"gitId":"tanhuakun"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":238,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":239,"author":{"gitId":"tanhuakun"},"content":"    @Override","lastModifiedDate":"2021-10-24"},{"lineNumber":240,"author":{"gitId":"tanhuakun"},"content":"    public Group unassignLesson(int index) throws IndexOutOfBoundsException {","lastModifiedDate":"2021-10-24"},{"lineNumber":241,"author":{"gitId":"tanhuakun"},"content":"        NoOverlapLessonList newList \u003d lessonList.removeLesson(index);","lastModifiedDate":"2021-10-24"},{"lineNumber":242,"author":{"gitId":"tanhuakun"},"content":"        return new Group(name, id, assignedTaskIds, assignedPersonIds, newList);","lastModifiedDate":"2021-10-24"},{"lineNumber":243,"author":{"gitId":"tanhuakun"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":244,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":245,"author":{"gitId":"tanhuakun"},"content":"    @Override","lastModifiedDate":"2021-10-24"},{"lineNumber":246,"author":{"gitId":"tanhuakun"},"content":"    public List\u003cLesson\u003e getLessons() {","lastModifiedDate":"2021-10-24"},{"lineNumber":247,"author":{"gitId":"tanhuakun"},"content":"        return Collections.unmodifiableList(lessonList.getLessons());","lastModifiedDate":"2021-10-24"},{"lineNumber":248,"author":{"gitId":"tanhuakun"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":249,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":250,"author":{"gitId":"tanhuakun"},"content":"    @Override","lastModifiedDate":"2021-10-24"},{"lineNumber":251,"author":{"gitId":"tanhuakun"},"content":"    public Group setLessons(List\u003cLesson\u003e lessons) throws CannotAssignException {","lastModifiedDate":"2021-10-24"},{"lineNumber":252,"author":{"gitId":"tanhuakun"},"content":"        if (NoOverlapLessonList.doAnyLessonsOverlap(lessons)) {","lastModifiedDate":"2021-10-24"},{"lineNumber":253,"author":{"gitId":"tanhuakun"},"content":"            throw new CannotAssignException(OverlappingLessonsException.MESSAGE);","lastModifiedDate":"2021-10-24"},{"lineNumber":254,"author":{"gitId":"tanhuakun"},"content":"        }","lastModifiedDate":"2021-10-24"},{"lineNumber":255,"author":{"gitId":"tanhuakun"},"content":"        NoOverlapLessonList newList \u003d NoOverlapLessonList.of(lessons);","lastModifiedDate":"2021-10-24"},{"lineNumber":256,"author":{"gitId":"tanhuakun"},"content":"        return new Group(name, id, assignedTaskIds, assignedPersonIds, newList);","lastModifiedDate":"2021-10-24"},{"lineNumber":257,"author":{"gitId":"tanhuakun"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":258,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":259,"author":{"gitId":"eltonyeh"},"content":"    /**","lastModifiedDate":"2021-11-05"},{"lineNumber":260,"author":{"gitId":"eltonyeh"},"content":"     * Returns true if both groups have the same name.","lastModifiedDate":"2021-11-05"},{"lineNumber":261,"author":{"gitId":"eltonyeh"},"content":"     * This defines a weaker notion of equality between two groups.","lastModifiedDate":"2021-11-05"},{"lineNumber":262,"author":{"gitId":"eltonyeh"},"content":"     */","lastModifiedDate":"2021-11-05"},{"lineNumber":263,"author":{"gitId":"eltonyeh"},"content":"    public boolean isSameGroup(Group otherGroup) {","lastModifiedDate":"2021-11-05"},{"lineNumber":264,"author":{"gitId":"eltonyeh"},"content":"        if (otherGroup \u003d\u003d this) {","lastModifiedDate":"2021-11-05"},{"lineNumber":265,"author":{"gitId":"eltonyeh"},"content":"            return true;","lastModifiedDate":"2021-11-05"},{"lineNumber":266,"author":{"gitId":"eltonyeh"},"content":"        }","lastModifiedDate":"2021-11-05"},{"lineNumber":267,"author":{"gitId":"eltonyeh"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":268,"author":{"gitId":"eltonyeh"},"content":"        return otherGroup !\u003d null \u0026\u0026 otherGroup.getName().equals(getName());","lastModifiedDate":"2021-11-05"},{"lineNumber":269,"author":{"gitId":"eltonyeh"},"content":"    }","lastModifiedDate":"2021-11-05"},{"lineNumber":270,"author":{"gitId":"eltonyeh"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":271,"author":{"gitId":"kvihashini"},"content":"    /**","lastModifiedDate":"2021-10-08"},{"lineNumber":272,"author":{"gitId":"kvihashini"},"content":"     * Returns true if both groups have the same identity and data fields.","lastModifiedDate":"2021-10-08"},{"lineNumber":273,"author":{"gitId":"kvihashini"},"content":"     * This defines a stronger notion of equality between two groups.","lastModifiedDate":"2021-10-08"},{"lineNumber":274,"author":{"gitId":"kvihashini"},"content":"     */","lastModifiedDate":"2021-10-08"},{"lineNumber":275,"author":{"gitId":"kvihashini"},"content":"    @Override","lastModifiedDate":"2021-10-08"},{"lineNumber":276,"author":{"gitId":"kvihashini"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-08"},{"lineNumber":277,"author":{"gitId":"kvihashini"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2021-10-08"},{"lineNumber":278,"author":{"gitId":"kvihashini"},"content":"            return true;","lastModifiedDate":"2021-10-08"},{"lineNumber":279,"author":{"gitId":"kvihashini"},"content":"        }","lastModifiedDate":"2021-10-08"},{"lineNumber":280,"author":{"gitId":"kvihashini"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":281,"author":{"gitId":"kvihashini"},"content":"        if (!(other instanceof Group)) {","lastModifiedDate":"2021-10-08"},{"lineNumber":282,"author":{"gitId":"kvihashini"},"content":"            return false;","lastModifiedDate":"2021-10-08"},{"lineNumber":283,"author":{"gitId":"kvihashini"},"content":"        }","lastModifiedDate":"2021-10-08"},{"lineNumber":284,"author":{"gitId":"kvihashini"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":285,"author":{"gitId":"kvihashini"},"content":"        Group otherGroup \u003d (Group) other;","lastModifiedDate":"2021-10-08"},{"lineNumber":286,"author":{"gitId":"kvihashini"},"content":"        return otherGroup.getId().equals(getId()) \u0026\u0026 isSameGroup(otherGroup);","lastModifiedDate":"2021-10-18"},{"lineNumber":287,"author":{"gitId":"kvihashini"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":288,"author":{"gitId":"kvihashini"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":289,"author":{"gitId":"kvihashini"},"content":"    @Override","lastModifiedDate":"2021-10-08"},{"lineNumber":290,"author":{"gitId":"kvihashini"},"content":"    public int hashCode() {","lastModifiedDate":"2021-10-08"},{"lineNumber":291,"author":{"gitId":"kvihashini"},"content":"        // use this method for custom fields hashing instead of implementing your own","lastModifiedDate":"2021-10-08"},{"lineNumber":292,"author":{"gitId":"kvihashini"},"content":"        return Objects.hash(name);","lastModifiedDate":"2021-10-08"},{"lineNumber":293,"author":{"gitId":"kvihashini"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":294,"author":{"gitId":"kvihashini"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":295,"author":{"gitId":"kvihashini"},"content":"    @Override","lastModifiedDate":"2021-10-08"},{"lineNumber":296,"author":{"gitId":"kvihashini"},"content":"    public String toString() {","lastModifiedDate":"2021-10-08"},{"lineNumber":297,"author":{"gitId":"eltonyeh"},"content":"        return String.valueOf(getName());","lastModifiedDate":"2021-10-26"},{"lineNumber":298,"author":{"gitId":"kvihashini"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":299,"author":{"gitId":"kvihashini"},"content":"}","lastModifiedDate":"2021-10-08"}],"authorContributionMap":{"jeremy-7007":18,"kvihashini":74,"eltonyeh":74,"tanhuakun":133}},{"path":"src/main/java/seedu/address/model/group/GroupName.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kvihashini"},"content":"package seedu.address.model.group;","lastModifiedDate":"2021-10-08"},{"lineNumber":2,"author":{"gitId":"kvihashini"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":3,"author":{"gitId":"kvihashini"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-08"},{"lineNumber":4,"author":{"gitId":"kvihashini"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2021-10-08"},{"lineNumber":5,"author":{"gitId":"kvihashini"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":6,"author":{"gitId":"kvihashini"},"content":"/**","lastModifiedDate":"2021-10-08"},{"lineNumber":7,"author":{"gitId":"kvihashini"},"content":" * Represents a Group\u0027s name in the address book.","lastModifiedDate":"2021-10-08"},{"lineNumber":8,"author":{"gitId":"kvihashini"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidName(String)}","lastModifiedDate":"2021-10-08"},{"lineNumber":9,"author":{"gitId":"kvihashini"},"content":" */","lastModifiedDate":"2021-10-08"},{"lineNumber":10,"author":{"gitId":"kvihashini"},"content":"public class GroupName {","lastModifiedDate":"2021-10-08"},{"lineNumber":11,"author":{"gitId":"kvihashini"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":12,"author":{"gitId":"kvihashini"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2021-10-08"},{"lineNumber":13,"author":{"gitId":"kvihashini"},"content":"            \"Names should only contain alphanumeric characters and spaces, and it should not be blank\";","lastModifiedDate":"2021-10-08"},{"lineNumber":14,"author":{"gitId":"kvihashini"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":15,"author":{"gitId":"kvihashini"},"content":"    /*","lastModifiedDate":"2021-10-08"},{"lineNumber":16,"author":{"gitId":"kvihashini"},"content":"     * The first character of the name must not be a whitespace,","lastModifiedDate":"2021-10-08"},{"lineNumber":17,"author":{"gitId":"kvihashini"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2021-10-08"},{"lineNumber":18,"author":{"gitId":"kvihashini"},"content":"     */","lastModifiedDate":"2021-10-08"},{"lineNumber":19,"author":{"gitId":"kvihashini"},"content":"    public static final String VALIDATION_REGEX \u003d \"[\\\\p{Alnum}][\\\\p{Alnum} ]*\";","lastModifiedDate":"2021-10-08"},{"lineNumber":20,"author":{"gitId":"kvihashini"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":21,"author":{"gitId":"kvihashini"},"content":"    public final String name;","lastModifiedDate":"2021-10-08"},{"lineNumber":22,"author":{"gitId":"kvihashini"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":23,"author":{"gitId":"kvihashini"},"content":"    /**","lastModifiedDate":"2021-10-08"},{"lineNumber":24,"author":{"gitId":"kvihashini"},"content":"     * Constructs a {@code Name}.","lastModifiedDate":"2021-10-08"},{"lineNumber":25,"author":{"gitId":"kvihashini"},"content":"     *","lastModifiedDate":"2021-10-08"},{"lineNumber":26,"author":{"gitId":"kvihashini"},"content":"     * @param name A valid name.","lastModifiedDate":"2021-10-08"},{"lineNumber":27,"author":{"gitId":"kvihashini"},"content":"     */","lastModifiedDate":"2021-10-08"},{"lineNumber":28,"author":{"gitId":"kvihashini"},"content":"    public GroupName(String name) {","lastModifiedDate":"2021-10-08"},{"lineNumber":29,"author":{"gitId":"kvihashini"},"content":"        requireNonNull(name);","lastModifiedDate":"2021-10-08"},{"lineNumber":30,"author":{"gitId":"kvihashini"},"content":"        checkArgument(isValidName(name), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-08"},{"lineNumber":31,"author":{"gitId":"kvihashini"},"content":"        this.name \u003d name;","lastModifiedDate":"2021-10-08"},{"lineNumber":32,"author":{"gitId":"kvihashini"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":33,"author":{"gitId":"kvihashini"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":34,"author":{"gitId":"kvihashini"},"content":"    /**","lastModifiedDate":"2021-10-08"},{"lineNumber":35,"author":{"gitId":"kvihashini"},"content":"     * Returns true if a given string is a valid name.","lastModifiedDate":"2021-10-08"},{"lineNumber":36,"author":{"gitId":"kvihashini"},"content":"     */","lastModifiedDate":"2021-10-08"},{"lineNumber":37,"author":{"gitId":"kvihashini"},"content":"    public static boolean isValidName(String test) {","lastModifiedDate":"2021-10-08"},{"lineNumber":38,"author":{"gitId":"kvihashini"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2021-10-08"},{"lineNumber":39,"author":{"gitId":"kvihashini"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":40,"author":{"gitId":"kvihashini"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":41,"author":{"gitId":"kvihashini"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":42,"author":{"gitId":"kvihashini"},"content":"    @Override","lastModifiedDate":"2021-10-08"},{"lineNumber":43,"author":{"gitId":"kvihashini"},"content":"    public String toString() {","lastModifiedDate":"2021-10-08"},{"lineNumber":44,"author":{"gitId":"kvihashini"},"content":"        return name;","lastModifiedDate":"2021-10-08"},{"lineNumber":45,"author":{"gitId":"kvihashini"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":46,"author":{"gitId":"kvihashini"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":47,"author":{"gitId":"kvihashini"},"content":"    @Override","lastModifiedDate":"2021-10-08"},{"lineNumber":48,"author":{"gitId":"kvihashini"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-08"},{"lineNumber":49,"author":{"gitId":"kvihashini"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-10-08"},{"lineNumber":50,"author":{"gitId":"kvihashini"},"content":"                || (other instanceof GroupName // instanceof handles nulls","lastModifiedDate":"2021-10-08"},{"lineNumber":51,"author":{"gitId":"kvihashini"},"content":"                \u0026\u0026 name.equals(((GroupName) other).name)); // state check","lastModifiedDate":"2021-10-08"},{"lineNumber":52,"author":{"gitId":"kvihashini"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":53,"author":{"gitId":"kvihashini"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":54,"author":{"gitId":"kvihashini"},"content":"    @Override","lastModifiedDate":"2021-10-08"},{"lineNumber":55,"author":{"gitId":"kvihashini"},"content":"    public int hashCode() {","lastModifiedDate":"2021-10-08"},{"lineNumber":56,"author":{"gitId":"kvihashini"},"content":"        return name.hashCode();","lastModifiedDate":"2021-10-08"},{"lineNumber":57,"author":{"gitId":"kvihashini"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":58,"author":{"gitId":"kvihashini"},"content":"}","lastModifiedDate":"2021-10-08"}],"authorContributionMap":{"kvihashini":58}},{"path":"src/main/java/seedu/address/model/group/GroupNameContainsKeywordsPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kvihashini"},"content":"package seedu.address.model.group;","lastModifiedDate":"2021-10-24"},{"lineNumber":2,"author":{"gitId":"kvihashini"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":3,"author":{"gitId":"kvihashini"},"content":"import java.util.List;","lastModifiedDate":"2021-10-24"},{"lineNumber":4,"author":{"gitId":"kvihashini"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2021-10-24"},{"lineNumber":5,"author":{"gitId":"kvihashini"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":6,"author":{"gitId":"kvihashini"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2021-10-24"},{"lineNumber":7,"author":{"gitId":"kvihashini"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":8,"author":{"gitId":"kvihashini"},"content":"/**","lastModifiedDate":"2021-10-24"},{"lineNumber":9,"author":{"gitId":"kvihashini"},"content":" * Tests that a {@code Group}\u0027s {@code Name} matches any of the keywords given.","lastModifiedDate":"2021-10-24"},{"lineNumber":10,"author":{"gitId":"kvihashini"},"content":" */","lastModifiedDate":"2021-10-24"},{"lineNumber":11,"author":{"gitId":"kvihashini"},"content":"public class GroupNameContainsKeywordsPredicate implements Predicate\u003cGroup\u003e {","lastModifiedDate":"2021-10-24"},{"lineNumber":12,"author":{"gitId":"kvihashini"},"content":"    private final List\u003cString\u003e keywords;","lastModifiedDate":"2021-10-24"},{"lineNumber":13,"author":{"gitId":"kvihashini"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":14,"author":{"gitId":"kvihashini"},"content":"    public GroupNameContainsKeywordsPredicate(List\u003cString\u003e keywords) {","lastModifiedDate":"2021-10-24"},{"lineNumber":15,"author":{"gitId":"kvihashini"},"content":"        this.keywords \u003d keywords;","lastModifiedDate":"2021-10-24"},{"lineNumber":16,"author":{"gitId":"kvihashini"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":17,"author":{"gitId":"kvihashini"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":18,"author":{"gitId":"kvihashini"},"content":"    @Override","lastModifiedDate":"2021-10-24"},{"lineNumber":19,"author":{"gitId":"kvihashini"},"content":"    public boolean test(Group group) {","lastModifiedDate":"2021-10-24"},{"lineNumber":20,"author":{"gitId":"kvihashini"},"content":"        return keywords.stream()","lastModifiedDate":"2021-10-24"},{"lineNumber":21,"author":{"gitId":"kvihashini"},"content":"                .anyMatch(keyword -\u003e StringUtil.containsWordIgnoreCase(group.getName().name, keyword));","lastModifiedDate":"2021-10-24"},{"lineNumber":22,"author":{"gitId":"kvihashini"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":23,"author":{"gitId":"kvihashini"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":24,"author":{"gitId":"kvihashini"},"content":"    @Override","lastModifiedDate":"2021-10-24"},{"lineNumber":25,"author":{"gitId":"kvihashini"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-24"},{"lineNumber":26,"author":{"gitId":"kvihashini"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-10-24"},{"lineNumber":27,"author":{"gitId":"kvihashini"},"content":"                || (other instanceof GroupNameContainsKeywordsPredicate // instanceof handles nulls","lastModifiedDate":"2021-10-24"},{"lineNumber":28,"author":{"gitId":"kvihashini"},"content":"                \u0026\u0026 keywords.equals(((GroupNameContainsKeywordsPredicate) other).keywords)); // state check","lastModifiedDate":"2021-10-24"},{"lineNumber":29,"author":{"gitId":"kvihashini"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":30,"author":{"gitId":"kvihashini"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":31,"author":{"gitId":"kvihashini"},"content":"}","lastModifiedDate":"2021-10-24"}],"authorContributionMap":{"kvihashini":31}},{"path":"src/main/java/seedu/address/model/group/GroupWithDetails.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kvihashini"},"content":"package seedu.address.model.group;","lastModifiedDate":"2021-10-25"},{"lineNumber":2,"author":{"gitId":"kvihashini"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":3,"author":{"gitId":"kvihashini"},"content":"import java.util.Set;","lastModifiedDate":"2021-10-25"},{"lineNumber":4,"author":{"gitId":"kvihashini"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":5,"author":{"gitId":"kvihashini"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2021-10-25"},{"lineNumber":6,"author":{"gitId":"tanhuakun"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2021-11-04"},{"lineNumber":7,"author":{"gitId":"kvihashini"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":8,"author":{"gitId":"kvihashini"},"content":"/**","lastModifiedDate":"2021-10-25"},{"lineNumber":9,"author":{"gitId":"kvihashini"},"content":" * Association class that can transport a group with all details related to it.","lastModifiedDate":"2021-10-25"},{"lineNumber":10,"author":{"gitId":"kvihashini"},"content":" * Generally a Group only hold uniqueIds, so this class is required to associate other related details.","lastModifiedDate":"2021-10-25"},{"lineNumber":11,"author":{"gitId":"kvihashini"},"content":" */","lastModifiedDate":"2021-10-25"},{"lineNumber":12,"author":{"gitId":"kvihashini"},"content":"public class GroupWithDetails {","lastModifiedDate":"2021-10-25"},{"lineNumber":13,"author":{"gitId":"kvihashini"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":14,"author":{"gitId":"kvihashini"},"content":"    private Group group;","lastModifiedDate":"2021-10-25"},{"lineNumber":15,"author":{"gitId":"kvihashini"},"content":"    private Set\u003cPerson\u003e persons;","lastModifiedDate":"2021-10-25"},{"lineNumber":16,"author":{"gitId":"tanhuakun"},"content":"    private Set\u003cTask\u003e tasks;","lastModifiedDate":"2021-11-04"},{"lineNumber":17,"author":{"gitId":"kvihashini"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":18,"author":{"gitId":"kvihashini"},"content":"    /**","lastModifiedDate":"2021-10-25"},{"lineNumber":19,"author":{"gitId":"kvihashini"},"content":"     * Creates an object that holds a person with some of his other details!","lastModifiedDate":"2021-10-25"},{"lineNumber":20,"author":{"gitId":"kvihashini"},"content":"     *","lastModifiedDate":"2021-10-25"},{"lineNumber":21,"author":{"gitId":"kvihashini"},"content":"     * @param group to hold","lastModifiedDate":"2021-10-25"},{"lineNumber":22,"author":{"gitId":"kvihashini"},"content":"     * @param persons details to hold","lastModifiedDate":"2021-10-25"},{"lineNumber":23,"author":{"gitId":"tanhuakun"},"content":"     * @param tasks to hold","lastModifiedDate":"2021-11-04"},{"lineNumber":24,"author":{"gitId":"kvihashini"},"content":"     */","lastModifiedDate":"2021-10-25"},{"lineNumber":25,"author":{"gitId":"tanhuakun"},"content":"    public GroupWithDetails(Group group, Set\u003cPerson\u003e persons, Set\u003cTask\u003e tasks) {","lastModifiedDate":"2021-11-04"},{"lineNumber":26,"author":{"gitId":"kvihashini"},"content":"        this.group \u003d group;","lastModifiedDate":"2021-10-25"},{"lineNumber":27,"author":{"gitId":"tanhuakun"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2021-11-04"},{"lineNumber":28,"author":{"gitId":"kvihashini"},"content":"        this.persons \u003d persons;","lastModifiedDate":"2021-10-25"},{"lineNumber":29,"author":{"gitId":"kvihashini"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":30,"author":{"gitId":"kvihashini"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":31,"author":{"gitId":"kvihashini"},"content":"    public Group getGroup() {","lastModifiedDate":"2021-10-25"},{"lineNumber":32,"author":{"gitId":"kvihashini"},"content":"        return group;","lastModifiedDate":"2021-10-25"},{"lineNumber":33,"author":{"gitId":"kvihashini"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":34,"author":{"gitId":"kvihashini"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":35,"author":{"gitId":"kvihashini"},"content":"    public Set\u003cPerson\u003e getPersons() {","lastModifiedDate":"2021-10-25"},{"lineNumber":36,"author":{"gitId":"kvihashini"},"content":"        return persons;","lastModifiedDate":"2021-10-25"},{"lineNumber":37,"author":{"gitId":"kvihashini"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":38,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":39,"author":{"gitId":"tanhuakun"},"content":"    public Set\u003cTask\u003e getTasks() {","lastModifiedDate":"2021-11-04"},{"lineNumber":40,"author":{"gitId":"tanhuakun"},"content":"        return tasks;","lastModifiedDate":"2021-11-04"},{"lineNumber":41,"author":{"gitId":"tanhuakun"},"content":"    }","lastModifiedDate":"2021-11-04"},{"lineNumber":42,"author":{"gitId":"kvihashini"},"content":"}","lastModifiedDate":"2021-10-25"}],"authorContributionMap":{"kvihashini":33,"tanhuakun":9}},{"path":"src/main/java/seedu/address/model/group/UniqueGroupList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kvihashini"},"content":"package seedu.address.model.group;","lastModifiedDate":"2021-10-08"},{"lineNumber":2,"author":{"gitId":"kvihashini"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":3,"author":{"gitId":"kvihashini"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-08"},{"lineNumber":4,"author":{"gitId":"kvihashini"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2021-10-08"},{"lineNumber":5,"author":{"gitId":"kvihashini"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":6,"author":{"gitId":"tanhuakun"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-23"},{"lineNumber":7,"author":{"gitId":"kvihashini"},"content":"import java.util.Iterator;","lastModifiedDate":"2021-10-08"},{"lineNumber":8,"author":{"gitId":"kvihashini"},"content":"import java.util.List;","lastModifiedDate":"2021-10-08"},{"lineNumber":9,"author":{"gitId":"tanhuakun"},"content":"import java.util.Set;","lastModifiedDate":"2021-10-24"},{"lineNumber":10,"author":{"gitId":"kvihashini"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":11,"author":{"gitId":"kvihashini"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2021-10-08"},{"lineNumber":12,"author":{"gitId":"kvihashini"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-10-08"},{"lineNumber":13,"author":{"gitId":"kvihashini"},"content":"import seedu.address.model.group.exceptions.DuplicateGroupException;","lastModifiedDate":"2021-10-08"},{"lineNumber":14,"author":{"gitId":"kvihashini"},"content":"import seedu.address.model.group.exceptions.GroupNotFoundException;","lastModifiedDate":"2021-10-08"},{"lineNumber":15,"author":{"gitId":"tanhuakun"},"content":"import seedu.address.model.id.UniqueId;","lastModifiedDate":"2021-10-23"},{"lineNumber":16,"author":{"gitId":"tanhuakun"},"content":"import seedu.address.model.id.UniqueIdMapper;","lastModifiedDate":"2021-10-24"},{"lineNumber":17,"author":{"gitId":"tanhuakun"},"content":"import seedu.address.model.id.exceptions.IdNotFoundException;","lastModifiedDate":"2021-10-24"},{"lineNumber":18,"author":{"gitId":"kvihashini"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":19,"author":{"gitId":"kvihashini"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":20,"author":{"gitId":"kvihashini"},"content":"/**","lastModifiedDate":"2021-10-08"},{"lineNumber":21,"author":{"gitId":"kvihashini"},"content":" * A list of groups that enforces uniqueness between its elements and does not allow nulls.","lastModifiedDate":"2021-10-08"},{"lineNumber":22,"author":{"gitId":"kvihashini"},"content":" * A groups is considered unique by comparing using {@code Group#isSameGroup(Group)}. As such, adding and updating of","lastModifiedDate":"2021-10-08"},{"lineNumber":23,"author":{"gitId":"kvihashini"},"content":" * groups uses Group#isSameGroup(Group) for equality so as to ensure that the group being added or updated is","lastModifiedDate":"2021-10-08"},{"lineNumber":24,"author":{"gitId":"kvihashini"},"content":" * unique in terms of identity in the UniqueGroupList. However, the removal of a group uses Group#equals(Object) so","lastModifiedDate":"2021-10-08"},{"lineNumber":25,"author":{"gitId":"kvihashini"},"content":" * as to ensure that the group with exactly the same fields will be removed.","lastModifiedDate":"2021-10-08"},{"lineNumber":26,"author":{"gitId":"kvihashini"},"content":" *","lastModifiedDate":"2021-10-08"},{"lineNumber":27,"author":{"gitId":"kvihashini"},"content":" * Supports a minimal set of list operations.","lastModifiedDate":"2021-10-08"},{"lineNumber":28,"author":{"gitId":"kvihashini"},"content":" *","lastModifiedDate":"2021-10-08"},{"lineNumber":29,"author":{"gitId":"kvihashini"},"content":" * @see Group#isSameGroup(Group)","lastModifiedDate":"2021-10-08"},{"lineNumber":30,"author":{"gitId":"kvihashini"},"content":" */","lastModifiedDate":"2021-10-08"},{"lineNumber":31,"author":{"gitId":"tanhuakun"},"content":"public class UniqueGroupList implements Iterable\u003cGroup\u003e, UniqueIdMapper\u003cGroup\u003e {","lastModifiedDate":"2021-10-24"},{"lineNumber":32,"author":{"gitId":"kvihashini"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":33,"author":{"gitId":"kvihashini"},"content":"    private final ObservableList\u003cGroup\u003e internalList \u003d FXCollections.observableArrayList();","lastModifiedDate":"2021-10-08"},{"lineNumber":34,"author":{"gitId":"kvihashini"},"content":"    private final ObservableList\u003cGroup\u003e internalUnmodifiableList \u003d","lastModifiedDate":"2021-10-08"},{"lineNumber":35,"author":{"gitId":"kvihashini"},"content":"            FXCollections.unmodifiableObservableList(internalList);","lastModifiedDate":"2021-10-08"},{"lineNumber":36,"author":{"gitId":"kvihashini"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":37,"author":{"gitId":"kvihashini"},"content":"    /**","lastModifiedDate":"2021-10-08"},{"lineNumber":38,"author":{"gitId":"kvihashini"},"content":"     * Returns true if the list contains an equivalent group as the given argument.","lastModifiedDate":"2021-10-08"},{"lineNumber":39,"author":{"gitId":"kvihashini"},"content":"     */","lastModifiedDate":"2021-10-08"},{"lineNumber":40,"author":{"gitId":"kvihashini"},"content":"    public boolean contains(Group toCheck) {","lastModifiedDate":"2021-10-08"},{"lineNumber":41,"author":{"gitId":"kvihashini"},"content":"        requireNonNull(toCheck);","lastModifiedDate":"2021-10-08"},{"lineNumber":42,"author":{"gitId":"kvihashini"},"content":"        return internalList.stream().anyMatch(toCheck::isSameGroup);","lastModifiedDate":"2021-10-08"},{"lineNumber":43,"author":{"gitId":"kvihashini"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":44,"author":{"gitId":"kvihashini"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":45,"author":{"gitId":"kvihashini"},"content":"    /**","lastModifiedDate":"2021-10-08"},{"lineNumber":46,"author":{"gitId":"kvihashini"},"content":"     * Adds a group to the list.","lastModifiedDate":"2021-10-08"},{"lineNumber":47,"author":{"gitId":"kvihashini"},"content":"     * The group must not already exist in the list.","lastModifiedDate":"2021-10-08"},{"lineNumber":48,"author":{"gitId":"kvihashini"},"content":"     */","lastModifiedDate":"2021-10-08"},{"lineNumber":49,"author":{"gitId":"kvihashini"},"content":"    public void add(Group toAdd) {","lastModifiedDate":"2021-10-08"},{"lineNumber":50,"author":{"gitId":"kvihashini"},"content":"        requireNonNull(toAdd);","lastModifiedDate":"2021-10-08"},{"lineNumber":51,"author":{"gitId":"kvihashini"},"content":"        if (contains(toAdd)) {","lastModifiedDate":"2021-10-08"},{"lineNumber":52,"author":{"gitId":"kvihashini"},"content":"            throw new DuplicateGroupException();","lastModifiedDate":"2021-10-08"},{"lineNumber":53,"author":{"gitId":"kvihashini"},"content":"        }","lastModifiedDate":"2021-10-08"},{"lineNumber":54,"author":{"gitId":"kvihashini"},"content":"        internalList.add(toAdd);","lastModifiedDate":"2021-10-08"},{"lineNumber":55,"author":{"gitId":"kvihashini"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":56,"author":{"gitId":"kvihashini"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":57,"author":{"gitId":"kvihashini"},"content":"    /**","lastModifiedDate":"2021-10-08"},{"lineNumber":58,"author":{"gitId":"kvihashini"},"content":"     * Replaces the group {@code target} in the list with {@code editedGroup}.","lastModifiedDate":"2021-10-08"},{"lineNumber":59,"author":{"gitId":"kvihashini"},"content":"     * {@code target} must exist in the list.","lastModifiedDate":"2021-10-08"},{"lineNumber":60,"author":{"gitId":"kvihashini"},"content":"     * The group identity of {@code editedGroup} must not be the same as another existing group in the list.","lastModifiedDate":"2021-10-08"},{"lineNumber":61,"author":{"gitId":"kvihashini"},"content":"     */","lastModifiedDate":"2021-10-08"},{"lineNumber":62,"author":{"gitId":"kvihashini"},"content":"    public void setGroup(Group target, Group editedGroup) {","lastModifiedDate":"2021-10-08"},{"lineNumber":63,"author":{"gitId":"kvihashini"},"content":"        requireAllNonNull(target, editedGroup);","lastModifiedDate":"2021-10-08"},{"lineNumber":64,"author":{"gitId":"kvihashini"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":65,"author":{"gitId":"kvihashini"},"content":"        int index \u003d internalList.indexOf(target);","lastModifiedDate":"2021-10-08"},{"lineNumber":66,"author":{"gitId":"kvihashini"},"content":"        if (index \u003d\u003d -1) {","lastModifiedDate":"2021-10-08"},{"lineNumber":67,"author":{"gitId":"kvihashini"},"content":"            throw new GroupNotFoundException();","lastModifiedDate":"2021-10-08"},{"lineNumber":68,"author":{"gitId":"kvihashini"},"content":"        }","lastModifiedDate":"2021-10-08"},{"lineNumber":69,"author":{"gitId":"kvihashini"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":70,"author":{"gitId":"kvihashini"},"content":"        if (!target.isSameGroup(editedGroup) \u0026\u0026 contains(editedGroup)) {","lastModifiedDate":"2021-10-08"},{"lineNumber":71,"author":{"gitId":"kvihashini"},"content":"            throw new DuplicateGroupException();","lastModifiedDate":"2021-10-08"},{"lineNumber":72,"author":{"gitId":"kvihashini"},"content":"        }","lastModifiedDate":"2021-10-08"},{"lineNumber":73,"author":{"gitId":"kvihashini"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":74,"author":{"gitId":"kvihashini"},"content":"        internalList.set(index, editedGroup);","lastModifiedDate":"2021-10-08"},{"lineNumber":75,"author":{"gitId":"kvihashini"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":76,"author":{"gitId":"kvihashini"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":77,"author":{"gitId":"kvihashini"},"content":"    /**","lastModifiedDate":"2021-10-08"},{"lineNumber":78,"author":{"gitId":"kvihashini"},"content":"     * Removes the equivalent group from the list.","lastModifiedDate":"2021-10-08"},{"lineNumber":79,"author":{"gitId":"kvihashini"},"content":"     * The group must exist in the list.","lastModifiedDate":"2021-10-08"},{"lineNumber":80,"author":{"gitId":"kvihashini"},"content":"     */","lastModifiedDate":"2021-10-08"},{"lineNumber":81,"author":{"gitId":"kvihashini"},"content":"    public void remove(Group toRemove) {","lastModifiedDate":"2021-10-08"},{"lineNumber":82,"author":{"gitId":"kvihashini"},"content":"        requireNonNull(toRemove);","lastModifiedDate":"2021-10-08"},{"lineNumber":83,"author":{"gitId":"kvihashini"},"content":"        if (!internalList.remove(toRemove)) {","lastModifiedDate":"2021-10-08"},{"lineNumber":84,"author":{"gitId":"kvihashini"},"content":"            throw new GroupNotFoundException();","lastModifiedDate":"2021-10-08"},{"lineNumber":85,"author":{"gitId":"kvihashini"},"content":"        }","lastModifiedDate":"2021-10-08"},{"lineNumber":86,"author":{"gitId":"kvihashini"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":87,"author":{"gitId":"kvihashini"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":88,"author":{"gitId":"kvihashini"},"content":"    //This method is used for testing later","lastModifiedDate":"2021-10-08"},{"lineNumber":89,"author":{"gitId":"kvihashini"},"content":"    public void setGroups(UniqueGroupList replacement) {","lastModifiedDate":"2021-10-08"},{"lineNumber":90,"author":{"gitId":"kvihashini"},"content":"        requireNonNull(replacement);","lastModifiedDate":"2021-10-08"},{"lineNumber":91,"author":{"gitId":"kvihashini"},"content":"        internalList.setAll(replacement.internalList);","lastModifiedDate":"2021-10-08"},{"lineNumber":92,"author":{"gitId":"kvihashini"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":93,"author":{"gitId":"kvihashini"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":94,"author":{"gitId":"kvihashini"},"content":"    /**","lastModifiedDate":"2021-10-08"},{"lineNumber":95,"author":{"gitId":"kvihashini"},"content":"     * Replaces the contents of this list with {@code group}.","lastModifiedDate":"2021-10-08"},{"lineNumber":96,"author":{"gitId":"kvihashini"},"content":"     * {@code groups} must not contain duplicate groups.","lastModifiedDate":"2021-10-08"},{"lineNumber":97,"author":{"gitId":"kvihashini"},"content":"     */","lastModifiedDate":"2021-10-08"},{"lineNumber":98,"author":{"gitId":"kvihashini"},"content":"    public void setGroups(List\u003cGroup\u003e groups) {","lastModifiedDate":"2021-10-08"},{"lineNumber":99,"author":{"gitId":"kvihashini"},"content":"        requireAllNonNull(groups);","lastModifiedDate":"2021-10-08"},{"lineNumber":100,"author":{"gitId":"kvihashini"},"content":"        if (!groupsAreUnique(groups)) {","lastModifiedDate":"2021-10-08"},{"lineNumber":101,"author":{"gitId":"kvihashini"},"content":"            throw new DuplicateGroupException();","lastModifiedDate":"2021-10-08"},{"lineNumber":102,"author":{"gitId":"kvihashini"},"content":"        }","lastModifiedDate":"2021-10-08"},{"lineNumber":103,"author":{"gitId":"kvihashini"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":104,"author":{"gitId":"kvihashini"},"content":"        internalList.setAll(groups);","lastModifiedDate":"2021-10-08"},{"lineNumber":105,"author":{"gitId":"kvihashini"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":106,"author":{"gitId":"kvihashini"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":107,"author":{"gitId":"tanhuakun"},"content":"    /**","lastModifiedDate":"2021-10-23"},{"lineNumber":108,"author":{"gitId":"tanhuakun"},"content":"     * Removes the personId from all groups","lastModifiedDate":"2021-10-23"},{"lineNumber":109,"author":{"gitId":"tanhuakun"},"content":"     * @param toRemove id to remove","lastModifiedDate":"2021-10-23"},{"lineNumber":110,"author":{"gitId":"tanhuakun"},"content":"     */","lastModifiedDate":"2021-10-23"},{"lineNumber":111,"author":{"gitId":"tanhuakun"},"content":"    public void cleanUpPersonId(UniqueId toRemove) {","lastModifiedDate":"2021-10-23"},{"lineNumber":112,"author":{"gitId":"tanhuakun"},"content":"        List\u003cGroup\u003e groups \u003d new ArrayList\u003c\u003e(internalList);","lastModifiedDate":"2021-10-23"},{"lineNumber":113,"author":{"gitId":"tanhuakun"},"content":"        for (int i \u003d 0; i \u003c groups.size(); i++) {","lastModifiedDate":"2021-10-23"},{"lineNumber":114,"author":{"gitId":"tanhuakun"},"content":"            Group current \u003d groups.get(i);","lastModifiedDate":"2021-10-23"},{"lineNumber":115,"author":{"gitId":"tanhuakun"},"content":"            if (current.containsPersonId(toRemove)) {","lastModifiedDate":"2021-10-23"},{"lineNumber":116,"author":{"gitId":"tanhuakun"},"content":"                Group withoutId \u003d current.removePersonId(toRemove);","lastModifiedDate":"2021-10-23"},{"lineNumber":117,"author":{"gitId":"tanhuakun"},"content":"                internalList.set(i , withoutId);","lastModifiedDate":"2021-10-23"},{"lineNumber":118,"author":{"gitId":"tanhuakun"},"content":"            }","lastModifiedDate":"2021-10-23"},{"lineNumber":119,"author":{"gitId":"tanhuakun"},"content":"        }","lastModifiedDate":"2021-10-23"},{"lineNumber":120,"author":{"gitId":"tanhuakun"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":121,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":122,"author":{"gitId":"kvihashini"},"content":"    /**","lastModifiedDate":"2021-10-08"},{"lineNumber":123,"author":{"gitId":"kvihashini"},"content":"     * Returns the backing list as an unmodifiable {@code ObservableList}.","lastModifiedDate":"2021-10-08"},{"lineNumber":124,"author":{"gitId":"kvihashini"},"content":"     */","lastModifiedDate":"2021-10-08"},{"lineNumber":125,"author":{"gitId":"kvihashini"},"content":"    public ObservableList\u003cGroup\u003e asUnmodifiableObservableList() {","lastModifiedDate":"2021-10-08"},{"lineNumber":126,"author":{"gitId":"kvihashini"},"content":"        return internalUnmodifiableList;","lastModifiedDate":"2021-10-08"},{"lineNumber":127,"author":{"gitId":"kvihashini"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":128,"author":{"gitId":"kvihashini"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":129,"author":{"gitId":"kvihashini"},"content":"    @Override","lastModifiedDate":"2021-10-08"},{"lineNumber":130,"author":{"gitId":"kvihashini"},"content":"    public Iterator\u003cGroup\u003e iterator() {","lastModifiedDate":"2021-10-08"},{"lineNumber":131,"author":{"gitId":"kvihashini"},"content":"        return internalList.iterator();","lastModifiedDate":"2021-10-08"},{"lineNumber":132,"author":{"gitId":"kvihashini"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":133,"author":{"gitId":"kvihashini"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":134,"author":{"gitId":"kvihashini"},"content":"    @Override","lastModifiedDate":"2021-10-08"},{"lineNumber":135,"author":{"gitId":"kvihashini"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-08"},{"lineNumber":136,"author":{"gitId":"kvihashini"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-10-08"},{"lineNumber":137,"author":{"gitId":"kvihashini"},"content":"                || (other instanceof UniqueGroupList // instanceof handles nulls","lastModifiedDate":"2021-10-08"},{"lineNumber":138,"author":{"gitId":"kvihashini"},"content":"                \u0026\u0026 internalList.equals(((UniqueGroupList) other).internalList));","lastModifiedDate":"2021-10-08"},{"lineNumber":139,"author":{"gitId":"kvihashini"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":140,"author":{"gitId":"kvihashini"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":141,"author":{"gitId":"kvihashini"},"content":"    @Override","lastModifiedDate":"2021-10-08"},{"lineNumber":142,"author":{"gitId":"kvihashini"},"content":"    public int hashCode() {","lastModifiedDate":"2021-10-08"},{"lineNumber":143,"author":{"gitId":"kvihashini"},"content":"        return internalList.hashCode();","lastModifiedDate":"2021-10-08"},{"lineNumber":144,"author":{"gitId":"kvihashini"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":145,"author":{"gitId":"kvihashini"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":146,"author":{"gitId":"kvihashini"},"content":"    /**","lastModifiedDate":"2021-10-08"},{"lineNumber":147,"author":{"gitId":"kvihashini"},"content":"     * Returns true if {@code groups} contains only unique groups.","lastModifiedDate":"2021-10-08"},{"lineNumber":148,"author":{"gitId":"kvihashini"},"content":"     */","lastModifiedDate":"2021-10-08"},{"lineNumber":149,"author":{"gitId":"kvihashini"},"content":"    private boolean groupsAreUnique(List\u003cGroup\u003e groups) {","lastModifiedDate":"2021-10-08"},{"lineNumber":150,"author":{"gitId":"kvihashini"},"content":"        for (int i \u003d 0; i \u003c groups.size() - 1; i++) {","lastModifiedDate":"2021-10-08"},{"lineNumber":151,"author":{"gitId":"kvihashini"},"content":"            for (int j \u003d i + 1; j \u003c groups.size(); j++) {","lastModifiedDate":"2021-10-08"},{"lineNumber":152,"author":{"gitId":"kvihashini"},"content":"                if (groups.get(i).isSameGroup(groups.get(j))) {","lastModifiedDate":"2021-10-08"},{"lineNumber":153,"author":{"gitId":"kvihashini"},"content":"                    return false;","lastModifiedDate":"2021-10-08"},{"lineNumber":154,"author":{"gitId":"kvihashini"},"content":"                }","lastModifiedDate":"2021-10-08"},{"lineNumber":155,"author":{"gitId":"kvihashini"},"content":"            }","lastModifiedDate":"2021-10-08"},{"lineNumber":156,"author":{"gitId":"kvihashini"},"content":"        }","lastModifiedDate":"2021-10-08"},{"lineNumber":157,"author":{"gitId":"kvihashini"},"content":"        return true;","lastModifiedDate":"2021-10-08"},{"lineNumber":158,"author":{"gitId":"kvihashini"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":159,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":160,"author":{"gitId":"tanhuakun"},"content":"    @Override","lastModifiedDate":"2021-10-24"},{"lineNumber":161,"author":{"gitId":"tanhuakun"},"content":"    public Set\u003cGroup\u003e getFromUniqueIds(Set\u003cUniqueId\u003e ids) throws IdNotFoundException {","lastModifiedDate":"2021-10-24"},{"lineNumber":162,"author":{"gitId":"tanhuakun"},"content":"        return UniqueIdMapper.\u003cGroup\u003egetFromUniqueIdsAndItemList(ids, internalList);","lastModifiedDate":"2021-10-24"},{"lineNumber":163,"author":{"gitId":"tanhuakun"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":164,"author":{"gitId":"kvihashini"},"content":"}","lastModifiedDate":"2021-10-08"}],"authorContributionMap":{"kvihashini":138,"tanhuakun":26}},{"path":"src/main/java/seedu/address/model/group/exceptions/DuplicateGroupException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kvihashini"},"content":"package seedu.address.model.group.exceptions;","lastModifiedDate":"2021-10-08"},{"lineNumber":2,"author":{"gitId":"kvihashini"},"content":"/**","lastModifiedDate":"2021-10-08"},{"lineNumber":3,"author":{"gitId":"kvihashini"},"content":" * Signals that the operation will result in duplicate Persons (Persons are considered duplicates if they have the same","lastModifiedDate":"2021-10-08"},{"lineNumber":4,"author":{"gitId":"kvihashini"},"content":" * identity).","lastModifiedDate":"2021-10-08"},{"lineNumber":5,"author":{"gitId":"kvihashini"},"content":" */","lastModifiedDate":"2021-10-08"},{"lineNumber":6,"author":{"gitId":"kvihashini"},"content":"public class DuplicateGroupException extends RuntimeException {","lastModifiedDate":"2021-10-08"},{"lineNumber":7,"author":{"gitId":"kvihashini"},"content":"    public DuplicateGroupException() {","lastModifiedDate":"2021-10-08"},{"lineNumber":8,"author":{"gitId":"kvihashini"},"content":"        super(\"Operation would result in duplicate groups\");","lastModifiedDate":"2021-10-08"},{"lineNumber":9,"author":{"gitId":"kvihashini"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":10,"author":{"gitId":"kvihashini"},"content":"}","lastModifiedDate":"2021-10-08"}],"authorContributionMap":{"kvihashini":10}},{"path":"src/main/java/seedu/address/model/group/exceptions/GroupNotFoundException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kvihashini"},"content":"package seedu.address.model.group.exceptions;","lastModifiedDate":"2021-10-08"},{"lineNumber":2,"author":{"gitId":"kvihashini"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":3,"author":{"gitId":"kvihashini"},"content":"/**","lastModifiedDate":"2021-10-08"},{"lineNumber":4,"author":{"gitId":"kvihashini"},"content":" * Signals that the operation is unable to find the specified group.","lastModifiedDate":"2021-10-08"},{"lineNumber":5,"author":{"gitId":"kvihashini"},"content":" */","lastModifiedDate":"2021-10-08"},{"lineNumber":6,"author":{"gitId":"kvihashini"},"content":"public class GroupNotFoundException extends RuntimeException {}","lastModifiedDate":"2021-10-08"}],"authorContributionMap":{"kvihashini":6}},{"path":"src/main/java/seedu/address/model/id/HasUniqueId.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"eltonyeh"},"content":"package seedu.address.model.id;","lastModifiedDate":"2021-10-10"},{"lineNumber":2,"author":{"gitId":"eltonyeh"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":3,"author":{"gitId":"eltonyeh"},"content":"/**","lastModifiedDate":"2021-10-10"},{"lineNumber":4,"author":{"gitId":"eltonyeh"},"content":" * An interface such that all classes having unique id should implement from it.","lastModifiedDate":"2021-10-10"},{"lineNumber":5,"author":{"gitId":"eltonyeh"},"content":" */","lastModifiedDate":"2021-10-10"},{"lineNumber":6,"author":{"gitId":"eltonyeh"},"content":"public interface HasUniqueId {","lastModifiedDate":"2021-10-10"},{"lineNumber":7,"author":{"gitId":"eltonyeh"},"content":"    /**","lastModifiedDate":"2021-10-10"},{"lineNumber":8,"author":{"gitId":"eltonyeh"},"content":"     * Gets the unique id.","lastModifiedDate":"2021-10-10"},{"lineNumber":9,"author":{"gitId":"eltonyeh"},"content":"     *","lastModifiedDate":"2021-10-10"},{"lineNumber":10,"author":{"gitId":"eltonyeh"},"content":"     * @return The id.","lastModifiedDate":"2021-10-10"},{"lineNumber":11,"author":{"gitId":"eltonyeh"},"content":"     */","lastModifiedDate":"2021-10-10"},{"lineNumber":12,"author":{"gitId":"eltonyeh"},"content":"    UniqueId getId();","lastModifiedDate":"2021-10-10"},{"lineNumber":13,"author":{"gitId":"eltonyeh"},"content":"}","lastModifiedDate":"2021-10-10"}],"authorContributionMap":{"eltonyeh":13}},{"path":"src/main/java/seedu/address/model/id/UniqueId.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"eltonyeh"},"content":"package seedu.address.model.id;","lastModifiedDate":"2021-10-10"},{"lineNumber":2,"author":{"gitId":"eltonyeh"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":3,"author":{"gitId":"eltonyeh"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-08"},{"lineNumber":4,"author":{"gitId":"eltonyeh"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":5,"author":{"gitId":"eltonyeh"},"content":"import java.util.Objects;","lastModifiedDate":"2021-10-26"},{"lineNumber":6,"author":{"gitId":"eltonyeh"},"content":"import java.util.UUID;","lastModifiedDate":"2021-10-08"},{"lineNumber":7,"author":{"gitId":"eltonyeh"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":8,"author":{"gitId":"kvihashini"},"content":"import seedu.address.model.group.Group;","lastModifiedDate":"2021-10-18"},{"lineNumber":9,"author":{"gitId":"eltonyeh"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2021-10-10"},{"lineNumber":10,"author":{"gitId":"eltonyeh"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2021-10-10"},{"lineNumber":11,"author":{"gitId":"eltonyeh"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":12,"author":{"gitId":"eltonyeh"},"content":"/**","lastModifiedDate":"2021-10-08"},{"lineNumber":13,"author":{"gitId":"kvihashini"},"content":" * A class that represents unique ids for tasks/students/groups using UUID.","lastModifiedDate":"2021-10-18"},{"lineNumber":14,"author":{"gitId":"eltonyeh"},"content":" */","lastModifiedDate":"2021-10-08"},{"lineNumber":15,"author":{"gitId":"eltonyeh"},"content":"public class UniqueId {","lastModifiedDate":"2021-10-08"},{"lineNumber":16,"author":{"gitId":"eltonyeh"},"content":"    public static final UniqueId DEFAULT_ID \u003d UniqueId.generateId(\"00000000-0000-0000-0000-000000000000\");","lastModifiedDate":"2021-10-12"},{"lineNumber":17,"author":{"gitId":"eltonyeh"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":18,"author":{"gitId":"eltonyeh"},"content":"    /**","lastModifiedDate":"2021-10-08"},{"lineNumber":19,"author":{"gitId":"eltonyeh"},"content":"     * The owner of the id. It can be a task or a student.","lastModifiedDate":"2021-10-08"},{"lineNumber":20,"author":{"gitId":"eltonyeh"},"content":"     */","lastModifiedDate":"2021-10-08"},{"lineNumber":21,"author":{"gitId":"eltonyeh"},"content":"    private HasUniqueId owner;","lastModifiedDate":"2021-10-12"},{"lineNumber":22,"author":{"gitId":"eltonyeh"},"content":"    private final UUID id;","lastModifiedDate":"2021-10-08"},{"lineNumber":23,"author":{"gitId":"eltonyeh"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":24,"author":{"gitId":"eltonyeh"},"content":"    private UniqueId(HasUniqueId owner) {","lastModifiedDate":"2021-10-10"},{"lineNumber":25,"author":{"gitId":"eltonyeh"},"content":"        requireNonNull(owner);","lastModifiedDate":"2021-10-08"},{"lineNumber":26,"author":{"gitId":"eltonyeh"},"content":"        this.owner \u003d owner;","lastModifiedDate":"2021-10-08"},{"lineNumber":27,"author":{"gitId":"eltonyeh"},"content":"        this.id \u003d UUID.randomUUID();","lastModifiedDate":"2021-10-08"},{"lineNumber":28,"author":{"gitId":"eltonyeh"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":29,"author":{"gitId":"eltonyeh"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":30,"author":{"gitId":"eltonyeh"},"content":"    private UniqueId(String id) {","lastModifiedDate":"2021-10-12"},{"lineNumber":31,"author":{"gitId":"eltonyeh"},"content":"        // create a default hasUniqueId for the id\u0027s temporary owner.","lastModifiedDate":"2021-10-12"},{"lineNumber":32,"author":{"gitId":"eltonyeh"},"content":"        this.owner \u003d () -\u003e UniqueId.generateId(id);","lastModifiedDate":"2021-10-12"},{"lineNumber":33,"author":{"gitId":"eltonyeh"},"content":"        this.id \u003d UUID.fromString(id);","lastModifiedDate":"2021-10-12"},{"lineNumber":34,"author":{"gitId":"eltonyeh"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":35,"author":{"gitId":"eltonyeh"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":36,"author":{"gitId":"Neha-5678"},"content":"    /**","lastModifiedDate":"2021-10-11"},{"lineNumber":37,"author":{"gitId":"Neha-5678"},"content":"     * Creates a UniqueId object.","lastModifiedDate":"2021-10-11"},{"lineNumber":38,"author":{"gitId":"Neha-5678"},"content":"     *","lastModifiedDate":"2021-10-11"},{"lineNumber":39,"author":{"gitId":"Neha-5678"},"content":"     * @param id String representation of the UUID of a task.","lastModifiedDate":"2021-10-11"},{"lineNumber":40,"author":{"gitId":"Neha-5678"},"content":"     */","lastModifiedDate":"2021-10-11"},{"lineNumber":41,"author":{"gitId":"eltonyeh"},"content":"    public static UniqueId generateId(String id) {","lastModifiedDate":"2021-10-12"},{"lineNumber":42,"author":{"gitId":"Neha-5678"},"content":"        requireNonNull(id);","lastModifiedDate":"2021-10-11"},{"lineNumber":43,"author":{"gitId":"eltonyeh"},"content":"        return new UniqueId(id);","lastModifiedDate":"2021-10-12"},{"lineNumber":44,"author":{"gitId":"Neha-5678"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":45,"author":{"gitId":"Neha-5678"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":46,"author":{"gitId":"eltonyeh"},"content":"    /**","lastModifiedDate":"2021-10-08"},{"lineNumber":47,"author":{"gitId":"eltonyeh"},"content":"     * Generates a unique id for a task.","lastModifiedDate":"2021-10-08"},{"lineNumber":48,"author":{"gitId":"eltonyeh"},"content":"     *","lastModifiedDate":"2021-10-08"},{"lineNumber":49,"author":{"gitId":"eltonyeh"},"content":"     * @return A unique id for a task.","lastModifiedDate":"2021-10-08"},{"lineNumber":50,"author":{"gitId":"eltonyeh"},"content":"     */","lastModifiedDate":"2021-10-08"},{"lineNumber":51,"author":{"gitId":"eltonyeh"},"content":"    public static UniqueId generateId(HasUniqueId owner) {","lastModifiedDate":"2021-10-10"},{"lineNumber":52,"author":{"gitId":"eltonyeh"},"content":"        return new UniqueId(owner);","lastModifiedDate":"2021-10-10"},{"lineNumber":53,"author":{"gitId":"eltonyeh"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":54,"author":{"gitId":"eltonyeh"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":55,"author":{"gitId":"eltonyeh"},"content":"    public HasUniqueId getOwner() {","lastModifiedDate":"2021-10-10"},{"lineNumber":56,"author":{"gitId":"eltonyeh"},"content":"        return owner;","lastModifiedDate":"2021-10-10"},{"lineNumber":57,"author":{"gitId":"eltonyeh"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":58,"author":{"gitId":"eltonyeh"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":59,"author":{"gitId":"eltonyeh"},"content":"    public void setOwner(HasUniqueId owner) {","lastModifiedDate":"2021-10-12"},{"lineNumber":60,"author":{"gitId":"eltonyeh"},"content":"        this.owner \u003d owner;","lastModifiedDate":"2021-10-12"},{"lineNumber":61,"author":{"gitId":"eltonyeh"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":62,"author":{"gitId":"eltonyeh"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":63,"author":{"gitId":"Neha-5678"},"content":"    public UUID getUuid() {","lastModifiedDate":"2021-10-11"},{"lineNumber":64,"author":{"gitId":"Neha-5678"},"content":"        return this.id;","lastModifiedDate":"2021-10-11"},{"lineNumber":65,"author":{"gitId":"Neha-5678"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":66,"author":{"gitId":"Neha-5678"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":67,"author":{"gitId":"eltonyeh"},"content":"    @Override","lastModifiedDate":"2021-10-08"},{"lineNumber":68,"author":{"gitId":"eltonyeh"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-08"},{"lineNumber":69,"author":{"gitId":"eltonyeh"},"content":"        if (this \u003d\u003d other) {","lastModifiedDate":"2021-10-08"},{"lineNumber":70,"author":{"gitId":"eltonyeh"},"content":"            return true;","lastModifiedDate":"2021-10-08"},{"lineNumber":71,"author":{"gitId":"eltonyeh"},"content":"        }","lastModifiedDate":"2021-10-08"},{"lineNumber":72,"author":{"gitId":"eltonyeh"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":73,"author":{"gitId":"eltonyeh"},"content":"        if (!(other instanceof UniqueId)) {","lastModifiedDate":"2021-10-08"},{"lineNumber":74,"author":{"gitId":"eltonyeh"},"content":"            return false;","lastModifiedDate":"2021-10-08"},{"lineNumber":75,"author":{"gitId":"eltonyeh"},"content":"        }","lastModifiedDate":"2021-10-08"},{"lineNumber":76,"author":{"gitId":"eltonyeh"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":77,"author":{"gitId":"eltonyeh"},"content":"        UniqueId otherId \u003d (UniqueId) other;","lastModifiedDate":"2021-10-08"},{"lineNumber":78,"author":{"gitId":"eltonyeh"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":79,"author":{"gitId":"eltonyeh"},"content":"        // should not call this.owner.equals(otherId.owner), otherwise it will cause","lastModifiedDate":"2021-10-12"},{"lineNumber":80,"author":{"gitId":"eltonyeh"},"content":"        // StackOverflowException when running Task#equals since it also checks if the ids are equal!","lastModifiedDate":"2021-10-12"},{"lineNumber":81,"author":{"gitId":"eltonyeh"},"content":"        return this.id.equals(otherId.id);","lastModifiedDate":"2021-10-12"},{"lineNumber":82,"author":{"gitId":"eltonyeh"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":83,"author":{"gitId":"eltonyeh"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":84,"author":{"gitId":"eltonyeh"},"content":"    @Override","lastModifiedDate":"2021-10-08"},{"lineNumber":85,"author":{"gitId":"eltonyeh"},"content":"    public String toString() {","lastModifiedDate":"2021-10-08"},{"lineNumber":86,"author":{"gitId":"eltonyeh"},"content":"        if (owner instanceof Task) {","lastModifiedDate":"2021-10-10"},{"lineNumber":87,"author":{"gitId":"eltonyeh"},"content":"            return \"T-\" + this.id.toString();","lastModifiedDate":"2021-10-08"},{"lineNumber":88,"author":{"gitId":"eltonyeh"},"content":"        }","lastModifiedDate":"2021-10-08"},{"lineNumber":89,"author":{"gitId":"eltonyeh"},"content":"        if (owner instanceof Person) {","lastModifiedDate":"2021-10-10"},{"lineNumber":90,"author":{"gitId":"eltonyeh"},"content":"            return \"S-\" + this.id.toString();","lastModifiedDate":"2021-10-10"},{"lineNumber":91,"author":{"gitId":"eltonyeh"},"content":"        }","lastModifiedDate":"2021-10-08"},{"lineNumber":92,"author":{"gitId":"kvihashini"},"content":"        if (owner instanceof Group) {","lastModifiedDate":"2021-10-18"},{"lineNumber":93,"author":{"gitId":"kvihashini"},"content":"            return \"G-\" + this.id.toString();","lastModifiedDate":"2021-10-18"},{"lineNumber":94,"author":{"gitId":"kvihashini"},"content":"        }","lastModifiedDate":"2021-10-18"},{"lineNumber":95,"author":{"gitId":"eltonyeh"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":96,"author":{"gitId":"eltonyeh"},"content":"        return \"#INVALID\";","lastModifiedDate":"2021-10-10"},{"lineNumber":97,"author":{"gitId":"eltonyeh"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":98,"author":{"gitId":"eltonyeh"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":99,"author":{"gitId":"eltonyeh"},"content":"    @Override","lastModifiedDate":"2021-10-26"},{"lineNumber":100,"author":{"gitId":"eltonyeh"},"content":"    public int hashCode() {","lastModifiedDate":"2021-10-26"},{"lineNumber":101,"author":{"gitId":"eltonyeh"},"content":"        return Objects.hashCode(id);","lastModifiedDate":"2021-10-26"},{"lineNumber":102,"author":{"gitId":"eltonyeh"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":103,"author":{"gitId":"eltonyeh"},"content":"}","lastModifiedDate":"2021-10-08"}],"authorContributionMap":{"Neha-5678":12,"kvihashini":5,"eltonyeh":86}},{"path":"src/main/java/seedu/address/model/id/UniqueIdMapper.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tanhuakun"},"content":"package seedu.address.model.id;","lastModifiedDate":"2021-10-23"},{"lineNumber":2,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":3,"author":{"gitId":"tanhuakun"},"content":"import java.util.HashSet;","lastModifiedDate":"2021-10-24"},{"lineNumber":4,"author":{"gitId":"tanhuakun"},"content":"import java.util.List;","lastModifiedDate":"2021-10-24"},{"lineNumber":5,"author":{"gitId":"tanhuakun"},"content":"import java.util.Set;","lastModifiedDate":"2021-10-23"},{"lineNumber":6,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":7,"author":{"gitId":"tanhuakun"},"content":"import seedu.address.model.id.exceptions.IdNotFoundException;","lastModifiedDate":"2021-10-23"},{"lineNumber":8,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":9,"author":{"gitId":"tanhuakun"},"content":"public interface UniqueIdMapper\u003cT extends HasUniqueId\u003e {","lastModifiedDate":"2021-10-23"},{"lineNumber":10,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":11,"author":{"gitId":"tanhuakun"},"content":"    /**","lastModifiedDate":"2021-10-24"},{"lineNumber":12,"author":{"gitId":"tanhuakun"},"content":"     * Util method to get the set of objects from a given list represented by a set of ids.","lastModifiedDate":"2021-10-24"},{"lineNumber":13,"author":{"gitId":"tanhuakun"},"content":"     * A static implementation that can be reused by most implementations of this interface.","lastModifiedDate":"2021-10-24"},{"lineNumber":14,"author":{"gitId":"tanhuakun"},"content":"     */","lastModifiedDate":"2021-10-24"},{"lineNumber":15,"author":{"gitId":"tanhuakun"},"content":"    static \u003cT extends HasUniqueId\u003e Set\u003cT\u003e getFromUniqueIdsAndItemList(Set\u003cUniqueId\u003e ids,","lastModifiedDate":"2021-10-24"},{"lineNumber":16,"author":{"gitId":"tanhuakun"},"content":"            List\u003cT\u003e list) throws IdNotFoundException {","lastModifiedDate":"2021-10-24"},{"lineNumber":17,"author":{"gitId":"tanhuakun"},"content":"        Set\u003cT\u003e toReturn \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2021-10-24"},{"lineNumber":18,"author":{"gitId":"tanhuakun"},"content":"        for (UniqueId id : ids) {","lastModifiedDate":"2021-10-24"},{"lineNumber":19,"author":{"gitId":"tanhuakun"},"content":"            toReturn.add(list.stream().filter(generic -\u003e id.equals(generic.getId()))","lastModifiedDate":"2021-10-24"},{"lineNumber":20,"author":{"gitId":"tanhuakun"},"content":"                    .findFirst()","lastModifiedDate":"2021-10-24"},{"lineNumber":21,"author":{"gitId":"tanhuakun"},"content":"                    .orElseThrow(() -\u003e new IdNotFoundException(id)));","lastModifiedDate":"2021-10-24"},{"lineNumber":22,"author":{"gitId":"tanhuakun"},"content":"        }","lastModifiedDate":"2021-10-24"},{"lineNumber":23,"author":{"gitId":"tanhuakun"},"content":"        return toReturn;","lastModifiedDate":"2021-10-24"},{"lineNumber":24,"author":{"gitId":"tanhuakun"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":25,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":26,"author":{"gitId":"tanhuakun"},"content":"    /**","lastModifiedDate":"2021-10-23"},{"lineNumber":27,"author":{"gitId":"tanhuakun"},"content":"     * Converts a Set of UniqueId into a set of objects represented by the UniqueId","lastModifiedDate":"2021-10-23"},{"lineNumber":28,"author":{"gitId":"tanhuakun"},"content":"     *","lastModifiedDate":"2021-10-23"},{"lineNumber":29,"author":{"gitId":"tanhuakun"},"content":"     * @param ids to convert","lastModifiedDate":"2021-10-23"},{"lineNumber":30,"author":{"gitId":"tanhuakun"},"content":"     * @return Set of objects represented by the UniqueId","lastModifiedDate":"2021-10-23"},{"lineNumber":31,"author":{"gitId":"tanhuakun"},"content":"     */","lastModifiedDate":"2021-10-23"},{"lineNumber":32,"author":{"gitId":"tanhuakun"},"content":"    Set\u003cT\u003e getFromUniqueIds(Set\u003cUniqueId\u003e ids) throws IdNotFoundException;","lastModifiedDate":"2021-10-23"},{"lineNumber":33,"author":{"gitId":"tanhuakun"},"content":"}","lastModifiedDate":"2021-10-23"}],"authorContributionMap":{"tanhuakun":33}},{"path":"src/main/java/seedu/address/model/id/exceptions/DuplicateIdException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tanhuakun"},"content":"package seedu.address.model.id.exceptions;","lastModifiedDate":"2021-10-23"},{"lineNumber":2,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":3,"author":{"gitId":"tanhuakun"},"content":"public class DuplicateIdException extends RuntimeException {","lastModifiedDate":"2021-10-23"},{"lineNumber":4,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":5,"author":{"gitId":"tanhuakun"},"content":"    public static final String MESSAGE \u003d \"Operation results in duplicate id\";","lastModifiedDate":"2021-10-23"},{"lineNumber":6,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":7,"author":{"gitId":"tanhuakun"},"content":"    public DuplicateIdException() {","lastModifiedDate":"2021-10-23"},{"lineNumber":8,"author":{"gitId":"tanhuakun"},"content":"        super(MESSAGE);","lastModifiedDate":"2021-10-23"},{"lineNumber":9,"author":{"gitId":"tanhuakun"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":10,"author":{"gitId":"tanhuakun"},"content":"}","lastModifiedDate":"2021-10-23"}],"authorContributionMap":{"tanhuakun":10}},{"path":"src/main/java/seedu/address/model/id/exceptions/IdNotFoundException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tanhuakun"},"content":"package seedu.address.model.id.exceptions;","lastModifiedDate":"2021-10-23"},{"lineNumber":2,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":3,"author":{"gitId":"tanhuakun"},"content":"import seedu.address.model.id.UniqueId;","lastModifiedDate":"2021-10-23"},{"lineNumber":4,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":5,"author":{"gitId":"tanhuakun"},"content":"public class IdNotFoundException extends RuntimeException {","lastModifiedDate":"2021-10-23"},{"lineNumber":6,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":7,"author":{"gitId":"tanhuakun"},"content":"    public static final String MESSAGE \u003d \"Id not found: \";","lastModifiedDate":"2021-10-23"},{"lineNumber":8,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":9,"author":{"gitId":"tanhuakun"},"content":"    public IdNotFoundException(UniqueId id) {","lastModifiedDate":"2021-10-23"},{"lineNumber":10,"author":{"gitId":"tanhuakun"},"content":"        super(MESSAGE + id.toString());","lastModifiedDate":"2021-10-23"},{"lineNumber":11,"author":{"gitId":"tanhuakun"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":12,"author":{"gitId":"tanhuakun"},"content":"}","lastModifiedDate":"2021-10-23"}],"authorContributionMap":{"tanhuakun":12}},{"path":"src/main/java/seedu/address/model/lesson/Attendee.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tanhuakun"},"content":"package seedu.address.model.lesson;","lastModifiedDate":"2021-10-20"},{"lineNumber":2,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":3,"author":{"gitId":"tanhuakun"},"content":"public interface Attendee {","lastModifiedDate":"2021-10-20"},{"lineNumber":4,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":5,"author":{"gitId":"tanhuakun"},"content":"    /**","lastModifiedDate":"2021-10-20"},{"lineNumber":6,"author":{"gitId":"tanhuakun"},"content":"     * Gets important specified details to know who the attendee is","lastModifiedDate":"2021-10-20"},{"lineNumber":7,"author":{"gitId":"tanhuakun"},"content":"     * @return String representation of such details","lastModifiedDate":"2021-10-20"},{"lineNumber":8,"author":{"gitId":"tanhuakun"},"content":"     */","lastModifiedDate":"2021-10-20"},{"lineNumber":9,"author":{"gitId":"tanhuakun"},"content":"    String getAttendeeDetails();","lastModifiedDate":"2021-10-20"},{"lineNumber":10,"author":{"gitId":"tanhuakun"},"content":"}","lastModifiedDate":"2021-10-20"}],"authorContributionMap":{"tanhuakun":10}},{"path":"src/main/java/seedu/address/model/lesson/Lesson.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tanhuakun"},"content":"package seedu.address.model.lesson;","lastModifiedDate":"2021-10-05"},{"lineNumber":2,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":3,"author":{"gitId":"tanhuakun"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2021-10-05"},{"lineNumber":4,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":5,"author":{"gitId":"tanhuakun"},"content":"import java.time.DayOfWeek;","lastModifiedDate":"2021-10-05"},{"lineNumber":6,"author":{"gitId":"tanhuakun"},"content":"import java.time.format.TextStyle;","lastModifiedDate":"2021-10-05"},{"lineNumber":7,"author":{"gitId":"tanhuakun"},"content":"import java.util.Locale;","lastModifiedDate":"2021-10-05"},{"lineNumber":8,"author":{"gitId":"tanhuakun"},"content":"import java.util.Objects;","lastModifiedDate":"2021-10-05"},{"lineNumber":9,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":10,"author":{"gitId":"tanhuakun"},"content":"/**","lastModifiedDate":"2021-10-05"},{"lineNumber":11,"author":{"gitId":"tanhuakun"},"content":" * Represents a lessons that has a day, timing and subject to be taught","lastModifiedDate":"2021-10-05"},{"lineNumber":12,"author":{"gitId":"tanhuakun"},"content":" */","lastModifiedDate":"2021-10-05"},{"lineNumber":13,"author":{"gitId":"tanhuakun"},"content":"public class Lesson implements Comparable\u003cLesson\u003e {","lastModifiedDate":"2021-10-16"},{"lineNumber":14,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":15,"author":{"gitId":"tanhuakun"},"content":"    // Scheduling fields","lastModifiedDate":"2021-10-05"},{"lineNumber":16,"author":{"gitId":"tanhuakun"},"content":"    private final Timeslot timeslot;","lastModifiedDate":"2021-10-05"},{"lineNumber":17,"author":{"gitId":"tanhuakun"},"content":"    private final DayOfWeek dayOfWeek;","lastModifiedDate":"2021-10-05"},{"lineNumber":18,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":19,"author":{"gitId":"tanhuakun"},"content":"    // Identity fields","lastModifiedDate":"2021-10-05"},{"lineNumber":20,"author":{"gitId":"tanhuakun"},"content":"    private final Subject subject;","lastModifiedDate":"2021-10-05"},{"lineNumber":21,"author":{"gitId":"tanhuakun"},"content":"    /**","lastModifiedDate":"2021-10-05"},{"lineNumber":22,"author":{"gitId":"tanhuakun"},"content":"     * Every field must be present and not null.","lastModifiedDate":"2021-10-05"},{"lineNumber":23,"author":{"gitId":"tanhuakun"},"content":"     */","lastModifiedDate":"2021-10-05"},{"lineNumber":24,"author":{"gitId":"tanhuakun"},"content":"    public Lesson(Timeslot timeslot, Subject subject, DayOfWeek dayOfWeek) {","lastModifiedDate":"2021-10-20"},{"lineNumber":25,"author":{"gitId":"tanhuakun"},"content":"        requireAllNonNull(timeslot, subject, dayOfWeek);","lastModifiedDate":"2021-10-20"},{"lineNumber":26,"author":{"gitId":"tanhuakun"},"content":"        this.timeslot \u003d timeslot;","lastModifiedDate":"2021-10-05"},{"lineNumber":27,"author":{"gitId":"tanhuakun"},"content":"        this.subject \u003d subject;","lastModifiedDate":"2021-10-05"},{"lineNumber":28,"author":{"gitId":"tanhuakun"},"content":"        this.dayOfWeek \u003d dayOfWeek;","lastModifiedDate":"2021-10-05"},{"lineNumber":29,"author":{"gitId":"tanhuakun"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":30,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":31,"author":{"gitId":"tanhuakun"},"content":"    public Timeslot getTimeslot() {","lastModifiedDate":"2021-10-05"},{"lineNumber":32,"author":{"gitId":"tanhuakun"},"content":"        return timeslot;","lastModifiedDate":"2021-10-05"},{"lineNumber":33,"author":{"gitId":"tanhuakun"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":34,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":35,"author":{"gitId":"tanhuakun"},"content":"    public DayOfWeek getDayOfWeek() {","lastModifiedDate":"2021-10-05"},{"lineNumber":36,"author":{"gitId":"tanhuakun"},"content":"        return dayOfWeek;","lastModifiedDate":"2021-10-05"},{"lineNumber":37,"author":{"gitId":"tanhuakun"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":38,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":39,"author":{"gitId":"tanhuakun"},"content":"    public Subject getSubject() {","lastModifiedDate":"2021-10-05"},{"lineNumber":40,"author":{"gitId":"tanhuakun"},"content":"        return subject;","lastModifiedDate":"2021-10-05"},{"lineNumber":41,"author":{"gitId":"tanhuakun"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":42,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":43,"author":{"gitId":"tanhuakun"},"content":"    /**","lastModifiedDate":"2021-10-05"},{"lineNumber":44,"author":{"gitId":"tanhuakun"},"content":"     * Returns true if lessons overlap within the same period","lastModifiedDate":"2021-10-05"},{"lineNumber":45,"author":{"gitId":"tanhuakun"},"content":"     * Overlap is defined as timings overlapping and being on the same day","lastModifiedDate":"2021-10-05"},{"lineNumber":46,"author":{"gitId":"tanhuakun"},"content":"     * @param other The other lesson object to check overlap with","lastModifiedDate":"2021-10-05"},{"lineNumber":47,"author":{"gitId":"tanhuakun"},"content":"     * @return true if lessons do overlap, false otherwise","lastModifiedDate":"2021-10-05"},{"lineNumber":48,"author":{"gitId":"tanhuakun"},"content":"     */","lastModifiedDate":"2021-10-05"},{"lineNumber":49,"author":{"gitId":"tanhuakun"},"content":"    public boolean doLessonsOverlap(Lesson other) {","lastModifiedDate":"2021-10-05"},{"lineNumber":50,"author":{"gitId":"tanhuakun"},"content":"        if (other \u003d\u003d null || !dayOfWeek.equals(other.dayOfWeek)) {","lastModifiedDate":"2021-10-12"},{"lineNumber":51,"author":{"gitId":"tanhuakun"},"content":"            return false;","lastModifiedDate":"2021-10-05"},{"lineNumber":52,"author":{"gitId":"tanhuakun"},"content":"        }","lastModifiedDate":"2021-10-05"},{"lineNumber":53,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":54,"author":{"gitId":"tanhuakun"},"content":"        return timeslot.doTimingsOverlap(other.timeslot);","lastModifiedDate":"2021-10-05"},{"lineNumber":55,"author":{"gitId":"tanhuakun"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":56,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":57,"author":{"gitId":"tanhuakun"},"content":"    /**","lastModifiedDate":"2021-10-05"},{"lineNumber":58,"author":{"gitId":"tanhuakun"},"content":"     * Returns true if both persons have the same identity and schedules","lastModifiedDate":"2021-10-05"},{"lineNumber":59,"author":{"gitId":"tanhuakun"},"content":"     */","lastModifiedDate":"2021-10-05"},{"lineNumber":60,"author":{"gitId":"tanhuakun"},"content":"    @Override","lastModifiedDate":"2021-10-05"},{"lineNumber":61,"author":{"gitId":"tanhuakun"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-05"},{"lineNumber":62,"author":{"gitId":"tanhuakun"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2021-10-05"},{"lineNumber":63,"author":{"gitId":"tanhuakun"},"content":"            return true;","lastModifiedDate":"2021-10-05"},{"lineNumber":64,"author":{"gitId":"tanhuakun"},"content":"        }","lastModifiedDate":"2021-10-05"},{"lineNumber":65,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":66,"author":{"gitId":"tanhuakun"},"content":"        if (!(other instanceof Lesson)) {","lastModifiedDate":"2021-10-05"},{"lineNumber":67,"author":{"gitId":"tanhuakun"},"content":"            return false;","lastModifiedDate":"2021-10-05"},{"lineNumber":68,"author":{"gitId":"tanhuakun"},"content":"        }","lastModifiedDate":"2021-10-05"},{"lineNumber":69,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":70,"author":{"gitId":"tanhuakun"},"content":"        Lesson otherLesson \u003d (Lesson) other;","lastModifiedDate":"2021-10-05"},{"lineNumber":71,"author":{"gitId":"tanhuakun"},"content":"        return otherLesson.timeslot.equals(timeslot)","lastModifiedDate":"2021-10-05"},{"lineNumber":72,"author":{"gitId":"tanhuakun"},"content":"                \u0026\u0026 otherLesson.dayOfWeek.equals(dayOfWeek)","lastModifiedDate":"2021-10-05"},{"lineNumber":73,"author":{"gitId":"tanhuakun"},"content":"                \u0026\u0026 otherLesson.subject.equals(subject);","lastModifiedDate":"2021-10-05"},{"lineNumber":74,"author":{"gitId":"tanhuakun"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":75,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":76,"author":{"gitId":"tanhuakun"},"content":"    @Override","lastModifiedDate":"2021-10-05"},{"lineNumber":77,"author":{"gitId":"tanhuakun"},"content":"    public int hashCode() {","lastModifiedDate":"2021-10-05"},{"lineNumber":78,"author":{"gitId":"tanhuakun"},"content":"        // use this method for custom fields hashing instead of implementing your own","lastModifiedDate":"2021-10-05"},{"lineNumber":79,"author":{"gitId":"tanhuakun"},"content":"        return Objects.hash(timeslot, dayOfWeek, subject);","lastModifiedDate":"2021-10-05"},{"lineNumber":80,"author":{"gitId":"tanhuakun"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":81,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":82,"author":{"gitId":"tanhuakun"},"content":"    @Override","lastModifiedDate":"2021-10-05"},{"lineNumber":83,"author":{"gitId":"tanhuakun"},"content":"    public String toString() {","lastModifiedDate":"2021-10-05"},{"lineNumber":84,"author":{"gitId":"tanhuakun"},"content":"        final StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2021-10-05"},{"lineNumber":85,"author":{"gitId":"tanhuakun"},"content":"        builder.append(dayOfWeek.getDisplayName(TextStyle.SHORT, Locale.ENGLISH))","lastModifiedDate":"2021-11-05"},{"lineNumber":86,"author":{"gitId":"tanhuakun"},"content":"                .append(\" \")","lastModifiedDate":"2021-11-05"},{"lineNumber":87,"author":{"gitId":"tanhuakun"},"content":"                .append(timeslot)","lastModifiedDate":"2021-11-05"},{"lineNumber":88,"author":{"gitId":"tanhuakun"},"content":"                .append(\": \")","lastModifiedDate":"2021-11-05"},{"lineNumber":89,"author":{"gitId":"tanhuakun"},"content":"                .append(subject);","lastModifiedDate":"2021-11-05"},{"lineNumber":90,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":91,"author":{"gitId":"tanhuakun"},"content":"        return builder.toString();","lastModifiedDate":"2021-10-05"},{"lineNumber":92,"author":{"gitId":"tanhuakun"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":93,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":94,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":95,"author":{"gitId":"tanhuakun"},"content":"    @Override","lastModifiedDate":"2021-10-16"},{"lineNumber":96,"author":{"gitId":"tanhuakun"},"content":"    public int compareTo(Lesson o) {","lastModifiedDate":"2021-10-16"},{"lineNumber":97,"author":{"gitId":"tanhuakun"},"content":"        if (dayOfWeek.compareTo(o.dayOfWeek) !\u003d 0) {","lastModifiedDate":"2021-10-16"},{"lineNumber":98,"author":{"gitId":"tanhuakun"},"content":"            // if not same day, judge based on day","lastModifiedDate":"2021-10-16"},{"lineNumber":99,"author":{"gitId":"tanhuakun"},"content":"            return dayOfWeek.compareTo(o.dayOfWeek);","lastModifiedDate":"2021-10-16"},{"lineNumber":100,"author":{"gitId":"tanhuakun"},"content":"        } else {","lastModifiedDate":"2021-10-16"},{"lineNumber":101,"author":{"gitId":"tanhuakun"},"content":"            // judge based on timeslot","lastModifiedDate":"2021-10-16"},{"lineNumber":102,"author":{"gitId":"tanhuakun"},"content":"            return timeslot.compareTo(o.timeslot);","lastModifiedDate":"2021-10-16"},{"lineNumber":103,"author":{"gitId":"tanhuakun"},"content":"        }","lastModifiedDate":"2021-10-16"},{"lineNumber":104,"author":{"gitId":"tanhuakun"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":105,"author":{"gitId":"tanhuakun"},"content":"}","lastModifiedDate":"2021-10-05"}],"authorContributionMap":{"tanhuakun":105}},{"path":"src/main/java/seedu/address/model/lesson/LessonAssignable.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tanhuakun"},"content":"package seedu.address.model.lesson;","lastModifiedDate":"2021-10-20"},{"lineNumber":2,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":3,"author":{"gitId":"tanhuakun"},"content":"import java.util.List;","lastModifiedDate":"2021-10-20"},{"lineNumber":4,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":5,"author":{"gitId":"tanhuakun"},"content":"import seedu.address.model.lesson.exceptions.CannotAssignException;","lastModifiedDate":"2021-10-20"},{"lineNumber":6,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":7,"author":{"gitId":"tanhuakun"},"content":"public interface LessonAssignable {","lastModifiedDate":"2021-10-20"},{"lineNumber":8,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":9,"author":{"gitId":"tanhuakun"},"content":"    /**","lastModifiedDate":"2021-10-24"},{"lineNumber":10,"author":{"gitId":"tanhuakun"},"content":"     * Check if the assignable can be assigned the lesson","lastModifiedDate":"2021-10-24"},{"lineNumber":11,"author":{"gitId":"tanhuakun"},"content":"     *","lastModifiedDate":"2021-10-24"},{"lineNumber":12,"author":{"gitId":"tanhuakun"},"content":"     * @param lesson lesson to check","lastModifiedDate":"2021-10-24"},{"lineNumber":13,"author":{"gitId":"tanhuakun"},"content":"     * @return true if lesson can be assigned","lastModifiedDate":"2021-10-24"},{"lineNumber":14,"author":{"gitId":"tanhuakun"},"content":"     */","lastModifiedDate":"2021-10-24"},{"lineNumber":15,"author":{"gitId":"tanhuakun"},"content":"    boolean canAssignLesson(Lesson lesson);","lastModifiedDate":"2021-10-24"},{"lineNumber":16,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":17,"author":{"gitId":"tanhuakun"},"content":"    /**","lastModifiedDate":"2021-10-20"},{"lineNumber":18,"author":{"gitId":"tanhuakun"},"content":"     * Immutable way of adding a lesson","lastModifiedDate":"2021-10-20"},{"lineNumber":19,"author":{"gitId":"tanhuakun"},"content":"     * @param lesson to add","lastModifiedDate":"2021-10-20"},{"lineNumber":20,"author":{"gitId":"tanhuakun"},"content":"     * @return LessonAssignable with added lesson","lastModifiedDate":"2021-10-24"},{"lineNumber":21,"author":{"gitId":"tanhuakun"},"content":"     * @throws CannotAssignException if person is unable to attend lesson","lastModifiedDate":"2021-10-20"},{"lineNumber":22,"author":{"gitId":"tanhuakun"},"content":"     */","lastModifiedDate":"2021-10-20"},{"lineNumber":23,"author":{"gitId":"tanhuakun"},"content":"    LessonAssignable assignLesson(Lesson lesson) throws CannotAssignException;","lastModifiedDate":"2021-10-20"},{"lineNumber":24,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":25,"author":{"gitId":"tanhuakun"},"content":"    /**","lastModifiedDate":"2021-10-25"},{"lineNumber":26,"author":{"gitId":"tanhuakun"},"content":"     * Checks if the index is valid, meaning that it exists.","lastModifiedDate":"2021-10-25"},{"lineNumber":27,"author":{"gitId":"tanhuakun"},"content":"     * @param index of lesson to check.","lastModifiedDate":"2021-10-25"},{"lineNumber":28,"author":{"gitId":"tanhuakun"},"content":"     * @return true if index is a valid lesson.","lastModifiedDate":"2021-10-25"},{"lineNumber":29,"author":{"gitId":"tanhuakun"},"content":"     */","lastModifiedDate":"2021-10-25"},{"lineNumber":30,"author":{"gitId":"tanhuakun"},"content":"    boolean isValidLessonIndex(int index);","lastModifiedDate":"2021-10-25"},{"lineNumber":31,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":32,"author":{"gitId":"tanhuakun"},"content":"    /**","lastModifiedDate":"2021-10-20"},{"lineNumber":33,"author":{"gitId":"tanhuakun"},"content":"     * Immutable way of removing a lesson","lastModifiedDate":"2021-10-20"},{"lineNumber":34,"author":{"gitId":"tanhuakun"},"content":"     * @param index of lesson to remove","lastModifiedDate":"2021-10-20"},{"lineNumber":35,"author":{"gitId":"tanhuakun"},"content":"     * @return LessonAssignable with removed lesson","lastModifiedDate":"2021-10-24"},{"lineNumber":36,"author":{"gitId":"tanhuakun"},"content":"     * @throws IndexOutOfBoundsException if index specified is out of bounds","lastModifiedDate":"2021-10-20"},{"lineNumber":37,"author":{"gitId":"tanhuakun"},"content":"     */","lastModifiedDate":"2021-10-20"},{"lineNumber":38,"author":{"gitId":"tanhuakun"},"content":"    LessonAssignable unassignLesson(int index) throws IndexOutOfBoundsException;","lastModifiedDate":"2021-10-20"},{"lineNumber":39,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":40,"author":{"gitId":"tanhuakun"},"content":"    /**","lastModifiedDate":"2021-10-20"},{"lineNumber":41,"author":{"gitId":"tanhuakun"},"content":"     * Returns the lessons assigned","lastModifiedDate":"2021-10-24"},{"lineNumber":42,"author":{"gitId":"tanhuakun"},"content":"     * @return lessons list","lastModifiedDate":"2021-10-24"},{"lineNumber":43,"author":{"gitId":"tanhuakun"},"content":"     */","lastModifiedDate":"2021-10-24"},{"lineNumber":44,"author":{"gitId":"tanhuakun"},"content":"    List\u003cLesson\u003e getLessons();","lastModifiedDate":"2021-10-24"},{"lineNumber":45,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":46,"author":{"gitId":"tanhuakun"},"content":"    /**","lastModifiedDate":"2021-10-24"},{"lineNumber":47,"author":{"gitId":"tanhuakun"},"content":"     * Change the lessons of this lesson assignable person to the specified lesson list","lastModifiedDate":"2021-10-24"},{"lineNumber":48,"author":{"gitId":"tanhuakun"},"content":"     *","lastModifiedDate":"2021-10-24"},{"lineNumber":49,"author":{"gitId":"tanhuakun"},"content":"     * @param lessons to set with","lastModifiedDate":"2021-10-24"},{"lineNumber":50,"author":{"gitId":"tanhuakun"},"content":"     * @return LessonAssignable with all lessons","lastModifiedDate":"2021-10-24"},{"lineNumber":51,"author":{"gitId":"tanhuakun"},"content":"     * @throws CannotAssignException if any of the lessons cannot be assigned","lastModifiedDate":"2021-10-24"},{"lineNumber":52,"author":{"gitId":"tanhuakun"},"content":"     */","lastModifiedDate":"2021-10-20"},{"lineNumber":53,"author":{"gitId":"tanhuakun"},"content":"    LessonAssignable setLessons(List\u003cLesson\u003e lessons) throws CannotAssignException;","lastModifiedDate":"2021-10-24"},{"lineNumber":54,"author":{"gitId":"tanhuakun"},"content":"}","lastModifiedDate":"2021-10-20"}],"authorContributionMap":{"tanhuakun":54}},{"path":"src/main/java/seedu/address/model/lesson/LessonWithAttendees.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tanhuakun"},"content":"package seedu.address.model.lesson;","lastModifiedDate":"2021-10-20"},{"lineNumber":2,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":3,"author":{"gitId":"tanhuakun"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-20"},{"lineNumber":4,"author":{"gitId":"tanhuakun"},"content":"import java.util.Collections;","lastModifiedDate":"2021-10-20"},{"lineNumber":5,"author":{"gitId":"tanhuakun"},"content":"import java.util.Comparator;","lastModifiedDate":"2021-10-20"},{"lineNumber":6,"author":{"gitId":"tanhuakun"},"content":"import java.util.List;","lastModifiedDate":"2021-10-20"},{"lineNumber":7,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":8,"author":{"gitId":"tanhuakun"},"content":"/**","lastModifiedDate":"2021-10-20"},{"lineNumber":9,"author":{"gitId":"tanhuakun"},"content":" * Lesson that wraps around a Lesson and its corresponding List of attendees","lastModifiedDate":"2021-10-20"},{"lineNumber":10,"author":{"gitId":"tanhuakun"},"content":" * Use for transporting the association between a lesson and its attendees","lastModifiedDate":"2021-10-24"},{"lineNumber":11,"author":{"gitId":"tanhuakun"},"content":" */","lastModifiedDate":"2021-10-20"},{"lineNumber":12,"author":{"gitId":"tanhuakun"},"content":"public class LessonWithAttendees {","lastModifiedDate":"2021-10-20"},{"lineNumber":13,"author":{"gitId":"tanhuakun"},"content":"    private Lesson lesson;","lastModifiedDate":"2021-10-20"},{"lineNumber":14,"author":{"gitId":"tanhuakun"},"content":"    private List\u003cAttendee\u003e attendeeList;","lastModifiedDate":"2021-10-20"},{"lineNumber":15,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":16,"author":{"gitId":"tanhuakun"},"content":"    /**","lastModifiedDate":"2021-10-20"},{"lineNumber":17,"author":{"gitId":"tanhuakun"},"content":"     * Constructor for lesson with attendees","lastModifiedDate":"2021-10-20"},{"lineNumber":18,"author":{"gitId":"tanhuakun"},"content":"     * @param lesson to hold","lastModifiedDate":"2021-10-20"},{"lineNumber":19,"author":{"gitId":"tanhuakun"},"content":"     * @param attendees to hold","lastModifiedDate":"2021-10-20"},{"lineNumber":20,"author":{"gitId":"tanhuakun"},"content":"     */","lastModifiedDate":"2021-10-20"},{"lineNumber":21,"author":{"gitId":"tanhuakun"},"content":"    public LessonWithAttendees(Lesson lesson, List\u003cAttendee\u003e attendees) {","lastModifiedDate":"2021-10-20"},{"lineNumber":22,"author":{"gitId":"tanhuakun"},"content":"        this.lesson \u003d lesson;","lastModifiedDate":"2021-10-20"},{"lineNumber":23,"author":{"gitId":"tanhuakun"},"content":"        this.attendeeList \u003d new ArrayList\u003c\u003e(attendees);","lastModifiedDate":"2021-10-20"},{"lineNumber":24,"author":{"gitId":"tanhuakun"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":25,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":26,"author":{"gitId":"tanhuakun"},"content":"    public Lesson getLesson() {","lastModifiedDate":"2021-10-20"},{"lineNumber":27,"author":{"gitId":"tanhuakun"},"content":"        return lesson;","lastModifiedDate":"2021-10-20"},{"lineNumber":28,"author":{"gitId":"tanhuakun"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":29,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":30,"author":{"gitId":"tanhuakun"},"content":"    public List\u003cAttendee\u003e getAttendeeList() {","lastModifiedDate":"2021-10-20"},{"lineNumber":31,"author":{"gitId":"tanhuakun"},"content":"        return Collections.unmodifiableList(attendeeList);","lastModifiedDate":"2021-10-20"},{"lineNumber":32,"author":{"gitId":"tanhuakun"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":33,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":34,"author":{"gitId":"tanhuakun"},"content":"    public static class SortByLesson implements Comparator\u003cLessonWithAttendees\u003e {","lastModifiedDate":"2021-10-20"},{"lineNumber":35,"author":{"gitId":"tanhuakun"},"content":"        @Override","lastModifiedDate":"2021-10-20"},{"lineNumber":36,"author":{"gitId":"tanhuakun"},"content":"        public int compare(LessonWithAttendees o1, LessonWithAttendees o2) {","lastModifiedDate":"2021-10-20"},{"lineNumber":37,"author":{"gitId":"tanhuakun"},"content":"            return o1.lesson.compareTo(o2.lesson);","lastModifiedDate":"2021-10-20"},{"lineNumber":38,"author":{"gitId":"tanhuakun"},"content":"        }","lastModifiedDate":"2021-10-20"},{"lineNumber":39,"author":{"gitId":"tanhuakun"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":40,"author":{"gitId":"tanhuakun"},"content":"}","lastModifiedDate":"2021-10-20"}],"authorContributionMap":{"tanhuakun":40}},{"path":"src/main/java/seedu/address/model/lesson/NoOverlapLessonList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tanhuakun"},"content":"package seedu.address.model.lesson;","lastModifiedDate":"2021-10-05"},{"lineNumber":2,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":3,"author":{"gitId":"tanhuakun"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-12"},{"lineNumber":4,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":5,"author":{"gitId":"tanhuakun"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-05"},{"lineNumber":6,"author":{"gitId":"tanhuakun"},"content":"import java.util.Collections;","lastModifiedDate":"2021-10-12"},{"lineNumber":7,"author":{"gitId":"tanhuakun"},"content":"import java.util.Iterator;","lastModifiedDate":"2021-10-05"},{"lineNumber":8,"author":{"gitId":"tanhuakun"},"content":"import java.util.List;","lastModifiedDate":"2021-10-12"},{"lineNumber":9,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":10,"author":{"gitId":"tanhuakun"},"content":"import seedu.address.model.lesson.exceptions.OverlappingLessonsException;","lastModifiedDate":"2021-10-05"},{"lineNumber":11,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":12,"author":{"gitId":"tanhuakun"},"content":"/**","lastModifiedDate":"2021-10-05"},{"lineNumber":13,"author":{"gitId":"tanhuakun"},"content":" * Immutable class for a list of lessons that do not overlap","lastModifiedDate":"2021-10-05"},{"lineNumber":14,"author":{"gitId":"tanhuakun"},"content":" */","lastModifiedDate":"2021-10-05"},{"lineNumber":15,"author":{"gitId":"tanhuakun"},"content":"public class NoOverlapLessonList implements Iterable\u003cLesson\u003e {","lastModifiedDate":"2021-10-05"},{"lineNumber":16,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":17,"author":{"gitId":"tanhuakun"},"content":"    public static final String LESSON_OVERLAP \u003d \"One or more lessons overlap\";","lastModifiedDate":"2021-10-12"},{"lineNumber":18,"author":{"gitId":"tanhuakun"},"content":"    public static final String MESSAGE_NO_LESSONS \u003d \"No lessons found\";","lastModifiedDate":"2021-10-12"},{"lineNumber":19,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":20,"author":{"gitId":"tanhuakun"},"content":"    private final ArrayList\u003cLesson\u003e lessonsList;","lastModifiedDate":"2021-10-05"},{"lineNumber":21,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":22,"author":{"gitId":"tanhuakun"},"content":"    public NoOverlapLessonList() {","lastModifiedDate":"2021-10-05"},{"lineNumber":23,"author":{"gitId":"tanhuakun"},"content":"        lessonsList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-05"},{"lineNumber":24,"author":{"gitId":"tanhuakun"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":25,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":26,"author":{"gitId":"tanhuakun"},"content":"    /**","lastModifiedDate":"2021-10-05"},{"lineNumber":27,"author":{"gitId":"tanhuakun"},"content":"     * Private constructor to enforce immutability","lastModifiedDate":"2021-10-05"},{"lineNumber":28,"author":{"gitId":"tanhuakun"},"content":"     */","lastModifiedDate":"2021-10-05"},{"lineNumber":29,"author":{"gitId":"tanhuakun"},"content":"    private NoOverlapLessonList(ArrayList\u003cLesson\u003e lessonsList) {","lastModifiedDate":"2021-10-05"},{"lineNumber":30,"author":{"gitId":"tanhuakun"},"content":"        this.lessonsList \u003d lessonsList;","lastModifiedDate":"2021-10-05"},{"lineNumber":31,"author":{"gitId":"tanhuakun"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":32,"author":{"gitId":"tanhuakun"},"content":"    /**","lastModifiedDate":"2021-10-12"},{"lineNumber":33,"author":{"gitId":"tanhuakun"},"content":"     * Factory method that does the copying of lessons list","lastModifiedDate":"2021-10-12"},{"lineNumber":34,"author":{"gitId":"tanhuakun"},"content":"     * @param lessonsList a list of Lessons","lastModifiedDate":"2021-10-12"},{"lineNumber":35,"author":{"gitId":"tanhuakun"},"content":"     * @return an instance of NoOverlapLessonList with the specified lessons","lastModifiedDate":"2021-10-12"},{"lineNumber":36,"author":{"gitId":"tanhuakun"},"content":"     */","lastModifiedDate":"2021-10-12"},{"lineNumber":37,"author":{"gitId":"tanhuakun"},"content":"    public static NoOverlapLessonList of(List\u003cLesson\u003e lessonsList) throws OverlappingLessonsException {","lastModifiedDate":"2021-10-12"},{"lineNumber":38,"author":{"gitId":"tanhuakun"},"content":"        if (lessonsList \u003d\u003d null || lessonsList.isEmpty()) {","lastModifiedDate":"2021-10-12"},{"lineNumber":39,"author":{"gitId":"tanhuakun"},"content":"            return new NoOverlapLessonList();","lastModifiedDate":"2021-10-12"},{"lineNumber":40,"author":{"gitId":"tanhuakun"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":41,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":42,"author":{"gitId":"tanhuakun"},"content":"        ArrayList\u003cLesson\u003e newList \u003d new ArrayList\u003c\u003e(lessonsList);","lastModifiedDate":"2021-10-12"},{"lineNumber":43,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":44,"author":{"gitId":"tanhuakun"},"content":"        if (doAnyLessonsOverlap(lessonsList)) {","lastModifiedDate":"2021-10-12"},{"lineNumber":45,"author":{"gitId":"tanhuakun"},"content":"            throw new OverlappingLessonsException();","lastModifiedDate":"2021-10-12"},{"lineNumber":46,"author":{"gitId":"tanhuakun"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":47,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":48,"author":{"gitId":"tanhuakun"},"content":"        return new NoOverlapLessonList(newList);","lastModifiedDate":"2021-10-12"},{"lineNumber":49,"author":{"gitId":"tanhuakun"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":50,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":51,"author":{"gitId":"tanhuakun"},"content":"    /**","lastModifiedDate":"2021-10-12"},{"lineNumber":52,"author":{"gitId":"tanhuakun"},"content":"     * Check if any lessons in a list overlaps","lastModifiedDate":"2021-10-12"},{"lineNumber":53,"author":{"gitId":"tanhuakun"},"content":"     * @param toCheck List to check","lastModifiedDate":"2021-10-12"},{"lineNumber":54,"author":{"gitId":"tanhuakun"},"content":"     * @return true if any lessons in the list overlaps","lastModifiedDate":"2021-10-12"},{"lineNumber":55,"author":{"gitId":"tanhuakun"},"content":"     */","lastModifiedDate":"2021-10-12"},{"lineNumber":56,"author":{"gitId":"tanhuakun"},"content":"    public static boolean doAnyLessonsOverlap(List\u003cLesson\u003e toCheck) {","lastModifiedDate":"2021-10-12"},{"lineNumber":57,"author":{"gitId":"tanhuakun"},"content":"        for (int i \u003d 0; i \u003c toCheck.size(); i++) {","lastModifiedDate":"2021-10-12"},{"lineNumber":58,"author":{"gitId":"tanhuakun"},"content":"            for (int j \u003d 0; j \u003c i; j++) {","lastModifiedDate":"2021-10-12"},{"lineNumber":59,"author":{"gitId":"tanhuakun"},"content":"                if (toCheck.get(i).doLessonsOverlap(toCheck.get(j))) {","lastModifiedDate":"2021-10-12"},{"lineNumber":60,"author":{"gitId":"tanhuakun"},"content":"                    return true;","lastModifiedDate":"2021-10-12"},{"lineNumber":61,"author":{"gitId":"tanhuakun"},"content":"                }","lastModifiedDate":"2021-10-12"},{"lineNumber":62,"author":{"gitId":"tanhuakun"},"content":"            }","lastModifiedDate":"2021-10-12"},{"lineNumber":63,"author":{"gitId":"tanhuakun"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":64,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":65,"author":{"gitId":"tanhuakun"},"content":"        return false;","lastModifiedDate":"2021-10-12"},{"lineNumber":66,"author":{"gitId":"tanhuakun"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":67,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":68,"author":{"gitId":"tanhuakun"},"content":"    /**","lastModifiedDate":"2021-10-05"},{"lineNumber":69,"author":{"gitId":"tanhuakun"},"content":"     * Adds a lesson to the lessons list, however the lesson must not overlap with current lessons","lastModifiedDate":"2021-10-05"},{"lineNumber":70,"author":{"gitId":"tanhuakun"},"content":"     * @param lesson to add to the list","lastModifiedDate":"2021-10-05"},{"lineNumber":71,"author":{"gitId":"tanhuakun"},"content":"     * @throws OverlappingLessonsException if lesson overlaps","lastModifiedDate":"2021-10-05"},{"lineNumber":72,"author":{"gitId":"tanhuakun"},"content":"     */","lastModifiedDate":"2021-10-05"},{"lineNumber":73,"author":{"gitId":"tanhuakun"},"content":"    public NoOverlapLessonList addLesson(Lesson lesson) throws OverlappingLessonsException {","lastModifiedDate":"2021-10-05"},{"lineNumber":74,"author":{"gitId":"tanhuakun"},"content":"        requireNonNull(lesson);","lastModifiedDate":"2021-10-12"},{"lineNumber":75,"author":{"gitId":"tanhuakun"},"content":"        if (doesLessonOverlap(lesson)) {","lastModifiedDate":"2021-10-05"},{"lineNumber":76,"author":{"gitId":"tanhuakun"},"content":"            throw new OverlappingLessonsException();","lastModifiedDate":"2021-10-05"},{"lineNumber":77,"author":{"gitId":"tanhuakun"},"content":"        }","lastModifiedDate":"2021-10-05"},{"lineNumber":78,"author":{"gitId":"tanhuakun"},"content":"        ArrayList\u003cLesson\u003e newList \u003d new ArrayList\u003c\u003e(lessonsList);","lastModifiedDate":"2021-10-05"},{"lineNumber":79,"author":{"gitId":"tanhuakun"},"content":"        newList.add(lesson);","lastModifiedDate":"2021-10-05"},{"lineNumber":80,"author":{"gitId":"tanhuakun"},"content":"        return new NoOverlapLessonList(newList);","lastModifiedDate":"2021-10-05"},{"lineNumber":81,"author":{"gitId":"tanhuakun"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":82,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":83,"author":{"gitId":"tanhuakun"},"content":"    /**","lastModifiedDate":"2021-10-05"},{"lineNumber":84,"author":{"gitId":"tanhuakun"},"content":"     * Removes the lesson at index","lastModifiedDate":"2021-10-05"},{"lineNumber":85,"author":{"gitId":"tanhuakun"},"content":"     * @param index to remove","lastModifiedDate":"2021-10-05"},{"lineNumber":86,"author":{"gitId":"tanhuakun"},"content":"     * @throws IndexOutOfBoundsException if index is out of bounds","lastModifiedDate":"2021-10-05"},{"lineNumber":87,"author":{"gitId":"tanhuakun"},"content":"     */","lastModifiedDate":"2021-10-05"},{"lineNumber":88,"author":{"gitId":"tanhuakun"},"content":"    public NoOverlapLessonList removeLesson(int index) throws IndexOutOfBoundsException {","lastModifiedDate":"2021-10-05"},{"lineNumber":89,"author":{"gitId":"tanhuakun"},"content":"        if (!isValidIndex(index)) {","lastModifiedDate":"2021-10-05"},{"lineNumber":90,"author":{"gitId":"tanhuakun"},"content":"            throw new IndexOutOfBoundsException();","lastModifiedDate":"2021-10-05"},{"lineNumber":91,"author":{"gitId":"tanhuakun"},"content":"        }","lastModifiedDate":"2021-10-05"},{"lineNumber":92,"author":{"gitId":"tanhuakun"},"content":"        ArrayList\u003cLesson\u003e newList \u003d new ArrayList\u003c\u003e(lessonsList);","lastModifiedDate":"2021-10-05"},{"lineNumber":93,"author":{"gitId":"tanhuakun"},"content":"        newList.remove(index);","lastModifiedDate":"2021-10-05"},{"lineNumber":94,"author":{"gitId":"tanhuakun"},"content":"        return new NoOverlapLessonList(newList);","lastModifiedDate":"2021-10-05"},{"lineNumber":95,"author":{"gitId":"tanhuakun"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":96,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":97,"author":{"gitId":"tanhuakun"},"content":"    /**","lastModifiedDate":"2021-10-05"},{"lineNumber":98,"author":{"gitId":"tanhuakun"},"content":"     * Checks if given index for accessing the list is valid","lastModifiedDate":"2021-10-05"},{"lineNumber":99,"author":{"gitId":"tanhuakun"},"content":"     * @param index to check","lastModifiedDate":"2021-10-05"},{"lineNumber":100,"author":{"gitId":"tanhuakun"},"content":"     * @return true if the index is valid, false otherwise","lastModifiedDate":"2021-10-05"},{"lineNumber":101,"author":{"gitId":"tanhuakun"},"content":"     */","lastModifiedDate":"2021-10-05"},{"lineNumber":102,"author":{"gitId":"tanhuakun"},"content":"    public boolean isValidIndex(int index) {","lastModifiedDate":"2021-10-05"},{"lineNumber":103,"author":{"gitId":"tanhuakun"},"content":"        return index \u003e\u003d 0 \u0026\u0026 index \u003c lessonsList.size();","lastModifiedDate":"2021-10-05"},{"lineNumber":104,"author":{"gitId":"tanhuakun"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":105,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":106,"author":{"gitId":"tanhuakun"},"content":"    /**","lastModifiedDate":"2021-10-05"},{"lineNumber":107,"author":{"gitId":"tanhuakun"},"content":"     * Checks if lesson overlaps with any lesson in the list","lastModifiedDate":"2021-10-05"},{"lineNumber":108,"author":{"gitId":"tanhuakun"},"content":"     * @param lesson to check with","lastModifiedDate":"2021-10-05"},{"lineNumber":109,"author":{"gitId":"tanhuakun"},"content":"     * @return true if lesson overlaps, false otherwise","lastModifiedDate":"2021-10-05"},{"lineNumber":110,"author":{"gitId":"tanhuakun"},"content":"     */","lastModifiedDate":"2021-10-05"},{"lineNumber":111,"author":{"gitId":"tanhuakun"},"content":"    public boolean doesLessonOverlap(Lesson lesson) {","lastModifiedDate":"2021-10-05"},{"lineNumber":112,"author":{"gitId":"tanhuakun"},"content":"        for (Lesson l : lessonsList) {","lastModifiedDate":"2021-10-05"},{"lineNumber":113,"author":{"gitId":"tanhuakun"},"content":"            if (l.doLessonsOverlap(lesson)) {","lastModifiedDate":"2021-10-05"},{"lineNumber":114,"author":{"gitId":"tanhuakun"},"content":"                return true;","lastModifiedDate":"2021-10-05"},{"lineNumber":115,"author":{"gitId":"tanhuakun"},"content":"            }","lastModifiedDate":"2021-10-05"},{"lineNumber":116,"author":{"gitId":"tanhuakun"},"content":"        }","lastModifiedDate":"2021-10-05"},{"lineNumber":117,"author":{"gitId":"tanhuakun"},"content":"        return false;","lastModifiedDate":"2021-10-05"},{"lineNumber":118,"author":{"gitId":"tanhuakun"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":119,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":120,"author":{"gitId":"tanhuakun"},"content":"    /**","lastModifiedDate":"2021-10-12"},{"lineNumber":121,"author":{"gitId":"tanhuakun"},"content":"     * Get lessons in a readonly format","lastModifiedDate":"2021-10-12"},{"lineNumber":122,"author":{"gitId":"tanhuakun"},"content":"     * @return lessons in a readonly list","lastModifiedDate":"2021-10-12"},{"lineNumber":123,"author":{"gitId":"tanhuakun"},"content":"     */","lastModifiedDate":"2021-10-12"},{"lineNumber":124,"author":{"gitId":"tanhuakun"},"content":"    public List\u003cLesson\u003e getLessons() {","lastModifiedDate":"2021-10-12"},{"lineNumber":125,"author":{"gitId":"tanhuakun"},"content":"        return Collections.unmodifiableList(lessonsList);","lastModifiedDate":"2021-10-12"},{"lineNumber":126,"author":{"gitId":"tanhuakun"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":127,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":128,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":129,"author":{"gitId":"tanhuakun"},"content":"    @Override","lastModifiedDate":"2021-10-05"},{"lineNumber":130,"author":{"gitId":"tanhuakun"},"content":"    public Iterator\u003cLesson\u003e iterator() {","lastModifiedDate":"2021-10-05"},{"lineNumber":131,"author":{"gitId":"tanhuakun"},"content":"        return lessonsList.iterator();","lastModifiedDate":"2021-10-05"},{"lineNumber":132,"author":{"gitId":"tanhuakun"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":133,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":134,"author":{"gitId":"tanhuakun"},"content":"    @Override","lastModifiedDate":"2021-10-05"},{"lineNumber":135,"author":{"gitId":"tanhuakun"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-05"},{"lineNumber":136,"author":{"gitId":"tanhuakun"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2021-10-05"},{"lineNumber":137,"author":{"gitId":"tanhuakun"},"content":"            return true;","lastModifiedDate":"2021-10-05"},{"lineNumber":138,"author":{"gitId":"tanhuakun"},"content":"        }","lastModifiedDate":"2021-10-05"},{"lineNumber":139,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":140,"author":{"gitId":"tanhuakun"},"content":"        if (!(other instanceof NoOverlapLessonList)) {","lastModifiedDate":"2021-10-05"},{"lineNumber":141,"author":{"gitId":"tanhuakun"},"content":"            return false;","lastModifiedDate":"2021-10-05"},{"lineNumber":142,"author":{"gitId":"tanhuakun"},"content":"        }","lastModifiedDate":"2021-10-05"},{"lineNumber":143,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":144,"author":{"gitId":"tanhuakun"},"content":"        NoOverlapLessonList otherList \u003d (NoOverlapLessonList) other;","lastModifiedDate":"2021-10-05"},{"lineNumber":145,"author":{"gitId":"tanhuakun"},"content":"        return lessonsList.equals(otherList.lessonsList);","lastModifiedDate":"2021-10-05"},{"lineNumber":146,"author":{"gitId":"tanhuakun"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":147,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":148,"author":{"gitId":"tanhuakun"},"content":"    @Override","lastModifiedDate":"2021-10-05"},{"lineNumber":149,"author":{"gitId":"tanhuakun"},"content":"    public int hashCode() {","lastModifiedDate":"2021-10-05"},{"lineNumber":150,"author":{"gitId":"tanhuakun"},"content":"        return lessonsList.hashCode();","lastModifiedDate":"2021-10-05"},{"lineNumber":151,"author":{"gitId":"tanhuakun"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":152,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":153,"author":{"gitId":"tanhuakun"},"content":"    @Override","lastModifiedDate":"2021-10-05"},{"lineNumber":154,"author":{"gitId":"tanhuakun"},"content":"    public String toString() {","lastModifiedDate":"2021-10-05"},{"lineNumber":155,"author":{"gitId":"tanhuakun"},"content":"        if (lessonsList.size() \u003d\u003d 0) {","lastModifiedDate":"2021-10-05"},{"lineNumber":156,"author":{"gitId":"tanhuakun"},"content":"            return MESSAGE_NO_LESSONS;","lastModifiedDate":"2021-10-05"},{"lineNumber":157,"author":{"gitId":"tanhuakun"},"content":"        }","lastModifiedDate":"2021-10-05"},{"lineNumber":158,"author":{"gitId":"tanhuakun"},"content":"        final StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2021-10-05"},{"lineNumber":159,"author":{"gitId":"tanhuakun"},"content":"        int index \u003d 1;","lastModifiedDate":"2021-10-12"},{"lineNumber":160,"author":{"gitId":"tanhuakun"},"content":"        for (Lesson l : lessonsList) {","lastModifiedDate":"2021-10-05"},{"lineNumber":161,"author":{"gitId":"tanhuakun"},"content":"            builder.append(index).append(\". \").append(l.toString()).append(\" \");","lastModifiedDate":"2021-10-12"},{"lineNumber":162,"author":{"gitId":"tanhuakun"},"content":"            index++;","lastModifiedDate":"2021-10-12"},{"lineNumber":163,"author":{"gitId":"tanhuakun"},"content":"        }","lastModifiedDate":"2021-10-05"},{"lineNumber":164,"author":{"gitId":"tanhuakun"},"content":"        return builder.toString();","lastModifiedDate":"2021-10-05"},{"lineNumber":165,"author":{"gitId":"tanhuakun"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":166,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":167,"author":{"gitId":"tanhuakun"},"content":"}","lastModifiedDate":"2021-10-05"}],"authorContributionMap":{"tanhuakun":167}},{"path":"src/main/java/seedu/address/model/lesson/Subject.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tanhuakun"},"content":"package seedu.address.model.lesson;","lastModifiedDate":"2021-10-05"},{"lineNumber":2,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":3,"author":{"gitId":"tanhuakun"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-05"},{"lineNumber":4,"author":{"gitId":"tanhuakun"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2021-10-05"},{"lineNumber":5,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":6,"author":{"gitId":"tanhuakun"},"content":"/**","lastModifiedDate":"2021-10-05"},{"lineNumber":7,"author":{"gitId":"tanhuakun"},"content":" * Represent the subject or topic of a lesson","lastModifiedDate":"2021-10-05"},{"lineNumber":8,"author":{"gitId":"tanhuakun"},"content":" * Guarantees: immutable, is properly formatted as declared in {@link #isValidSubject(String)}","lastModifiedDate":"2021-10-12"},{"lineNumber":9,"author":{"gitId":"tanhuakun"},"content":" */","lastModifiedDate":"2021-10-05"},{"lineNumber":10,"author":{"gitId":"tanhuakun"},"content":"public class Subject {","lastModifiedDate":"2021-10-05"},{"lineNumber":11,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":12,"author":{"gitId":"tanhuakun"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2021-10-05"},{"lineNumber":13,"author":{"gitId":"tanhuakun"},"content":"            \"Names should have at least one alphanumeric character, and it should not be blank\";","lastModifiedDate":"2021-10-05"},{"lineNumber":14,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":15,"author":{"gitId":"tanhuakun"},"content":"    /*","lastModifiedDate":"2021-10-05"},{"lineNumber":16,"author":{"gitId":"tanhuakun"},"content":"     * The subject name should have at least one alphanumeric character","lastModifiedDate":"2021-10-05"},{"lineNumber":17,"author":{"gitId":"tanhuakun"},"content":"     */","lastModifiedDate":"2021-10-05"},{"lineNumber":18,"author":{"gitId":"tanhuakun"},"content":"    public static final String VALIDATION_REGEX \u003d \"^.*[\\\\p{Alnum}]+.*$\";","lastModifiedDate":"2021-10-05"},{"lineNumber":19,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":20,"author":{"gitId":"tanhuakun"},"content":"    private final String subjectName;","lastModifiedDate":"2021-10-05"},{"lineNumber":21,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":22,"author":{"gitId":"tanhuakun"},"content":"    /**","lastModifiedDate":"2021-10-05"},{"lineNumber":23,"author":{"gitId":"tanhuakun"},"content":"     * Constructs a {@code Subject}.","lastModifiedDate":"2021-10-05"},{"lineNumber":24,"author":{"gitId":"tanhuakun"},"content":"     *","lastModifiedDate":"2021-10-05"},{"lineNumber":25,"author":{"gitId":"tanhuakun"},"content":"     * @param subjectName A valid string representation of what the subject is","lastModifiedDate":"2021-10-05"},{"lineNumber":26,"author":{"gitId":"tanhuakun"},"content":"     */","lastModifiedDate":"2021-10-05"},{"lineNumber":27,"author":{"gitId":"tanhuakun"},"content":"    public Subject(String subjectName) {","lastModifiedDate":"2021-10-05"},{"lineNumber":28,"author":{"gitId":"tanhuakun"},"content":"        requireNonNull(subjectName);","lastModifiedDate":"2021-10-05"},{"lineNumber":29,"author":{"gitId":"tanhuakun"},"content":"        checkArgument(isValidSubject(subjectName), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-12"},{"lineNumber":30,"author":{"gitId":"tanhuakun"},"content":"        this.subjectName \u003d subjectName;","lastModifiedDate":"2021-10-05"},{"lineNumber":31,"author":{"gitId":"tanhuakun"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":32,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":33,"author":{"gitId":"tanhuakun"},"content":"    public String getSubjectName() {","lastModifiedDate":"2021-10-12"},{"lineNumber":34,"author":{"gitId":"tanhuakun"},"content":"        return subjectName;","lastModifiedDate":"2021-10-12"},{"lineNumber":35,"author":{"gitId":"tanhuakun"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":36,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":37,"author":{"gitId":"tanhuakun"},"content":"    /**","lastModifiedDate":"2021-10-05"},{"lineNumber":38,"author":{"gitId":"tanhuakun"},"content":"     * Returns true if a given string is a valid name.","lastModifiedDate":"2021-10-05"},{"lineNumber":39,"author":{"gitId":"tanhuakun"},"content":"     */","lastModifiedDate":"2021-10-05"},{"lineNumber":40,"author":{"gitId":"tanhuakun"},"content":"    public static boolean isValidSubject(String test) {","lastModifiedDate":"2021-10-12"},{"lineNumber":41,"author":{"gitId":"tanhuakun"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2021-10-05"},{"lineNumber":42,"author":{"gitId":"tanhuakun"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":43,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":44,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":45,"author":{"gitId":"tanhuakun"},"content":"    @Override","lastModifiedDate":"2021-10-05"},{"lineNumber":46,"author":{"gitId":"tanhuakun"},"content":"    public String toString() {","lastModifiedDate":"2021-10-05"},{"lineNumber":47,"author":{"gitId":"tanhuakun"},"content":"        return subjectName;","lastModifiedDate":"2021-10-05"},{"lineNumber":48,"author":{"gitId":"tanhuakun"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":49,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":50,"author":{"gitId":"tanhuakun"},"content":"    @Override","lastModifiedDate":"2021-10-05"},{"lineNumber":51,"author":{"gitId":"tanhuakun"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-05"},{"lineNumber":52,"author":{"gitId":"tanhuakun"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-10-05"},{"lineNumber":53,"author":{"gitId":"tanhuakun"},"content":"                || (other instanceof Subject // instanceof handles nulls","lastModifiedDate":"2021-10-05"},{"lineNumber":54,"author":{"gitId":"tanhuakun"},"content":"                \u0026\u0026 subjectName.equals(((Subject) other).subjectName)); // state check","lastModifiedDate":"2021-10-05"},{"lineNumber":55,"author":{"gitId":"tanhuakun"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":56,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":57,"author":{"gitId":"tanhuakun"},"content":"    @Override","lastModifiedDate":"2021-10-05"},{"lineNumber":58,"author":{"gitId":"tanhuakun"},"content":"    public int hashCode() {","lastModifiedDate":"2021-10-05"},{"lineNumber":59,"author":{"gitId":"tanhuakun"},"content":"        return subjectName.hashCode();","lastModifiedDate":"2021-10-05"},{"lineNumber":60,"author":{"gitId":"tanhuakun"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":61,"author":{"gitId":"tanhuakun"},"content":"}","lastModifiedDate":"2021-10-05"}],"authorContributionMap":{"tanhuakun":61}},{"path":"src/main/java/seedu/address/model/lesson/Timeslot.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tanhuakun"},"content":"package seedu.address.model.lesson;","lastModifiedDate":"2021-10-05"},{"lineNumber":2,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":3,"author":{"gitId":"tanhuakun"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-05"},{"lineNumber":4,"author":{"gitId":"tanhuakun"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2021-10-05"},{"lineNumber":5,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":6,"author":{"gitId":"tanhuakun"},"content":"import java.time.LocalTime;","lastModifiedDate":"2021-10-05"},{"lineNumber":7,"author":{"gitId":"tanhuakun"},"content":"import java.util.Objects;","lastModifiedDate":"2021-10-05"},{"lineNumber":8,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":9,"author":{"gitId":"tanhuakun"},"content":"/**","lastModifiedDate":"2021-10-05"},{"lineNumber":10,"author":{"gitId":"tanhuakun"},"content":" * Represents a timeslot, for example 10pm - 12pm","lastModifiedDate":"2021-10-05"},{"lineNumber":11,"author":{"gitId":"tanhuakun"},"content":" */","lastModifiedDate":"2021-10-05"},{"lineNumber":12,"author":{"gitId":"tanhuakun"},"content":"public class Timeslot implements Comparable\u003cTimeslot\u003e {","lastModifiedDate":"2021-10-16"},{"lineNumber":13,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":14,"author":{"gitId":"tanhuakun"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2021-10-05"},{"lineNumber":15,"author":{"gitId":"tanhuakun"},"content":"            \"Timings must be in the 24H format HH:MM and the start time must be before the end time\";","lastModifiedDate":"2021-10-05"},{"lineNumber":16,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":17,"author":{"gitId":"tanhuakun"},"content":"    public static final String VALIDATION_REGEX \u003d \"(0[0-9]|1[0-9]|2[0-3]):([0-5][0-9])\";","lastModifiedDate":"2021-10-05"},{"lineNumber":18,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":19,"author":{"gitId":"tanhuakun"},"content":"    // timings","lastModifiedDate":"2021-10-05"},{"lineNumber":20,"author":{"gitId":"tanhuakun"},"content":"    private final LocalTime startTime;","lastModifiedDate":"2021-10-05"},{"lineNumber":21,"author":{"gitId":"tanhuakun"},"content":"    private final LocalTime endTime;","lastModifiedDate":"2021-10-05"},{"lineNumber":22,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":23,"author":{"gitId":"tanhuakun"},"content":"    /**","lastModifiedDate":"2021-10-05"},{"lineNumber":24,"author":{"gitId":"tanhuakun"},"content":"     * Constructs a {@code Timeslot}","lastModifiedDate":"2021-10-05"},{"lineNumber":25,"author":{"gitId":"tanhuakun"},"content":"     *","lastModifiedDate":"2021-10-05"},{"lineNumber":26,"author":{"gitId":"tanhuakun"},"content":"     * @param startTimeStr valid String representation of the start time","lastModifiedDate":"2021-10-05"},{"lineNumber":27,"author":{"gitId":"tanhuakun"},"content":"     * @param endTimeStr valid String representation of the end time","lastModifiedDate":"2021-10-05"},{"lineNumber":28,"author":{"gitId":"tanhuakun"},"content":"     */","lastModifiedDate":"2021-10-05"},{"lineNumber":29,"author":{"gitId":"tanhuakun"},"content":"    public Timeslot(String startTimeStr, String endTimeStr) {","lastModifiedDate":"2021-10-05"},{"lineNumber":30,"author":{"gitId":"tanhuakun"},"content":"        requireNonNull(startTimeStr);","lastModifiedDate":"2021-10-05"},{"lineNumber":31,"author":{"gitId":"tanhuakun"},"content":"        requireNonNull(endTimeStr);","lastModifiedDate":"2021-10-05"},{"lineNumber":32,"author":{"gitId":"tanhuakun"},"content":"        checkArgument(isValidTimeslot(startTimeStr, endTimeStr), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-05"},{"lineNumber":33,"author":{"gitId":"tanhuakun"},"content":"        startTime \u003d LocalTime.parse(startTimeStr);","lastModifiedDate":"2021-10-05"},{"lineNumber":34,"author":{"gitId":"tanhuakun"},"content":"        endTime \u003d LocalTime.parse((endTimeStr));","lastModifiedDate":"2021-10-05"},{"lineNumber":35,"author":{"gitId":"tanhuakun"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":36,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":37,"author":{"gitId":"tanhuakun"},"content":"    public LocalTime getEndTime() {","lastModifiedDate":"2021-10-12"},{"lineNumber":38,"author":{"gitId":"tanhuakun"},"content":"        return endTime;","lastModifiedDate":"2021-10-12"},{"lineNumber":39,"author":{"gitId":"tanhuakun"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":40,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":41,"author":{"gitId":"tanhuakun"},"content":"    public LocalTime getStartTime() {","lastModifiedDate":"2021-10-12"},{"lineNumber":42,"author":{"gitId":"tanhuakun"},"content":"        return startTime;","lastModifiedDate":"2021-10-12"},{"lineNumber":43,"author":{"gitId":"tanhuakun"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":44,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":45,"author":{"gitId":"tanhuakun"},"content":"    /**","lastModifiedDate":"2021-10-05"},{"lineNumber":46,"author":{"gitId":"tanhuakun"},"content":"     * Checks if string representation is valid","lastModifiedDate":"2021-10-05"},{"lineNumber":47,"author":{"gitId":"tanhuakun"},"content":"     *","lastModifiedDate":"2021-10-05"},{"lineNumber":48,"author":{"gitId":"tanhuakun"},"content":"     * @param startTimeStr HH:MM start time","lastModifiedDate":"2021-10-05"},{"lineNumber":49,"author":{"gitId":"tanhuakun"},"content":"     * @param endTimeStr HH:MM end time","lastModifiedDate":"2021-10-05"},{"lineNumber":50,"author":{"gitId":"tanhuakun"},"content":"     * @return true if both string representations are valid and the start time is before end time","lastModifiedDate":"2021-10-05"},{"lineNumber":51,"author":{"gitId":"tanhuakun"},"content":"     */","lastModifiedDate":"2021-10-05"},{"lineNumber":52,"author":{"gitId":"tanhuakun"},"content":"    public static boolean isValidTimeslot(String startTimeStr, String endTimeStr) {","lastModifiedDate":"2021-10-05"},{"lineNumber":53,"author":{"gitId":"tanhuakun"},"content":"        if (!startTimeStr.matches(VALIDATION_REGEX) || !endTimeStr.matches(VALIDATION_REGEX)) {","lastModifiedDate":"2021-10-05"},{"lineNumber":54,"author":{"gitId":"tanhuakun"},"content":"            return false;","lastModifiedDate":"2021-10-05"},{"lineNumber":55,"author":{"gitId":"tanhuakun"},"content":"        }","lastModifiedDate":"2021-10-05"},{"lineNumber":56,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":57,"author":{"gitId":"tanhuakun"},"content":"        LocalTime startTime \u003d LocalTime.parse(startTimeStr);","lastModifiedDate":"2021-10-05"},{"lineNumber":58,"author":{"gitId":"tanhuakun"},"content":"        LocalTime endTime \u003d LocalTime.parse((endTimeStr));","lastModifiedDate":"2021-10-05"},{"lineNumber":59,"author":{"gitId":"tanhuakun"},"content":"        return startTime.isBefore(endTime);","lastModifiedDate":"2021-10-05"},{"lineNumber":60,"author":{"gitId":"tanhuakun"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":61,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":62,"author":{"gitId":"tanhuakun"},"content":"    /**","lastModifiedDate":"2021-10-05"},{"lineNumber":63,"author":{"gitId":"tanhuakun"},"content":"     * Checks if timings overlap, for example one timeslot starts while another one is ongoing","lastModifiedDate":"2021-10-05"},{"lineNumber":64,"author":{"gitId":"tanhuakun"},"content":"     * @param other other timeslot to check against","lastModifiedDate":"2021-10-05"},{"lineNumber":65,"author":{"gitId":"tanhuakun"},"content":"     * @return true if timings overlap","lastModifiedDate":"2021-10-05"},{"lineNumber":66,"author":{"gitId":"tanhuakun"},"content":"     */","lastModifiedDate":"2021-10-05"},{"lineNumber":67,"author":{"gitId":"tanhuakun"},"content":"    public boolean doTimingsOverlap(Timeslot other) {","lastModifiedDate":"2021-10-05"},{"lineNumber":68,"author":{"gitId":"tanhuakun"},"content":"        return startTime.isBefore(other.endTime)","lastModifiedDate":"2021-10-05"},{"lineNumber":69,"author":{"gitId":"tanhuakun"},"content":"                \u0026\u0026 other.startTime.isBefore(endTime);","lastModifiedDate":"2021-10-05"},{"lineNumber":70,"author":{"gitId":"tanhuakun"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":71,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":72,"author":{"gitId":"tanhuakun"},"content":"    @Override","lastModifiedDate":"2021-10-05"},{"lineNumber":73,"author":{"gitId":"tanhuakun"},"content":"    public String toString() {","lastModifiedDate":"2021-10-05"},{"lineNumber":74,"author":{"gitId":"tanhuakun"},"content":"        return String.format(\"%s-%s\", startTime, endTime);","lastModifiedDate":"2021-10-05"},{"lineNumber":75,"author":{"gitId":"tanhuakun"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":76,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":77,"author":{"gitId":"tanhuakun"},"content":"    @Override","lastModifiedDate":"2021-10-05"},{"lineNumber":78,"author":{"gitId":"tanhuakun"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-05"},{"lineNumber":79,"author":{"gitId":"tanhuakun"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-10-05"},{"lineNumber":80,"author":{"gitId":"tanhuakun"},"content":"                || (other instanceof Timeslot // instanceof handles nulls","lastModifiedDate":"2021-10-05"},{"lineNumber":81,"author":{"gitId":"tanhuakun"},"content":"                \u0026\u0026 startTime.equals(((Timeslot) other).startTime)","lastModifiedDate":"2021-10-05"},{"lineNumber":82,"author":{"gitId":"tanhuakun"},"content":"                \u0026\u0026 endTime.equals(((Timeslot) other).endTime)); // state check","lastModifiedDate":"2021-10-05"},{"lineNumber":83,"author":{"gitId":"tanhuakun"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":84,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":85,"author":{"gitId":"tanhuakun"},"content":"    @Override","lastModifiedDate":"2021-10-05"},{"lineNumber":86,"author":{"gitId":"tanhuakun"},"content":"    public int hashCode() {","lastModifiedDate":"2021-10-05"},{"lineNumber":87,"author":{"gitId":"tanhuakun"},"content":"        return Objects.hash(startTime, endTime);","lastModifiedDate":"2021-10-05"},{"lineNumber":88,"author":{"gitId":"tanhuakun"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":89,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":90,"author":{"gitId":"tanhuakun"},"content":"    @Override","lastModifiedDate":"2021-10-16"},{"lineNumber":91,"author":{"gitId":"tanhuakun"},"content":"    public int compareTo(Timeslot o) {","lastModifiedDate":"2021-10-16"},{"lineNumber":92,"author":{"gitId":"tanhuakun"},"content":"        if (startTime.compareTo(o.startTime) \u003d\u003d 0) {","lastModifiedDate":"2021-10-16"},{"lineNumber":93,"author":{"gitId":"tanhuakun"},"content":"            // if same start time, use end time","lastModifiedDate":"2021-10-16"},{"lineNumber":94,"author":{"gitId":"tanhuakun"},"content":"            return endTime.compareTo(o.endTime);","lastModifiedDate":"2021-10-16"},{"lineNumber":95,"author":{"gitId":"tanhuakun"},"content":"        }","lastModifiedDate":"2021-10-16"},{"lineNumber":96,"author":{"gitId":"tanhuakun"},"content":"        // compares based on start time","lastModifiedDate":"2021-10-16"},{"lineNumber":97,"author":{"gitId":"tanhuakun"},"content":"        return startTime.compareTo(o.startTime);","lastModifiedDate":"2021-10-16"},{"lineNumber":98,"author":{"gitId":"tanhuakun"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":99,"author":{"gitId":"tanhuakun"},"content":"}","lastModifiedDate":"2021-10-05"}],"authorContributionMap":{"tanhuakun":99}},{"path":"src/main/java/seedu/address/model/lesson/exceptions/CannotAssignException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tanhuakun"},"content":"package seedu.address.model.lesson.exceptions;","lastModifiedDate":"2021-10-20"},{"lineNumber":2,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":3,"author":{"gitId":"tanhuakun"},"content":"public class CannotAssignException extends RuntimeException {","lastModifiedDate":"2021-10-20"},{"lineNumber":4,"author":{"gitId":"tanhuakun"},"content":"    public static final String MESSAGE \u003d \"Cannot assign the lesson because: \";","lastModifiedDate":"2021-10-20"},{"lineNumber":5,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":6,"author":{"gitId":"tanhuakun"},"content":"    public CannotAssignException(String cause) {","lastModifiedDate":"2021-10-20"},{"lineNumber":7,"author":{"gitId":"tanhuakun"},"content":"        super(MESSAGE + cause);","lastModifiedDate":"2021-10-20"},{"lineNumber":8,"author":{"gitId":"tanhuakun"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":9,"author":{"gitId":"tanhuakun"},"content":"}","lastModifiedDate":"2021-10-20"}],"authorContributionMap":{"tanhuakun":9}},{"path":"src/main/java/seedu/address/model/lesson/exceptions/OverlappingLessonsException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tanhuakun"},"content":"package seedu.address.model.lesson.exceptions;","lastModifiedDate":"2021-10-05"},{"lineNumber":2,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":3,"author":{"gitId":"tanhuakun"},"content":"public class OverlappingLessonsException extends RuntimeException {","lastModifiedDate":"2021-10-05"},{"lineNumber":4,"author":{"gitId":"tanhuakun"},"content":"    public static final String MESSAGE \u003d \"New lesson overlaps with existing lessons\";","lastModifiedDate":"2021-10-20"},{"lineNumber":5,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":6,"author":{"gitId":"tanhuakun"},"content":"    public OverlappingLessonsException() {","lastModifiedDate":"2021-10-05"},{"lineNumber":7,"author":{"gitId":"tanhuakun"},"content":"        super(MESSAGE);","lastModifiedDate":"2021-10-20"},{"lineNumber":8,"author":{"gitId":"tanhuakun"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":9,"author":{"gitId":"tanhuakun"},"content":"}","lastModifiedDate":"2021-10-05"}],"authorContributionMap":{"tanhuakun":9}},{"path":"src/main/java/seedu/address/model/person/Exam.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tanhuakun"},"content":"package seedu.address.model.person;","lastModifiedDate":"2021-10-16"},{"lineNumber":2,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":3,"author":{"gitId":"tanhuakun"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2021-10-16"},{"lineNumber":4,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":5,"author":{"gitId":"tanhuakun"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-10-16"},{"lineNumber":6,"author":{"gitId":"tanhuakun"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-10-16"},{"lineNumber":7,"author":{"gitId":"tanhuakun"},"content":"import java.util.Objects;","lastModifiedDate":"2021-10-16"},{"lineNumber":8,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":9,"author":{"gitId":"tanhuakun"},"content":"import seedu.address.model.lesson.Subject;","lastModifiedDate":"2021-10-16"},{"lineNumber":10,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":11,"author":{"gitId":"tanhuakun"},"content":"/**","lastModifiedDate":"2021-10-16"},{"lineNumber":12,"author":{"gitId":"tanhuakun"},"content":" * Represents an exam that the Person has. Has a subject and a datetime","lastModifiedDate":"2021-10-16"},{"lineNumber":13,"author":{"gitId":"tanhuakun"},"content":" * Compares exam based on exam dates","lastModifiedDate":"2021-10-16"},{"lineNumber":14,"author":{"gitId":"tanhuakun"},"content":" */","lastModifiedDate":"2021-10-16"},{"lineNumber":15,"author":{"gitId":"tanhuakun"},"content":"public class Exam implements Comparable\u003cExam\u003e {","lastModifiedDate":"2021-10-16"},{"lineNumber":16,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":17,"author":{"gitId":"tanhuakun"},"content":"    private static final DateTimeFormatter examDateTimeFormat \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HH:mm\");","lastModifiedDate":"2021-10-19"},{"lineNumber":18,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":19,"author":{"gitId":"tanhuakun"},"content":"    private final Subject subject;","lastModifiedDate":"2021-10-16"},{"lineNumber":20,"author":{"gitId":"tanhuakun"},"content":"    private final LocalDateTime dateTime;","lastModifiedDate":"2021-10-16"},{"lineNumber":21,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":22,"author":{"gitId":"tanhuakun"},"content":"    /**","lastModifiedDate":"2021-10-16"},{"lineNumber":23,"author":{"gitId":"tanhuakun"},"content":"     * Constructs an exam with a subject and a date time","lastModifiedDate":"2021-10-16"},{"lineNumber":24,"author":{"gitId":"tanhuakun"},"content":"     * @param subject or topic of the exam","lastModifiedDate":"2021-10-16"},{"lineNumber":25,"author":{"gitId":"tanhuakun"},"content":"     * @param dateTime when the exam will occur","lastModifiedDate":"2021-10-16"},{"lineNumber":26,"author":{"gitId":"tanhuakun"},"content":"     */","lastModifiedDate":"2021-10-16"},{"lineNumber":27,"author":{"gitId":"tanhuakun"},"content":"    public Exam(Subject subject, LocalDateTime dateTime) {","lastModifiedDate":"2021-10-16"},{"lineNumber":28,"author":{"gitId":"tanhuakun"},"content":"        requireAllNonNull(subject, dateTime);","lastModifiedDate":"2021-10-16"},{"lineNumber":29,"author":{"gitId":"tanhuakun"},"content":"        this.subject \u003d subject;","lastModifiedDate":"2021-10-16"},{"lineNumber":30,"author":{"gitId":"tanhuakun"},"content":"        this.dateTime \u003d dateTime;","lastModifiedDate":"2021-10-16"},{"lineNumber":31,"author":{"gitId":"tanhuakun"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":32,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":33,"author":{"gitId":"tanhuakun"},"content":"    public Subject getSubject() {","lastModifiedDate":"2021-10-19"},{"lineNumber":34,"author":{"gitId":"tanhuakun"},"content":"        return subject;","lastModifiedDate":"2021-10-19"},{"lineNumber":35,"author":{"gitId":"tanhuakun"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":36,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":37,"author":{"gitId":"tanhuakun"},"content":"    public LocalDateTime getDateTime() {","lastModifiedDate":"2021-10-19"},{"lineNumber":38,"author":{"gitId":"tanhuakun"},"content":"        return dateTime;","lastModifiedDate":"2021-10-19"},{"lineNumber":39,"author":{"gitId":"tanhuakun"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":40,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":41,"author":{"gitId":"tanhuakun"},"content":"    @Override","lastModifiedDate":"2021-10-16"},{"lineNumber":42,"author":{"gitId":"tanhuakun"},"content":"    public String toString() {","lastModifiedDate":"2021-10-16"},{"lineNumber":43,"author":{"gitId":"tanhuakun"},"content":"        return String.format(\"%s: %s\", dateTime.format(examDateTimeFormat), subject);","lastModifiedDate":"2021-11-07"},{"lineNumber":44,"author":{"gitId":"tanhuakun"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":45,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":46,"author":{"gitId":"tanhuakun"},"content":"    @Override","lastModifiedDate":"2021-10-16"},{"lineNumber":47,"author":{"gitId":"tanhuakun"},"content":"    public boolean equals(Object o) {","lastModifiedDate":"2021-10-16"},{"lineNumber":48,"author":{"gitId":"tanhuakun"},"content":"        if (this \u003d\u003d o) {","lastModifiedDate":"2021-10-16"},{"lineNumber":49,"author":{"gitId":"tanhuakun"},"content":"            return true;","lastModifiedDate":"2021-10-16"},{"lineNumber":50,"author":{"gitId":"tanhuakun"},"content":"        }","lastModifiedDate":"2021-10-16"},{"lineNumber":51,"author":{"gitId":"tanhuakun"},"content":"        if (o \u003d\u003d null || !(o instanceof Exam)) {","lastModifiedDate":"2021-10-16"},{"lineNumber":52,"author":{"gitId":"tanhuakun"},"content":"            return false;","lastModifiedDate":"2021-10-16"},{"lineNumber":53,"author":{"gitId":"tanhuakun"},"content":"        }","lastModifiedDate":"2021-10-16"},{"lineNumber":54,"author":{"gitId":"tanhuakun"},"content":"        Exam exam \u003d (Exam) o;","lastModifiedDate":"2021-10-16"},{"lineNumber":55,"author":{"gitId":"tanhuakun"},"content":"        return Objects.equals(subject, exam.subject) \u0026\u0026 Objects.equals(dateTime, exam.dateTime);","lastModifiedDate":"2021-10-16"},{"lineNumber":56,"author":{"gitId":"tanhuakun"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":57,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":58,"author":{"gitId":"tanhuakun"},"content":"    @Override","lastModifiedDate":"2021-10-16"},{"lineNumber":59,"author":{"gitId":"tanhuakun"},"content":"    public int hashCode() {","lastModifiedDate":"2021-10-16"},{"lineNumber":60,"author":{"gitId":"tanhuakun"},"content":"        return Objects.hash(subject, dateTime);","lastModifiedDate":"2021-10-16"},{"lineNumber":61,"author":{"gitId":"tanhuakun"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":62,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":63,"author":{"gitId":"tanhuakun"},"content":"    @Override","lastModifiedDate":"2021-10-16"},{"lineNumber":64,"author":{"gitId":"tanhuakun"},"content":"    public int compareTo(Exam o) {","lastModifiedDate":"2021-10-16"},{"lineNumber":65,"author":{"gitId":"tanhuakun"},"content":"        return dateTime.compareTo(o.dateTime);","lastModifiedDate":"2021-10-16"},{"lineNumber":66,"author":{"gitId":"tanhuakun"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":67,"author":{"gitId":"tanhuakun"},"content":"}","lastModifiedDate":"2021-10-16"}],"authorContributionMap":{"tanhuakun":67}},{"path":"src/main/java/seedu/address/model/person/Person.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2016-08-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"jeremy-7007"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-12"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2017-05-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":6,"author":{"gitId":"tanhuakun"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-16"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-03-07"},{"lineNumber":8,"author":{"gitId":"jeremy-7007"},"content":"import java.util.HashMap;","lastModifiedDate":"2021-10-26"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-03-26"},{"lineNumber":10,"author":{"gitId":"tanhuakun"},"content":"import java.util.List;","lastModifiedDate":"2021-10-16"},{"lineNumber":11,"author":{"gitId":"jeremy-7007"},"content":"import java.util.Map;","lastModifiedDate":"2021-10-26"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Objects;","lastModifiedDate":"2017-01-19"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-07"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":15,"author":{"gitId":"eltonyeh"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-10-20"},{"lineNumber":16,"author":{"gitId":"eltonyeh"},"content":"import seedu.address.model.TaskAssignable;","lastModifiedDate":"2021-10-20"},{"lineNumber":17,"author":{"gitId":"eltonyeh"},"content":"import seedu.address.model.id.HasUniqueId;","lastModifiedDate":"2021-10-10"},{"lineNumber":18,"author":{"gitId":"eltonyeh"},"content":"import seedu.address.model.id.UniqueId;","lastModifiedDate":"2021-10-10"},{"lineNumber":19,"author":{"gitId":"tanhuakun"},"content":"import seedu.address.model.id.exceptions.DuplicateIdException;","lastModifiedDate":"2021-10-23"},{"lineNumber":20,"author":{"gitId":"tanhuakun"},"content":"import seedu.address.model.id.exceptions.IdNotFoundException;","lastModifiedDate":"2021-10-23"},{"lineNumber":21,"author":{"gitId":"tanhuakun"},"content":"import seedu.address.model.lesson.Attendee;","lastModifiedDate":"2021-10-20"},{"lineNumber":22,"author":{"gitId":"tanhuakun"},"content":"import seedu.address.model.lesson.Lesson;","lastModifiedDate":"2021-10-12"},{"lineNumber":23,"author":{"gitId":"tanhuakun"},"content":"import seedu.address.model.lesson.LessonAssignable;","lastModifiedDate":"2021-10-20"},{"lineNumber":24,"author":{"gitId":"tanhuakun"},"content":"import seedu.address.model.lesson.NoOverlapLessonList;","lastModifiedDate":"2021-10-05"},{"lineNumber":25,"author":{"gitId":"tanhuakun"},"content":"import seedu.address.model.lesson.exceptions.CannotAssignException;","lastModifiedDate":"2021-10-20"},{"lineNumber":26,"author":{"gitId":"tanhuakun"},"content":"import seedu.address.model.lesson.exceptions.OverlappingLessonsException;","lastModifiedDate":"2021-10-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-07"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":" * Represents a Person in the address book.","lastModifiedDate":"2016-08-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":" * Guarantees: details are present and not null, field values are validated, immutable.","lastModifiedDate":"2017-12-20"},{"lineNumber":32,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":33,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":34,"author":{"gitId":"tanhuakun"},"content":"public class Person implements HasUniqueId, Attendee,","lastModifiedDate":"2021-10-20"},{"lineNumber":35,"author":{"gitId":"tanhuakun"},"content":"        TaskAssignable, LessonAssignable {","lastModifiedDate":"2021-10-20"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    // Identity fields","lastModifiedDate":"2018-04-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private final Name name;","lastModifiedDate":"2017-12-20"},{"lineNumber":39,"author":{"gitId":"eltonyeh"},"content":"    private final UniqueId id;","lastModifiedDate":"2021-10-10"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    private final Phone phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    private final Email email;","lastModifiedDate":"2017-12-20"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    // Data fields","lastModifiedDate":"2018-04-19"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    private final Address address;","lastModifiedDate":"2018-04-19"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    private final Set\u003cTag\u003e tags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2018-03-26"},{"lineNumber":46,"author":{"gitId":"jeremy-7007"},"content":"    private final Set\u003cUniqueId\u003e assignedTaskIds \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2021-10-12"},{"lineNumber":47,"author":{"gitId":"jeremy-7007"},"content":"    private final Map\u003cUniqueId, Boolean\u003e tasksCompletion \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2021-10-26"},{"lineNumber":48,"author":{"gitId":"tanhuakun"},"content":"    private final NoOverlapLessonList lessonsList;","lastModifiedDate":"2021-10-05"},{"lineNumber":49,"author":{"gitId":"tanhuakun"},"content":"    private final List\u003cExam\u003e exams \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-16"},{"lineNumber":50,"author":{"gitId":"tanhuakun"},"content":"    private final Set\u003cUniqueId\u003e assignedGroupIds \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2021-10-23"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     * Every field must be present and not null.","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"tanhuakun"},"content":"    public Person(Name name, Phone phone, Email email, Address address, Set\u003cTag\u003e tags,","lastModifiedDate":"2021-10-05"},{"lineNumber":56,"author":{"gitId":"jeremy-7007"},"content":"                  Set\u003cUniqueId\u003e assignedTaskIds, Map\u003cUniqueId, Boolean\u003e tasksCompletion,","lastModifiedDate":"2021-10-26"},{"lineNumber":57,"author":{"gitId":"jeremy-7007"},"content":"                  NoOverlapLessonList lessonsList, List\u003cExam\u003e exams, Set\u003cUniqueId\u003e assignedGroupIds) {","lastModifiedDate":"2021-10-26"},{"lineNumber":58,"author":{"gitId":"eltonyeh"},"content":"        this.id \u003d UniqueId.generateId(this);","lastModifiedDate":"2021-10-10"},{"lineNumber":59,"author":{"gitId":"tanhuakun"},"content":"        requireAllNonNull(name, phone, email, address, tags, assignedTaskIds, id, lessonsList, exams, assignedGroupIds);","lastModifiedDate":"2021-10-23"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        this.name \u003d name;","lastModifiedDate":"2017-12-20"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        this.email \u003d email;","lastModifiedDate":"2017-12-20"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        this.address \u003d address;","lastModifiedDate":"2017-12-20"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        this.tags.addAll(tags);","lastModifiedDate":"2018-03-26"},{"lineNumber":65,"author":{"gitId":"jeremy-7007"},"content":"        this.assignedTaskIds.addAll(assignedTaskIds);","lastModifiedDate":"2021-10-12"},{"lineNumber":66,"author":{"gitId":"jeremy-7007"},"content":"        this.tasksCompletion.putAll(tasksCompletion);","lastModifiedDate":"2021-10-26"},{"lineNumber":67,"author":{"gitId":"tanhuakun"},"content":"        this.lessonsList \u003d lessonsList;","lastModifiedDate":"2021-10-16"},{"lineNumber":68,"author":{"gitId":"tanhuakun"},"content":"        this.exams.addAll(exams);","lastModifiedDate":"2021-10-16"},{"lineNumber":69,"author":{"gitId":"tanhuakun"},"content":"        this.assignedGroupIds.addAll(assignedGroupIds);","lastModifiedDate":"2021-10-23"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-10-12"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     * Every field must be present and not null.","lastModifiedDate":"2021-10-12"},{"lineNumber":74,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-10-12"},{"lineNumber":75,"author":{"gitId":"eltonyeh"},"content":"    public Person(UniqueId uniqueId, Name name, Phone phone, Email email, Address address, Set\u003cTag\u003e tags,","lastModifiedDate":"2021-10-12"},{"lineNumber":76,"author":{"gitId":"jeremy-7007"},"content":"                  Set\u003cUniqueId\u003e assignedTaskIds, Map\u003cUniqueId, Boolean\u003e tasksCompletion,","lastModifiedDate":"2021-10-26"},{"lineNumber":77,"author":{"gitId":"jeremy-7007"},"content":"                  NoOverlapLessonList lessonsList, List\u003cExam\u003e exams, Set\u003cUniqueId\u003e assignedGroupIds) {","lastModifiedDate":"2021-10-26"},{"lineNumber":78,"author":{"gitId":"tanhuakun"},"content":"        requireAllNonNull(name, phone, email, address, tags, assignedTaskIds, uniqueId, lessonsList, exams,","lastModifiedDate":"2021-10-23"},{"lineNumber":79,"author":{"gitId":"tanhuakun"},"content":"                assignedGroupIds);","lastModifiedDate":"2021-10-23"},{"lineNumber":80,"author":{"gitId":"eltonyeh"},"content":"        this.id \u003d uniqueId;","lastModifiedDate":"2021-10-12"},{"lineNumber":81,"author":{"gitId":"jeremy-7007"},"content":"        uniqueId.setOwner(this);","lastModifiedDate":"2021-10-12"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        this.name \u003d name;","lastModifiedDate":"2017-12-20"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        this.email \u003d email;","lastModifiedDate":"2017-12-20"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        this.address \u003d address;","lastModifiedDate":"2017-12-20"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        this.tags.addAll(tags);","lastModifiedDate":"2018-03-26"},{"lineNumber":87,"author":{"gitId":"jeremy-7007"},"content":"        this.assignedTaskIds.addAll(assignedTaskIds);","lastModifiedDate":"2021-10-13"},{"lineNumber":88,"author":{"gitId":"jeremy-7007"},"content":"        this.tasksCompletion.putAll(tasksCompletion);","lastModifiedDate":"2021-10-26"},{"lineNumber":89,"author":{"gitId":"tanhuakun"},"content":"        this.lessonsList \u003d lessonsList;","lastModifiedDate":"2021-10-16"},{"lineNumber":90,"author":{"gitId":"tanhuakun"},"content":"        this.exams.addAll(exams);","lastModifiedDate":"2021-10-16"},{"lineNumber":91,"author":{"gitId":"tanhuakun"},"content":"        this.assignedGroupIds.addAll(assignedGroupIds);","lastModifiedDate":"2021-10-23"},{"lineNumber":92,"author":{"gitId":"tanhuakun"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":93,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":94,"author":{"gitId":"tanhuakun"},"content":"    /**","lastModifiedDate":"2021-10-23"},{"lineNumber":95,"author":{"gitId":"tanhuakun"},"content":"     * Constructs a person based on anther person immutably","lastModifiedDate":"2021-10-23"},{"lineNumber":96,"author":{"gitId":"tanhuakun"},"content":"     * @param toCopy person to copy","lastModifiedDate":"2021-10-23"},{"lineNumber":97,"author":{"gitId":"tanhuakun"},"content":"     */","lastModifiedDate":"2021-10-23"},{"lineNumber":98,"author":{"gitId":"tanhuakun"},"content":"    public Person (Person toCopy) {","lastModifiedDate":"2021-10-23"},{"lineNumber":99,"author":{"gitId":"tanhuakun"},"content":"        this.id \u003d toCopy.id;","lastModifiedDate":"2021-10-23"},{"lineNumber":100,"author":{"gitId":"tanhuakun"},"content":"        this.name \u003d toCopy.name;","lastModifiedDate":"2021-10-23"},{"lineNumber":101,"author":{"gitId":"tanhuakun"},"content":"        this.phone \u003d toCopy.phone;","lastModifiedDate":"2021-10-23"},{"lineNumber":102,"author":{"gitId":"tanhuakun"},"content":"        this.email \u003d toCopy.email;","lastModifiedDate":"2021-10-23"},{"lineNumber":103,"author":{"gitId":"tanhuakun"},"content":"        this.address \u003d toCopy.address;","lastModifiedDate":"2021-10-23"},{"lineNumber":104,"author":{"gitId":"tanhuakun"},"content":"        this.tags.addAll(toCopy.tags);","lastModifiedDate":"2021-10-23"},{"lineNumber":105,"author":{"gitId":"tanhuakun"},"content":"        this.assignedTaskIds.addAll(toCopy.assignedTaskIds);","lastModifiedDate":"2021-10-23"},{"lineNumber":106,"author":{"gitId":"jeremy-7007"},"content":"        this.tasksCompletion.putAll(toCopy.tasksCompletion);","lastModifiedDate":"2021-10-26"},{"lineNumber":107,"author":{"gitId":"tanhuakun"},"content":"        this.lessonsList \u003d toCopy.lessonsList;","lastModifiedDate":"2021-10-23"},{"lineNumber":108,"author":{"gitId":"tanhuakun"},"content":"        this.exams.addAll(toCopy.exams);","lastModifiedDate":"2021-10-23"},{"lineNumber":109,"author":{"gitId":"tanhuakun"},"content":"        this.assignedGroupIds.addAll(toCopy.assignedGroupIds);","lastModifiedDate":"2021-10-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    public Name getName() {","lastModifiedDate":"2017-07-12"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        return name;","lastModifiedDate":"2017-12-20"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":115,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    public Phone getPhone() {","lastModifiedDate":"2017-07-12"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        return phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    public Email getEmail() {","lastModifiedDate":"2017-07-12"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        return email;","lastModifiedDate":"2017-12-20"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":124,"author":{"gitId":"eltonyeh"},"content":"    public UniqueId getId() {","lastModifiedDate":"2021-10-10"},{"lineNumber":125,"author":{"gitId":"eltonyeh"},"content":"        return id;","lastModifiedDate":"2021-10-10"},{"lineNumber":126,"author":{"gitId":"eltonyeh"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":127,"author":{"gitId":"eltonyeh"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    public Address getAddress() {","lastModifiedDate":"2017-07-12"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        return address;","lastModifiedDate":"2017-12-20"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-12"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-12"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-07"},{"lineNumber":133,"author":{"gitId":"-"},"content":"     * Returns an immutable tag set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2017-03-07"},{"lineNumber":134,"author":{"gitId":"-"},"content":"     * if modification is attempted.","lastModifiedDate":"2017-03-07"},{"lineNumber":135,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-07"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    public Set\u003cTag\u003e getTags() {","lastModifiedDate":"2017-03-07"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        return Collections.unmodifiableSet(tags);","lastModifiedDate":"2018-03-26"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-10-12"},{"lineNumber":141,"author":{"gitId":"jeremy-7007"},"content":"     * Returns an immutable tag set, which throws {@code UnsupportedOperationException}","lastModifiedDate":"2021-10-12"},{"lineNumber":142,"author":{"gitId":"jeremy-7007"},"content":"     * if modification is attempted.","lastModifiedDate":"2021-10-12"},{"lineNumber":143,"author":{"gitId":"jeremy-7007"},"content":"     */","lastModifiedDate":"2021-10-12"},{"lineNumber":144,"author":{"gitId":"jeremy-7007"},"content":"    public Set\u003cUniqueId\u003e getAssignedTaskIds() {","lastModifiedDate":"2021-10-12"},{"lineNumber":145,"author":{"gitId":"jeremy-7007"},"content":"        return Collections.unmodifiableSet(assignedTaskIds);","lastModifiedDate":"2021-10-12"},{"lineNumber":146,"author":{"gitId":"jeremy-7007"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":147,"author":{"gitId":"jeremy-7007"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":148,"author":{"gitId":"jeremy-7007"},"content":"    /**","lastModifiedDate":"2021-10-26"},{"lineNumber":149,"author":{"gitId":"jeremy-7007"},"content":"     * Method to get the map of assigned tasks and their completion status","lastModifiedDate":"2021-10-26"},{"lineNumber":150,"author":{"gitId":"jeremy-7007"},"content":"     *","lastModifiedDate":"2021-10-26"},{"lineNumber":151,"author":{"gitId":"jeremy-7007"},"content":"     * @return the Person\u0027s tasksCompletion map","lastModifiedDate":"2021-10-26"},{"lineNumber":152,"author":{"gitId":"jeremy-7007"},"content":"     */","lastModifiedDate":"2021-10-26"},{"lineNumber":153,"author":{"gitId":"jeremy-7007"},"content":"    @Override","lastModifiedDate":"2021-10-26"},{"lineNumber":154,"author":{"gitId":"jeremy-7007"},"content":"    public Map\u003cUniqueId, Boolean\u003e getTasksCompletion() {","lastModifiedDate":"2021-10-26"},{"lineNumber":155,"author":{"gitId":"jeremy-7007"},"content":"        return Collections.unmodifiableMap(tasksCompletion);","lastModifiedDate":"2021-10-26"},{"lineNumber":156,"author":{"gitId":"jeremy-7007"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":157,"author":{"gitId":"jeremy-7007"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":158,"author":{"gitId":"tanhuakun"},"content":"    public NoOverlapLessonList getLessonsList() {","lastModifiedDate":"2021-10-05"},{"lineNumber":159,"author":{"gitId":"tanhuakun"},"content":"        return lessonsList;","lastModifiedDate":"2021-10-05"},{"lineNumber":160,"author":{"gitId":"tanhuakun"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":161,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":162,"author":{"gitId":"tanhuakun"},"content":"    public List\u003cExam\u003e getExams() {","lastModifiedDate":"2021-10-16"},{"lineNumber":163,"author":{"gitId":"tanhuakun"},"content":"        return Collections.unmodifiableList(exams);","lastModifiedDate":"2021-10-16"},{"lineNumber":164,"author":{"gitId":"tanhuakun"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":165,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":166,"author":{"gitId":"tanhuakun"},"content":"    public Set\u003cUniqueId\u003e getAssignedGroupIds() {","lastModifiedDate":"2021-10-23"},{"lineNumber":167,"author":{"gitId":"tanhuakun"},"content":"        return Collections.unmodifiableSet(assignedGroupIds);","lastModifiedDate":"2021-10-23"},{"lineNumber":168,"author":{"gitId":"tanhuakun"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":169,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":170,"author":{"gitId":"Neha-5678"},"content":"    /**","lastModifiedDate":"2021-10-28"},{"lineNumber":171,"author":{"gitId":"Neha-5678"},"content":"     * Checks if this person contains the group id.","lastModifiedDate":"2021-10-28"},{"lineNumber":172,"author":{"gitId":"Neha-5678"},"content":"     *","lastModifiedDate":"2021-10-28"},{"lineNumber":173,"author":{"gitId":"Neha-5678"},"content":"     * @param id to check.","lastModifiedDate":"2021-10-28"},{"lineNumber":174,"author":{"gitId":"Neha-5678"},"content":"     * @return true if this person contains the id.","lastModifiedDate":"2021-10-28"},{"lineNumber":175,"author":{"gitId":"Neha-5678"},"content":"     */","lastModifiedDate":"2021-10-28"},{"lineNumber":176,"author":{"gitId":"Neha-5678"},"content":"    public boolean containsGroupId(UniqueId id) {","lastModifiedDate":"2021-10-28"},{"lineNumber":177,"author":{"gitId":"Neha-5678"},"content":"        return assignedGroupIds.contains(id);","lastModifiedDate":"2021-10-28"},{"lineNumber":178,"author":{"gitId":"Neha-5678"},"content":"    }","lastModifiedDate":"2021-10-28"},{"lineNumber":179,"author":{"gitId":"Neha-5678"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":180,"author":{"gitId":"tanhuakun"},"content":"    @Override","lastModifiedDate":"2021-10-24"},{"lineNumber":181,"author":{"gitId":"tanhuakun"},"content":"    public boolean canAssignLesson(Lesson lesson) {","lastModifiedDate":"2021-10-24"},{"lineNumber":182,"author":{"gitId":"tanhuakun"},"content":"        return !lessonsList.doesLessonOverlap(lesson);","lastModifiedDate":"2021-10-12"},{"lineNumber":183,"author":{"gitId":"tanhuakun"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":184,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":185,"author":{"gitId":"tanhuakun"},"content":"    @Override","lastModifiedDate":"2021-10-20"},{"lineNumber":186,"author":{"gitId":"tanhuakun"},"content":"    public String getAttendeeDetails() {","lastModifiedDate":"2021-10-20"},{"lineNumber":187,"author":{"gitId":"tanhuakun"},"content":"        return name.toString();","lastModifiedDate":"2021-10-20"},{"lineNumber":188,"author":{"gitId":"tanhuakun"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":189,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":190,"author":{"gitId":"tanhuakun"},"content":"    @Override","lastModifiedDate":"2021-10-20"},{"lineNumber":191,"author":{"gitId":"tanhuakun"},"content":"    public Person assignLesson(Lesson lesson) throws CannotAssignException {","lastModifiedDate":"2021-10-20"},{"lineNumber":192,"author":{"gitId":"tanhuakun"},"content":"        NoOverlapLessonList newList;","lastModifiedDate":"2021-10-19"},{"lineNumber":193,"author":{"gitId":"tanhuakun"},"content":"        try {","lastModifiedDate":"2021-10-19"},{"lineNumber":194,"author":{"gitId":"tanhuakun"},"content":"            newList \u003d lessonsList.addLesson(lesson);","lastModifiedDate":"2021-10-19"},{"lineNumber":195,"author":{"gitId":"tanhuakun"},"content":"        } catch (OverlappingLessonsException e) {","lastModifiedDate":"2021-10-19"},{"lineNumber":196,"author":{"gitId":"tanhuakun"},"content":"            throw new CannotAssignException(e.getMessage());","lastModifiedDate":"2021-10-20"},{"lineNumber":197,"author":{"gitId":"tanhuakun"},"content":"        }","lastModifiedDate":"2021-10-19"},{"lineNumber":198,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":199,"author":{"gitId":"jeremy-7007"},"content":"        return new Person(id, name, phone, email, address, tags, assignedTaskIds, tasksCompletion,","lastModifiedDate":"2021-10-26"},{"lineNumber":200,"author":{"gitId":"jeremy-7007"},"content":"                newList, exams, assignedGroupIds);","lastModifiedDate":"2021-10-26"},{"lineNumber":201,"author":{"gitId":"tanhuakun"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":202,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":203,"author":{"gitId":"tanhuakun"},"content":"    @Override","lastModifiedDate":"2021-10-25"},{"lineNumber":204,"author":{"gitId":"tanhuakun"},"content":"    public boolean isValidLessonIndex(int index) {","lastModifiedDate":"2021-10-25"},{"lineNumber":205,"author":{"gitId":"tanhuakun"},"content":"        return lessonsList.isValidIndex(index);","lastModifiedDate":"2021-10-25"},{"lineNumber":206,"author":{"gitId":"tanhuakun"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":207,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":208,"author":{"gitId":"tanhuakun"},"content":"    @Override","lastModifiedDate":"2021-10-20"},{"lineNumber":209,"author":{"gitId":"tanhuakun"},"content":"    public Person unassignLesson(int index) throws IndexOutOfBoundsException {","lastModifiedDate":"2021-10-20"},{"lineNumber":210,"author":{"gitId":"tanhuakun"},"content":"        NoOverlapLessonList newList \u003d lessonsList.removeLesson(index);","lastModifiedDate":"2021-10-19"},{"lineNumber":211,"author":{"gitId":"jeremy-7007"},"content":"        return new Person(id, name, phone, email, address, tags, assignedTaskIds, tasksCompletion,","lastModifiedDate":"2021-10-26"},{"lineNumber":212,"author":{"gitId":"jeremy-7007"},"content":"                newList, exams, assignedGroupIds);","lastModifiedDate":"2021-10-26"},{"lineNumber":213,"author":{"gitId":"tanhuakun"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":214,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":215,"author":{"gitId":"tanhuakun"},"content":"    @Override","lastModifiedDate":"2021-10-20"},{"lineNumber":216,"author":{"gitId":"tanhuakun"},"content":"    public List\u003cLesson\u003e getLessons() {","lastModifiedDate":"2021-10-24"},{"lineNumber":217,"author":{"gitId":"tanhuakun"},"content":"        return Collections.unmodifiableList(lessonsList.getLessons());","lastModifiedDate":"2021-10-24"},{"lineNumber":218,"author":{"gitId":"tanhuakun"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":219,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":220,"author":{"gitId":"tanhuakun"},"content":"    @Override","lastModifiedDate":"2021-10-24"},{"lineNumber":221,"author":{"gitId":"tanhuakun"},"content":"    public LessonAssignable setLessons(List\u003cLesson\u003e lessons) throws CannotAssignException {","lastModifiedDate":"2021-10-24"},{"lineNumber":222,"author":{"gitId":"tanhuakun"},"content":"        if (NoOverlapLessonList.doAnyLessonsOverlap(lessons)) {","lastModifiedDate":"2021-10-24"},{"lineNumber":223,"author":{"gitId":"tanhuakun"},"content":"            throw new CannotAssignException(OverlappingLessonsException.MESSAGE);","lastModifiedDate":"2021-10-24"},{"lineNumber":224,"author":{"gitId":"tanhuakun"},"content":"        }","lastModifiedDate":"2021-10-24"},{"lineNumber":225,"author":{"gitId":"tanhuakun"},"content":"        NoOverlapLessonList newList \u003d NoOverlapLessonList.of(lessons);","lastModifiedDate":"2021-10-24"},{"lineNumber":226,"author":{"gitId":"jeremy-7007"},"content":"        return new Person(id, name, phone, email, address, tags, assignedTaskIds, tasksCompletion,","lastModifiedDate":"2021-10-26"},{"lineNumber":227,"author":{"gitId":"jeremy-7007"},"content":"                newList, exams, assignedGroupIds);","lastModifiedDate":"2021-10-26"},{"lineNumber":228,"author":{"gitId":"tanhuakun"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":229,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":230,"author":{"gitId":"tanhuakun"},"content":"    /**","lastModifiedDate":"2021-10-19"},{"lineNumber":231,"author":{"gitId":"tanhuakun"},"content":"     * Immutable way of adding an exam","lastModifiedDate":"2021-10-19"},{"lineNumber":232,"author":{"gitId":"tanhuakun"},"content":"     * @param e exam to add","lastModifiedDate":"2021-10-19"},{"lineNumber":233,"author":{"gitId":"tanhuakun"},"content":"     * @return Person with exam added","lastModifiedDate":"2021-10-19"},{"lineNumber":234,"author":{"gitId":"tanhuakun"},"content":"     */","lastModifiedDate":"2021-10-19"},{"lineNumber":235,"author":{"gitId":"tanhuakun"},"content":"    public Person addExam(Exam e) {","lastModifiedDate":"2021-10-19"},{"lineNumber":236,"author":{"gitId":"tanhuakun"},"content":"        Person newPerson \u003d new Person(this);","lastModifiedDate":"2021-10-23"},{"lineNumber":237,"author":{"gitId":"tanhuakun"},"content":"        newPerson.exams.add(e);","lastModifiedDate":"2021-10-19"},{"lineNumber":238,"author":{"gitId":"tanhuakun"},"content":"        return newPerson;","lastModifiedDate":"2021-10-19"},{"lineNumber":239,"author":{"gitId":"tanhuakun"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":240,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":241,"author":{"gitId":"tanhuakun"},"content":"    /**","lastModifiedDate":"2021-10-19"},{"lineNumber":242,"author":{"gitId":"tanhuakun"},"content":"     * Immutable way of removing an exam","lastModifiedDate":"2021-10-19"},{"lineNumber":243,"author":{"gitId":"tanhuakun"},"content":"     * @param index of exam to remove","lastModifiedDate":"2021-10-19"},{"lineNumber":244,"author":{"gitId":"tanhuakun"},"content":"     * @return Person with examed removed","lastModifiedDate":"2021-10-19"},{"lineNumber":245,"author":{"gitId":"tanhuakun"},"content":"     * @throws IndexOutOfBoundsException if specified index is out of bounds","lastModifiedDate":"2021-10-19"},{"lineNumber":246,"author":{"gitId":"tanhuakun"},"content":"     */","lastModifiedDate":"2021-10-19"},{"lineNumber":247,"author":{"gitId":"tanhuakun"},"content":"    public Person removeExam(int index) throws IndexOutOfBoundsException {","lastModifiedDate":"2021-10-19"},{"lineNumber":248,"author":{"gitId":"tanhuakun"},"content":"        if (index \u003c 0 || index \u003e\u003d exams.size()) {","lastModifiedDate":"2021-10-19"},{"lineNumber":249,"author":{"gitId":"tanhuakun"},"content":"            throw new IndexOutOfBoundsException();","lastModifiedDate":"2021-10-19"},{"lineNumber":250,"author":{"gitId":"tanhuakun"},"content":"        }","lastModifiedDate":"2021-10-19"},{"lineNumber":251,"author":{"gitId":"tanhuakun"},"content":"        Person newPerson \u003d new Person(this);","lastModifiedDate":"2021-10-23"},{"lineNumber":252,"author":{"gitId":"tanhuakun"},"content":"        newPerson.exams.remove(index);","lastModifiedDate":"2021-10-19"},{"lineNumber":253,"author":{"gitId":"tanhuakun"},"content":"        return newPerson;","lastModifiedDate":"2021-10-19"},{"lineNumber":254,"author":{"gitId":"tanhuakun"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":255,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":256,"author":{"gitId":"tanhuakun"},"content":"    /**","lastModifiedDate":"2021-10-23"},{"lineNumber":257,"author":{"gitId":"tanhuakun"},"content":"     * Checks if this person has the specified group id","lastModifiedDate":"2021-10-23"},{"lineNumber":258,"author":{"gitId":"tanhuakun"},"content":"     * @param id to check","lastModifiedDate":"2021-10-23"},{"lineNumber":259,"author":{"gitId":"tanhuakun"},"content":"     * @return true if present","lastModifiedDate":"2021-10-23"},{"lineNumber":260,"author":{"gitId":"tanhuakun"},"content":"     */","lastModifiedDate":"2021-10-23"},{"lineNumber":261,"author":{"gitId":"tanhuakun"},"content":"    public boolean hasGroupId(UniqueId id) {","lastModifiedDate":"2021-10-23"},{"lineNumber":262,"author":{"gitId":"tanhuakun"},"content":"        return assignedGroupIds.contains(id);","lastModifiedDate":"2021-10-23"},{"lineNumber":263,"author":{"gitId":"tanhuakun"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":264,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":265,"author":{"gitId":"tanhuakun"},"content":"    /**","lastModifiedDate":"2021-10-23"},{"lineNumber":266,"author":{"gitId":"tanhuakun"},"content":"     * Adds the group id to the person. Group id is presumed to belong to a group.","lastModifiedDate":"2021-10-23"},{"lineNumber":267,"author":{"gitId":"tanhuakun"},"content":"     * @param id to add.","lastModifiedDate":"2021-10-23"},{"lineNumber":268,"author":{"gitId":"tanhuakun"},"content":"     * @return new Person containing the added id.","lastModifiedDate":"2021-10-23"},{"lineNumber":269,"author":{"gitId":"tanhuakun"},"content":"     */","lastModifiedDate":"2021-10-23"},{"lineNumber":270,"author":{"gitId":"tanhuakun"},"content":"    public Person addGroupId(UniqueId id) {","lastModifiedDate":"2021-10-23"},{"lineNumber":271,"author":{"gitId":"tanhuakun"},"content":"        if (assignedGroupIds.contains(id)) {","lastModifiedDate":"2021-10-23"},{"lineNumber":272,"author":{"gitId":"tanhuakun"},"content":"            throw new DuplicateIdException();","lastModifiedDate":"2021-10-23"},{"lineNumber":273,"author":{"gitId":"tanhuakun"},"content":"        }","lastModifiedDate":"2021-10-23"},{"lineNumber":274,"author":{"gitId":"tanhuakun"},"content":"        Person newPerson \u003d new Person(this);","lastModifiedDate":"2021-10-23"},{"lineNumber":275,"author":{"gitId":"tanhuakun"},"content":"        newPerson.assignedGroupIds.add(id);","lastModifiedDate":"2021-10-23"},{"lineNumber":276,"author":{"gitId":"tanhuakun"},"content":"        return newPerson;","lastModifiedDate":"2021-10-23"},{"lineNumber":277,"author":{"gitId":"tanhuakun"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":278,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":279,"author":{"gitId":"tanhuakun"},"content":"    /**","lastModifiedDate":"2021-10-23"},{"lineNumber":280,"author":{"gitId":"tanhuakun"},"content":"     * Remove the group id from the person.","lastModifiedDate":"2021-10-23"},{"lineNumber":281,"author":{"gitId":"tanhuakun"},"content":"     * @param id to remove.","lastModifiedDate":"2021-10-23"},{"lineNumber":282,"author":{"gitId":"tanhuakun"},"content":"     * @return new Person with id removed.","lastModifiedDate":"2021-10-23"},{"lineNumber":283,"author":{"gitId":"tanhuakun"},"content":"     */","lastModifiedDate":"2021-10-23"},{"lineNumber":284,"author":{"gitId":"tanhuakun"},"content":"    public Person removeGroupId(UniqueId id) {","lastModifiedDate":"2021-10-23"},{"lineNumber":285,"author":{"gitId":"tanhuakun"},"content":"        if (!assignedGroupIds.contains(id)) {","lastModifiedDate":"2021-10-23"},{"lineNumber":286,"author":{"gitId":"tanhuakun"},"content":"            throw new IdNotFoundException(id);","lastModifiedDate":"2021-10-23"},{"lineNumber":287,"author":{"gitId":"tanhuakun"},"content":"        }","lastModifiedDate":"2021-10-23"},{"lineNumber":288,"author":{"gitId":"tanhuakun"},"content":"        Person newPerson \u003d new Person(this);","lastModifiedDate":"2021-10-23"},{"lineNumber":289,"author":{"gitId":"tanhuakun"},"content":"        newPerson.assignedGroupIds.remove(id);","lastModifiedDate":"2021-10-23"},{"lineNumber":290,"author":{"gitId":"tanhuakun"},"content":"        return newPerson;","lastModifiedDate":"2021-10-23"},{"lineNumber":291,"author":{"gitId":"tanhuakun"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":292,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":293,"author":{"gitId":"eltonyeh"},"content":"    @Override","lastModifiedDate":"2021-10-26"},{"lineNumber":294,"author":{"gitId":"eltonyeh"},"content":"    public String getNameInString() {","lastModifiedDate":"2021-10-26"},{"lineNumber":295,"author":{"gitId":"eltonyeh"},"content":"        return name.toString();","lastModifiedDate":"2021-10-26"},{"lineNumber":296,"author":{"gitId":"eltonyeh"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":297,"author":{"gitId":"eltonyeh"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":298,"author":{"gitId":"jeremy-7007"},"content":"    /**","lastModifiedDate":"2021-10-12"},{"lineNumber":299,"author":{"gitId":"jeremy-7007"},"content":"     * Immutable way of updating the assigned task id list","lastModifiedDate":"2021-10-12"},{"lineNumber":300,"author":{"gitId":"eltonyeh"},"content":"     *","lastModifiedDate":"2021-10-20"},{"lineNumber":301,"author":{"gitId":"jeremy-7007"},"content":"     * @param newAssignedTaskIds the new assigned task id list","lastModifiedDate":"2021-10-12"},{"lineNumber":302,"author":{"gitId":"jeremy-7007"},"content":"     * @return new Person instance with the updated assigned task id list","lastModifiedDate":"2021-10-12"},{"lineNumber":303,"author":{"gitId":"jeremy-7007"},"content":"     */","lastModifiedDate":"2021-10-12"},{"lineNumber":304,"author":{"gitId":"eltonyeh"},"content":"    @Override","lastModifiedDate":"2021-10-26"},{"lineNumber":305,"author":{"gitId":"jeremy-7007"},"content":"    public Person updateAssignedTaskIds(Set\u003cUniqueId\u003e newAssignedTaskIds) {","lastModifiedDate":"2021-10-12"},{"lineNumber":306,"author":{"gitId":"jeremy-7007"},"content":"        requireNonNull(newAssignedTaskIds);","lastModifiedDate":"2021-10-12"},{"lineNumber":307,"author":{"gitId":"jeremy-7007"},"content":"        return new Person(id, name, phone, email, address, tags, newAssignedTaskIds, tasksCompletion,","lastModifiedDate":"2021-10-26"},{"lineNumber":308,"author":{"gitId":"tanhuakun"},"content":"                lessonsList, exams, assignedGroupIds);","lastModifiedDate":"2021-10-23"},{"lineNumber":309,"author":{"gitId":"tanhuakun"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":310,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":311,"author":{"gitId":"eltonyeh"},"content":"    /**","lastModifiedDate":"2021-10-20"},{"lineNumber":312,"author":{"gitId":"jeremy-7007"},"content":"     * Immutable way of updating the task completion map","lastModifiedDate":"2021-10-26"},{"lineNumber":313,"author":{"gitId":"eltonyeh"},"content":"     *","lastModifiedDate":"2021-10-20"},{"lineNumber":314,"author":{"gitId":"jeremy-7007"},"content":"     * @param newTasksCompletion the new task completion map","lastModifiedDate":"2021-10-26"},{"lineNumber":315,"author":{"gitId":"jeremy-7007"},"content":"     * @return new Person instance with the updated task completion map","lastModifiedDate":"2021-10-26"},{"lineNumber":316,"author":{"gitId":"eltonyeh"},"content":"     */","lastModifiedDate":"2021-10-20"},{"lineNumber":317,"author":{"gitId":"eltonyeh"},"content":"    @Override","lastModifiedDate":"2021-10-20"},{"lineNumber":318,"author":{"gitId":"jeremy-7007"},"content":"    public Person updateTasksCompletion(Map\u003cUniqueId, Boolean\u003e newTasksCompletion) {","lastModifiedDate":"2021-10-26"},{"lineNumber":319,"author":{"gitId":"jeremy-7007"},"content":"        requireNonNull(newTasksCompletion);","lastModifiedDate":"2021-10-26"},{"lineNumber":320,"author":{"gitId":"jeremy-7007"},"content":"        return new Person(id, name, phone, email, address, tags, assignedTaskIds, newTasksCompletion,","lastModifiedDate":"2021-10-26"},{"lineNumber":321,"author":{"gitId":"tanhuakun"},"content":"                lessonsList, exams, assignedGroupIds);","lastModifiedDate":"2021-10-23"},{"lineNumber":322,"author":{"gitId":"tanhuakun"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":323,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":324,"author":{"gitId":"eltonyeh"},"content":"    @Override","lastModifiedDate":"2021-10-20"},{"lineNumber":325,"author":{"gitId":"eltonyeh"},"content":"    public boolean isSameTaskAssignable(TaskAssignable otherTaskAssignable) {","lastModifiedDate":"2021-10-26"},{"lineNumber":326,"author":{"gitId":"eltonyeh"},"content":"        if (!(otherTaskAssignable instanceof Person)) {","lastModifiedDate":"2021-10-26"},{"lineNumber":327,"author":{"gitId":"eltonyeh"},"content":"            return false;","lastModifiedDate":"2021-10-26"},{"lineNumber":328,"author":{"gitId":"eltonyeh"},"content":"        }","lastModifiedDate":"2021-10-26"},{"lineNumber":329,"author":{"gitId":"eltonyeh"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":330,"author":{"gitId":"eltonyeh"},"content":"        return isSamePerson((Person) otherTaskAssignable);","lastModifiedDate":"2021-10-26"},{"lineNumber":331,"author":{"gitId":"eltonyeh"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":332,"author":{"gitId":"eltonyeh"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":333,"author":{"gitId":"eltonyeh"},"content":"    @Override","lastModifiedDate":"2021-10-26"},{"lineNumber":334,"author":{"gitId":"eltonyeh"},"content":"    public boolean isInModel(Model model) {","lastModifiedDate":"2021-10-26"},{"lineNumber":335,"author":{"gitId":"eltonyeh"},"content":"        return model.hasPerson(this);","lastModifiedDate":"2021-10-26"},{"lineNumber":336,"author":{"gitId":"eltonyeh"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":337,"author":{"gitId":"eltonyeh"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":338,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":339,"author":{"gitId":"eltonyeh"},"content":"     * Returns true if both persons have the same name, phone and email.","lastModifiedDate":"2021-11-05"},{"lineNumber":340,"author":{"gitId":"-"},"content":"     * This defines a weaker notion of equality between two persons.","lastModifiedDate":"2018-04-19"},{"lineNumber":341,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":342,"author":{"gitId":"-"},"content":"    public boolean isSamePerson(Person otherPerson) {","lastModifiedDate":"2018-04-19"},{"lineNumber":343,"author":{"gitId":"-"},"content":"        if (otherPerson \u003d\u003d this) {","lastModifiedDate":"2018-04-19"},{"lineNumber":344,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-04-19"},{"lineNumber":345,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":346,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":347,"author":{"gitId":"-"},"content":"        return otherPerson !\u003d null","lastModifiedDate":"2018-04-19"},{"lineNumber":348,"author":{"gitId":"eltonyeh"},"content":"                \u0026\u0026 otherPerson.getName().equals(getName())","lastModifiedDate":"2021-11-05"},{"lineNumber":349,"author":{"gitId":"eltonyeh"},"content":"                \u0026\u0026 otherPerson.getPhone().equals(getPhone())","lastModifiedDate":"2021-11-05"},{"lineNumber":350,"author":{"gitId":"eltonyeh"},"content":"                \u0026\u0026 otherPerson.getEmail().equals(getEmail());","lastModifiedDate":"2021-11-05"},{"lineNumber":351,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":352,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":353,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":354,"author":{"gitId":"eltonyeh"},"content":"     * Returns true if both persons have exactly the same fields, possibly except the id.","lastModifiedDate":"2021-11-05"},{"lineNumber":355,"author":{"gitId":"eltonyeh"},"content":"     */","lastModifiedDate":"2021-11-05"},{"lineNumber":356,"author":{"gitId":"eltonyeh"},"content":"    public boolean hasSameData(Object other) {","lastModifiedDate":"2021-11-05"},{"lineNumber":357,"author":{"gitId":"eltonyeh"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2021-11-05"},{"lineNumber":358,"author":{"gitId":"eltonyeh"},"content":"            return true;","lastModifiedDate":"2021-11-05"},{"lineNumber":359,"author":{"gitId":"eltonyeh"},"content":"        }","lastModifiedDate":"2021-11-05"},{"lineNumber":360,"author":{"gitId":"eltonyeh"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":361,"author":{"gitId":"eltonyeh"},"content":"        if (!(other instanceof Person)) {","lastModifiedDate":"2021-11-05"},{"lineNumber":362,"author":{"gitId":"eltonyeh"},"content":"            return false;","lastModifiedDate":"2021-11-05"},{"lineNumber":363,"author":{"gitId":"eltonyeh"},"content":"        }","lastModifiedDate":"2021-11-05"},{"lineNumber":364,"author":{"gitId":"eltonyeh"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":365,"author":{"gitId":"eltonyeh"},"content":"        Person otherPerson \u003d (Person) other;","lastModifiedDate":"2021-11-05"},{"lineNumber":366,"author":{"gitId":"eltonyeh"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":367,"author":{"gitId":"eltonyeh"},"content":"        return otherPerson.isSamePerson(this)","lastModifiedDate":"2021-11-05"},{"lineNumber":368,"author":{"gitId":"eltonyeh"},"content":"                \u0026\u0026 otherPerson.getAddress().equals(address)","lastModifiedDate":"2021-11-05"},{"lineNumber":369,"author":{"gitId":"eltonyeh"},"content":"                \u0026\u0026 otherPerson.getTags().equals(tags)","lastModifiedDate":"2021-11-05"},{"lineNumber":370,"author":{"gitId":"eltonyeh"},"content":"                \u0026\u0026 otherPerson.getAssignedTaskIds().equals(assignedTaskIds)","lastModifiedDate":"2021-11-05"},{"lineNumber":371,"author":{"gitId":"eltonyeh"},"content":"                \u0026\u0026 otherPerson.getAssignedGroupIds().equals(assignedGroupIds)","lastModifiedDate":"2021-11-05"},{"lineNumber":372,"author":{"gitId":"eltonyeh"},"content":"                \u0026\u0026 otherPerson.getTasksCompletion().equals(tasksCompletion)","lastModifiedDate":"2021-11-05"},{"lineNumber":373,"author":{"gitId":"eltonyeh"},"content":"                \u0026\u0026 otherPerson.getLessonsList().equals(lessonsList)","lastModifiedDate":"2021-11-05"},{"lineNumber":374,"author":{"gitId":"eltonyeh"},"content":"                \u0026\u0026 otherPerson.getExams().equals(exams);","lastModifiedDate":"2021-11-05"},{"lineNumber":375,"author":{"gitId":"eltonyeh"},"content":"    }","lastModifiedDate":"2021-11-05"},{"lineNumber":376,"author":{"gitId":"eltonyeh"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":377,"author":{"gitId":"eltonyeh"},"content":"    /**","lastModifiedDate":"2021-11-05"},{"lineNumber":378,"author":{"gitId":"eltonyeh"},"content":"     * Returns true if both persons have the same identity fields and data fields.","lastModifiedDate":"2021-11-05"},{"lineNumber":379,"author":{"gitId":"-"},"content":"     * This defines a stronger notion of equality between two persons.","lastModifiedDate":"2018-04-19"},{"lineNumber":380,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":381,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":382,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-08-24"},{"lineNumber":383,"author":{"gitId":"-"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2018-01-10"},{"lineNumber":384,"author":{"gitId":"-"},"content":"            return true;","lastModifiedDate":"2018-01-10"},{"lineNumber":385,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-01-10"},{"lineNumber":386,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-10"},{"lineNumber":387,"author":{"gitId":"-"},"content":"        if (!(other instanceof Person)) {","lastModifiedDate":"2018-01-10"},{"lineNumber":388,"author":{"gitId":"-"},"content":"            return false;","lastModifiedDate":"2018-01-10"},{"lineNumber":389,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-01-10"},{"lineNumber":390,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-10"},{"lineNumber":391,"author":{"gitId":"-"},"content":"        Person otherPerson \u003d (Person) other;","lastModifiedDate":"2018-01-10"},{"lineNumber":392,"author":{"gitId":"eltonyeh"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":393,"author":{"gitId":"eltonyeh"},"content":"        return otherPerson.hasSameData(this)","lastModifiedDate":"2021-11-05"},{"lineNumber":394,"author":{"gitId":"eltonyeh"},"content":"                \u0026\u0026 otherPerson.getId().equals(id);","lastModifiedDate":"2021-11-05"},{"lineNumber":395,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":396,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":397,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":398,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-08-24"},{"lineNumber":399,"author":{"gitId":"-"},"content":"        // use this method for custom fields hashing instead of implementing your own","lastModifiedDate":"2016-08-24"},{"lineNumber":400,"author":{"gitId":"tanhuakun"},"content":"        return Objects.hash(name, id, phone, email, address, tags, lessonsList, exams);","lastModifiedDate":"2021-10-16"},{"lineNumber":401,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":402,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":403,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":404,"author":{"gitId":"-"},"content":"    public String toString() {","lastModifiedDate":"2016-08-24"},{"lineNumber":405,"author":{"gitId":"-"},"content":"        final StringBuilder builder \u003d new StringBuilder();","lastModifiedDate":"2018-01-10"},{"lineNumber":406,"author":{"gitId":"-"},"content":"        builder.append(getName())","lastModifiedDate":"2018-01-10"},{"lineNumber":407,"author":{"gitId":"-"},"content":"                .append(\"; Phone: \")","lastModifiedDate":"2020-12-11"},{"lineNumber":408,"author":{"gitId":"-"},"content":"                .append(getPhone())","lastModifiedDate":"2018-01-10"},{"lineNumber":409,"author":{"gitId":"-"},"content":"                .append(\"; Email: \")","lastModifiedDate":"2020-12-11"},{"lineNumber":410,"author":{"gitId":"-"},"content":"                .append(getEmail())","lastModifiedDate":"2018-01-10"},{"lineNumber":411,"author":{"gitId":"-"},"content":"                .append(\"; Address: \")","lastModifiedDate":"2020-12-11"},{"lineNumber":412,"author":{"gitId":"-"},"content":"                .append(getAddress());","lastModifiedDate":"2021-11-04"},{"lineNumber":413,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2020-12-11"},{"lineNumber":414,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e tags \u003d getTags();","lastModifiedDate":"2020-12-11"},{"lineNumber":415,"author":{"gitId":"-"},"content":"        if (!tags.isEmpty()) {","lastModifiedDate":"2020-12-11"},{"lineNumber":416,"author":{"gitId":"-"},"content":"            builder.append(\"; Tags: \");","lastModifiedDate":"2020-12-11"},{"lineNumber":417,"author":{"gitId":"-"},"content":"            tags.forEach(builder::append);","lastModifiedDate":"2020-12-11"},{"lineNumber":418,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2020-12-11"},{"lineNumber":419,"author":{"gitId":"-"},"content":"        return builder.toString();","lastModifiedDate":"2018-01-10"},{"lineNumber":420,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":421,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":422,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"Neha-5678":10,"jeremy-7007":52,"tanhuakun":169,"eltonyeh":69,"-":122}},{"path":"src/main/java/seedu/address/model/person/PersonWithDetails.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tanhuakun"},"content":"package seedu.address.model.person;","lastModifiedDate":"2021-10-25"},{"lineNumber":2,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":3,"author":{"gitId":"tanhuakun"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2021-10-26"},{"lineNumber":4,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":5,"author":{"gitId":"jeremy-7007"},"content":"import java.util.Map;","lastModifiedDate":"2021-11-06"},{"lineNumber":6,"author":{"gitId":"tanhuakun"},"content":"import java.util.Set;","lastModifiedDate":"2021-10-25"},{"lineNumber":7,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":8,"author":{"gitId":"tanhuakun"},"content":"import seedu.address.model.group.GroupWithDetails;","lastModifiedDate":"2021-11-04"},{"lineNumber":9,"author":{"gitId":"tanhuakun"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2021-10-26"},{"lineNumber":10,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":11,"author":{"gitId":"tanhuakun"},"content":"/**","lastModifiedDate":"2021-10-25"},{"lineNumber":12,"author":{"gitId":"tanhuakun"},"content":" * Association class that can transport a person with all details related to him.","lastModifiedDate":"2021-10-25"},{"lineNumber":13,"author":{"gitId":"tanhuakun"},"content":" * Generally a Person only hold uniqueIds, so this class is required to associate other related details.","lastModifiedDate":"2021-10-25"},{"lineNumber":14,"author":{"gitId":"tanhuakun"},"content":" */","lastModifiedDate":"2021-10-25"},{"lineNumber":15,"author":{"gitId":"tanhuakun"},"content":"public class PersonWithDetails {","lastModifiedDate":"2021-10-25"},{"lineNumber":16,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":17,"author":{"gitId":"tanhuakun"},"content":"    private Person person;","lastModifiedDate":"2021-10-25"},{"lineNumber":18,"author":{"gitId":"tanhuakun"},"content":"    private Set\u003cGroupWithDetails\u003e groupsWithDetails;","lastModifiedDate":"2021-11-04"},{"lineNumber":19,"author":{"gitId":"tanhuakun"},"content":"    private Set\u003cTask\u003e tasks;","lastModifiedDate":"2021-10-26"},{"lineNumber":20,"author":{"gitId":"jeremy-7007"},"content":"    private Map\u003cTask, Boolean\u003e tasksCompletion;","lastModifiedDate":"2021-11-06"},{"lineNumber":21,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":22,"author":{"gitId":"tanhuakun"},"content":"    /**","lastModifiedDate":"2021-10-25"},{"lineNumber":23,"author":{"gitId":"tanhuakun"},"content":"     * Creates an object that holds a person with some of his other details!","lastModifiedDate":"2021-10-25"},{"lineNumber":24,"author":{"gitId":"tanhuakun"},"content":"     *","lastModifiedDate":"2021-10-25"},{"lineNumber":25,"author":{"gitId":"tanhuakun"},"content":"     * @param person to hold","lastModifiedDate":"2021-10-25"},{"lineNumber":26,"author":{"gitId":"tanhuakun"},"content":"     * @param groupsWithDetails to hold","lastModifiedDate":"2021-11-04"},{"lineNumber":27,"author":{"gitId":"tanhuakun"},"content":"     * @param tasks to hold","lastModifiedDate":"2021-11-04"},{"lineNumber":28,"author":{"gitId":"tanhuakun"},"content":"     */","lastModifiedDate":"2021-10-25"},{"lineNumber":29,"author":{"gitId":"jeremy-7007"},"content":"    public PersonWithDetails(Person person, Set\u003cGroupWithDetails\u003e groupsWithDetails,","lastModifiedDate":"2021-11-06"},{"lineNumber":30,"author":{"gitId":"jeremy-7007"},"content":"                             Set\u003cTask\u003e tasks, Map\u003cTask, Boolean\u003e tasksCompletion) {","lastModifiedDate":"2021-11-06"},{"lineNumber":31,"author":{"gitId":"jeremy-7007"},"content":"        requireAllNonNull(person, groupsWithDetails, tasks, tasksCompletion);","lastModifiedDate":"2021-11-06"},{"lineNumber":32,"author":{"gitId":"tanhuakun"},"content":"        this.person \u003d person;","lastModifiedDate":"2021-10-25"},{"lineNumber":33,"author":{"gitId":"tanhuakun"},"content":"        this.groupsWithDetails \u003d groupsWithDetails;","lastModifiedDate":"2021-11-04"},{"lineNumber":34,"author":{"gitId":"tanhuakun"},"content":"        this.tasks \u003d tasks;","lastModifiedDate":"2021-10-26"},{"lineNumber":35,"author":{"gitId":"jeremy-7007"},"content":"        this.tasksCompletion \u003d tasksCompletion;","lastModifiedDate":"2021-11-06"},{"lineNumber":36,"author":{"gitId":"tanhuakun"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":37,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":38,"author":{"gitId":"tanhuakun"},"content":"    public Person getPerson() {","lastModifiedDate":"2021-10-25"},{"lineNumber":39,"author":{"gitId":"tanhuakun"},"content":"        return person;","lastModifiedDate":"2021-10-25"},{"lineNumber":40,"author":{"gitId":"tanhuakun"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":41,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":42,"author":{"gitId":"tanhuakun"},"content":"    public Set\u003cGroupWithDetails\u003e getGroups() {","lastModifiedDate":"2021-11-04"},{"lineNumber":43,"author":{"gitId":"tanhuakun"},"content":"        return groupsWithDetails;","lastModifiedDate":"2021-11-04"},{"lineNumber":44,"author":{"gitId":"tanhuakun"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":45,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":46,"author":{"gitId":"tanhuakun"},"content":"    public Set\u003cTask\u003e getTasks() {","lastModifiedDate":"2021-10-26"},{"lineNumber":47,"author":{"gitId":"tanhuakun"},"content":"        return tasks;","lastModifiedDate":"2021-10-26"},{"lineNumber":48,"author":{"gitId":"tanhuakun"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":49,"author":{"gitId":"jeremy-7007"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":50,"author":{"gitId":"jeremy-7007"},"content":"    public Map\u003cTask, Boolean\u003e getTasksCompletion() {","lastModifiedDate":"2021-11-06"},{"lineNumber":51,"author":{"gitId":"jeremy-7007"},"content":"        return tasksCompletion;","lastModifiedDate":"2021-11-06"},{"lineNumber":52,"author":{"gitId":"jeremy-7007"},"content":"    }","lastModifiedDate":"2021-11-06"},{"lineNumber":53,"author":{"gitId":"tanhuakun"},"content":"}","lastModifiedDate":"2021-10-25"}],"authorContributionMap":{"jeremy-7007":10,"tanhuakun":43}},{"path":"src/main/java/seedu/address/model/person/UniquePersonList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2016-08-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2017-05-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2018-01-10"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-15"},{"lineNumber":6,"author":{"gitId":"Neha-5678"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-28"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Iterator;","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-01-19"},{"lineNumber":9,"author":{"gitId":"tanhuakun"},"content":"import java.util.Set;","lastModifiedDate":"2021-10-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2016-08-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-08-24"},{"lineNumber":13,"author":{"gitId":"tanhuakun"},"content":"import seedu.address.model.id.UniqueId;","lastModifiedDate":"2021-10-23"},{"lineNumber":14,"author":{"gitId":"tanhuakun"},"content":"import seedu.address.model.id.UniqueIdMapper;","lastModifiedDate":"2021-10-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.person.exceptions.DuplicatePersonException;","lastModifiedDate":"2017-06-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.person.exceptions.PersonNotFoundException;","lastModifiedDate":"2017-06-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * A list of persons that enforces uniqueness between its elements and does not allow nulls.","lastModifiedDate":"2016-09-22"},{"lineNumber":20,"author":{"gitId":"-"},"content":" * A person is considered unique by comparing using {@code Person#isSamePerson(Person)}. As such, adding and updating of","lastModifiedDate":"2018-04-19"},{"lineNumber":21,"author":{"gitId":"-"},"content":" * persons uses Person#isSamePerson(Person) for equality so as to ensure that the person being added or updated is","lastModifiedDate":"2018-04-19"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * unique in terms of identity in the UniquePersonList. However, the removal of a person uses Person#equals(Object) so","lastModifiedDate":"2018-04-19"},{"lineNumber":23,"author":{"gitId":"-"},"content":" * as to ensure that the person with exactly the same fields will be removed.","lastModifiedDate":"2018-04-19"},{"lineNumber":24,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2016-08-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":" * Supports a minimal set of list operations.","lastModifiedDate":"2016-09-22"},{"lineNumber":26,"author":{"gitId":"-"},"content":" *","lastModifiedDate":"2016-08-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":" * @see Person#isSamePerson(Person)","lastModifiedDate":"2018-04-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-24"},{"lineNumber":29,"author":{"gitId":"tanhuakun"},"content":"public class UniquePersonList implements Iterable\u003cPerson\u003e, UniqueIdMapper\u003cPerson\u003e {","lastModifiedDate":"2021-10-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private final ObservableList\u003cPerson\u003e internalList \u003d FXCollections.observableArrayList();","lastModifiedDate":"2016-10-19"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    private final ObservableList\u003cPerson\u003e internalUnmodifiableList \u003d","lastModifiedDate":"2018-12-09"},{"lineNumber":33,"author":{"gitId":"-"},"content":"            FXCollections.unmodifiableObservableList(internalList);","lastModifiedDate":"2018-12-09"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"     * Returns true if the list contains an equivalent person as the given argument.","lastModifiedDate":"2016-09-22"},{"lineNumber":37,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public boolean contains(Person toCheck) {","lastModifiedDate":"2018-01-10"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        requireNonNull(toCheck);","lastModifiedDate":"2017-05-15"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        return internalList.stream().anyMatch(toCheck::isSamePerson);","lastModifiedDate":"2018-04-19"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     * Adds a person to the list.","lastModifiedDate":"2016-08-24"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * The person must not already exist in the list.","lastModifiedDate":"2018-08-07"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public void add(Person toAdd) {","lastModifiedDate":"2018-08-07"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        requireNonNull(toAdd);","lastModifiedDate":"2017-05-15"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        if (contains(toAdd)) {","lastModifiedDate":"2016-08-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"            throw new DuplicatePersonException();","lastModifiedDate":"2016-08-24"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        internalList.add(toAdd);","lastModifiedDate":"2018-01-10"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * Replaces the person {@code target} in the list with {@code editedPerson}.","lastModifiedDate":"2017-06-07"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     * {@code target} must exist in the list.","lastModifiedDate":"2018-08-07"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     * The person identity of {@code editedPerson} must not be the same as another existing person in the list.","lastModifiedDate":"2018-08-07"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2018-08-07"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        requireAllNonNull(target, editedPerson);","lastModifiedDate":"2018-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        int index \u003d internalList.indexOf(target);","lastModifiedDate":"2017-06-07"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        if (index \u003d\u003d -1) {","lastModifiedDate":"2017-06-07"},{"lineNumber":65,"author":{"gitId":"-"},"content":"            throw new PersonNotFoundException();","lastModifiedDate":"2017-06-07"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-06-07"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-07"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        if (!target.isSamePerson(editedPerson) \u0026\u0026 contains(editedPerson)) {","lastModifiedDate":"2018-04-19"},{"lineNumber":69,"author":{"gitId":"-"},"content":"            throw new DuplicatePersonException();","lastModifiedDate":"2016-12-13"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-13"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        internalList.set(index, editedPerson);","lastModifiedDate":"2018-01-10"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-13"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-24"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     * Removes the equivalent person from the list.","lastModifiedDate":"2016-08-24"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     * The person must exist in the list.","lastModifiedDate":"2018-08-07"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-24"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public void remove(Person toRemove) {","lastModifiedDate":"2018-08-07"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        requireNonNull(toRemove);","lastModifiedDate":"2017-05-15"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        if (!internalList.remove(toRemove)) {","lastModifiedDate":"2018-02-28"},{"lineNumber":81,"author":{"gitId":"-"},"content":"            throw new PersonNotFoundException();","lastModifiedDate":"2016-08-24"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-24"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    public void setPersons(UniquePersonList replacement) {","lastModifiedDate":"2016-10-19"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        requireNonNull(replacement);","lastModifiedDate":"2018-08-08"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        internalList.setAll(replacement.internalList);","lastModifiedDate":"2018-08-14"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-10-19"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-19"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-07"},{"lineNumber":91,"author":{"gitId":"-"},"content":"     * Replaces the contents of this list with {@code persons}.","lastModifiedDate":"2018-08-07"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     * {@code persons} must not contain duplicate persons.","lastModifiedDate":"2018-08-07"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-07"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    public void setPersons(List\u003cPerson\u003e persons) {","lastModifiedDate":"2018-08-07"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        requireAllNonNull(persons);","lastModifiedDate":"2018-01-10"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        if (!personsAreUnique(persons)) {","lastModifiedDate":"2018-04-19"},{"lineNumber":97,"author":{"gitId":"-"},"content":"            throw new DuplicatePersonException();","lastModifiedDate":"2018-01-21"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-24"},{"lineNumber":99,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-01-21"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        internalList.setAll(persons);","lastModifiedDate":"2018-08-14"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":103,"author":{"gitId":"Neha-5678"},"content":"    /**","lastModifiedDate":"2021-10-28"},{"lineNumber":104,"author":{"gitId":"Neha-5678"},"content":"     * Removes the groupId from all persons","lastModifiedDate":"2021-10-28"},{"lineNumber":105,"author":{"gitId":"Neha-5678"},"content":"     * @param toRemove id to remove","lastModifiedDate":"2021-10-28"},{"lineNumber":106,"author":{"gitId":"Neha-5678"},"content":"     */","lastModifiedDate":"2021-10-28"},{"lineNumber":107,"author":{"gitId":"Neha-5678"},"content":"    public void cleanUpGroupId(UniqueId toRemove) {","lastModifiedDate":"2021-10-28"},{"lineNumber":108,"author":{"gitId":"Neha-5678"},"content":"        List\u003cPerson\u003e persons \u003d new ArrayList\u003c\u003e(internalList);","lastModifiedDate":"2021-10-28"},{"lineNumber":109,"author":{"gitId":"Neha-5678"},"content":"        for (int i \u003d 0; i \u003c persons.size(); i++) {","lastModifiedDate":"2021-10-28"},{"lineNumber":110,"author":{"gitId":"Neha-5678"},"content":"            Person current \u003d persons.get(i);","lastModifiedDate":"2021-10-28"},{"lineNumber":111,"author":{"gitId":"Neha-5678"},"content":"            if (current.containsGroupId(toRemove)) {","lastModifiedDate":"2021-10-28"},{"lineNumber":112,"author":{"gitId":"Neha-5678"},"content":"                Person withoutId \u003d current.removeGroupId(toRemove);","lastModifiedDate":"2021-10-28"},{"lineNumber":113,"author":{"gitId":"Neha-5678"},"content":"                internalList.set(i , withoutId);","lastModifiedDate":"2021-10-28"},{"lineNumber":114,"author":{"gitId":"Neha-5678"},"content":"            }","lastModifiedDate":"2021-10-28"},{"lineNumber":115,"author":{"gitId":"Neha-5678"},"content":"        }","lastModifiedDate":"2021-10-28"},{"lineNumber":116,"author":{"gitId":"Neha-5678"},"content":"    }","lastModifiedDate":"2021-10-28"},{"lineNumber":117,"author":{"gitId":"Neha-5678"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-09-01"},{"lineNumber":119,"author":{"gitId":"-"},"content":"     * Returns the backing list as an unmodifiable {@code ObservableList}.","lastModifiedDate":"2017-09-01"},{"lineNumber":120,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-09-01"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e asUnmodifiableObservableList() {","lastModifiedDate":"2018-04-05"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        return internalUnmodifiableList;","lastModifiedDate":"2018-12-09"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-22"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-22"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-08-24"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    public Iterator\u003cPerson\u003e iterator() {","lastModifiedDate":"2016-08-24"},{"lineNumber":127,"author":{"gitId":"-"},"content":"        return internalList.iterator();","lastModifiedDate":"2016-08-24"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-24"},{"lineNumber":129,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-24"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2016-09-21"},{"lineNumber":132,"author":{"gitId":"-"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2016-09-21"},{"lineNumber":133,"author":{"gitId":"-"},"content":"                || (other instanceof UniquePersonList // instanceof handles nulls","lastModifiedDate":"2016-09-21"},{"lineNumber":134,"author":{"gitId":"-"},"content":"                        \u0026\u0026 internalList.equals(((UniquePersonList) other).internalList));","lastModifiedDate":"2018-08-14"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2016-09-21"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    public int hashCode() {","lastModifiedDate":"2016-09-21"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        return internalList.hashCode();","lastModifiedDate":"2016-09-21"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-04-19"},{"lineNumber":143,"author":{"gitId":"-"},"content":"     * Returns true if {@code persons} contains only unique persons.","lastModifiedDate":"2018-04-19"},{"lineNumber":144,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-04-19"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    private boolean personsAreUnique(List\u003cPerson\u003e persons) {","lastModifiedDate":"2018-04-19"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        for (int i \u003d 0; i \u003c persons.size() - 1; i++) {","lastModifiedDate":"2018-04-19"},{"lineNumber":147,"author":{"gitId":"-"},"content":"            for (int j \u003d i + 1; j \u003c persons.size(); j++) {","lastModifiedDate":"2018-04-19"},{"lineNumber":148,"author":{"gitId":"-"},"content":"                if (persons.get(i).isSamePerson(persons.get(j))) {","lastModifiedDate":"2018-04-19"},{"lineNumber":149,"author":{"gitId":"-"},"content":"                    return false;","lastModifiedDate":"2018-04-19"},{"lineNumber":150,"author":{"gitId":"-"},"content":"                }","lastModifiedDate":"2018-04-19"},{"lineNumber":151,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-04-19"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-04-19"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        return true;","lastModifiedDate":"2018-04-19"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":155,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-10-23"},{"lineNumber":156,"author":{"gitId":"tanhuakun"},"content":"    @Override","lastModifiedDate":"2021-10-23"},{"lineNumber":157,"author":{"gitId":"tanhuakun"},"content":"    public Set\u003cPerson\u003e getFromUniqueIds(Set\u003cUniqueId\u003e ids) {","lastModifiedDate":"2021-10-23"},{"lineNumber":158,"author":{"gitId":"tanhuakun"},"content":"        return UniqueIdMapper.\u003cPerson\u003egetFromUniqueIdsAndItemList(ids, internalList);","lastModifiedDate":"2021-10-24"},{"lineNumber":159,"author":{"gitId":"tanhuakun"},"content":"    }","lastModifiedDate":"2021-10-23"},{"lineNumber":160,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-24"}],"authorContributionMap":{"Neha-5678":16,"tanhuakun":9,"-":135}},{"path":"src/main/java/seedu/address/model/task/Deadline.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Neha-5678"},"content":"package seedu.address.model.task;","lastModifiedDate":"2021-10-06"},{"lineNumber":2,"author":{"gitId":"Neha-5678"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":3,"author":{"gitId":"eltonyeh"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-08"},{"lineNumber":4,"author":{"gitId":"eltonyeh"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2021-10-08"},{"lineNumber":5,"author":{"gitId":"eltonyeh"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":6,"author":{"gitId":"eltonyeh"},"content":"import java.time.DateTimeException;","lastModifiedDate":"2021-10-08"},{"lineNumber":7,"author":{"gitId":"eltonyeh"},"content":"import java.time.LocalDate;","lastModifiedDate":"2021-10-08"},{"lineNumber":8,"author":{"gitId":"eltonyeh"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-10-08"},{"lineNumber":9,"author":{"gitId":"eltonyeh"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":10,"author":{"gitId":"Neha-5678"},"content":"/**","lastModifiedDate":"2021-10-06"},{"lineNumber":11,"author":{"gitId":"eltonyeh"},"content":" * Represents a Task\u0027s deadline.","lastModifiedDate":"2021-10-08"},{"lineNumber":12,"author":{"gitId":"Neha-5678"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidDeadline(String)}","lastModifiedDate":"2021-10-06"},{"lineNumber":13,"author":{"gitId":"Neha-5678"},"content":" */","lastModifiedDate":"2021-10-06"},{"lineNumber":14,"author":{"gitId":"Neha-5678"},"content":"public class Deadline {","lastModifiedDate":"2021-10-06"},{"lineNumber":15,"author":{"gitId":"Neha-5678"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":16,"author":{"gitId":"Neha-5678"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2021-10-06"},{"lineNumber":17,"author":{"gitId":"eltonyeh"},"content":"            \"Deadlines should be in the format YYYY-MM-DD with valid year, month, and day, such as 2007-12-03\";","lastModifiedDate":"2021-10-12"},{"lineNumber":18,"author":{"gitId":"eltonyeh"},"content":"    public final LocalDate deadline;","lastModifiedDate":"2021-10-08"},{"lineNumber":19,"author":{"gitId":"Neha-5678"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":20,"author":{"gitId":"Neha-5678"},"content":"    /**","lastModifiedDate":"2021-10-06"},{"lineNumber":21,"author":{"gitId":"eltonyeh"},"content":"     * Constructs a {@code Deadline}.","lastModifiedDate":"2021-10-08"},{"lineNumber":22,"author":{"gitId":"Neha-5678"},"content":"     *","lastModifiedDate":"2021-10-06"},{"lineNumber":23,"author":{"gitId":"eltonyeh"},"content":"     * @param deadline A valid deadline string format (YYYY-MM-DD).","lastModifiedDate":"2021-10-08"},{"lineNumber":24,"author":{"gitId":"Neha-5678"},"content":"     */","lastModifiedDate":"2021-10-06"},{"lineNumber":25,"author":{"gitId":"Neha-5678"},"content":"    public Deadline(String deadline) {","lastModifiedDate":"2021-10-06"},{"lineNumber":26,"author":{"gitId":"Neha-5678"},"content":"        requireNonNull(deadline);","lastModifiedDate":"2021-10-06"},{"lineNumber":27,"author":{"gitId":"Neha-5678"},"content":"        checkArgument(isValidDeadline(deadline), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-06"},{"lineNumber":28,"author":{"gitId":"eltonyeh"},"content":"        this.deadline \u003d LocalDate.parse(deadline);","lastModifiedDate":"2021-10-08"},{"lineNumber":29,"author":{"gitId":"Neha-5678"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":30,"author":{"gitId":"Neha-5678"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":31,"author":{"gitId":"Neha-5678"},"content":"    /**","lastModifiedDate":"2021-10-06"},{"lineNumber":32,"author":{"gitId":"eltonyeh"},"content":"     * Returns true if a given string is a valid date format.","lastModifiedDate":"2021-10-08"},{"lineNumber":33,"author":{"gitId":"eltonyeh"},"content":"     *","lastModifiedDate":"2021-10-08"},{"lineNumber":34,"author":{"gitId":"eltonyeh"},"content":"     * @param test The description to be tested.","lastModifiedDate":"2021-10-08"},{"lineNumber":35,"author":{"gitId":"Neha-5678"},"content":"     */","lastModifiedDate":"2021-10-06"},{"lineNumber":36,"author":{"gitId":"Neha-5678"},"content":"    public static boolean isValidDeadline(String test) {","lastModifiedDate":"2021-10-06"},{"lineNumber":37,"author":{"gitId":"eltonyeh"},"content":"        try {","lastModifiedDate":"2021-10-08"},{"lineNumber":38,"author":{"gitId":"eltonyeh"},"content":"            LocalDate testDate \u003d LocalDate.parse(test);","lastModifiedDate":"2021-10-08"},{"lineNumber":39,"author":{"gitId":"eltonyeh"},"content":"            return true;","lastModifiedDate":"2021-10-08"},{"lineNumber":40,"author":{"gitId":"eltonyeh"},"content":"        } catch (DateTimeException e) {","lastModifiedDate":"2021-10-08"},{"lineNumber":41,"author":{"gitId":"eltonyeh"},"content":"            return false;","lastModifiedDate":"2021-10-08"},{"lineNumber":42,"author":{"gitId":"eltonyeh"},"content":"        }","lastModifiedDate":"2021-10-08"},{"lineNumber":43,"author":{"gitId":"Neha-5678"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":44,"author":{"gitId":"Neha-5678"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":45,"author":{"gitId":"Neha-5678"},"content":"    @Override","lastModifiedDate":"2021-10-06"},{"lineNumber":46,"author":{"gitId":"Neha-5678"},"content":"    public String toString() {","lastModifiedDate":"2021-10-06"},{"lineNumber":47,"author":{"gitId":"eltonyeh"},"content":"        return deadline.format(DateTimeFormatter.ofPattern(\"dd MMM yyyy\"));","lastModifiedDate":"2021-10-08"},{"lineNumber":48,"author":{"gitId":"Neha-5678"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":49,"author":{"gitId":"Neha-5678"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":50,"author":{"gitId":"Neha-5678"},"content":"    @Override","lastModifiedDate":"2021-10-06"},{"lineNumber":51,"author":{"gitId":"Neha-5678"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-06"},{"lineNumber":52,"author":{"gitId":"Neha-5678"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-10-06"},{"lineNumber":53,"author":{"gitId":"Neha-5678"},"content":"                || (other instanceof Deadline // instanceof handles nulls","lastModifiedDate":"2021-10-06"},{"lineNumber":54,"author":{"gitId":"Neha-5678"},"content":"                \u0026\u0026 deadline.equals(((Deadline) other).deadline)); // state check","lastModifiedDate":"2021-10-06"},{"lineNumber":55,"author":{"gitId":"Neha-5678"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":56,"author":{"gitId":"Neha-5678"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":57,"author":{"gitId":"Neha-5678"},"content":"    @Override","lastModifiedDate":"2021-10-06"},{"lineNumber":58,"author":{"gitId":"Neha-5678"},"content":"    public int hashCode() {","lastModifiedDate":"2021-10-06"},{"lineNumber":59,"author":{"gitId":"Neha-5678"},"content":"        return deadline.hashCode();","lastModifiedDate":"2021-10-06"},{"lineNumber":60,"author":{"gitId":"Neha-5678"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":61,"author":{"gitId":"Neha-5678"},"content":"}","lastModifiedDate":"2021-10-06"}],"authorContributionMap":{"Neha-5678":38,"eltonyeh":23}},{"path":"src/main/java/seedu/address/model/task/Description.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Neha-5678"},"content":"package seedu.address.model.task;","lastModifiedDate":"2021-10-06"},{"lineNumber":2,"author":{"gitId":"Neha-5678"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":3,"author":{"gitId":"Neha-5678"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-06"},{"lineNumber":4,"author":{"gitId":"Neha-5678"},"content":"import static seedu.address.commons.util.AppUtil.checkArgument;","lastModifiedDate":"2021-10-06"},{"lineNumber":5,"author":{"gitId":"Neha-5678"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":6,"author":{"gitId":"Neha-5678"},"content":"/**","lastModifiedDate":"2021-10-06"},{"lineNumber":7,"author":{"gitId":"Neha-5678"},"content":" * Represents a Task\u0027s name in the address book.","lastModifiedDate":"2021-10-06"},{"lineNumber":8,"author":{"gitId":"eltonyeh"},"content":" * Guarantees: immutable; is valid as declared in {@link #isValidDescription(String)}","lastModifiedDate":"2021-10-12"},{"lineNumber":9,"author":{"gitId":"Neha-5678"},"content":" */","lastModifiedDate":"2021-10-06"},{"lineNumber":10,"author":{"gitId":"eltonyeh"},"content":"public class Description {","lastModifiedDate":"2021-10-12"},{"lineNumber":11,"author":{"gitId":"Neha-5678"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":12,"author":{"gitId":"Neha-5678"},"content":"    public static final String MESSAGE_CONSTRAINTS \u003d","lastModifiedDate":"2021-10-06"},{"lineNumber":13,"author":{"gitId":"Neha-5678"},"content":"            \"Names should only contain alphanumeric characters and spaces, and it should not be blank\";","lastModifiedDate":"2021-10-06"},{"lineNumber":14,"author":{"gitId":"Neha-5678"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":15,"author":{"gitId":"Neha-5678"},"content":"    /*","lastModifiedDate":"2021-10-06"},{"lineNumber":16,"author":{"gitId":"eltonyeh"},"content":"     * The first character of the name must not be a whitespace,","lastModifiedDate":"2021-10-08"},{"lineNumber":17,"author":{"gitId":"Neha-5678"},"content":"     * otherwise \" \" (a blank string) becomes a valid input.","lastModifiedDate":"2021-10-06"},{"lineNumber":18,"author":{"gitId":"Neha-5678"},"content":"     */","lastModifiedDate":"2021-10-06"},{"lineNumber":19,"author":{"gitId":"Neha-5678"},"content":"    public static final String VALIDATION_REGEX \u003d \"[\\\\p{Alnum}][\\\\p{Alnum} ]*\";","lastModifiedDate":"2021-10-06"},{"lineNumber":20,"author":{"gitId":"Neha-5678"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":21,"author":{"gitId":"Neha-5678"},"content":"    public final String description;","lastModifiedDate":"2021-10-19"},{"lineNumber":22,"author":{"gitId":"Neha-5678"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":23,"author":{"gitId":"Neha-5678"},"content":"    /**","lastModifiedDate":"2021-10-06"},{"lineNumber":24,"author":{"gitId":"eltonyeh"},"content":"     * Constructs a {@code Description}.","lastModifiedDate":"2021-10-12"},{"lineNumber":25,"author":{"gitId":"Neha-5678"},"content":"     *","lastModifiedDate":"2021-10-06"},{"lineNumber":26,"author":{"gitId":"Neha-5678"},"content":"     * @param description A valid description.","lastModifiedDate":"2021-10-19"},{"lineNumber":27,"author":{"gitId":"Neha-5678"},"content":"     */","lastModifiedDate":"2021-10-06"},{"lineNumber":28,"author":{"gitId":"Neha-5678"},"content":"    public Description(String description) {","lastModifiedDate":"2021-10-19"},{"lineNumber":29,"author":{"gitId":"Neha-5678"},"content":"        requireNonNull(description);","lastModifiedDate":"2021-10-19"},{"lineNumber":30,"author":{"gitId":"Neha-5678"},"content":"        checkArgument(isValidDescription(description), MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-19"},{"lineNumber":31,"author":{"gitId":"Neha-5678"},"content":"        this.description \u003d description;","lastModifiedDate":"2021-10-19"},{"lineNumber":32,"author":{"gitId":"Neha-5678"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":33,"author":{"gitId":"Neha-5678"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":34,"author":{"gitId":"Neha-5678"},"content":"    /**","lastModifiedDate":"2021-10-06"},{"lineNumber":35,"author":{"gitId":"Neha-5678"},"content":"     * Returns true if a given string is a valid name.","lastModifiedDate":"2021-10-06"},{"lineNumber":36,"author":{"gitId":"Neha-5678"},"content":"     */","lastModifiedDate":"2021-10-06"},{"lineNumber":37,"author":{"gitId":"eltonyeh"},"content":"    public static boolean isValidDescription(String test) {","lastModifiedDate":"2021-10-12"},{"lineNumber":38,"author":{"gitId":"Neha-5678"},"content":"        return test.matches(VALIDATION_REGEX);","lastModifiedDate":"2021-10-06"},{"lineNumber":39,"author":{"gitId":"Neha-5678"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":40,"author":{"gitId":"Neha-5678"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":41,"author":{"gitId":"Neha-5678"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":42,"author":{"gitId":"Neha-5678"},"content":"    @Override","lastModifiedDate":"2021-10-06"},{"lineNumber":43,"author":{"gitId":"Neha-5678"},"content":"    public String toString() {","lastModifiedDate":"2021-10-06"},{"lineNumber":44,"author":{"gitId":"Neha-5678"},"content":"        return description;","lastModifiedDate":"2021-10-19"},{"lineNumber":45,"author":{"gitId":"Neha-5678"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":46,"author":{"gitId":"Neha-5678"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":47,"author":{"gitId":"Neha-5678"},"content":"    @Override","lastModifiedDate":"2021-10-06"},{"lineNumber":48,"author":{"gitId":"Neha-5678"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-06"},{"lineNumber":49,"author":{"gitId":"Neha-5678"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-10-06"},{"lineNumber":50,"author":{"gitId":"eltonyeh"},"content":"                || (other instanceof Description // instanceof handles nulls","lastModifiedDate":"2021-10-12"},{"lineNumber":51,"author":{"gitId":"Neha-5678"},"content":"                \u0026\u0026 description.equals(((Description) other).description)); // state check","lastModifiedDate":"2021-10-19"},{"lineNumber":52,"author":{"gitId":"Neha-5678"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":53,"author":{"gitId":"Neha-5678"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":54,"author":{"gitId":"Neha-5678"},"content":"    @Override","lastModifiedDate":"2021-10-06"},{"lineNumber":55,"author":{"gitId":"Neha-5678"},"content":"    public int hashCode() {","lastModifiedDate":"2021-10-06"},{"lineNumber":56,"author":{"gitId":"Neha-5678"},"content":"        return description.hashCode();","lastModifiedDate":"2021-10-19"},{"lineNumber":57,"author":{"gitId":"Neha-5678"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":58,"author":{"gitId":"Neha-5678"},"content":"}","lastModifiedDate":"2021-10-06"}],"authorContributionMap":{"Neha-5678":52,"eltonyeh":6}},{"path":"src/main/java/seedu/address/model/task/Task.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Neha-5678"},"content":"package seedu.address.model.task;","lastModifiedDate":"2021-10-06"},{"lineNumber":2,"author":{"gitId":"Neha-5678"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":3,"author":{"gitId":"Neha-5678"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2021-10-06"},{"lineNumber":4,"author":{"gitId":"Neha-5678"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":5,"author":{"gitId":"Neha-5678"},"content":"import java.util.Objects;","lastModifiedDate":"2021-10-06"},{"lineNumber":6,"author":{"gitId":"Neha-5678"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":7,"author":{"gitId":"eltonyeh"},"content":"import seedu.address.model.id.HasUniqueId;","lastModifiedDate":"2021-10-10"},{"lineNumber":8,"author":{"gitId":"eltonyeh"},"content":"import seedu.address.model.id.UniqueId;","lastModifiedDate":"2021-10-10"},{"lineNumber":9,"author":{"gitId":"eltonyeh"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":10,"author":{"gitId":"Neha-5678"},"content":"/**","lastModifiedDate":"2021-10-06"},{"lineNumber":11,"author":{"gitId":"Neha-5678"},"content":" * Represents a Task in the address book.","lastModifiedDate":"2021-10-06"},{"lineNumber":12,"author":{"gitId":"Neha-5678"},"content":" * Guarantees: details are present and not null, field values are validated, immutable.","lastModifiedDate":"2021-10-06"},{"lineNumber":13,"author":{"gitId":"Neha-5678"},"content":" */","lastModifiedDate":"2021-10-06"},{"lineNumber":14,"author":{"gitId":"eltonyeh"},"content":"public class Task implements HasUniqueId {","lastModifiedDate":"2021-10-10"},{"lineNumber":15,"author":{"gitId":"eltonyeh"},"content":"    // The task description","lastModifiedDate":"2021-10-12"},{"lineNumber":16,"author":{"gitId":"eltonyeh"},"content":"    private final Description description;","lastModifiedDate":"2021-10-12"},{"lineNumber":17,"author":{"gitId":"Neha-5678"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":18,"author":{"gitId":"eltonyeh"},"content":"    // The deadline of the task","lastModifiedDate":"2021-10-08"},{"lineNumber":19,"author":{"gitId":"Neha-5678"},"content":"    private final Deadline deadline;","lastModifiedDate":"2021-10-06"},{"lineNumber":20,"author":{"gitId":"Neha-5678"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":21,"author":{"gitId":"eltonyeh"},"content":"    // The id of the task","lastModifiedDate":"2021-10-08"},{"lineNumber":22,"author":{"gitId":"eltonyeh"},"content":"    private final UniqueId id;","lastModifiedDate":"2021-10-08"},{"lineNumber":23,"author":{"gitId":"eltonyeh"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":24,"author":{"gitId":"Neha-5678"},"content":"    /**","lastModifiedDate":"2021-10-06"},{"lineNumber":25,"author":{"gitId":"Neha-5678"},"content":"     * Every field must be present and not null.","lastModifiedDate":"2021-10-06"},{"lineNumber":26,"author":{"gitId":"Neha-5678"},"content":"     */","lastModifiedDate":"2021-10-06"},{"lineNumber":27,"author":{"gitId":"eltonyeh"},"content":"    public Task(Description description, Deadline deadline) {","lastModifiedDate":"2021-10-12"},{"lineNumber":28,"author":{"gitId":"eltonyeh"},"content":"        this.id \u003d UniqueId.generateId(this);","lastModifiedDate":"2021-10-10"},{"lineNumber":29,"author":{"gitId":"eltonyeh"},"content":"        requireAllNonNull(description, deadline, id);","lastModifiedDate":"2021-10-12"},{"lineNumber":30,"author":{"gitId":"eltonyeh"},"content":"        this.description \u003d description;","lastModifiedDate":"2021-10-12"},{"lineNumber":31,"author":{"gitId":"Neha-5678"},"content":"        this.deadline \u003d deadline;","lastModifiedDate":"2021-10-06"},{"lineNumber":32,"author":{"gitId":"Neha-5678"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":33,"author":{"gitId":"Neha-5678"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":34,"author":{"gitId":"Neha-5678"},"content":"    /**","lastModifiedDate":"2021-10-11"},{"lineNumber":35,"author":{"gitId":"Neha-5678"},"content":"     * Every field must be present and not null.","lastModifiedDate":"2021-10-11"},{"lineNumber":36,"author":{"gitId":"Neha-5678"},"content":"     */","lastModifiedDate":"2021-10-11"},{"lineNumber":37,"author":{"gitId":"eltonyeh"},"content":"    public Task(Description description, Deadline deadline, UniqueId id) {","lastModifiedDate":"2021-10-12"},{"lineNumber":38,"author":{"gitId":"eltonyeh"},"content":"        requireAllNonNull(description, deadline, id);","lastModifiedDate":"2021-10-12"},{"lineNumber":39,"author":{"gitId":"eltonyeh"},"content":"        this.description \u003d description;","lastModifiedDate":"2021-10-12"},{"lineNumber":40,"author":{"gitId":"Neha-5678"},"content":"        this.deadline \u003d deadline;","lastModifiedDate":"2021-10-11"},{"lineNumber":41,"author":{"gitId":"Neha-5678"},"content":"        this.id \u003d id;","lastModifiedDate":"2021-10-11"},{"lineNumber":42,"author":{"gitId":"jeremy-7007"},"content":"        id.setOwner(this);","lastModifiedDate":"2021-10-12"},{"lineNumber":43,"author":{"gitId":"Neha-5678"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":44,"author":{"gitId":"Neha-5678"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":45,"author":{"gitId":"Neha-5678"},"content":"    public Description getDescription() {","lastModifiedDate":"2021-10-19"},{"lineNumber":46,"author":{"gitId":"eltonyeh"},"content":"        return description;","lastModifiedDate":"2021-10-12"},{"lineNumber":47,"author":{"gitId":"Neha-5678"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":48,"author":{"gitId":"Neha-5678"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":49,"author":{"gitId":"Neha-5678"},"content":"    public Deadline getDeadline() {","lastModifiedDate":"2021-10-06"},{"lineNumber":50,"author":{"gitId":"Neha-5678"},"content":"        return deadline;","lastModifiedDate":"2021-10-06"},{"lineNumber":51,"author":{"gitId":"Neha-5678"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":52,"author":{"gitId":"Neha-5678"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":53,"author":{"gitId":"eltonyeh"},"content":"    public UniqueId getId() {","lastModifiedDate":"2021-10-08"},{"lineNumber":54,"author":{"gitId":"eltonyeh"},"content":"        return id;","lastModifiedDate":"2021-10-08"},{"lineNumber":55,"author":{"gitId":"eltonyeh"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":56,"author":{"gitId":"eltonyeh"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":57,"author":{"gitId":"Neha-5678"},"content":"    /**","lastModifiedDate":"2021-10-06"},{"lineNumber":58,"author":{"gitId":"eltonyeh"},"content":"     * Returns true if both tasks have the same description and deadline.","lastModifiedDate":"2021-10-12"},{"lineNumber":59,"author":{"gitId":"Neha-5678"},"content":"     * This defines a weaker notion of equality between two persons.","lastModifiedDate":"2021-10-06"},{"lineNumber":60,"author":{"gitId":"Neha-5678"},"content":"     */","lastModifiedDate":"2021-10-06"},{"lineNumber":61,"author":{"gitId":"Neha-5678"},"content":"    public boolean isSameTask(Task otherTask) {","lastModifiedDate":"2021-10-06"},{"lineNumber":62,"author":{"gitId":"Neha-5678"},"content":"        if (otherTask \u003d\u003d this) {","lastModifiedDate":"2021-10-06"},{"lineNumber":63,"author":{"gitId":"Neha-5678"},"content":"            return true;","lastModifiedDate":"2021-10-06"},{"lineNumber":64,"author":{"gitId":"Neha-5678"},"content":"        }","lastModifiedDate":"2021-10-06"},{"lineNumber":65,"author":{"gitId":"Neha-5678"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":66,"author":{"gitId":"Neha-5678"},"content":"        return otherTask !\u003d null","lastModifiedDate":"2021-10-06"},{"lineNumber":67,"author":{"gitId":"Neha-5678"},"content":"                \u0026\u0026 otherTask.getDescription().equals(getDescription())","lastModifiedDate":"2021-10-19"},{"lineNumber":68,"author":{"gitId":"eltonyeh"},"content":"                \u0026\u0026 otherTask.getDeadline().equals(getDeadline());","lastModifiedDate":"2021-10-08"},{"lineNumber":69,"author":{"gitId":"Neha-5678"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":70,"author":{"gitId":"Neha-5678"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":71,"author":{"gitId":"Neha-5678"},"content":"    /**","lastModifiedDate":"2021-10-06"},{"lineNumber":72,"author":{"gitId":"eltonyeh"},"content":"     * Returns true if both tasks have the same id, description and deadline.","lastModifiedDate":"2021-10-12"},{"lineNumber":73,"author":{"gitId":"Neha-5678"},"content":"     * This defines a stronger notion of equality between two persons.","lastModifiedDate":"2021-10-06"},{"lineNumber":74,"author":{"gitId":"Neha-5678"},"content":"     */","lastModifiedDate":"2021-10-06"},{"lineNumber":75,"author":{"gitId":"Neha-5678"},"content":"    @Override","lastModifiedDate":"2021-10-06"},{"lineNumber":76,"author":{"gitId":"Neha-5678"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-06"},{"lineNumber":77,"author":{"gitId":"Neha-5678"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2021-10-06"},{"lineNumber":78,"author":{"gitId":"Neha-5678"},"content":"            return true;","lastModifiedDate":"2021-10-06"},{"lineNumber":79,"author":{"gitId":"Neha-5678"},"content":"        }","lastModifiedDate":"2021-10-06"},{"lineNumber":80,"author":{"gitId":"Neha-5678"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":81,"author":{"gitId":"Neha-5678"},"content":"        if (!(other instanceof Task)) {","lastModifiedDate":"2021-10-06"},{"lineNumber":82,"author":{"gitId":"Neha-5678"},"content":"            return false;","lastModifiedDate":"2021-10-06"},{"lineNumber":83,"author":{"gitId":"Neha-5678"},"content":"        }","lastModifiedDate":"2021-10-06"},{"lineNumber":84,"author":{"gitId":"Neha-5678"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":85,"author":{"gitId":"Neha-5678"},"content":"        Task otherTask \u003d (Task) other;","lastModifiedDate":"2021-10-06"},{"lineNumber":86,"author":{"gitId":"eltonyeh"},"content":"        return otherTask.getId().equals(getId()) \u0026\u0026 isSameTask(otherTask);","lastModifiedDate":"2021-10-08"},{"lineNumber":87,"author":{"gitId":"Neha-5678"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":88,"author":{"gitId":"Neha-5678"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":89,"author":{"gitId":"Neha-5678"},"content":"    @Override","lastModifiedDate":"2021-10-06"},{"lineNumber":90,"author":{"gitId":"Neha-5678"},"content":"    public int hashCode() {","lastModifiedDate":"2021-10-06"},{"lineNumber":91,"author":{"gitId":"Neha-5678"},"content":"        // use this method for custom fields hashing instead of implementing your own","lastModifiedDate":"2021-10-06"},{"lineNumber":92,"author":{"gitId":"eltonyeh"},"content":"        return Objects.hash(description, deadline, id);","lastModifiedDate":"2021-10-12"},{"lineNumber":93,"author":{"gitId":"Neha-5678"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":94,"author":{"gitId":"Neha-5678"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":95,"author":{"gitId":"Neha-5678"},"content":"    @Override","lastModifiedDate":"2021-10-06"},{"lineNumber":96,"author":{"gitId":"Neha-5678"},"content":"    public String toString() {","lastModifiedDate":"2021-10-06"},{"lineNumber":97,"author":{"gitId":"Neha-5678"},"content":"        return getDescription()","lastModifiedDate":"2021-10-19"},{"lineNumber":98,"author":{"gitId":"eltonyeh"},"content":"                + \"; Deadline: \"","lastModifiedDate":"2021-10-08"},{"lineNumber":99,"author":{"gitId":"eltonyeh"},"content":"                + getDeadline();","lastModifiedDate":"2021-10-08"},{"lineNumber":100,"author":{"gitId":"Neha-5678"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":101,"author":{"gitId":"jeremy-7007"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":102,"author":{"gitId":"jeremy-7007"},"content":"    /**","lastModifiedDate":"2021-11-06"},{"lineNumber":103,"author":{"gitId":"jeremy-7007"},"content":"     * Returns the task string with given completion status for use in PersonViewCard","lastModifiedDate":"2021-11-06"},{"lineNumber":104,"author":{"gitId":"jeremy-7007"},"content":"     */","lastModifiedDate":"2021-11-06"},{"lineNumber":105,"author":{"gitId":"jeremy-7007"},"content":"    public String toCompletionString(Boolean isDone) {","lastModifiedDate":"2021-11-06"},{"lineNumber":106,"author":{"gitId":"jeremy-7007"},"content":"        return (isDone ? \"[X] \" : \"[  ] \") + toString();","lastModifiedDate":"2021-11-06"},{"lineNumber":107,"author":{"gitId":"jeremy-7007"},"content":"    }","lastModifiedDate":"2021-11-06"},{"lineNumber":108,"author":{"gitId":"Neha-5678"},"content":"}","lastModifiedDate":"2021-10-06"}],"authorContributionMap":{"Neha-5678":71,"jeremy-7007":8,"eltonyeh":29}},{"path":"src/main/java/seedu/address/model/task/TaskNameContainsKeywordsPredicate.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Neha-5678"},"content":"package seedu.address.model.task;","lastModifiedDate":"2021-10-25"},{"lineNumber":2,"author":{"gitId":"Neha-5678"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":3,"author":{"gitId":"Neha-5678"},"content":"import java.util.List;","lastModifiedDate":"2021-10-25"},{"lineNumber":4,"author":{"gitId":"Neha-5678"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2021-10-25"},{"lineNumber":5,"author":{"gitId":"Neha-5678"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":6,"author":{"gitId":"Neha-5678"},"content":"import seedu.address.commons.util.StringUtil;","lastModifiedDate":"2021-10-25"},{"lineNumber":7,"author":{"gitId":"Neha-5678"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":8,"author":{"gitId":"Neha-5678"},"content":"/**","lastModifiedDate":"2021-10-25"},{"lineNumber":9,"author":{"gitId":"Neha-5678"},"content":" * Tests that a {@code Task}\u0027s {@code Name} matches any of the keywords given.","lastModifiedDate":"2021-10-25"},{"lineNumber":10,"author":{"gitId":"Neha-5678"},"content":" */","lastModifiedDate":"2021-10-25"},{"lineNumber":11,"author":{"gitId":"Neha-5678"},"content":"public class TaskNameContainsKeywordsPredicate implements Predicate\u003cTask\u003e {","lastModifiedDate":"2021-10-25"},{"lineNumber":12,"author":{"gitId":"Neha-5678"},"content":"    private final List\u003cString\u003e keywords;","lastModifiedDate":"2021-10-25"},{"lineNumber":13,"author":{"gitId":"Neha-5678"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":14,"author":{"gitId":"Neha-5678"},"content":"    public TaskNameContainsKeywordsPredicate(List\u003cString\u003e keywords) {","lastModifiedDate":"2021-10-25"},{"lineNumber":15,"author":{"gitId":"Neha-5678"},"content":"        this.keywords \u003d keywords;","lastModifiedDate":"2021-10-25"},{"lineNumber":16,"author":{"gitId":"Neha-5678"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":17,"author":{"gitId":"Neha-5678"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":18,"author":{"gitId":"Neha-5678"},"content":"    @Override","lastModifiedDate":"2021-10-25"},{"lineNumber":19,"author":{"gitId":"Neha-5678"},"content":"    public boolean test(Task task) {","lastModifiedDate":"2021-10-25"},{"lineNumber":20,"author":{"gitId":"Neha-5678"},"content":"        return keywords.stream()","lastModifiedDate":"2021-10-25"},{"lineNumber":21,"author":{"gitId":"Neha-5678"},"content":"                .anyMatch(keyword -\u003e StringUtil.containsWordIgnoreCase(task.getDescription().description, keyword));","lastModifiedDate":"2021-10-25"},{"lineNumber":22,"author":{"gitId":"Neha-5678"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":23,"author":{"gitId":"Neha-5678"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":24,"author":{"gitId":"Neha-5678"},"content":"    @Override","lastModifiedDate":"2021-10-25"},{"lineNumber":25,"author":{"gitId":"Neha-5678"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-25"},{"lineNumber":26,"author":{"gitId":"Neha-5678"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-10-25"},{"lineNumber":27,"author":{"gitId":"Neha-5678"},"content":"                || (other instanceof TaskNameContainsKeywordsPredicate // instanceof handles nulls","lastModifiedDate":"2021-10-25"},{"lineNumber":28,"author":{"gitId":"Neha-5678"},"content":"                \u0026\u0026 keywords.equals(((TaskNameContainsKeywordsPredicate) other).keywords)); // state check","lastModifiedDate":"2021-10-25"},{"lineNumber":29,"author":{"gitId":"Neha-5678"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":30,"author":{"gitId":"Neha-5678"},"content":"}","lastModifiedDate":"2021-10-25"}],"authorContributionMap":{"Neha-5678":30}},{"path":"src/main/java/seedu/address/model/task/UniqueTaskList.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Neha-5678"},"content":"package seedu.address.model.task;","lastModifiedDate":"2021-10-06"},{"lineNumber":2,"author":{"gitId":"Neha-5678"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":3,"author":{"gitId":"Neha-5678"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-06"},{"lineNumber":4,"author":{"gitId":"Neha-5678"},"content":"import static seedu.address.commons.util.CollectionUtil.requireAllNonNull;","lastModifiedDate":"2021-10-06"},{"lineNumber":5,"author":{"gitId":"Neha-5678"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":6,"author":{"gitId":"Neha-5678"},"content":"import java.util.Iterator;","lastModifiedDate":"2021-10-06"},{"lineNumber":7,"author":{"gitId":"Neha-5678"},"content":"import java.util.List;","lastModifiedDate":"2021-10-06"},{"lineNumber":8,"author":{"gitId":"tanhuakun"},"content":"import java.util.Set;","lastModifiedDate":"2021-10-26"},{"lineNumber":9,"author":{"gitId":"Neha-5678"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":10,"author":{"gitId":"Neha-5678"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2021-10-06"},{"lineNumber":11,"author":{"gitId":"Neha-5678"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-10-06"},{"lineNumber":12,"author":{"gitId":"tanhuakun"},"content":"import seedu.address.model.id.UniqueId;","lastModifiedDate":"2021-10-26"},{"lineNumber":13,"author":{"gitId":"tanhuakun"},"content":"import seedu.address.model.id.UniqueIdMapper;","lastModifiedDate":"2021-10-26"},{"lineNumber":14,"author":{"gitId":"Neha-5678"},"content":"import seedu.address.model.task.exceptions.DuplicateTaskException;","lastModifiedDate":"2021-10-06"},{"lineNumber":15,"author":{"gitId":"Neha-5678"},"content":"import seedu.address.model.task.exceptions.TaskNotFoundException;","lastModifiedDate":"2021-10-06"},{"lineNumber":16,"author":{"gitId":"Neha-5678"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":17,"author":{"gitId":"Neha-5678"},"content":"/**","lastModifiedDate":"2021-10-06"},{"lineNumber":18,"author":{"gitId":"Neha-5678"},"content":" * A list of tasks that enforces uniqueness between its elements and does not allow nulls.","lastModifiedDate":"2021-10-06"},{"lineNumber":19,"author":{"gitId":"Neha-5678"},"content":" * A task is considered unique by comparing using {@code Task#isSameTask(Task)}. As such, adding and updating of","lastModifiedDate":"2021-10-06"},{"lineNumber":20,"author":{"gitId":"eltonyeh"},"content":" * tasks uses Task#isSameTask(Task) for equality to ensure that the task being added or updated is","lastModifiedDate":"2021-10-08"},{"lineNumber":21,"author":{"gitId":"eltonyeh"},"content":" * unique in terms of identity in the UniquePersonList. However, the removal of a task uses Task#equals(Object) to","lastModifiedDate":"2021-10-08"},{"lineNumber":22,"author":{"gitId":"eltonyeh"},"content":" * ensure that the task with exactly the same fields will be removed.","lastModifiedDate":"2021-10-08"},{"lineNumber":23,"author":{"gitId":"Neha-5678"},"content":" *","lastModifiedDate":"2021-10-06"},{"lineNumber":24,"author":{"gitId":"Neha-5678"},"content":" * Supports a minimal set of list operations.","lastModifiedDate":"2021-10-06"},{"lineNumber":25,"author":{"gitId":"Neha-5678"},"content":" *","lastModifiedDate":"2021-10-06"},{"lineNumber":26,"author":{"gitId":"Neha-5678"},"content":" * @see Task#isSameTask(Task)","lastModifiedDate":"2021-10-06"},{"lineNumber":27,"author":{"gitId":"Neha-5678"},"content":" */","lastModifiedDate":"2021-10-06"},{"lineNumber":28,"author":{"gitId":"tanhuakun"},"content":"public class UniqueTaskList implements Iterable\u003cTask\u003e, UniqueIdMapper\u003cTask\u003e {","lastModifiedDate":"2021-10-26"},{"lineNumber":29,"author":{"gitId":"Neha-5678"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":30,"author":{"gitId":"Neha-5678"},"content":"    private final ObservableList\u003cTask\u003e internalList \u003d FXCollections.observableArrayList();","lastModifiedDate":"2021-10-06"},{"lineNumber":31,"author":{"gitId":"Neha-5678"},"content":"    private final ObservableList\u003cTask\u003e internalUnmodifiableList \u003d","lastModifiedDate":"2021-10-06"},{"lineNumber":32,"author":{"gitId":"Neha-5678"},"content":"            FXCollections.unmodifiableObservableList(internalList);","lastModifiedDate":"2021-10-06"},{"lineNumber":33,"author":{"gitId":"Neha-5678"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":34,"author":{"gitId":"Neha-5678"},"content":"    /**","lastModifiedDate":"2021-10-06"},{"lineNumber":35,"author":{"gitId":"Neha-5678"},"content":"     * Returns true if the list contains an equivalent task as the given argument.","lastModifiedDate":"2021-10-06"},{"lineNumber":36,"author":{"gitId":"Neha-5678"},"content":"     */","lastModifiedDate":"2021-10-06"},{"lineNumber":37,"author":{"gitId":"Neha-5678"},"content":"    public boolean contains(Task toCheck) {","lastModifiedDate":"2021-10-06"},{"lineNumber":38,"author":{"gitId":"Neha-5678"},"content":"        requireNonNull(toCheck);","lastModifiedDate":"2021-10-06"},{"lineNumber":39,"author":{"gitId":"Neha-5678"},"content":"        return internalList.stream().anyMatch(toCheck::isSameTask);","lastModifiedDate":"2021-10-06"},{"lineNumber":40,"author":{"gitId":"Neha-5678"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":41,"author":{"gitId":"Neha-5678"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":42,"author":{"gitId":"Neha-5678"},"content":"    /**","lastModifiedDate":"2021-10-06"},{"lineNumber":43,"author":{"gitId":"Neha-5678"},"content":"     * Adds a task to the list.","lastModifiedDate":"2021-10-06"},{"lineNumber":44,"author":{"gitId":"Neha-5678"},"content":"     * The task must not already exist in the list.","lastModifiedDate":"2021-10-06"},{"lineNumber":45,"author":{"gitId":"Neha-5678"},"content":"     */","lastModifiedDate":"2021-10-06"},{"lineNumber":46,"author":{"gitId":"Neha-5678"},"content":"    public void add(Task toAdd) {","lastModifiedDate":"2021-10-06"},{"lineNumber":47,"author":{"gitId":"Neha-5678"},"content":"        requireNonNull(toAdd);","lastModifiedDate":"2021-10-06"},{"lineNumber":48,"author":{"gitId":"Neha-5678"},"content":"        if (contains(toAdd)) {","lastModifiedDate":"2021-10-06"},{"lineNumber":49,"author":{"gitId":"Neha-5678"},"content":"            throw new DuplicateTaskException();","lastModifiedDate":"2021-10-06"},{"lineNumber":50,"author":{"gitId":"Neha-5678"},"content":"        }","lastModifiedDate":"2021-10-06"},{"lineNumber":51,"author":{"gitId":"Neha-5678"},"content":"        internalList.add(toAdd);","lastModifiedDate":"2021-10-06"},{"lineNumber":52,"author":{"gitId":"Neha-5678"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":53,"author":{"gitId":"Neha-5678"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":54,"author":{"gitId":"Neha-5678"},"content":"    /**","lastModifiedDate":"2021-10-06"},{"lineNumber":55,"author":{"gitId":"Neha-5678"},"content":"     * Replaces the task {@code target} in the list with {@code editedTask}.","lastModifiedDate":"2021-10-06"},{"lineNumber":56,"author":{"gitId":"Neha-5678"},"content":"     * {@code target} must exist in the list.","lastModifiedDate":"2021-10-06"},{"lineNumber":57,"author":{"gitId":"Neha-5678"},"content":"     * The task identity of {@code editedTask} must not be the same as another existing task in the list.","lastModifiedDate":"2021-10-06"},{"lineNumber":58,"author":{"gitId":"Neha-5678"},"content":"     */","lastModifiedDate":"2021-10-06"},{"lineNumber":59,"author":{"gitId":"Neha-5678"},"content":"    public void setTask(Task target, Task editedTask) {","lastModifiedDate":"2021-10-06"},{"lineNumber":60,"author":{"gitId":"Neha-5678"},"content":"        requireAllNonNull(target, editedTask);","lastModifiedDate":"2021-10-06"},{"lineNumber":61,"author":{"gitId":"Neha-5678"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":62,"author":{"gitId":"Neha-5678"},"content":"        int index \u003d internalList.indexOf(target);","lastModifiedDate":"2021-10-06"},{"lineNumber":63,"author":{"gitId":"Neha-5678"},"content":"        if (index \u003d\u003d -1) {","lastModifiedDate":"2021-10-06"},{"lineNumber":64,"author":{"gitId":"Neha-5678"},"content":"            throw new TaskNotFoundException();","lastModifiedDate":"2021-10-06"},{"lineNumber":65,"author":{"gitId":"Neha-5678"},"content":"        }","lastModifiedDate":"2021-10-06"},{"lineNumber":66,"author":{"gitId":"Neha-5678"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":67,"author":{"gitId":"Neha-5678"},"content":"        if (!target.isSameTask(editedTask) \u0026\u0026 contains(editedTask)) {","lastModifiedDate":"2021-10-06"},{"lineNumber":68,"author":{"gitId":"Neha-5678"},"content":"            throw new DuplicateTaskException();","lastModifiedDate":"2021-10-06"},{"lineNumber":69,"author":{"gitId":"Neha-5678"},"content":"        }","lastModifiedDate":"2021-10-06"},{"lineNumber":70,"author":{"gitId":"Neha-5678"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":71,"author":{"gitId":"Neha-5678"},"content":"        internalList.set(index, editedTask);","lastModifiedDate":"2021-10-06"},{"lineNumber":72,"author":{"gitId":"Neha-5678"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":73,"author":{"gitId":"Neha-5678"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":74,"author":{"gitId":"Neha-5678"},"content":"    /**","lastModifiedDate":"2021-10-06"},{"lineNumber":75,"author":{"gitId":"Neha-5678"},"content":"     * Removes the equivalent task from the list.","lastModifiedDate":"2021-10-06"},{"lineNumber":76,"author":{"gitId":"Neha-5678"},"content":"     * The task must exist in the list.","lastModifiedDate":"2021-10-06"},{"lineNumber":77,"author":{"gitId":"Neha-5678"},"content":"     */","lastModifiedDate":"2021-10-06"},{"lineNumber":78,"author":{"gitId":"Neha-5678"},"content":"    public void remove(Task toRemove) {","lastModifiedDate":"2021-10-06"},{"lineNumber":79,"author":{"gitId":"Neha-5678"},"content":"        requireNonNull(toRemove);","lastModifiedDate":"2021-10-06"},{"lineNumber":80,"author":{"gitId":"Neha-5678"},"content":"        if (!internalList.remove(toRemove)) {","lastModifiedDate":"2021-10-06"},{"lineNumber":81,"author":{"gitId":"Neha-5678"},"content":"            throw new TaskNotFoundException();","lastModifiedDate":"2021-10-06"},{"lineNumber":82,"author":{"gitId":"Neha-5678"},"content":"        }","lastModifiedDate":"2021-10-06"},{"lineNumber":83,"author":{"gitId":"Neha-5678"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":84,"author":{"gitId":"Neha-5678"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":85,"author":{"gitId":"Neha-5678"},"content":"    //This method is used for testing later","lastModifiedDate":"2021-10-06"},{"lineNumber":86,"author":{"gitId":"Neha-5678"},"content":"    public void setTasks(UniqueTaskList replacement) {","lastModifiedDate":"2021-10-06"},{"lineNumber":87,"author":{"gitId":"Neha-5678"},"content":"        requireNonNull(replacement);","lastModifiedDate":"2021-10-06"},{"lineNumber":88,"author":{"gitId":"Neha-5678"},"content":"        internalList.setAll(replacement.internalList);","lastModifiedDate":"2021-10-06"},{"lineNumber":89,"author":{"gitId":"Neha-5678"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":90,"author":{"gitId":"Neha-5678"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":91,"author":{"gitId":"Neha-5678"},"content":"    /**","lastModifiedDate":"2021-10-06"},{"lineNumber":92,"author":{"gitId":"Neha-5678"},"content":"     * Replaces the contents of this list with {@code task}.","lastModifiedDate":"2021-10-06"},{"lineNumber":93,"author":{"gitId":"Neha-5678"},"content":"     * {@code tasks} must not contain duplicate tasks.","lastModifiedDate":"2021-10-06"},{"lineNumber":94,"author":{"gitId":"Neha-5678"},"content":"     */","lastModifiedDate":"2021-10-06"},{"lineNumber":95,"author":{"gitId":"Neha-5678"},"content":"    public void setTasks(List\u003cTask\u003e tasks) {","lastModifiedDate":"2021-10-06"},{"lineNumber":96,"author":{"gitId":"Neha-5678"},"content":"        requireAllNonNull(tasks);","lastModifiedDate":"2021-10-06"},{"lineNumber":97,"author":{"gitId":"Neha-5678"},"content":"        if (!tasksAreUnique(tasks)) {","lastModifiedDate":"2021-10-06"},{"lineNumber":98,"author":{"gitId":"Neha-5678"},"content":"            throw new DuplicateTaskException();","lastModifiedDate":"2021-10-06"},{"lineNumber":99,"author":{"gitId":"Neha-5678"},"content":"        }","lastModifiedDate":"2021-10-06"},{"lineNumber":100,"author":{"gitId":"Neha-5678"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":101,"author":{"gitId":"Neha-5678"},"content":"        internalList.setAll(tasks);","lastModifiedDate":"2021-10-06"},{"lineNumber":102,"author":{"gitId":"Neha-5678"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":103,"author":{"gitId":"Neha-5678"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":104,"author":{"gitId":"Neha-5678"},"content":"    /**","lastModifiedDate":"2021-10-06"},{"lineNumber":105,"author":{"gitId":"Neha-5678"},"content":"     * Returns the backing list as an unmodifiable {@code ObservableList}.","lastModifiedDate":"2021-10-06"},{"lineNumber":106,"author":{"gitId":"Neha-5678"},"content":"     */","lastModifiedDate":"2021-10-06"},{"lineNumber":107,"author":{"gitId":"Neha-5678"},"content":"    public ObservableList\u003cTask\u003e asUnmodifiableObservableList() {","lastModifiedDate":"2021-10-06"},{"lineNumber":108,"author":{"gitId":"Neha-5678"},"content":"        return internalUnmodifiableList;","lastModifiedDate":"2021-10-06"},{"lineNumber":109,"author":{"gitId":"Neha-5678"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":110,"author":{"gitId":"Neha-5678"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":111,"author":{"gitId":"Neha-5678"},"content":"    @Override","lastModifiedDate":"2021-10-06"},{"lineNumber":112,"author":{"gitId":"Neha-5678"},"content":"    public Iterator\u003cTask\u003e iterator() {","lastModifiedDate":"2021-10-06"},{"lineNumber":113,"author":{"gitId":"Neha-5678"},"content":"        return internalList.iterator();","lastModifiedDate":"2021-10-06"},{"lineNumber":114,"author":{"gitId":"Neha-5678"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":115,"author":{"gitId":"Neha-5678"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":116,"author":{"gitId":"tanhuakun"},"content":"    @Override","lastModifiedDate":"2021-10-26"},{"lineNumber":117,"author":{"gitId":"tanhuakun"},"content":"    public Set\u003cTask\u003e getFromUniqueIds(Set\u003cUniqueId\u003e ids) {","lastModifiedDate":"2021-10-26"},{"lineNumber":118,"author":{"gitId":"tanhuakun"},"content":"        return UniqueIdMapper.\u003cTask\u003egetFromUniqueIdsAndItemList(ids, internalList);","lastModifiedDate":"2021-10-26"},{"lineNumber":119,"author":{"gitId":"tanhuakun"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":120,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":121,"author":{"gitId":"Neha-5678"},"content":"    @Override","lastModifiedDate":"2021-10-06"},{"lineNumber":122,"author":{"gitId":"Neha-5678"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-06"},{"lineNumber":123,"author":{"gitId":"Neha-5678"},"content":"        return other \u003d\u003d this // short circuit if same object","lastModifiedDate":"2021-10-06"},{"lineNumber":124,"author":{"gitId":"Neha-5678"},"content":"                || (other instanceof UniqueTaskList // instanceof handles nulls","lastModifiedDate":"2021-10-06"},{"lineNumber":125,"author":{"gitId":"Neha-5678"},"content":"                \u0026\u0026 internalList.equals(((UniqueTaskList) other).internalList));","lastModifiedDate":"2021-10-06"},{"lineNumber":126,"author":{"gitId":"Neha-5678"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":127,"author":{"gitId":"Neha-5678"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":128,"author":{"gitId":"Neha-5678"},"content":"    @Override","lastModifiedDate":"2021-10-06"},{"lineNumber":129,"author":{"gitId":"Neha-5678"},"content":"    public int hashCode() {","lastModifiedDate":"2021-10-06"},{"lineNumber":130,"author":{"gitId":"Neha-5678"},"content":"        return internalList.hashCode();","lastModifiedDate":"2021-10-06"},{"lineNumber":131,"author":{"gitId":"Neha-5678"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":132,"author":{"gitId":"Neha-5678"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":133,"author":{"gitId":"Neha-5678"},"content":"    /**","lastModifiedDate":"2021-10-06"},{"lineNumber":134,"author":{"gitId":"Neha-5678"},"content":"     * Returns true if {@code tasks} contains only unique tasks.","lastModifiedDate":"2021-10-06"},{"lineNumber":135,"author":{"gitId":"Neha-5678"},"content":"     */","lastModifiedDate":"2021-10-06"},{"lineNumber":136,"author":{"gitId":"Neha-5678"},"content":"    private boolean tasksAreUnique(List\u003cTask\u003e tasks) {","lastModifiedDate":"2021-10-06"},{"lineNumber":137,"author":{"gitId":"Neha-5678"},"content":"        for (int i \u003d 0; i \u003c tasks.size() - 1; i++) {","lastModifiedDate":"2021-10-06"},{"lineNumber":138,"author":{"gitId":"Neha-5678"},"content":"            for (int j \u003d i + 1; j \u003c tasks.size(); j++) {","lastModifiedDate":"2021-10-06"},{"lineNumber":139,"author":{"gitId":"Neha-5678"},"content":"                if (tasks.get(i).isSameTask(tasks.get(j))) {","lastModifiedDate":"2021-10-06"},{"lineNumber":140,"author":{"gitId":"Neha-5678"},"content":"                    return false;","lastModifiedDate":"2021-10-06"},{"lineNumber":141,"author":{"gitId":"Neha-5678"},"content":"                }","lastModifiedDate":"2021-10-06"},{"lineNumber":142,"author":{"gitId":"Neha-5678"},"content":"            }","lastModifiedDate":"2021-10-06"},{"lineNumber":143,"author":{"gitId":"Neha-5678"},"content":"        }","lastModifiedDate":"2021-10-06"},{"lineNumber":144,"author":{"gitId":"Neha-5678"},"content":"        return true;","lastModifiedDate":"2021-10-06"},{"lineNumber":145,"author":{"gitId":"Neha-5678"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":146,"author":{"gitId":"Neha-5678"},"content":"}","lastModifiedDate":"2021-10-06"}],"authorContributionMap":{"Neha-5678":134,"tanhuakun":9,"eltonyeh":3}},{"path":"src/main/java/seedu/address/model/task/exceptions/DuplicateTaskException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Neha-5678"},"content":"package seedu.address.model.task.exceptions;","lastModifiedDate":"2021-10-06"},{"lineNumber":2,"author":{"gitId":"Neha-5678"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":3,"author":{"gitId":"Neha-5678"},"content":"/**","lastModifiedDate":"2021-10-06"},{"lineNumber":4,"author":{"gitId":"eltonyeh"},"content":" * Signals that the operation will result in duplicate tasks (Tasks are considered duplicates if they have the same","lastModifiedDate":"2021-10-08"},{"lineNumber":5,"author":{"gitId":"Neha-5678"},"content":" * identity).","lastModifiedDate":"2021-10-06"},{"lineNumber":6,"author":{"gitId":"Neha-5678"},"content":" */","lastModifiedDate":"2021-10-06"},{"lineNumber":7,"author":{"gitId":"Neha-5678"},"content":"public class DuplicateTaskException extends RuntimeException {","lastModifiedDate":"2021-10-06"},{"lineNumber":8,"author":{"gitId":"Neha-5678"},"content":"    public DuplicateTaskException() {","lastModifiedDate":"2021-10-06"},{"lineNumber":9,"author":{"gitId":"Neha-5678"},"content":"        super(\"Operation would result in duplicate tasks\");","lastModifiedDate":"2021-10-06"},{"lineNumber":10,"author":{"gitId":"Neha-5678"},"content":"    }","lastModifiedDate":"2021-10-06"},{"lineNumber":11,"author":{"gitId":"Neha-5678"},"content":"}","lastModifiedDate":"2021-10-06"}],"authorContributionMap":{"Neha-5678":10,"eltonyeh":1}},{"path":"src/main/java/seedu/address/model/task/exceptions/TaskNotFoundException.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Neha-5678"},"content":"package seedu.address.model.task.exceptions;","lastModifiedDate":"2021-10-06"},{"lineNumber":2,"author":{"gitId":"Neha-5678"},"content":"","lastModifiedDate":"2021-10-06"},{"lineNumber":3,"author":{"gitId":"Neha-5678"},"content":"/**","lastModifiedDate":"2021-10-06"},{"lineNumber":4,"author":{"gitId":"Neha-5678"},"content":" * Signals that the operation is unable to find the specified task.","lastModifiedDate":"2021-10-06"},{"lineNumber":5,"author":{"gitId":"Neha-5678"},"content":" */","lastModifiedDate":"2021-10-06"},{"lineNumber":6,"author":{"gitId":"Neha-5678"},"content":"public class TaskNotFoundException extends RuntimeException {}","lastModifiedDate":"2021-10-06"}],"authorContributionMap":{"Neha-5678":6}},{"path":"src/main/java/seedu/address/model/util/SampleDataUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.util;","lastModifiedDate":"2016-12-20"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":3,"author":{"gitId":"Neha-5678"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-11-06"},{"lineNumber":4,"author":{"gitId":"Neha-5678"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":5,"author":{"gitId":"tanhuakun"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-16"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2018-01-21"},{"lineNumber":7,"author":{"gitId":"jeremy-7007"},"content":"import java.util.HashMap;","lastModifiedDate":"2021-10-26"},{"lineNumber":8,"author":{"gitId":"Neha-5678"},"content":"import java.util.Map;","lastModifiedDate":"2021-11-06"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-03-14"},{"lineNumber":10,"author":{"gitId":"Neha-5678"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2021-11-06"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-01-21"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":13,"author":{"gitId":"Neha-5678"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2021-11-06"},{"lineNumber":14,"author":{"gitId":"Neha-5678"},"content":"import seedu.address.logic.parser.ParserUtil;","lastModifiedDate":"2021-11-05"},{"lineNumber":15,"author":{"gitId":"Neha-5678"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-11-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2016-12-20"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2016-12-20"},{"lineNumber":18,"author":{"gitId":"Neha-5678"},"content":"import seedu.address.model.group.Group;","lastModifiedDate":"2021-11-05"},{"lineNumber":19,"author":{"gitId":"Neha-5678"},"content":"import seedu.address.model.group.GroupName;","lastModifiedDate":"2021-11-05"},{"lineNumber":20,"author":{"gitId":"jeremy-7007"},"content":"import seedu.address.model.id.UniqueId;","lastModifiedDate":"2021-10-12"},{"lineNumber":21,"author":{"gitId":"Neha-5678"},"content":"import seedu.address.model.lesson.Lesson;","lastModifiedDate":"2021-11-05"},{"lineNumber":22,"author":{"gitId":"tanhuakun"},"content":"import seedu.address.model.lesson.NoOverlapLessonList;","lastModifiedDate":"2021-10-05"},{"lineNumber":23,"author":{"gitId":"Neha-5678"},"content":"import seedu.address.model.lesson.Subject;","lastModifiedDate":"2021-11-05"},{"lineNumber":24,"author":{"gitId":"Neha-5678"},"content":"import seedu.address.model.lesson.Timeslot;","lastModifiedDate":"2021-11-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2016-12-20"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2016-12-20"},{"lineNumber":27,"author":{"gitId":"tanhuakun"},"content":"import seedu.address.model.person.Exam;","lastModifiedDate":"2021-10-16"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2016-12-20"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2016-12-20"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2016-12-20"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-03-14"},{"lineNumber":32,"author":{"gitId":"Neha-5678"},"content":"import seedu.address.model.task.Deadline;","lastModifiedDate":"2021-11-05"},{"lineNumber":33,"author":{"gitId":"Neha-5678"},"content":"import seedu.address.model.task.Description;","lastModifiedDate":"2021-11-05"},{"lineNumber":34,"author":{"gitId":"Neha-5678"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2021-11-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":36,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-16"},{"lineNumber":37,"author":{"gitId":"-"},"content":" * Contains utility methods for populating {@code AddressBook} with sample data.","lastModifiedDate":"2017-08-16"},{"lineNumber":38,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-16"},{"lineNumber":39,"author":{"gitId":"-"},"content":"public class SampleDataUtil {","lastModifiedDate":"2016-12-20"},{"lineNumber":40,"author":{"gitId":"Neha-5678"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":41,"author":{"gitId":"Neha-5678"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(SampleDataUtil.class);","lastModifiedDate":"2021-11-06"},{"lineNumber":42,"author":{"gitId":"Neha-5678"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":43,"author":{"gitId":"Neha-5678"},"content":"    public static Person[] getSamplePersons() throws ParseException {","lastModifiedDate":"2021-11-06"},{"lineNumber":44,"author":{"gitId":"Neha-5678"},"content":"        Person[] persons;","lastModifiedDate":"2021-11-06"},{"lineNumber":45,"author":{"gitId":"Neha-5678"},"content":"        try {","lastModifiedDate":"2021-11-05"},{"lineNumber":46,"author":{"gitId":"Neha-5678"},"content":"            persons \u003d new Person[] {","lastModifiedDate":"2021-11-05"},{"lineNumber":47,"author":{"gitId":"Neha-5678"},"content":"                    new Person(UniqueId.generateId(\"8df2379c-d093-4ab5-9f82-4f05d5f70c23\"), new Name(\"Alex Yeoh\"),","lastModifiedDate":"2021-11-06"},{"lineNumber":48,"author":{"gitId":"Neha-5678"},"content":"                            new Phone(\"87438807\"), new Email(\"alexyeoh@example.com\"),","lastModifiedDate":"2021-11-06"},{"lineNumber":49,"author":{"gitId":"Neha-5678"},"content":"                            new Address(\"Blk 30 Geylang Street 29, #06-40\"), getTagSet(\"friends\"),","lastModifiedDate":"2021-11-06"},{"lineNumber":50,"author":{"gitId":"Neha-5678"},"content":"                            getUniqueIdSet(\"20453a92-15bb-4871-b810-139826f024a0\"), getFirstTaskCompletion(),","lastModifiedDate":"2021-11-06"},{"lineNumber":51,"author":{"gitId":"Neha-5678"},"content":"                            new NoOverlapLessonList().addLesson(new Lesson(new Timeslot(\"18:00\", \"20:00\"),","lastModifiedDate":"2021-11-06"},{"lineNumber":52,"author":{"gitId":"Neha-5678"},"content":"                                    new Subject(\"Maths\"), ParserUtil.parseDayOfWeek(\"Mon\"))),","lastModifiedDate":"2021-11-06"},{"lineNumber":53,"author":{"gitId":"Neha-5678"},"content":"                            new ArrayList\u003cExam\u003e(), getUniqueIdSet(\"f01ff39c-e483-4191-b923-fcdbc1c64341\"))","lastModifiedDate":"2021-11-06"},{"lineNumber":54,"author":{"gitId":"Neha-5678"},"content":"                            .addExam(new Exam(new Subject(\"Maths\"),","lastModifiedDate":"2021-11-06"},{"lineNumber":55,"author":{"gitId":"Neha-5678"},"content":"                            ParserUtil.parseLocalDateTime(\"2021-12-20 14:00\"))),","lastModifiedDate":"2021-11-05"},{"lineNumber":56,"author":{"gitId":"Neha-5678"},"content":"                    new Person(UniqueId.generateId(\"e1f36b8b-3bd5-40f6-971e-eb4083398f27\"), new Name(\"Bernice Yu\"),","lastModifiedDate":"2021-11-06"},{"lineNumber":57,"author":{"gitId":"Neha-5678"},"content":"                            new Phone(\"99272758\"), new Email(\"berniceyu@example.com\"),","lastModifiedDate":"2021-11-06"},{"lineNumber":58,"author":{"gitId":"-"},"content":"                            new Address(\"Blk 30 Lorong 3 Serangoon Gardens, #07-18\"),","lastModifiedDate":"2016-12-20"},{"lineNumber":59,"author":{"gitId":"Neha-5678"},"content":"                            getTagSet(\"colleagues\", \"friends\"),","lastModifiedDate":"2021-11-06"},{"lineNumber":60,"author":{"gitId":"Neha-5678"},"content":"                            getUniqueIdSet(\"3328c8ab-ca7e-495c-ab3a-9e0e8e78138b\"), getSecondTaskCompletion(),","lastModifiedDate":"2021-11-06"},{"lineNumber":61,"author":{"gitId":"Neha-5678"},"content":"                            new NoOverlapLessonList().addLesson(new Lesson(new Timeslot(\"18:00\", \"20:00\"),","lastModifiedDate":"2021-11-06"},{"lineNumber":62,"author":{"gitId":"Neha-5678"},"content":"                                    new Subject(\"Econs\"), ParserUtil.parseDayOfWeek(\"Wed\"))),","lastModifiedDate":"2021-11-06"},{"lineNumber":63,"author":{"gitId":"Neha-5678"},"content":"                            new ArrayList\u003cExam\u003e(), getUniqueIdSet(\"c4172df3-5f8e-478b-aa26-7f4fadb83329\"))","lastModifiedDate":"2021-11-06"},{"lineNumber":64,"author":{"gitId":"Neha-5678"},"content":"                            .addExam(new Exam(new Subject(\"Econs\"),","lastModifiedDate":"2021-11-06"},{"lineNumber":65,"author":{"gitId":"Neha-5678"},"content":"                            ParserUtil.parseLocalDateTime(\"2021-12-20 18:00\"))),","lastModifiedDate":"2021-11-06"},{"lineNumber":66,"author":{"gitId":"Neha-5678"},"content":"                    new Person(UniqueId.generateId(\"824a4d52-5995-4e20-b3ea-fc4c354f2eb1\"),","lastModifiedDate":"2021-11-06"},{"lineNumber":67,"author":{"gitId":"Neha-5678"},"content":"                            new Name(\"Charlotte Oliveiro\"), new Phone(\"93210283\"), new Email(\"charlotte@example.com\"),","lastModifiedDate":"2021-11-06"},{"lineNumber":68,"author":{"gitId":"Neha-5678"},"content":"                            new Address(\"Blk 11 Ang Mo Kio Street 74, #11-04\"), getTagSet(\"neighbours\"),","lastModifiedDate":"2021-11-06"},{"lineNumber":69,"author":{"gitId":"Neha-5678"},"content":"                            getUniqueIdSet(\"3328c8ab-ca7e-495c-ab3a-9e0e8e78138b\"), getSecondTaskCompletion(),","lastModifiedDate":"2021-11-06"},{"lineNumber":70,"author":{"gitId":"Neha-5678"},"content":"                            new NoOverlapLessonList().addLesson(new Lesson(new Timeslot(\"18:00\", \"20:00\"),","lastModifiedDate":"2021-11-06"},{"lineNumber":71,"author":{"gitId":"Neha-5678"},"content":"                                    new Subject(\"Econs\"), ParserUtil.parseDayOfWeek(\"Wed\"))),","lastModifiedDate":"2021-11-06"},{"lineNumber":72,"author":{"gitId":"Neha-5678"},"content":"                            new ArrayList\u003cExam\u003e(), getUniqueIdSet(\"c4172df3-5f8e-478b-aa26-7f4fadb83329\"))","lastModifiedDate":"2021-11-06"},{"lineNumber":73,"author":{"gitId":"Neha-5678"},"content":"                            .addExam(new Exam(new Subject(\"Econs\"),","lastModifiedDate":"2021-11-06"},{"lineNumber":74,"author":{"gitId":"Neha-5678"},"content":"                            ParserUtil.parseLocalDateTime(\"2021-12-20 18:00\")))","lastModifiedDate":"2021-11-06"},{"lineNumber":75,"author":{"gitId":"-"},"content":"            };","lastModifiedDate":"2016-12-20"},{"lineNumber":76,"author":{"gitId":"Neha-5678"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2021-11-05"},{"lineNumber":77,"author":{"gitId":"Neha-5678"},"content":"            throw new ParseException(String.format(MESSAGE_INVALID_COMMAND_FORMAT), pe);","lastModifiedDate":"2021-11-06"},{"lineNumber":78,"author":{"gitId":"Neha-5678"},"content":"        }","lastModifiedDate":"2021-11-05"},{"lineNumber":79,"author":{"gitId":"Neha-5678"},"content":"        return persons;","lastModifiedDate":"2021-11-05"},{"lineNumber":80,"author":{"gitId":"Neha-5678"},"content":"    }","lastModifiedDate":"2021-11-05"},{"lineNumber":81,"author":{"gitId":"Neha-5678"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":82,"author":{"gitId":"Neha-5678"},"content":"    public static Task[] getSampleTasks() {","lastModifiedDate":"2021-11-05"},{"lineNumber":83,"author":{"gitId":"Neha-5678"},"content":"        Task[] tasks \u003d new Task[] {","lastModifiedDate":"2021-11-05"},{"lineNumber":84,"author":{"gitId":"Neha-5678"},"content":"            new Task(new Description(\"Complete math assignment\"), new Deadline(\"2021-10-10\"),","lastModifiedDate":"2021-11-06"},{"lineNumber":85,"author":{"gitId":"Neha-5678"},"content":"                UniqueId.generateId(\"20453a92-15bb-4871-b810-139826f024a0\")),","lastModifiedDate":"2021-11-06"},{"lineNumber":86,"author":{"gitId":"Neha-5678"},"content":"            new Task(new Description(\"Complete english assignment\"), new Deadline(\"2021-12-12\"),","lastModifiedDate":"2021-11-06"},{"lineNumber":87,"author":{"gitId":"Neha-5678"},"content":"                UniqueId.generateId(\"3328c8ab-ca7e-495c-ab3a-9e0e8e78138b\"))","lastModifiedDate":"2021-11-06"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        };","lastModifiedDate":"2021-11-05"},{"lineNumber":89,"author":{"gitId":"Neha-5678"},"content":"        return tasks;","lastModifiedDate":"2021-11-05"},{"lineNumber":90,"author":{"gitId":"Neha-5678"},"content":"    }","lastModifiedDate":"2021-11-05"},{"lineNumber":91,"author":{"gitId":"Neha-5678"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":92,"author":{"gitId":"Neha-5678"},"content":"    public static Map\u003cUniqueId, Boolean\u003e getFirstTaskCompletion() {","lastModifiedDate":"2021-11-06"},{"lineNumber":93,"author":{"gitId":"Neha-5678"},"content":"        Map\u003cUniqueId, Boolean\u003e taskCompletion \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2021-11-06"},{"lineNumber":94,"author":{"gitId":"Neha-5678"},"content":"        UniqueId id \u003d UniqueId.generateId(\"20453a92-15bb-4871-b810-139826f024a0\");","lastModifiedDate":"2021-11-06"},{"lineNumber":95,"author":{"gitId":"Neha-5678"},"content":"        taskCompletion.put(id, false);","lastModifiedDate":"2021-11-06"},{"lineNumber":96,"author":{"gitId":"Neha-5678"},"content":"        return taskCompletion;","lastModifiedDate":"2021-11-06"},{"lineNumber":97,"author":{"gitId":"Neha-5678"},"content":"    }","lastModifiedDate":"2021-11-06"},{"lineNumber":98,"author":{"gitId":"Neha-5678"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":99,"author":{"gitId":"Neha-5678"},"content":"    public static Map\u003cUniqueId, Boolean\u003e getSecondTaskCompletion() {","lastModifiedDate":"2021-11-06"},{"lineNumber":100,"author":{"gitId":"Neha-5678"},"content":"        Map\u003cUniqueId, Boolean\u003e taskCompletion \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2021-11-06"},{"lineNumber":101,"author":{"gitId":"Neha-5678"},"content":"        UniqueId id \u003d UniqueId.generateId(\"3328c8ab-ca7e-495c-ab3a-9e0e8e78138b\");","lastModifiedDate":"2021-11-06"},{"lineNumber":102,"author":{"gitId":"Neha-5678"},"content":"        taskCompletion.put(id, false);","lastModifiedDate":"2021-11-06"},{"lineNumber":103,"author":{"gitId":"Neha-5678"},"content":"        return taskCompletion;","lastModifiedDate":"2021-11-06"},{"lineNumber":104,"author":{"gitId":"Neha-5678"},"content":"    }","lastModifiedDate":"2021-11-06"},{"lineNumber":105,"author":{"gitId":"Neha-5678"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":106,"author":{"gitId":"Neha-5678"},"content":"    public static Group[] getSampleGroups() {","lastModifiedDate":"2021-11-05"},{"lineNumber":107,"author":{"gitId":"Neha-5678"},"content":"        Group[] groups \u003d new Group[] {","lastModifiedDate":"2021-11-05"},{"lineNumber":108,"author":{"gitId":"Neha-5678"},"content":"            new Group(new GroupName(\"Maths tutorial\"), UniqueId.generateId(\"f01ff39c-e483-4191-b923-fcdbc1c64341\"),","lastModifiedDate":"2021-11-06"},{"lineNumber":109,"author":{"gitId":"Neha-5678"},"content":"                getUniqueIdSet(\"20453a92-15bb-4871-b810-139826f024a0\"),","lastModifiedDate":"2021-11-06"},{"lineNumber":110,"author":{"gitId":"Neha-5678"},"content":"                getUniqueIdSet(\"8df2379c-d093-4ab5-9f82-4f05d5f70c23\"),","lastModifiedDate":"2021-11-05"},{"lineNumber":111,"author":{"gitId":"Neha-5678"},"content":"                new NoOverlapLessonList()),","lastModifiedDate":"2021-11-05"},{"lineNumber":112,"author":{"gitId":"Neha-5678"},"content":"            new Group(new GroupName(\"Econs tutorial\"), UniqueId.generateId(\"c4172df3-5f8e-478b-aa26-7f4fadb83329\"),","lastModifiedDate":"2021-11-06"},{"lineNumber":113,"author":{"gitId":"Neha-5678"},"content":"                getUniqueIdSet(\"3328c8ab-ca7e-495c-ab3a-9e0e8e78138b\"),","lastModifiedDate":"2021-11-06"},{"lineNumber":114,"author":{"gitId":"Neha-5678"},"content":"                getUniqueIdSet(\"e1f36b8b-3bd5-40f6-971e-eb4083398f27\",","lastModifiedDate":"2021-11-06"},{"lineNumber":115,"author":{"gitId":"Neha-5678"},"content":"                    \"824a4d52-5995-4e20-b3ea-fc4c354f2eb1\"), new NoOverlapLessonList())","lastModifiedDate":"2021-11-06"},{"lineNumber":116,"author":{"gitId":"Neha-5678"},"content":"        };","lastModifiedDate":"2021-11-05"},{"lineNumber":117,"author":{"gitId":"Neha-5678"},"content":"        return groups;","lastModifiedDate":"2021-11-05"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-20"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-20"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    public static ReadOnlyAddressBook getSampleAddressBook() {","lastModifiedDate":"2016-12-20"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        AddressBook sampleAb \u003d new AddressBook();","lastModifiedDate":"2017-04-07"},{"lineNumber":122,"author":{"gitId":"Neha-5678"},"content":"        try {","lastModifiedDate":"2021-11-06"},{"lineNumber":123,"author":{"gitId":"-"},"content":"            for (Person samplePerson : getSamplePersons()) {","lastModifiedDate":"2016-12-20"},{"lineNumber":124,"author":{"gitId":"-"},"content":"                sampleAb.addPerson(samplePerson);","lastModifiedDate":"2017-04-07"},{"lineNumber":125,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-12-20"},{"lineNumber":126,"author":{"gitId":"Neha-5678"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2021-11-06"},{"lineNumber":127,"author":{"gitId":"Neha-5678"},"content":"            logger.info(\"Invalid command format\");","lastModifiedDate":"2021-11-06"},{"lineNumber":128,"author":{"gitId":"Neha-5678"},"content":"        }","lastModifiedDate":"2021-11-06"},{"lineNumber":129,"author":{"gitId":"Neha-5678"},"content":"        for (Task sampleTask : getSampleTasks()) {","lastModifiedDate":"2021-11-05"},{"lineNumber":130,"author":{"gitId":"Neha-5678"},"content":"            sampleAb.addTask(sampleTask);","lastModifiedDate":"2021-11-05"},{"lineNumber":131,"author":{"gitId":"Neha-5678"},"content":"        }","lastModifiedDate":"2021-11-05"},{"lineNumber":132,"author":{"gitId":"Neha-5678"},"content":"        for (Group sampleGroup : getSampleGroups()) {","lastModifiedDate":"2021-11-05"},{"lineNumber":133,"author":{"gitId":"Neha-5678"},"content":"            sampleAb.addGroup(sampleGroup);","lastModifiedDate":"2021-11-05"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-11-05"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        return sampleAb;","lastModifiedDate":"2017-04-07"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-20"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-14"},{"lineNumber":139,"author":{"gitId":"-"},"content":"     * Returns a tag set containing the list of strings given.","lastModifiedDate":"2017-03-14"},{"lineNumber":140,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-14"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    public static Set\u003cTag\u003e getTagSet(String... strings) {","lastModifiedDate":"2017-05-30"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        return Arrays.stream(strings)","lastModifiedDate":"2018-01-21"},{"lineNumber":143,"author":{"gitId":"-"},"content":"                .map(Tag::new)","lastModifiedDate":"2018-01-21"},{"lineNumber":144,"author":{"gitId":"-"},"content":"                .collect(Collectors.toSet());","lastModifiedDate":"2018-01-21"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-14"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-14"},{"lineNumber":147,"author":{"gitId":"jeremy-7007"},"content":"    /**","lastModifiedDate":"2021-10-12"},{"lineNumber":148,"author":{"gitId":"jeremy-7007"},"content":"     * Returns a unique id set containing the list of strings given.","lastModifiedDate":"2021-10-12"},{"lineNumber":149,"author":{"gitId":"jeremy-7007"},"content":"     */","lastModifiedDate":"2021-10-12"},{"lineNumber":150,"author":{"gitId":"jeremy-7007"},"content":"    public static Set\u003cUniqueId\u003e getUniqueIdSet(String... strings) {","lastModifiedDate":"2021-10-12"},{"lineNumber":151,"author":{"gitId":"jeremy-7007"},"content":"        return Arrays.stream(strings)","lastModifiedDate":"2021-10-12"},{"lineNumber":152,"author":{"gitId":"jeremy-7007"},"content":"                .map(UniqueId::generateId)","lastModifiedDate":"2021-10-12"},{"lineNumber":153,"author":{"gitId":"jeremy-7007"},"content":"                .collect(Collectors.toSet());","lastModifiedDate":"2021-10-12"},{"lineNumber":154,"author":{"gitId":"jeremy-7007"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":155,"author":{"gitId":"jeremy-7007"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":156,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-20"}],"authorContributionMap":{"Neha-5678":99,"jeremy-7007":11,"tanhuakun":3,"-":43}},{"path":"src/main/java/seedu/address/storage/JsonAdaptedExam.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tanhuakun"},"content":"package seedu.address.storage;","lastModifiedDate":"2021-10-19"},{"lineNumber":2,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":3,"author":{"gitId":"tanhuakun"},"content":"import static seedu.address.storage.JsonAdaptedPerson.MISSING_FIELD_MESSAGE_FORMAT;","lastModifiedDate":"2021-10-19"},{"lineNumber":4,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":5,"author":{"gitId":"tanhuakun"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-10-19"},{"lineNumber":6,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":7,"author":{"gitId":"tanhuakun"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2021-10-19"},{"lineNumber":8,"author":{"gitId":"tanhuakun"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2021-10-19"},{"lineNumber":9,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":10,"author":{"gitId":"tanhuakun"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2021-10-19"},{"lineNumber":11,"author":{"gitId":"tanhuakun"},"content":"import seedu.address.logic.parser.ParserUtil;","lastModifiedDate":"2021-10-19"},{"lineNumber":12,"author":{"gitId":"tanhuakun"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-10-19"},{"lineNumber":13,"author":{"gitId":"tanhuakun"},"content":"import seedu.address.model.lesson.Subject;","lastModifiedDate":"2021-10-19"},{"lineNumber":14,"author":{"gitId":"tanhuakun"},"content":"import seedu.address.model.person.Exam;","lastModifiedDate":"2021-10-19"},{"lineNumber":15,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":16,"author":{"gitId":"tanhuakun"},"content":"/**","lastModifiedDate":"2021-10-19"},{"lineNumber":17,"author":{"gitId":"tanhuakun"},"content":" * Jackson-friendly version of {@link Exam}.","lastModifiedDate":"2021-10-19"},{"lineNumber":18,"author":{"gitId":"tanhuakun"},"content":" */","lastModifiedDate":"2021-10-19"},{"lineNumber":19,"author":{"gitId":"tanhuakun"},"content":"public class JsonAdaptedExam {","lastModifiedDate":"2021-10-19"},{"lineNumber":20,"author":{"gitId":"tanhuakun"},"content":"    private final String subject;","lastModifiedDate":"2021-10-19"},{"lineNumber":21,"author":{"gitId":"tanhuakun"},"content":"    private final String datetime;","lastModifiedDate":"2021-10-19"},{"lineNumber":22,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":23,"author":{"gitId":"tanhuakun"},"content":"    /**","lastModifiedDate":"2021-10-19"},{"lineNumber":24,"author":{"gitId":"tanhuakun"},"content":"     * Constructs a {@code JsonAdaptedExam} with the given exam details.","lastModifiedDate":"2021-10-19"},{"lineNumber":25,"author":{"gitId":"tanhuakun"},"content":"     */","lastModifiedDate":"2021-10-19"},{"lineNumber":26,"author":{"gitId":"tanhuakun"},"content":"    @JsonCreator","lastModifiedDate":"2021-10-19"},{"lineNumber":27,"author":{"gitId":"tanhuakun"},"content":"    public JsonAdaptedExam(@JsonProperty(\"subject\") String subject, @JsonProperty(\"dayOfWeek\") String datetime) {","lastModifiedDate":"2021-10-19"},{"lineNumber":28,"author":{"gitId":"tanhuakun"},"content":"        this.subject \u003d subject;","lastModifiedDate":"2021-10-19"},{"lineNumber":29,"author":{"gitId":"tanhuakun"},"content":"        this.datetime \u003d datetime;","lastModifiedDate":"2021-10-19"},{"lineNumber":30,"author":{"gitId":"tanhuakun"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":31,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":32,"author":{"gitId":"tanhuakun"},"content":"    /**","lastModifiedDate":"2021-10-19"},{"lineNumber":33,"author":{"gitId":"tanhuakun"},"content":"     * Converts a given {@code Exam} into this class for Jackson use.","lastModifiedDate":"2021-10-19"},{"lineNumber":34,"author":{"gitId":"tanhuakun"},"content":"     */","lastModifiedDate":"2021-10-19"},{"lineNumber":35,"author":{"gitId":"tanhuakun"},"content":"    public JsonAdaptedExam(Exam source) {","lastModifiedDate":"2021-10-19"},{"lineNumber":36,"author":{"gitId":"tanhuakun"},"content":"        this.subject \u003d source.getSubject().getSubjectName();","lastModifiedDate":"2021-10-19"},{"lineNumber":37,"author":{"gitId":"tanhuakun"},"content":"        this.datetime \u003d ParserUtil.localDateTimeAsString(source.getDateTime());","lastModifiedDate":"2021-10-19"},{"lineNumber":38,"author":{"gitId":"tanhuakun"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":39,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":40,"author":{"gitId":"tanhuakun"},"content":"    /**","lastModifiedDate":"2021-10-19"},{"lineNumber":41,"author":{"gitId":"tanhuakun"},"content":"     * Converts this Jackson-friendly adapted exam object into the model\u0027s {@code Exam} object.","lastModifiedDate":"2021-10-19"},{"lineNumber":42,"author":{"gitId":"tanhuakun"},"content":"     *","lastModifiedDate":"2021-10-19"},{"lineNumber":43,"author":{"gitId":"tanhuakun"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted exam.","lastModifiedDate":"2021-10-19"},{"lineNumber":44,"author":{"gitId":"tanhuakun"},"content":"     */","lastModifiedDate":"2021-10-19"},{"lineNumber":45,"author":{"gitId":"tanhuakun"},"content":"    public Exam toModelType() throws IllegalValueException {","lastModifiedDate":"2021-10-19"},{"lineNumber":46,"author":{"gitId":"tanhuakun"},"content":"        if (subject \u003d\u003d null) {","lastModifiedDate":"2021-10-19"},{"lineNumber":47,"author":{"gitId":"tanhuakun"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Subject.class.getSimpleName()));","lastModifiedDate":"2021-10-19"},{"lineNumber":48,"author":{"gitId":"tanhuakun"},"content":"        } else if (!Subject.isValidSubject(subject)) {","lastModifiedDate":"2021-10-19"},{"lineNumber":49,"author":{"gitId":"tanhuakun"},"content":"            throw new IllegalValueException(Subject.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-19"},{"lineNumber":50,"author":{"gitId":"tanhuakun"},"content":"        }","lastModifiedDate":"2021-10-19"},{"lineNumber":51,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":52,"author":{"gitId":"tanhuakun"},"content":"        Subject subject \u003d new Subject(this.subject);","lastModifiedDate":"2021-10-19"},{"lineNumber":53,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":54,"author":{"gitId":"tanhuakun"},"content":"        LocalDateTime localDateTime;","lastModifiedDate":"2021-10-19"},{"lineNumber":55,"author":{"gitId":"tanhuakun"},"content":"        try {","lastModifiedDate":"2021-10-19"},{"lineNumber":56,"author":{"gitId":"tanhuakun"},"content":"            localDateTime \u003d ParserUtil.parseLocalDateTime(datetime);","lastModifiedDate":"2021-10-19"},{"lineNumber":57,"author":{"gitId":"tanhuakun"},"content":"        } catch (ParseException p) {","lastModifiedDate":"2021-10-19"},{"lineNumber":58,"author":{"gitId":"tanhuakun"},"content":"            throw new IllegalValueException(p.getMessage());","lastModifiedDate":"2021-10-19"},{"lineNumber":59,"author":{"gitId":"tanhuakun"},"content":"        }","lastModifiedDate":"2021-10-19"},{"lineNumber":60,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":61,"author":{"gitId":"tanhuakun"},"content":"        return new Exam(subject, localDateTime);","lastModifiedDate":"2021-10-19"},{"lineNumber":62,"author":{"gitId":"tanhuakun"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":63,"author":{"gitId":"tanhuakun"},"content":"}","lastModifiedDate":"2021-10-19"}],"authorContributionMap":{"tanhuakun":63}},{"path":"src/main/java/seedu/address/storage/JsonAdaptedGroup.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Neha-5678"},"content":"package seedu.address.storage;","lastModifiedDate":"2021-10-26"},{"lineNumber":2,"author":{"gitId":"Neha-5678"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":3,"author":{"gitId":"Neha-5678"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-26"},{"lineNumber":4,"author":{"gitId":"Neha-5678"},"content":"import java.util.HashSet;","lastModifiedDate":"2021-10-26"},{"lineNumber":5,"author":{"gitId":"Neha-5678"},"content":"import java.util.List;","lastModifiedDate":"2021-10-26"},{"lineNumber":6,"author":{"gitId":"Neha-5678"},"content":"import java.util.Set;","lastModifiedDate":"2021-10-26"},{"lineNumber":7,"author":{"gitId":"Neha-5678"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2021-10-26"},{"lineNumber":8,"author":{"gitId":"Neha-5678"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":9,"author":{"gitId":"Neha-5678"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2021-10-26"},{"lineNumber":10,"author":{"gitId":"Neha-5678"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2021-10-26"},{"lineNumber":11,"author":{"gitId":"Neha-5678"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":12,"author":{"gitId":"Neha-5678"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2021-10-26"},{"lineNumber":13,"author":{"gitId":"Neha-5678"},"content":"import seedu.address.model.group.Group;","lastModifiedDate":"2021-10-26"},{"lineNumber":14,"author":{"gitId":"Neha-5678"},"content":"import seedu.address.model.group.GroupName;","lastModifiedDate":"2021-10-28"},{"lineNumber":15,"author":{"gitId":"Neha-5678"},"content":"import seedu.address.model.id.UniqueId;","lastModifiedDate":"2021-10-26"},{"lineNumber":16,"author":{"gitId":"Neha-5678"},"content":"import seedu.address.model.lesson.Lesson;","lastModifiedDate":"2021-10-26"},{"lineNumber":17,"author":{"gitId":"Neha-5678"},"content":"import seedu.address.model.lesson.NoOverlapLessonList;","lastModifiedDate":"2021-10-26"},{"lineNumber":18,"author":{"gitId":"Neha-5678"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":19,"author":{"gitId":"Neha-5678"},"content":"/**","lastModifiedDate":"2021-10-26"},{"lineNumber":20,"author":{"gitId":"Neha-5678"},"content":" * Jackson-friendly version of {@link Group}.","lastModifiedDate":"2021-10-26"},{"lineNumber":21,"author":{"gitId":"Neha-5678"},"content":" */","lastModifiedDate":"2021-10-26"},{"lineNumber":22,"author":{"gitId":"Neha-5678"},"content":"public class JsonAdaptedGroup {","lastModifiedDate":"2021-10-26"},{"lineNumber":23,"author":{"gitId":"Neha-5678"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":24,"author":{"gitId":"Neha-5678"},"content":"    public static final String MISSING_FIELD_MESSAGE_FORMAT \u003d \"Group\u0027s %s field is missing!\";","lastModifiedDate":"2021-10-28"},{"lineNumber":25,"author":{"gitId":"Neha-5678"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":26,"author":{"gitId":"Neha-5678"},"content":"    private final String uniqueId;","lastModifiedDate":"2021-10-26"},{"lineNumber":27,"author":{"gitId":"Neha-5678"},"content":"    private final String groupName;","lastModifiedDate":"2021-10-26"},{"lineNumber":28,"author":{"gitId":"Neha-5678"},"content":"    private final List\u003cJsonAdaptedUniqueId\u003e assignedPersonIds \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-26"},{"lineNumber":29,"author":{"gitId":"Neha-5678"},"content":"    private final List\u003cJsonAdaptedUniqueId\u003e assignedTaskIds \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-26"},{"lineNumber":30,"author":{"gitId":"Neha-5678"},"content":"    private final List\u003cJsonAdaptedLesson\u003e lessonsList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-26"},{"lineNumber":31,"author":{"gitId":"Neha-5678"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":32,"author":{"gitId":"Neha-5678"},"content":"    /**","lastModifiedDate":"2021-10-26"},{"lineNumber":33,"author":{"gitId":"Neha-5678"},"content":"     * Constructs a {@code JsonAdaptedGroup} with the given group details.","lastModifiedDate":"2021-10-26"},{"lineNumber":34,"author":{"gitId":"Neha-5678"},"content":"     */","lastModifiedDate":"2021-10-26"},{"lineNumber":35,"author":{"gitId":"Neha-5678"},"content":"    @JsonCreator","lastModifiedDate":"2021-10-26"},{"lineNumber":36,"author":{"gitId":"Neha-5678"},"content":"    public JsonAdaptedGroup(@JsonProperty(\"uniqueId\") String uniqueId, @JsonProperty(\"name\") String groupName,","lastModifiedDate":"2021-10-26"},{"lineNumber":37,"author":{"gitId":"Neha-5678"},"content":"                            @JsonProperty(\"assignedPersonIds\") List\u003cJsonAdaptedUniqueId\u003e assignedPersonIds,","lastModifiedDate":"2021-10-26"},{"lineNumber":38,"author":{"gitId":"Neha-5678"},"content":"                             @JsonProperty(\"assignedTaskIds\") List\u003cJsonAdaptedUniqueId\u003e assignedTaskIds,","lastModifiedDate":"2021-10-26"},{"lineNumber":39,"author":{"gitId":"Neha-5678"},"content":"                             @JsonProperty(\"lessonsList\") List\u003cJsonAdaptedLesson\u003e lessonsList) {","lastModifiedDate":"2021-10-26"},{"lineNumber":40,"author":{"gitId":"Neha-5678"},"content":"        this.uniqueId \u003d uniqueId;","lastModifiedDate":"2021-10-26"},{"lineNumber":41,"author":{"gitId":"Neha-5678"},"content":"        this.groupName \u003d groupName;","lastModifiedDate":"2021-10-26"},{"lineNumber":42,"author":{"gitId":"Neha-5678"},"content":"        if (assignedPersonIds !\u003d null) {","lastModifiedDate":"2021-10-26"},{"lineNumber":43,"author":{"gitId":"Neha-5678"},"content":"            this.assignedPersonIds.addAll(assignedPersonIds);","lastModifiedDate":"2021-10-26"},{"lineNumber":44,"author":{"gitId":"Neha-5678"},"content":"        }","lastModifiedDate":"2021-10-26"},{"lineNumber":45,"author":{"gitId":"Neha-5678"},"content":"        if (assignedTaskIds !\u003d null) {","lastModifiedDate":"2021-10-26"},{"lineNumber":46,"author":{"gitId":"Neha-5678"},"content":"            this.assignedTaskIds.addAll(assignedTaskIds);","lastModifiedDate":"2021-10-26"},{"lineNumber":47,"author":{"gitId":"Neha-5678"},"content":"        }","lastModifiedDate":"2021-10-26"},{"lineNumber":48,"author":{"gitId":"Neha-5678"},"content":"        if (lessonsList !\u003d null) {","lastModifiedDate":"2021-10-26"},{"lineNumber":49,"author":{"gitId":"Neha-5678"},"content":"            this.lessonsList.addAll(lessonsList);","lastModifiedDate":"2021-10-26"},{"lineNumber":50,"author":{"gitId":"Neha-5678"},"content":"        }","lastModifiedDate":"2021-10-26"},{"lineNumber":51,"author":{"gitId":"Neha-5678"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":52,"author":{"gitId":"Neha-5678"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":53,"author":{"gitId":"Neha-5678"},"content":"    /**","lastModifiedDate":"2021-10-26"},{"lineNumber":54,"author":{"gitId":"Neha-5678"},"content":"     * Converts a given {@code Group} into this class for Jackson use.","lastModifiedDate":"2021-10-26"},{"lineNumber":55,"author":{"gitId":"Neha-5678"},"content":"     */","lastModifiedDate":"2021-10-26"},{"lineNumber":56,"author":{"gitId":"Neha-5678"},"content":"    public JsonAdaptedGroup(Group source) {","lastModifiedDate":"2021-10-26"},{"lineNumber":57,"author":{"gitId":"Neha-5678"},"content":"        uniqueId \u003d source.getId().getUuid().toString();","lastModifiedDate":"2021-10-26"},{"lineNumber":58,"author":{"gitId":"Neha-5678"},"content":"        groupName \u003d source.getName().name;","lastModifiedDate":"2021-10-26"},{"lineNumber":59,"author":{"gitId":"Neha-5678"},"content":"        assignedPersonIds.addAll(source.getAssignedPersonIds().stream()","lastModifiedDate":"2021-10-26"},{"lineNumber":60,"author":{"gitId":"Neha-5678"},"content":"                .map(JsonAdaptedUniqueId::new)","lastModifiedDate":"2021-10-26"},{"lineNumber":61,"author":{"gitId":"Neha-5678"},"content":"                .collect(Collectors.toList()));","lastModifiedDate":"2021-10-26"},{"lineNumber":62,"author":{"gitId":"Neha-5678"},"content":"        assignedTaskIds.addAll(source.getAssignedTaskIds().stream()","lastModifiedDate":"2021-10-26"},{"lineNumber":63,"author":{"gitId":"Neha-5678"},"content":"                .map(JsonAdaptedUniqueId::new)","lastModifiedDate":"2021-10-26"},{"lineNumber":64,"author":{"gitId":"Neha-5678"},"content":"                .collect(Collectors.toList()));","lastModifiedDate":"2021-10-26"},{"lineNumber":65,"author":{"gitId":"Neha-5678"},"content":"        lessonsList.addAll(source.getLessons().stream()","lastModifiedDate":"2021-10-26"},{"lineNumber":66,"author":{"gitId":"Neha-5678"},"content":"                .map(JsonAdaptedLesson::new)","lastModifiedDate":"2021-10-26"},{"lineNumber":67,"author":{"gitId":"Neha-5678"},"content":"                .collect(Collectors.toList()));","lastModifiedDate":"2021-10-26"},{"lineNumber":68,"author":{"gitId":"Neha-5678"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":69,"author":{"gitId":"Neha-5678"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":70,"author":{"gitId":"Neha-5678"},"content":"    /**","lastModifiedDate":"2021-10-26"},{"lineNumber":71,"author":{"gitId":"Neha-5678"},"content":"     * Converts this Jackson-friendly adapted group object into the model\u0027s {@code Group} object.","lastModifiedDate":"2021-10-26"},{"lineNumber":72,"author":{"gitId":"Neha-5678"},"content":"     *","lastModifiedDate":"2021-10-26"},{"lineNumber":73,"author":{"gitId":"Neha-5678"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted group.","lastModifiedDate":"2021-10-26"},{"lineNumber":74,"author":{"gitId":"Neha-5678"},"content":"     */","lastModifiedDate":"2021-10-26"},{"lineNumber":75,"author":{"gitId":"Neha-5678"},"content":"    public Group toModelType() throws IllegalValueException {","lastModifiedDate":"2021-10-26"},{"lineNumber":76,"author":{"gitId":"Neha-5678"},"content":"        final List\u003cUniqueId\u003e groupAssignedPersonIds \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-26"},{"lineNumber":77,"author":{"gitId":"Neha-5678"},"content":"        for (JsonAdaptedUniqueId id : assignedPersonIds) {","lastModifiedDate":"2021-10-26"},{"lineNumber":78,"author":{"gitId":"Neha-5678"},"content":"            groupAssignedPersonIds.add(id.toModelType());","lastModifiedDate":"2021-10-26"},{"lineNumber":79,"author":{"gitId":"Neha-5678"},"content":"        }","lastModifiedDate":"2021-10-26"},{"lineNumber":80,"author":{"gitId":"Neha-5678"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":81,"author":{"gitId":"Neha-5678"},"content":"        final List\u003cUniqueId\u003e groupAssignedTaskIds \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-26"},{"lineNumber":82,"author":{"gitId":"Neha-5678"},"content":"        for (JsonAdaptedUniqueId id : assignedTaskIds) {","lastModifiedDate":"2021-10-26"},{"lineNumber":83,"author":{"gitId":"Neha-5678"},"content":"            groupAssignedTaskIds.add(id.toModelType());","lastModifiedDate":"2021-10-26"},{"lineNumber":84,"author":{"gitId":"Neha-5678"},"content":"        }","lastModifiedDate":"2021-10-26"},{"lineNumber":85,"author":{"gitId":"Neha-5678"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":86,"author":{"gitId":"Neha-5678"},"content":"        if (groupName \u003d\u003d null) {","lastModifiedDate":"2021-10-26"},{"lineNumber":87,"author":{"gitId":"Neha-5678"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT,","lastModifiedDate":"2021-10-28"},{"lineNumber":88,"author":{"gitId":"Neha-5678"},"content":"                    GroupName.class.getSimpleName()));","lastModifiedDate":"2021-10-28"},{"lineNumber":89,"author":{"gitId":"Neha-5678"},"content":"        }","lastModifiedDate":"2021-10-26"},{"lineNumber":90,"author":{"gitId":"Neha-5678"},"content":"        if (!GroupName.isValidName(groupName)) {","lastModifiedDate":"2021-10-26"},{"lineNumber":91,"author":{"gitId":"Neha-5678"},"content":"            throw new IllegalValueException(GroupName.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-26"},{"lineNumber":92,"author":{"gitId":"Neha-5678"},"content":"        }","lastModifiedDate":"2021-10-26"},{"lineNumber":93,"author":{"gitId":"Neha-5678"},"content":"        final GroupName modelName \u003d new GroupName(groupName);","lastModifiedDate":"2021-10-26"},{"lineNumber":94,"author":{"gitId":"Neha-5678"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":95,"author":{"gitId":"Neha-5678"},"content":"        final Set\u003cUniqueId\u003e modelAssignedPersonIds \u003d new HashSet\u003c\u003e(groupAssignedPersonIds);","lastModifiedDate":"2021-10-26"},{"lineNumber":96,"author":{"gitId":"Neha-5678"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":97,"author":{"gitId":"Neha-5678"},"content":"        final Set\u003cUniqueId\u003e modelAssignedTaskIds \u003d new HashSet\u003c\u003e(groupAssignedTaskIds);","lastModifiedDate":"2021-10-26"},{"lineNumber":98,"author":{"gitId":"Neha-5678"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":99,"author":{"gitId":"Neha-5678"},"content":"        final List\u003cLesson\u003e modelLessonsList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-26"},{"lineNumber":100,"author":{"gitId":"Neha-5678"},"content":"        for (JsonAdaptedLesson l : lessonsList) {","lastModifiedDate":"2021-10-26"},{"lineNumber":101,"author":{"gitId":"Neha-5678"},"content":"            modelLessonsList.add(l.toModelType());","lastModifiedDate":"2021-10-26"},{"lineNumber":102,"author":{"gitId":"Neha-5678"},"content":"        }","lastModifiedDate":"2021-10-26"},{"lineNumber":103,"author":{"gitId":"Neha-5678"},"content":"        if (NoOverlapLessonList.doAnyLessonsOverlap(modelLessonsList)) {","lastModifiedDate":"2021-10-26"},{"lineNumber":104,"author":{"gitId":"Neha-5678"},"content":"            throw new IllegalValueException(NoOverlapLessonList.LESSON_OVERLAP);","lastModifiedDate":"2021-10-26"},{"lineNumber":105,"author":{"gitId":"Neha-5678"},"content":"        }","lastModifiedDate":"2021-10-26"},{"lineNumber":106,"author":{"gitId":"Neha-5678"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":107,"author":{"gitId":"Neha-5678"},"content":"        NoOverlapLessonList lessonsList \u003d NoOverlapLessonList.of(modelLessonsList);","lastModifiedDate":"2021-10-26"},{"lineNumber":108,"author":{"gitId":"Neha-5678"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":109,"author":{"gitId":"Neha-5678"},"content":"        if (uniqueId \u003d\u003d null) {","lastModifiedDate":"2021-10-26"},{"lineNumber":110,"author":{"gitId":"Neha-5678"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT,","lastModifiedDate":"2021-10-26"},{"lineNumber":111,"author":{"gitId":"Neha-5678"},"content":"                    UniqueId.class.getSimpleName()));","lastModifiedDate":"2021-10-26"},{"lineNumber":112,"author":{"gitId":"Neha-5678"},"content":"        }","lastModifiedDate":"2021-10-26"},{"lineNumber":113,"author":{"gitId":"Neha-5678"},"content":"        final UniqueId modelUniqueId \u003d UniqueId.generateId(uniqueId);","lastModifiedDate":"2021-10-26"},{"lineNumber":114,"author":{"gitId":"Neha-5678"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":115,"author":{"gitId":"Neha-5678"},"content":"        return new Group(modelName, modelUniqueId, modelAssignedTaskIds, modelAssignedPersonIds, lessonsList);","lastModifiedDate":"2021-10-26"},{"lineNumber":116,"author":{"gitId":"Neha-5678"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":117,"author":{"gitId":"Neha-5678"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":118,"author":{"gitId":"Neha-5678"},"content":"}","lastModifiedDate":"2021-10-26"}],"authorContributionMap":{"Neha-5678":118}},{"path":"src/main/java/seedu/address/storage/JsonAdaptedLesson.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tanhuakun"},"content":"package seedu.address.storage;","lastModifiedDate":"2021-10-12"},{"lineNumber":2,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":3,"author":{"gitId":"tanhuakun"},"content":"import static seedu.address.storage.JsonAdaptedPerson.MISSING_FIELD_MESSAGE_FORMAT;","lastModifiedDate":"2021-10-12"},{"lineNumber":4,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":5,"author":{"gitId":"tanhuakun"},"content":"import java.time.DayOfWeek;","lastModifiedDate":"2021-10-12"},{"lineNumber":6,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":7,"author":{"gitId":"tanhuakun"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2021-10-12"},{"lineNumber":8,"author":{"gitId":"tanhuakun"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2021-10-12"},{"lineNumber":9,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":10,"author":{"gitId":"tanhuakun"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2021-10-12"},{"lineNumber":11,"author":{"gitId":"tanhuakun"},"content":"import seedu.address.logic.parser.ValidateUtil;","lastModifiedDate":"2021-10-12"},{"lineNumber":12,"author":{"gitId":"tanhuakun"},"content":"import seedu.address.model.lesson.Lesson;","lastModifiedDate":"2021-10-12"},{"lineNumber":13,"author":{"gitId":"tanhuakun"},"content":"import seedu.address.model.lesson.Subject;","lastModifiedDate":"2021-10-12"},{"lineNumber":14,"author":{"gitId":"tanhuakun"},"content":"import seedu.address.model.lesson.Timeslot;","lastModifiedDate":"2021-10-12"},{"lineNumber":15,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":16,"author":{"gitId":"tanhuakun"},"content":"/**","lastModifiedDate":"2021-10-12"},{"lineNumber":17,"author":{"gitId":"tanhuakun"},"content":" * Jackson-friendly version of {@link Lesson}.","lastModifiedDate":"2021-10-12"},{"lineNumber":18,"author":{"gitId":"tanhuakun"},"content":" */","lastModifiedDate":"2021-10-12"},{"lineNumber":19,"author":{"gitId":"tanhuakun"},"content":"public class JsonAdaptedLesson {","lastModifiedDate":"2021-10-12"},{"lineNumber":20,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":21,"author":{"gitId":"tanhuakun"},"content":"    private final JsonAdaptedTimeslot timeslot;","lastModifiedDate":"2021-10-12"},{"lineNumber":22,"author":{"gitId":"tanhuakun"},"content":"    private final String subject;","lastModifiedDate":"2021-10-12"},{"lineNumber":23,"author":{"gitId":"tanhuakun"},"content":"    private final int dayOfWeek;","lastModifiedDate":"2021-10-12"},{"lineNumber":24,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":25,"author":{"gitId":"tanhuakun"},"content":"    /**","lastModifiedDate":"2021-10-12"},{"lineNumber":26,"author":{"gitId":"tanhuakun"},"content":"     * Constructs a {@code JsonAdaptedLesson} with the given lesson details.","lastModifiedDate":"2021-10-12"},{"lineNumber":27,"author":{"gitId":"tanhuakun"},"content":"     */","lastModifiedDate":"2021-10-12"},{"lineNumber":28,"author":{"gitId":"tanhuakun"},"content":"    @JsonCreator","lastModifiedDate":"2021-10-12"},{"lineNumber":29,"author":{"gitId":"tanhuakun"},"content":"    public JsonAdaptedLesson(@JsonProperty(\"timeslot\") JsonAdaptedTimeslot timeslot,","lastModifiedDate":"2021-10-12"},{"lineNumber":30,"author":{"gitId":"tanhuakun"},"content":"            @JsonProperty(\"subject\") String subject, @JsonProperty(\"dayOfWeek\") int dayOfWeek) {","lastModifiedDate":"2021-10-12"},{"lineNumber":31,"author":{"gitId":"tanhuakun"},"content":"        this.timeslot \u003d timeslot;","lastModifiedDate":"2021-10-12"},{"lineNumber":32,"author":{"gitId":"tanhuakun"},"content":"        this.subject \u003d subject;","lastModifiedDate":"2021-10-12"},{"lineNumber":33,"author":{"gitId":"tanhuakun"},"content":"        this.dayOfWeek \u003d dayOfWeek;","lastModifiedDate":"2021-10-12"},{"lineNumber":34,"author":{"gitId":"tanhuakun"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":35,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":36,"author":{"gitId":"tanhuakun"},"content":"    /**","lastModifiedDate":"2021-10-12"},{"lineNumber":37,"author":{"gitId":"tanhuakun"},"content":"     * Converts a given {@code Lesson} into this class for Jackson use.","lastModifiedDate":"2021-10-12"},{"lineNumber":38,"author":{"gitId":"tanhuakun"},"content":"     */","lastModifiedDate":"2021-10-12"},{"lineNumber":39,"author":{"gitId":"tanhuakun"},"content":"    public JsonAdaptedLesson(Lesson source) {","lastModifiedDate":"2021-10-12"},{"lineNumber":40,"author":{"gitId":"tanhuakun"},"content":"        this.timeslot \u003d new JsonAdaptedTimeslot(source.getTimeslot());","lastModifiedDate":"2021-10-12"},{"lineNumber":41,"author":{"gitId":"tanhuakun"},"content":"        this.subject \u003d source.getSubject().getSubjectName();","lastModifiedDate":"2021-10-12"},{"lineNumber":42,"author":{"gitId":"tanhuakun"},"content":"        this.dayOfWeek \u003d source.getDayOfWeek().getValue();","lastModifiedDate":"2021-10-12"},{"lineNumber":43,"author":{"gitId":"tanhuakun"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":44,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":45,"author":{"gitId":"tanhuakun"},"content":"    /**","lastModifiedDate":"2021-10-12"},{"lineNumber":46,"author":{"gitId":"tanhuakun"},"content":"     * Converts this Jackson-friendly adapted lesson object into the model\u0027s {@code Lesson} object.","lastModifiedDate":"2021-10-12"},{"lineNumber":47,"author":{"gitId":"tanhuakun"},"content":"     *","lastModifiedDate":"2021-10-12"},{"lineNumber":48,"author":{"gitId":"tanhuakun"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted lesson.","lastModifiedDate":"2021-10-12"},{"lineNumber":49,"author":{"gitId":"tanhuakun"},"content":"     */","lastModifiedDate":"2021-10-12"},{"lineNumber":50,"author":{"gitId":"tanhuakun"},"content":"    public Lesson toModelType() throws IllegalValueException {","lastModifiedDate":"2021-10-12"},{"lineNumber":51,"author":{"gitId":"tanhuakun"},"content":"        Timeslot timeslot \u003d this.timeslot.toModelType();","lastModifiedDate":"2021-10-12"},{"lineNumber":52,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":53,"author":{"gitId":"tanhuakun"},"content":"        if (subject \u003d\u003d null) {","lastModifiedDate":"2021-10-12"},{"lineNumber":54,"author":{"gitId":"tanhuakun"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Subject.class.getSimpleName()));","lastModifiedDate":"2021-10-12"},{"lineNumber":55,"author":{"gitId":"tanhuakun"},"content":"        } else if (!Subject.isValidSubject(subject)) {","lastModifiedDate":"2021-10-12"},{"lineNumber":56,"author":{"gitId":"tanhuakun"},"content":"            throw new IllegalValueException(Subject.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-12"},{"lineNumber":57,"author":{"gitId":"tanhuakun"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":58,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":59,"author":{"gitId":"tanhuakun"},"content":"        Subject subject \u003d new Subject(this.subject);","lastModifiedDate":"2021-10-12"},{"lineNumber":60,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":61,"author":{"gitId":"tanhuakun"},"content":"        if (!ValidateUtil.validDayOfWeekInteger(dayOfWeek)) {","lastModifiedDate":"2021-10-12"},{"lineNumber":62,"author":{"gitId":"tanhuakun"},"content":"            throw new IllegalValueException(ValidateUtil.DAY_OF_WEEK_CONSTRAINTS);","lastModifiedDate":"2021-10-12"},{"lineNumber":63,"author":{"gitId":"tanhuakun"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":64,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":65,"author":{"gitId":"tanhuakun"},"content":"        DayOfWeek dayOfWeek \u003d DayOfWeek.of(this.dayOfWeek);","lastModifiedDate":"2021-10-12"},{"lineNumber":66,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":67,"author":{"gitId":"tanhuakun"},"content":"        return new Lesson(timeslot, subject, dayOfWeek);","lastModifiedDate":"2021-10-20"},{"lineNumber":68,"author":{"gitId":"tanhuakun"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":69,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":70,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":71,"author":{"gitId":"tanhuakun"},"content":"}","lastModifiedDate":"2021-10-12"}],"authorContributionMap":{"tanhuakun":71}},{"path":"src/main/java/seedu/address/storage/JsonAdaptedPerson.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"jeremy-7007"},"content":"import java.util.HashMap;","lastModifiedDate":"2021-10-26"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"jeremy-7007"},"content":"import java.util.Map;","lastModifiedDate":"2021-10-26"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":15,"author":{"gitId":"eltonyeh"},"content":"import seedu.address.model.id.UniqueId;","lastModifiedDate":"2021-10-12"},{"lineNumber":16,"author":{"gitId":"tanhuakun"},"content":"import seedu.address.model.lesson.Lesson;","lastModifiedDate":"2021-10-12"},{"lineNumber":17,"author":{"gitId":"tanhuakun"},"content":"import seedu.address.model.lesson.NoOverlapLessonList;","lastModifiedDate":"2021-10-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"tanhuakun"},"content":"import seedu.address.model.person.Exam;","lastModifiedDate":"2021-10-16"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":" * Jackson-friendly version of {@link Person}.","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"class JsonAdaptedPerson {","lastModifiedDate":"2018-12-03"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public static final String MISSING_FIELD_MESSAGE_FORMAT \u003d \"Person\u0027s %s field is missing!\";","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"eltonyeh"},"content":"    private final String uniqueId;","lastModifiedDate":"2021-10-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private final String name;","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private final String phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private final String email;","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private final String address;","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private final List\u003cJsonAdaptedTag\u003e tagged \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"jeremy-7007"},"content":"    private final List\u003cJsonAdaptedUniqueId\u003e assignedTaskIds \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-12"},{"lineNumber":40,"author":{"gitId":"Neha-5678"},"content":"    private final List\u003cJsonAdaptedUniqueId\u003e assignedGroupIds \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-26"},{"lineNumber":41,"author":{"gitId":"jeremy-7007"},"content":"    private final List\u003cJsonAdaptedTaskCompletion\u003e tasksCompletion \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-26"},{"lineNumber":42,"author":{"gitId":"tanhuakun"},"content":"    private final List\u003cJsonAdaptedLesson\u003e lessonsList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-12"},{"lineNumber":43,"author":{"gitId":"tanhuakun"},"content":"    private final List\u003cJsonAdaptedExam\u003e exams \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-19"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     * Constructs a {@code JsonAdaptedPerson} with the given person details.","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"eltonyeh"},"content":"    public JsonAdaptedPerson(@JsonProperty(\"uniqueId\") String uniqueId, @JsonProperty(\"name\") String name,","lastModifiedDate":"2021-10-12"},{"lineNumber":50,"author":{"gitId":"eltonyeh"},"content":"            @JsonProperty(\"phone\") String phone, @JsonProperty(\"email\") String email,","lastModifiedDate":"2021-10-12"},{"lineNumber":51,"author":{"gitId":"jeremy-7007"},"content":"            @JsonProperty(\"address\") String address, @JsonProperty(\"tagged\") List\u003cJsonAdaptedTag\u003e tagged,","lastModifiedDate":"2021-10-12"},{"lineNumber":52,"author":{"gitId":"jeremy-7007"},"content":"            @JsonProperty(\"assignedTaskIds\") List\u003cJsonAdaptedUniqueId\u003e assignedTaskIds,","lastModifiedDate":"2021-10-12"},{"lineNumber":53,"author":{"gitId":"Neha-5678"},"content":"            @JsonProperty(\"assignedGroupIds\") List\u003cJsonAdaptedUniqueId\u003e assignedGroupIds,","lastModifiedDate":"2021-10-26"},{"lineNumber":54,"author":{"gitId":"jeremy-7007"},"content":"            @JsonProperty(\"tasksCompletion\") List\u003cJsonAdaptedTaskCompletion\u003e tasksCompletion,","lastModifiedDate":"2021-10-26"},{"lineNumber":55,"author":{"gitId":"tanhuakun"},"content":"            @JsonProperty(\"lessonsList\") List\u003cJsonAdaptedLesson\u003e lessonsList,","lastModifiedDate":"2021-10-19"},{"lineNumber":56,"author":{"gitId":"tanhuakun"},"content":"            @JsonProperty(\"exams\") List\u003cJsonAdaptedExam\u003e exams) {","lastModifiedDate":"2021-10-19"},{"lineNumber":57,"author":{"gitId":"eltonyeh"},"content":"        this.uniqueId \u003d uniqueId;","lastModifiedDate":"2021-10-12"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        this.name \u003d name;","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        this.phone \u003d phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        this.email \u003d email;","lastModifiedDate":"2018-08-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        this.address \u003d address;","lastModifiedDate":"2018-08-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        if (tagged !\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"            this.tagged.addAll(tagged);","lastModifiedDate":"2018-08-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":65,"author":{"gitId":"jeremy-7007"},"content":"        if (assignedTaskIds !\u003d null) {","lastModifiedDate":"2021-10-12"},{"lineNumber":66,"author":{"gitId":"jeremy-7007"},"content":"            this.assignedTaskIds.addAll(assignedTaskIds);","lastModifiedDate":"2021-10-12"},{"lineNumber":67,"author":{"gitId":"jeremy-7007"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":68,"author":{"gitId":"Neha-5678"},"content":"        if (assignedGroupIds !\u003d null) {","lastModifiedDate":"2021-10-26"},{"lineNumber":69,"author":{"gitId":"Neha-5678"},"content":"            this.assignedGroupIds.addAll(assignedGroupIds);","lastModifiedDate":"2021-10-26"},{"lineNumber":70,"author":{"gitId":"Neha-5678"},"content":"        }","lastModifiedDate":"2021-10-26"},{"lineNumber":71,"author":{"gitId":"jeremy-7007"},"content":"        if (tasksCompletion !\u003d null) {","lastModifiedDate":"2021-10-26"},{"lineNumber":72,"author":{"gitId":"jeremy-7007"},"content":"            this.tasksCompletion.addAll(tasksCompletion);","lastModifiedDate":"2021-10-26"},{"lineNumber":73,"author":{"gitId":"jeremy-7007"},"content":"        }","lastModifiedDate":"2021-10-26"},{"lineNumber":74,"author":{"gitId":"tanhuakun"},"content":"        if (lessonsList !\u003d null) {","lastModifiedDate":"2021-10-12"},{"lineNumber":75,"author":{"gitId":"tanhuakun"},"content":"            this.lessonsList.addAll(lessonsList);","lastModifiedDate":"2021-10-12"},{"lineNumber":76,"author":{"gitId":"tanhuakun"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":77,"author":{"gitId":"tanhuakun"},"content":"        if (exams !\u003d null) {","lastModifiedDate":"2021-10-19"},{"lineNumber":78,"author":{"gitId":"tanhuakun"},"content":"            this.exams.addAll(exams);","lastModifiedDate":"2021-10-19"},{"lineNumber":79,"author":{"gitId":"tanhuakun"},"content":"        }","lastModifiedDate":"2021-10-19"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":83,"author":{"gitId":"-"},"content":"     * Converts a given {@code Person} into this class for Jackson use.","lastModifiedDate":"2018-08-13"},{"lineNumber":84,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    public JsonAdaptedPerson(Person source) {","lastModifiedDate":"2018-08-13"},{"lineNumber":86,"author":{"gitId":"eltonyeh"},"content":"        uniqueId \u003d source.getId().getUuid().toString();","lastModifiedDate":"2021-10-12"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        name \u003d source.getName().fullName;","lastModifiedDate":"2018-08-13"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        phone \u003d source.getPhone().value;","lastModifiedDate":"2018-08-13"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        email \u003d source.getEmail().value;","lastModifiedDate":"2018-08-13"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        address \u003d source.getAddress().value;","lastModifiedDate":"2018-08-13"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        tagged.addAll(source.getTags().stream()","lastModifiedDate":"2018-08-13"},{"lineNumber":92,"author":{"gitId":"-"},"content":"                .map(JsonAdaptedTag::new)","lastModifiedDate":"2018-08-13"},{"lineNumber":93,"author":{"gitId":"-"},"content":"                .collect(Collectors.toList()));","lastModifiedDate":"2018-08-13"},{"lineNumber":94,"author":{"gitId":"jeremy-7007"},"content":"        assignedTaskIds.addAll(source.getAssignedTaskIds().stream()","lastModifiedDate":"2021-10-12"},{"lineNumber":95,"author":{"gitId":"jeremy-7007"},"content":"                .map(JsonAdaptedUniqueId::new)","lastModifiedDate":"2021-10-12"},{"lineNumber":96,"author":{"gitId":"jeremy-7007"},"content":"                .collect(Collectors.toList()));","lastModifiedDate":"2021-10-12"},{"lineNumber":97,"author":{"gitId":"Neha-5678"},"content":"        assignedGroupIds.addAll(source.getAssignedGroupIds().stream()","lastModifiedDate":"2021-10-26"},{"lineNumber":98,"author":{"gitId":"Neha-5678"},"content":"                .map(JsonAdaptedUniqueId::new)","lastModifiedDate":"2021-10-26"},{"lineNumber":99,"author":{"gitId":"Neha-5678"},"content":"                .collect(Collectors.toList()));","lastModifiedDate":"2021-10-26"},{"lineNumber":100,"author":{"gitId":"jeremy-7007"},"content":"        source.getTasksCompletion().forEach((taskId, isDone) -\u003e {","lastModifiedDate":"2021-10-26"},{"lineNumber":101,"author":{"gitId":"jeremy-7007"},"content":"            tasksCompletion.add(new JsonAdaptedTaskCompletion(taskId.getUuid().toString(), isDone));","lastModifiedDate":"2021-10-26"},{"lineNumber":102,"author":{"gitId":"jeremy-7007"},"content":"        });","lastModifiedDate":"2021-10-26"},{"lineNumber":103,"author":{"gitId":"tanhuakun"},"content":"        lessonsList.addAll(source.getLessonsList().getLessons().stream()","lastModifiedDate":"2021-10-12"},{"lineNumber":104,"author":{"gitId":"tanhuakun"},"content":"                .map(JsonAdaptedLesson::new)","lastModifiedDate":"2021-10-12"},{"lineNumber":105,"author":{"gitId":"tanhuakun"},"content":"                .collect(Collectors.toList()));","lastModifiedDate":"2021-10-12"},{"lineNumber":106,"author":{"gitId":"tanhuakun"},"content":"        exams.addAll(source.getExams().stream().map(JsonAdaptedExam::new)","lastModifiedDate":"2021-10-19"},{"lineNumber":107,"author":{"gitId":"tanhuakun"},"content":"                .collect(Collectors.toList()));","lastModifiedDate":"2021-10-19"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":111,"author":{"gitId":"-"},"content":"     * Converts this Jackson-friendly adapted person object into the model\u0027s {@code Person} object.","lastModifiedDate":"2018-08-13"},{"lineNumber":112,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":113,"author":{"gitId":"-"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted person.","lastModifiedDate":"2018-08-13"},{"lineNumber":114,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    public Person toModelType() throws IllegalValueException {","lastModifiedDate":"2018-08-13"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        final List\u003cTag\u003e personTags \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2018-08-13"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        for (JsonAdaptedTag tag : tagged) {","lastModifiedDate":"2018-08-13"},{"lineNumber":118,"author":{"gitId":"-"},"content":"            personTags.add(tag.toModelType());","lastModifiedDate":"2018-08-13"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":121,"author":{"gitId":"jeremy-7007"},"content":"        final List\u003cUniqueId\u003e personAssignedTaskIds \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-12"},{"lineNumber":122,"author":{"gitId":"jeremy-7007"},"content":"        for (JsonAdaptedUniqueId id : assignedTaskIds) {","lastModifiedDate":"2021-10-12"},{"lineNumber":123,"author":{"gitId":"jeremy-7007"},"content":"            personAssignedTaskIds.add(id.toModelType());","lastModifiedDate":"2021-10-12"},{"lineNumber":124,"author":{"gitId":"jeremy-7007"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":125,"author":{"gitId":"jeremy-7007"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":126,"author":{"gitId":"Neha-5678"},"content":"        final List\u003cUniqueId\u003e personAssignedGroupIds \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-26"},{"lineNumber":127,"author":{"gitId":"Neha-5678"},"content":"        for (JsonAdaptedUniqueId id : assignedGroupIds) {","lastModifiedDate":"2021-10-26"},{"lineNumber":128,"author":{"gitId":"Neha-5678"},"content":"            personAssignedGroupIds.add(id.toModelType());","lastModifiedDate":"2021-10-26"},{"lineNumber":129,"author":{"gitId":"Neha-5678"},"content":"        }","lastModifiedDate":"2021-10-26"},{"lineNumber":130,"author":{"gitId":"Neha-5678"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":131,"author":{"gitId":"jeremy-7007"},"content":"        final Map\u003cUniqueId, Boolean\u003e personTasksCompletion \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2021-10-26"},{"lineNumber":132,"author":{"gitId":"jeremy-7007"},"content":"        for (JsonAdaptedTaskCompletion taskCompletion : tasksCompletion) {","lastModifiedDate":"2021-10-26"},{"lineNumber":133,"author":{"gitId":"jeremy-7007"},"content":"            personTasksCompletion.put(taskCompletion.getModelTaskId(), taskCompletion.getModelIsDone());","lastModifiedDate":"2021-10-26"},{"lineNumber":134,"author":{"gitId":"jeremy-7007"},"content":"        }","lastModifiedDate":"2021-10-26"},{"lineNumber":135,"author":{"gitId":"jeremy-7007"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":136,"author":{"gitId":"-"},"content":"        if (name \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":137,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        if (!Name.isValidName(name)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":140,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        final Name modelName \u003d new Name(name);","lastModifiedDate":"2018-08-13"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        if (phone \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":145,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Phone.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        if (!Phone.isValidPhone(phone)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":148,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        final Phone modelPhone \u003d new Phone(phone);","lastModifiedDate":"2018-08-13"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        if (email \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":153,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Email.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        if (!Email.isValidEmail(email)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":156,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        final Email modelEmail \u003d new Email(email);","lastModifiedDate":"2018-08-13"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        if (address \u003d\u003d null) {","lastModifiedDate":"2018-08-13"},{"lineNumber":161,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT, Address.class.getSimpleName()));","lastModifiedDate":"2018-08-13"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        if (!Address.isValidAddress(address)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":164,"author":{"gitId":"-"},"content":"            throw new IllegalValueException(Address.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-08-13"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":166,"author":{"gitId":"-"},"content":"        final Address modelAddress \u003d new Address(address);","lastModifiedDate":"2018-08-13"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        final Set\u003cTag\u003e modelTags \u003d new HashSet\u003c\u003e(personTags);","lastModifiedDate":"2018-08-13"},{"lineNumber":169,"author":{"gitId":"jeremy-7007"},"content":"        final Set\u003cUniqueId\u003e modelAssignedTaskIds \u003d new HashSet\u003c\u003e(personAssignedTaskIds);","lastModifiedDate":"2021-10-12"},{"lineNumber":170,"author":{"gitId":"Neha-5678"},"content":"        final Set\u003cUniqueId\u003e modelAssignedGroupIds \u003d new HashSet\u003c\u003e(personAssignedGroupIds);","lastModifiedDate":"2021-10-26"},{"lineNumber":171,"author":{"gitId":"jeremy-7007"},"content":"        final Map\u003cUniqueId, Boolean\u003e modelTasksCompletion \u003d new HashMap\u003c\u003e(personTasksCompletion);","lastModifiedDate":"2021-10-26"},{"lineNumber":172,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":173,"author":{"gitId":"tanhuakun"},"content":"        final List\u003cLesson\u003e modelLessonsList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-12"},{"lineNumber":174,"author":{"gitId":"tanhuakun"},"content":"        for (JsonAdaptedLesson l : lessonsList) {","lastModifiedDate":"2021-10-12"},{"lineNumber":175,"author":{"gitId":"tanhuakun"},"content":"            modelLessonsList.add(l.toModelType());","lastModifiedDate":"2021-10-12"},{"lineNumber":176,"author":{"gitId":"tanhuakun"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":177,"author":{"gitId":"tanhuakun"},"content":"        if (NoOverlapLessonList.doAnyLessonsOverlap(modelLessonsList)) {","lastModifiedDate":"2021-10-12"},{"lineNumber":178,"author":{"gitId":"tanhuakun"},"content":"            throw new IllegalValueException(NoOverlapLessonList.LESSON_OVERLAP);","lastModifiedDate":"2021-10-12"},{"lineNumber":179,"author":{"gitId":"tanhuakun"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":180,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":181,"author":{"gitId":"tanhuakun"},"content":"        NoOverlapLessonList lessonsList \u003d NoOverlapLessonList.of(modelLessonsList);","lastModifiedDate":"2021-10-12"},{"lineNumber":182,"author":{"gitId":"eltonyeh"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":183,"author":{"gitId":"eltonyeh"},"content":"        if (uniqueId \u003d\u003d null) {","lastModifiedDate":"2021-10-12"},{"lineNumber":184,"author":{"gitId":"eltonyeh"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT,","lastModifiedDate":"2021-10-12"},{"lineNumber":185,"author":{"gitId":"eltonyeh"},"content":"                    UniqueId.class.getSimpleName()));","lastModifiedDate":"2021-10-12"},{"lineNumber":186,"author":{"gitId":"eltonyeh"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":187,"author":{"gitId":"eltonyeh"},"content":"        final UniqueId modelUniqueId \u003d UniqueId.generateId(uniqueId);","lastModifiedDate":"2021-10-12"},{"lineNumber":188,"author":{"gitId":"eltonyeh"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":189,"author":{"gitId":"tanhuakun"},"content":"        final List\u003cExam\u003e modelExams \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-19"},{"lineNumber":190,"author":{"gitId":"tanhuakun"},"content":"        for (JsonAdaptedExam e : exams) {","lastModifiedDate":"2021-10-19"},{"lineNumber":191,"author":{"gitId":"tanhuakun"},"content":"            modelExams.add(e.toModelType());","lastModifiedDate":"2021-10-19"},{"lineNumber":192,"author":{"gitId":"tanhuakun"},"content":"        }","lastModifiedDate":"2021-10-19"},{"lineNumber":193,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":194,"author":{"gitId":"jeremy-7007"},"content":"        return new Person(modelUniqueId, modelName, modelPhone, modelEmail,","lastModifiedDate":"2021-10-12"},{"lineNumber":195,"author":{"gitId":"jeremy-7007"},"content":"                modelAddress, modelTags, modelAssignedTaskIds, modelTasksCompletion,","lastModifiedDate":"2021-10-26"},{"lineNumber":196,"author":{"gitId":"Neha-5678"},"content":"                lessonsList, modelExams, modelAssignedGroupIds);","lastModifiedDate":"2021-10-28"},{"lineNumber":197,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":198,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":199,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"Neha-5678":15,"jeremy-7007":33,"eltonyeh":13,"tanhuakun":33,"-":105}},{"path":"src/main/java/seedu/address/storage/JsonAdaptedTask.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"Neha-5678"},"content":"package seedu.address.storage;","lastModifiedDate":"2021-10-11"},{"lineNumber":2,"author":{"gitId":"Neha-5678"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":3,"author":{"gitId":"Neha-5678"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-10-11"},{"lineNumber":4,"author":{"gitId":"Neha-5678"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":5,"author":{"gitId":"Neha-5678"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2021-10-11"},{"lineNumber":6,"author":{"gitId":"Neha-5678"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2021-10-11"},{"lineNumber":7,"author":{"gitId":"Neha-5678"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":8,"author":{"gitId":"Neha-5678"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2021-10-11"},{"lineNumber":9,"author":{"gitId":"eltonyeh"},"content":"import seedu.address.model.id.UniqueId;","lastModifiedDate":"2021-10-12"},{"lineNumber":10,"author":{"gitId":"Neha-5678"},"content":"import seedu.address.model.task.Deadline;","lastModifiedDate":"2021-10-11"},{"lineNumber":11,"author":{"gitId":"eltonyeh"},"content":"import seedu.address.model.task.Description;","lastModifiedDate":"2021-10-12"},{"lineNumber":12,"author":{"gitId":"Neha-5678"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2021-10-11"},{"lineNumber":13,"author":{"gitId":"Neha-5678"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":14,"author":{"gitId":"Neha-5678"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":15,"author":{"gitId":"Neha-5678"},"content":"/**","lastModifiedDate":"2021-10-11"},{"lineNumber":16,"author":{"gitId":"Neha-5678"},"content":" * Jackson-friendly version of {@link Task}.","lastModifiedDate":"2021-10-11"},{"lineNumber":17,"author":{"gitId":"Neha-5678"},"content":" */","lastModifiedDate":"2021-10-11"},{"lineNumber":18,"author":{"gitId":"Neha-5678"},"content":"public class JsonAdaptedTask {","lastModifiedDate":"2021-10-11"},{"lineNumber":19,"author":{"gitId":"Neha-5678"},"content":"    public static final String MISSING_FIELD_MESSAGE_FORMAT \u003d \"Task\u0027s %s field is missing!\";","lastModifiedDate":"2021-10-11"},{"lineNumber":20,"author":{"gitId":"Neha-5678"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":21,"author":{"gitId":"Neha-5678"},"content":"    private final String name;","lastModifiedDate":"2021-10-11"},{"lineNumber":22,"author":{"gitId":"Neha-5678"},"content":"    private final String deadline;","lastModifiedDate":"2021-10-11"},{"lineNumber":23,"author":{"gitId":"Neha-5678"},"content":"    private final String uniqueId;","lastModifiedDate":"2021-10-11"},{"lineNumber":24,"author":{"gitId":"Neha-5678"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":25,"author":{"gitId":"Neha-5678"},"content":"    /**","lastModifiedDate":"2021-10-11"},{"lineNumber":26,"author":{"gitId":"Neha-5678"},"content":"     * Constructs a {@code JsonAdaptedTask} with the given task details.","lastModifiedDate":"2021-10-11"},{"lineNumber":27,"author":{"gitId":"Neha-5678"},"content":"     */","lastModifiedDate":"2021-10-11"},{"lineNumber":28,"author":{"gitId":"Neha-5678"},"content":"    @JsonCreator","lastModifiedDate":"2021-10-11"},{"lineNumber":29,"author":{"gitId":"Neha-5678"},"content":"    public JsonAdaptedTask(@JsonProperty(\"name\") String name, @JsonProperty(\"deadline\") String deadline,","lastModifiedDate":"2021-10-11"},{"lineNumber":30,"author":{"gitId":"Neha-5678"},"content":"                           @JsonProperty(\"uniqueId\") String uniqueId) {","lastModifiedDate":"2021-10-11"},{"lineNumber":31,"author":{"gitId":"Neha-5678"},"content":"        this.name \u003d name;","lastModifiedDate":"2021-10-11"},{"lineNumber":32,"author":{"gitId":"Neha-5678"},"content":"        this.deadline \u003d deadline;","lastModifiedDate":"2021-10-11"},{"lineNumber":33,"author":{"gitId":"Neha-5678"},"content":"        this.uniqueId \u003d uniqueId;","lastModifiedDate":"2021-10-11"},{"lineNumber":34,"author":{"gitId":"Neha-5678"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":35,"author":{"gitId":"Neha-5678"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":36,"author":{"gitId":"Neha-5678"},"content":"    /**","lastModifiedDate":"2021-10-11"},{"lineNumber":37,"author":{"gitId":"Neha-5678"},"content":"     * Converts a given {@code Task} into this class for Jackson use.","lastModifiedDate":"2021-10-11"},{"lineNumber":38,"author":{"gitId":"Neha-5678"},"content":"     */","lastModifiedDate":"2021-10-11"},{"lineNumber":39,"author":{"gitId":"Neha-5678"},"content":"    public JsonAdaptedTask(Task source) {","lastModifiedDate":"2021-10-11"},{"lineNumber":40,"author":{"gitId":"Neha-5678"},"content":"        name \u003d source.getDescription().description;","lastModifiedDate":"2021-10-19"},{"lineNumber":41,"author":{"gitId":"Neha-5678"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd\");","lastModifiedDate":"2021-10-11"},{"lineNumber":42,"author":{"gitId":"Neha-5678"},"content":"        deadline \u003d source.getDeadline().deadline.format(formatter);","lastModifiedDate":"2021-10-11"},{"lineNumber":43,"author":{"gitId":"Neha-5678"},"content":"        uniqueId \u003d source.getId().getUuid().toString();","lastModifiedDate":"2021-10-11"},{"lineNumber":44,"author":{"gitId":"Neha-5678"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":45,"author":{"gitId":"Neha-5678"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":46,"author":{"gitId":"Neha-5678"},"content":"    /**","lastModifiedDate":"2021-10-11"},{"lineNumber":47,"author":{"gitId":"Neha-5678"},"content":"     * Converts this Jackson-friendly adapted task object into the model\u0027s {@code Task} object.","lastModifiedDate":"2021-10-11"},{"lineNumber":48,"author":{"gitId":"Neha-5678"},"content":"     *","lastModifiedDate":"2021-10-11"},{"lineNumber":49,"author":{"gitId":"Neha-5678"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted task.","lastModifiedDate":"2021-10-11"},{"lineNumber":50,"author":{"gitId":"Neha-5678"},"content":"     */","lastModifiedDate":"2021-10-11"},{"lineNumber":51,"author":{"gitId":"Neha-5678"},"content":"    public Task toModelType() throws IllegalValueException {","lastModifiedDate":"2021-10-11"},{"lineNumber":52,"author":{"gitId":"Neha-5678"},"content":"        if (name \u003d\u003d null) {","lastModifiedDate":"2021-10-11"},{"lineNumber":53,"author":{"gitId":"eltonyeh"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT,","lastModifiedDate":"2021-10-12"},{"lineNumber":54,"author":{"gitId":"eltonyeh"},"content":"                    Description.class.getSimpleName()));","lastModifiedDate":"2021-10-12"},{"lineNumber":55,"author":{"gitId":"Neha-5678"},"content":"        }","lastModifiedDate":"2021-10-11"},{"lineNumber":56,"author":{"gitId":"eltonyeh"},"content":"        if (!Description.isValidDescription(name)) {","lastModifiedDate":"2021-10-12"},{"lineNumber":57,"author":{"gitId":"eltonyeh"},"content":"            throw new IllegalValueException(Description.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-12"},{"lineNumber":58,"author":{"gitId":"Neha-5678"},"content":"        }","lastModifiedDate":"2021-10-11"},{"lineNumber":59,"author":{"gitId":"eltonyeh"},"content":"        final Description modelDescription \u003d new Description(name);","lastModifiedDate":"2021-10-12"},{"lineNumber":60,"author":{"gitId":"Neha-5678"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":61,"author":{"gitId":"Neha-5678"},"content":"        if (deadline \u003d\u003d null) {","lastModifiedDate":"2021-10-11"},{"lineNumber":62,"author":{"gitId":"Neha-5678"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT,","lastModifiedDate":"2021-10-11"},{"lineNumber":63,"author":{"gitId":"Neha-5678"},"content":"                    Deadline.class.getSimpleName()));","lastModifiedDate":"2021-10-11"},{"lineNumber":64,"author":{"gitId":"Neha-5678"},"content":"        }","lastModifiedDate":"2021-10-11"},{"lineNumber":65,"author":{"gitId":"Neha-5678"},"content":"        if (!Deadline.isValidDeadline(deadline)) {","lastModifiedDate":"2021-10-11"},{"lineNumber":66,"author":{"gitId":"Neha-5678"},"content":"            throw new IllegalValueException(Deadline.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-11"},{"lineNumber":67,"author":{"gitId":"Neha-5678"},"content":"        }","lastModifiedDate":"2021-10-11"},{"lineNumber":68,"author":{"gitId":"Neha-5678"},"content":"        final Deadline modelDeadline \u003d new Deadline(deadline);","lastModifiedDate":"2021-10-11"},{"lineNumber":69,"author":{"gitId":"Neha-5678"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":70,"author":{"gitId":"Neha-5678"},"content":"        if (uniqueId \u003d\u003d null) {","lastModifiedDate":"2021-10-11"},{"lineNumber":71,"author":{"gitId":"Neha-5678"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT,","lastModifiedDate":"2021-10-11"},{"lineNumber":72,"author":{"gitId":"Neha-5678"},"content":"                    UniqueId.class.getSimpleName()));","lastModifiedDate":"2021-10-11"},{"lineNumber":73,"author":{"gitId":"Neha-5678"},"content":"        }","lastModifiedDate":"2021-10-11"},{"lineNumber":74,"author":{"gitId":"Neha-5678"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":75,"author":{"gitId":"eltonyeh"},"content":"        final UniqueId modelUniqueId \u003d UniqueId.generateId(uniqueId);","lastModifiedDate":"2021-10-12"},{"lineNumber":76,"author":{"gitId":"eltonyeh"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":77,"author":{"gitId":"eltonyeh"},"content":"        Task task \u003d new Task(modelDescription, modelDeadline, modelUniqueId);","lastModifiedDate":"2021-10-12"},{"lineNumber":78,"author":{"gitId":"eltonyeh"},"content":"        modelUniqueId.setOwner(task);","lastModifiedDate":"2021-10-12"},{"lineNumber":79,"author":{"gitId":"eltonyeh"},"content":"        return task;","lastModifiedDate":"2021-10-12"},{"lineNumber":80,"author":{"gitId":"Neha-5678"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":81,"author":{"gitId":"Neha-5678"},"content":"}","lastModifiedDate":"2021-10-11"}],"authorContributionMap":{"Neha-5678":69,"eltonyeh":12}},{"path":"src/main/java/seedu/address/storage/JsonAdaptedTaskCompletion.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jeremy-7007"},"content":"package seedu.address.storage;","lastModifiedDate":"2021-10-26"},{"lineNumber":2,"author":{"gitId":"jeremy-7007"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":3,"author":{"gitId":"jeremy-7007"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2021-10-26"},{"lineNumber":4,"author":{"gitId":"jeremy-7007"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2021-10-26"},{"lineNumber":5,"author":{"gitId":"jeremy-7007"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":6,"author":{"gitId":"jeremy-7007"},"content":"import seedu.address.model.id.UniqueId;","lastModifiedDate":"2021-10-26"},{"lineNumber":7,"author":{"gitId":"jeremy-7007"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":8,"author":{"gitId":"jeremy-7007"},"content":"/**","lastModifiedDate":"2021-10-26"},{"lineNumber":9,"author":{"gitId":"jeremy-7007"},"content":" * Jackson-friendly version of individual mappings in {@code tasksCompletion}.","lastModifiedDate":"2021-10-26"},{"lineNumber":10,"author":{"gitId":"jeremy-7007"},"content":" */","lastModifiedDate":"2021-10-26"},{"lineNumber":11,"author":{"gitId":"jeremy-7007"},"content":"public class JsonAdaptedTaskCompletion {","lastModifiedDate":"2021-10-26"},{"lineNumber":12,"author":{"gitId":"jeremy-7007"},"content":"    private final String taskIdString;","lastModifiedDate":"2021-10-26"},{"lineNumber":13,"author":{"gitId":"jeremy-7007"},"content":"    private final boolean isDone;","lastModifiedDate":"2021-10-26"},{"lineNumber":14,"author":{"gitId":"jeremy-7007"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":15,"author":{"gitId":"jeremy-7007"},"content":"    /**","lastModifiedDate":"2021-10-26"},{"lineNumber":16,"author":{"gitId":"jeremy-7007"},"content":"     * Constructs a {@code JsonAdaptedTaskCompletion} with the given {@code taskIdString} and {@code isDone}.","lastModifiedDate":"2021-10-26"},{"lineNumber":17,"author":{"gitId":"jeremy-7007"},"content":"     */","lastModifiedDate":"2021-10-26"},{"lineNumber":18,"author":{"gitId":"jeremy-7007"},"content":"    @JsonCreator","lastModifiedDate":"2021-10-26"},{"lineNumber":19,"author":{"gitId":"jeremy-7007"},"content":"    public JsonAdaptedTaskCompletion(@JsonProperty(\"taskIdString\") String taskIdString,","lastModifiedDate":"2021-10-26"},{"lineNumber":20,"author":{"gitId":"jeremy-7007"},"content":"            @JsonProperty(\"isDone\") boolean isDone) {","lastModifiedDate":"2021-10-26"},{"lineNumber":21,"author":{"gitId":"jeremy-7007"},"content":"        this.taskIdString \u003d taskIdString;","lastModifiedDate":"2021-10-26"},{"lineNumber":22,"author":{"gitId":"jeremy-7007"},"content":"        this.isDone \u003d isDone;","lastModifiedDate":"2021-10-26"},{"lineNumber":23,"author":{"gitId":"jeremy-7007"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":24,"author":{"gitId":"jeremy-7007"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":25,"author":{"gitId":"jeremy-7007"},"content":"    /**","lastModifiedDate":"2021-10-26"},{"lineNumber":26,"author":{"gitId":"jeremy-7007"},"content":"     * Converts this Jackson-friendly task id String into the model\u0027s {@code UniqueId} object.","lastModifiedDate":"2021-10-26"},{"lineNumber":27,"author":{"gitId":"jeremy-7007"},"content":"     */","lastModifiedDate":"2021-10-26"},{"lineNumber":28,"author":{"gitId":"jeremy-7007"},"content":"    public UniqueId getModelTaskId() {","lastModifiedDate":"2021-10-26"},{"lineNumber":29,"author":{"gitId":"jeremy-7007"},"content":"        return UniqueId.generateId(taskIdString);","lastModifiedDate":"2021-10-26"},{"lineNumber":30,"author":{"gitId":"jeremy-7007"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":31,"author":{"gitId":"jeremy-7007"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":32,"author":{"gitId":"jeremy-7007"},"content":"    /**","lastModifiedDate":"2021-10-26"},{"lineNumber":33,"author":{"gitId":"jeremy-7007"},"content":"     * Converts this Jackson-friendly isDone into the model\u0027s Boolean {@code isDone} object.","lastModifiedDate":"2021-10-26"},{"lineNumber":34,"author":{"gitId":"jeremy-7007"},"content":"     */","lastModifiedDate":"2021-10-26"},{"lineNumber":35,"author":{"gitId":"jeremy-7007"},"content":"    public Boolean getModelIsDone() {","lastModifiedDate":"2021-10-26"},{"lineNumber":36,"author":{"gitId":"jeremy-7007"},"content":"        return isDone;","lastModifiedDate":"2021-10-26"},{"lineNumber":37,"author":{"gitId":"jeremy-7007"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":38,"author":{"gitId":"jeremy-7007"},"content":"}","lastModifiedDate":"2021-10-26"}],"authorContributionMap":{"jeremy-7007":38}},{"path":"src/main/java/seedu/address/storage/JsonAdaptedTimeslot.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tanhuakun"},"content":"package seedu.address.storage;","lastModifiedDate":"2021-10-12"},{"lineNumber":2,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":3,"author":{"gitId":"tanhuakun"},"content":"import static seedu.address.storage.JsonAdaptedPerson.MISSING_FIELD_MESSAGE_FORMAT;","lastModifiedDate":"2021-10-12"},{"lineNumber":4,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":5,"author":{"gitId":"tanhuakun"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2021-10-12"},{"lineNumber":6,"author":{"gitId":"tanhuakun"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2021-10-12"},{"lineNumber":7,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":8,"author":{"gitId":"tanhuakun"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2021-10-12"},{"lineNumber":9,"author":{"gitId":"tanhuakun"},"content":"import seedu.address.model.lesson.Timeslot;","lastModifiedDate":"2021-10-12"},{"lineNumber":10,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":11,"author":{"gitId":"tanhuakun"},"content":"/**","lastModifiedDate":"2021-10-12"},{"lineNumber":12,"author":{"gitId":"tanhuakun"},"content":" * Jackson-friendly version of {@link Timeslot}.","lastModifiedDate":"2021-10-12"},{"lineNumber":13,"author":{"gitId":"tanhuakun"},"content":" */","lastModifiedDate":"2021-10-12"},{"lineNumber":14,"author":{"gitId":"tanhuakun"},"content":"public class JsonAdaptedTimeslot {","lastModifiedDate":"2021-10-12"},{"lineNumber":15,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":16,"author":{"gitId":"tanhuakun"},"content":"    private final String startTime;","lastModifiedDate":"2021-10-12"},{"lineNumber":17,"author":{"gitId":"tanhuakun"},"content":"    private final String endTime;","lastModifiedDate":"2021-10-12"},{"lineNumber":18,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":19,"author":{"gitId":"tanhuakun"},"content":"    /**","lastModifiedDate":"2021-10-12"},{"lineNumber":20,"author":{"gitId":"tanhuakun"},"content":"     * Constructs a {@code JsonAdaptedTimeslot} with the given timeslot details.","lastModifiedDate":"2021-10-12"},{"lineNumber":21,"author":{"gitId":"tanhuakun"},"content":"     */","lastModifiedDate":"2021-10-12"},{"lineNumber":22,"author":{"gitId":"tanhuakun"},"content":"    @JsonCreator","lastModifiedDate":"2021-10-12"},{"lineNumber":23,"author":{"gitId":"tanhuakun"},"content":"    public JsonAdaptedTimeslot(@JsonProperty(\"startTime\") String startTime, @JsonProperty(\"endTime\") String endTime) {","lastModifiedDate":"2021-10-12"},{"lineNumber":24,"author":{"gitId":"tanhuakun"},"content":"        this.startTime \u003d startTime;","lastModifiedDate":"2021-10-12"},{"lineNumber":25,"author":{"gitId":"tanhuakun"},"content":"        this.endTime \u003d endTime;","lastModifiedDate":"2021-10-12"},{"lineNumber":26,"author":{"gitId":"tanhuakun"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":27,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":28,"author":{"gitId":"tanhuakun"},"content":"    /**","lastModifiedDate":"2021-10-12"},{"lineNumber":29,"author":{"gitId":"tanhuakun"},"content":"     * Converts a given {@code Timeslot} into this class for Jackson use.","lastModifiedDate":"2021-10-12"},{"lineNumber":30,"author":{"gitId":"tanhuakun"},"content":"     */","lastModifiedDate":"2021-10-12"},{"lineNumber":31,"author":{"gitId":"tanhuakun"},"content":"    public JsonAdaptedTimeslot(Timeslot source) {","lastModifiedDate":"2021-10-12"},{"lineNumber":32,"author":{"gitId":"tanhuakun"},"content":"        startTime \u003d source.getStartTime().toString();","lastModifiedDate":"2021-10-12"},{"lineNumber":33,"author":{"gitId":"tanhuakun"},"content":"        endTime \u003d source.getEndTime().toString();","lastModifiedDate":"2021-10-12"},{"lineNumber":34,"author":{"gitId":"tanhuakun"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":35,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":36,"author":{"gitId":"tanhuakun"},"content":"    /**","lastModifiedDate":"2021-10-12"},{"lineNumber":37,"author":{"gitId":"tanhuakun"},"content":"     * Converts this Jackson-friendly adapted timeslot object into the model\u0027s {@code Timeslot} object.","lastModifiedDate":"2021-10-12"},{"lineNumber":38,"author":{"gitId":"tanhuakun"},"content":"     *","lastModifiedDate":"2021-10-12"},{"lineNumber":39,"author":{"gitId":"tanhuakun"},"content":"     * @throws IllegalValueException if there were any data constraints violated in the adapted timeslot.","lastModifiedDate":"2021-10-12"},{"lineNumber":40,"author":{"gitId":"tanhuakun"},"content":"     */","lastModifiedDate":"2021-10-12"},{"lineNumber":41,"author":{"gitId":"tanhuakun"},"content":"    public Timeslot toModelType() throws IllegalValueException {","lastModifiedDate":"2021-10-12"},{"lineNumber":42,"author":{"gitId":"tanhuakun"},"content":"        if (startTime \u003d\u003d null || endTime \u003d\u003d null) {","lastModifiedDate":"2021-10-12"},{"lineNumber":43,"author":{"gitId":"tanhuakun"},"content":"            throw new IllegalValueException(String.format(MISSING_FIELD_MESSAGE_FORMAT,","lastModifiedDate":"2021-10-12"},{"lineNumber":44,"author":{"gitId":"tanhuakun"},"content":"                    Timeslot.class.getSimpleName()));","lastModifiedDate":"2021-10-12"},{"lineNumber":45,"author":{"gitId":"tanhuakun"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":46,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":47,"author":{"gitId":"tanhuakun"},"content":"        if (!Timeslot.isValidTimeslot(startTime, endTime)) {","lastModifiedDate":"2021-10-12"},{"lineNumber":48,"author":{"gitId":"tanhuakun"},"content":"            throw new IllegalValueException(Timeslot.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-12"},{"lineNumber":49,"author":{"gitId":"tanhuakun"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":50,"author":{"gitId":"tanhuakun"},"content":"        return new Timeslot(startTime, endTime);","lastModifiedDate":"2021-10-12"},{"lineNumber":51,"author":{"gitId":"tanhuakun"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":52,"author":{"gitId":"tanhuakun"},"content":"}","lastModifiedDate":"2021-10-12"}],"authorContributionMap":{"tanhuakun":52}},{"path":"src/main/java/seedu/address/storage/JsonAdaptedUniqueId.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"jeremy-7007"},"content":"package seedu.address.storage;","lastModifiedDate":"2021-10-12"},{"lineNumber":2,"author":{"gitId":"jeremy-7007"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":3,"author":{"gitId":"jeremy-7007"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2021-10-12"},{"lineNumber":4,"author":{"gitId":"jeremy-7007"},"content":"import com.fasterxml.jackson.annotation.JsonValue;","lastModifiedDate":"2021-10-12"},{"lineNumber":5,"author":{"gitId":"jeremy-7007"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":6,"author":{"gitId":"jeremy-7007"},"content":"import seedu.address.model.id.UniqueId;","lastModifiedDate":"2021-10-12"},{"lineNumber":7,"author":{"gitId":"jeremy-7007"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":8,"author":{"gitId":"jeremy-7007"},"content":"/**","lastModifiedDate":"2021-10-12"},{"lineNumber":9,"author":{"gitId":"jeremy-7007"},"content":" * Jackson-friendly version of {@link UniqueId}.","lastModifiedDate":"2021-10-12"},{"lineNumber":10,"author":{"gitId":"jeremy-7007"},"content":" */","lastModifiedDate":"2021-10-12"},{"lineNumber":11,"author":{"gitId":"jeremy-7007"},"content":"public class JsonAdaptedUniqueId {","lastModifiedDate":"2021-10-12"},{"lineNumber":12,"author":{"gitId":"jeremy-7007"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":13,"author":{"gitId":"jeremy-7007"},"content":"    private final String id;","lastModifiedDate":"2021-10-12"},{"lineNumber":14,"author":{"gitId":"jeremy-7007"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":15,"author":{"gitId":"jeremy-7007"},"content":"    /**","lastModifiedDate":"2021-10-12"},{"lineNumber":16,"author":{"gitId":"jeremy-7007"},"content":"     * Constructs a {@code JsonAdaptedUniqueId} with the given {@code id}.","lastModifiedDate":"2021-10-12"},{"lineNumber":17,"author":{"gitId":"jeremy-7007"},"content":"     */","lastModifiedDate":"2021-10-12"},{"lineNumber":18,"author":{"gitId":"jeremy-7007"},"content":"    @JsonCreator","lastModifiedDate":"2021-10-12"},{"lineNumber":19,"author":{"gitId":"jeremy-7007"},"content":"    public JsonAdaptedUniqueId(String id) {","lastModifiedDate":"2021-10-12"},{"lineNumber":20,"author":{"gitId":"jeremy-7007"},"content":"        this.id \u003d id;","lastModifiedDate":"2021-10-12"},{"lineNumber":21,"author":{"gitId":"jeremy-7007"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":22,"author":{"gitId":"jeremy-7007"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":23,"author":{"gitId":"jeremy-7007"},"content":"    /**","lastModifiedDate":"2021-10-12"},{"lineNumber":24,"author":{"gitId":"jeremy-7007"},"content":"     * Converts a given {@code UniqueId} into this class for Jackson use.","lastModifiedDate":"2021-10-12"},{"lineNumber":25,"author":{"gitId":"jeremy-7007"},"content":"     */","lastModifiedDate":"2021-10-12"},{"lineNumber":26,"author":{"gitId":"jeremy-7007"},"content":"    public JsonAdaptedUniqueId(UniqueId source) {","lastModifiedDate":"2021-10-12"},{"lineNumber":27,"author":{"gitId":"jeremy-7007"},"content":"        id \u003d source.getUuid().toString();","lastModifiedDate":"2021-10-12"},{"lineNumber":28,"author":{"gitId":"jeremy-7007"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":29,"author":{"gitId":"jeremy-7007"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":30,"author":{"gitId":"jeremy-7007"},"content":"    @JsonValue","lastModifiedDate":"2021-10-12"},{"lineNumber":31,"author":{"gitId":"jeremy-7007"},"content":"    public String getId() {","lastModifiedDate":"2021-10-12"},{"lineNumber":32,"author":{"gitId":"jeremy-7007"},"content":"        return id;","lastModifiedDate":"2021-10-12"},{"lineNumber":33,"author":{"gitId":"jeremy-7007"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":34,"author":{"gitId":"jeremy-7007"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":35,"author":{"gitId":"jeremy-7007"},"content":"    /**","lastModifiedDate":"2021-10-12"},{"lineNumber":36,"author":{"gitId":"jeremy-7007"},"content":"     * Converts this Jackson-friendly adapted id object into the model\u0027s {@code UniqueId} object.","lastModifiedDate":"2021-10-12"},{"lineNumber":37,"author":{"gitId":"jeremy-7007"},"content":"     */","lastModifiedDate":"2021-10-12"},{"lineNumber":38,"author":{"gitId":"jeremy-7007"},"content":"    public UniqueId toModelType() {","lastModifiedDate":"2021-10-12"},{"lineNumber":39,"author":{"gitId":"jeremy-7007"},"content":"        return UniqueId.generateId(id);","lastModifiedDate":"2021-10-12"},{"lineNumber":40,"author":{"gitId":"jeremy-7007"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":41,"author":{"gitId":"jeremy-7007"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":42,"author":{"gitId":"jeremy-7007"},"content":"}","lastModifiedDate":"2021-10-12"}],"authorContributionMap":{"jeremy-7007":42}},{"path":"src/main/java/seedu/address/storage/JsonSerializableAddressBook.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonCreator;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonProperty;","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import com.fasterxml.jackson.annotation.JsonRootName;","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"Neha-5678"},"content":"import seedu.address.model.group.Group;","lastModifiedDate":"2021-10-26"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-08-13"},{"lineNumber":16,"author":{"gitId":"Neha-5678"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2021-10-11"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * An Immutable AddressBook that is serializable to JSON format.","lastModifiedDate":"2018-08-13"},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"@JsonRootName(value \u003d \"addressbook\")","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"class JsonSerializableAddressBook {","lastModifiedDate":"2018-12-03"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    public static final String MESSAGE_DUPLICATE_PERSON \u003d \"Persons list contains duplicate person(s).\";","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"Neha-5678"},"content":"    public static final String MESSAGE_DUPLICATE_TASK \u003d \"Tasks list contains duplicate task(s).\";","lastModifiedDate":"2021-10-11"},{"lineNumber":26,"author":{"gitId":"Neha-5678"},"content":"    public static final String MESSAGE_DUPLICATE_GROUP \u003d \"Groups list contains duplicate group(s).\";","lastModifiedDate":"2021-10-26"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private final List\u003cJsonAdaptedPerson\u003e persons \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"Neha-5678"},"content":"    private final List\u003cJsonAdaptedTask\u003e tasks \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-11"},{"lineNumber":30,"author":{"gitId":"Neha-5678"},"content":"    private final List\u003cJsonAdaptedGroup\u003e groups \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-26"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"Neha-5678"},"content":"     * Constructs a {@code JsonSerializableAddressBook} with the given persons and tasks.","lastModifiedDate":"2021-10-11"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @JsonCreator","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"Neha-5678"},"content":"    public JsonSerializableAddressBook(@JsonProperty(\"persons\") List\u003cJsonAdaptedPerson\u003e persons,","lastModifiedDate":"2021-10-11"},{"lineNumber":37,"author":{"gitId":"Neha-5678"},"content":"                                       @JsonProperty(\"tasks\") List\u003cJsonAdaptedTask\u003e tasks,","lastModifiedDate":"2021-10-26"},{"lineNumber":38,"author":{"gitId":"Neha-5678"},"content":"                                       @JsonProperty(\"groups\") List\u003cJsonAdaptedGroup\u003e groups) {","lastModifiedDate":"2021-10-26"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        this.persons.addAll(persons);","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"Neha-5678"},"content":"        this.tasks.addAll(tasks);","lastModifiedDate":"2021-10-11"},{"lineNumber":41,"author":{"gitId":"Neha-5678"},"content":"        this.groups.addAll(groups);","lastModifiedDate":"2021-10-26"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * Converts a given {@code ReadOnlyAddressBook} into this class for Jackson use.","lastModifiedDate":"2018-08-13"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     * @param source future changes to this will not affect the created {@code JsonSerializableAddressBook}.","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public JsonSerializableAddressBook(ReadOnlyAddressBook source) {","lastModifiedDate":"2018-08-13"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        persons.addAll(source.getPersonList().stream().map(JsonAdaptedPerson::new).collect(Collectors.toList()));","lastModifiedDate":"2018-08-13"},{"lineNumber":51,"author":{"gitId":"Neha-5678"},"content":"        tasks.addAll(source.getTaskList().stream().map(JsonAdaptedTask::new).collect(Collectors.toList()));","lastModifiedDate":"2021-10-11"},{"lineNumber":52,"author":{"gitId":"Neha-5678"},"content":"        groups.addAll(source.getGroupList().stream().map(JsonAdaptedGroup::new).collect(Collectors.toList()));","lastModifiedDate":"2021-10-26"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-08-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     * Converts this address book into the model\u0027s {@code AddressBook} object.","lastModifiedDate":"2018-08-13"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     * @throws IllegalValueException if there were any data constraints violated.","lastModifiedDate":"2018-08-13"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-08-13"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    public AddressBook toModelType() throws IllegalValueException {","lastModifiedDate":"2018-08-13"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        AddressBook addressBook \u003d new AddressBook();","lastModifiedDate":"2018-08-13"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        for (JsonAdaptedPerson jsonAdaptedPerson : persons) {","lastModifiedDate":"2018-08-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"            Person person \u003d jsonAdaptedPerson.toModelType();","lastModifiedDate":"2018-08-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"            if (addressBook.hasPerson(person)) {","lastModifiedDate":"2018-08-13"},{"lineNumber":65,"author":{"gitId":"-"},"content":"                throw new IllegalValueException(MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2018-08-13"},{"lineNumber":66,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-08-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"            addressBook.addPerson(person);","lastModifiedDate":"2018-08-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-08-13"},{"lineNumber":69,"author":{"gitId":"Neha-5678"},"content":"        for (JsonAdaptedTask jsonAdaptedTask : tasks) {","lastModifiedDate":"2021-10-11"},{"lineNumber":70,"author":{"gitId":"Neha-5678"},"content":"            Task task \u003d jsonAdaptedTask.toModelType();","lastModifiedDate":"2021-10-11"},{"lineNumber":71,"author":{"gitId":"Neha-5678"},"content":"            if (addressBook.hasTask(task)) {","lastModifiedDate":"2021-10-11"},{"lineNumber":72,"author":{"gitId":"Neha-5678"},"content":"                throw new IllegalValueException(MESSAGE_DUPLICATE_TASK);","lastModifiedDate":"2021-10-11"},{"lineNumber":73,"author":{"gitId":"Neha-5678"},"content":"            }","lastModifiedDate":"2021-10-11"},{"lineNumber":74,"author":{"gitId":"Neha-5678"},"content":"            addressBook.addTask(task);","lastModifiedDate":"2021-10-11"},{"lineNumber":75,"author":{"gitId":"Neha-5678"},"content":"        }","lastModifiedDate":"2021-10-11"},{"lineNumber":76,"author":{"gitId":"Neha-5678"},"content":"        for (JsonAdaptedGroup jsonAdaptedGroup : groups) {","lastModifiedDate":"2021-10-26"},{"lineNumber":77,"author":{"gitId":"Neha-5678"},"content":"            Group group \u003d jsonAdaptedGroup.toModelType();","lastModifiedDate":"2021-10-26"},{"lineNumber":78,"author":{"gitId":"Neha-5678"},"content":"            if (addressBook.hasGroup(group)) {","lastModifiedDate":"2021-10-26"},{"lineNumber":79,"author":{"gitId":"Neha-5678"},"content":"                throw new IllegalValueException(MESSAGE_DUPLICATE_GROUP);","lastModifiedDate":"2021-10-26"},{"lineNumber":80,"author":{"gitId":"Neha-5678"},"content":"            }","lastModifiedDate":"2021-10-26"},{"lineNumber":81,"author":{"gitId":"Neha-5678"},"content":"            addressBook.addGroup(group);","lastModifiedDate":"2021-10-26"},{"lineNumber":82,"author":{"gitId":"Neha-5678"},"content":"        }","lastModifiedDate":"2021-10-26"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        return addressBook;","lastModifiedDate":"2018-08-13"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":86,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"},{"lineNumber":87,"author":{"gitId":"Neha-5678"},"content":"","lastModifiedDate":"2021-10-11"}],"authorContributionMap":{"Neha-5678":29,"-":58}},{"path":"src/main/java/seedu/address/ui/GroupCard.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kvihashini"},"content":"package seedu.address.ui;","lastModifiedDate":"2021-10-17"},{"lineNumber":2,"author":{"gitId":"kvihashini"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":3,"author":{"gitId":"kvihashini"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2021-10-17"},{"lineNumber":4,"author":{"gitId":"kvihashini"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2021-10-17"},{"lineNumber":5,"author":{"gitId":"kvihashini"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2021-10-17"},{"lineNumber":6,"author":{"gitId":"kvihashini"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2021-10-17"},{"lineNumber":7,"author":{"gitId":"kvihashini"},"content":"import seedu.address.model.group.Group;","lastModifiedDate":"2021-10-17"},{"lineNumber":8,"author":{"gitId":"kvihashini"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":9,"author":{"gitId":"kvihashini"},"content":"/**","lastModifiedDate":"2021-10-17"},{"lineNumber":10,"author":{"gitId":"kvihashini"},"content":" * An UI component that displays information of a {@code Group}.","lastModifiedDate":"2021-10-17"},{"lineNumber":11,"author":{"gitId":"kvihashini"},"content":" */","lastModifiedDate":"2021-10-17"},{"lineNumber":12,"author":{"gitId":"kvihashini"},"content":"public class GroupCard extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2021-10-17"},{"lineNumber":13,"author":{"gitId":"kvihashini"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":14,"author":{"gitId":"kvihashini"},"content":"    private static final String FXML \u003d \"GroupListCard.fxml\";","lastModifiedDate":"2021-10-17"},{"lineNumber":15,"author":{"gitId":"kvihashini"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":16,"author":{"gitId":"kvihashini"},"content":"    /**","lastModifiedDate":"2021-10-17"},{"lineNumber":17,"author":{"gitId":"kvihashini"},"content":"     * Note: Certain keywords such as \"location\" and \"resources\" are reserved keywords in JavaFX.","lastModifiedDate":"2021-10-17"},{"lineNumber":18,"author":{"gitId":"kvihashini"},"content":"     * As a consequence, UI elements\u0027 variable names cannot be set to such keywords","lastModifiedDate":"2021-10-17"},{"lineNumber":19,"author":{"gitId":"kvihashini"},"content":"     * or an exception will be thrown by JavaFX during runtime.","lastModifiedDate":"2021-10-17"},{"lineNumber":20,"author":{"gitId":"kvihashini"},"content":"     *","lastModifiedDate":"2021-10-17"},{"lineNumber":21,"author":{"gitId":"kvihashini"},"content":"     * @see \u003ca href\u003d\"https://github.com/se-edu/addressbook-level4/issues/336\"\u003eThe issue on AddressBook level 4\u003c/a\u003e","lastModifiedDate":"2021-10-17"},{"lineNumber":22,"author":{"gitId":"kvihashini"},"content":"     */","lastModifiedDate":"2021-10-17"},{"lineNumber":23,"author":{"gitId":"kvihashini"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":24,"author":{"gitId":"kvihashini"},"content":"    public final Group group;","lastModifiedDate":"2021-10-17"},{"lineNumber":25,"author":{"gitId":"kvihashini"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":26,"author":{"gitId":"kvihashini"},"content":"    @FXML","lastModifiedDate":"2021-10-17"},{"lineNumber":27,"author":{"gitId":"kvihashini"},"content":"    private HBox cardPane;","lastModifiedDate":"2021-10-17"},{"lineNumber":28,"author":{"gitId":"kvihashini"},"content":"    @FXML","lastModifiedDate":"2021-10-17"},{"lineNumber":29,"author":{"gitId":"kvihashini"},"content":"    private Label name;","lastModifiedDate":"2021-10-17"},{"lineNumber":30,"author":{"gitId":"kvihashini"},"content":"    @FXML","lastModifiedDate":"2021-10-17"},{"lineNumber":31,"author":{"gitId":"kvihashini"},"content":"    private Label id;","lastModifiedDate":"2021-10-17"},{"lineNumber":32,"author":{"gitId":"kvihashini"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":33,"author":{"gitId":"kvihashini"},"content":"    /**","lastModifiedDate":"2021-10-17"},{"lineNumber":34,"author":{"gitId":"kvihashini"},"content":"     * Creates a {@code GroupCode} with the given {@code Group} and index to display.","lastModifiedDate":"2021-10-17"},{"lineNumber":35,"author":{"gitId":"kvihashini"},"content":"     */","lastModifiedDate":"2021-10-17"},{"lineNumber":36,"author":{"gitId":"kvihashini"},"content":"    public GroupCard(Group group, int displayedIndex) {","lastModifiedDate":"2021-10-17"},{"lineNumber":37,"author":{"gitId":"kvihashini"},"content":"        super(FXML);","lastModifiedDate":"2021-10-17"},{"lineNumber":38,"author":{"gitId":"kvihashini"},"content":"        this.group \u003d group;","lastModifiedDate":"2021-10-17"},{"lineNumber":39,"author":{"gitId":"kvihashini"},"content":"        id.setText(displayedIndex + \". \");","lastModifiedDate":"2021-10-17"},{"lineNumber":40,"author":{"gitId":"kvihashini"},"content":"        name.setText(group.getName().name);","lastModifiedDate":"2021-10-24"},{"lineNumber":41,"author":{"gitId":"kvihashini"},"content":"    }","lastModifiedDate":"2021-10-17"},{"lineNumber":42,"author":{"gitId":"kvihashini"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":43,"author":{"gitId":"kvihashini"},"content":"    @Override","lastModifiedDate":"2021-10-17"},{"lineNumber":44,"author":{"gitId":"kvihashini"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-17"},{"lineNumber":45,"author":{"gitId":"kvihashini"},"content":"        // short circuit if same object","lastModifiedDate":"2021-10-17"},{"lineNumber":46,"author":{"gitId":"kvihashini"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2021-10-17"},{"lineNumber":47,"author":{"gitId":"kvihashini"},"content":"            return true;","lastModifiedDate":"2021-10-17"},{"lineNumber":48,"author":{"gitId":"kvihashini"},"content":"        }","lastModifiedDate":"2021-10-17"},{"lineNumber":49,"author":{"gitId":"kvihashini"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":50,"author":{"gitId":"kvihashini"},"content":"        // instanceof handles nulls","lastModifiedDate":"2021-10-17"},{"lineNumber":51,"author":{"gitId":"kvihashini"},"content":"        if (!(other instanceof GroupCard)) {","lastModifiedDate":"2021-10-17"},{"lineNumber":52,"author":{"gitId":"kvihashini"},"content":"            return false;","lastModifiedDate":"2021-10-17"},{"lineNumber":53,"author":{"gitId":"kvihashini"},"content":"        }","lastModifiedDate":"2021-10-17"},{"lineNumber":54,"author":{"gitId":"kvihashini"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":55,"author":{"gitId":"kvihashini"},"content":"        // state check","lastModifiedDate":"2021-10-17"},{"lineNumber":56,"author":{"gitId":"kvihashini"},"content":"        GroupCard card \u003d (GroupCard) other;","lastModifiedDate":"2021-10-17"},{"lineNumber":57,"author":{"gitId":"kvihashini"},"content":"        return id.getText().equals(card.id.getText())","lastModifiedDate":"2021-10-17"},{"lineNumber":58,"author":{"gitId":"kvihashini"},"content":"                \u0026\u0026 group.equals(card.group);","lastModifiedDate":"2021-10-17"},{"lineNumber":59,"author":{"gitId":"kvihashini"},"content":"    }","lastModifiedDate":"2021-10-17"},{"lineNumber":60,"author":{"gitId":"kvihashini"},"content":"}","lastModifiedDate":"2021-10-17"}],"authorContributionMap":{"kvihashini":60}},{"path":"src/main/java/seedu/address/ui/GroupListPanel.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kvihashini"},"content":"package seedu.address.ui;","lastModifiedDate":"2021-10-17"},{"lineNumber":2,"author":{"gitId":"kvihashini"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":3,"author":{"gitId":"kvihashini"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2021-10-17"},{"lineNumber":4,"author":{"gitId":"kvihashini"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":5,"author":{"gitId":"kvihashini"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-10-17"},{"lineNumber":6,"author":{"gitId":"kvihashini"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2021-10-17"},{"lineNumber":7,"author":{"gitId":"kvihashini"},"content":"import javafx.scene.control.ListCell;","lastModifiedDate":"2021-10-17"},{"lineNumber":8,"author":{"gitId":"kvihashini"},"content":"import javafx.scene.control.ListView;","lastModifiedDate":"2021-10-17"},{"lineNumber":9,"author":{"gitId":"kvihashini"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2021-10-17"},{"lineNumber":10,"author":{"gitId":"kvihashini"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2021-10-17"},{"lineNumber":11,"author":{"gitId":"kvihashini"},"content":"import seedu.address.model.group.Group;","lastModifiedDate":"2021-10-17"},{"lineNumber":12,"author":{"gitId":"kvihashini"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":13,"author":{"gitId":"kvihashini"},"content":"/**","lastModifiedDate":"2021-10-17"},{"lineNumber":14,"author":{"gitId":"kvihashini"},"content":" * Panel containing the list of groups.","lastModifiedDate":"2021-10-17"},{"lineNumber":15,"author":{"gitId":"kvihashini"},"content":" */","lastModifiedDate":"2021-10-17"},{"lineNumber":16,"author":{"gitId":"kvihashini"},"content":"public class GroupListPanel extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2021-10-17"},{"lineNumber":17,"author":{"gitId":"kvihashini"},"content":"    private static final String FXML \u003d \"GroupListPanel.fxml\";","lastModifiedDate":"2021-10-17"},{"lineNumber":18,"author":{"gitId":"kvihashini"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(GroupListPanel.class);","lastModifiedDate":"2021-10-17"},{"lineNumber":19,"author":{"gitId":"kvihashini"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":20,"author":{"gitId":"kvihashini"},"content":"    @FXML","lastModifiedDate":"2021-10-17"},{"lineNumber":21,"author":{"gitId":"kvihashini"},"content":"    private ListView\u003cGroup\u003e groupListView;","lastModifiedDate":"2021-10-17"},{"lineNumber":22,"author":{"gitId":"kvihashini"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":23,"author":{"gitId":"kvihashini"},"content":"    /**","lastModifiedDate":"2021-10-17"},{"lineNumber":24,"author":{"gitId":"kvihashini"},"content":"     * Creates a {@code GroupListPanel} with the given {@code ObservableList}.","lastModifiedDate":"2021-10-17"},{"lineNumber":25,"author":{"gitId":"kvihashini"},"content":"     */","lastModifiedDate":"2021-10-17"},{"lineNumber":26,"author":{"gitId":"kvihashini"},"content":"    public GroupListPanel(ObservableList\u003cGroup\u003e groupList) {","lastModifiedDate":"2021-10-17"},{"lineNumber":27,"author":{"gitId":"kvihashini"},"content":"        super(FXML);","lastModifiedDate":"2021-10-17"},{"lineNumber":28,"author":{"gitId":"kvihashini"},"content":"        groupListView.setItems(groupList);","lastModifiedDate":"2021-10-17"},{"lineNumber":29,"author":{"gitId":"kvihashini"},"content":"        groupListView.setCellFactory(listView -\u003e new GroupListViewCell());","lastModifiedDate":"2021-10-17"},{"lineNumber":30,"author":{"gitId":"kvihashini"},"content":"    }","lastModifiedDate":"2021-10-17"},{"lineNumber":31,"author":{"gitId":"kvihashini"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":32,"author":{"gitId":"kvihashini"},"content":"    /**","lastModifiedDate":"2021-10-17"},{"lineNumber":33,"author":{"gitId":"kvihashini"},"content":"     * Custom {@code ListCell} that displays the graphics of a {@code Group} using a {@code GroupCard}.","lastModifiedDate":"2021-10-17"},{"lineNumber":34,"author":{"gitId":"kvihashini"},"content":"     */","lastModifiedDate":"2021-10-17"},{"lineNumber":35,"author":{"gitId":"kvihashini"},"content":"    class GroupListViewCell extends ListCell\u003cGroup\u003e {","lastModifiedDate":"2021-10-17"},{"lineNumber":36,"author":{"gitId":"kvihashini"},"content":"        @Override","lastModifiedDate":"2021-10-17"},{"lineNumber":37,"author":{"gitId":"kvihashini"},"content":"        protected void updateItem(Group group, boolean empty) {","lastModifiedDate":"2021-10-17"},{"lineNumber":38,"author":{"gitId":"kvihashini"},"content":"            super.updateItem(group, empty);","lastModifiedDate":"2021-10-17"},{"lineNumber":39,"author":{"gitId":"kvihashini"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":40,"author":{"gitId":"kvihashini"},"content":"            if (empty || group \u003d\u003d null) {","lastModifiedDate":"2021-10-17"},{"lineNumber":41,"author":{"gitId":"kvihashini"},"content":"                setGraphic(null);","lastModifiedDate":"2021-10-17"},{"lineNumber":42,"author":{"gitId":"kvihashini"},"content":"                setText(null);","lastModifiedDate":"2021-10-17"},{"lineNumber":43,"author":{"gitId":"kvihashini"},"content":"            } else {","lastModifiedDate":"2021-10-17"},{"lineNumber":44,"author":{"gitId":"kvihashini"},"content":"                setGraphic(new GroupCard(group, getIndex() + 1).getRoot());","lastModifiedDate":"2021-10-17"},{"lineNumber":45,"author":{"gitId":"kvihashini"},"content":"            }","lastModifiedDate":"2021-10-17"},{"lineNumber":46,"author":{"gitId":"kvihashini"},"content":"        }","lastModifiedDate":"2021-10-17"},{"lineNumber":47,"author":{"gitId":"kvihashini"},"content":"    }","lastModifiedDate":"2021-10-17"},{"lineNumber":48,"author":{"gitId":"kvihashini"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":49,"author":{"gitId":"kvihashini"},"content":"}","lastModifiedDate":"2021-10-17"}],"authorContributionMap":{"kvihashini":49}},{"path":"src/main/java/seedu/address/ui/GroupViewCard.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kvihashini"},"content":"package seedu.address.ui;","lastModifiedDate":"2021-10-25"},{"lineNumber":2,"author":{"gitId":"kvihashini"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":3,"author":{"gitId":"kvihashini"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-11-06"},{"lineNumber":4,"author":{"gitId":"kvihashini"},"content":"import java.util.List;","lastModifiedDate":"2021-11-06"},{"lineNumber":5,"author":{"gitId":"kvihashini"},"content":"import java.util.Optional;","lastModifiedDate":"2021-11-06"},{"lineNumber":6,"author":{"gitId":"kvihashini"},"content":"import java.util.Set;","lastModifiedDate":"2021-10-25"},{"lineNumber":7,"author":{"gitId":"kvihashini"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2021-11-06"},{"lineNumber":8,"author":{"gitId":"kvihashini"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":9,"author":{"gitId":"kvihashini"},"content":"import javafx.beans.value.ChangeListener;","lastModifiedDate":"2021-10-25"},{"lineNumber":10,"author":{"gitId":"kvihashini"},"content":"import javafx.beans.value.ObservableValue;","lastModifiedDate":"2021-10-25"},{"lineNumber":11,"author":{"gitId":"kvihashini"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2021-10-25"},{"lineNumber":12,"author":{"gitId":"kvihashini"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2021-10-25"},{"lineNumber":13,"author":{"gitId":"kvihashini"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2021-10-25"},{"lineNumber":14,"author":{"gitId":"kvihashini"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2021-11-06"},{"lineNumber":15,"author":{"gitId":"kvihashini"},"content":"import seedu.address.model.group.Group;","lastModifiedDate":"2021-10-25"},{"lineNumber":16,"author":{"gitId":"kvihashini"},"content":"import seedu.address.model.group.GroupWithDetails;","lastModifiedDate":"2021-10-25"},{"lineNumber":17,"author":{"gitId":"kvihashini"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2021-10-25"},{"lineNumber":18,"author":{"gitId":"kvihashini"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2021-11-06"},{"lineNumber":19,"author":{"gitId":"kvihashini"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":20,"author":{"gitId":"kvihashini"},"content":"/**","lastModifiedDate":"2021-10-25"},{"lineNumber":21,"author":{"gitId":"kvihashini"},"content":" * An UI component that displays information of a {@code Group}.","lastModifiedDate":"2021-10-25"},{"lineNumber":22,"author":{"gitId":"kvihashini"},"content":" */","lastModifiedDate":"2021-10-25"},{"lineNumber":23,"author":{"gitId":"kvihashini"},"content":"public class GroupViewCard extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2021-10-25"},{"lineNumber":24,"author":{"gitId":"kvihashini"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":25,"author":{"gitId":"kvihashini"},"content":"    private static final String FXML \u003d \"GroupViewCard.fxml\";","lastModifiedDate":"2021-10-25"},{"lineNumber":26,"author":{"gitId":"kvihashini"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":27,"author":{"gitId":"kvihashini"},"content":"    /**","lastModifiedDate":"2021-10-25"},{"lineNumber":28,"author":{"gitId":"kvihashini"},"content":"     * Note: Certain keywords such as \"location\" and \"resources\" are reserved keywords in JavaFX.","lastModifiedDate":"2021-10-25"},{"lineNumber":29,"author":{"gitId":"kvihashini"},"content":"     * As a consequence, UI elements\u0027 variable names cannot be set to such keywords","lastModifiedDate":"2021-10-25"},{"lineNumber":30,"author":{"gitId":"kvihashini"},"content":"     * or an exception will be thrown by JavaFX during runtime.","lastModifiedDate":"2021-10-25"},{"lineNumber":31,"author":{"gitId":"kvihashini"},"content":"     *","lastModifiedDate":"2021-10-25"},{"lineNumber":32,"author":{"gitId":"kvihashini"},"content":"     * @see \u003ca href\u003d\"https://github.com/se-edu/addressbook-level4/issues/336\"\u003eThe issue on AddressBook level 4\u003c/a\u003e","lastModifiedDate":"2021-10-25"},{"lineNumber":33,"author":{"gitId":"kvihashini"},"content":"     */","lastModifiedDate":"2021-10-25"},{"lineNumber":34,"author":{"gitId":"kvihashini"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":35,"author":{"gitId":"kvihashini"},"content":"    @FXML","lastModifiedDate":"2021-10-25"},{"lineNumber":36,"author":{"gitId":"tanhuakun"},"content":"    private VBox cardPane;","lastModifiedDate":"2021-11-05"},{"lineNumber":37,"author":{"gitId":"kvihashini"},"content":"    @FXML","lastModifiedDate":"2021-10-25"},{"lineNumber":38,"author":{"gitId":"kvihashini"},"content":"    private Label name;","lastModifiedDate":"2021-10-25"},{"lineNumber":39,"author":{"gitId":"kvihashini"},"content":"    @FXML","lastModifiedDate":"2021-10-25"},{"lineNumber":40,"author":{"gitId":"kvihashini"},"content":"    private VBox persons;","lastModifiedDate":"2021-11-06"},{"lineNumber":41,"author":{"gitId":"kvihashini"},"content":"    @FXML","lastModifiedDate":"2021-10-25"},{"lineNumber":42,"author":{"gitId":"kvihashini"},"content":"    private Label personsLabel;","lastModifiedDate":"2021-10-25"},{"lineNumber":43,"author":{"gitId":"kvihashini"},"content":"    @FXML","lastModifiedDate":"2021-11-06"},{"lineNumber":44,"author":{"gitId":"kvihashini"},"content":"    private Label lessonsLabel;","lastModifiedDate":"2021-11-06"},{"lineNumber":45,"author":{"gitId":"kvihashini"},"content":"    @FXML","lastModifiedDate":"2021-11-06"},{"lineNumber":46,"author":{"gitId":"kvihashini"},"content":"    private VBox lessons;","lastModifiedDate":"2021-11-06"},{"lineNumber":47,"author":{"gitId":"kvihashini"},"content":"    @FXML","lastModifiedDate":"2021-11-06"},{"lineNumber":48,"author":{"gitId":"kvihashini"},"content":"    private Label tasksLabel;","lastModifiedDate":"2021-11-06"},{"lineNumber":49,"author":{"gitId":"kvihashini"},"content":"    @FXML","lastModifiedDate":"2021-11-06"},{"lineNumber":50,"author":{"gitId":"kvihashini"},"content":"    private VBox tasks;","lastModifiedDate":"2021-11-06"},{"lineNumber":51,"author":{"gitId":"kvihashini"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":52,"author":{"gitId":"kvihashini"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":53,"author":{"gitId":"kvihashini"},"content":"    /**","lastModifiedDate":"2021-10-25"},{"lineNumber":54,"author":{"gitId":"kvihashini"},"content":"     * Creates a {@code Groupcode} with the given {@code Group} and index to display.","lastModifiedDate":"2021-10-25"},{"lineNumber":55,"author":{"gitId":"kvihashini"},"content":"     */","lastModifiedDate":"2021-10-25"},{"lineNumber":56,"author":{"gitId":"kvihashini"},"content":"    public GroupViewCard(ObservableValue\u003cGroupWithDetails\u003e groupWithDetailsObservable) {","lastModifiedDate":"2021-10-25"},{"lineNumber":57,"author":{"gitId":"kvihashini"},"content":"        super(FXML);","lastModifiedDate":"2021-10-25"},{"lineNumber":58,"author":{"gitId":"kvihashini"},"content":"        ChangeListener\u003c? super GroupWithDetails\u003e changeListener \u003d new ChangeListener\u003cGroupWithDetails\u003e() {","lastModifiedDate":"2021-10-25"},{"lineNumber":59,"author":{"gitId":"kvihashini"},"content":"            @Override","lastModifiedDate":"2021-10-25"},{"lineNumber":60,"author":{"gitId":"kvihashini"},"content":"            public void changed(ObservableValue\u003c? extends GroupWithDetails\u003e observable,","lastModifiedDate":"2021-10-25"},{"lineNumber":61,"author":{"gitId":"kvihashini"},"content":"                                GroupWithDetails oldValue, GroupWithDetails newValue) {","lastModifiedDate":"2021-10-25"},{"lineNumber":62,"author":{"gitId":"kvihashini"},"content":"                updateCard(newValue);","lastModifiedDate":"2021-10-25"},{"lineNumber":63,"author":{"gitId":"kvihashini"},"content":"            }","lastModifiedDate":"2021-10-25"},{"lineNumber":64,"author":{"gitId":"kvihashini"},"content":"        };","lastModifiedDate":"2021-10-25"},{"lineNumber":65,"author":{"gitId":"kvihashini"},"content":"        groupWithDetailsObservable.addListener(changeListener);","lastModifiedDate":"2021-10-25"},{"lineNumber":66,"author":{"gitId":"kvihashini"},"content":"        updateCard(groupWithDetailsObservable.getValue());","lastModifiedDate":"2021-10-25"},{"lineNumber":67,"author":{"gitId":"kvihashini"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":68,"author":{"gitId":"kvihashini"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":69,"author":{"gitId":"kvihashini"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":70,"author":{"gitId":"kvihashini"},"content":"    private void updateCard(GroupWithDetails groupWithDetails) {","lastModifiedDate":"2021-10-25"},{"lineNumber":71,"author":{"gitId":"kvihashini"},"content":"        if (groupWithDetails \u003d\u003d null) {","lastModifiedDate":"2021-10-25"},{"lineNumber":72,"author":{"gitId":"kvihashini"},"content":"            // null value, this is expected to happen if there is no groups!","lastModifiedDate":"2021-10-25"},{"lineNumber":73,"author":{"gitId":"kvihashini"},"content":"            // however, logic handlers should prevent user from viewing an empty view card.","lastModifiedDate":"2021-10-25"},{"lineNumber":74,"author":{"gitId":"kvihashini"},"content":"            return;","lastModifiedDate":"2021-10-25"},{"lineNumber":75,"author":{"gitId":"kvihashini"},"content":"        }","lastModifiedDate":"2021-10-25"},{"lineNumber":76,"author":{"gitId":"kvihashini"},"content":"        updateGroupDetails(groupWithDetails);","lastModifiedDate":"2021-11-06"},{"lineNumber":77,"author":{"gitId":"kvihashini"},"content":"    }","lastModifiedDate":"2021-11-06"},{"lineNumber":78,"author":{"gitId":"kvihashini"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":79,"author":{"gitId":"kvihashini"},"content":"    /**","lastModifiedDate":"2021-11-06"},{"lineNumber":80,"author":{"gitId":"kvihashini"},"content":"     * Update all group related details","lastModifiedDate":"2021-11-06"},{"lineNumber":81,"author":{"gitId":"kvihashini"},"content":"     * @param groupWithDetails to update","lastModifiedDate":"2021-11-06"},{"lineNumber":82,"author":{"gitId":"kvihashini"},"content":"     */","lastModifiedDate":"2021-11-06"},{"lineNumber":83,"author":{"gitId":"kvihashini"},"content":"    private void updateGroupDetails(GroupWithDetails groupWithDetails) {","lastModifiedDate":"2021-11-06"},{"lineNumber":84,"author":{"gitId":"kvihashini"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":85,"author":{"gitId":"kvihashini"},"content":"        // to list all persons inside group","lastModifiedDate":"2021-11-06"},{"lineNumber":86,"author":{"gitId":"kvihashini"},"content":"        Group group \u003d groupWithDetails.getGroup();","lastModifiedDate":"2021-11-06"},{"lineNumber":87,"author":{"gitId":"kvihashini"},"content":"        name.setText(group.getName().name);","lastModifiedDate":"2021-10-25"},{"lineNumber":88,"author":{"gitId":"kvihashini"},"content":"        Set\u003cPerson\u003e personslist \u003d groupWithDetails.getPersons();","lastModifiedDate":"2021-11-06"},{"lineNumber":89,"author":{"gitId":"kvihashini"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":90,"author":{"gitId":"kvihashini"},"content":"        List\u003cPerson\u003e personList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-11-06"},{"lineNumber":91,"author":{"gitId":"kvihashini"},"content":"        personList.addAll(personslist);","lastModifiedDate":"2021-11-06"},{"lineNumber":92,"author":{"gitId":"kvihashini"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":93,"author":{"gitId":"kvihashini"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":94,"author":{"gitId":"kvihashini"},"content":"        // add group persons","lastModifiedDate":"2021-11-06"},{"lineNumber":95,"author":{"gitId":"kvihashini"},"content":"        UiUtil.addIndexedLabels(persons, personList.stream().map((persons) -\u003e","lastModifiedDate":"2021-11-06"},{"lineNumber":96,"author":{"gitId":"kvihashini"},"content":"                persons.getName().fullName).collect(Collectors.toList()), Optional.of(\"No students yet!\"));","lastModifiedDate":"2021-11-06"},{"lineNumber":97,"author":{"gitId":"kvihashini"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":98,"author":{"gitId":"kvihashini"},"content":"        // add group lessons","lastModifiedDate":"2021-11-06"},{"lineNumber":99,"author":{"gitId":"kvihashini"},"content":"        UiUtil.addIndexedLabels(lessons, group.getLessons().stream().map((lessons) -\u003e","lastModifiedDate":"2021-11-06"},{"lineNumber":100,"author":{"gitId":"kvihashini"},"content":"                lessons.toString()).collect(Collectors.toList()), Optional.of(\"No lessons yet!\"));","lastModifiedDate":"2021-11-06"},{"lineNumber":101,"author":{"gitId":"kvihashini"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":102,"author":{"gitId":"kvihashini"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":103,"author":{"gitId":"kvihashini"},"content":"        // add group tasks","lastModifiedDate":"2021-11-06"},{"lineNumber":104,"author":{"gitId":"kvihashini"},"content":"        Set\u003cTask\u003e groupTasks \u003d groupWithDetails.getTasks();","lastModifiedDate":"2021-11-06"},{"lineNumber":105,"author":{"gitId":"kvihashini"},"content":"        UiUtil.addIndexedLabels(tasks, groupTasks.stream().map(task -\u003e","lastModifiedDate":"2021-11-06"},{"lineNumber":106,"author":{"gitId":"kvihashini"},"content":"                task.toString()).collect(Collectors.toList()), Optional.of(\"No tasks yet!\"));","lastModifiedDate":"2021-11-06"},{"lineNumber":107,"author":{"gitId":"kvihashini"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":108,"author":{"gitId":"kvihashini"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":109,"author":{"gitId":"kvihashini"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":110,"author":{"gitId":"kvihashini"},"content":"}","lastModifiedDate":"2021-10-25"}],"authorContributionMap":{"kvihashini":109,"tanhuakun":1}},{"path":"src/main/java/seedu/address/ui/HelpWindow.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-12-24"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.scene.control.Button;","lastModifiedDate":"2019-08-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2019-08-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.input.Clipboard;","lastModifiedDate":"2019-08-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.input.ClipboardContent;","lastModifiedDate":"2019-08-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2016-09-23"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":" * Controller for a help page","lastModifiedDate":"2016-08-18"},{"lineNumber":15,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class HelpWindow extends UiPart\u003cStage\u003e {","lastModifiedDate":"2017-12-01"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":18,"author":{"gitId":"Neha-5678"},"content":"    public static final String USERGUIDE_URL \u003d \"https://ay2122s1-cs2103t-w16-4.github.io/tp/UserGuide.html\";","lastModifiedDate":"2021-11-02"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    public static final String HELP_MESSAGE \u003d \"Refer to the user guide: \" + USERGUIDE_URL;","lastModifiedDate":"2019-08-19"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final Logger logger \u003d LogsCenter.getLogger(HelpWindow.class);","lastModifiedDate":"2016-09-23"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"HelpWindow.fxml\";","lastModifiedDate":"2016-09-20"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-12-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    private Button copyButton;","lastModifiedDate":"2019-08-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-08-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2019-08-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private Label helpMessage;","lastModifiedDate":"2019-08-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-12-01"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Creates a new HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2017-12-01"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     * @param root Stage to use as the root of the HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":34,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-12-01"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public HelpWindow(Stage root) {","lastModifiedDate":"2017-12-01"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        super(FXML, root);","lastModifiedDate":"2017-12-01"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        helpMessage.setText(HELP_MESSAGE);","lastModifiedDate":"2019-08-19"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-12-01"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     * Creates a new HelpWindow.","lastModifiedDate":"2017-12-01"},{"lineNumber":42,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-12-01"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public HelpWindow() {","lastModifiedDate":"2017-12-01"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        this(new Stage());","lastModifiedDate":"2017-12-01"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-12-01"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-01"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     * Shows the help window.","lastModifiedDate":"2017-08-16"},{"lineNumber":49,"author":{"gitId":"-"},"content":"     * @throws IllegalStateException","lastModifiedDate":"2017-08-16"},{"lineNumber":50,"author":{"gitId":"-"},"content":"     * \u003cul\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     *     \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     *         if this method is called on a thread other than the JavaFX Application Thread.","lastModifiedDate":"2017-08-16"},{"lineNumber":53,"author":{"gitId":"-"},"content":"     *     \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     *     \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     *         if this method is called during animation or layout processing.","lastModifiedDate":"2017-08-16"},{"lineNumber":56,"author":{"gitId":"-"},"content":"     *     \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":57,"author":{"gitId":"-"},"content":"     *     \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":58,"author":{"gitId":"-"},"content":"     *         if this method is called on the primary stage.","lastModifiedDate":"2017-08-16"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     *     \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     *     \u003cli\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":61,"author":{"gitId":"-"},"content":"     *         if {@code dialogStage} is already showing.","lastModifiedDate":"2017-08-16"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     *     \u003c/li\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     * \u003c/ul\u003e","lastModifiedDate":"2017-08-16"},{"lineNumber":64,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public void show() {","lastModifiedDate":"2016-08-18"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        logger.fine(\"Showing help page about the application.\");","lastModifiedDate":"2016-12-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        getRoot().show();","lastModifiedDate":"2018-02-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        getRoot().centerOnScreen();","lastModifiedDate":"2019-08-19"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-15"},{"lineNumber":72,"author":{"gitId":"-"},"content":"     * Returns true if the help window is currently being shown.","lastModifiedDate":"2018-03-15"},{"lineNumber":73,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-15"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public boolean isShowing() {","lastModifiedDate":"2018-03-15"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        return getRoot().isShowing();","lastModifiedDate":"2018-03-15"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-15"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * Hides the help window.","lastModifiedDate":"2018-12-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public void hide() {","lastModifiedDate":"2018-12-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        getRoot().hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-15"},{"lineNumber":86,"author":{"gitId":"-"},"content":"     * Focuses on the help window.","lastModifiedDate":"2018-03-15"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-15"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    public void focus() {","lastModifiedDate":"2018-03-15"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        getRoot().requestFocus();","lastModifiedDate":"2018-03-15"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-15"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2019-08-19"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2019-08-19"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     * Copies the URL to the user guide to the clipboard.","lastModifiedDate":"2019-08-19"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2019-08-19"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2019-08-19"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    private void copyUrl() {","lastModifiedDate":"2019-08-19"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        final Clipboard clipboard \u003d Clipboard.getSystemClipboard();","lastModifiedDate":"2019-08-19"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        final ClipboardContent url \u003d new ClipboardContent();","lastModifiedDate":"2019-08-19"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        url.putString(USERGUIDE_URL);","lastModifiedDate":"2019-08-19"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        clipboard.setContent(url);","lastModifiedDate":"2019-08-19"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2019-08-19"},{"lineNumber":102,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"Neha-5678":1,"-":101}},{"path":"src/main/java/seedu/address/ui/LessonScheduleCard.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tanhuakun"},"content":"package seedu.address.ui;","lastModifiedDate":"2021-10-20"},{"lineNumber":2,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":3,"author":{"gitId":"tanhuakun"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2021-10-20"},{"lineNumber":4,"author":{"gitId":"tanhuakun"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2021-10-20"},{"lineNumber":5,"author":{"gitId":"tanhuakun"},"content":"import javafx.scene.layout.FlowPane;","lastModifiedDate":"2021-10-20"},{"lineNumber":6,"author":{"gitId":"tanhuakun"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2021-10-20"},{"lineNumber":7,"author":{"gitId":"tanhuakun"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2021-10-20"},{"lineNumber":8,"author":{"gitId":"tanhuakun"},"content":"import seedu.address.model.lesson.LessonWithAttendees;","lastModifiedDate":"2021-10-20"},{"lineNumber":9,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":10,"author":{"gitId":"tanhuakun"},"content":"/**","lastModifiedDate":"2021-10-20"},{"lineNumber":11,"author":{"gitId":"tanhuakun"},"content":" * An UI component that displays information of a {@code Person}.","lastModifiedDate":"2021-10-20"},{"lineNumber":12,"author":{"gitId":"tanhuakun"},"content":" */","lastModifiedDate":"2021-10-20"},{"lineNumber":13,"author":{"gitId":"tanhuakun"},"content":"public class LessonScheduleCard extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2021-10-20"},{"lineNumber":14,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":15,"author":{"gitId":"tanhuakun"},"content":"    private static final String FXML \u003d \"LessonScheduleCard.fxml\";","lastModifiedDate":"2021-10-20"},{"lineNumber":16,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":17,"author":{"gitId":"tanhuakun"},"content":"    /**","lastModifiedDate":"2021-10-20"},{"lineNumber":18,"author":{"gitId":"tanhuakun"},"content":"     * Note: Certain keywords such as \"location\" and \"resources\" are reserved keywords in JavaFX.","lastModifiedDate":"2021-10-20"},{"lineNumber":19,"author":{"gitId":"tanhuakun"},"content":"     * As a consequence, UI elements\u0027 variable names cannot be set to such keywords","lastModifiedDate":"2021-10-20"},{"lineNumber":20,"author":{"gitId":"tanhuakun"},"content":"     * or an exception will be thrown by JavaFX during runtime.","lastModifiedDate":"2021-10-20"},{"lineNumber":21,"author":{"gitId":"tanhuakun"},"content":"     *","lastModifiedDate":"2021-10-20"},{"lineNumber":22,"author":{"gitId":"tanhuakun"},"content":"     * @see \u003ca href\u003d\"https://github.com/se-edu/addressbook-level4/issues/336\"\u003eThe issue on AddressBook level 4\u003c/a\u003e","lastModifiedDate":"2021-10-20"},{"lineNumber":23,"author":{"gitId":"tanhuakun"},"content":"     */","lastModifiedDate":"2021-10-20"},{"lineNumber":24,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":25,"author":{"gitId":"tanhuakun"},"content":"    public final LessonWithAttendees lessonWithAttendees;","lastModifiedDate":"2021-10-20"},{"lineNumber":26,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":27,"author":{"gitId":"tanhuakun"},"content":"    @FXML","lastModifiedDate":"2021-10-20"},{"lineNumber":28,"author":{"gitId":"tanhuakun"},"content":"    private HBox cardPane;","lastModifiedDate":"2021-10-20"},{"lineNumber":29,"author":{"gitId":"tanhuakun"},"content":"    @FXML","lastModifiedDate":"2021-10-20"},{"lineNumber":30,"author":{"gitId":"tanhuakun"},"content":"    private Label details;","lastModifiedDate":"2021-10-20"},{"lineNumber":31,"author":{"gitId":"tanhuakun"},"content":"    @FXML","lastModifiedDate":"2021-10-20"},{"lineNumber":32,"author":{"gitId":"tanhuakun"},"content":"    private FlowPane attendees;","lastModifiedDate":"2021-10-20"},{"lineNumber":33,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":34,"author":{"gitId":"tanhuakun"},"content":"    /**","lastModifiedDate":"2021-10-20"},{"lineNumber":35,"author":{"gitId":"tanhuakun"},"content":"     * Creates a {@code PersonCode} with the given {@code Person} and index to display.","lastModifiedDate":"2021-10-20"},{"lineNumber":36,"author":{"gitId":"tanhuakun"},"content":"     */","lastModifiedDate":"2021-10-20"},{"lineNumber":37,"author":{"gitId":"tanhuakun"},"content":"    public LessonScheduleCard(LessonWithAttendees lessonWithAttendees) {","lastModifiedDate":"2021-10-20"},{"lineNumber":38,"author":{"gitId":"tanhuakun"},"content":"        super(FXML);","lastModifiedDate":"2021-10-20"},{"lineNumber":39,"author":{"gitId":"tanhuakun"},"content":"        this.lessonWithAttendees \u003d lessonWithAttendees;","lastModifiedDate":"2021-10-20"},{"lineNumber":40,"author":{"gitId":"tanhuakun"},"content":"        details.setText(lessonWithAttendees.getLesson().toString());","lastModifiedDate":"2021-10-20"},{"lineNumber":41,"author":{"gitId":"tanhuakun"},"content":"        lessonWithAttendees.getAttendeeList().stream()","lastModifiedDate":"2021-10-20"},{"lineNumber":42,"author":{"gitId":"tanhuakun"},"content":"                .forEach(attendee -\u003e attendees.getChildren().add(new Label(attendee.getAttendeeDetails())));","lastModifiedDate":"2021-10-20"},{"lineNumber":43,"author":{"gitId":"tanhuakun"},"content":"        details.setWrapText(true);","lastModifiedDate":"2021-10-20"},{"lineNumber":44,"author":{"gitId":"tanhuakun"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":45,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":46,"author":{"gitId":"tanhuakun"},"content":"    @Override","lastModifiedDate":"2021-10-20"},{"lineNumber":47,"author":{"gitId":"tanhuakun"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-20"},{"lineNumber":48,"author":{"gitId":"tanhuakun"},"content":"        // short circuit if same object","lastModifiedDate":"2021-10-20"},{"lineNumber":49,"author":{"gitId":"tanhuakun"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2021-10-20"},{"lineNumber":50,"author":{"gitId":"tanhuakun"},"content":"            return true;","lastModifiedDate":"2021-10-20"},{"lineNumber":51,"author":{"gitId":"tanhuakun"},"content":"        }","lastModifiedDate":"2021-10-20"},{"lineNumber":52,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":53,"author":{"gitId":"tanhuakun"},"content":"        // instanceof handles nulls","lastModifiedDate":"2021-10-20"},{"lineNumber":54,"author":{"gitId":"tanhuakun"},"content":"        if (!(other instanceof LessonScheduleCard)) {","lastModifiedDate":"2021-10-20"},{"lineNumber":55,"author":{"gitId":"tanhuakun"},"content":"            return false;","lastModifiedDate":"2021-10-20"},{"lineNumber":56,"author":{"gitId":"tanhuakun"},"content":"        }","lastModifiedDate":"2021-10-20"},{"lineNumber":57,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":58,"author":{"gitId":"tanhuakun"},"content":"        // state check","lastModifiedDate":"2021-10-20"},{"lineNumber":59,"author":{"gitId":"tanhuakun"},"content":"        LessonScheduleCard card \u003d (LessonScheduleCard) other;","lastModifiedDate":"2021-10-20"},{"lineNumber":60,"author":{"gitId":"tanhuakun"},"content":"        return lessonWithAttendees.equals(card.lessonWithAttendees);","lastModifiedDate":"2021-10-20"},{"lineNumber":61,"author":{"gitId":"tanhuakun"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":62,"author":{"gitId":"tanhuakun"},"content":"}","lastModifiedDate":"2021-10-20"}],"authorContributionMap":{"tanhuakun":62}},{"path":"src/main/java/seedu/address/ui/LessonSchedulePanel.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tanhuakun"},"content":"package seedu.address.ui;","lastModifiedDate":"2021-10-20"},{"lineNumber":2,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":3,"author":{"gitId":"tanhuakun"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2021-10-20"},{"lineNumber":4,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":5,"author":{"gitId":"tanhuakun"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-10-25"},{"lineNumber":6,"author":{"gitId":"tanhuakun"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2021-10-20"},{"lineNumber":7,"author":{"gitId":"tanhuakun"},"content":"import javafx.scene.control.ListCell;","lastModifiedDate":"2021-10-20"},{"lineNumber":8,"author":{"gitId":"tanhuakun"},"content":"import javafx.scene.control.ListView;","lastModifiedDate":"2021-10-20"},{"lineNumber":9,"author":{"gitId":"tanhuakun"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2021-10-20"},{"lineNumber":10,"author":{"gitId":"tanhuakun"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2021-10-20"},{"lineNumber":11,"author":{"gitId":"tanhuakun"},"content":"import seedu.address.model.lesson.LessonWithAttendees;","lastModifiedDate":"2021-10-20"},{"lineNumber":12,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":13,"author":{"gitId":"tanhuakun"},"content":"/**","lastModifiedDate":"2021-10-20"},{"lineNumber":14,"author":{"gitId":"tanhuakun"},"content":" * Panel containing the schedule with a list of lessons.","lastModifiedDate":"2021-10-20"},{"lineNumber":15,"author":{"gitId":"tanhuakun"},"content":" */","lastModifiedDate":"2021-10-20"},{"lineNumber":16,"author":{"gitId":"tanhuakun"},"content":"public class LessonSchedulePanel extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2021-10-20"},{"lineNumber":17,"author":{"gitId":"tanhuakun"},"content":"    private static final String FXML \u003d \"LessonScheduleList.fxml\";","lastModifiedDate":"2021-10-20"},{"lineNumber":18,"author":{"gitId":"tanhuakun"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(PersonListPanel.class);","lastModifiedDate":"2021-10-20"},{"lineNumber":19,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":20,"author":{"gitId":"tanhuakun"},"content":"    @FXML","lastModifiedDate":"2021-10-20"},{"lineNumber":21,"author":{"gitId":"tanhuakun"},"content":"    private ListView\u003cLessonWithAttendees\u003e lessonScheduleView;","lastModifiedDate":"2021-10-20"},{"lineNumber":22,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":23,"author":{"gitId":"tanhuakun"},"content":"    /**","lastModifiedDate":"2021-10-20"},{"lineNumber":24,"author":{"gitId":"tanhuakun"},"content":"     * Creates a {@code LessonSchedulePanel} with the given {@code List}.","lastModifiedDate":"2021-10-20"},{"lineNumber":25,"author":{"gitId":"tanhuakun"},"content":"     */","lastModifiedDate":"2021-10-20"},{"lineNumber":26,"author":{"gitId":"tanhuakun"},"content":"    public LessonSchedulePanel(ObservableList\u003cLessonWithAttendees\u003e lessonWithAttendees) {","lastModifiedDate":"2021-10-25"},{"lineNumber":27,"author":{"gitId":"tanhuakun"},"content":"        super(FXML);","lastModifiedDate":"2021-10-20"},{"lineNumber":28,"author":{"gitId":"tanhuakun"},"content":"        lessonScheduleView.setItems(lessonWithAttendees);","lastModifiedDate":"2021-10-25"},{"lineNumber":29,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":30,"author":{"gitId":"tanhuakun"},"content":"        //lessonScheduleView.setItems(lessonWithAttendees);","lastModifiedDate":"2021-10-20"},{"lineNumber":31,"author":{"gitId":"tanhuakun"},"content":"        lessonScheduleView.setCellFactory(listView -\u003e new LessonListCellView());","lastModifiedDate":"2021-10-20"},{"lineNumber":32,"author":{"gitId":"tanhuakun"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":33,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":34,"author":{"gitId":"tanhuakun"},"content":"    /**","lastModifiedDate":"2021-10-20"},{"lineNumber":35,"author":{"gitId":"tanhuakun"},"content":"     * Custom {@code ListCell} that displays the graphics of a {@code Person} using a {@code PersonCard}.","lastModifiedDate":"2021-10-20"},{"lineNumber":36,"author":{"gitId":"tanhuakun"},"content":"     */","lastModifiedDate":"2021-10-20"},{"lineNumber":37,"author":{"gitId":"tanhuakun"},"content":"    class LessonListCellView extends ListCell\u003cLessonWithAttendees\u003e {","lastModifiedDate":"2021-10-20"},{"lineNumber":38,"author":{"gitId":"tanhuakun"},"content":"        @Override","lastModifiedDate":"2021-10-20"},{"lineNumber":39,"author":{"gitId":"tanhuakun"},"content":"        protected void updateItem(LessonWithAttendees lessonWithAttendees, boolean empty) {","lastModifiedDate":"2021-10-20"},{"lineNumber":40,"author":{"gitId":"tanhuakun"},"content":"            super.updateItem(lessonWithAttendees, empty);","lastModifiedDate":"2021-10-20"},{"lineNumber":41,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":42,"author":{"gitId":"tanhuakun"},"content":"            if (empty || lessonWithAttendees \u003d\u003d null) {","lastModifiedDate":"2021-10-20"},{"lineNumber":43,"author":{"gitId":"tanhuakun"},"content":"                setGraphic(null);","lastModifiedDate":"2021-10-20"},{"lineNumber":44,"author":{"gitId":"tanhuakun"},"content":"                setText(null);","lastModifiedDate":"2021-10-20"},{"lineNumber":45,"author":{"gitId":"tanhuakun"},"content":"            } else {","lastModifiedDate":"2021-10-20"},{"lineNumber":46,"author":{"gitId":"tanhuakun"},"content":"                setGraphic(new LessonScheduleCard(lessonWithAttendees).getRoot());","lastModifiedDate":"2021-10-20"},{"lineNumber":47,"author":{"gitId":"tanhuakun"},"content":"            }","lastModifiedDate":"2021-10-20"},{"lineNumber":48,"author":{"gitId":"tanhuakun"},"content":"        }","lastModifiedDate":"2021-10-20"},{"lineNumber":49,"author":{"gitId":"tanhuakun"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":50,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":51,"author":{"gitId":"tanhuakun"},"content":"}","lastModifiedDate":"2021-10-20"}],"authorContributionMap":{"tanhuakun":51}},{"path":"src/main/java/seedu/address/ui/MainWindow.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.ui;","lastModifiedDate":"2016-09-22"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2017-06-16"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import javafx.event.ActionEvent;","lastModifiedDate":"2016-12-18"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2016-08-26"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import javafx.scene.control.MenuItem;","lastModifiedDate":"2016-08-26"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import javafx.scene.control.TextInputControl;","lastModifiedDate":"2016-12-18"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import javafx.scene.input.KeyCombination;","lastModifiedDate":"2016-08-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import javafx.scene.input.KeyEvent;","lastModifiedDate":"2016-12-18"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import javafx.scene.layout.StackPane;","lastModifiedDate":"2017-05-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import javafx.stage.Stage;","lastModifiedDate":"2016-08-18"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2016-09-28"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2017-06-16"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.logic.Logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2018-12-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-18"},{"lineNumber":21,"author":{"gitId":"-"},"content":" * The Main Window. Provides the basic application layout containing","lastModifiedDate":"2016-08-18"},{"lineNumber":22,"author":{"gitId":"-"},"content":" * a menu bar and space where other JavaFX elements can be placed.","lastModifiedDate":"2016-08-18"},{"lineNumber":23,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-18"},{"lineNumber":24,"author":{"gitId":"-"},"content":"public class MainWindow extends UiPart\u003cStage\u003e {","lastModifiedDate":"2017-11-29"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-28"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private static final String FXML \u003d \"MainWindow.fxml\";","lastModifiedDate":"2016-08-18"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(getClass());","lastModifiedDate":"2018-08-14"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-16"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private Stage primaryStage;","lastModifiedDate":"2016-12-02"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    // Independent Ui parts residing in this Ui container","lastModifiedDate":"2016-08-18"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private PersonListPanel personListPanel;","lastModifiedDate":"2016-08-18"},{"lineNumber":35,"author":{"gitId":"kvihashini"},"content":"    private TaskListPanel taskListPanel;","lastModifiedDate":"2021-10-13"},{"lineNumber":36,"author":{"gitId":"kvihashini"},"content":"    private GroupListPanel groupListPanel;","lastModifiedDate":"2021-10-17"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private ResultDisplay resultDisplay;","lastModifiedDate":"2018-12-09"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    private HelpWindow helpWindow;","lastModifiedDate":"2018-03-15"},{"lineNumber":39,"author":{"gitId":"tanhuakun"},"content":"    private ViewingPanel viewingPanel;","lastModifiedDate":"2021-10-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    private StackPane commandBoxPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    private MenuItem helpMenuItem;","lastModifiedDate":"2016-08-18"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":47,"author":{"gitId":"tanhuakun"},"content":"    @FXML","lastModifiedDate":"2021-10-25"},{"lineNumber":48,"author":{"gitId":"tanhuakun"},"content":"    private StackPane resultDisplayPlaceholder;","lastModifiedDate":"2021-10-25"},{"lineNumber":49,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    private StackPane personListPanelPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2021-10-13"},{"lineNumber":54,"author":{"gitId":"kvihashini"},"content":"    private StackPane taskListPanelPlaceholder;","lastModifiedDate":"2021-10-13"},{"lineNumber":55,"author":{"gitId":"kvihashini"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":56,"author":{"gitId":"kvihashini"},"content":"    @FXML","lastModifiedDate":"2021-10-17"},{"lineNumber":57,"author":{"gitId":"kvihashini"},"content":"    private StackPane groupListPanelPlaceholder;","lastModifiedDate":"2021-10-17"},{"lineNumber":58,"author":{"gitId":"kvihashini"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":60,"author":{"gitId":"tanhuakun"},"content":"    private StackPane viewingPanelPlaceholder;","lastModifiedDate":"2021-10-25"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-09-21"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    private StackPane statusbarPlaceholder;","lastModifiedDate":"2017-05-09"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"     * Creates a {@code MainWindow} with the given {@code Stage} and {@code Logic}.","lastModifiedDate":"2020-05-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public MainWindow(Stage primaryStage, Logic logic) {","lastModifiedDate":"2018-12-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        super(FXML, primaryStage);","lastModifiedDate":"2017-11-29"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        // Set dependencies","lastModifiedDate":"2016-09-21"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        this.primaryStage \u003d primaryStage;","lastModifiedDate":"2016-12-02"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        this.logic \u003d logic;","lastModifiedDate":"2016-09-25"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        // Configure the UI","lastModifiedDate":"2016-09-21"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        setWindowDefaultSize(logic.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        setAccelerators();","lastModifiedDate":"2016-09-21"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-15"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        helpWindow \u003d new HelpWindow();","lastModifiedDate":"2018-03-15"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public Stage getPrimaryStage() {","lastModifiedDate":"2016-12-24"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        return primaryStage;","lastModifiedDate":"2016-12-24"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    private void setAccelerators() {","lastModifiedDate":"2016-09-21"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        setAccelerator(helpMenuItem, KeyCombination.valueOf(\"F1\"));","lastModifiedDate":"2016-12-18"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-18"},{"lineNumber":90,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-18"},{"lineNumber":92,"author":{"gitId":"-"},"content":"     * Sets the accelerator of a MenuItem.","lastModifiedDate":"2016-12-18"},{"lineNumber":93,"author":{"gitId":"-"},"content":"     * @param keyCombination the KeyCombination value of the accelerator","lastModifiedDate":"2016-12-18"},{"lineNumber":94,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-18"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    private void setAccelerator(MenuItem menuItem, KeyCombination keyCombination) {","lastModifiedDate":"2016-12-18"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        menuItem.setAccelerator(keyCombination);","lastModifiedDate":"2016-12-18"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        /*","lastModifiedDate":"2016-12-18"},{"lineNumber":99,"author":{"gitId":"-"},"content":"         * TODO: the code below can be removed once the bug reported here","lastModifiedDate":"2016-12-18"},{"lineNumber":100,"author":{"gitId":"-"},"content":"         * https://bugs.openjdk.java.net/browse/JDK-8131666","lastModifiedDate":"2016-12-18"},{"lineNumber":101,"author":{"gitId":"-"},"content":"         * is fixed in later version of SDK.","lastModifiedDate":"2016-12-18"},{"lineNumber":102,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2016-12-18"},{"lineNumber":103,"author":{"gitId":"-"},"content":"         * According to the bug report, TextInputControl (TextField, TextArea) will","lastModifiedDate":"2016-12-18"},{"lineNumber":104,"author":{"gitId":"-"},"content":"         * consume function-key events. Because CommandBox contains a TextField, and","lastModifiedDate":"2016-12-18"},{"lineNumber":105,"author":{"gitId":"-"},"content":"         * ResultDisplay contains a TextArea, thus some accelerators (e.g F1) will","lastModifiedDate":"2016-12-18"},{"lineNumber":106,"author":{"gitId":"-"},"content":"         * not work when the focus is in them because the key event is consumed by","lastModifiedDate":"2016-12-18"},{"lineNumber":107,"author":{"gitId":"-"},"content":"         * the TextInputControl(s).","lastModifiedDate":"2016-12-18"},{"lineNumber":108,"author":{"gitId":"-"},"content":"         *","lastModifiedDate":"2016-12-18"},{"lineNumber":109,"author":{"gitId":"-"},"content":"         * For now, we add following event filter to capture such key events and open","lastModifiedDate":"2016-12-18"},{"lineNumber":110,"author":{"gitId":"-"},"content":"         * help window purposely so to support accelerators even when focus is","lastModifiedDate":"2016-12-18"},{"lineNumber":111,"author":{"gitId":"-"},"content":"         * in CommandBox or ResultDisplay.","lastModifiedDate":"2016-12-18"},{"lineNumber":112,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2016-12-18"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        getRoot().addEventFilter(KeyEvent.KEY_PRESSED, event -\u003e {","lastModifiedDate":"2016-12-24"},{"lineNumber":114,"author":{"gitId":"-"},"content":"            if (event.getTarget() instanceof TextInputControl \u0026\u0026 keyCombination.match(event)) {","lastModifiedDate":"2016-12-18"},{"lineNumber":115,"author":{"gitId":"-"},"content":"                menuItem.getOnAction().handle(new ActionEvent());","lastModifiedDate":"2016-12-18"},{"lineNumber":116,"author":{"gitId":"-"},"content":"                event.consume();","lastModifiedDate":"2016-12-18"},{"lineNumber":117,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2016-12-18"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        });","lastModifiedDate":"2016-12-18"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":122,"author":{"gitId":"-"},"content":"     * Fills up all the placeholders of this window.","lastModifiedDate":"2017-08-16"},{"lineNumber":123,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    void fillInnerParts() {","lastModifiedDate":"2016-09-21"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        personListPanel \u003d new PersonListPanel(logic.getFilteredPersonList());","lastModifiedDate":"2019-01-25"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        personListPanelPlaceholder.getChildren().add(personListPanel.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":128,"author":{"gitId":"Neha-5678"},"content":"        taskListPanel \u003d new TaskListPanel(logic.getFilteredTaskList());","lastModifiedDate":"2021-10-25"},{"lineNumber":129,"author":{"gitId":"kvihashini"},"content":"        taskListPanelPlaceholder.getChildren().add(taskListPanel.getRoot());","lastModifiedDate":"2021-10-13"},{"lineNumber":130,"author":{"gitId":"kvihashini"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":131,"author":{"gitId":"Neha-5678"},"content":"        groupListPanel \u003d new GroupListPanel(logic.getFilteredGroupList());","lastModifiedDate":"2021-10-25"},{"lineNumber":132,"author":{"gitId":"kvihashini"},"content":"        groupListPanelPlaceholder.getChildren().add(groupListPanel.getRoot());","lastModifiedDate":"2021-10-17"},{"lineNumber":133,"author":{"gitId":"kvihashini"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        resultDisplay \u003d new ResultDisplay();","lastModifiedDate":"2018-12-09"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        resultDisplayPlaceholder.getChildren().add(resultDisplay.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":137,"author":{"gitId":"tanhuakun"},"content":"        viewingPanel \u003d new ViewingPanel(logic.getViewingType(), logic.getViewingPersonWithDetails(),","lastModifiedDate":"2021-10-25"},{"lineNumber":138,"author":{"gitId":"kvihashini"},"content":"                logic.getSortedLessonsWithAttendees(), logic.getViewingGroupWithDetails());","lastModifiedDate":"2021-10-25"},{"lineNumber":139,"author":{"gitId":"tanhuakun"},"content":"        viewingPanelPlaceholder.getChildren().add(viewingPanel.getRoot());","lastModifiedDate":"2021-10-25"},{"lineNumber":140,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":141,"author":{"gitId":"-"},"content":"        StatusBarFooter statusBarFooter \u003d new StatusBarFooter(logic.getAddressBookFilePath());","lastModifiedDate":"2019-01-25"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        statusbarPlaceholder.getChildren().add(statusBarFooter.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        CommandBox commandBox \u003d new CommandBox(this::executeCommand);","lastModifiedDate":"2019-01-25"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        commandBoxPlaceholder.getChildren().add(commandBox.getRoot());","lastModifiedDate":"2017-06-14"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-18"},{"lineNumber":149,"author":{"gitId":"-"},"content":"     * Sets the default size based on {@code guiSettings}.","lastModifiedDate":"2018-11-27"},{"lineNumber":150,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    private void setWindowDefaultSize(GuiSettings guiSettings) {","lastModifiedDate":"2018-11-27"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        primaryStage.setHeight(guiSettings.getWindowHeight());","lastModifiedDate":"2018-11-27"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        primaryStage.setWidth(guiSettings.getWindowWidth());","lastModifiedDate":"2018-11-27"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        if (guiSettings.getWindowCoordinates() !\u003d null) {","lastModifiedDate":"2018-11-27"},{"lineNumber":155,"author":{"gitId":"-"},"content":"            primaryStage.setX(guiSettings.getWindowCoordinates().getX());","lastModifiedDate":"2018-11-27"},{"lineNumber":156,"author":{"gitId":"-"},"content":"            primaryStage.setY(guiSettings.getWindowCoordinates().getY());","lastModifiedDate":"2018-11-27"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-08-18"},{"lineNumber":158,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-08-16"},{"lineNumber":161,"author":{"gitId":"-"},"content":"     * Opens the help window or focuses on it if it\u0027s already opened.","lastModifiedDate":"2018-03-15"},{"lineNumber":162,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-08-16"},{"lineNumber":163,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    public void handleHelp() {","lastModifiedDate":"2016-08-31"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        if (!helpWindow.isShowing()) {","lastModifiedDate":"2018-03-15"},{"lineNumber":166,"author":{"gitId":"-"},"content":"            helpWindow.show();","lastModifiedDate":"2016-08-18"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        } else {","lastModifiedDate":"2018-03-15"},{"lineNumber":168,"author":{"gitId":"-"},"content":"            helpWindow.focus();","lastModifiedDate":"2018-03-15"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-03-15"},{"lineNumber":170,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    void show() {","lastModifiedDate":"2016-10-15"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        primaryStage.show();","lastModifiedDate":"2016-08-18"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":175,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":176,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-18"},{"lineNumber":177,"author":{"gitId":"-"},"content":"     * Closes the application.","lastModifiedDate":"2016-08-18"},{"lineNumber":178,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-18"},{"lineNumber":179,"author":{"gitId":"-"},"content":"    @FXML","lastModifiedDate":"2016-08-18"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    private void handleExit() {","lastModifiedDate":"2016-08-18"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        GuiSettings guiSettings \u003d new GuiSettings(primaryStage.getWidth(), primaryStage.getHeight(),","lastModifiedDate":"2018-12-08"},{"lineNumber":182,"author":{"gitId":"-"},"content":"                (int) primaryStage.getX(), (int) primaryStage.getY());","lastModifiedDate":"2018-12-08"},{"lineNumber":183,"author":{"gitId":"-"},"content":"        logic.setGuiSettings(guiSettings);","lastModifiedDate":"2018-12-08"},{"lineNumber":184,"author":{"gitId":"-"},"content":"        helpWindow.hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":185,"author":{"gitId":"-"},"content":"        primaryStage.hide();","lastModifiedDate":"2018-12-08"},{"lineNumber":186,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-18"},{"lineNumber":187,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-25"},{"lineNumber":188,"author":{"gitId":"-"},"content":"    public PersonListPanel getPersonListPanel() {","lastModifiedDate":"2016-08-25"},{"lineNumber":189,"author":{"gitId":"-"},"content":"        return personListPanel;","lastModifiedDate":"2018-08-14"},{"lineNumber":190,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-25"},{"lineNumber":191,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":192,"author":{"gitId":"kvihashini"},"content":"    public TaskListPanel getTaskListPanel() {","lastModifiedDate":"2021-10-13"},{"lineNumber":193,"author":{"gitId":"kvihashini"},"content":"        return taskListPanel;","lastModifiedDate":"2021-10-13"},{"lineNumber":194,"author":{"gitId":"kvihashini"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":195,"author":{"gitId":"kvihashini"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":196,"author":{"gitId":"kvihashini"},"content":"    public GroupListPanel getGroupListPanel() {","lastModifiedDate":"2021-10-17"},{"lineNumber":197,"author":{"gitId":"kvihashini"},"content":"        return groupListPanel;","lastModifiedDate":"2021-10-17"},{"lineNumber":198,"author":{"gitId":"kvihashini"},"content":"    }","lastModifiedDate":"2021-10-17"},{"lineNumber":199,"author":{"gitId":"kvihashini"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":200,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":201,"author":{"gitId":"-"},"content":"     * Executes the command and returns the result.","lastModifiedDate":"2018-12-09"},{"lineNumber":202,"author":{"gitId":"-"},"content":"     *","lastModifiedDate":"2018-12-09"},{"lineNumber":203,"author":{"gitId":"-"},"content":"     * @see seedu.address.logic.Logic#execute(String)","lastModifiedDate":"2018-12-09"},{"lineNumber":204,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":205,"author":{"gitId":"-"},"content":"    private CommandResult executeCommand(String commandText) throws CommandException, ParseException {","lastModifiedDate":"2018-12-09"},{"lineNumber":206,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2018-12-09"},{"lineNumber":207,"author":{"gitId":"-"},"content":"            CommandResult commandResult \u003d logic.execute(commandText);","lastModifiedDate":"2018-12-09"},{"lineNumber":208,"author":{"gitId":"-"},"content":"            logger.info(\"Result: \" + commandResult.getFeedbackToUser());","lastModifiedDate":"2018-12-09"},{"lineNumber":209,"author":{"gitId":"-"},"content":"            resultDisplay.setFeedbackToUser(commandResult.getFeedbackToUser());","lastModifiedDate":"2018-12-09"},{"lineNumber":210,"author":{"gitId":"-"},"content":"            if (commandResult.isShowHelp()) {","lastModifiedDate":"2018-12-09"},{"lineNumber":211,"author":{"gitId":"-"},"content":"                handleHelp();","lastModifiedDate":"2018-12-09"},{"lineNumber":212,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-12-09"},{"lineNumber":213,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":214,"author":{"gitId":"-"},"content":"            if (commandResult.isExit()) {","lastModifiedDate":"2018-12-09"},{"lineNumber":215,"author":{"gitId":"-"},"content":"                handleExit();","lastModifiedDate":"2018-12-09"},{"lineNumber":216,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-12-09"},{"lineNumber":217,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":218,"author":{"gitId":"-"},"content":"            return commandResult;","lastModifiedDate":"2018-12-09"},{"lineNumber":219,"author":{"gitId":"-"},"content":"        } catch (CommandException | ParseException e) {","lastModifiedDate":"2018-12-09"},{"lineNumber":220,"author":{"gitId":"-"},"content":"            logger.info(\"Invalid command: \" + commandText);","lastModifiedDate":"2018-12-09"},{"lineNumber":221,"author":{"gitId":"-"},"content":"            resultDisplay.setFeedbackToUser(e.getMessage());","lastModifiedDate":"2018-12-09"},{"lineNumber":222,"author":{"gitId":"-"},"content":"            throw e;","lastModifiedDate":"2018-12-09"},{"lineNumber":223,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":224,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":225,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"}],"authorContributionMap":{"Neha-5678":2,"kvihashini":20,"tanhuakun":7,"-":196}},{"path":"src/main/java/seedu/address/ui/PersonViewCard.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tanhuakun"},"content":"package seedu.address.ui;","lastModifiedDate":"2021-10-25"},{"lineNumber":2,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":3,"author":{"gitId":"tanhuakun"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-11-04"},{"lineNumber":4,"author":{"gitId":"tanhuakun"},"content":"import java.util.Collection;","lastModifiedDate":"2021-10-26"},{"lineNumber":5,"author":{"gitId":"tanhuakun"},"content":"import java.util.Comparator;","lastModifiedDate":"2021-10-25"},{"lineNumber":6,"author":{"gitId":"tanhuakun"},"content":"import java.util.List;","lastModifiedDate":"2021-11-04"},{"lineNumber":7,"author":{"gitId":"jeremy-7007"},"content":"import java.util.Map;","lastModifiedDate":"2021-11-06"},{"lineNumber":8,"author":{"gitId":"tanhuakun"},"content":"import java.util.Optional;","lastModifiedDate":"2021-11-04"},{"lineNumber":9,"author":{"gitId":"tanhuakun"},"content":"import java.util.Set;","lastModifiedDate":"2021-10-25"},{"lineNumber":10,"author":{"gitId":"tanhuakun"},"content":"import java.util.function.Function;","lastModifiedDate":"2021-11-04"},{"lineNumber":11,"author":{"gitId":"tanhuakun"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2021-11-04"},{"lineNumber":12,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":13,"author":{"gitId":"tanhuakun"},"content":"import javafx.beans.value.ChangeListener;","lastModifiedDate":"2021-10-25"},{"lineNumber":14,"author":{"gitId":"tanhuakun"},"content":"import javafx.beans.value.ObservableValue;","lastModifiedDate":"2021-10-25"},{"lineNumber":15,"author":{"gitId":"tanhuakun"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2021-10-25"},{"lineNumber":16,"author":{"gitId":"tanhuakun"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2021-10-25"},{"lineNumber":17,"author":{"gitId":"tanhuakun"},"content":"import javafx.scene.layout.FlowPane;","lastModifiedDate":"2021-10-25"},{"lineNumber":18,"author":{"gitId":"tanhuakun"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2021-10-25"},{"lineNumber":19,"author":{"gitId":"tanhuakun"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2021-10-26"},{"lineNumber":20,"author":{"gitId":"tanhuakun"},"content":"import seedu.address.model.group.GroupWithDetails;","lastModifiedDate":"2021-11-04"},{"lineNumber":21,"author":{"gitId":"tanhuakun"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2021-10-25"},{"lineNumber":22,"author":{"gitId":"tanhuakun"},"content":"import seedu.address.model.person.PersonWithDetails;","lastModifiedDate":"2021-10-25"},{"lineNumber":23,"author":{"gitId":"tanhuakun"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2021-10-26"},{"lineNumber":24,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":25,"author":{"gitId":"tanhuakun"},"content":"/**","lastModifiedDate":"2021-10-25"},{"lineNumber":26,"author":{"gitId":"tanhuakun"},"content":" * An UI component that displays information of a {@code Person}.","lastModifiedDate":"2021-10-25"},{"lineNumber":27,"author":{"gitId":"tanhuakun"},"content":" */","lastModifiedDate":"2021-10-25"},{"lineNumber":28,"author":{"gitId":"tanhuakun"},"content":"public class PersonViewCard extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2021-10-25"},{"lineNumber":29,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":30,"author":{"gitId":"tanhuakun"},"content":"    private static final String FXML \u003d \"PersonViewCard.fxml\";","lastModifiedDate":"2021-10-25"},{"lineNumber":31,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":32,"author":{"gitId":"tanhuakun"},"content":"    /**","lastModifiedDate":"2021-10-25"},{"lineNumber":33,"author":{"gitId":"tanhuakun"},"content":"     * Note: Certain keywords such as \"location\" and \"resources\" are reserved keywords in JavaFX.","lastModifiedDate":"2021-10-25"},{"lineNumber":34,"author":{"gitId":"tanhuakun"},"content":"     * As a consequence, UI elements\u0027 variable names cannot be set to such keywords","lastModifiedDate":"2021-10-25"},{"lineNumber":35,"author":{"gitId":"tanhuakun"},"content":"     * or an exception will be thrown by JavaFX during runtime.","lastModifiedDate":"2021-10-25"},{"lineNumber":36,"author":{"gitId":"tanhuakun"},"content":"     *","lastModifiedDate":"2021-10-25"},{"lineNumber":37,"author":{"gitId":"tanhuakun"},"content":"     * @see \u003ca href\u003d\"https://github.com/se-edu/addressbook-level4/issues/336\"\u003eThe issue on AddressBook level 4\u003c/a\u003e","lastModifiedDate":"2021-10-25"},{"lineNumber":38,"author":{"gitId":"tanhuakun"},"content":"     */","lastModifiedDate":"2021-10-25"},{"lineNumber":39,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":40,"author":{"gitId":"tanhuakun"},"content":"    @FXML","lastModifiedDate":"2021-10-25"},{"lineNumber":41,"author":{"gitId":"tanhuakun"},"content":"    private VBox cardPane;","lastModifiedDate":"2021-11-05"},{"lineNumber":42,"author":{"gitId":"tanhuakun"},"content":"    @FXML","lastModifiedDate":"2021-10-25"},{"lineNumber":43,"author":{"gitId":"tanhuakun"},"content":"    private Label name;","lastModifiedDate":"2021-10-25"},{"lineNumber":44,"author":{"gitId":"tanhuakun"},"content":"    @FXML","lastModifiedDate":"2021-10-25"},{"lineNumber":45,"author":{"gitId":"tanhuakun"},"content":"    private Label phone;","lastModifiedDate":"2021-10-25"},{"lineNumber":46,"author":{"gitId":"tanhuakun"},"content":"    @FXML","lastModifiedDate":"2021-10-25"},{"lineNumber":47,"author":{"gitId":"tanhuakun"},"content":"    private Label address;","lastModifiedDate":"2021-10-25"},{"lineNumber":48,"author":{"gitId":"tanhuakun"},"content":"    @FXML","lastModifiedDate":"2021-10-25"},{"lineNumber":49,"author":{"gitId":"tanhuakun"},"content":"    private Label email;","lastModifiedDate":"2021-10-25"},{"lineNumber":50,"author":{"gitId":"tanhuakun"},"content":"    @FXML","lastModifiedDate":"2021-10-25"},{"lineNumber":51,"author":{"gitId":"tanhuakun"},"content":"    private FlowPane tags;","lastModifiedDate":"2021-10-25"},{"lineNumber":52,"author":{"gitId":"tanhuakun"},"content":"    @FXML","lastModifiedDate":"2021-10-25"},{"lineNumber":53,"author":{"gitId":"tanhuakun"},"content":"    private VBox lessons;","lastModifiedDate":"2021-10-26"},{"lineNumber":54,"author":{"gitId":"tanhuakun"},"content":"    @FXML","lastModifiedDate":"2021-10-25"},{"lineNumber":55,"author":{"gitId":"tanhuakun"},"content":"    private Label groupLessonsLabel;","lastModifiedDate":"2021-11-04"},{"lineNumber":56,"author":{"gitId":"tanhuakun"},"content":"    @FXML","lastModifiedDate":"2021-11-04"},{"lineNumber":57,"author":{"gitId":"tanhuakun"},"content":"    private VBox groupLessons;","lastModifiedDate":"2021-11-04"},{"lineNumber":58,"author":{"gitId":"tanhuakun"},"content":"    @FXML","lastModifiedDate":"2021-11-04"},{"lineNumber":59,"author":{"gitId":"tanhuakun"},"content":"    private VBox tasks;","lastModifiedDate":"2021-10-26"},{"lineNumber":60,"author":{"gitId":"tanhuakun"},"content":"    @FXML","lastModifiedDate":"2021-10-26"},{"lineNumber":61,"author":{"gitId":"tanhuakun"},"content":"    private Label groupTasksLabel;","lastModifiedDate":"2021-11-04"},{"lineNumber":62,"author":{"gitId":"tanhuakun"},"content":"    @FXML","lastModifiedDate":"2021-11-04"},{"lineNumber":63,"author":{"gitId":"tanhuakun"},"content":"    private VBox groupTasks;","lastModifiedDate":"2021-11-04"},{"lineNumber":64,"author":{"gitId":"tanhuakun"},"content":"    @FXML","lastModifiedDate":"2021-11-04"},{"lineNumber":65,"author":{"gitId":"tanhuakun"},"content":"    private VBox exams;","lastModifiedDate":"2021-10-26"},{"lineNumber":66,"author":{"gitId":"tanhuakun"},"content":"    @FXML","lastModifiedDate":"2021-10-26"},{"lineNumber":67,"author":{"gitId":"tanhuakun"},"content":"    private VBox groups;","lastModifiedDate":"2021-10-26"},{"lineNumber":68,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":69,"author":{"gitId":"tanhuakun"},"content":"    /**","lastModifiedDate":"2021-10-25"},{"lineNumber":70,"author":{"gitId":"tanhuakun"},"content":"     * Creates a {@code PersonCode} with the given {@code Person} and index to display.","lastModifiedDate":"2021-10-25"},{"lineNumber":71,"author":{"gitId":"tanhuakun"},"content":"     */","lastModifiedDate":"2021-10-25"},{"lineNumber":72,"author":{"gitId":"tanhuakun"},"content":"    public PersonViewCard(ObservableValue\u003cPersonWithDetails\u003e personWithDetailsObservable) {","lastModifiedDate":"2021-10-25"},{"lineNumber":73,"author":{"gitId":"tanhuakun"},"content":"        super(FXML);","lastModifiedDate":"2021-10-25"},{"lineNumber":74,"author":{"gitId":"tanhuakun"},"content":"        ChangeListener\u003c? super PersonWithDetails\u003e changeListener \u003d new ChangeListener\u003cPersonWithDetails\u003e() {","lastModifiedDate":"2021-10-25"},{"lineNumber":75,"author":{"gitId":"tanhuakun"},"content":"            @Override","lastModifiedDate":"2021-10-25"},{"lineNumber":76,"author":{"gitId":"tanhuakun"},"content":"            public void changed(ObservableValue\u003c? extends PersonWithDetails\u003e observable,","lastModifiedDate":"2021-10-25"},{"lineNumber":77,"author":{"gitId":"tanhuakun"},"content":"                                PersonWithDetails oldValue, PersonWithDetails newValue) {","lastModifiedDate":"2021-10-25"},{"lineNumber":78,"author":{"gitId":"tanhuakun"},"content":"                updateCard(newValue);","lastModifiedDate":"2021-10-25"},{"lineNumber":79,"author":{"gitId":"tanhuakun"},"content":"            }","lastModifiedDate":"2021-10-25"},{"lineNumber":80,"author":{"gitId":"tanhuakun"},"content":"        };","lastModifiedDate":"2021-10-25"},{"lineNumber":81,"author":{"gitId":"tanhuakun"},"content":"        personWithDetailsObservable.addListener(changeListener);","lastModifiedDate":"2021-10-25"},{"lineNumber":82,"author":{"gitId":"tanhuakun"},"content":"        updateCard(personWithDetailsObservable.getValue());","lastModifiedDate":"2021-10-25"},{"lineNumber":83,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":84,"author":{"gitId":"tanhuakun"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":85,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":86,"author":{"gitId":"tanhuakun"},"content":"    private void updateCard(PersonWithDetails personWithDetails) {","lastModifiedDate":"2021-10-25"},{"lineNumber":87,"author":{"gitId":"tanhuakun"},"content":"        if (personWithDetails \u003d\u003d null) {","lastModifiedDate":"2021-10-25"},{"lineNumber":88,"author":{"gitId":"tanhuakun"},"content":"            // null value, this is expected to happen if there is no persons!","lastModifiedDate":"2021-10-25"},{"lineNumber":89,"author":{"gitId":"tanhuakun"},"content":"            // however, logic handlers should prevent user from viewing an empty view card.","lastModifiedDate":"2021-10-25"},{"lineNumber":90,"author":{"gitId":"tanhuakun"},"content":"            return;","lastModifiedDate":"2021-10-25"},{"lineNumber":91,"author":{"gitId":"tanhuakun"},"content":"        }","lastModifiedDate":"2021-10-25"},{"lineNumber":92,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":93,"author":{"gitId":"tanhuakun"},"content":"        updatePersonDetails(personWithDetails);","lastModifiedDate":"2021-11-04"},{"lineNumber":94,"author":{"gitId":"tanhuakun"},"content":"        updateGroupRelatedItems(personWithDetails.getGroups());","lastModifiedDate":"2021-11-04"},{"lineNumber":95,"author":{"gitId":"tanhuakun"},"content":"    }","lastModifiedDate":"2021-11-04"},{"lineNumber":96,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":97,"author":{"gitId":"tanhuakun"},"content":"    /**","lastModifiedDate":"2021-11-04"},{"lineNumber":98,"author":{"gitId":"tanhuakun"},"content":"     * Update all person related details","lastModifiedDate":"2021-11-04"},{"lineNumber":99,"author":{"gitId":"tanhuakun"},"content":"     * @param personWithDetails to update","lastModifiedDate":"2021-11-04"},{"lineNumber":100,"author":{"gitId":"tanhuakun"},"content":"     */","lastModifiedDate":"2021-11-04"},{"lineNumber":101,"author":{"gitId":"tanhuakun"},"content":"    private void updatePersonDetails(PersonWithDetails personWithDetails) {","lastModifiedDate":"2021-11-04"},{"lineNumber":102,"author":{"gitId":"tanhuakun"},"content":"        Person person \u003d personWithDetails.getPerson();","lastModifiedDate":"2021-10-25"},{"lineNumber":103,"author":{"gitId":"tanhuakun"},"content":"        Set\u003cTask\u003e personTasks \u003d personWithDetails.getTasks();","lastModifiedDate":"2021-10-26"},{"lineNumber":104,"author":{"gitId":"jeremy-7007"},"content":"        Map\u003cTask, Boolean\u003e personTasksCompletion \u003d personWithDetails.getTasksCompletion();","lastModifiedDate":"2021-11-06"},{"lineNumber":105,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":106,"author":{"gitId":"tanhuakun"},"content":"        name.setText(person.getName().fullName);","lastModifiedDate":"2021-10-25"},{"lineNumber":107,"author":{"gitId":"tanhuakun"},"content":"        phone.setText(person.getPhone().value);","lastModifiedDate":"2021-10-25"},{"lineNumber":108,"author":{"gitId":"tanhuakun"},"content":"        address.setText(person.getAddress().value);","lastModifiedDate":"2021-10-25"},{"lineNumber":109,"author":{"gitId":"tanhuakun"},"content":"        email.setText(person.getEmail().value);","lastModifiedDate":"2021-10-25"},{"lineNumber":110,"author":{"gitId":"tanhuakun"},"content":"        tags.getChildren().clear();","lastModifiedDate":"2021-10-26"},{"lineNumber":111,"author":{"gitId":"tanhuakun"},"content":"        person.getTags().stream()","lastModifiedDate":"2021-10-25"},{"lineNumber":112,"author":{"gitId":"tanhuakun"},"content":"                .sorted(Comparator.comparing(tag -\u003e tag.tagName))","lastModifiedDate":"2021-10-25"},{"lineNumber":113,"author":{"gitId":"tanhuakun"},"content":"                .forEach(tag -\u003e tags.getChildren().add(new Label(tag.tagName)));","lastModifiedDate":"2021-10-25"},{"lineNumber":114,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":115,"author":{"gitId":"tanhuakun"},"content":"        // add person lessons","lastModifiedDate":"2021-11-04"},{"lineNumber":116,"author":{"gitId":"tanhuakun"},"content":"        UiUtil.addIndexedLabels(lessons, person.getLessons().stream().map((lessons) -\u003e","lastModifiedDate":"2021-11-04"},{"lineNumber":117,"author":{"gitId":"tanhuakun"},"content":"                lessons.toString()).collect(Collectors.toList()), Optional.of(\"No lessons yet!\"));","lastModifiedDate":"2021-11-04"},{"lineNumber":118,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":119,"author":{"gitId":"tanhuakun"},"content":"        // add person tasks","lastModifiedDate":"2021-11-04"},{"lineNumber":120,"author":{"gitId":"jeremy-7007"},"content":"        UiUtil.addIndexedLabels(tasks, personTasks.stream().map(task -\u003e {","lastModifiedDate":"2021-11-06"},{"lineNumber":121,"author":{"gitId":"jeremy-7007"},"content":"            Boolean isDone \u003d personTasksCompletion.get(task);","lastModifiedDate":"2021-11-06"},{"lineNumber":122,"author":{"gitId":"jeremy-7007"},"content":"            assert !isDone.equals(null);","lastModifiedDate":"2021-11-06"},{"lineNumber":123,"author":{"gitId":"jeremy-7007"},"content":"            return task.toCompletionString(isDone);","lastModifiedDate":"2021-11-06"},{"lineNumber":124,"author":{"gitId":"jeremy-7007"},"content":"        }).collect(Collectors.toList()), Optional.of(\"No tasks yet!\"));","lastModifiedDate":"2021-11-06"},{"lineNumber":125,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":126,"author":{"gitId":"tanhuakun"},"content":"        // add person exams","lastModifiedDate":"2021-11-04"},{"lineNumber":127,"author":{"gitId":"tanhuakun"},"content":"        UiUtil.addIndexedLabels(exams, person.getExams().stream().map(exam -\u003e","lastModifiedDate":"2021-11-04"},{"lineNumber":128,"author":{"gitId":"tanhuakun"},"content":"                exam.toString()).collect(Collectors.toList()), Optional.of(\"No exams yet!\"));","lastModifiedDate":"2021-11-04"},{"lineNumber":129,"author":{"gitId":"tanhuakun"},"content":"    }","lastModifiedDate":"2021-11-04"},{"lineNumber":130,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":131,"author":{"gitId":"tanhuakun"},"content":"    /**","lastModifiedDate":"2021-11-04"},{"lineNumber":132,"author":{"gitId":"tanhuakun"},"content":"     * Update all group related details","lastModifiedDate":"2021-11-04"},{"lineNumber":133,"author":{"gitId":"tanhuakun"},"content":"     * @param personGroups to update","lastModifiedDate":"2021-11-04"},{"lineNumber":134,"author":{"gitId":"tanhuakun"},"content":"     */","lastModifiedDate":"2021-11-04"},{"lineNumber":135,"author":{"gitId":"tanhuakun"},"content":"    private void updateGroupRelatedItems(Set\u003cGroupWithDetails\u003e personGroups) {","lastModifiedDate":"2021-11-04"},{"lineNumber":136,"author":{"gitId":"tanhuakun"},"content":"        // create a list to hold the lesson details in groups that person belongs to","lastModifiedDate":"2021-11-04"},{"lineNumber":137,"author":{"gitId":"tanhuakun"},"content":"        List\u003cString\u003e groupLessonsList \u003d getDetailsWithGroupName(personGroups, groupWithDetails -\u003e","lastModifiedDate":"2021-11-04"},{"lineNumber":138,"author":{"gitId":"tanhuakun"},"content":"                groupWithDetails.getGroup().getLessons());","lastModifiedDate":"2021-11-04"},{"lineNumber":139,"author":{"gitId":"tanhuakun"},"content":"        // create a list to hold the task details in groups that person belongs to","lastModifiedDate":"2021-11-04"},{"lineNumber":140,"author":{"gitId":"tanhuakun"},"content":"        List\u003cString\u003e groupTasksList \u003d getDetailsWithGroupName(personGroups, groupWithDetails -\u003e","lastModifiedDate":"2021-11-04"},{"lineNumber":141,"author":{"gitId":"tanhuakun"},"content":"                groupWithDetails.getTasks());","lastModifiedDate":"2021-11-04"},{"lineNumber":142,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":143,"author":{"gitId":"tanhuakun"},"content":"        // remove the group lessons and tasks labels if is empty","lastModifiedDate":"2021-11-04"},{"lineNumber":144,"author":{"gitId":"tanhuakun"},"content":"        groupLessonsLabel.setVisible(!groupLessonsList.isEmpty());","lastModifiedDate":"2021-11-04"},{"lineNumber":145,"author":{"gitId":"tanhuakun"},"content":"        groupLessonsLabel.setManaged(!groupLessonsList.isEmpty());","lastModifiedDate":"2021-11-04"},{"lineNumber":146,"author":{"gitId":"tanhuakun"},"content":"        groupTasksLabel.setVisible(!groupTasksList.isEmpty());","lastModifiedDate":"2021-11-04"},{"lineNumber":147,"author":{"gitId":"tanhuakun"},"content":"        groupTasksLabel.setManaged(!groupTasksList.isEmpty());","lastModifiedDate":"2021-11-04"},{"lineNumber":148,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":149,"author":{"gitId":"tanhuakun"},"content":"        // add group lessons, no empty message","lastModifiedDate":"2021-11-04"},{"lineNumber":150,"author":{"gitId":"tanhuakun"},"content":"        UiUtil.addIndexedLabels(groupLessons, groupLessonsList, Optional.empty());","lastModifiedDate":"2021-11-04"},{"lineNumber":151,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":152,"author":{"gitId":"tanhuakun"},"content":"        // add group tasks, no empty message","lastModifiedDate":"2021-11-04"},{"lineNumber":153,"author":{"gitId":"tanhuakun"},"content":"        UiUtil.addIndexedLabels(groupTasks, groupTasksList, Optional.empty());","lastModifiedDate":"2021-11-04"},{"lineNumber":154,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":155,"author":{"gitId":"tanhuakun"},"content":"        // add person group names","lastModifiedDate":"2021-11-04"},{"lineNumber":156,"author":{"gitId":"tanhuakun"},"content":"        UiUtil.addIndexedLabels(groups, personGroups.stream().map(group -\u003e","lastModifiedDate":"2021-11-04"},{"lineNumber":157,"author":{"gitId":"tanhuakun"},"content":"                group.getGroup().getName().toString()).collect(Collectors.toList()), Optional.of(\"No groups yet!\"));","lastModifiedDate":"2021-11-04"},{"lineNumber":158,"author":{"gitId":"tanhuakun"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":159,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":160,"author":{"gitId":"tanhuakun"},"content":"    private List\u003cString\u003e getDetailsWithGroupName(Set\u003cGroupWithDetails\u003e groups,","lastModifiedDate":"2021-11-04"},{"lineNumber":161,"author":{"gitId":"tanhuakun"},"content":"            Function\u003cGroupWithDetails, Collection\u003c? extends Object\u003e\u003e function) {","lastModifiedDate":"2021-11-04"},{"lineNumber":162,"author":{"gitId":"tanhuakun"},"content":"        List\u003cString\u003e list \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-11-04"},{"lineNumber":163,"author":{"gitId":"tanhuakun"},"content":"        for (GroupWithDetails groupWithDetails : groups) {","lastModifiedDate":"2021-11-04"},{"lineNumber":164,"author":{"gitId":"tanhuakun"},"content":"            String groupName \u003d groupWithDetails.getGroup().getNameInString();","lastModifiedDate":"2021-11-04"},{"lineNumber":165,"author":{"gitId":"tanhuakun"},"content":"            for (Object obj : function.apply(groupWithDetails)) {","lastModifiedDate":"2021-11-04"},{"lineNumber":166,"author":{"gitId":"tanhuakun"},"content":"                list.add(String.format(\"%s with group %s\", obj, groupName));","lastModifiedDate":"2021-11-04"},{"lineNumber":167,"author":{"gitId":"tanhuakun"},"content":"            }","lastModifiedDate":"2021-11-04"},{"lineNumber":168,"author":{"gitId":"tanhuakun"},"content":"        }","lastModifiedDate":"2021-10-26"},{"lineNumber":169,"author":{"gitId":"tanhuakun"},"content":"        return list;","lastModifiedDate":"2021-11-04"},{"lineNumber":170,"author":{"gitId":"tanhuakun"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":171,"author":{"gitId":"tanhuakun"},"content":"}","lastModifiedDate":"2021-10-25"}],"authorContributionMap":{"jeremy-7007":7,"tanhuakun":164}},{"path":"src/main/java/seedu/address/ui/TaskCard.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kvihashini"},"content":"package seedu.address.ui;","lastModifiedDate":"2021-10-13"},{"lineNumber":2,"author":{"gitId":"kvihashini"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":3,"author":{"gitId":"kvihashini"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2021-10-13"},{"lineNumber":4,"author":{"gitId":"kvihashini"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2021-10-13"},{"lineNumber":5,"author":{"gitId":"kvihashini"},"content":"import javafx.scene.layout.HBox;","lastModifiedDate":"2021-10-13"},{"lineNumber":6,"author":{"gitId":"kvihashini"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2021-10-13"},{"lineNumber":7,"author":{"gitId":"kvihashini"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2021-10-13"},{"lineNumber":8,"author":{"gitId":"kvihashini"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":9,"author":{"gitId":"kvihashini"},"content":"/**","lastModifiedDate":"2021-10-13"},{"lineNumber":10,"author":{"gitId":"kvihashini"},"content":" * An UI component that displays information of a {@code Task}.","lastModifiedDate":"2021-10-13"},{"lineNumber":11,"author":{"gitId":"kvihashini"},"content":" */","lastModifiedDate":"2021-10-13"},{"lineNumber":12,"author":{"gitId":"kvihashini"},"content":"public class TaskCard extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2021-10-13"},{"lineNumber":13,"author":{"gitId":"kvihashini"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":14,"author":{"gitId":"kvihashini"},"content":"    private static final String FXML \u003d \"TaskListCard.fxml\";","lastModifiedDate":"2021-10-13"},{"lineNumber":15,"author":{"gitId":"kvihashini"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":16,"author":{"gitId":"kvihashini"},"content":"    /**","lastModifiedDate":"2021-10-13"},{"lineNumber":17,"author":{"gitId":"kvihashini"},"content":"     * Note: Certain keywords such as \"location\" and \"resources\" are reserved keywords in JavaFX.","lastModifiedDate":"2021-10-13"},{"lineNumber":18,"author":{"gitId":"kvihashini"},"content":"     * As a consequence, UI elements\u0027 variable names cannot be set to such keywords","lastModifiedDate":"2021-10-13"},{"lineNumber":19,"author":{"gitId":"kvihashini"},"content":"     * or an exception will be thrown by JavaFX during runtime.","lastModifiedDate":"2021-10-13"},{"lineNumber":20,"author":{"gitId":"kvihashini"},"content":"     *","lastModifiedDate":"2021-10-13"},{"lineNumber":21,"author":{"gitId":"kvihashini"},"content":"     * @see \u003ca href\u003d\"https://github.com/se-edu/addressbook-level4/issues/336\"\u003eThe issue on AddressBook level 4\u003c/a\u003e","lastModifiedDate":"2021-10-13"},{"lineNumber":22,"author":{"gitId":"kvihashini"},"content":"     */","lastModifiedDate":"2021-10-13"},{"lineNumber":23,"author":{"gitId":"kvihashini"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":24,"author":{"gitId":"kvihashini"},"content":"    public final Task task;","lastModifiedDate":"2021-10-13"},{"lineNumber":25,"author":{"gitId":"kvihashini"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":26,"author":{"gitId":"kvihashini"},"content":"    @FXML","lastModifiedDate":"2021-10-13"},{"lineNumber":27,"author":{"gitId":"kvihashini"},"content":"    private HBox cardPane;","lastModifiedDate":"2021-10-13"},{"lineNumber":28,"author":{"gitId":"kvihashini"},"content":"    @FXML","lastModifiedDate":"2021-10-13"},{"lineNumber":29,"author":{"gitId":"kvihashini"},"content":"    private Label name;","lastModifiedDate":"2021-10-13"},{"lineNumber":30,"author":{"gitId":"kvihashini"},"content":"    @FXML","lastModifiedDate":"2021-10-13"},{"lineNumber":31,"author":{"gitId":"kvihashini"},"content":"    private Label id;","lastModifiedDate":"2021-10-13"},{"lineNumber":32,"author":{"gitId":"kvihashini"},"content":"    @FXML","lastModifiedDate":"2021-10-13"},{"lineNumber":33,"author":{"gitId":"kvihashini"},"content":"    private Label deadline;","lastModifiedDate":"2021-10-13"},{"lineNumber":34,"author":{"gitId":"kvihashini"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":35,"author":{"gitId":"kvihashini"},"content":"    /**","lastModifiedDate":"2021-10-13"},{"lineNumber":36,"author":{"gitId":"kvihashini"},"content":"     * Creates a {@code TaskCode} with the given {@code Task} and index to display.","lastModifiedDate":"2021-10-13"},{"lineNumber":37,"author":{"gitId":"kvihashini"},"content":"     */","lastModifiedDate":"2021-10-13"},{"lineNumber":38,"author":{"gitId":"kvihashini"},"content":"    public TaskCard(Task task, int displayedIndex) {","lastModifiedDate":"2021-10-13"},{"lineNumber":39,"author":{"gitId":"kvihashini"},"content":"        super(FXML);","lastModifiedDate":"2021-10-13"},{"lineNumber":40,"author":{"gitId":"kvihashini"},"content":"        this.task \u003d task;","lastModifiedDate":"2021-10-13"},{"lineNumber":41,"author":{"gitId":"kvihashini"},"content":"        id.setText(displayedIndex + \". \");","lastModifiedDate":"2021-10-13"},{"lineNumber":42,"author":{"gitId":"Neha-5678"},"content":"        name.setText(task.getDescription().description);","lastModifiedDate":"2021-10-19"},{"lineNumber":43,"author":{"gitId":"kvihashini"},"content":"        deadline.setText(task.getDeadline().toString());","lastModifiedDate":"2021-10-13"},{"lineNumber":44,"author":{"gitId":"kvihashini"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":45,"author":{"gitId":"kvihashini"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":46,"author":{"gitId":"kvihashini"},"content":"    @Override","lastModifiedDate":"2021-10-13"},{"lineNumber":47,"author":{"gitId":"kvihashini"},"content":"    public boolean equals(Object other) {","lastModifiedDate":"2021-10-13"},{"lineNumber":48,"author":{"gitId":"kvihashini"},"content":"        // short circuit if same object","lastModifiedDate":"2021-10-13"},{"lineNumber":49,"author":{"gitId":"kvihashini"},"content":"        if (other \u003d\u003d this) {","lastModifiedDate":"2021-10-13"},{"lineNumber":50,"author":{"gitId":"kvihashini"},"content":"            return true;","lastModifiedDate":"2021-10-13"},{"lineNumber":51,"author":{"gitId":"kvihashini"},"content":"        }","lastModifiedDate":"2021-10-13"},{"lineNumber":52,"author":{"gitId":"kvihashini"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":53,"author":{"gitId":"kvihashini"},"content":"        // instanceof handles nulls","lastModifiedDate":"2021-10-13"},{"lineNumber":54,"author":{"gitId":"kvihashini"},"content":"        if (!(other instanceof TaskCard)) {","lastModifiedDate":"2021-10-13"},{"lineNumber":55,"author":{"gitId":"kvihashini"},"content":"            return false;","lastModifiedDate":"2021-10-13"},{"lineNumber":56,"author":{"gitId":"kvihashini"},"content":"        }","lastModifiedDate":"2021-10-13"},{"lineNumber":57,"author":{"gitId":"kvihashini"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":58,"author":{"gitId":"kvihashini"},"content":"        // state check","lastModifiedDate":"2021-10-13"},{"lineNumber":59,"author":{"gitId":"kvihashini"},"content":"        TaskCard card \u003d (TaskCard) other;","lastModifiedDate":"2021-10-13"},{"lineNumber":60,"author":{"gitId":"kvihashini"},"content":"        return id.getText().equals(card.id.getText())","lastModifiedDate":"2021-10-13"},{"lineNumber":61,"author":{"gitId":"kvihashini"},"content":"                \u0026\u0026 task.equals(card.task);","lastModifiedDate":"2021-10-13"},{"lineNumber":62,"author":{"gitId":"kvihashini"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":63,"author":{"gitId":"kvihashini"},"content":"}","lastModifiedDate":"2021-10-13"}],"authorContributionMap":{"Neha-5678":1,"kvihashini":62}},{"path":"src/main/java/seedu/address/ui/TaskListPanel.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kvihashini"},"content":"package seedu.address.ui;","lastModifiedDate":"2021-10-13"},{"lineNumber":2,"author":{"gitId":"kvihashini"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":3,"author":{"gitId":"kvihashini"},"content":"import java.util.logging.Logger;","lastModifiedDate":"2021-10-13"},{"lineNumber":4,"author":{"gitId":"kvihashini"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":5,"author":{"gitId":"kvihashini"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-10-13"},{"lineNumber":6,"author":{"gitId":"kvihashini"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2021-10-13"},{"lineNumber":7,"author":{"gitId":"kvihashini"},"content":"import javafx.scene.control.ListCell;","lastModifiedDate":"2021-10-13"},{"lineNumber":8,"author":{"gitId":"kvihashini"},"content":"import javafx.scene.control.ListView;","lastModifiedDate":"2021-10-13"},{"lineNumber":9,"author":{"gitId":"kvihashini"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2021-10-13"},{"lineNumber":10,"author":{"gitId":"kvihashini"},"content":"import seedu.address.commons.core.LogsCenter;","lastModifiedDate":"2021-10-13"},{"lineNumber":11,"author":{"gitId":"kvihashini"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2021-10-13"},{"lineNumber":12,"author":{"gitId":"kvihashini"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":13,"author":{"gitId":"kvihashini"},"content":"/**","lastModifiedDate":"2021-10-13"},{"lineNumber":14,"author":{"gitId":"kvihashini"},"content":" * Panel containing the list of tasks.","lastModifiedDate":"2021-10-13"},{"lineNumber":15,"author":{"gitId":"kvihashini"},"content":" */","lastModifiedDate":"2021-10-13"},{"lineNumber":16,"author":{"gitId":"kvihashini"},"content":"public class TaskListPanel extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2021-10-13"},{"lineNumber":17,"author":{"gitId":"kvihashini"},"content":"    private static final String FXML \u003d \"TaskListPanel.fxml\";","lastModifiedDate":"2021-10-13"},{"lineNumber":18,"author":{"gitId":"kvihashini"},"content":"    private final Logger logger \u003d LogsCenter.getLogger(TaskListPanel.class);","lastModifiedDate":"2021-10-13"},{"lineNumber":19,"author":{"gitId":"kvihashini"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":20,"author":{"gitId":"kvihashini"},"content":"    @FXML","lastModifiedDate":"2021-10-13"},{"lineNumber":21,"author":{"gitId":"kvihashini"},"content":"    private ListView\u003cTask\u003e taskListView;","lastModifiedDate":"2021-10-13"},{"lineNumber":22,"author":{"gitId":"kvihashini"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":23,"author":{"gitId":"kvihashini"},"content":"    /**","lastModifiedDate":"2021-10-13"},{"lineNumber":24,"author":{"gitId":"kvihashini"},"content":"     * Creates a {@code TaskListPanel} with the given {@code ObservableList}.","lastModifiedDate":"2021-10-13"},{"lineNumber":25,"author":{"gitId":"kvihashini"},"content":"     */","lastModifiedDate":"2021-10-13"},{"lineNumber":26,"author":{"gitId":"kvihashini"},"content":"    public TaskListPanel(ObservableList\u003cTask\u003e taskList) {","lastModifiedDate":"2021-10-13"},{"lineNumber":27,"author":{"gitId":"kvihashini"},"content":"        super(FXML);","lastModifiedDate":"2021-10-13"},{"lineNumber":28,"author":{"gitId":"kvihashini"},"content":"        taskListView.setItems(taskList);","lastModifiedDate":"2021-10-13"},{"lineNumber":29,"author":{"gitId":"kvihashini"},"content":"        taskListView.setCellFactory(listView -\u003e new TaskListViewCell());","lastModifiedDate":"2021-10-13"},{"lineNumber":30,"author":{"gitId":"kvihashini"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":31,"author":{"gitId":"kvihashini"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":32,"author":{"gitId":"kvihashini"},"content":"    /**","lastModifiedDate":"2021-10-13"},{"lineNumber":33,"author":{"gitId":"kvihashini"},"content":"     * Custom {@code ListCell} that displays the graphics of a {@code Task} using a {@code TaskCard}.","lastModifiedDate":"2021-10-13"},{"lineNumber":34,"author":{"gitId":"kvihashini"},"content":"     */","lastModifiedDate":"2021-10-13"},{"lineNumber":35,"author":{"gitId":"kvihashini"},"content":"    class TaskListViewCell extends ListCell\u003cTask\u003e {","lastModifiedDate":"2021-10-13"},{"lineNumber":36,"author":{"gitId":"kvihashini"},"content":"        @Override","lastModifiedDate":"2021-10-13"},{"lineNumber":37,"author":{"gitId":"kvihashini"},"content":"        protected void updateItem(Task task, boolean empty) {","lastModifiedDate":"2021-10-13"},{"lineNumber":38,"author":{"gitId":"kvihashini"},"content":"            super.updateItem(task, empty);","lastModifiedDate":"2021-10-13"},{"lineNumber":39,"author":{"gitId":"kvihashini"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":40,"author":{"gitId":"kvihashini"},"content":"            if (empty || task \u003d\u003d null) {","lastModifiedDate":"2021-10-13"},{"lineNumber":41,"author":{"gitId":"kvihashini"},"content":"                setGraphic(null);","lastModifiedDate":"2021-10-13"},{"lineNumber":42,"author":{"gitId":"kvihashini"},"content":"                setText(null);","lastModifiedDate":"2021-10-13"},{"lineNumber":43,"author":{"gitId":"kvihashini"},"content":"            } else {","lastModifiedDate":"2021-10-13"},{"lineNumber":44,"author":{"gitId":"kvihashini"},"content":"                setGraphic(new TaskCard(task, getIndex() + 1).getRoot());","lastModifiedDate":"2021-10-13"},{"lineNumber":45,"author":{"gitId":"kvihashini"},"content":"            }","lastModifiedDate":"2021-10-13"},{"lineNumber":46,"author":{"gitId":"kvihashini"},"content":"        }","lastModifiedDate":"2021-10-13"},{"lineNumber":47,"author":{"gitId":"kvihashini"},"content":"    }","lastModifiedDate":"2021-10-13"},{"lineNumber":48,"author":{"gitId":"kvihashini"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":49,"author":{"gitId":"kvihashini"},"content":"}","lastModifiedDate":"2021-10-13"}],"authorContributionMap":{"kvihashini":49}},{"path":"src/main/java/seedu/address/ui/UiUtil.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tanhuakun"},"content":"package seedu.address.ui;","lastModifiedDate":"2021-11-04"},{"lineNumber":2,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":3,"author":{"gitId":"tanhuakun"},"content":"import java.util.Collection;","lastModifiedDate":"2021-11-04"},{"lineNumber":4,"author":{"gitId":"tanhuakun"},"content":"import java.util.Optional;","lastModifiedDate":"2021-11-04"},{"lineNumber":5,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":6,"author":{"gitId":"tanhuakun"},"content":"import javafx.scene.control.Label;","lastModifiedDate":"2021-11-04"},{"lineNumber":7,"author":{"gitId":"tanhuakun"},"content":"import javafx.scene.layout.VBox;","lastModifiedDate":"2021-11-04"},{"lineNumber":8,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":9,"author":{"gitId":"tanhuakun"},"content":"/**","lastModifiedDate":"2021-11-04"},{"lineNumber":10,"author":{"gitId":"tanhuakun"},"content":" * Util class for UI functions","lastModifiedDate":"2021-11-04"},{"lineNumber":11,"author":{"gitId":"tanhuakun"},"content":" */","lastModifiedDate":"2021-11-04"},{"lineNumber":12,"author":{"gitId":"tanhuakun"},"content":"public class UiUtil {","lastModifiedDate":"2021-11-04"},{"lineNumber":13,"author":{"gitId":"tanhuakun"},"content":"    /**","lastModifiedDate":"2021-11-04"},{"lineNumber":14,"author":{"gitId":"tanhuakun"},"content":"     * Updates the given VBox with multiple labels","lastModifiedDate":"2021-11-04"},{"lineNumber":15,"author":{"gitId":"tanhuakun"},"content":"     * Optional default message to use if the collection is empty.","lastModifiedDate":"2021-11-04"},{"lineNumber":16,"author":{"gitId":"tanhuakun"},"content":"     * @param toUpdate Vbox to update.","lastModifiedDate":"2021-11-04"},{"lineNumber":17,"author":{"gitId":"tanhuakun"},"content":"     * @param stringCollections collection of Strings to use in the label details.","lastModifiedDate":"2021-11-04"},{"lineNumber":18,"author":{"gitId":"tanhuakun"},"content":"     * @param defaultMessage optional default message if the list is empty.","lastModifiedDate":"2021-11-04"},{"lineNumber":19,"author":{"gitId":"tanhuakun"},"content":"     */","lastModifiedDate":"2021-11-04"},{"lineNumber":20,"author":{"gitId":"tanhuakun"},"content":"    public static \u003cT\u003e void addIndexedLabels(VBox toUpdate, Collection\u003cString\u003e stringCollections,","lastModifiedDate":"2021-11-04"},{"lineNumber":21,"author":{"gitId":"tanhuakun"},"content":"            Optional\u003cString\u003e defaultMessage) {","lastModifiedDate":"2021-11-04"},{"lineNumber":22,"author":{"gitId":"tanhuakun"},"content":"        toUpdate.getChildren().clear();","lastModifiedDate":"2021-11-04"},{"lineNumber":23,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":24,"author":{"gitId":"tanhuakun"},"content":"        // if is empty, give a default message if present.","lastModifiedDate":"2021-11-04"},{"lineNumber":25,"author":{"gitId":"tanhuakun"},"content":"        if (stringCollections.isEmpty()) {","lastModifiedDate":"2021-11-04"},{"lineNumber":26,"author":{"gitId":"tanhuakun"},"content":"            defaultMessage.ifPresent((msg) -\u003e {","lastModifiedDate":"2021-11-04"},{"lineNumber":27,"author":{"gitId":"tanhuakun"},"content":"                Label emptyLabel \u003d new Label(msg);","lastModifiedDate":"2021-11-04"},{"lineNumber":28,"author":{"gitId":"tanhuakun"},"content":"                emptyLabel.setMinWidth(Label.USE_PREF_SIZE);","lastModifiedDate":"2021-11-04"},{"lineNumber":29,"author":{"gitId":"tanhuakun"},"content":"                toUpdate.getChildren().add(emptyLabel);","lastModifiedDate":"2021-11-04"},{"lineNumber":30,"author":{"gitId":"tanhuakun"},"content":"            });","lastModifiedDate":"2021-11-04"},{"lineNumber":31,"author":{"gitId":"tanhuakun"},"content":"            return;","lastModifiedDate":"2021-11-04"},{"lineNumber":32,"author":{"gitId":"tanhuakun"},"content":"        }","lastModifiedDate":"2021-11-04"},{"lineNumber":33,"author":{"gitId":"tanhuakun"},"content":"        // otherwise add all of the objects","lastModifiedDate":"2021-11-04"},{"lineNumber":34,"author":{"gitId":"tanhuakun"},"content":"        int index \u003d 1;","lastModifiedDate":"2021-11-04"},{"lineNumber":35,"author":{"gitId":"tanhuakun"},"content":"        for (String str: stringCollections) {","lastModifiedDate":"2021-11-04"},{"lineNumber":36,"author":{"gitId":"tanhuakun"},"content":"            toUpdate.getChildren().add(createLabelWithIndex(index, str));","lastModifiedDate":"2021-11-04"},{"lineNumber":37,"author":{"gitId":"tanhuakun"},"content":"            index++;","lastModifiedDate":"2021-11-04"},{"lineNumber":38,"author":{"gitId":"tanhuakun"},"content":"        }","lastModifiedDate":"2021-11-04"},{"lineNumber":39,"author":{"gitId":"tanhuakun"},"content":"    }","lastModifiedDate":"2021-11-04"},{"lineNumber":40,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":41,"author":{"gitId":"tanhuakun"},"content":"    /**","lastModifiedDate":"2021-11-04"},{"lineNumber":42,"author":{"gitId":"tanhuakun"},"content":"     * Creates a label with the the given index and string","lastModifiedDate":"2021-11-04"},{"lineNumber":43,"author":{"gitId":"tanhuakun"},"content":"     * @param index of label","lastModifiedDate":"2021-11-04"},{"lineNumber":44,"author":{"gitId":"tanhuakun"},"content":"     * @param str to appear after the label","lastModifiedDate":"2021-11-04"},{"lineNumber":45,"author":{"gitId":"tanhuakun"},"content":"     * @return Label with index and string","lastModifiedDate":"2021-11-04"},{"lineNumber":46,"author":{"gitId":"tanhuakun"},"content":"     */","lastModifiedDate":"2021-11-04"},{"lineNumber":47,"author":{"gitId":"tanhuakun"},"content":"    public static Label createLabelWithIndex(int index, String str) {","lastModifiedDate":"2021-11-04"},{"lineNumber":48,"author":{"gitId":"tanhuakun"},"content":"        Label toAdd \u003d new Label(String.format(\"%d. %s\", index, str));","lastModifiedDate":"2021-11-04"},{"lineNumber":49,"author":{"gitId":"tanhuakun"},"content":"        toAdd.setMinWidth(Label.USE_PREF_SIZE);","lastModifiedDate":"2021-11-04"},{"lineNumber":50,"author":{"gitId":"tanhuakun"},"content":"        return toAdd;","lastModifiedDate":"2021-11-04"},{"lineNumber":51,"author":{"gitId":"tanhuakun"},"content":"    }","lastModifiedDate":"2021-11-04"},{"lineNumber":52,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":53,"author":{"gitId":"tanhuakun"},"content":"}","lastModifiedDate":"2021-11-04"}],"authorContributionMap":{"tanhuakun":53}},{"path":"src/main/java/seedu/address/ui/ViewingPanel.java","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tanhuakun"},"content":"package seedu.address.ui;","lastModifiedDate":"2021-10-25"},{"lineNumber":2,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":3,"author":{"gitId":"tanhuakun"},"content":"import javafx.beans.value.ChangeListener;","lastModifiedDate":"2021-10-25"},{"lineNumber":4,"author":{"gitId":"tanhuakun"},"content":"import javafx.beans.value.ObservableValue;","lastModifiedDate":"2021-10-25"},{"lineNumber":5,"author":{"gitId":"tanhuakun"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-10-25"},{"lineNumber":6,"author":{"gitId":"tanhuakun"},"content":"import javafx.fxml.FXML;","lastModifiedDate":"2021-10-25"},{"lineNumber":7,"author":{"gitId":"tanhuakun"},"content":"import javafx.scene.layout.Region;","lastModifiedDate":"2021-10-25"},{"lineNumber":8,"author":{"gitId":"tanhuakun"},"content":"import javafx.scene.layout.StackPane;","lastModifiedDate":"2021-10-25"},{"lineNumber":9,"author":{"gitId":"tanhuakun"},"content":"import seedu.address.model.ViewingType;","lastModifiedDate":"2021-10-25"},{"lineNumber":10,"author":{"gitId":"kvihashini"},"content":"import seedu.address.model.group.GroupWithDetails;","lastModifiedDate":"2021-10-25"},{"lineNumber":11,"author":{"gitId":"tanhuakun"},"content":"import seedu.address.model.lesson.LessonWithAttendees;","lastModifiedDate":"2021-10-25"},{"lineNumber":12,"author":{"gitId":"tanhuakun"},"content":"import seedu.address.model.person.PersonWithDetails;","lastModifiedDate":"2021-10-25"},{"lineNumber":13,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":14,"author":{"gitId":"tanhuakun"},"content":"/**","lastModifiedDate":"2021-10-25"},{"lineNumber":15,"author":{"gitId":"tanhuakun"},"content":" * Class for managing the viewing panel.","lastModifiedDate":"2021-10-25"},{"lineNumber":16,"author":{"gitId":"tanhuakun"},"content":" * That includes responsibilities such as showing the schedule, or viewing a particular student.","lastModifiedDate":"2021-10-25"},{"lineNumber":17,"author":{"gitId":"tanhuakun"},"content":" */","lastModifiedDate":"2021-10-25"},{"lineNumber":18,"author":{"gitId":"tanhuakun"},"content":"public class ViewingPanel extends UiPart\u003cRegion\u003e {","lastModifiedDate":"2021-10-25"},{"lineNumber":19,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":20,"author":{"gitId":"tanhuakun"},"content":"    private static final String FXML \u003d \"ViewingPanel.fxml\";","lastModifiedDate":"2021-10-25"},{"lineNumber":21,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":22,"author":{"gitId":"tanhuakun"},"content":"    @FXML","lastModifiedDate":"2021-10-25"},{"lineNumber":23,"author":{"gitId":"tanhuakun"},"content":"    private StackPane viewingPanel;","lastModifiedDate":"2021-10-25"},{"lineNumber":24,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":25,"author":{"gitId":"tanhuakun"},"content":"    private PersonViewCard personViewCard;","lastModifiedDate":"2021-10-25"},{"lineNumber":26,"author":{"gitId":"tanhuakun"},"content":"    private LessonSchedulePanel schedulePanel;","lastModifiedDate":"2021-10-25"},{"lineNumber":27,"author":{"gitId":"kvihashini"},"content":"    private GroupViewCard groupViewCard;","lastModifiedDate":"2021-10-25"},{"lineNumber":28,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":29,"author":{"gitId":"tanhuakun"},"content":"    /**","lastModifiedDate":"2021-10-25"},{"lineNumber":30,"author":{"gitId":"tanhuakun"},"content":"     * Constructs a Viewing Panel with the given observable values","lastModifiedDate":"2021-10-25"},{"lineNumber":31,"author":{"gitId":"tanhuakun"},"content":"     */","lastModifiedDate":"2021-10-25"},{"lineNumber":32,"author":{"gitId":"kvihashini"},"content":"    public ViewingPanel(","lastModifiedDate":"2021-10-25"},{"lineNumber":33,"author":{"gitId":"kvihashini"},"content":"            ObservableValue\u003cViewingType\u003e viewType,","lastModifiedDate":"2021-10-25"},{"lineNumber":34,"author":{"gitId":"kvihashini"},"content":"            ObservableValue\u003cPersonWithDetails\u003e personWithDetails,","lastModifiedDate":"2021-10-25"},{"lineNumber":35,"author":{"gitId":"kvihashini"},"content":"            ObservableList\u003cLessonWithAttendees\u003e lessonWithAttendees,","lastModifiedDate":"2021-10-25"},{"lineNumber":36,"author":{"gitId":"kvihashini"},"content":"            ObservableValue\u003cGroupWithDetails\u003e groupWithDetails) {","lastModifiedDate":"2021-10-25"},{"lineNumber":37,"author":{"gitId":"tanhuakun"},"content":"        super(FXML);","lastModifiedDate":"2021-10-25"},{"lineNumber":38,"author":{"gitId":"kvihashini"},"content":"        personViewCard \u003d new PersonViewCard(personWithDetails);","lastModifiedDate":"2021-10-25"},{"lineNumber":39,"author":{"gitId":"tanhuakun"},"content":"        schedulePanel \u003d new LessonSchedulePanel(lessonWithAttendees);","lastModifiedDate":"2021-10-25"},{"lineNumber":40,"author":{"gitId":"kvihashini"},"content":"        groupViewCard \u003d new GroupViewCard(groupWithDetails);","lastModifiedDate":"2021-10-25"},{"lineNumber":41,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":42,"author":{"gitId":"tanhuakun"},"content":"        // main logic on what to do when view type changes in model!","lastModifiedDate":"2021-10-25"},{"lineNumber":43,"author":{"gitId":"tanhuakun"},"content":"        ChangeListener\u003c? super ViewingType\u003e changeListener \u003d new ChangeListener\u003cViewingType\u003e() {","lastModifiedDate":"2021-10-25"},{"lineNumber":44,"author":{"gitId":"tanhuakun"},"content":"            @Override","lastModifiedDate":"2021-10-25"},{"lineNumber":45,"author":{"gitId":"tanhuakun"},"content":"            public void changed(ObservableValue\u003c? extends ViewingType\u003e observable,","lastModifiedDate":"2021-10-25"},{"lineNumber":46,"author":{"gitId":"tanhuakun"},"content":"                                ViewingType oldValue, ViewingType newValue) {","lastModifiedDate":"2021-10-25"},{"lineNumber":47,"author":{"gitId":"tanhuakun"},"content":"                changeOnValue(newValue);","lastModifiedDate":"2021-10-25"},{"lineNumber":48,"author":{"gitId":"tanhuakun"},"content":"            }","lastModifiedDate":"2021-10-25"},{"lineNumber":49,"author":{"gitId":"tanhuakun"},"content":"        };","lastModifiedDate":"2021-10-25"},{"lineNumber":50,"author":{"gitId":"tanhuakun"},"content":"        viewingPanel.getChildren().clear();","lastModifiedDate":"2021-10-25"},{"lineNumber":51,"author":{"gitId":"tanhuakun"},"content":"        viewingPanel.getChildren().addAll(schedulePanel.getRoot());","lastModifiedDate":"2021-10-25"},{"lineNumber":52,"author":{"gitId":"tanhuakun"},"content":"        viewType.addListener(changeListener);","lastModifiedDate":"2021-10-25"},{"lineNumber":53,"author":{"gitId":"tanhuakun"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":54,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":55,"author":{"gitId":"tanhuakun"},"content":"    /**","lastModifiedDate":"2021-10-25"},{"lineNumber":56,"author":{"gitId":"tanhuakun"},"content":"     * Changes the viewing panel depending what the current ViewingType is","lastModifiedDate":"2021-10-25"},{"lineNumber":57,"author":{"gitId":"tanhuakun"},"content":"     * @param value the current viewing type","lastModifiedDate":"2021-10-25"},{"lineNumber":58,"author":{"gitId":"tanhuakun"},"content":"     */","lastModifiedDate":"2021-10-25"},{"lineNumber":59,"author":{"gitId":"tanhuakun"},"content":"    private void changeOnValue(ViewingType value) {","lastModifiedDate":"2021-10-25"},{"lineNumber":60,"author":{"gitId":"tanhuakun"},"content":"        viewingPanel.getChildren().clear();","lastModifiedDate":"2021-10-25"},{"lineNumber":61,"author":{"gitId":"tanhuakun"},"content":"        switch(value) {","lastModifiedDate":"2021-10-25"},{"lineNumber":62,"author":{"gitId":"tanhuakun"},"content":"        case SCHEDULE:","lastModifiedDate":"2021-10-25"},{"lineNumber":63,"author":{"gitId":"tanhuakun"},"content":"            viewingPanel.getChildren().addAll(schedulePanel.getRoot());","lastModifiedDate":"2021-10-25"},{"lineNumber":64,"author":{"gitId":"tanhuakun"},"content":"            break;","lastModifiedDate":"2021-10-25"},{"lineNumber":65,"author":{"gitId":"tanhuakun"},"content":"        case PERSON:","lastModifiedDate":"2021-10-25"},{"lineNumber":66,"author":{"gitId":"tanhuakun"},"content":"            viewingPanel.getChildren().addAll(personViewCard.getRoot());","lastModifiedDate":"2021-10-25"},{"lineNumber":67,"author":{"gitId":"tanhuakun"},"content":"            break;","lastModifiedDate":"2021-10-25"},{"lineNumber":68,"author":{"gitId":"kvihashini"},"content":"        case GROUP:","lastModifiedDate":"2021-10-25"},{"lineNumber":69,"author":{"gitId":"kvihashini"},"content":"            viewingPanel.getChildren().addAll(groupViewCard.getRoot());","lastModifiedDate":"2021-10-25"},{"lineNumber":70,"author":{"gitId":"kvihashini"},"content":"            break;","lastModifiedDate":"2021-10-25"},{"lineNumber":71,"author":{"gitId":"tanhuakun"},"content":"        default:","lastModifiedDate":"2021-10-25"},{"lineNumber":72,"author":{"gitId":"tanhuakun"},"content":"            break;","lastModifiedDate":"2021-10-25"},{"lineNumber":73,"author":{"gitId":"tanhuakun"},"content":"        }","lastModifiedDate":"2021-10-25"},{"lineNumber":74,"author":{"gitId":"tanhuakun"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":75,"author":{"gitId":"tanhuakun"},"content":"}","lastModifiedDate":"2021-10-25"}],"authorContributionMap":{"kvihashini":12,"tanhuakun":63}},{"path":"src/main/resources/view/CommandBox.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.TextField?\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.StackPane?\u003e","lastModifiedDate":"2017-06-22"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":6,"author":{"gitId":"kvihashini"},"content":"\u003cStackPane style\u003d\"-fx-background-color: transparent;\" styleClass\u003d\"stack-pane\" xmlns\u003d\"http://javafx.com/javafx/16\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2021-10-13"},{"lineNumber":7,"author":{"gitId":"kvihashini"},"content":"  \u003cTextField fx:id\u003d\"commandTextField\" onAction\u003d\"#handleCommandEntered\" promptText\u003d\"Enter your command ... \" style\u003d\"-fx-background-radius: 15; -fx-background-color: #e6e6e6#e6e6e6; -fx-border-width: 0;\" /\u003e","lastModifiedDate":"2021-10-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c/StackPane\u003e","lastModifiedDate":"2017-06-22"}],"authorContributionMap":{"kvihashini":2,"-":6}},{"path":"src/main/resources/view/DarkTheme.css","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":".background {","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"kvihashini"},"content":"    -fx-background-color: red;","lastModifiedDate":"2021-10-13"},{"lineNumber":3,"author":{"gitId":"kvihashini"},"content":"    background-color: red; /* Used in the default.html file */","lastModifiedDate":"2021-10-13"},{"lineNumber":4,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":6,"author":{"gitId":"-"},"content":".label {","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Open Sans Semibold\";","lastModifiedDate":"2021-08-28"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    -fx-text-fill: #555555;","lastModifiedDate":"2016-08-15"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    -fx-opacity: 0.9;","lastModifiedDate":"2016-08-08"},{"lineNumber":11,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":".label-bright {","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Open Sans Semibold\";","lastModifiedDate":"2021-08-28"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":".label-header {","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    -fx-font-size: 32pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Open Sans Light\";","lastModifiedDate":"2021-08-28"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":".text-field {","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    -fx-font-size: 12pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Open Sans Semibold\";","lastModifiedDate":"2021-08-28"},{"lineNumber":30,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":".tab-pane {","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":".tab-pane .tab-header-area {","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    -fx-min-height: 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    -fx-max-height: 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":".table-view {","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    -fx-base: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    -fx-control-inner-background: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    -fx-table-cell-border-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    -fx-table-header-border-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    -fx-padding: 5;","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":".table-view .column-header-background {","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":".table-view .column-header, .table-view .filler {","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    -fx-size: 35;","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    -fx-border-width: 0 0 1 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    -fx-border-color:","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        transparent","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        transparent","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        derive(-fx-base, 80%)","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    -fx-border-insets: 0 10 1 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":".table-view .column-header .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    -fx-font-size: 20pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Open Sans Light\";","lastModifiedDate":"2021-08-28"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    -fx-alignment: center-left;","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    -fx-opacity: 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":".table-view:focused .table-row-cell:filled:focused:selected {","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    -fx-background-color: -fx-focus-color;","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":".split-pane:horizontal .split-pane-divider {","lastModifiedDate":"2016-08-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2017-03-02"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    -fx-border-color: transparent transparent transparent #4d4d4d;","lastModifiedDate":"2017-03-02"},{"lineNumber":82,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":84,"author":{"gitId":"-"},"content":".split-pane {","lastModifiedDate":"2016-08-15"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    -fx-border-radius: 1;","lastModifiedDate":"2016-08-15"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2016-08-15"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2016-08-15"},{"lineNumber":88,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":90,"author":{"gitId":"-"},"content":".list-view {","lastModifiedDate":"2017-03-02"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    -fx-background-insets: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    -fx-padding: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2018-01-10"},{"lineNumber":94,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":96,"author":{"gitId":"-"},"content":".list-cell {","lastModifiedDate":"2016-08-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    -fx-label-padding: 0 0 0 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    -fx-graphic-text-gap : 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":100,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":".list-cell:filled:even {","lastModifiedDate":"2017-03-02"},{"lineNumber":103,"author":{"gitId":"kvihashini"},"content":"    -fx-background-color: #d4d4d4;","lastModifiedDate":"2021-10-17"},{"lineNumber":104,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":106,"author":{"gitId":"-"},"content":".list-cell:filled:odd {","lastModifiedDate":"2017-03-02"},{"lineNumber":107,"author":{"gitId":"kvihashini"},"content":"    -fx-background-color: #cdcdcd;","lastModifiedDate":"2021-10-17"},{"lineNumber":108,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":110,"author":{"gitId":"-"},"content":".list-cell:filled:selected {","lastModifiedDate":"2017-03-02"},{"lineNumber":111,"author":{"gitId":"kvihashini"},"content":"    -fx-background-color: #a5bfc0;","lastModifiedDate":"2021-10-17"},{"lineNumber":112,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":114,"author":{"gitId":"-"},"content":".list-cell:filled:selected #cardPane {","lastModifiedDate":"2017-03-02"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    -fx-border-color: #3e7b91;","lastModifiedDate":"2017-03-02"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2017-03-02"},{"lineNumber":117,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":119,"author":{"gitId":"-"},"content":".list-cell .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":120,"author":{"gitId":"kvihashini"},"content":"    -fx-text-fill: #111111;","lastModifiedDate":"2021-10-17"},{"lineNumber":121,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":123,"author":{"gitId":"-"},"content":".cell_big_label {","lastModifiedDate":"2016-08-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Open Sans Semibold\";","lastModifiedDate":"2021-08-28"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    -fx-font-size: 16px;","lastModifiedDate":"2016-08-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    -fx-text-fill: #010504;","lastModifiedDate":"2016-08-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":".cell_small_label {","lastModifiedDate":"2016-08-08"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Open Sans Regular\";","lastModifiedDate":"2021-08-28"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    -fx-font-size: 13px;","lastModifiedDate":"2017-03-02"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    -fx-text-fill: #010504;","lastModifiedDate":"2016-08-08"},{"lineNumber":133,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":134,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":135,"author":{"gitId":"-"},"content":".stack-pane {","lastModifiedDate":"2018-04-01"},{"lineNumber":136,"author":{"gitId":"kvihashini"},"content":"     -fx-background-color: #e6e6e6;","lastModifiedDate":"2021-10-13"},{"lineNumber":137,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":138,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":139,"author":{"gitId":"-"},"content":".pane-with-border {","lastModifiedDate":"2017-05-15"},{"lineNumber":140,"author":{"gitId":"kvihashini"},"content":"     -fx-background-color: #f4f4f4;","lastModifiedDate":"2021-10-13"},{"lineNumber":141,"author":{"gitId":"kvihashini"},"content":"     -fx-border-width: 0;","lastModifiedDate":"2021-10-13"},{"lineNumber":142,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-09"},{"lineNumber":143,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":144,"author":{"gitId":"kvihashini"},"content":"/* result-display consists of feedback from system */","lastModifiedDate":"2021-10-13"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":146,"author":{"gitId":"-"},"content":".result-display {","lastModifiedDate":"2016-09-14"},{"lineNumber":147,"author":{"gitId":"kvihashini"},"content":"    -fx-border-width: 0;","lastModifiedDate":"2021-10-13"},{"lineNumber":148,"author":{"gitId":"kvihashini"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2021-10-13"},{"lineNumber":149,"author":{"gitId":"kvihashini"},"content":"    -fx-font-family: \"Open Sans\";","lastModifiedDate":"2021-10-13"},{"lineNumber":150,"author":{"gitId":"kvihashini"},"content":"    -fx-font-size: 10pt;","lastModifiedDate":"2021-10-13"},{"lineNumber":151,"author":{"gitId":"kvihashini"},"content":"    -fx-text-fill: #393939;","lastModifiedDate":"2021-10-13"},{"lineNumber":152,"author":{"gitId":"kvihashini"},"content":"}","lastModifiedDate":"2021-10-13"},{"lineNumber":153,"author":{"gitId":"kvihashini"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":154,"author":{"gitId":"kvihashini"},"content":".result-display .scroll-pane:vertical {","lastModifiedDate":"2021-10-13"},{"lineNumber":155,"author":{"gitId":"kvihashini"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2021-10-13"},{"lineNumber":156,"author":{"gitId":"kvihashini"},"content":"}","lastModifiedDate":"2021-10-13"},{"lineNumber":157,"author":{"gitId":"kvihashini"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":158,"author":{"gitId":"kvihashini"},"content":".result-display .scroll-pane:vertical .viewport {","lastModifiedDate":"2021-10-13"},{"lineNumber":159,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2017-03-02"},{"lineNumber":160,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-14"},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":162,"author":{"gitId":"-"},"content":".result-display .label {","lastModifiedDate":"2016-09-14"},{"lineNumber":163,"author":{"gitId":"-"},"content":"    -fx-text-fill: black !important;","lastModifiedDate":"2016-09-14"},{"lineNumber":164,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":165,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":166,"author":{"gitId":"kvihashini"},"content":"#resultDisplay .content {","lastModifiedDate":"2021-10-13"},{"lineNumber":167,"author":{"gitId":"kvihashini"},"content":"    -fx-background-color: #e6e6e6;","lastModifiedDate":"2021-10-13"},{"lineNumber":168,"author":{"gitId":"kvihashini"},"content":"    -fx-background-radius: 15;","lastModifiedDate":"2021-10-13"},{"lineNumber":169,"author":{"gitId":"kvihashini"},"content":"    -fx-border-width: 0;","lastModifiedDate":"2021-10-13"},{"lineNumber":170,"author":{"gitId":"kvihashini"},"content":"}","lastModifiedDate":"2021-10-13"},{"lineNumber":171,"author":{"gitId":"kvihashini"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":172,"author":{"gitId":"kvihashini"},"content":".status-bar {","lastModifiedDate":"2021-10-13"},{"lineNumber":173,"author":{"gitId":"kvihashini"},"content":"    /* Modifies the background behind file path */","lastModifiedDate":"2021-10-13"},{"lineNumber":174,"author":{"gitId":"kvihashini"},"content":"    -fx-background-color: derive(#f4f4f4, 30%);","lastModifiedDate":"2021-10-13"},{"lineNumber":175,"author":{"gitId":"kvihashini"},"content":"}","lastModifiedDate":"2021-10-13"},{"lineNumber":176,"author":{"gitId":"kvihashini"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":177,"author":{"gitId":"-"},"content":".status-bar .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":178,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Open Sans Light\";","lastModifiedDate":"2021-08-28"},{"lineNumber":179,"author":{"gitId":"kvihashini"},"content":"    -fx-text-fill: black;","lastModifiedDate":"2021-10-13"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    -fx-padding: 4px;","lastModifiedDate":"2018-12-08"},{"lineNumber":181,"author":{"gitId":"-"},"content":"    -fx-pref-height: 30px;","lastModifiedDate":"2018-12-08"},{"lineNumber":182,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":183,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":184,"author":{"gitId":"-"},"content":".status-bar-with-border {","lastModifiedDate":"2016-08-08"},{"lineNumber":185,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2016-08-15"},{"lineNumber":186,"author":{"gitId":"-"},"content":"    -fx-border-color: derive(#1d1d1d, 25%);","lastModifiedDate":"2016-08-15"},{"lineNumber":187,"author":{"gitId":"-"},"content":"    -fx-border-width: 1px;","lastModifiedDate":"2016-08-08"},{"lineNumber":188,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":190,"author":{"gitId":"-"},"content":".status-bar-with-border .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":191,"author":{"gitId":"kvihashini"},"content":"    -fx-text-fill: black;","lastModifiedDate":"2021-10-13"},{"lineNumber":192,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":193,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":194,"author":{"gitId":"-"},"content":".grid-pane {","lastModifiedDate":"2016-08-08"},{"lineNumber":195,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2016-08-15"},{"lineNumber":196,"author":{"gitId":"-"},"content":"    -fx-border-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2016-08-15"},{"lineNumber":197,"author":{"gitId":"-"},"content":"    -fx-border-width: 1px;","lastModifiedDate":"2016-08-08"},{"lineNumber":198,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":199,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":200,"author":{"gitId":"-"},"content":".grid-pane .stack-pane {","lastModifiedDate":"2018-04-01"},{"lineNumber":201,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 30%);","lastModifiedDate":"2016-08-15"},{"lineNumber":202,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":203,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":204,"author":{"gitId":"-"},"content":".context-menu {","lastModifiedDate":"2016-08-08"},{"lineNumber":205,"author":{"gitId":"kvihashini"},"content":"    -fx-background-color: #cdcdcd;","lastModifiedDate":"2021-10-13"},{"lineNumber":206,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":207,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":208,"author":{"gitId":"-"},"content":".context-menu .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":209,"author":{"gitId":"kvihashini"},"content":"    -fx-text-fill: #282828;","lastModifiedDate":"2021-10-13"},{"lineNumber":210,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":211,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":212,"author":{"gitId":"kvihashini"},"content":"/* menu bar consists of file and help */","lastModifiedDate":"2021-10-13"},{"lineNumber":213,"author":{"gitId":"kvihashini"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":214,"author":{"gitId":"-"},"content":".menu-bar {","lastModifiedDate":"2016-08-08"},{"lineNumber":215,"author":{"gitId":"kvihashini"},"content":"    -fx-background-color: #cdcdcd;","lastModifiedDate":"2021-10-13"},{"lineNumber":216,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":217,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":218,"author":{"gitId":"-"},"content":".menu-bar .label {","lastModifiedDate":"2016-08-08"},{"lineNumber":219,"author":{"gitId":"-"},"content":"    -fx-font-size: 14pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":220,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Open Sans Light\";","lastModifiedDate":"2021-08-28"},{"lineNumber":221,"author":{"gitId":"kvihashini"},"content":"    -fx-text-fill: #282828;","lastModifiedDate":"2021-10-13"},{"lineNumber":222,"author":{"gitId":"-"},"content":"    -fx-opacity: 0.9;","lastModifiedDate":"2016-08-08"},{"lineNumber":223,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":224,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":225,"author":{"gitId":"-"},"content":".menu .left-container {","lastModifiedDate":"2016-08-08"},{"lineNumber":226,"author":{"gitId":"-"},"content":"    -fx-background-color: black;","lastModifiedDate":"2016-08-08"},{"lineNumber":227,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":228,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":229,"author":{"gitId":"-"},"content":"/*","lastModifiedDate":"2016-08-08"},{"lineNumber":230,"author":{"gitId":"-"},"content":" * Metro style Push Button","lastModifiedDate":"2016-08-08"},{"lineNumber":231,"author":{"gitId":"-"},"content":" * Author: Pedro Duque Vieira","lastModifiedDate":"2016-08-08"},{"lineNumber":232,"author":{"gitId":"-"},"content":" * http://pixelduke.wordpress.com/2012/10/23/jmetro-windows-8-controls-on-java/","lastModifiedDate":"2016-08-08"},{"lineNumber":233,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":234,"author":{"gitId":"-"},"content":".button {","lastModifiedDate":"2016-08-08"},{"lineNumber":235,"author":{"gitId":"-"},"content":"    -fx-padding: 5 22 5 22;","lastModifiedDate":"2016-08-08"},{"lineNumber":236,"author":{"gitId":"-"},"content":"    -fx-border-color: #e2e2e2;","lastModifiedDate":"2016-08-08"},{"lineNumber":237,"author":{"gitId":"-"},"content":"    -fx-border-width: 2;","lastModifiedDate":"2016-08-08"},{"lineNumber":238,"author":{"gitId":"-"},"content":"    -fx-background-radius: 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":239,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":240,"author":{"gitId":"-"},"content":"    -fx-font-family: \"Open Sans Regular\";","lastModifiedDate":"2021-08-28"},{"lineNumber":241,"author":{"gitId":"-"},"content":"    -fx-font-size: 11pt;","lastModifiedDate":"2016-08-08"},{"lineNumber":242,"author":{"gitId":"-"},"content":"    -fx-text-fill: #d8d8d8;","lastModifiedDate":"2016-08-08"},{"lineNumber":243,"author":{"gitId":"-"},"content":"    -fx-background-insets: 0 0 0 0, 0, 1, 2;","lastModifiedDate":"2016-08-08"},{"lineNumber":244,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":245,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":246,"author":{"gitId":"-"},"content":".button:hover {","lastModifiedDate":"2016-08-08"},{"lineNumber":247,"author":{"gitId":"-"},"content":"    -fx-background-color: #3a3a3a;","lastModifiedDate":"2016-08-08"},{"lineNumber":248,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":249,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":250,"author":{"gitId":"-"},"content":".button:pressed, .button:default:hover:pressed {","lastModifiedDate":"2016-08-08"},{"lineNumber":251,"author":{"gitId":"-"},"content":"  -fx-background-color: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":252,"author":{"gitId":"-"},"content":"  -fx-text-fill: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":253,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":254,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":255,"author":{"gitId":"-"},"content":".button:focused {","lastModifiedDate":"2016-08-08"},{"lineNumber":256,"author":{"gitId":"-"},"content":"    -fx-border-color: white, white;","lastModifiedDate":"2016-08-08"},{"lineNumber":257,"author":{"gitId":"-"},"content":"    -fx-border-width: 1, 1;","lastModifiedDate":"2016-08-08"},{"lineNumber":258,"author":{"gitId":"-"},"content":"    -fx-border-style: solid, segments(1, 1);","lastModifiedDate":"2016-08-08"},{"lineNumber":259,"author":{"gitId":"-"},"content":"    -fx-border-radius: 0, 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":260,"author":{"gitId":"-"},"content":"    -fx-border-insets: 1 1 1 1, 0;","lastModifiedDate":"2016-08-08"},{"lineNumber":261,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":262,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":263,"author":{"gitId":"-"},"content":".button:disabled, .button:default:disabled {","lastModifiedDate":"2016-08-08"},{"lineNumber":264,"author":{"gitId":"-"},"content":"    -fx-opacity: 0.4;","lastModifiedDate":"2016-08-08"},{"lineNumber":265,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":266,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":267,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":268,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":269,"author":{"gitId":"-"},"content":".button:default {","lastModifiedDate":"2016-08-08"},{"lineNumber":270,"author":{"gitId":"-"},"content":"    -fx-background-color: -fx-focus-color;","lastModifiedDate":"2016-08-08"},{"lineNumber":271,"author":{"gitId":"-"},"content":"    -fx-text-fill: #ffffff;","lastModifiedDate":"2016-08-08"},{"lineNumber":272,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":273,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":274,"author":{"gitId":"-"},"content":".button:default:hover {","lastModifiedDate":"2016-08-08"},{"lineNumber":275,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(-fx-focus-color, 30%);","lastModifiedDate":"2016-08-08"},{"lineNumber":276,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":277,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":278,"author":{"gitId":"-"},"content":".dialog-pane {","lastModifiedDate":"2016-08-08"},{"lineNumber":279,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":280,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":281,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":282,"author":{"gitId":"-"},"content":".dialog-pane \u003e *.button-bar \u003e *.container {","lastModifiedDate":"2016-08-08"},{"lineNumber":283,"author":{"gitId":"-"},"content":"    -fx-background-color: #1d1d1d;","lastModifiedDate":"2016-08-15"},{"lineNumber":284,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":285,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":286,"author":{"gitId":"-"},"content":".dialog-pane \u003e *.label.content {","lastModifiedDate":"2016-08-08"},{"lineNumber":287,"author":{"gitId":"-"},"content":"    -fx-font-size: 14px;","lastModifiedDate":"2016-08-08"},{"lineNumber":288,"author":{"gitId":"-"},"content":"    -fx-font-weight: bold;","lastModifiedDate":"2016-08-08"},{"lineNumber":289,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":290,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":291,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":292,"author":{"gitId":"-"},"content":".dialog-pane:header *.header-panel {","lastModifiedDate":"2016-08-08"},{"lineNumber":293,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 25%);","lastModifiedDate":"2016-08-15"},{"lineNumber":294,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":295,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":296,"author":{"gitId":"-"},"content":".dialog-pane:header *.header-panel *.label {","lastModifiedDate":"2016-08-08"},{"lineNumber":297,"author":{"gitId":"-"},"content":"    -fx-font-size: 18px;","lastModifiedDate":"2016-08-08"},{"lineNumber":298,"author":{"gitId":"-"},"content":"    -fx-font-style: italic;","lastModifiedDate":"2016-08-08"},{"lineNumber":299,"author":{"gitId":"-"},"content":"    -fx-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":300,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-08-08"},{"lineNumber":301,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":302,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":303,"author":{"gitId":"-"},"content":".scroll-bar {","lastModifiedDate":"2017-03-02"},{"lineNumber":304,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 20%);","lastModifiedDate":"2017-03-02"},{"lineNumber":305,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":306,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":307,"author":{"gitId":"-"},"content":".scroll-bar .thumb {","lastModifiedDate":"2016-08-15"},{"lineNumber":308,"author":{"gitId":"-"},"content":"    -fx-background-color: derive(#1d1d1d, 50%);","lastModifiedDate":"2016-08-15"},{"lineNumber":309,"author":{"gitId":"-"},"content":"    -fx-background-insets: 3;","lastModifiedDate":"2016-08-15"},{"lineNumber":310,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":311,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":312,"author":{"gitId":"-"},"content":".scroll-bar .increment-button, .scroll-bar .decrement-button {","lastModifiedDate":"2016-08-15"},{"lineNumber":313,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-15"},{"lineNumber":314,"author":{"gitId":"-"},"content":"    -fx-padding: 0 0 0 0;","lastModifiedDate":"2016-08-15"},{"lineNumber":315,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":316,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":317,"author":{"gitId":"-"},"content":".scroll-bar .increment-arrow, .scroll-bar .decrement-arrow {","lastModifiedDate":"2016-08-15"},{"lineNumber":318,"author":{"gitId":"-"},"content":"    -fx-shape: \" \";","lastModifiedDate":"2016-08-15"},{"lineNumber":319,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"},{"lineNumber":320,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":321,"author":{"gitId":"-"},"content":".scroll-bar:vertical .increment-arrow, .scroll-bar:vertical .decrement-arrow {","lastModifiedDate":"2016-08-18"},{"lineNumber":322,"author":{"gitId":"-"},"content":"    -fx-padding: 1 8 1 8;","lastModifiedDate":"2016-08-15"},{"lineNumber":323,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-15"},{"lineNumber":324,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-15"},{"lineNumber":325,"author":{"gitId":"-"},"content":".scroll-bar:horizontal .increment-arrow, .scroll-bar:horizontal .decrement-arrow {","lastModifiedDate":"2016-08-18"},{"lineNumber":326,"author":{"gitId":"-"},"content":"    -fx-padding: 8 1 8 1;","lastModifiedDate":"2016-08-18"},{"lineNumber":327,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-18"},{"lineNumber":328,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-18"},{"lineNumber":329,"author":{"gitId":"-"},"content":"#cardPane {","lastModifiedDate":"2016-08-08"},{"lineNumber":330,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent;","lastModifiedDate":"2016-08-08"},{"lineNumber":331,"author":{"gitId":"-"},"content":"    -fx-border-width: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":332,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":333,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":334,"author":{"gitId":"-"},"content":"#commandTypeLabel {","lastModifiedDate":"2016-08-08"},{"lineNumber":335,"author":{"gitId":"-"},"content":"    -fx-font-size: 11px;","lastModifiedDate":"2016-08-08"},{"lineNumber":336,"author":{"gitId":"-"},"content":"    -fx-text-fill: #F70D1A;","lastModifiedDate":"2016-08-08"},{"lineNumber":337,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":338,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":339,"author":{"gitId":"-"},"content":"#commandTextField {","lastModifiedDate":"2017-03-02"},{"lineNumber":340,"author":{"gitId":"-"},"content":"    -fx-background-color: transparent #383838 transparent #383838;","lastModifiedDate":"2017-03-02"},{"lineNumber":341,"author":{"gitId":"-"},"content":"    -fx-background-insets: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":342,"author":{"gitId":"-"},"content":"    -fx-border-color: #383838 #383838 #ffffff #383838;","lastModifiedDate":"2017-03-02"},{"lineNumber":343,"author":{"gitId":"-"},"content":"    -fx-border-insets: 0;","lastModifiedDate":"2017-03-02"},{"lineNumber":344,"author":{"gitId":"-"},"content":"    -fx-border-width: 1;","lastModifiedDate":"2017-03-02"},{"lineNumber":345,"author":{"gitId":"kvihashini"},"content":"    -fx-font-family: \"Open Sans\";","lastModifiedDate":"2021-10-13"},{"lineNumber":346,"author":{"gitId":"-"},"content":"    -fx-font-size: 13pt;","lastModifiedDate":"2017-03-02"},{"lineNumber":347,"author":{"gitId":"kvihashini"},"content":"    -fx-text-fill: black;","lastModifiedDate":"2021-10-13"},{"lineNumber":348,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-03-02"},{"lineNumber":349,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":350,"author":{"gitId":"-"},"content":"#filterField, #personListPanel, #personWebpage {","lastModifiedDate":"2016-08-15"},{"lineNumber":351,"author":{"gitId":"-"},"content":"    -fx-effect: innershadow(gaussian, black, 10, 0, 0, 0);","lastModifiedDate":"2016-08-15"},{"lineNumber":352,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"},{"lineNumber":353,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":354,"author":{"gitId":"kvihashini"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":355,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-02"},{"lineNumber":356,"author":{"gitId":"-"},"content":"#tags {","lastModifiedDate":"2016-12-18"},{"lineNumber":357,"author":{"gitId":"-"},"content":"    -fx-hgap: 7;","lastModifiedDate":"2016-12-18"},{"lineNumber":358,"author":{"gitId":"-"},"content":"    -fx-vgap: 3;","lastModifiedDate":"2016-12-18"},{"lineNumber":359,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-18"},{"lineNumber":360,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-18"},{"lineNumber":361,"author":{"gitId":"-"},"content":"#tags .label {","lastModifiedDate":"2016-12-18"},{"lineNumber":362,"author":{"gitId":"-"},"content":"    -fx-text-fill: white;","lastModifiedDate":"2016-12-18"},{"lineNumber":363,"author":{"gitId":"-"},"content":"    -fx-background-color: #3e7b91;","lastModifiedDate":"2017-03-02"},{"lineNumber":364,"author":{"gitId":"-"},"content":"    -fx-padding: 1 3 1 3;","lastModifiedDate":"2016-12-18"},{"lineNumber":365,"author":{"gitId":"-"},"content":"    -fx-border-radius: 2;","lastModifiedDate":"2016-12-18"},{"lineNumber":366,"author":{"gitId":"-"},"content":"    -fx-background-radius: 2;","lastModifiedDate":"2016-12-18"},{"lineNumber":367,"author":{"gitId":"-"},"content":"    -fx-font-size: 11;","lastModifiedDate":"2016-12-18"},{"lineNumber":368,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-18"},{"lineNumber":369,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":370,"author":{"gitId":"tanhuakun"},"content":"#attendees {","lastModifiedDate":"2021-10-24"},{"lineNumber":371,"author":{"gitId":"tanhuakun"},"content":"    -fx-hgap: 4;","lastModifiedDate":"2021-10-24"},{"lineNumber":372,"author":{"gitId":"tanhuakun"},"content":"    -fx-vgap: 3;","lastModifiedDate":"2021-10-24"},{"lineNumber":373,"author":{"gitId":"tanhuakun"},"content":"}","lastModifiedDate":"2021-10-24"},{"lineNumber":374,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":375,"author":{"gitId":"tanhuakun"},"content":"#attendees .label {","lastModifiedDate":"2021-10-24"},{"lineNumber":376,"author":{"gitId":"tanhuakun"},"content":"    -fx-text-fill: black;","lastModifiedDate":"2021-11-04"},{"lineNumber":377,"author":{"gitId":"tanhuakun"},"content":"    -fx-background-color: #38b54f;","lastModifiedDate":"2021-10-24"},{"lineNumber":378,"author":{"gitId":"tanhuakun"},"content":"    -fx-padding: 1 3 1 3;","lastModifiedDate":"2021-10-24"},{"lineNumber":379,"author":{"gitId":"tanhuakun"},"content":"    -fx-border-radius: 2;","lastModifiedDate":"2021-10-24"},{"lineNumber":380,"author":{"gitId":"tanhuakun"},"content":"    -fx-background-radius: 2;","lastModifiedDate":"2021-10-24"},{"lineNumber":381,"author":{"gitId":"tanhuakun"},"content":"    -fx-font-size: 13;","lastModifiedDate":"2021-11-05"},{"lineNumber":382,"author":{"gitId":"tanhuakun"},"content":"}","lastModifiedDate":"2021-10-24"},{"lineNumber":383,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":384,"author":{"gitId":"tanhuakun"},"content":"#personBox .label {","lastModifiedDate":"2021-10-26"},{"lineNumber":385,"author":{"gitId":"tanhuakun"},"content":"    -fx-font-family: \"Open Sans Regular\";","lastModifiedDate":"2021-10-26"},{"lineNumber":386,"author":{"gitId":"tanhuakun"},"content":"    -fx-font-size: 13px;","lastModifiedDate":"2021-10-26"},{"lineNumber":387,"author":{"gitId":"tanhuakun"},"content":"    -fx-text-fill: #010504;","lastModifiedDate":"2021-10-26"},{"lineNumber":388,"author":{"gitId":"tanhuakun"},"content":"}","lastModifiedDate":"2021-10-26"},{"lineNumber":389,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":390,"author":{"gitId":"tanhuakun"},"content":"#personScroll {","lastModifiedDate":"2021-11-05"},{"lineNumber":391,"author":{"gitId":"tanhuakun"},"content":"    -fx-background: #e6eaf0;","lastModifiedDate":"2021-11-05"},{"lineNumber":392,"author":{"gitId":"tanhuakun"},"content":"}","lastModifiedDate":"2021-11-05"},{"lineNumber":393,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":394,"author":{"gitId":"tanhuakun"},"content":"#panelHeader {","lastModifiedDate":"2021-11-05"},{"lineNumber":395,"author":{"gitId":"tanhuakun"},"content":"    -fx-font-size : 15;","lastModifiedDate":"2021-11-05"},{"lineNumber":396,"author":{"gitId":"tanhuakun"},"content":"    -fx-font-weight: bold;","lastModifiedDate":"2021-11-05"},{"lineNumber":397,"author":{"gitId":"tanhuakun"},"content":"}","lastModifiedDate":"2021-11-04"}],"authorContributionMap":{"kvihashini":44,"tanhuakun":29,"-":324}},{"path":"src/main/resources/view/GroupListCard.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kvihashini"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2021-10-17"},{"lineNumber":2,"author":{"gitId":"kvihashini"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":3,"author":{"gitId":"kvihashini"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2021-10-17"},{"lineNumber":4,"author":{"gitId":"kvihashini"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2021-10-17"},{"lineNumber":5,"author":{"gitId":"kvihashini"},"content":"\u003c?import javafx.scene.layout.ColumnConstraints?\u003e","lastModifiedDate":"2021-10-17"},{"lineNumber":6,"author":{"gitId":"kvihashini"},"content":"\u003c?import javafx.scene.layout.GridPane?\u003e","lastModifiedDate":"2021-10-17"},{"lineNumber":7,"author":{"gitId":"kvihashini"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2021-10-17"},{"lineNumber":8,"author":{"gitId":"kvihashini"},"content":"\u003c?import javafx.scene.layout.Region?\u003e","lastModifiedDate":"2021-10-17"},{"lineNumber":9,"author":{"gitId":"kvihashini"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2021-10-17"},{"lineNumber":10,"author":{"gitId":"kvihashini"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":11,"author":{"gitId":"kvihashini"},"content":"\u003cHBox id\u003d\"cardPane\" fx:id\u003d\"cardPane\" xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2021-10-17"},{"lineNumber":12,"author":{"gitId":"kvihashini"},"content":"    \u003cGridPane HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2021-10-17"},{"lineNumber":13,"author":{"gitId":"kvihashini"},"content":"        \u003ccolumnConstraints\u003e","lastModifiedDate":"2021-10-17"},{"lineNumber":14,"author":{"gitId":"kvihashini"},"content":"            \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10\" prefWidth\u003d\"150\" /\u003e","lastModifiedDate":"2021-10-17"},{"lineNumber":15,"author":{"gitId":"kvihashini"},"content":"        \u003c/columnConstraints\u003e","lastModifiedDate":"2021-10-17"},{"lineNumber":16,"author":{"gitId":"kvihashini"},"content":"        \u003cVBox alignment\u003d\"CENTER_LEFT\" minHeight\u003d\"105\" GridPane.columnIndex\u003d\"0\"\u003e","lastModifiedDate":"2021-10-17"},{"lineNumber":17,"author":{"gitId":"kvihashini"},"content":"            \u003cpadding\u003e","lastModifiedDate":"2021-10-17"},{"lineNumber":18,"author":{"gitId":"kvihashini"},"content":"                \u003cInsets top\u003d\"5\" right\u003d\"5\" bottom\u003d\"5\" left\u003d\"15\" /\u003e","lastModifiedDate":"2021-10-17"},{"lineNumber":19,"author":{"gitId":"kvihashini"},"content":"            \u003c/padding\u003e","lastModifiedDate":"2021-10-17"},{"lineNumber":20,"author":{"gitId":"kvihashini"},"content":"            \u003cHBox spacing\u003d\"5\" alignment\u003d\"CENTER_LEFT\"\u003e","lastModifiedDate":"2021-10-17"},{"lineNumber":21,"author":{"gitId":"kvihashini"},"content":"                \u003cLabel fx:id\u003d\"id\" styleClass\u003d\"cell_big_label\"\u003e","lastModifiedDate":"2021-10-17"},{"lineNumber":22,"author":{"gitId":"kvihashini"},"content":"                    \u003cminWidth\u003e","lastModifiedDate":"2021-10-17"},{"lineNumber":23,"author":{"gitId":"kvihashini"},"content":"                        \u003c!-- Ensures that the label text is never truncated --\u003e","lastModifiedDate":"2021-10-17"},{"lineNumber":24,"author":{"gitId":"kvihashini"},"content":"                        \u003cRegion fx:constant\u003d\"USE_PREF_SIZE\" /\u003e","lastModifiedDate":"2021-10-17"},{"lineNumber":25,"author":{"gitId":"kvihashini"},"content":"                    \u003c/minWidth\u003e","lastModifiedDate":"2021-10-17"},{"lineNumber":26,"author":{"gitId":"kvihashini"},"content":"                \u003c/Label\u003e","lastModifiedDate":"2021-10-17"},{"lineNumber":27,"author":{"gitId":"kvihashini"},"content":"                \u003cLabel fx:id\u003d\"name\" text\u003d\"\\$first\" styleClass\u003d\"cell_big_label\" /\u003e","lastModifiedDate":"2021-10-17"},{"lineNumber":28,"author":{"gitId":"kvihashini"},"content":"            \u003c/HBox\u003e","lastModifiedDate":"2021-10-17"},{"lineNumber":29,"author":{"gitId":"kvihashini"},"content":"        \u003c/VBox\u003e","lastModifiedDate":"2021-10-17"},{"lineNumber":30,"author":{"gitId":"kvihashini"},"content":"    \u003c/GridPane\u003e","lastModifiedDate":"2021-10-17"},{"lineNumber":31,"author":{"gitId":"kvihashini"},"content":"\u003c/HBox\u003e","lastModifiedDate":"2021-10-17"}],"authorContributionMap":{"kvihashini":31}},{"path":"src/main/resources/view/GroupListPanel.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kvihashini"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2021-10-17"},{"lineNumber":2,"author":{"gitId":"kvihashini"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":3,"author":{"gitId":"kvihashini"},"content":"\u003c?import javafx.scene.control.ListView?\u003e","lastModifiedDate":"2021-10-17"},{"lineNumber":4,"author":{"gitId":"kvihashini"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2021-10-17"},{"lineNumber":5,"author":{"gitId":"tanhuakun"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2021-11-05"},{"lineNumber":6,"author":{"gitId":"kvihashini"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":7,"author":{"gitId":"kvihashini"},"content":"\u003cVBox prefHeight\u003d\"202.0\" prefWidth\u003d\"248.0\" xmlns\u003d\"http://javafx.com/javafx/16\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2021-10-17"},{"lineNumber":8,"author":{"gitId":"tanhuakun"},"content":"    \u003cLabel id\u003d\"panelHeader\" text\u003d\"Groups\" maxWidth\u003d\"Infinity\" alignment\u003d\"CENTER\"/\u003e","lastModifiedDate":"2021-11-05"},{"lineNumber":9,"author":{"gitId":"kvihashini"},"content":"    \u003cListView fx:id\u003d\"groupListView\" VBox.vgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2021-10-17"},{"lineNumber":10,"author":{"gitId":"kvihashini"},"content":"\u003c/VBox\u003e","lastModifiedDate":"2021-10-17"}],"authorContributionMap":{"kvihashini":8,"tanhuakun":2}},{"path":"src/main/resources/view/GroupViewCard.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kvihashini"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2021-10-25"},{"lineNumber":2,"author":{"gitId":"kvihashini"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":3,"author":{"gitId":"kvihashini"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2021-10-25"},{"lineNumber":4,"author":{"gitId":"kvihashini"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2021-10-25"},{"lineNumber":5,"author":{"gitId":"kvihashini"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2021-10-25"},{"lineNumber":6,"author":{"gitId":"kvihashini"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2021-11-07"},{"lineNumber":7,"author":{"gitId":"kvihashini"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":8,"author":{"gitId":"kvihashini"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2021-11-07"},{"lineNumber":9,"author":{"gitId":"tanhuakun"},"content":"\u003cVBox id\u003d\"cardPane\" fx:id\u003d\"cardPane\" xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2021-11-05"},{"lineNumber":10,"author":{"gitId":"tanhuakun"},"content":"    \u003cLabel id\u003d\"panelHeader\" text\u003d\"Group\" maxWidth\u003d\"Infinity\" alignment\u003d\"CENTER\"/\u003e","lastModifiedDate":"2021-11-05"},{"lineNumber":11,"author":{"gitId":"kvihashini"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":12,"author":{"gitId":"kvihashini"},"content":"    \u003cScrollPane id\u003d\"groupScroll\" fx:id\u003d\"groupScroll\" VBox.vgrow\u003d\"ALWAYS\" prefWidth\u003d\"300\"\u003e","lastModifiedDate":"2021-11-07"},{"lineNumber":13,"author":{"gitId":"kvihashini"},"content":"        \u003cVBox id\u003d\"groupBox\" fx:id\u003d\"groupBox\" alignment\u003d\"TOP_LEFT\" minHeight\u003d\"400\" prefWidth\u003d\"300\" maxWidth\u003d\"Infinity\"\u003e","lastModifiedDate":"2021-11-07"},{"lineNumber":14,"author":{"gitId":"kvihashini"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":15,"author":{"gitId":"kvihashini"},"content":"            \u003cpadding\u003e","lastModifiedDate":"2021-10-25"},{"lineNumber":16,"author":{"gitId":"kvihashini"},"content":"                \u003cInsets top\u003d\"5\" right\u003d\"5\" bottom\u003d\"5\" left\u003d\"15\" /\u003e","lastModifiedDate":"2021-10-25"},{"lineNumber":17,"author":{"gitId":"kvihashini"},"content":"            \u003c/padding\u003e","lastModifiedDate":"2021-10-25"},{"lineNumber":18,"author":{"gitId":"kvihashini"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":19,"author":{"gitId":"kvihashini"},"content":"            \u003cHBox spacing\u003d\"5\" alignment\u003d\"CENTER_LEFT\"\u003e","lastModifiedDate":"2021-10-25"},{"lineNumber":20,"author":{"gitId":"kvihashini"},"content":"                \u003cLabel fx:id\u003d\"name\" text\u003d\"\\$first\" styleClass\u003d\"cell_big_label\" /\u003e","lastModifiedDate":"2021-10-25"},{"lineNumber":21,"author":{"gitId":"kvihashini"},"content":"            \u003c/HBox\u003e","lastModifiedDate":"2021-10-25"},{"lineNumber":22,"author":{"gitId":"kvihashini"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":23,"author":{"gitId":"kvihashini"},"content":"            \u003cLabel fx:id\u003d\"personsLabel\" styleClass\u003d\"cell_small_label\" text\u003d\"Students: \"/\u003e","lastModifiedDate":"2021-11-06"},{"lineNumber":24,"author":{"gitId":"kvihashini"},"content":"            \u003cVBox fx:id\u003d\"persons\"/\u003e","lastModifiedDate":"2021-11-06"},{"lineNumber":25,"author":{"gitId":"kvihashini"},"content":"            \u003cLabel text\u003d\"\" styleClass\u003d\"cell_small_label\"/\u003e \u003c!--empty row!--\u003e","lastModifiedDate":"2021-11-06"},{"lineNumber":26,"author":{"gitId":"kvihashini"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":27,"author":{"gitId":"kvihashini"},"content":"            \u003cLabel fx:id\u003d\"lessonsLabel\"  styleClass\u003d\"cell_small_label\" text\u003d\"Group Lessons:\"/\u003e","lastModifiedDate":"2021-11-06"},{"lineNumber":28,"author":{"gitId":"kvihashini"},"content":"            \u003cVBox fx:id\u003d\"lessons\"/\u003e","lastModifiedDate":"2021-11-06"},{"lineNumber":29,"author":{"gitId":"kvihashini"},"content":"            \u003cLabel text\u003d\"\" styleClass\u003d\"cell_small_label\"/\u003e \u003c!--empty row!--\u003e","lastModifiedDate":"2021-11-06"},{"lineNumber":30,"author":{"gitId":"kvihashini"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":31,"author":{"gitId":"kvihashini"},"content":"            \u003cLabel fx:id\u003d\"tasksLabel\"  styleClass\u003d\"cell_small_label\" text\u003d\"Group Tasks:\"/\u003e","lastModifiedDate":"2021-11-06"},{"lineNumber":32,"author":{"gitId":"kvihashini"},"content":"            \u003cVBox fx:id\u003d\"tasks\"/\u003e","lastModifiedDate":"2021-11-06"},{"lineNumber":33,"author":{"gitId":"kvihashini"},"content":"            \u003cLabel text\u003d\"\" styleClass\u003d\"cell_small_label\"/\u003e \u003c!--empty row!--\u003e","lastModifiedDate":"2021-11-06"},{"lineNumber":34,"author":{"gitId":"kvihashini"},"content":"        \u003c/VBox\u003e","lastModifiedDate":"2021-10-25"},{"lineNumber":35,"author":{"gitId":"kvihashini"},"content":"    \u003c/ScrollPane\u003e","lastModifiedDate":"2021-11-07"},{"lineNumber":36,"author":{"gitId":"tanhuakun"},"content":"\u003c/VBox\u003e","lastModifiedDate":"2021-11-05"}],"authorContributionMap":{"kvihashini":33,"tanhuakun":3}},{"path":"src/main/resources/view/LessonScheduleCard.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tanhuakun"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2021-10-20"},{"lineNumber":2,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":3,"author":{"gitId":"tanhuakun"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2021-10-20"},{"lineNumber":4,"author":{"gitId":"tanhuakun"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2021-10-20"},{"lineNumber":5,"author":{"gitId":"tanhuakun"},"content":"\u003c?import javafx.scene.layout.ColumnConstraints?\u003e","lastModifiedDate":"2021-10-20"},{"lineNumber":6,"author":{"gitId":"tanhuakun"},"content":"\u003c?import javafx.scene.layout.FlowPane?\u003e","lastModifiedDate":"2021-10-20"},{"lineNumber":7,"author":{"gitId":"tanhuakun"},"content":"\u003c?import javafx.scene.layout.GridPane?\u003e","lastModifiedDate":"2021-10-20"},{"lineNumber":8,"author":{"gitId":"tanhuakun"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2021-10-20"},{"lineNumber":9,"author":{"gitId":"tanhuakun"},"content":"\u003c?import javafx.scene.layout.Region?\u003e","lastModifiedDate":"2021-10-20"},{"lineNumber":10,"author":{"gitId":"tanhuakun"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2021-10-20"},{"lineNumber":11,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":12,"author":{"gitId":"tanhuakun"},"content":"\u003cHBox id\u003d\"cardPane\" fx:id\u003d\"cardPane\" xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2021-10-20"},{"lineNumber":13,"author":{"gitId":"tanhuakun"},"content":"    \u003cGridPane HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2021-10-20"},{"lineNumber":14,"author":{"gitId":"tanhuakun"},"content":"        \u003ccolumnConstraints\u003e","lastModifiedDate":"2021-10-20"},{"lineNumber":15,"author":{"gitId":"tanhuakun"},"content":"            \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10\" prefWidth\u003d\"150\" /\u003e","lastModifiedDate":"2021-10-20"},{"lineNumber":16,"author":{"gitId":"tanhuakun"},"content":"        \u003c/columnConstraints\u003e","lastModifiedDate":"2021-10-20"},{"lineNumber":17,"author":{"gitId":"tanhuakun"},"content":"        \u003cVBox alignment\u003d\"CENTER_LEFT\" minHeight\u003d\"105\" GridPane.columnIndex\u003d\"0\"\u003e","lastModifiedDate":"2021-10-20"},{"lineNumber":18,"author":{"gitId":"tanhuakun"},"content":"            \u003cpadding\u003e","lastModifiedDate":"2021-10-20"},{"lineNumber":19,"author":{"gitId":"tanhuakun"},"content":"                \u003cInsets top\u003d\"5\" right\u003d\"5\" bottom\u003d\"5\" left\u003d\"15\" /\u003e","lastModifiedDate":"2021-10-20"},{"lineNumber":20,"author":{"gitId":"tanhuakun"},"content":"            \u003c/padding\u003e","lastModifiedDate":"2021-10-20"},{"lineNumber":21,"author":{"gitId":"tanhuakun"},"content":"            \u003cHBox spacing\u003d\"5\" alignment\u003d\"CENTER_LEFT\"\u003e","lastModifiedDate":"2021-10-20"},{"lineNumber":22,"author":{"gitId":"tanhuakun"},"content":"                \u003cLabel fx:id\u003d\"details\" text\u003d\"\\$first\" styleClass\u003d\"cell_big_label\" /\u003e","lastModifiedDate":"2021-10-20"},{"lineNumber":23,"author":{"gitId":"tanhuakun"},"content":"            \u003c/HBox\u003e","lastModifiedDate":"2021-10-20"},{"lineNumber":24,"author":{"gitId":"tanhuakun"},"content":"            \u003cFlowPane fx:id\u003d\"attendees\" /\u003e","lastModifiedDate":"2021-10-20"},{"lineNumber":25,"author":{"gitId":"tanhuakun"},"content":"        \u003c/VBox\u003e","lastModifiedDate":"2021-10-20"},{"lineNumber":26,"author":{"gitId":"tanhuakun"},"content":"    \u003c/GridPane\u003e","lastModifiedDate":"2021-10-20"},{"lineNumber":27,"author":{"gitId":"tanhuakun"},"content":"\u003c/HBox\u003e","lastModifiedDate":"2021-10-20"}],"authorContributionMap":{"tanhuakun":27}},{"path":"src/main/resources/view/LessonScheduleList.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tanhuakun"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2021-10-20"},{"lineNumber":2,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":3,"author":{"gitId":"tanhuakun"},"content":"\u003c?import javafx.scene.control.ListView?\u003e","lastModifiedDate":"2021-10-20"},{"lineNumber":4,"author":{"gitId":"tanhuakun"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2021-10-20"},{"lineNumber":5,"author":{"gitId":"tanhuakun"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2021-11-05"},{"lineNumber":6,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":7,"author":{"gitId":"tanhuakun"},"content":"\u003cVBox xmlns\u003d\"http://javafx.com/javafx/16\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2021-10-20"},{"lineNumber":8,"author":{"gitId":"tanhuakun"},"content":"    \u003cLabel id\u003d\"panelHeader\" text\u003d\"Schedule\" maxWidth\u003d\"Infinity\" alignment\u003d\"CENTER\"/\u003e","lastModifiedDate":"2021-11-05"},{"lineNumber":9,"author":{"gitId":"tanhuakun"},"content":"    \u003cListView fx:id\u003d\"lessonScheduleView\" VBox.vgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2021-10-20"},{"lineNumber":10,"author":{"gitId":"tanhuakun"},"content":"\u003c/VBox\u003e","lastModifiedDate":"2021-10-20"}],"authorContributionMap":{"tanhuakun":10}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import java.net.URL?\u003e","lastModifiedDate":"2016-08-26"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.Scene?\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":6,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.Menu?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":7,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.MenuBar?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.MenuItem?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.image.Image?\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":10,"author":{"gitId":"kvihashini"},"content":"\u003c?import javafx.scene.layout.BorderPane?\u003e","lastModifiedDate":"2021-10-13"},{"lineNumber":11,"author":{"gitId":"kvihashini"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2021-11-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.StackPane?\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":14,"author":{"gitId":"kvihashini"},"content":"\u003c?import javafx.stage.Stage?\u003e","lastModifiedDate":"2021-10-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":16,"author":{"gitId":"kvihashini"},"content":"\u003cfx:root minHeight\u003d\"600\" minWidth\u003d\"450\" onCloseRequest\u003d\"#handleExit\" title\u003d\"TutorMaster\" type\u003d\"javafx.stage.Stage\" xmlns\u003d\"http://javafx.com/javafx/16\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2021-10-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"  \u003cicons\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    \u003cImage url\u003d\"@/images/address_book_32.png\" /\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":19,"author":{"gitId":"-"},"content":"  \u003c/icons\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":20,"author":{"gitId":"-"},"content":"  \u003cscene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    \u003cScene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":22,"author":{"gitId":"-"},"content":"      \u003cstylesheets\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        \u003cURL value\u003d\"@Fonts.css\" /\u003e","lastModifiedDate":"2021-08-28"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        \u003cURL value\u003d\"@DarkTheme.css\" /\u003e","lastModifiedDate":"2016-08-20"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        \u003cURL value\u003d\"@Extensions.css\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"      \u003c/stylesheets\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":28,"author":{"gitId":"-"},"content":"      \u003cVBox\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        \u003cMenuBar fx:id\u003d\"menuBar\" VBox.vgrow\u003d\"NEVER\"\u003e","lastModifiedDate":"2017-06-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"          \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"File\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"            \u003cMenuItem mnemonicParsing\u003d\"false\" onAction\u003d\"#handleExit\" text\u003d\"Exit\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"          \u003c/Menu\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"          \u003cMenu mnemonicParsing\u003d\"false\" text\u003d\"Help\"\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            \u003cMenuItem fx:id\u003d\"helpMenuItem\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleHelp\" text\u003d\"Help\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"          \u003c/Menu\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        \u003c/MenuBar\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":38,"author":{"gitId":"kvihashini"},"content":"        \u003cStackPane fx:id\u003d\"commandBoxPlaceholder\" styleClass\u003d\"pane-with-border\" VBox.vgrow\u003d\"NEVER\"\u003e","lastModifiedDate":"2021-10-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"          \u003cpadding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":40,"author":{"gitId":"kvihashini"},"content":"            \u003cInsets bottom\u003d\"10\" left\u003d\"10\" right\u003d\"10\" top\u003d\"10\" /\u003e","lastModifiedDate":"2021-10-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"          \u003c/padding\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        \u003c/StackPane\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        \u003cStackPane VBox.vgrow\u003d\"NEVER\" fx:id\u003d\"resultDisplayPlaceholder\" styleClass\u003d\"pane-with-border\"","lastModifiedDate":"2021-10-25"},{"lineNumber":45,"author":{"gitId":"tanhuakun"},"content":"                   minHeight\u003d\"80\" prefHeight\u003d\"80\" maxHeight\u003d\"100\"\u003e","lastModifiedDate":"2021-10-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"          \u003cpadding\u003e","lastModifiedDate":"2021-10-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"            \u003cInsets top\u003d\"5\" right\u003d\"10\" bottom\u003d\"5\" left\u003d\"10\" /\u003e","lastModifiedDate":"2021-10-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"          \u003c/padding\u003e","lastModifiedDate":"2021-10-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        \u003c/StackPane\u003e","lastModifiedDate":"2021-10-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":51,"author":{"gitId":"kvihashini"},"content":"        \u003cBorderPane VBox.vgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2021-11-05"},{"lineNumber":52,"author":{"gitId":"kvihashini"},"content":"          \u003cleft\u003e","lastModifiedDate":"2021-10-13"},{"lineNumber":53,"author":{"gitId":"kvihashini"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":54,"author":{"gitId":"kvihashini"},"content":"            \u003cVBox VBox.vgrow\u003d\"ALWAYS\" fx:id\u003d\"personList\" minWidth\u003d\"250\" prefWidth\u003d\"250\" minHeight\u003d\"400\" prefHeight\u003d\"400\" style\u003d\"-fx-background-color: #f4f4f4;\"\u003e","lastModifiedDate":"2021-11-05"},{"lineNumber":55,"author":{"gitId":"kvihashini"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":56,"author":{"gitId":"-"},"content":"              \u003cpadding\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":57,"author":{"gitId":"kvihashini"},"content":"                \u003cInsets bottom\u003d\"10\" left\u003d\"10\" right\u003d\"10\" top\u003d\"10\" /\u003e","lastModifiedDate":"2021-10-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"              \u003c/padding\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":59,"author":{"gitId":"kvihashini"},"content":"              \u003cStackPane fx:id\u003d\"personListPanelPlaceholder\" VBox.vgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2021-11-05"},{"lineNumber":60,"author":{"gitId":"-"},"content":"            \u003c/VBox\u003e","lastModifiedDate":"2016-08-15"},{"lineNumber":61,"author":{"gitId":"kvihashini"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":62,"author":{"gitId":"kvihashini"},"content":"          \u003c/left\u003e","lastModifiedDate":"2021-10-13"},{"lineNumber":63,"author":{"gitId":"kvihashini"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":64,"author":{"gitId":"kvihashini"},"content":"          \u003ccenter\u003e","lastModifiedDate":"2021-10-13"},{"lineNumber":65,"author":{"gitId":"kvihashini"},"content":"            \u003cBorderPane\u003e","lastModifiedDate":"2021-10-17"},{"lineNumber":66,"author":{"gitId":"kvihashini"},"content":"              \u003ctop\u003e","lastModifiedDate":"2021-10-17"},{"lineNumber":67,"author":{"gitId":"kvihashini"},"content":"                \u003cVBox fx:id\u003d\"taskList\" minWidth\u003d\"250\" prefWidth\u003d\"250\" minHeight\u003d\"230\" prefHeight\u003d\"230\" style\u003d\"-fx-background-color: transparent;\"\u003e","lastModifiedDate":"2021-11-05"},{"lineNumber":68,"author":{"gitId":"kvihashini"},"content":"                  \u003cStackPane fx:id\u003d\"taskListPanelPlaceholder\" VBox.vgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2021-11-05"},{"lineNumber":69,"author":{"gitId":"kvihashini"},"content":"                  \u003cpadding\u003e","lastModifiedDate":"2021-10-13"},{"lineNumber":70,"author":{"gitId":"kvihashini"},"content":"                    \u003cInsets bottom\u003d\"5\" left\u003d\"10\" right\u003d\"10\" top\u003d\"10\" /\u003e","lastModifiedDate":"2021-10-17"},{"lineNumber":71,"author":{"gitId":"kvihashini"},"content":"                  \u003c/padding\u003e","lastModifiedDate":"2021-10-17"},{"lineNumber":72,"author":{"gitId":"kvihashini"},"content":"                \u003c/VBox\u003e","lastModifiedDate":"2021-10-17"},{"lineNumber":73,"author":{"gitId":"kvihashini"},"content":"              \u003c/top\u003e","lastModifiedDate":"2021-10-17"},{"lineNumber":74,"author":{"gitId":"kvihashini"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":75,"author":{"gitId":"kvihashini"},"content":"              \u003cbottom\u003e","lastModifiedDate":"2021-11-05"},{"lineNumber":76,"author":{"gitId":"kvihashini"},"content":"                \u003cVBox fx:id\u003d\"groupList\" minWidth\u003d\"250\" prefWidth\u003d\"250\" minHeight\u003d\"230\" prefHeight\u003d\"230\" style\u003d\"-fx-background-color: transparent;\"\u003e","lastModifiedDate":"2021-11-05"},{"lineNumber":77,"author":{"gitId":"kvihashini"},"content":"                  \u003cStackPane fx:id\u003d\"groupListPanelPlaceholder\" VBox.vgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2021-11-05"},{"lineNumber":78,"author":{"gitId":"kvihashini"},"content":"                  \u003cpadding\u003e","lastModifiedDate":"2021-10-17"},{"lineNumber":79,"author":{"gitId":"kvihashini"},"content":"                    \u003cInsets bottom\u003d\"10\" left\u003d\"10\" right\u003d\"10\" top\u003d\"5\" /\u003e","lastModifiedDate":"2021-10-17"},{"lineNumber":80,"author":{"gitId":"kvihashini"},"content":"                  \u003c/padding\u003e","lastModifiedDate":"2021-10-13"},{"lineNumber":81,"author":{"gitId":"kvihashini"},"content":"                \u003c/VBox\u003e","lastModifiedDate":"2021-10-13"},{"lineNumber":82,"author":{"gitId":"kvihashini"},"content":"              \u003c/bottom\u003e","lastModifiedDate":"2021-10-17"},{"lineNumber":83,"author":{"gitId":"kvihashini"},"content":"            \u003c/BorderPane\u003e","lastModifiedDate":"2021-10-17"},{"lineNumber":84,"author":{"gitId":"kvihashini"},"content":"          \u003c/center\u003e","lastModifiedDate":"2021-10-13"},{"lineNumber":85,"author":{"gitId":"kvihashini"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":86,"author":{"gitId":"kvihashini"},"content":"          \u003cright\u003e","lastModifiedDate":"2021-10-13"},{"lineNumber":87,"author":{"gitId":"kvihashini"},"content":"            \u003cStackPane fx:id\u003d\"viewingPanelPlaceholder\" maxWidth \u003d \"Infinity\" prefWidth\u003d\"320\" minHeight\u003d\"400\" prefHeight\u003d\"400\" styleClass\u003d\"pane-with-border\" VBox.vgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2021-11-05"},{"lineNumber":88,"author":{"gitId":"kvihashini"},"content":"              \u003cpadding\u003e","lastModifiedDate":"2021-10-13"},{"lineNumber":89,"author":{"gitId":"kvihashini"},"content":"                \u003cInsets bottom\u003d\"10\" left\u003d\"10\" right\u003d\"10\" top\u003d\"10\" /\u003e","lastModifiedDate":"2021-10-13"},{"lineNumber":90,"author":{"gitId":"kvihashini"},"content":"              \u003c/padding\u003e","lastModifiedDate":"2021-10-13"},{"lineNumber":91,"author":{"gitId":"kvihashini"},"content":"            \u003c/StackPane\u003e","lastModifiedDate":"2021-10-13"},{"lineNumber":92,"author":{"gitId":"kvihashini"},"content":"","lastModifiedDate":"2021-10-17"},{"lineNumber":93,"author":{"gitId":"kvihashini"},"content":"          \u003c/right\u003e","lastModifiedDate":"2021-10-13"},{"lineNumber":94,"author":{"gitId":"kvihashini"},"content":"        \u003c/BorderPane\u003e","lastModifiedDate":"2021-10-13"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        \u003cStackPane fx:id\u003d\"statusbarPlaceholder\" VBox.vgrow\u003d\"NEVER\" /\u003e","lastModifiedDate":"2017-05-09"},{"lineNumber":97,"author":{"gitId":"-"},"content":"      \u003c/VBox\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    \u003c/Scene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":99,"author":{"gitId":"-"},"content":"  \u003c/scene\u003e","lastModifiedDate":"2017-11-29"},{"lineNumber":100,"author":{"gitId":"-"},"content":"\u003c/fx:root\u003e","lastModifiedDate":"2017-11-29"}],"authorContributionMap":{"kvihashini":47,"tanhuakun":1,"-":52}},{"path":"src/main/resources/view/PersonListPanel.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.ListView?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2017-03-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":6,"author":{"gitId":"tanhuakun"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2021-11-05"},{"lineNumber":7,"author":{"gitId":"kvihashini"},"content":"\u003cVBox xmlns\u003d\"http://javafx.com/javafx/16\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2021-10-13"},{"lineNumber":8,"author":{"gitId":"tanhuakun"},"content":"  \u003cLabel id\u003d\"panelHeader\" text\u003d\"Students\" maxWidth\u003d\"Infinity\" alignment\u003d\"CENTER\"/\u003e","lastModifiedDate":"2021-11-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"  \u003cListView fx:id\u003d\"personListView\" VBox.vgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":"\u003c/VBox\u003e","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"kvihashini":1,"tanhuakun":2,"-":7}},{"path":"src/main/resources/view/PersonViewCard.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tanhuakun"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2021-10-25"},{"lineNumber":2,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":3,"author":{"gitId":"tanhuakun"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2021-10-25"},{"lineNumber":4,"author":{"gitId":"tanhuakun"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2021-10-25"},{"lineNumber":5,"author":{"gitId":"tanhuakun"},"content":"\u003c?import javafx.scene.layout.FlowPane?\u003e","lastModifiedDate":"2021-10-25"},{"lineNumber":6,"author":{"gitId":"tanhuakun"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2021-10-25"},{"lineNumber":7,"author":{"gitId":"tanhuakun"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2021-10-25"},{"lineNumber":8,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":9,"author":{"gitId":"tanhuakun"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e","lastModifiedDate":"2021-11-04"},{"lineNumber":10,"author":{"gitId":"tanhuakun"},"content":"\u003cVBox id\u003d\"cardPane\" fx:id\u003d\"cardPane\" xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2021-11-05"},{"lineNumber":11,"author":{"gitId":"tanhuakun"},"content":"    \u003cLabel id\u003d\"panelHeader\" text\u003d\"Student\" maxWidth\u003d\"Infinity\" alignment\u003d\"CENTER\"/\u003e","lastModifiedDate":"2021-11-05"},{"lineNumber":12,"author":{"gitId":"tanhuakun"},"content":"    \u003cScrollPane id\u003d\"personScroll\" fx:id\u003d\"personScroll\" VBox.vgrow\u003d\"ALWAYS\" prefWidth\u003d\"300\"\u003e","lastModifiedDate":"2021-11-05"},{"lineNumber":13,"author":{"gitId":"tanhuakun"},"content":"        \u003cVBox id\u003d\"personBox\" fx:id\u003d\"personBox\" alignment\u003d\"TOP_LEFT\" minHeight\u003d\"400\" prefWidth\u003d\"300\" maxWidth\u003d\"Infinity\"\u003e","lastModifiedDate":"2021-11-05"},{"lineNumber":14,"author":{"gitId":"tanhuakun"},"content":"            \u003cpadding\u003e","lastModifiedDate":"2021-10-25"},{"lineNumber":15,"author":{"gitId":"tanhuakun"},"content":"                \u003cInsets top\u003d\"5\" right\u003d\"5\" bottom\u003d\"5\" left\u003d\"12\" /\u003e","lastModifiedDate":"2021-11-04"},{"lineNumber":16,"author":{"gitId":"tanhuakun"},"content":"            \u003c/padding\u003e","lastModifiedDate":"2021-10-25"},{"lineNumber":17,"author":{"gitId":"tanhuakun"},"content":"            \u003cHBox spacing\u003d\"5\" alignment\u003d\"CENTER_LEFT\"\u003e","lastModifiedDate":"2021-10-25"},{"lineNumber":18,"author":{"gitId":"tanhuakun"},"content":"                \u003cLabel fx:id\u003d\"name\" text\u003d\"\\$first\" styleClass\u003d\"cell_big_label\" /\u003e","lastModifiedDate":"2021-10-25"},{"lineNumber":19,"author":{"gitId":"tanhuakun"},"content":"            \u003c/HBox\u003e","lastModifiedDate":"2021-10-25"},{"lineNumber":20,"author":{"gitId":"tanhuakun"},"content":"            \u003cFlowPane fx:id\u003d\"tags\"/\u003e","lastModifiedDate":"2021-10-25"},{"lineNumber":21,"author":{"gitId":"tanhuakun"},"content":"            \u003cLabel fx:id\u003d\"phone\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$phone\" /\u003e","lastModifiedDate":"2021-10-25"},{"lineNumber":22,"author":{"gitId":"tanhuakun"},"content":"            \u003cLabel fx:id\u003d\"address\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$address\" /\u003e","lastModifiedDate":"2021-10-25"},{"lineNumber":23,"author":{"gitId":"tanhuakun"},"content":"            \u003cLabel fx:id\u003d\"email\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$email\" /\u003e","lastModifiedDate":"2021-10-25"},{"lineNumber":24,"author":{"gitId":"tanhuakun"},"content":"            \u003cLabel text\u003d\"\" styleClass\u003d\"cell_small_label\"/\u003e","lastModifiedDate":"2021-10-26"},{"lineNumber":25,"author":{"gitId":"tanhuakun"},"content":"            \u003cLabel styleClass\u003d\"cell_big_label\" text\u003d\"Lessons:\"/\u003e","lastModifiedDate":"2021-10-26"},{"lineNumber":26,"author":{"gitId":"tanhuakun"},"content":"            \u003cVBox fx:id\u003d\"lessons\"/\u003e","lastModifiedDate":"2021-10-26"},{"lineNumber":27,"author":{"gitId":"tanhuakun"},"content":"            \u003cLabel fx:id\u003d\"groupLessonsLabel\"  styleClass\u003d\"cell_big_label\" text\u003d\"Group Lessons:\"/\u003e","lastModifiedDate":"2021-11-04"},{"lineNumber":28,"author":{"gitId":"tanhuakun"},"content":"            \u003cVBox fx:id\u003d\"groupLessons\"/\u003e","lastModifiedDate":"2021-11-04"},{"lineNumber":29,"author":{"gitId":"tanhuakun"},"content":"            \u003cLabel text\u003d\"\" styleClass\u003d\"cell_small_label\"/\u003e \u003c!--empty row!--\u003e","lastModifiedDate":"2021-10-26"},{"lineNumber":30,"author":{"gitId":"tanhuakun"},"content":"            \u003cLabel styleClass\u003d\"cell_big_label\" text\u003d\"Tasks:\"/\u003e","lastModifiedDate":"2021-10-26"},{"lineNumber":31,"author":{"gitId":"tanhuakun"},"content":"            \u003cVBox fx:id\u003d\"tasks\"/\u003e","lastModifiedDate":"2021-10-26"},{"lineNumber":32,"author":{"gitId":"tanhuakun"},"content":"            \u003cLabel fx:id\u003d\"groupTasksLabel\" styleClass\u003d\"cell_big_label\" text\u003d\"Group Tasks:\"/\u003e","lastModifiedDate":"2021-11-04"},{"lineNumber":33,"author":{"gitId":"tanhuakun"},"content":"            \u003cVBox fx:id\u003d\"groupTasks\"/\u003e","lastModifiedDate":"2021-11-04"},{"lineNumber":34,"author":{"gitId":"tanhuakun"},"content":"            \u003cLabel text\u003d\"\" styleClass\u003d\"cell_small_label\"/\u003e \u003c!--empty row!--\u003e","lastModifiedDate":"2021-10-26"},{"lineNumber":35,"author":{"gitId":"tanhuakun"},"content":"            \u003cLabel styleClass\u003d\"cell_big_label\" text\u003d\"Exams:\"/\u003e","lastModifiedDate":"2021-10-26"},{"lineNumber":36,"author":{"gitId":"tanhuakun"},"content":"            \u003cVBox fx:id\u003d\"exams\"/\u003e","lastModifiedDate":"2021-10-26"},{"lineNumber":37,"author":{"gitId":"tanhuakun"},"content":"            \u003cLabel text\u003d\"\" styleClass\u003d\"cell_small_label\"/\u003e \u003c!--empty row!--\u003e","lastModifiedDate":"2021-10-26"},{"lineNumber":38,"author":{"gitId":"tanhuakun"},"content":"            \u003cLabel styleClass\u003d\"cell_big_label\" text\u003d\"Groups:\"/\u003e","lastModifiedDate":"2021-10-26"},{"lineNumber":39,"author":{"gitId":"tanhuakun"},"content":"            \u003cVBox fx:id\u003d\"groups\"/\u003e","lastModifiedDate":"2021-10-26"},{"lineNumber":40,"author":{"gitId":"tanhuakun"},"content":"        \u003c/VBox\u003e","lastModifiedDate":"2021-10-25"},{"lineNumber":41,"author":{"gitId":"tanhuakun"},"content":"    \u003c/ScrollPane\u003e","lastModifiedDate":"2021-11-04"},{"lineNumber":42,"author":{"gitId":"tanhuakun"},"content":"\u003c/VBox\u003e","lastModifiedDate":"2021-11-05"}],"authorContributionMap":{"tanhuakun":42}},{"path":"src/main/resources/view/ResultDisplay.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2016-09-14"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-14"},{"lineNumber":3,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.control.TextArea?\u003e","lastModifiedDate":"2016-10-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"\u003c?import javafx.scene.layout.StackPane?\u003e","lastModifiedDate":"2017-06-22"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-25"},{"lineNumber":6,"author":{"gitId":"kvihashini"},"content":"\u003cStackPane fx:id\u003d\"placeHolder\" xmlns\u003d\"http://javafx.com/javafx/16\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2021-10-13"},{"lineNumber":7,"author":{"gitId":"kvihashini"},"content":"  \u003cTextArea fx:id\u003d\"resultDisplay\" editable\u003d\"false\" prefWidth\u003d\"292.0\" styleClass\u003d\"result-display\" /\u003e","lastModifiedDate":"2021-10-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"\u003c/StackPane\u003e","lastModifiedDate":"2017-06-22"}],"authorContributionMap":{"kvihashini":2,"-":6}},{"path":"src/main/resources/view/TaskListCard.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kvihashini"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2021-10-13"},{"lineNumber":2,"author":{"gitId":"kvihashini"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":3,"author":{"gitId":"kvihashini"},"content":"\u003c?import javafx.geometry.Insets?\u003e","lastModifiedDate":"2021-10-13"},{"lineNumber":4,"author":{"gitId":"kvihashini"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2021-10-13"},{"lineNumber":5,"author":{"gitId":"kvihashini"},"content":"\u003c?import javafx.scene.layout.ColumnConstraints?\u003e","lastModifiedDate":"2021-10-13"},{"lineNumber":6,"author":{"gitId":"kvihashini"},"content":"\u003c?import javafx.scene.layout.GridPane?\u003e","lastModifiedDate":"2021-10-13"},{"lineNumber":7,"author":{"gitId":"kvihashini"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e","lastModifiedDate":"2021-10-13"},{"lineNumber":8,"author":{"gitId":"kvihashini"},"content":"\u003c?import javafx.scene.layout.Region?\u003e","lastModifiedDate":"2021-10-13"},{"lineNumber":9,"author":{"gitId":"kvihashini"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2021-10-13"},{"lineNumber":10,"author":{"gitId":"kvihashini"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":11,"author":{"gitId":"kvihashini"},"content":"\u003cHBox id\u003d\"cardPane\" fx:id\u003d\"cardPane\" xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2021-10-13"},{"lineNumber":12,"author":{"gitId":"kvihashini"},"content":"    \u003cGridPane HBox.hgrow\u003d\"ALWAYS\"\u003e","lastModifiedDate":"2021-10-13"},{"lineNumber":13,"author":{"gitId":"kvihashini"},"content":"        \u003ccolumnConstraints\u003e","lastModifiedDate":"2021-10-13"},{"lineNumber":14,"author":{"gitId":"kvihashini"},"content":"            \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10\" prefWidth\u003d\"150\" /\u003e","lastModifiedDate":"2021-10-13"},{"lineNumber":15,"author":{"gitId":"kvihashini"},"content":"        \u003c/columnConstraints\u003e","lastModifiedDate":"2021-10-13"},{"lineNumber":16,"author":{"gitId":"kvihashini"},"content":"        \u003cVBox alignment\u003d\"CENTER_LEFT\" minHeight\u003d\"105\" GridPane.columnIndex\u003d\"0\"\u003e","lastModifiedDate":"2021-10-13"},{"lineNumber":17,"author":{"gitId":"kvihashini"},"content":"            \u003cpadding\u003e","lastModifiedDate":"2021-10-13"},{"lineNumber":18,"author":{"gitId":"kvihashini"},"content":"                \u003cInsets top\u003d\"5\" right\u003d\"5\" bottom\u003d\"5\" left\u003d\"15\" /\u003e","lastModifiedDate":"2021-10-13"},{"lineNumber":19,"author":{"gitId":"kvihashini"},"content":"            \u003c/padding\u003e","lastModifiedDate":"2021-10-13"},{"lineNumber":20,"author":{"gitId":"kvihashini"},"content":"            \u003cHBox spacing\u003d\"5\" alignment\u003d\"CENTER_LEFT\"\u003e","lastModifiedDate":"2021-10-13"},{"lineNumber":21,"author":{"gitId":"kvihashini"},"content":"                \u003cLabel fx:id\u003d\"id\" styleClass\u003d\"cell_big_label\"\u003e","lastModifiedDate":"2021-10-13"},{"lineNumber":22,"author":{"gitId":"kvihashini"},"content":"                    \u003cminWidth\u003e","lastModifiedDate":"2021-10-13"},{"lineNumber":23,"author":{"gitId":"kvihashini"},"content":"                        \u003c!-- Ensures that the label text is never truncated --\u003e","lastModifiedDate":"2021-10-13"},{"lineNumber":24,"author":{"gitId":"kvihashini"},"content":"                        \u003cRegion fx:constant\u003d\"USE_PREF_SIZE\" /\u003e","lastModifiedDate":"2021-10-13"},{"lineNumber":25,"author":{"gitId":"kvihashini"},"content":"                    \u003c/minWidth\u003e","lastModifiedDate":"2021-10-13"},{"lineNumber":26,"author":{"gitId":"kvihashini"},"content":"                \u003c/Label\u003e","lastModifiedDate":"2021-10-13"},{"lineNumber":27,"author":{"gitId":"kvihashini"},"content":"                \u003cLabel fx:id\u003d\"name\" text\u003d\"\\$first\" styleClass\u003d\"cell_big_label\" /\u003e","lastModifiedDate":"2021-10-13"},{"lineNumber":28,"author":{"gitId":"kvihashini"},"content":"            \u003c/HBox\u003e","lastModifiedDate":"2021-10-13"},{"lineNumber":29,"author":{"gitId":"kvihashini"},"content":"            \u003cLabel fx:id\u003d\"deadline\" styleClass\u003d\"cell_small_label\" text\u003d\"\\$deadline\" /\u003e","lastModifiedDate":"2021-10-13"},{"lineNumber":30,"author":{"gitId":"kvihashini"},"content":"        \u003c/VBox\u003e","lastModifiedDate":"2021-10-13"},{"lineNumber":31,"author":{"gitId":"kvihashini"},"content":"    \u003c/GridPane\u003e","lastModifiedDate":"2021-10-13"},{"lineNumber":32,"author":{"gitId":"kvihashini"},"content":"\u003c/HBox\u003e","lastModifiedDate":"2021-10-13"}],"authorContributionMap":{"kvihashini":32}},{"path":"src/main/resources/view/TaskListPanel.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"kvihashini"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2021-10-13"},{"lineNumber":2,"author":{"gitId":"kvihashini"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":3,"author":{"gitId":"kvihashini"},"content":"\u003c?import javafx.scene.control.ListView?\u003e","lastModifiedDate":"2021-10-13"},{"lineNumber":4,"author":{"gitId":"kvihashini"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e","lastModifiedDate":"2021-10-13"},{"lineNumber":5,"author":{"gitId":"kvihashini"},"content":"","lastModifiedDate":"2021-10-13"},{"lineNumber":6,"author":{"gitId":"tanhuakun"},"content":"\u003c?import javafx.scene.control.Label?\u003e","lastModifiedDate":"2021-11-05"},{"lineNumber":7,"author":{"gitId":"kvihashini"},"content":"\u003cVBox xmlns\u003d\"http://javafx.com/javafx/16\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2021-10-17"},{"lineNumber":8,"author":{"gitId":"tanhuakun"},"content":"    \u003cLabel id\u003d\"panelHeader\" text\u003d\"Tasks\" maxWidth\u003d\"Infinity\" alignment\u003d\"CENTER\"/\u003e","lastModifiedDate":"2021-11-05"},{"lineNumber":9,"author":{"gitId":"kvihashini"},"content":"    \u003cListView fx:id\u003d\"taskListView\" prefWidth\u003d\"248.0\" VBox.vgrow\u003d\"ALWAYS\" /\u003e","lastModifiedDate":"2021-10-17"},{"lineNumber":10,"author":{"gitId":"kvihashini"},"content":"\u003c/VBox\u003e","lastModifiedDate":"2021-10-13"}],"authorContributionMap":{"kvihashini":8,"tanhuakun":2}},{"path":"src/main/resources/view/ViewingPanel.fxml","fileType":"functional-code","lines":[{"lineNumber":1,"author":{"gitId":"tanhuakun"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e","lastModifiedDate":"2021-10-25"},{"lineNumber":2,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":3,"author":{"gitId":"tanhuakun"},"content":"\u003c?import javafx.scene.layout.StackPane?\u003e","lastModifiedDate":"2021-10-25"},{"lineNumber":4,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":5,"author":{"gitId":"tanhuakun"},"content":"\u003cStackPane fx:id\u003d\"viewingPanel\" xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e","lastModifiedDate":"2021-10-25"},{"lineNumber":6,"author":{"gitId":"tanhuakun"},"content":"\u003c/StackPane\u003e","lastModifiedDate":"2021-10-25"}],"authorContributionMap":{"tanhuakun":6}},{"path":"src/test/java/seedu/address/commons/core/VersionTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.commons.core;","lastModifiedDate":"2016-09-23"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"kvihashini"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-10-25"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-25"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"kvihashini"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":11,"author":{"gitId":"-"},"content":"public class VersionTest {","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    public void versionParsing_acceptableVersionString_parsedVersionCorrectly() {","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        verifyVersionParsedCorrectly(\"V0.0.0ea\", 0, 0, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        verifyVersionParsedCorrectly(\"V3.10.2\", 3, 10, 2, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        verifyVersionParsedCorrectly(\"V100.100.100ea\", 100, 100, 100, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public void versionParsing_wrongVersionString_throwIllegalArgumentException() {","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e Version.fromString(\"This is not a version string\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public void versionConstructor_correctParameter_valueAsExpected() {","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        Version version \u003d new Version(19, 10, 20, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertEquals(19, version.getMajor());","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertEquals(10, version.getMinor());","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertEquals(20, version.getPatch());","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertEquals(true, version.isEarlyAccess());","lastModifiedDate":"2016-08-08"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    public void versionToString_validVersion_correctStringRepresentation() {","lastModifiedDate":"2016-08-08"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        // boundary at 0","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        Version version \u003d new Version(0, 0, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertEquals(\"V0.0.0ea\", version.toString());","lastModifiedDate":"2016-08-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        // normal values","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        version \u003d new Version(4, 10, 5, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        assertEquals(\"V4.10.5\", version.toString());","lastModifiedDate":"2016-08-08"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        // big numbers","lastModifiedDate":"2016-08-08"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        version \u003d new Version(100, 100, 100, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        assertEquals(\"V100.100.100ea\", version.toString());","lastModifiedDate":"2016-08-08"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    public void versionComparable_validVersion_compareToIsCorrect() {","lastModifiedDate":"2016-08-08"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        Version one;","lastModifiedDate":"2017-09-21"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        Version another;","lastModifiedDate":"2017-09-21"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        // Tests equality","lastModifiedDate":"2016-08-08"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        one \u003d new Version(0, 0, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 0, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003d\u003d 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        one \u003d new Version(11, 12, 13, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        another \u003d new Version(11, 12, 13, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003d\u003d 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        // Tests different patch","lastModifiedDate":"2016-08-08"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        one \u003d new Version(0, 0, 5, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 0, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003e 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        // Tests different minor","lastModifiedDate":"2016-08-08"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        one \u003d new Version(0, 0, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 5, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003c 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        // Tests different major","lastModifiedDate":"2016-08-08"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        one \u003d new Version(10, 0, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 0, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003e 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":78,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        // Tests high major vs low minor","lastModifiedDate":"2016-08-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        one \u003d new Version(10, 0, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 1, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003e 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        // Tests high patch vs low minor","lastModifiedDate":"2016-08-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        one \u003d new Version(0, 0, 10, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 1, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003c 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        // Tests same major minor different patch","lastModifiedDate":"2016-08-08"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        one \u003d new Version(2, 15, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        another \u003d new Version(2, 15, 5, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003c 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        // Tests early access vs not early access on same version number","lastModifiedDate":"2016-08-08"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        one \u003d new Version(2, 15, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        another \u003d new Version(2, 15, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003c 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        // Tests early access lower version vs not early access higher version compare by version number first","lastModifiedDate":"2016-08-08"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        one \u003d new Version(2, 15, 0, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        another \u003d new Version(2, 15, 5, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003c 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        // Tests early access higher version vs not early access lower version compare by version number first","lastModifiedDate":"2016-08-08"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        one \u003d new Version(2, 15, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        another \u003d new Version(2, 15, 5, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        assertTrue(one.compareTo(another) \u003c 0);","lastModifiedDate":"2016-08-08"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":109,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    public void versionComparable_validVersion_hashCodeIsCorrect() {","lastModifiedDate":"2016-08-08"},{"lineNumber":112,"author":{"gitId":"-"},"content":"        Version version \u003d new Version(100, 100, 100, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        assertEquals(100100100, version.hashCode());","lastModifiedDate":"2016-08-08"},{"lineNumber":114,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        version \u003d new Version(10, 10, 10, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        assertEquals(1010010010, version.hashCode());","lastModifiedDate":"2016-08-08"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-08-08"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    public void versionComparable_validVersion_equalIsCorrect() {","lastModifiedDate":"2016-08-08"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        Version one;","lastModifiedDate":"2016-10-16"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        Version another;","lastModifiedDate":"2016-10-16"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        one \u003d new Version(0, 0, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        another \u003d new Version(0, 0, 0, false);","lastModifiedDate":"2016-08-08"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        assertTrue(one.equals(another));","lastModifiedDate":"2016-08-08"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        one \u003d new Version(100, 191, 275, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        another \u003d new Version(100, 191, 275, true);","lastModifiedDate":"2016-08-08"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        assertTrue(one.equals(another));","lastModifiedDate":"2016-08-08"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":133,"author":{"gitId":"kvihashini"},"content":"    @Test","lastModifiedDate":"2021-10-25"},{"lineNumber":134,"author":{"gitId":"kvihashini"},"content":"    public void versionEquals() {","lastModifiedDate":"2021-10-25"},{"lineNumber":135,"author":{"gitId":"kvihashini"},"content":"        Version version \u003d new Version(100, 100, 100, true);","lastModifiedDate":"2021-10-25"},{"lineNumber":136,"author":{"gitId":"kvihashini"},"content":"        Version otherVersion \u003d null;","lastModifiedDate":"2021-10-25"},{"lineNumber":137,"author":{"gitId":"kvihashini"},"content":"        Integer notVersion \u003d 1;","lastModifiedDate":"2021-10-25"},{"lineNumber":138,"author":{"gitId":"kvihashini"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":139,"author":{"gitId":"kvihashini"},"content":"        assertFalse(version.equals(otherVersion));","lastModifiedDate":"2021-10-25"},{"lineNumber":140,"author":{"gitId":"kvihashini"},"content":"        assertFalse(version.equals(notVersion));","lastModifiedDate":"2021-10-25"},{"lineNumber":141,"author":{"gitId":"kvihashini"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":142,"author":{"gitId":"kvihashini"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    private void verifyVersionParsedCorrectly(String versionString,","lastModifiedDate":"2016-08-08"},{"lineNumber":144,"author":{"gitId":"-"},"content":"            int major, int minor, int patch, boolean isEarlyAccess) {","lastModifiedDate":"2016-08-08"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        assertEquals(new Version(major, minor, patch, isEarlyAccess), Version.fromString(versionString));","lastModifiedDate":"2016-08-08"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":147,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"kvihashini":12,"-":135}},{"path":"src/test/java/seedu/address/commons/core/index/IndexTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.commons.core.index;","lastModifiedDate":"2017-05-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class IndexTest {","lastModifiedDate":"2017-05-24"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-24"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    public void createOneBasedIndex() {","lastModifiedDate":"2017-05-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"        // invalid index","lastModifiedDate":"2017-05-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        assertThrows(IndexOutOfBoundsException.class, () -\u003e Index.fromOneBased(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        // check equality using the same base","lastModifiedDate":"2017-05-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"        assertEquals(1, Index.fromOneBased(1).getOneBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        assertEquals(5, Index.fromOneBased(5).getOneBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        // convert from one-based index to zero-based index","lastModifiedDate":"2017-05-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        assertEquals(0, Index.fromOneBased(1).getZeroBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertEquals(4, Index.fromOneBased(5).getZeroBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-24"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void createZeroBasedIndex() {","lastModifiedDate":"2017-05-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        // invalid index","lastModifiedDate":"2017-05-24"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertThrows(IndexOutOfBoundsException.class, () -\u003e Index.fromZeroBased(-1));","lastModifiedDate":"2019-03-23"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // check equality using the same base","lastModifiedDate":"2017-05-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertEquals(0, Index.fromZeroBased(0).getZeroBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertEquals(5, Index.fromZeroBased(5).getZeroBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // convert from zero-based index to one-based index","lastModifiedDate":"2017-05-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertEquals(1, Index.fromZeroBased(0).getOneBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertEquals(6, Index.fromZeroBased(5).getOneBased());","lastModifiedDate":"2017-05-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":40,"author":{"gitId":"kvihashini"},"content":"    @Test","lastModifiedDate":"2021-10-25"},{"lineNumber":41,"author":{"gitId":"kvihashini"},"content":"    public void createIsGreaterThan() {","lastModifiedDate":"2021-10-25"},{"lineNumber":42,"author":{"gitId":"kvihashini"},"content":"        // check equality using the same base","lastModifiedDate":"2021-10-25"},{"lineNumber":43,"author":{"gitId":"kvihashini"},"content":"        assertEquals(true, Index.fromZeroBased(10).isGreaterThan(Index.fromZeroBased(0)));","lastModifiedDate":"2021-10-25"},{"lineNumber":44,"author":{"gitId":"kvihashini"},"content":"        assertEquals(false, Index.fromZeroBased(10).isGreaterThan(Index.fromZeroBased(10)));","lastModifiedDate":"2021-10-25"},{"lineNumber":45,"author":{"gitId":"kvihashini"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":46,"author":{"gitId":"kvihashini"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":47,"author":{"gitId":"kvihashini"},"content":"    @Test","lastModifiedDate":"2021-10-25"},{"lineNumber":48,"author":{"gitId":"kvihashini"},"content":"    public void createIsLesserThan() {","lastModifiedDate":"2021-10-25"},{"lineNumber":49,"author":{"gitId":"kvihashini"},"content":"        // check equality using the same base","lastModifiedDate":"2021-10-25"},{"lineNumber":50,"author":{"gitId":"kvihashini"},"content":"        assertEquals(false, Index.fromZeroBased(10).isLesserThan(Index.fromZeroBased(10)));","lastModifiedDate":"2021-10-25"},{"lineNumber":51,"author":{"gitId":"kvihashini"},"content":"        assertEquals(true, Index.fromZeroBased(0).isLesserThan(Index.fromZeroBased(10)));","lastModifiedDate":"2021-10-25"},{"lineNumber":52,"author":{"gitId":"kvihashini"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":53,"author":{"gitId":"kvihashini"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-05-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        final Index fifthPersonIndex \u003d Index.fromOneBased(5);","lastModifiedDate":"2017-05-24"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-24"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        assertTrue(fifthPersonIndex.equals(Index.fromOneBased(5)));","lastModifiedDate":"2017-05-24"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertTrue(fifthPersonIndex.equals(Index.fromZeroBased(4)));","lastModifiedDate":"2017-05-24"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-24"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertTrue(fifthPersonIndex.equals(fifthPersonIndex));","lastModifiedDate":"2017-05-24"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-24"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assertFalse(fifthPersonIndex.equals(null));","lastModifiedDate":"2017-05-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-24"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertFalse(fifthPersonIndex.equals(5.0f));","lastModifiedDate":"2017-05-24"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        // different index -\u003e returns false","lastModifiedDate":"2017-05-24"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        assertFalse(fifthPersonIndex.equals(Index.fromOneBased(1)));","lastModifiedDate":"2017-05-24"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-24"},{"lineNumber":74,"author":{"gitId":"kvihashini"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":75,"author":{"gitId":"kvihashini"},"content":"    @Test","lastModifiedDate":"2021-10-25"},{"lineNumber":76,"author":{"gitId":"kvihashini"},"content":"    public void compare() {","lastModifiedDate":"2021-10-25"},{"lineNumber":77,"author":{"gitId":"kvihashini"},"content":"        final Index firstIndex \u003d Index.fromOneBased(5);","lastModifiedDate":"2021-10-25"},{"lineNumber":78,"author":{"gitId":"kvihashini"},"content":"        final Index secondIndex \u003d Index.fromOneBased(6);","lastModifiedDate":"2021-10-25"},{"lineNumber":79,"author":{"gitId":"kvihashini"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":80,"author":{"gitId":"kvihashini"},"content":"        Index.SortDescending sortDescending \u003d new Index.SortDescending();","lastModifiedDate":"2021-10-25"},{"lineNumber":81,"author":{"gitId":"kvihashini"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":82,"author":{"gitId":"kvihashini"},"content":"        assertEquals(-1, sortDescending.compare(secondIndex, firstIndex));","lastModifiedDate":"2021-10-25"},{"lineNumber":83,"author":{"gitId":"kvihashini"},"content":"        assertEquals(1, sortDescending.compare(firstIndex, secondIndex));","lastModifiedDate":"2021-10-25"},{"lineNumber":84,"author":{"gitId":"kvihashini"},"content":"        assertEquals(0, sortDescending.compare(firstIndex, firstIndex));","lastModifiedDate":"2021-10-25"},{"lineNumber":85,"author":{"gitId":"kvihashini"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":86,"author":{"gitId":"kvihashini"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":87,"author":{"gitId":"kvihashini"},"content":"    @Test","lastModifiedDate":"2021-10-25"},{"lineNumber":88,"author":{"gitId":"tanhuakun"},"content":"    public void hashCode_sameNumber_sameHashCode() {","lastModifiedDate":"2021-10-25"},{"lineNumber":89,"author":{"gitId":"tanhuakun"},"content":"        Index oneIndex1 \u003d Index.fromOneBased(1);","lastModifiedDate":"2021-10-25"},{"lineNumber":90,"author":{"gitId":"tanhuakun"},"content":"        Index oneIndex2 \u003d Index.fromOneBased(1);","lastModifiedDate":"2021-10-25"},{"lineNumber":91,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":92,"author":{"gitId":"tanhuakun"},"content":"        assertEquals(oneIndex1.hashCode(), oneIndex2.hashCode());","lastModifiedDate":"2021-10-25"},{"lineNumber":93,"author":{"gitId":"tanhuakun"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":94,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-24"}],"authorContributionMap":{"kvihashini":28,"tanhuakun":6,"-":60}},{"path":"src/test/java/seedu/address/logic/LogicManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic;","lastModifiedDate":"2016-09-21"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX;","lastModifiedDate":"2017-01-19"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2017-01-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.AMY;","lastModifiedDate":"2018-12-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2018-12-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-12-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-25"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.io.TempDir;","lastModifiedDate":"2019-04-25"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.CommandResult;","lastModifiedDate":"2017-01-18"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ListCommand;","lastModifiedDate":"2017-06-19"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-02-05"},{"lineNumber":23,"author":{"gitId":"tanhuakun"},"content":"import seedu.address.logic.commands.persons.AddPersonCommand;","lastModifiedDate":"2021-10-03"},{"lineNumber":24,"author":{"gitId":"tanhuakun"},"content":"import seedu.address.logic.parser.CliSyntax;","lastModifiedDate":"2021-11-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-03-11"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2016-09-25"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2016-09-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2018-12-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-05-31"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-12-09"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonAddressBookStorage;","lastModifiedDate":"2018-12-09"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import seedu.address.storage.JsonUserPrefsStorage;","lastModifiedDate":"2018-12-09"},{"lineNumber":33,"author":{"gitId":"-"},"content":"import seedu.address.storage.StorageManager;","lastModifiedDate":"2018-12-09"},{"lineNumber":34,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2018-12-09"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"public class LogicManagerTest {","lastModifiedDate":"2016-09-22"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private static final IOException DUMMY_IO_EXCEPTION \u003d new IOException(\"dummy exception\");","lastModifiedDate":"2018-12-09"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    @TempDir","lastModifiedDate":"2019-04-25"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public Path temporaryFolder;","lastModifiedDate":"2019-04-25"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager();","lastModifiedDate":"2017-06-20"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    private Logic logic;","lastModifiedDate":"2018-12-09"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2019-04-25"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        JsonAddressBookStorage addressBookStorage \u003d","lastModifiedDate":"2019-04-25"},{"lineNumber":48,"author":{"gitId":"-"},"content":"                new JsonAddressBookStorage(temporaryFolder.resolve(\"addressBook.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d new JsonUserPrefsStorage(temporaryFolder.resolve(\"userPrefs.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        StorageManager storage \u003d new StorageManager(addressBookStorage, userPrefsStorage);","lastModifiedDate":"2018-12-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-20"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public void execute_invalidCommandFormat_throwsParseException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        String invalidCommand \u003d \"uicfhmowqewca\";","lastModifiedDate":"2017-06-20"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertParseException(invalidCommand, MESSAGE_UNKNOWN_COMMAND);","lastModifiedDate":"2017-06-20"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-20"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-20"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-14"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public void execute_commandExecutionError_throwsCommandException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":62,"author":{"gitId":"tanhuakun"},"content":"        String deleteCommand \u003d \"student -d 9\";","lastModifiedDate":"2021-10-03"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertCommandException(deleteCommand, MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2017-06-14"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-14"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-19"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public void execute_validCommand_success() throws Exception {","lastModifiedDate":"2019-03-14"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        String listCommand \u003d ListCommand.COMMAND_WORD;","lastModifiedDate":"2017-06-19"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertCommandSuccess(listCommand, ListCommand.MESSAGE_SUCCESS, model);","lastModifiedDate":"2017-06-19"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-20"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-20"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-12-09"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public void execute_storageThrowsIoException_throwsCommandException() {","lastModifiedDate":"2019-04-25"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        // Setup LogicManager with JsonAddressBookIoExceptionThrowingStub","lastModifiedDate":"2018-12-09"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        JsonAddressBookStorage addressBookStorage \u003d","lastModifiedDate":"2018-12-09"},{"lineNumber":76,"author":{"gitId":"-"},"content":"                new JsonAddressBookIoExceptionThrowingStub(temporaryFolder.resolve(\"ioExceptionAddressBook.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        JsonUserPrefsStorage userPrefsStorage \u003d","lastModifiedDate":"2019-04-25"},{"lineNumber":78,"author":{"gitId":"-"},"content":"                new JsonUserPrefsStorage(temporaryFolder.resolve(\"ioExceptionUserPrefs.json\"));","lastModifiedDate":"2019-04-25"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        StorageManager storage \u003d new StorageManager(addressBookStorage, userPrefsStorage);","lastModifiedDate":"2018-12-09"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        logic \u003d new LogicManager(model, storage);","lastModifiedDate":"2018-12-09"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        // Execute add command","lastModifiedDate":"2018-12-09"},{"lineNumber":83,"author":{"gitId":"tanhuakun"},"content":"        String addCommand \u003d CliSyntax.PERSON_COMMAND + \" \" + AddPersonCommand.COMMAND_WORD + NAME_DESC_AMY","lastModifiedDate":"2021-11-05"},{"lineNumber":84,"author":{"gitId":"tanhuakun"},"content":"                + PHONE_DESC_AMY + EMAIL_DESC_AMY + ADDRESS_DESC_AMY;","lastModifiedDate":"2021-10-03"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        Person expectedPerson \u003d new PersonBuilder(AMY).withTags().build();","lastModifiedDate":"2018-12-09"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        ModelManager expectedModel \u003d new ModelManager();","lastModifiedDate":"2018-12-09"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        expectedModel.addPerson(expectedPerson);","lastModifiedDate":"2018-12-09"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d LogicManager.FILE_OPS_ERROR_MESSAGE + DUMMY_IO_EXCEPTION;","lastModifiedDate":"2018-12-09"},{"lineNumber":89,"author":{"gitId":"eltonyeh"},"content":"        assertThrows(CommandException.class, expectedMessage, () -\u003e logic.execute(addCommand));","lastModifiedDate":"2021-11-05"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    public void getFilteredPersonList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e logic.getFilteredPersonList().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-09-21"},{"lineNumber":98,"author":{"gitId":"-"},"content":"     * Executes the command and confirms that","lastModifiedDate":"2019-03-14"},{"lineNumber":99,"author":{"gitId":"-"},"content":"     * - no exceptions are thrown \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":100,"author":{"gitId":"-"},"content":"     * - the feedback message is equal to {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":101,"author":{"gitId":"-"},"content":"     * - the internal model manager state is the same as that in {@code expectedModel} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":102,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    private void assertCommandSuccess(String inputCommand, String expectedMessage,","lastModifiedDate":"2019-03-14"},{"lineNumber":105,"author":{"gitId":"-"},"content":"            Model expectedModel) throws CommandException, ParseException {","lastModifiedDate":"2019-03-14"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        CommandResult result \u003d logic.execute(inputCommand);","lastModifiedDate":"2019-03-14"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        assertEquals(expectedMessage, result.getFeedbackToUser());","lastModifiedDate":"2019-03-14"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        assertEquals(expectedModel, model);","lastModifiedDate":"2019-03-14"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-21"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":112,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that a ParseException is thrown and that the result message is correct.","lastModifiedDate":"2017-03-11"},{"lineNumber":113,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":114,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    private void assertParseException(String inputCommand, String expectedMessage) {","lastModifiedDate":"2017-03-11"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, ParseException.class, expectedMessage);","lastModifiedDate":"2017-03-11"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-03-11"},{"lineNumber":118,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-03-11"},{"lineNumber":119,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-14"},{"lineNumber":120,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that a CommandException is thrown and that the result message is correct.","lastModifiedDate":"2017-06-14"},{"lineNumber":121,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":122,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-14"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    private void assertCommandException(String inputCommand, String expectedMessage) {","lastModifiedDate":"2017-06-14"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, CommandException.class, expectedMessage);","lastModifiedDate":"2017-06-14"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-14"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-14"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-03-11"},{"lineNumber":128,"author":{"gitId":"-"},"content":"     * Executes the command, confirms that the exception is thrown and that the result message is correct.","lastModifiedDate":"2017-03-11"},{"lineNumber":129,"author":{"gitId":"-"},"content":"     * @see #assertCommandFailure(String, Class, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":130,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-03-11"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    private void assertCommandFailure(String inputCommand, Class\u003c? extends Throwable\u003e expectedException,","lastModifiedDate":"2019-03-14"},{"lineNumber":132,"author":{"gitId":"-"},"content":"            String expectedMessage) {","lastModifiedDate":"2019-03-14"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2017-05-31"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        assertCommandFailure(inputCommand, expectedException, expectedMessage, expectedModel);","lastModifiedDate":"2019-03-14"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-02-05"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-02-05"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-02-05"},{"lineNumber":138,"author":{"gitId":"-"},"content":"     * Executes the command and confirms that","lastModifiedDate":"2019-03-14"},{"lineNumber":139,"author":{"gitId":"-"},"content":"     * - the {@code expectedException} is thrown \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":140,"author":{"gitId":"-"},"content":"     * - the resulting error message is equal to {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":141,"author":{"gitId":"-"},"content":"     * - the internal model manager state is the same as that in {@code expectedModel} \u003cbr\u003e","lastModifiedDate":"2019-03-14"},{"lineNumber":142,"author":{"gitId":"-"},"content":"     * @see #assertCommandSuccess(String, String, Model)","lastModifiedDate":"2019-03-14"},{"lineNumber":143,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-09-21"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    private void assertCommandFailure(String inputCommand, Class\u003c? extends Throwable\u003e expectedException,","lastModifiedDate":"2019-03-14"},{"lineNumber":145,"author":{"gitId":"-"},"content":"            String expectedMessage, Model expectedModel) {","lastModifiedDate":"2017-05-31"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        assertThrows(expectedException, expectedMessage, () -\u003e logic.execute(inputCommand));","lastModifiedDate":"2019-03-14"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        assertEquals(expectedModel, model);","lastModifiedDate":"2017-05-31"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-21"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-19"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":151,"author":{"gitId":"-"},"content":"     * A stub class to throw an {@code IOException} when the save method is called.","lastModifiedDate":"2018-12-09"},{"lineNumber":152,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    private static class JsonAddressBookIoExceptionThrowingStub extends JsonAddressBookStorage {","lastModifiedDate":"2018-12-09"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        private JsonAddressBookIoExceptionThrowingStub(Path filePath) {","lastModifiedDate":"2018-12-09"},{"lineNumber":155,"author":{"gitId":"-"},"content":"            super(filePath);","lastModifiedDate":"2018-12-09"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":157,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2018-12-09"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        public void saveAddressBook(ReadOnlyAddressBook addressBook, Path filePath) throws IOException {","lastModifiedDate":"2018-12-09"},{"lineNumber":160,"author":{"gitId":"-"},"content":"            throw DUMMY_IO_EXCEPTION;","lastModifiedDate":"2018-12-09"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-12-09"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":163,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-21"}],"authorContributionMap":{"tanhuakun":5,"eltonyeh":1,"-":157}},{"path":"src/test/java/seedu/address/logic/commands/AddPersonCommandIntegrationTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2017-07-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2017-07-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2019-04-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":10,"author":{"gitId":"tanhuakun"},"content":"import seedu.address.logic.commands.persons.AddPersonCommand;","lastModifiedDate":"2021-10-03"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-15"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-15"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-15"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-06-15"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-06-15"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-15"},{"lineNumber":18,"author":{"gitId":"tanhuakun"},"content":" * Contains integration tests (interaction with the Model) for {@code AddPersonCommand}.","lastModifiedDate":"2021-10-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-15"},{"lineNumber":20,"author":{"gitId":"tanhuakun"},"content":"public class AddPersonCommandIntegrationTest {","lastModifiedDate":"2021-10-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    private Model model;","lastModifiedDate":"2017-06-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    @BeforeEach","lastModifiedDate":"2019-04-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public void setUp() {","lastModifiedDate":"2017-06-15"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2017-07-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public void execute_newPerson_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        Person validPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2017-06-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2017-06-15"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        expectedModel.addPerson(validPerson);","lastModifiedDate":"2017-06-15"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":36,"author":{"gitId":"tanhuakun"},"content":"        assertCommandSuccess(new AddPersonCommand(validPerson), model,","lastModifiedDate":"2021-10-03"},{"lineNumber":37,"author":{"gitId":"tanhuakun"},"content":"                String.format(AddPersonCommand.MESSAGE_SUCCESS, validPerson), expectedModel);","lastModifiedDate":"2021-10-03"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public void execute_duplicatePerson_throwsCommandException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        Person personInList \u003d model.getAddressBook().getPersonList().get(0);","lastModifiedDate":"2018-01-10"},{"lineNumber":43,"author":{"gitId":"tanhuakun"},"content":"        assertCommandFailure(new AddPersonCommand(personInList), model, AddPersonCommand.MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2021-10-03"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-15"}],"authorContributionMap":{"tanhuakun":6,"-":40}},{"path":"src/test/java/seedu/address/logic/commands/AddPersonCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-05-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-05-12"},{"lineNumber":13,"author":{"gitId":"tanhuakun"},"content":"import seedu.address.logic.commands.persons.AddPersonCommand;","lastModifiedDate":"2021-10-03"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-05-12"},{"lineNumber":15,"author":{"gitId":"tanhuakun"},"content":"import seedu.address.testutil.ModelStub;","lastModifiedDate":"2021-10-12"},{"lineNumber":16,"author":{"gitId":"tanhuakun"},"content":"import seedu.address.testutil.ModelStub.ModelStubAcceptingPersonAdded;","lastModifiedDate":"2021-10-12"},{"lineNumber":17,"author":{"gitId":"tanhuakun"},"content":"import seedu.address.testutil.ModelStub.ModelStubWithPerson;","lastModifiedDate":"2021-10-12"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-05-12"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":20,"author":{"gitId":"tanhuakun"},"content":"public class AddPersonCommandTest {","lastModifiedDate":"2021-10-03"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    public void constructor_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":24,"author":{"gitId":"tanhuakun"},"content":"        assertThrows(NullPointerException.class, () -\u003e new AddPersonCommand(null));","lastModifiedDate":"2021-10-03"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public void execute_personAcceptedByModel_addSuccessful() throws Exception {","lastModifiedDate":"2017-05-12"},{"lineNumber":29,"author":{"gitId":"tanhuakun"},"content":"        ModelStub.ModelStubAcceptingPersonAdded modelStub \u003d new ModelStubAcceptingPersonAdded();","lastModifiedDate":"2021-10-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        Person validPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2017-05-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":32,"author":{"gitId":"tanhuakun"},"content":"        CommandResult commandResult \u003d new AddPersonCommand(validPerson).execute(modelStub);","lastModifiedDate":"2021-10-03"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":34,"author":{"gitId":"tanhuakun"},"content":"        assertEquals(String.format(AddPersonCommand.MESSAGE_SUCCESS, validPerson), commandResult.getFeedbackToUser());","lastModifiedDate":"2021-10-03"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        assertEquals(Arrays.asList(validPerson), modelStub.personsAdded);","lastModifiedDate":"2017-05-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    public void execute_duplicatePerson_throwsCommandException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        Person validPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2017-05-12"},{"lineNumber":41,"author":{"gitId":"tanhuakun"},"content":"        AddPersonCommand addPersonCommand \u003d new AddPersonCommand(validPerson);","lastModifiedDate":"2021-10-03"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        ModelStub modelStub \u003d new ModelStubWithPerson(validPerson);","lastModifiedDate":"2018-08-07"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":44,"author":{"gitId":"tanhuakun"},"content":"        assertThrows(CommandException.class, AddPersonCommand.MESSAGE_DUPLICATE_PERSON, () -\u003e","lastModifiedDate":"2021-10-03"},{"lineNumber":45,"author":{"gitId":"tanhuakun"},"content":"                addPersonCommand.execute(modelStub));","lastModifiedDate":"2021-10-03"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-12"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-12"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-22"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        Person alice \u003d new PersonBuilder().withName(\"Alice\").build();","lastModifiedDate":"2017-06-22"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        Person bob \u003d new PersonBuilder().withName(\"Bob\").build();","lastModifiedDate":"2017-06-22"},{"lineNumber":52,"author":{"gitId":"tanhuakun"},"content":"        AddPersonCommand addAliceCommand \u003d new AddPersonCommand(alice);","lastModifiedDate":"2021-10-03"},{"lineNumber":53,"author":{"gitId":"tanhuakun"},"content":"        AddPersonCommand addBobCommand \u003d new AddPersonCommand(bob);","lastModifiedDate":"2021-10-03"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-22"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertTrue(addAliceCommand.equals(addAliceCommand));","lastModifiedDate":"2017-06-22"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-22"},{"lineNumber":59,"author":{"gitId":"tanhuakun"},"content":"        AddPersonCommand addAliceCommandCopy \u003d new AddPersonCommand(alice);","lastModifiedDate":"2021-10-03"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertTrue(addAliceCommand.equals(addAliceCommandCopy));","lastModifiedDate":"2017-06-22"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(1));","lastModifiedDate":"2017-06-22"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(null));","lastModifiedDate":"2017-06-22"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-22"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2017-06-22"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        assertFalse(addAliceCommand.equals(addBobCommand));","lastModifiedDate":"2017-06-22"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-22"},{"lineNumber":71,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-12"}],"authorContributionMap":{"tanhuakun":15,"-":56}},{"path":"src/test/java/seedu/address/logic/commands/AddTaskCommandIntegrationTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"eltonyeh"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-10-12"},{"lineNumber":2,"author":{"gitId":"eltonyeh"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":3,"author":{"gitId":"eltonyeh"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2021-10-12"},{"lineNumber":4,"author":{"gitId":"eltonyeh"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2021-10-12"},{"lineNumber":5,"author":{"gitId":"eltonyeh"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2021-10-12"},{"lineNumber":6,"author":{"gitId":"eltonyeh"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":7,"author":{"gitId":"eltonyeh"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2021-10-12"},{"lineNumber":8,"author":{"gitId":"eltonyeh"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-12"},{"lineNumber":9,"author":{"gitId":"eltonyeh"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":10,"author":{"gitId":"eltonyeh"},"content":"import seedu.address.logic.commands.tasks.AddTaskCommand;","lastModifiedDate":"2021-10-12"},{"lineNumber":11,"author":{"gitId":"eltonyeh"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-10-12"},{"lineNumber":12,"author":{"gitId":"eltonyeh"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2021-10-12"},{"lineNumber":13,"author":{"gitId":"eltonyeh"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2021-10-12"},{"lineNumber":14,"author":{"gitId":"eltonyeh"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2021-10-12"},{"lineNumber":15,"author":{"gitId":"eltonyeh"},"content":"import seedu.address.testutil.TaskBuilder;","lastModifiedDate":"2021-10-12"},{"lineNumber":16,"author":{"gitId":"eltonyeh"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":17,"author":{"gitId":"eltonyeh"},"content":"/**","lastModifiedDate":"2021-10-12"},{"lineNumber":18,"author":{"gitId":"eltonyeh"},"content":" * Contains integration tests (interaction with the Model) for {@code AddPersonCommand}.","lastModifiedDate":"2021-10-12"},{"lineNumber":19,"author":{"gitId":"eltonyeh"},"content":" */","lastModifiedDate":"2021-10-12"},{"lineNumber":20,"author":{"gitId":"eltonyeh"},"content":"public class AddTaskCommandIntegrationTest {","lastModifiedDate":"2021-10-12"},{"lineNumber":21,"author":{"gitId":"eltonyeh"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":22,"author":{"gitId":"eltonyeh"},"content":"    private Model model;","lastModifiedDate":"2021-10-12"},{"lineNumber":23,"author":{"gitId":"eltonyeh"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":24,"author":{"gitId":"eltonyeh"},"content":"    @BeforeEach","lastModifiedDate":"2021-10-12"},{"lineNumber":25,"author":{"gitId":"eltonyeh"},"content":"    public void setUp() {","lastModifiedDate":"2021-10-12"},{"lineNumber":26,"author":{"gitId":"eltonyeh"},"content":"        model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2021-10-12"},{"lineNumber":27,"author":{"gitId":"eltonyeh"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":28,"author":{"gitId":"eltonyeh"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":29,"author":{"gitId":"eltonyeh"},"content":"    @Test","lastModifiedDate":"2021-10-12"},{"lineNumber":30,"author":{"gitId":"eltonyeh"},"content":"    public void execute_newTask_success() {","lastModifiedDate":"2021-10-12"},{"lineNumber":31,"author":{"gitId":"eltonyeh"},"content":"        Task validTask \u003d new TaskBuilder().build();","lastModifiedDate":"2021-10-12"},{"lineNumber":32,"author":{"gitId":"eltonyeh"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":33,"author":{"gitId":"eltonyeh"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2021-10-12"},{"lineNumber":34,"author":{"gitId":"eltonyeh"},"content":"        expectedModel.addTask(validTask);","lastModifiedDate":"2021-10-12"},{"lineNumber":35,"author":{"gitId":"eltonyeh"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":36,"author":{"gitId":"eltonyeh"},"content":"        assertCommandSuccess(new AddTaskCommand(validTask), model,","lastModifiedDate":"2021-10-12"},{"lineNumber":37,"author":{"gitId":"eltonyeh"},"content":"                String.format(AddTaskCommand.MESSAGE_SUCCESS, validTask), expectedModel);","lastModifiedDate":"2021-10-12"},{"lineNumber":38,"author":{"gitId":"eltonyeh"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":39,"author":{"gitId":"eltonyeh"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":40,"author":{"gitId":"eltonyeh"},"content":"    @Test","lastModifiedDate":"2021-10-12"},{"lineNumber":41,"author":{"gitId":"eltonyeh"},"content":"    public void execute_duplicateTask_throwsCommandException() {","lastModifiedDate":"2021-10-12"},{"lineNumber":42,"author":{"gitId":"eltonyeh"},"content":"        Task taskInList \u003d model.getAddressBook().getTaskList().get(0);","lastModifiedDate":"2021-10-12"},{"lineNumber":43,"author":{"gitId":"eltonyeh"},"content":"        assertCommandFailure(new AddTaskCommand(taskInList), model, AddTaskCommand.MESSAGE_DUPLICATE_TASK);","lastModifiedDate":"2021-10-12"},{"lineNumber":44,"author":{"gitId":"eltonyeh"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":45,"author":{"gitId":"eltonyeh"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":46,"author":{"gitId":"eltonyeh"},"content":"}","lastModifiedDate":"2021-10-12"}],"authorContributionMap":{"eltonyeh":46}},{"path":"src/test/java/seedu/address/logic/commands/CommandResultTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2018-12-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":10,"author":{"gitId":"-"},"content":"public class CommandResultTest {","lastModifiedDate":"2018-12-09"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-12-09"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-12-09"},{"lineNumber":13,"author":{"gitId":"-"},"content":"        CommandResult commandResult \u003d new CommandResult(\"feedback\");","lastModifiedDate":"2018-12-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2018-12-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"        assertTrue(commandResult.equals(new CommandResult(\"feedback\")));","lastModifiedDate":"2018-12-09"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        assertTrue(commandResult.equals(new CommandResult(\"feedback\", false, false)));","lastModifiedDate":"2018-12-09"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2018-12-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":"        assertTrue(commandResult.equals(commandResult));","lastModifiedDate":"2018-12-09"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertFalse(commandResult.equals(null));","lastModifiedDate":"2018-12-09"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        assertFalse(commandResult.equals(0.5f));","lastModifiedDate":"2018-12-09"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        // different feedbackToUser value -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertFalse(commandResult.equals(new CommandResult(\"different\")));","lastModifiedDate":"2018-12-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // different showHelp value -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertFalse(commandResult.equals(new CommandResult(\"feedback\", true, false)));","lastModifiedDate":"2018-12-09"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        // different exit value -\u003e returns false","lastModifiedDate":"2018-12-09"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        assertFalse(commandResult.equals(new CommandResult(\"feedback\", false, true)));","lastModifiedDate":"2018-12-09"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":38,"author":{"gitId":"kvihashini"},"content":"    @Test","lastModifiedDate":"2021-10-25"},{"lineNumber":39,"author":{"gitId":"kvihashini"},"content":"    public void exitAndHelp() {","lastModifiedDate":"2021-10-25"},{"lineNumber":40,"author":{"gitId":"kvihashini"},"content":"        String message \u003d \"Exiting Address Book as requested\";","lastModifiedDate":"2021-10-25"},{"lineNumber":41,"author":{"gitId":"kvihashini"},"content":"        CommandResult exitAndHelpCommand \u003d new CommandResult(message, false, true);","lastModifiedDate":"2021-10-25"},{"lineNumber":42,"author":{"gitId":"kvihashini"},"content":"        assertTrue(exitAndHelpCommand.isExit());","lastModifiedDate":"2021-10-25"},{"lineNumber":43,"author":{"gitId":"kvihashini"},"content":"        assertFalse(exitAndHelpCommand.isShowHelp());","lastModifiedDate":"2021-10-25"},{"lineNumber":44,"author":{"gitId":"kvihashini"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":45,"author":{"gitId":"kvihashini"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-12-09"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public void hashcode() {","lastModifiedDate":"2018-12-09"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        CommandResult commandResult \u003d new CommandResult(\"feedback\");","lastModifiedDate":"2018-12-09"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        // same values -\u003e returns same hashcode","lastModifiedDate":"2018-12-09"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        assertEquals(commandResult.hashCode(), new CommandResult(\"feedback\").hashCode());","lastModifiedDate":"2018-12-09"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        // different feedbackToUser value -\u003e returns different hashcode","lastModifiedDate":"2018-12-09"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        assertNotEquals(commandResult.hashCode(), new CommandResult(\"different\").hashCode());","lastModifiedDate":"2018-12-09"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        // different showHelp value -\u003e returns different hashcode","lastModifiedDate":"2018-12-09"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        assertNotEquals(commandResult.hashCode(), new CommandResult(\"feedback\", true, false).hashCode());","lastModifiedDate":"2018-12-09"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        // different exit value -\u003e returns different hashcode","lastModifiedDate":"2018-12-09"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertNotEquals(commandResult.hashCode(), new CommandResult(\"feedback\", false, true).hashCode());","lastModifiedDate":"2018-12-09"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":62,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-12-09"}],"authorContributionMap":{"kvihashini":8,"-":54}},{"path":"src/test/java/seedu/address/logic/commands/CommandTestUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-07-05"},{"lineNumber":6,"author":{"gitId":"tanhuakun"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_DAY;","lastModifiedDate":"2021-10-12"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-07-05"},{"lineNumber":8,"author":{"gitId":"tanhuakun"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_END_TIME;","lastModifiedDate":"2021-10-12"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-07-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-07-05"},{"lineNumber":11,"author":{"gitId":"tanhuakun"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_START_TIME;","lastModifiedDate":"2021-10-12"},{"lineNumber":12,"author":{"gitId":"tanhuakun"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_SUBJECT;","lastModifiedDate":"2021-10-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-07-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-06-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-07-20"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2018-01-31"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2017-06-05"},{"lineNumber":22,"author":{"gitId":"tanhuakun"},"content":"import seedu.address.logic.commands.persons.EditPersonCommand;","lastModifiedDate":"2021-10-03"},{"lineNumber":23,"author":{"gitId":"Neha-5678"},"content":"import seedu.address.logic.commands.tasks.EditTaskCommand;","lastModifiedDate":"2021-10-19"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2017-06-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-05"},{"lineNumber":26,"author":{"gitId":"kvihashini"},"content":"import seedu.address.model.group.Group;","lastModifiedDate":"2021-10-24"},{"lineNumber":27,"author":{"gitId":"kvihashini"},"content":"import seedu.address.model.group.GroupNameContainsKeywordsPredicate;","lastModifiedDate":"2021-10-24"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2017-07-20"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":30,"author":{"gitId":"Neha-5678"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2021-10-19"},{"lineNumber":31,"author":{"gitId":"Neha-5678"},"content":"import seedu.address.model.task.TaskNameContainsKeywordsPredicate;","lastModifiedDate":"2021-10-26"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2017-07-05"},{"lineNumber":33,"author":{"gitId":"Neha-5678"},"content":"import seedu.address.testutil.EditTaskDescriptorBuilder;","lastModifiedDate":"2021-10-19"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":" * Contains helper methods for testing commands.","lastModifiedDate":"2017-06-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"public class CommandTestUtil {","lastModifiedDate":"2017-06-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public static final String VALID_NAME_AMY \u003d \"Amy Bee\";","lastModifiedDate":"2017-07-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    public static final String VALID_NAME_BOB \u003d \"Bob Choo\";","lastModifiedDate":"2017-07-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public static final String VALID_PHONE_AMY \u003d \"11111111\";","lastModifiedDate":"2017-07-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public static final String VALID_PHONE_BOB \u003d \"22222222\";","lastModifiedDate":"2017-07-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public static final String VALID_EMAIL_AMY \u003d \"amy@example.com\";","lastModifiedDate":"2017-07-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public static final String VALID_EMAIL_BOB \u003d \"bob@example.com\";","lastModifiedDate":"2017-07-05"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    public static final String VALID_ADDRESS_AMY \u003d \"Block 312, Amy Street 1\";","lastModifiedDate":"2017-07-05"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public static final String VALID_ADDRESS_BOB \u003d \"Block 123, Bobby Street 3\";","lastModifiedDate":"2017-07-05"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public static final String VALID_TAG_HUSBAND \u003d \"husband\";","lastModifiedDate":"2017-07-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public static final String VALID_TAG_FRIEND \u003d \"friend\";","lastModifiedDate":"2017-07-05"},{"lineNumber":50,"author":{"gitId":"tanhuakun"},"content":"    public static final String VALID_SUBJECT_MATH \u003d \"Math\";","lastModifiedDate":"2021-10-12"},{"lineNumber":51,"author":{"gitId":"tanhuakun"},"content":"    public static final String VALID_SUBJECT_BIO \u003d \"Bio\";","lastModifiedDate":"2021-10-12"},{"lineNumber":52,"author":{"gitId":"tanhuakun"},"content":"    public static final String VALID_TIME_10 \u003d \"10:00\";","lastModifiedDate":"2021-10-12"},{"lineNumber":53,"author":{"gitId":"tanhuakun"},"content":"    public static final String VALID_TIME_12 \u003d \"12:00\";","lastModifiedDate":"2021-10-12"},{"lineNumber":54,"author":{"gitId":"tanhuakun"},"content":"    public static final String VALID_TIME_14 \u003d \"14:00\";","lastModifiedDate":"2021-10-12"},{"lineNumber":55,"author":{"gitId":"tanhuakun"},"content":"    public static final String VALID_DAY_MON \u003d \"Mon\";","lastModifiedDate":"2021-10-12"},{"lineNumber":56,"author":{"gitId":"tanhuakun"},"content":"    public static final String VALID_DAY_TUE \u003d \"Tue\";","lastModifiedDate":"2021-10-12"},{"lineNumber":57,"author":{"gitId":"Neha-5678"},"content":"    public static final String VALID_DESCRIPTION_QUIZ1 \u003d \"Maths Quiz 1\";","lastModifiedDate":"2021-10-19"},{"lineNumber":58,"author":{"gitId":"Neha-5678"},"content":"    public static final String VALID_DESCRIPTION_QUIZ2 \u003d \"Maths Quiz 2\";","lastModifiedDate":"2021-10-19"},{"lineNumber":59,"author":{"gitId":"Neha-5678"},"content":"    public static final String VALID_DEADLINE_QUIZ1 \u003d \"2021-11-10\";","lastModifiedDate":"2021-10-19"},{"lineNumber":60,"author":{"gitId":"Neha-5678"},"content":"    public static final String VALID_DEADLINE_QUIZ2 \u003d \"2021-11-20\";","lastModifiedDate":"2021-10-19"},{"lineNumber":61,"author":{"gitId":"tanhuakun"},"content":"    public static final String VALID_DATE_TIME_1 \u003d \"2021-02-03 10:00\";","lastModifiedDate":"2021-10-25"},{"lineNumber":62,"author":{"gitId":"tanhuakun"},"content":"    public static final String VALID_DATE_TIME_2 \u003d \"2021-12-20 23:43\";","lastModifiedDate":"2021-10-25"},{"lineNumber":63,"author":{"gitId":"tanhuakun"},"content":"    public static final String VALID_GROUP_TUTORIAL \u003d \"Tutorial\";","lastModifiedDate":"2021-10-25"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    public static final String NAME_DESC_AMY \u003d \" \" + PREFIX_NAME + VALID_NAME_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public static final String NAME_DESC_BOB \u003d \" \" + PREFIX_NAME + VALID_NAME_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public static final String PHONE_DESC_AMY \u003d \" \" + PREFIX_PHONE + VALID_PHONE_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public static final String PHONE_DESC_BOB \u003d \" \" + PREFIX_PHONE + VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public static final String EMAIL_DESC_AMY \u003d \" \" + PREFIX_EMAIL + VALID_EMAIL_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public static final String EMAIL_DESC_BOB \u003d \" \" + PREFIX_EMAIL + VALID_EMAIL_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public static final String ADDRESS_DESC_AMY \u003d \" \" + PREFIX_ADDRESS + VALID_ADDRESS_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public static final String ADDRESS_DESC_BOB \u003d \" \" + PREFIX_ADDRESS + VALID_ADDRESS_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public static final String TAG_DESC_FRIEND \u003d \" \" + PREFIX_TAG + VALID_TAG_FRIEND;","lastModifiedDate":"2017-07-05"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public static final String TAG_DESC_HUSBAND \u003d \" \" + PREFIX_TAG + VALID_TAG_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":75,"author":{"gitId":"tanhuakun"},"content":"    public static final String SUBJECT_DESC_MATH \u003d \" \" + PREFIX_SUBJECT + VALID_SUBJECT_MATH;","lastModifiedDate":"2021-10-12"},{"lineNumber":76,"author":{"gitId":"tanhuakun"},"content":"    public static final String SUBJECT_DESC_BIO \u003d \" \" + PREFIX_SUBJECT + VALID_SUBJECT_BIO;","lastModifiedDate":"2021-10-12"},{"lineNumber":77,"author":{"gitId":"tanhuakun"},"content":"    public static final String TIMESLOT_DESC_10_12 \u003d \" \" + PREFIX_START_TIME + VALID_TIME_10 + \" \" + PREFIX_END_TIME","lastModifiedDate":"2021-10-12"},{"lineNumber":78,"author":{"gitId":"tanhuakun"},"content":"            + VALID_TIME_12;","lastModifiedDate":"2021-10-12"},{"lineNumber":79,"author":{"gitId":"tanhuakun"},"content":"    public static final String TIMESLOT_DESC_10_14 \u003d \" \" + PREFIX_START_TIME + VALID_TIME_10 + \" \" + PREFIX_END_TIME","lastModifiedDate":"2021-10-12"},{"lineNumber":80,"author":{"gitId":"tanhuakun"},"content":"            + VALID_TIME_14;","lastModifiedDate":"2021-10-12"},{"lineNumber":81,"author":{"gitId":"tanhuakun"},"content":"    public static final String TIMESLOT_DESC_12_14 \u003d \" \" + PREFIX_START_TIME + VALID_TIME_12 + \" \" + PREFIX_END_TIME","lastModifiedDate":"2021-10-12"},{"lineNumber":82,"author":{"gitId":"tanhuakun"},"content":"            + VALID_TIME_14;","lastModifiedDate":"2021-10-12"},{"lineNumber":83,"author":{"gitId":"tanhuakun"},"content":"    public static final String DAY_MON \u003d \" \" + PREFIX_DAY + VALID_DAY_MON;","lastModifiedDate":"2021-10-12"},{"lineNumber":84,"author":{"gitId":"tanhuakun"},"content":"    public static final String DAY_TUE \u003d \" \" + PREFIX_DAY + VALID_DAY_TUE;","lastModifiedDate":"2021-10-12"},{"lineNumber":85,"author":{"gitId":"tanhuakun"},"content":"    public static final String DATE_TIME_DESC1 \u003d \" \" + PREFIX_DAY + VALID_DATE_TIME_1;","lastModifiedDate":"2021-10-25"},{"lineNumber":86,"author":{"gitId":"tanhuakun"},"content":"    public static final String DATE_TIME_DESC2 \u003d \" \" + PREFIX_DAY + VALID_DATE_TIME_2;","lastModifiedDate":"2021-10-25"},{"lineNumber":87,"author":{"gitId":"tanhuakun"},"content":"    public static final String GROUP_DESC_TUTORIAL \u003d \" \" + PREFIX_NAME + VALID_GROUP_TUTORIAL;","lastModifiedDate":"2021-10-25"},{"lineNumber":88,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    public static final String INVALID_NAME_DESC \u003d \" \" + PREFIX_NAME + \"James\u0026\"; // \u0027\u0026\u0027 not allowed in names","lastModifiedDate":"2017-07-05"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    public static final String INVALID_PHONE_DESC \u003d \" \" + PREFIX_PHONE + \"911a\"; // \u0027a\u0027 not allowed in phones","lastModifiedDate":"2017-07-05"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    public static final String INVALID_EMAIL_DESC \u003d \" \" + PREFIX_EMAIL + \"bob!yahoo\"; // missing \u0027@\u0027 symbol","lastModifiedDate":"2017-07-05"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    public static final String INVALID_ADDRESS_DESC \u003d \" \" + PREFIX_ADDRESS; // empty string not allowed for addresses","lastModifiedDate":"2017-07-05"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    public static final String INVALID_TAG_DESC \u003d \" \" + PREFIX_TAG + \"hubby*\"; // \u0027*\u0027 not allowed in tags","lastModifiedDate":"2017-07-05"},{"lineNumber":94,"author":{"gitId":"tanhuakun"},"content":"    public static final String INVALID_SUBJECT_DESC \u003d \" \" + PREFIX_SUBJECT + \"....\";","lastModifiedDate":"2021-10-12"},{"lineNumber":95,"author":{"gitId":"tanhuakun"},"content":"    public static final String INVALID_TIMESLOT_DESC \u003d \" \" + PREFIX_START_TIME + \"1345\" + \" \" + PREFIX_END_TIME","lastModifiedDate":"2021-10-12"},{"lineNumber":96,"author":{"gitId":"tanhuakun"},"content":"            + \" 0001\";","lastModifiedDate":"2021-10-12"},{"lineNumber":97,"author":{"gitId":"tanhuakun"},"content":"    public static final String INVALID_DAY_DESC \u003d \" \" + PREFIX_DAY + \"Tuesday\";","lastModifiedDate":"2021-10-12"},{"lineNumber":98,"author":{"gitId":"tanhuakun"},"content":"    public static final String INVALID_DATE_TIME_DESC \u003d \" \" + PREFIX_DAY + \"1999/19/10\";","lastModifiedDate":"2021-10-25"},{"lineNumber":99,"author":{"gitId":"tanhuakun"},"content":"    public static final String INVALID_GROUP_NAME_DESC \u003d \" \" + PREFIX_NAME + \"!@#AD\";","lastModifiedDate":"2021-10-25"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    public static final String PREAMBLE_WHITESPACE \u003d \"\\t  \\r  \\n\";","lastModifiedDate":"2017-12-23"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    public static final String PREAMBLE_NON_EMPTY \u003d \"NonEmptyPreamble\";","lastModifiedDate":"2017-12-23"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":104,"author":{"gitId":"tanhuakun"},"content":"    public static final EditPersonCommand.EditPersonDescriptor DESC_AMY;","lastModifiedDate":"2021-10-03"},{"lineNumber":105,"author":{"gitId":"tanhuakun"},"content":"    public static final EditPersonCommand.EditPersonDescriptor DESC_BOB;","lastModifiedDate":"2021-10-03"},{"lineNumber":106,"author":{"gitId":"Neha-5678"},"content":"    public static final EditTaskCommand.EditTaskDescriptor DESC_QUIZ1;","lastModifiedDate":"2021-10-19"},{"lineNumber":107,"author":{"gitId":"Neha-5678"},"content":"    public static final EditTaskCommand.EditTaskDescriptor DESC_QUIZ2;","lastModifiedDate":"2021-10-19"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    static {","lastModifiedDate":"2017-07-05"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        DESC_AMY \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_AMY)","lastModifiedDate":"2017-07-05"},{"lineNumber":111,"author":{"gitId":"-"},"content":"                .withPhone(VALID_PHONE_AMY).withEmail(VALID_EMAIL_AMY).withAddress(VALID_ADDRESS_AMY)","lastModifiedDate":"2017-07-05"},{"lineNumber":112,"author":{"gitId":"-"},"content":"                .withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2017-07-05"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        DESC_BOB \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB)","lastModifiedDate":"2017-07-05"},{"lineNumber":114,"author":{"gitId":"-"},"content":"                .withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_BOB).withAddress(VALID_ADDRESS_BOB)","lastModifiedDate":"2017-07-05"},{"lineNumber":115,"author":{"gitId":"-"},"content":"                .withTags(VALID_TAG_HUSBAND, VALID_TAG_FRIEND).build();","lastModifiedDate":"2017-07-05"},{"lineNumber":116,"author":{"gitId":"Neha-5678"},"content":"        DESC_QUIZ1 \u003d new EditTaskDescriptorBuilder().withDescription(VALID_DESCRIPTION_QUIZ1)","lastModifiedDate":"2021-10-19"},{"lineNumber":117,"author":{"gitId":"Neha-5678"},"content":"                .withDeadline(VALID_DEADLINE_QUIZ1).build();","lastModifiedDate":"2021-10-19"},{"lineNumber":118,"author":{"gitId":"Neha-5678"},"content":"        DESC_QUIZ2 \u003d new EditTaskDescriptorBuilder().withDescription(VALID_DESCRIPTION_QUIZ2)","lastModifiedDate":"2021-10-19"},{"lineNumber":119,"author":{"gitId":"Neha-5678"},"content":"                .withDeadline(VALID_DEADLINE_QUIZ2).build();","lastModifiedDate":"2021-10-19"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-05"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-05"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":123,"author":{"gitId":"-"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":124,"author":{"gitId":"-"},"content":"     * - the returned {@link CommandResult} matches {@code expectedCommandResult} \u003cbr\u003e","lastModifiedDate":"2018-12-09"},{"lineNumber":125,"author":{"gitId":"-"},"content":"     * - the {@code actualModel} matches {@code expectedModel}","lastModifiedDate":"2019-01-25"},{"lineNumber":126,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    public static void assertCommandSuccess(Command command, Model actualModel, CommandResult expectedCommandResult,","lastModifiedDate":"2019-01-25"},{"lineNumber":128,"author":{"gitId":"-"},"content":"            Model expectedModel) {","lastModifiedDate":"2019-01-25"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-08-15"},{"lineNumber":130,"author":{"gitId":"-"},"content":"            CommandResult result \u003d command.execute(actualModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":131,"author":{"gitId":"-"},"content":"            assertEquals(expectedCommandResult, result);","lastModifiedDate":"2018-12-09"},{"lineNumber":132,"author":{"gitId":"-"},"content":"            assertEquals(expectedModel, actualModel);","lastModifiedDate":"2017-06-05"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        } catch (CommandException ce) {","lastModifiedDate":"2017-08-15"},{"lineNumber":134,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"Execution of command should not fail.\", ce);","lastModifiedDate":"2017-08-15"},{"lineNumber":135,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-08-15"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":137,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-12-09"},{"lineNumber":139,"author":{"gitId":"-"},"content":"     * Convenience wrapper to {@link #assertCommandSuccess(Command, Model, CommandResult, Model)}","lastModifiedDate":"2019-01-25"},{"lineNumber":140,"author":{"gitId":"-"},"content":"     * that takes a string {@code expectedMessage}.","lastModifiedDate":"2018-12-09"},{"lineNumber":141,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-12-09"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    public static void assertCommandSuccess(Command command, Model actualModel, String expectedMessage,","lastModifiedDate":"2019-01-25"},{"lineNumber":143,"author":{"gitId":"-"},"content":"            Model expectedModel) {","lastModifiedDate":"2019-01-25"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        CommandResult expectedCommandResult \u003d new CommandResult(expectedMessage);","lastModifiedDate":"2018-12-09"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, actualModel, expectedCommandResult, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-12-09"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-09"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":149,"author":{"gitId":"-"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":150,"author":{"gitId":"-"},"content":"     * - a {@code CommandException} is thrown \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":151,"author":{"gitId":"-"},"content":"     * - the CommandException message matches {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2017-06-05"},{"lineNumber":152,"author":{"gitId":"-"},"content":"     * - the address book, filtered person list and selected person in {@code actualModel} remain unchanged","lastModifiedDate":"2019-01-25"},{"lineNumber":153,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":154,"author":{"gitId":"-"},"content":"    public static void assertCommandFailure(Command command, Model actualModel, String expectedMessage) {","lastModifiedDate":"2019-01-25"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        // we are unable to defensively copy the model for comparison later, so we can","lastModifiedDate":"2017-06-05"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        // only do so by copying its components.","lastModifiedDate":"2017-06-05"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        AddressBook expectedAddressBook \u003d new AddressBook(actualModel.getAddressBook());","lastModifiedDate":"2017-06-05"},{"lineNumber":158,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e expectedFilteredList \u003d new ArrayList\u003c\u003e(actualModel.getFilteredPersonList());","lastModifiedDate":"2018-01-10"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        assertThrows(CommandException.class, expectedMessage, () -\u003e command.execute(actualModel));","lastModifiedDate":"2019-05-03"},{"lineNumber":160,"author":{"gitId":"-"},"content":"        assertEquals(expectedAddressBook, actualModel.getAddressBook());","lastModifiedDate":"2017-06-05"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        assertEquals(expectedFilteredList, actualModel.getFilteredPersonList());","lastModifiedDate":"2017-06-05"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":163,"author":{"gitId":"Neha-5678"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":164,"author":{"gitId":"Neha-5678"},"content":"    /**","lastModifiedDate":"2021-10-19"},{"lineNumber":165,"author":{"gitId":"Neha-5678"},"content":"     * Executes the given {@code command}, confirms that \u003cbr\u003e","lastModifiedDate":"2021-10-19"},{"lineNumber":166,"author":{"gitId":"Neha-5678"},"content":"     * - a {@code CommandException} is thrown \u003cbr\u003e","lastModifiedDate":"2021-10-19"},{"lineNumber":167,"author":{"gitId":"Neha-5678"},"content":"     * - the CommandException message matches {@code expectedMessage} \u003cbr\u003e","lastModifiedDate":"2021-10-19"},{"lineNumber":168,"author":{"gitId":"Neha-5678"},"content":"     * - the address book, filtered task list and selected task in {@code actualModel} remain unchanged","lastModifiedDate":"2021-10-19"},{"lineNumber":169,"author":{"gitId":"Neha-5678"},"content":"     */","lastModifiedDate":"2021-10-19"},{"lineNumber":170,"author":{"gitId":"Neha-5678"},"content":"    public static void assertTaskCommandFailure(Command command, Model actualModel, String expectedMessage) {","lastModifiedDate":"2021-10-19"},{"lineNumber":171,"author":{"gitId":"Neha-5678"},"content":"        // we are unable to defensively copy the model for comparison later, so we can","lastModifiedDate":"2021-10-19"},{"lineNumber":172,"author":{"gitId":"Neha-5678"},"content":"        // only do so by copying its components.","lastModifiedDate":"2021-10-19"},{"lineNumber":173,"author":{"gitId":"Neha-5678"},"content":"        AddressBook expectedAddressBook \u003d new AddressBook(actualModel.getAddressBook());","lastModifiedDate":"2021-10-19"},{"lineNumber":174,"author":{"gitId":"Neha-5678"},"content":"        List\u003cTask\u003e expectedFilteredList \u003d new ArrayList\u003c\u003e(actualModel.getFilteredTaskList());","lastModifiedDate":"2021-10-19"},{"lineNumber":175,"author":{"gitId":"Neha-5678"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":176,"author":{"gitId":"Neha-5678"},"content":"        assertThrows(CommandException.class, expectedMessage, () -\u003e command.execute(actualModel));","lastModifiedDate":"2021-10-19"},{"lineNumber":177,"author":{"gitId":"Neha-5678"},"content":"        assertEquals(expectedAddressBook, actualModel.getAddressBook());","lastModifiedDate":"2021-10-19"},{"lineNumber":178,"author":{"gitId":"Neha-5678"},"content":"        assertEquals(expectedFilteredList, actualModel.getFilteredTaskList());","lastModifiedDate":"2021-10-19"},{"lineNumber":179,"author":{"gitId":"Neha-5678"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-20"},{"lineNumber":181,"author":{"gitId":"-"},"content":"     * Updates {@code model}\u0027s filtered list to show only the person at the given {@code targetIndex} in the","lastModifiedDate":"2018-01-31"},{"lineNumber":182,"author":{"gitId":"-"},"content":"     * {@code model}\u0027s address book.","lastModifiedDate":"2018-01-31"},{"lineNumber":183,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-20"},{"lineNumber":184,"author":{"gitId":"-"},"content":"    public static void showPersonAtIndex(Model model, Index targetIndex) {","lastModifiedDate":"2018-01-31"},{"lineNumber":185,"author":{"gitId":"-"},"content":"        assertTrue(targetIndex.getZeroBased() \u003c model.getFilteredPersonList().size());","lastModifiedDate":"2018-01-31"},{"lineNumber":186,"author":{"gitId":"-"},"content":"        Person person \u003d model.getFilteredPersonList().get(targetIndex.getZeroBased());","lastModifiedDate":"2018-01-31"},{"lineNumber":187,"author":{"gitId":"-"},"content":"        final String[] splitName \u003d person.getName().fullName.split(\"\\\\s+\");","lastModifiedDate":"2017-07-20"},{"lineNumber":188,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(new NameContainsKeywordsPredicate(Arrays.asList(splitName[0])));","lastModifiedDate":"2017-07-20"},{"lineNumber":189,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-20"},{"lineNumber":190,"author":{"gitId":"-"},"content":"        assertEquals(1, model.getFilteredPersonList().size());","lastModifiedDate":"2018-02-08"},{"lineNumber":191,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-20"},{"lineNumber":192,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":193,"author":{"gitId":"Neha-5678"},"content":"    /**","lastModifiedDate":"2021-10-26"},{"lineNumber":194,"author":{"gitId":"Neha-5678"},"content":"     * Updates {@code model}\u0027s filtered list to show only the task at the given {@code targetIndex} in the","lastModifiedDate":"2021-10-26"},{"lineNumber":195,"author":{"gitId":"Neha-5678"},"content":"     * {@code model}\u0027s address book.","lastModifiedDate":"2021-10-26"},{"lineNumber":196,"author":{"gitId":"Neha-5678"},"content":"     */","lastModifiedDate":"2021-10-26"},{"lineNumber":197,"author":{"gitId":"Neha-5678"},"content":"    public static void showTaskAtIndex(Model model, Index targetIndex) {","lastModifiedDate":"2021-10-26"},{"lineNumber":198,"author":{"gitId":"Neha-5678"},"content":"        assertTrue(targetIndex.getZeroBased() \u003c model.getFilteredTaskList().size());","lastModifiedDate":"2021-10-26"},{"lineNumber":199,"author":{"gitId":"Neha-5678"},"content":"        Task task \u003d model.getFilteredTaskList().get(targetIndex.getZeroBased());","lastModifiedDate":"2021-10-26"},{"lineNumber":200,"author":{"gitId":"Neha-5678"},"content":"        final String[] splitDescription \u003d task.getDescription().description.split(\"\\\\s+\");","lastModifiedDate":"2021-10-26"},{"lineNumber":201,"author":{"gitId":"Neha-5678"},"content":"        model.updateFilteredTaskList(new TaskNameContainsKeywordsPredicate(Arrays.asList(splitDescription[0])));","lastModifiedDate":"2021-10-26"},{"lineNumber":202,"author":{"gitId":"Neha-5678"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":203,"author":{"gitId":"Neha-5678"},"content":"        assertEquals(1, model.getFilteredTaskList().size());","lastModifiedDate":"2021-10-26"},{"lineNumber":204,"author":{"gitId":"Neha-5678"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":205,"author":{"gitId":"Neha-5678"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":206,"author":{"gitId":"kvihashini"},"content":"    /**","lastModifiedDate":"2021-10-24"},{"lineNumber":207,"author":{"gitId":"kvihashini"},"content":"     * Updates {@code model}\u0027s filtered list to show only the group at the given {@code targetIndex} in the","lastModifiedDate":"2021-10-24"},{"lineNumber":208,"author":{"gitId":"kvihashini"},"content":"     * {@code model}\u0027s address book.","lastModifiedDate":"2021-10-24"},{"lineNumber":209,"author":{"gitId":"kvihashini"},"content":"     */","lastModifiedDate":"2021-10-24"},{"lineNumber":210,"author":{"gitId":"kvihashini"},"content":"    public static void showGroupAtIndex(Model model, Index targetIndex) {","lastModifiedDate":"2021-10-24"},{"lineNumber":211,"author":{"gitId":"kvihashini"},"content":"        assertTrue(targetIndex.getZeroBased() \u003c model.getFilteredGroupList().size());","lastModifiedDate":"2021-10-24"},{"lineNumber":212,"author":{"gitId":"kvihashini"},"content":"        Group group \u003d model.getFilteredGroupList().get(targetIndex.getZeroBased());","lastModifiedDate":"2021-10-24"},{"lineNumber":213,"author":{"gitId":"kvihashini"},"content":"        final String[] splitName \u003d group.getName().name.split(\"\\\\s+\");","lastModifiedDate":"2021-10-24"},{"lineNumber":214,"author":{"gitId":"kvihashini"},"content":"        model.updateFilteredGroupList(new GroupNameContainsKeywordsPredicate(Arrays.asList(splitName[0])));","lastModifiedDate":"2021-10-24"},{"lineNumber":215,"author":{"gitId":"kvihashini"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":216,"author":{"gitId":"kvihashini"},"content":"        assertEquals(1, model.getFilteredGroupList().size());","lastModifiedDate":"2021-10-24"},{"lineNumber":217,"author":{"gitId":"kvihashini"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":218,"author":{"gitId":"kvihashini"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":219,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-05"}],"authorContributionMap":{"Neha-5678":44,"kvihashini":15,"tanhuakun":36,"-":124}},{"path":"src/test/java/seedu/address/logic/commands/DeletePersonCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2017-07-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showPersonAtIndex;","lastModifiedDate":"2018-01-31"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2017-06-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-06-05"},{"lineNumber":16,"author":{"gitId":"tanhuakun"},"content":"import seedu.address.logic.commands.persons.DeletePersonCommand;","lastModifiedDate":"2021-10-03"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":" * Contains integration tests (interaction with the Model) and unit tests for","lastModifiedDate":"2020-12-16"},{"lineNumber":24,"author":{"gitId":"tanhuakun"},"content":" * {@code DeletePersonCommand}.","lastModifiedDate":"2021-10-03"},{"lineNumber":25,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-05"},{"lineNumber":26,"author":{"gitId":"tanhuakun"},"content":"public class DeletePersonCommandTest {","lastModifiedDate":"2021-10-03"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2017-07-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public void execute_validIndexUnfilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        Person personToDelete \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":33,"author":{"gitId":"tanhuakun"},"content":"        DeletePersonCommand deletePersonCommand \u003d new DeletePersonCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2021-10-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":35,"author":{"gitId":"tanhuakun"},"content":"        String expectedMessage \u003d String.format(DeletePersonCommand.MESSAGE_DELETE_PERSON_SUCCESS, personToDelete);","lastModifiedDate":"2021-10-03"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        ModelManager expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2017-06-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        expectedModel.deletePerson(personToDelete);","lastModifiedDate":"2017-06-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":40,"author":{"gitId":"tanhuakun"},"content":"        assertCommandSuccess(deletePersonCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2021-10-03"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public void execute_invalidIndexUnfilteredList_throwsCommandException() {","lastModifiedDate":"2018-08-08"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredPersonList().size() + 1);","lastModifiedDate":"2017-06-05"},{"lineNumber":46,"author":{"gitId":"tanhuakun"},"content":"        DeletePersonCommand deletePersonCommand \u003d new DeletePersonCommand(outOfBoundIndex);","lastModifiedDate":"2021-10-03"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":48,"author":{"gitId":"tanhuakun"},"content":"        assertCommandFailure(deletePersonCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2021-10-03"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public void execute_validIndexFilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        Person personToDelete \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":56,"author":{"gitId":"tanhuakun"},"content":"        DeletePersonCommand deletePersonCommand \u003d new DeletePersonCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2021-10-03"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":58,"author":{"gitId":"tanhuakun"},"content":"        String expectedMessage \u003d String.format(DeletePersonCommand.MESSAGE_DELETE_PERSON_SUCCESS, personToDelete);","lastModifiedDate":"2021-10-03"},{"lineNumber":59,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2017-06-05"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        expectedModel.deletePerson(personToDelete);","lastModifiedDate":"2017-06-05"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        showNoPerson(expectedModel);","lastModifiedDate":"2017-06-05"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":64,"author":{"gitId":"tanhuakun"},"content":"        assertCommandSuccess(deletePersonCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2021-10-03"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-05"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public void execute_invalidIndexFilteredList_throwsCommandException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2017-06-05"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        // ensures that outOfBoundIndex is still in bounds of address book list","lastModifiedDate":"2017-06-05"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getAddressBook().getPersonList().size());","lastModifiedDate":"2017-06-05"},{"lineNumber":74,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":75,"author":{"gitId":"tanhuakun"},"content":"        DeletePersonCommand deletePersonCommand \u003d new DeletePersonCommand(outOfBoundIndex);","lastModifiedDate":"2021-10-03"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":77,"author":{"gitId":"tanhuakun"},"content":"        assertCommandFailure(deletePersonCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2021-10-03"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-01-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-08-08"},{"lineNumber":82,"author":{"gitId":"tanhuakun"},"content":"        DeletePersonCommand deleteFirstCommand \u003d new DeletePersonCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2021-10-03"},{"lineNumber":83,"author":{"gitId":"tanhuakun"},"content":"        DeletePersonCommand deleteSecondCommand \u003d new DeletePersonCommand(INDEX_SECOND_PERSON);","lastModifiedDate":"2021-10-03"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        assertTrue(deleteFirstCommand.equals(deleteFirstCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":89,"author":{"gitId":"tanhuakun"},"content":"        DeletePersonCommand deleteFirstCommandCopy \u003d new DeletePersonCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2021-10-03"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        assertTrue(deleteFirstCommand.equals(deleteFirstCommandCopy));","lastModifiedDate":"2017-06-27"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(1));","lastModifiedDate":"2017-06-27"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(null));","lastModifiedDate":"2017-06-27"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        assertFalse(deleteFirstCommand.equals(deleteSecondCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":103,"author":{"gitId":"-"},"content":"     * Updates {@code model}\u0027s filtered list to show no one.","lastModifiedDate":"2017-06-05"},{"lineNumber":104,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    private void showNoPerson(Model model) {","lastModifiedDate":"2017-06-05"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        model.updateFilteredPersonList(p -\u003e false);","lastModifiedDate":"2017-06-12"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        assertTrue(model.getFilteredPersonList().isEmpty());","lastModifiedDate":"2018-02-08"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":110,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-05"}],"authorContributionMap":{"tanhuakun":16,"-":94}},{"path":"src/test/java/seedu/address/logic/commands/EditPersonCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-05-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":3,"author":{"gitId":"eltonyeh"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-11-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"eltonyeh"},"content":"import static org.junit.jupiter.api.Assertions.fail;","lastModifiedDate":"2021-11-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2017-07-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2017-07-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showPersonAtIndex;","lastModifiedDate":"2018-01-31"},{"lineNumber":15,"author":{"gitId":"tanhuakun"},"content":"import static seedu.address.logic.parser.persons.EditPersonCommandParser.MESSAGE_EDIT_PERSON_SUCCESS;","lastModifiedDate":"2021-10-19"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2017-05-04"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":24,"author":{"gitId":"eltonyeh"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-11-05"},{"lineNumber":25,"author":{"gitId":"tanhuakun"},"content":"import seedu.address.logic.commands.persons.EditPersonCommand;","lastModifiedDate":"2021-10-03"},{"lineNumber":26,"author":{"gitId":"tanhuakun"},"content":"import seedu.address.logic.commands.persons.EditPersonCommand.EditPersonDescriptor;","lastModifiedDate":"2021-10-03"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2017-05-04"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-05-04"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-05-04"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-05-04"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-05-04"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2017-05-22"},{"lineNumber":33,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-05-04"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":35,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-05-04"},{"lineNumber":36,"author":{"gitId":"tanhuakun"},"content":" * Contains integration tests (interaction with the Model) and unit tests for EditPersonCommand.","lastModifiedDate":"2021-10-03"},{"lineNumber":37,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-05-04"},{"lineNumber":38,"author":{"gitId":"tanhuakun"},"content":"public class EditPersonCommandTest {","lastModifiedDate":"2021-10-03"},{"lineNumber":39,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2017-07-19"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public void execute_allFieldsSpecifiedUnfilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d new PersonBuilder().build();","lastModifiedDate":"2017-05-26"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder(editedPerson).build();","lastModifiedDate":"2017-06-05"},{"lineNumber":46,"author":{"gitId":"tanhuakun"},"content":"        EditPersonCommand editPersonCommand \u003d new EditPersonCommand(INDEX_FIRST_PERSON, descriptor,","lastModifiedDate":"2021-10-19"},{"lineNumber":47,"author":{"gitId":"tanhuakun"},"content":"                MESSAGE_EDIT_PERSON_SUCCESS);","lastModifiedDate":"2021-10-19"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":49,"author":{"gitId":"tanhuakun"},"content":"        String expectedMessage \u003d String.format(MESSAGE_EDIT_PERSON_SUCCESS, editedPerson);","lastModifiedDate":"2021-10-19"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2017-06-05"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        expectedModel.setPerson(model.getFilteredPersonList().get(0), editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":54,"author":{"gitId":"eltonyeh"},"content":"        try {","lastModifiedDate":"2021-11-05"},{"lineNumber":55,"author":{"gitId":"eltonyeh"},"content":"            CommandResult commandResult \u003d editPersonCommand.execute(model);","lastModifiedDate":"2021-11-05"},{"lineNumber":56,"author":{"gitId":"eltonyeh"},"content":"            assertEquals(commandResult, new CommandResult(expectedMessage));","lastModifiedDate":"2021-11-05"},{"lineNumber":57,"author":{"gitId":"eltonyeh"},"content":"        } catch (CommandException e) {","lastModifiedDate":"2021-11-05"},{"lineNumber":58,"author":{"gitId":"eltonyeh"},"content":"            fail(\"The command cannot be executed.\");","lastModifiedDate":"2021-11-05"},{"lineNumber":59,"author":{"gitId":"eltonyeh"},"content":"        }","lastModifiedDate":"2021-11-05"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public void execute_someFieldsSpecifiedUnfilteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        Index indexLastPerson \u003d Index.fromOneBased(model.getFilteredPersonList().size());","lastModifiedDate":"2017-05-18"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        Person lastPerson \u003d model.getFilteredPersonList().get(indexLastPerson.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        PersonBuilder personInList \u003d new PersonBuilder(lastPerson);","lastModifiedDate":"2017-05-18"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d personInList.withName(VALID_NAME_BOB).withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2017-05-18"},{"lineNumber":69,"author":{"gitId":"-"},"content":"                .withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2017-05-18"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB)","lastModifiedDate":"2017-05-18"},{"lineNumber":72,"author":{"gitId":"-"},"content":"                .withPhone(VALID_PHONE_BOB).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2017-05-18"},{"lineNumber":73,"author":{"gitId":"tanhuakun"},"content":"        EditPersonCommand editPersonCommand \u003d new EditPersonCommand(indexLastPerson, descriptor,","lastModifiedDate":"2021-10-19"},{"lineNumber":74,"author":{"gitId":"tanhuakun"},"content":"                MESSAGE_EDIT_PERSON_SUCCESS);","lastModifiedDate":"2021-10-19"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":76,"author":{"gitId":"tanhuakun"},"content":"        String expectedMessage \u003d String.format(MESSAGE_EDIT_PERSON_SUCCESS, editedPerson);","lastModifiedDate":"2021-10-19"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2017-05-18"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        expectedModel.setPerson(lastPerson, editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":81,"author":{"gitId":"tanhuakun"},"content":"        assertCommandSuccess(editPersonCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2021-10-03"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    public void execute_noFieldSpecifiedUnfilteredList_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":86,"author":{"gitId":"tanhuakun"},"content":"        EditPersonCommand editPersonCommand \u003d new EditPersonCommand(INDEX_FIRST_PERSON, new EditPersonDescriptor(),","lastModifiedDate":"2021-10-19"},{"lineNumber":87,"author":{"gitId":"tanhuakun"},"content":"                MESSAGE_EDIT_PERSON_SUCCESS);","lastModifiedDate":"2021-10-19"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":90,"author":{"gitId":"tanhuakun"},"content":"        String expectedMessage \u003d String.format(MESSAGE_EDIT_PERSON_SUCCESS, editedPerson);","lastModifiedDate":"2021-10-19"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2017-05-18"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":94,"author":{"gitId":"tanhuakun"},"content":"        assertCommandSuccess(editPersonCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2021-10-03"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    public void execute_filteredList_success() {","lastModifiedDate":"2018-08-07"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        Person personInFilteredList \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        Person editedPerson \u003d new PersonBuilder(personInFilteredList).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2017-05-18"},{"lineNumber":103,"author":{"gitId":"tanhuakun"},"content":"        EditPersonCommand editPersonCommand \u003d new EditPersonCommand(INDEX_FIRST_PERSON,","lastModifiedDate":"2021-10-03"},{"lineNumber":104,"author":{"gitId":"tanhuakun"},"content":"                new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB).build(), MESSAGE_EDIT_PERSON_SUCCESS);","lastModifiedDate":"2021-10-19"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":106,"author":{"gitId":"tanhuakun"},"content":"        String expectedMessage \u003d String.format(MESSAGE_EDIT_PERSON_SUCCESS, editedPerson);","lastModifiedDate":"2021-10-19"},{"lineNumber":107,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":108,"author":{"gitId":"-"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2017-05-18"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        expectedModel.setPerson(model.getFilteredPersonList().get(0), editedPerson);","lastModifiedDate":"2018-08-17"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":111,"author":{"gitId":"tanhuakun"},"content":"        assertCommandSuccess(editPersonCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2021-10-03"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    public void execute_duplicatePersonUnfilteredList_failure() {","lastModifiedDate":"2017-08-15"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        Person firstPerson \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder(firstPerson).build();","lastModifiedDate":"2017-06-05"},{"lineNumber":118,"author":{"gitId":"tanhuakun"},"content":"        EditPersonCommand editPersonCommand \u003d new EditPersonCommand(INDEX_SECOND_PERSON, descriptor,","lastModifiedDate":"2021-10-19"},{"lineNumber":119,"author":{"gitId":"tanhuakun"},"content":"                MESSAGE_EDIT_PERSON_SUCCESS);","lastModifiedDate":"2021-10-19"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":121,"author":{"gitId":"tanhuakun"},"content":"        assertCommandFailure(editPersonCommand, model, EditPersonCommand.MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2021-10-03"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":123,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    public void execute_duplicatePersonFilteredList_failure() {","lastModifiedDate":"2017-08-15"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":128,"author":{"gitId":"-"},"content":"        // edit person in filtered list into a duplicate in address book","lastModifiedDate":"2017-05-18"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        Person personInList \u003d model.getAddressBook().getPersonList().get(INDEX_SECOND_PERSON.getZeroBased());","lastModifiedDate":"2018-01-10"},{"lineNumber":130,"author":{"gitId":"tanhuakun"},"content":"        EditPersonCommand editPersonCommand \u003d new EditPersonCommand(INDEX_FIRST_PERSON,","lastModifiedDate":"2021-10-03"},{"lineNumber":131,"author":{"gitId":"tanhuakun"},"content":"                new EditPersonDescriptorBuilder(personInList).build(), MESSAGE_EDIT_PERSON_SUCCESS);","lastModifiedDate":"2021-10-19"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":133,"author":{"gitId":"tanhuakun"},"content":"        assertCommandFailure(editPersonCommand, model, EditPersonCommand.MESSAGE_DUPLICATE_PERSON);","lastModifiedDate":"2021-10-03"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":135,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":136,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    public void execute_invalidPersonIndexUnfilteredList_failure() {","lastModifiedDate":"2017-08-15"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredPersonList().size() + 1);","lastModifiedDate":"2017-05-18"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB).build();","lastModifiedDate":"2017-05-22"},{"lineNumber":140,"author":{"gitId":"tanhuakun"},"content":"        EditPersonCommand editPersonCommand \u003d new EditPersonCommand(outOfBoundIndex, descriptor,","lastModifiedDate":"2021-10-19"},{"lineNumber":141,"author":{"gitId":"tanhuakun"},"content":"                MESSAGE_EDIT_PERSON_SUCCESS);","lastModifiedDate":"2021-10-19"},{"lineNumber":142,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":143,"author":{"gitId":"tanhuakun"},"content":"        assertCommandFailure(editPersonCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2021-10-03"},{"lineNumber":144,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":145,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":146,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-05-18"},{"lineNumber":147,"author":{"gitId":"-"},"content":"     * Edit filtered list where index is larger than size of filtered list,","lastModifiedDate":"2017-05-18"},{"lineNumber":148,"author":{"gitId":"-"},"content":"     * but smaller than size of address book","lastModifiedDate":"2017-05-18"},{"lineNumber":149,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-05-18"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-18"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    public void execute_invalidPersonIndexFilteredList_failure() {","lastModifiedDate":"2017-08-15"},{"lineNumber":152,"author":{"gitId":"-"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2018-01-31"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2017-05-18"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        // ensures that outOfBoundIndex is still in bounds of address book list","lastModifiedDate":"2017-05-18"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getAddressBook().getPersonList().size());","lastModifiedDate":"2017-05-18"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":157,"author":{"gitId":"tanhuakun"},"content":"        EditPersonCommand editPersonCommand \u003d new EditPersonCommand(outOfBoundIndex,","lastModifiedDate":"2021-10-03"},{"lineNumber":158,"author":{"gitId":"tanhuakun"},"content":"                new EditPersonDescriptorBuilder().withName(VALID_NAME_BOB).build(), MESSAGE_EDIT_PERSON_SUCCESS);","lastModifiedDate":"2021-10-19"},{"lineNumber":159,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":160,"author":{"gitId":"tanhuakun"},"content":"        assertCommandFailure(editPersonCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2021-10-03"},{"lineNumber":161,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-18"},{"lineNumber":162,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-18"},{"lineNumber":163,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-01-23"},{"lineNumber":164,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-08-08"},{"lineNumber":165,"author":{"gitId":"tanhuakun"},"content":"        final EditPersonCommand standardCommand \u003d new EditPersonCommand(INDEX_FIRST_PERSON, DESC_AMY,","lastModifiedDate":"2021-10-19"},{"lineNumber":166,"author":{"gitId":"tanhuakun"},"content":"                MESSAGE_EDIT_PERSON_SUCCESS);","lastModifiedDate":"2021-10-19"},{"lineNumber":167,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-08"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        EditPersonDescriptor copyDescriptor \u003d new EditPersonDescriptor(DESC_AMY);","lastModifiedDate":"2017-05-08"},{"lineNumber":170,"author":{"gitId":"tanhuakun"},"content":"        EditPersonCommand commandWithSameValues \u003d new EditPersonCommand(INDEX_FIRST_PERSON, copyDescriptor,","lastModifiedDate":"2021-10-19"},{"lineNumber":171,"author":{"gitId":"tanhuakun"},"content":"                MESSAGE_EDIT_PERSON_SUCCESS);","lastModifiedDate":"2021-10-19"},{"lineNumber":172,"author":{"gitId":"-"},"content":"        assertTrue(standardCommand.equals(commandWithSameValues));","lastModifiedDate":"2017-05-08"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-08"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        assertTrue(standardCommand.equals(standardCommand));","lastModifiedDate":"2017-05-08"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":178,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(null));","lastModifiedDate":"2017-05-08"},{"lineNumber":179,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":180,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        assertFalse(standardCommand.equals(new ClearCommand()));","lastModifiedDate":"2017-05-08"},{"lineNumber":182,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":183,"author":{"gitId":"-"},"content":"        // different index -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":184,"author":{"gitId":"tanhuakun"},"content":"        assertFalse(standardCommand.equals(new EditPersonCommand(INDEX_SECOND_PERSON, DESC_AMY,","lastModifiedDate":"2021-10-19"},{"lineNumber":185,"author":{"gitId":"tanhuakun"},"content":"                MESSAGE_EDIT_PERSON_SUCCESS)));","lastModifiedDate":"2021-10-19"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-08"},{"lineNumber":187,"author":{"gitId":"-"},"content":"        // different descriptor -\u003e returns false","lastModifiedDate":"2017-05-08"},{"lineNumber":188,"author":{"gitId":"tanhuakun"},"content":"        assertFalse(standardCommand.equals(new EditPersonCommand(INDEX_FIRST_PERSON, DESC_BOB,","lastModifiedDate":"2021-10-19"},{"lineNumber":189,"author":{"gitId":"tanhuakun"},"content":"                MESSAGE_EDIT_PERSON_SUCCESS)));","lastModifiedDate":"2021-10-19"},{"lineNumber":190,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-08"},{"lineNumber":191,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":192,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-08"}],"authorContributionMap":{"eltonyeh":9,"tanhuakun":40,"-":143}},{"path":"src/test/java/seedu/address/logic/commands/EditPersonDescriptorTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-05-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":15,"author":{"gitId":"tanhuakun"},"content":"import seedu.address.logic.commands.persons.EditPersonCommand.EditPersonDescriptor;","lastModifiedDate":"2021-10-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2017-05-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class EditPersonDescriptorTest {","lastModifiedDate":"2017-05-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptorWithSameValues \u003d new EditPersonDescriptor(DESC_AMY);","lastModifiedDate":"2017-05-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"        assertTrue(DESC_AMY.equals(descriptorWithSameValues));","lastModifiedDate":"2017-05-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        assertTrue(DESC_AMY.equals(DESC_AMY));","lastModifiedDate":"2017-05-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(null));","lastModifiedDate":"2017-05-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(5));","lastModifiedDate":"2017-05-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(DESC_BOB));","lastModifiedDate":"2017-05-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        // different name -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        EditPersonDescriptor editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2017-05-05"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        // different phone -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2017-05-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        // different email -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withEmail(VALID_EMAIL_BOB).build();","lastModifiedDate":"2017-05-05"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        // different address -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withAddress(VALID_ADDRESS_BOB).build();","lastModifiedDate":"2017-05-05"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        // different tags -\u003e returns false","lastModifiedDate":"2017-05-05"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        editedAmy \u003d new EditPersonDescriptorBuilder(DESC_AMY).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2017-05-05"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertFalse(DESC_AMY.equals(editedAmy));","lastModifiedDate":"2017-05-05"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-05"}],"authorContributionMap":{"tanhuakun":1,"-":57}},{"path":"src/test/java/seedu/address/logic/commands/FindPersonCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2017-06-12"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_PERSONS_LISTED_OVERVIEW;","lastModifiedDate":"2017-06-12"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2018-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.CARL;","lastModifiedDate":"2017-07-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ELLE;","lastModifiedDate":"2017-07-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.FIONA;","lastModifiedDate":"2017-07-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2017-06-12"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":18,"author":{"gitId":"tanhuakun"},"content":"import seedu.address.logic.commands.persons.FindPersonCommand;","lastModifiedDate":"2021-10-03"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-06-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2017-06-12"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2017-06-12"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-12"},{"lineNumber":25,"author":{"gitId":"tanhuakun"},"content":" * Contains integration tests (interaction with the Model) for {@code FindPersonCommand}.","lastModifiedDate":"2021-10-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-12"},{"lineNumber":27,"author":{"gitId":"tanhuakun"},"content":"public class FindPersonCommandTest {","lastModifiedDate":"2021-10-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2017-07-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private Model expectedModel \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2018-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-06-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate firstPredicate \u003d","lastModifiedDate":"2017-06-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"                new NameContainsKeywordsPredicate(Collections.singletonList(\"first\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate secondPredicate \u003d","lastModifiedDate":"2017-06-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"                new NameContainsKeywordsPredicate(Collections.singletonList(\"second\"));","lastModifiedDate":"2017-06-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":38,"author":{"gitId":"tanhuakun"},"content":"        FindPersonCommand findFirstCommand \u003d new FindPersonCommand(firstPredicate);","lastModifiedDate":"2021-10-03"},{"lineNumber":39,"author":{"gitId":"tanhuakun"},"content":"        FindPersonCommand findSecondCommand \u003d new FindPersonCommand(secondPredicate);","lastModifiedDate":"2021-10-03"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        assertTrue(findFirstCommand.equals(findFirstCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-06-27"},{"lineNumber":45,"author":{"gitId":"tanhuakun"},"content":"        FindPersonCommand findFirstCommandCopy \u003d new FindPersonCommand(firstPredicate);","lastModifiedDate":"2021-10-03"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertTrue(findFirstCommand.equals(findFirstCommandCopy));","lastModifiedDate":"2017-06-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        assertFalse(findFirstCommand.equals(1));","lastModifiedDate":"2017-06-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertFalse(findFirstCommand.equals(null));","lastModifiedDate":"2017-06-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2017-06-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        assertFalse(findFirstCommand.equals(findSecondCommand));","lastModifiedDate":"2017-06-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public void execute_zeroKeywords_noPersonFound() {","lastModifiedDate":"2017-08-15"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MESSAGE_PERSONS_LISTED_OVERVIEW, 0);","lastModifiedDate":"2017-06-12"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate \u003d preparePredicate(\" \");","lastModifiedDate":"2018-08-08"},{"lineNumber":62,"author":{"gitId":"tanhuakun"},"content":"        FindPersonCommand command \u003d new FindPersonCommand(predicate);","lastModifiedDate":"2021-10-03"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        expectedModel.updateFilteredPersonList(predicate);","lastModifiedDate":"2018-08-08"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertEquals(Collections.emptyList(), model.getFilteredPersonList());","lastModifiedDate":"2018-08-08"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-12"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public void execute_multipleKeywords_multiplePersonsFound() {","lastModifiedDate":"2017-08-15"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MESSAGE_PERSONS_LISTED_OVERVIEW, 3);","lastModifiedDate":"2017-06-12"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        NameContainsKeywordsPredicate predicate \u003d preparePredicate(\"Kurz Elle Kunz\");","lastModifiedDate":"2018-08-08"},{"lineNumber":72,"author":{"gitId":"tanhuakun"},"content":"        FindPersonCommand command \u003d new FindPersonCommand(predicate);","lastModifiedDate":"2021-10-03"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        expectedModel.updateFilteredPersonList(predicate);","lastModifiedDate":"2018-08-08"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2019-01-25"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        assertEquals(Arrays.asList(CARL, ELLE, FIONA), model.getFilteredPersonList());","lastModifiedDate":"2018-08-08"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-12"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-12"},{"lineNumber":79,"author":{"gitId":"-"},"content":"     * Parses {@code userInput} into a {@code NameContainsKeywordsPredicate}.","lastModifiedDate":"2018-08-08"},{"lineNumber":80,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-12"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    private NameContainsKeywordsPredicate preparePredicate(String userInput) {","lastModifiedDate":"2018-08-08"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        return new NameContainsKeywordsPredicate(Arrays.asList(userInput.split(\"\\\\s+\")));","lastModifiedDate":"2018-08-08"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-12"},{"lineNumber":84,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-12"}],"authorContributionMap":{"tanhuakun":8,"-":76}},{"path":"src/test/java/seedu/address/logic/commands/ViewPersonCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"kvihashini"},"content":"package seedu.address.logic.commands;","lastModifiedDate":"2021-10-05"},{"lineNumber":2,"author":{"gitId":"kvihashini"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":3,"author":{"gitId":"kvihashini"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-10-05"},{"lineNumber":4,"author":{"gitId":"kvihashini"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-05"},{"lineNumber":5,"author":{"gitId":"kvihashini"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2021-10-05"},{"lineNumber":6,"author":{"gitId":"kvihashini"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2021-10-05"},{"lineNumber":7,"author":{"gitId":"kvihashini"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showPersonAtIndex;","lastModifiedDate":"2021-10-05"},{"lineNumber":8,"author":{"gitId":"kvihashini"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2021-10-05"},{"lineNumber":9,"author":{"gitId":"kvihashini"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2021-10-05"},{"lineNumber":10,"author":{"gitId":"kvihashini"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2021-10-05"},{"lineNumber":11,"author":{"gitId":"kvihashini"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":12,"author":{"gitId":"kvihashini"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-05"},{"lineNumber":13,"author":{"gitId":"kvihashini"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":14,"author":{"gitId":"kvihashini"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2021-10-05"},{"lineNumber":15,"author":{"gitId":"kvihashini"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-10-05"},{"lineNumber":16,"author":{"gitId":"kvihashini"},"content":"import seedu.address.logic.commands.persons.ViewPersonCommand;","lastModifiedDate":"2021-10-05"},{"lineNumber":17,"author":{"gitId":"kvihashini"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-10-05"},{"lineNumber":18,"author":{"gitId":"kvihashini"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2021-10-05"},{"lineNumber":19,"author":{"gitId":"kvihashini"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2021-10-05"},{"lineNumber":20,"author":{"gitId":"kvihashini"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2021-10-05"},{"lineNumber":21,"author":{"gitId":"kvihashini"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":22,"author":{"gitId":"kvihashini"},"content":"/**","lastModifiedDate":"2021-10-05"},{"lineNumber":23,"author":{"gitId":"kvihashini"},"content":" * Contains integration tests (interaction with the Model) and unit tests for","lastModifiedDate":"2021-10-05"},{"lineNumber":24,"author":{"gitId":"kvihashini"},"content":" * {@code ViewPersonCommand}.","lastModifiedDate":"2021-10-05"},{"lineNumber":25,"author":{"gitId":"kvihashini"},"content":" */","lastModifiedDate":"2021-10-05"},{"lineNumber":26,"author":{"gitId":"kvihashini"},"content":"public class ViewPersonCommandTest {","lastModifiedDate":"2021-10-05"},{"lineNumber":27,"author":{"gitId":"kvihashini"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":28,"author":{"gitId":"kvihashini"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2021-10-05"},{"lineNumber":29,"author":{"gitId":"kvihashini"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":30,"author":{"gitId":"kvihashini"},"content":"    @Test","lastModifiedDate":"2021-10-05"},{"lineNumber":31,"author":{"gitId":"kvihashini"},"content":"    public void execute_validIndexUnfilteredList_success() {","lastModifiedDate":"2021-10-05"},{"lineNumber":32,"author":{"gitId":"kvihashini"},"content":"        Person personToView \u003d model.getFilteredPersonList().get(INDEX_FIRST_PERSON.getZeroBased());","lastModifiedDate":"2021-10-05"},{"lineNumber":33,"author":{"gitId":"kvihashini"},"content":"        ViewPersonCommand viewPersonCommand \u003d new ViewPersonCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2021-10-05"},{"lineNumber":34,"author":{"gitId":"kvihashini"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":35,"author":{"gitId":"kvihashini"},"content":"        String expectedMessage \u003d String.format(ViewPersonCommand.MESSAGE_VIEW_PERSON_SUCCESS, personToView);","lastModifiedDate":"2021-10-05"},{"lineNumber":36,"author":{"gitId":"kvihashini"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":37,"author":{"gitId":"kvihashini"},"content":"        ModelManager expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2021-10-05"},{"lineNumber":38,"author":{"gitId":"kvihashini"},"content":"        expectedModel.setPersonToView(personToView);","lastModifiedDate":"2021-10-25"},{"lineNumber":39,"author":{"gitId":"kvihashini"},"content":"        assertCommandSuccess(viewPersonCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2021-10-05"},{"lineNumber":40,"author":{"gitId":"kvihashini"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":41,"author":{"gitId":"kvihashini"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":42,"author":{"gitId":"kvihashini"},"content":"    @Test","lastModifiedDate":"2021-10-05"},{"lineNumber":43,"author":{"gitId":"kvihashini"},"content":"    public void execute_invalidIndexUnfilteredList_throwsCommandException() {","lastModifiedDate":"2021-10-05"},{"lineNumber":44,"author":{"gitId":"kvihashini"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredPersonList().size() + 1);","lastModifiedDate":"2021-10-05"},{"lineNumber":45,"author":{"gitId":"kvihashini"},"content":"        ViewPersonCommand viewPersonCommand \u003d new ViewPersonCommand(outOfBoundIndex);","lastModifiedDate":"2021-10-05"},{"lineNumber":46,"author":{"gitId":"kvihashini"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":47,"author":{"gitId":"kvihashini"},"content":"        assertCommandFailure(viewPersonCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2021-10-05"},{"lineNumber":48,"author":{"gitId":"kvihashini"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":49,"author":{"gitId":"kvihashini"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":50,"author":{"gitId":"kvihashini"},"content":"    @Test","lastModifiedDate":"2021-10-05"},{"lineNumber":51,"author":{"gitId":"kvihashini"},"content":"    public void execute_invalidIndexFilteredList_throwsCommandException() {","lastModifiedDate":"2021-10-05"},{"lineNumber":52,"author":{"gitId":"kvihashini"},"content":"        showPersonAtIndex(model, INDEX_FIRST_PERSON);","lastModifiedDate":"2021-10-05"},{"lineNumber":53,"author":{"gitId":"kvihashini"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":54,"author":{"gitId":"kvihashini"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2021-10-05"},{"lineNumber":55,"author":{"gitId":"kvihashini"},"content":"        // ensures that outOfBoundIndex is still in bounds of address book list","lastModifiedDate":"2021-10-05"},{"lineNumber":56,"author":{"gitId":"kvihashini"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getAddressBook().getPersonList().size());","lastModifiedDate":"2021-10-05"},{"lineNumber":57,"author":{"gitId":"kvihashini"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":58,"author":{"gitId":"kvihashini"},"content":"        ViewPersonCommand viewPersonCommand \u003d new ViewPersonCommand(outOfBoundIndex);","lastModifiedDate":"2021-10-05"},{"lineNumber":59,"author":{"gitId":"kvihashini"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":60,"author":{"gitId":"kvihashini"},"content":"        assertCommandFailure(viewPersonCommand, model, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2021-10-05"},{"lineNumber":61,"author":{"gitId":"kvihashini"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":62,"author":{"gitId":"kvihashini"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":63,"author":{"gitId":"kvihashini"},"content":"    @Test","lastModifiedDate":"2021-10-05"},{"lineNumber":64,"author":{"gitId":"kvihashini"},"content":"    public void equals() {","lastModifiedDate":"2021-10-05"},{"lineNumber":65,"author":{"gitId":"kvihashini"},"content":"        ViewPersonCommand viewFirstCommand \u003d new ViewPersonCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2021-10-05"},{"lineNumber":66,"author":{"gitId":"kvihashini"},"content":"        ViewPersonCommand viewSecondCommand \u003d new ViewPersonCommand(INDEX_SECOND_PERSON);","lastModifiedDate":"2021-10-05"},{"lineNumber":67,"author":{"gitId":"kvihashini"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":68,"author":{"gitId":"kvihashini"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2021-10-05"},{"lineNumber":69,"author":{"gitId":"kvihashini"},"content":"        assertTrue(viewFirstCommand.equals(viewFirstCommand));","lastModifiedDate":"2021-10-05"},{"lineNumber":70,"author":{"gitId":"kvihashini"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":71,"author":{"gitId":"kvihashini"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2021-10-05"},{"lineNumber":72,"author":{"gitId":"kvihashini"},"content":"        ViewPersonCommand viewFirstCommandCopy \u003d new ViewPersonCommand(INDEX_FIRST_PERSON);","lastModifiedDate":"2021-10-05"},{"lineNumber":73,"author":{"gitId":"kvihashini"},"content":"        assertTrue(viewFirstCommand.equals(viewFirstCommandCopy));","lastModifiedDate":"2021-10-05"},{"lineNumber":74,"author":{"gitId":"kvihashini"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":75,"author":{"gitId":"kvihashini"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2021-10-05"},{"lineNumber":76,"author":{"gitId":"kvihashini"},"content":"        assertFalse(viewFirstCommand.equals(1));","lastModifiedDate":"2021-10-05"},{"lineNumber":77,"author":{"gitId":"kvihashini"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":78,"author":{"gitId":"kvihashini"},"content":"        // null -\u003e returns false","lastModifiedDate":"2021-10-05"},{"lineNumber":79,"author":{"gitId":"kvihashini"},"content":"        assertFalse(viewFirstCommand.equals(null));","lastModifiedDate":"2021-10-05"},{"lineNumber":80,"author":{"gitId":"kvihashini"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":81,"author":{"gitId":"kvihashini"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2021-10-05"},{"lineNumber":82,"author":{"gitId":"kvihashini"},"content":"        assertFalse(viewFirstCommand.equals(viewSecondCommand));","lastModifiedDate":"2021-10-05"},{"lineNumber":83,"author":{"gitId":"kvihashini"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":84,"author":{"gitId":"kvihashini"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":85,"author":{"gitId":"kvihashini"},"content":"    /**","lastModifiedDate":"2021-10-05"},{"lineNumber":86,"author":{"gitId":"kvihashini"},"content":"     * Updates {@code model}\u0027s filtered list to show no one.","lastModifiedDate":"2021-10-05"},{"lineNumber":87,"author":{"gitId":"kvihashini"},"content":"     */","lastModifiedDate":"2021-10-05"},{"lineNumber":88,"author":{"gitId":"kvihashini"},"content":"    private void showNoPerson(Model model) {","lastModifiedDate":"2021-10-05"},{"lineNumber":89,"author":{"gitId":"kvihashini"},"content":"        model.updateFilteredPersonList(p -\u003e false);","lastModifiedDate":"2021-10-05"},{"lineNumber":90,"author":{"gitId":"kvihashini"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":91,"author":{"gitId":"kvihashini"},"content":"        assertTrue(model.getFilteredPersonList().isEmpty());","lastModifiedDate":"2021-10-05"},{"lineNumber":92,"author":{"gitId":"kvihashini"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":93,"author":{"gitId":"kvihashini"},"content":"}","lastModifiedDate":"2021-10-05"}],"authorContributionMap":{"kvihashini":93}},{"path":"src/test/java/seedu/address/logic/commands/groups/AddGroupCommandIntegrationTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"tanhuakun"},"content":"package seedu.address.logic.commands.groups;","lastModifiedDate":"2021-10-25"},{"lineNumber":2,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":3,"author":{"gitId":"tanhuakun"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2021-10-25"},{"lineNumber":4,"author":{"gitId":"tanhuakun"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2021-10-25"},{"lineNumber":5,"author":{"gitId":"tanhuakun"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2021-10-25"},{"lineNumber":6,"author":{"gitId":"tanhuakun"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2021-10-25"},{"lineNumber":7,"author":{"gitId":"tanhuakun"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2021-10-25"},{"lineNumber":8,"author":{"gitId":"tanhuakun"},"content":"import static seedu.address.testutil.TypicalPersons.BENSON;","lastModifiedDate":"2021-10-25"},{"lineNumber":9,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":10,"author":{"gitId":"tanhuakun"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-25"},{"lineNumber":11,"author":{"gitId":"tanhuakun"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-10-25"},{"lineNumber":12,"author":{"gitId":"tanhuakun"},"content":"import java.util.List;","lastModifiedDate":"2021-10-25"},{"lineNumber":13,"author":{"gitId":"tanhuakun"},"content":"import java.util.Set;","lastModifiedDate":"2021-10-25"},{"lineNumber":14,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":15,"author":{"gitId":"tanhuakun"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-25"},{"lineNumber":16,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":17,"author":{"gitId":"tanhuakun"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2021-10-25"},{"lineNumber":18,"author":{"gitId":"tanhuakun"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-10-25"},{"lineNumber":19,"author":{"gitId":"tanhuakun"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2021-10-25"},{"lineNumber":20,"author":{"gitId":"tanhuakun"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-10-25"},{"lineNumber":21,"author":{"gitId":"tanhuakun"},"content":"import seedu.address.logic.commands.exceptions.CommandException;","lastModifiedDate":"2021-10-25"},{"lineNumber":22,"author":{"gitId":"tanhuakun"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2021-10-25"},{"lineNumber":23,"author":{"gitId":"tanhuakun"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2021-10-25"},{"lineNumber":24,"author":{"gitId":"tanhuakun"},"content":"import seedu.address.model.ViewingType;","lastModifiedDate":"2021-11-04"},{"lineNumber":25,"author":{"gitId":"tanhuakun"},"content":"import seedu.address.model.group.Group;","lastModifiedDate":"2021-10-25"},{"lineNumber":26,"author":{"gitId":"tanhuakun"},"content":"import seedu.address.model.id.UniqueId;","lastModifiedDate":"2021-10-25"},{"lineNumber":27,"author":{"gitId":"tanhuakun"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2021-10-25"},{"lineNumber":28,"author":{"gitId":"tanhuakun"},"content":"import seedu.address.testutil.GroupBuilder;","lastModifiedDate":"2021-10-25"},{"lineNumber":29,"author":{"gitId":"tanhuakun"},"content":"import seedu.address.testutil.ModelStub;","lastModifiedDate":"2021-10-25"},{"lineNumber":30,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":31,"author":{"gitId":"tanhuakun"},"content":"public class AddGroupCommandIntegrationTest {","lastModifiedDate":"2021-11-07"},{"lineNumber":32,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":33,"author":{"gitId":"tanhuakun"},"content":"    private Group toAdd \u003d new GroupBuilder().withName(\"HURRAY\").build();","lastModifiedDate":"2021-10-25"},{"lineNumber":34,"author":{"gitId":"tanhuakun"},"content":"    private List\u003cIndex\u003e indexes \u003d new ArrayList\u003c\u003e(Arrays.asList(INDEX_FIRST_PERSON, INDEX_SECOND_PERSON));","lastModifiedDate":"2021-10-25"},{"lineNumber":35,"author":{"gitId":"tanhuakun"},"content":"    private AddGroupCommand command \u003d new AddGroupCommand(toAdd, indexes);","lastModifiedDate":"2021-10-25"},{"lineNumber":36,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":37,"author":{"gitId":"tanhuakun"},"content":"    @Test","lastModifiedDate":"2021-10-25"},{"lineNumber":38,"author":{"gitId":"tanhuakun"},"content":"    public void execute_validGroupAndPersons_groupAddedSuccessfully() throws CommandException {","lastModifiedDate":"2021-10-25"},{"lineNumber":39,"author":{"gitId":"tanhuakun"},"content":"        List\u003cPerson\u003e twoPersonsList \u003d new ArrayList\u003c\u003e(Arrays.asList(ALICE, BENSON));","lastModifiedDate":"2021-10-25"},{"lineNumber":40,"author":{"gitId":"tanhuakun"},"content":"        ModelStubAddGroupSuccess modelStub \u003d new ModelStubAddGroupSuccess(new ArrayList\u003c\u003e(), null);","lastModifiedDate":"2021-10-25"},{"lineNumber":41,"author":{"gitId":"tanhuakun"},"content":"        modelStub.personList \u003d twoPersonsList;","lastModifiedDate":"2021-10-25"},{"lineNumber":42,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":43,"author":{"gitId":"tanhuakun"},"content":"        Set\u003cUniqueId\u003e uniqueIds \u003d Set.of(ALICE.getId(), BENSON.getId());","lastModifiedDate":"2021-10-25"},{"lineNumber":44,"author":{"gitId":"tanhuakun"},"content":"        Group expectedGroup \u003d toAdd.updateAssignedPersonIds(uniqueIds);","lastModifiedDate":"2021-10-25"},{"lineNumber":45,"author":{"gitId":"tanhuakun"},"content":"        List\u003cPerson\u003e expectedPersons \u003d new ArrayList\u003c\u003e(Arrays.asList(ALICE.addGroupId(toAdd.getId()),","lastModifiedDate":"2021-10-25"},{"lineNumber":46,"author":{"gitId":"tanhuakun"},"content":"                BENSON.addGroupId(toAdd.getId())));","lastModifiedDate":"2021-10-25"},{"lineNumber":47,"author":{"gitId":"tanhuakun"},"content":"        ModelStubAddGroupSuccess expectedModel \u003d new ModelStubAddGroupSuccess(expectedPersons, expectedGroup);","lastModifiedDate":"2021-10-25"},{"lineNumber":48,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":49,"author":{"gitId":"tanhuakun"},"content":"        assertCommandSuccess(command, modelStub, String.format(AddGroupCommand.MESSAGE_SUCCESS, expectedGroup),","lastModifiedDate":"2021-10-25"},{"lineNumber":50,"author":{"gitId":"tanhuakun"},"content":"                expectedModel);","lastModifiedDate":"2021-10-25"},{"lineNumber":51,"author":{"gitId":"tanhuakun"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":52,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":53,"author":{"gitId":"tanhuakun"},"content":"    @Test","lastModifiedDate":"2021-10-25"},{"lineNumber":54,"author":{"gitId":"tanhuakun"},"content":"    public void execute_invalidPersonsIndex_failure() {","lastModifiedDate":"2021-10-25"},{"lineNumber":55,"author":{"gitId":"tanhuakun"},"content":"        ModelStubAddGroupSuccess modelStub \u003d new ModelStubAddGroupSuccess(new ArrayList\u003c\u003e(), null);","lastModifiedDate":"2021-10-25"},{"lineNumber":56,"author":{"gitId":"tanhuakun"},"content":"        // fail when index is invalid","lastModifiedDate":"2021-10-25"},{"lineNumber":57,"author":{"gitId":"tanhuakun"},"content":"        assertCommandFailure(command, modelStub, Messages.MESSAGE_INVALID_PERSON_DISPLAYED_INDEX);","lastModifiedDate":"2021-10-25"},{"lineNumber":58,"author":{"gitId":"tanhuakun"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":59,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":60,"author":{"gitId":"tanhuakun"},"content":"    @Test","lastModifiedDate":"2021-10-25"},{"lineNumber":61,"author":{"gitId":"tanhuakun"},"content":"    public void execute_duplicateGroup_failure() {","lastModifiedDate":"2021-10-25"},{"lineNumber":62,"author":{"gitId":"tanhuakun"},"content":"        ModelStubHasGroup modelStub \u003d new ModelStubHasGroup();","lastModifiedDate":"2021-10-25"},{"lineNumber":63,"author":{"gitId":"tanhuakun"},"content":"        assertCommandFailure(command, modelStub, AddGroupCommand.MESSAGE_DUPLICATE_GROUP);","lastModifiedDate":"2021-10-25"},{"lineNumber":64,"author":{"gitId":"tanhuakun"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":65,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":66,"author":{"gitId":"tanhuakun"},"content":"    private class ModelStubHasGroup extends ModelStub {","lastModifiedDate":"2021-10-25"},{"lineNumber":67,"author":{"gitId":"tanhuakun"},"content":"        @Override","lastModifiedDate":"2021-10-25"},{"lineNumber":68,"author":{"gitId":"tanhuakun"},"content":"        public boolean hasGroup(Group group) {","lastModifiedDate":"2021-10-25"},{"lineNumber":69,"author":{"gitId":"tanhuakun"},"content":"            return true;","lastModifiedDate":"2021-10-25"},{"lineNumber":70,"author":{"gitId":"tanhuakun"},"content":"        }","lastModifiedDate":"2021-10-25"},{"lineNumber":71,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":72,"author":{"gitId":"tanhuakun"},"content":"        @Override","lastModifiedDate":"2021-10-25"},{"lineNumber":73,"author":{"gitId":"tanhuakun"},"content":"        public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2021-10-25"},{"lineNumber":74,"author":{"gitId":"tanhuakun"},"content":"            return new AddressBook();","lastModifiedDate":"2021-10-25"},{"lineNumber":75,"author":{"gitId":"tanhuakun"},"content":"        }","lastModifiedDate":"2021-10-25"},{"lineNumber":76,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":77,"author":{"gitId":"tanhuakun"},"content":"        @Override","lastModifiedDate":"2021-10-25"},{"lineNumber":78,"author":{"gitId":"tanhuakun"},"content":"        public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2021-10-25"},{"lineNumber":79,"author":{"gitId":"tanhuakun"},"content":"            return FXCollections.observableArrayList();","lastModifiedDate":"2021-10-25"},{"lineNumber":80,"author":{"gitId":"tanhuakun"},"content":"        }","lastModifiedDate":"2021-10-25"},{"lineNumber":81,"author":{"gitId":"tanhuakun"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":82,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":83,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":84,"author":{"gitId":"tanhuakun"},"content":"    private class ModelStubAddGroupSuccess extends ModelStub {","lastModifiedDate":"2021-10-25"},{"lineNumber":85,"author":{"gitId":"tanhuakun"},"content":"        private List\u003cPerson\u003e personList \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-25"},{"lineNumber":86,"author":{"gitId":"tanhuakun"},"content":"        private Group added \u003d null;","lastModifiedDate":"2021-10-25"},{"lineNumber":87,"author":{"gitId":"tanhuakun"},"content":"        private ViewingType type \u003d null;","lastModifiedDate":"2021-11-04"},{"lineNumber":88,"author":{"gitId":"tanhuakun"},"content":"        private Group toView \u003d null;","lastModifiedDate":"2021-11-04"},{"lineNumber":89,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":90,"author":{"gitId":"tanhuakun"},"content":"        public ModelStubAddGroupSuccess(List\u003cPerson\u003e personList, Group added) {","lastModifiedDate":"2021-10-25"},{"lineNumber":91,"author":{"gitId":"tanhuakun"},"content":"            this.personList \u003d personList;","lastModifiedDate":"2021-10-25"},{"lineNumber":92,"author":{"gitId":"tanhuakun"},"content":"            this.added \u003d added;","lastModifiedDate":"2021-10-25"},{"lineNumber":93,"author":{"gitId":"tanhuakun"},"content":"        }","lastModifiedDate":"2021-10-25"},{"lineNumber":94,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":95,"author":{"gitId":"tanhuakun"},"content":"        @Override","lastModifiedDate":"2021-10-25"},{"lineNumber":96,"author":{"gitId":"tanhuakun"},"content":"        public boolean hasGroup(Group group) {","lastModifiedDate":"2021-10-25"},{"lineNumber":97,"author":{"gitId":"tanhuakun"},"content":"            return false;","lastModifiedDate":"2021-10-25"},{"lineNumber":98,"author":{"gitId":"tanhuakun"},"content":"        }","lastModifiedDate":"2021-10-25"},{"lineNumber":99,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":100,"author":{"gitId":"tanhuakun"},"content":"        @Override","lastModifiedDate":"2021-10-25"},{"lineNumber":101,"author":{"gitId":"tanhuakun"},"content":"        public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2021-10-25"},{"lineNumber":102,"author":{"gitId":"tanhuakun"},"content":"            return FXCollections.observableList(personList);","lastModifiedDate":"2021-10-25"},{"lineNumber":103,"author":{"gitId":"tanhuakun"},"content":"        }","lastModifiedDate":"2021-10-25"},{"lineNumber":104,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":105,"author":{"gitId":"tanhuakun"},"content":"        @Override","lastModifiedDate":"2021-10-25"},{"lineNumber":106,"author":{"gitId":"tanhuakun"},"content":"        public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2021-10-25"},{"lineNumber":107,"author":{"gitId":"tanhuakun"},"content":"            personList.set(personList.indexOf(target), editedPerson);","lastModifiedDate":"2021-10-25"},{"lineNumber":108,"author":{"gitId":"tanhuakun"},"content":"        }","lastModifiedDate":"2021-10-25"},{"lineNumber":109,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":110,"author":{"gitId":"tanhuakun"},"content":"        @Override","lastModifiedDate":"2021-10-25"},{"lineNumber":111,"author":{"gitId":"tanhuakun"},"content":"        public void addGroup(Group group) {","lastModifiedDate":"2021-10-25"},{"lineNumber":112,"author":{"gitId":"tanhuakun"},"content":"            this.added \u003d group;","lastModifiedDate":"2021-10-25"},{"lineNumber":113,"author":{"gitId":"tanhuakun"},"content":"        }","lastModifiedDate":"2021-10-25"},{"lineNumber":114,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":115,"author":{"gitId":"tanhuakun"},"content":"        @Override","lastModifiedDate":"2021-10-25"},{"lineNumber":116,"author":{"gitId":"tanhuakun"},"content":"        public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2021-10-25"},{"lineNumber":117,"author":{"gitId":"tanhuakun"},"content":"            return new AddressBook();","lastModifiedDate":"2021-10-25"},{"lineNumber":118,"author":{"gitId":"tanhuakun"},"content":"        }","lastModifiedDate":"2021-10-25"},{"lineNumber":119,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":120,"author":{"gitId":"tanhuakun"},"content":"        @Override","lastModifiedDate":"2021-11-04"},{"lineNumber":121,"author":{"gitId":"tanhuakun"},"content":"        public void setGroupToView(Group group) {","lastModifiedDate":"2021-11-04"},{"lineNumber":122,"author":{"gitId":"tanhuakun"},"content":"            toView \u003d group;","lastModifiedDate":"2021-11-04"},{"lineNumber":123,"author":{"gitId":"tanhuakun"},"content":"        }","lastModifiedDate":"2021-11-04"},{"lineNumber":124,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":125,"author":{"gitId":"tanhuakun"},"content":"        @Override","lastModifiedDate":"2021-11-04"},{"lineNumber":126,"author":{"gitId":"tanhuakun"},"content":"        public void setViewingType(ViewingType type) {","lastModifiedDate":"2021-11-04"},{"lineNumber":127,"author":{"gitId":"tanhuakun"},"content":"            this.type \u003d type;","lastModifiedDate":"2021-11-04"},{"lineNumber":128,"author":{"gitId":"tanhuakun"},"content":"        }","lastModifiedDate":"2021-11-04"},{"lineNumber":129,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":130,"author":{"gitId":"tanhuakun"},"content":"        @Override","lastModifiedDate":"2021-10-25"},{"lineNumber":131,"author":{"gitId":"tanhuakun"},"content":"        public boolean equals(Object o) {","lastModifiedDate":"2021-10-25"},{"lineNumber":132,"author":{"gitId":"tanhuakun"},"content":"            if (o \u003d\u003d null || (!(o instanceof ModelStubAddGroupSuccess))) {","lastModifiedDate":"2021-10-25"},{"lineNumber":133,"author":{"gitId":"tanhuakun"},"content":"                return false;","lastModifiedDate":"2021-10-25"},{"lineNumber":134,"author":{"gitId":"tanhuakun"},"content":"            }","lastModifiedDate":"2021-10-25"},{"lineNumber":135,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":136,"author":{"gitId":"tanhuakun"},"content":"            ModelStubAddGroupSuccess other \u003d (ModelStubAddGroupSuccess) o;","lastModifiedDate":"2021-10-25"},{"lineNumber":137,"author":{"gitId":"tanhuakun"},"content":"            return added.equals(other.added) \u0026\u0026 personList.equals(other.personList);","lastModifiedDate":"2021-10-25"},{"lineNumber":138,"author":{"gitId":"tanhuakun"},"content":"        }","lastModifiedDate":"2021-10-25"},{"lineNumber":139,"author":{"gitId":"tanhuakun"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":140,"author":{"gitId":"tanhuakun"},"content":"}","lastModifiedDate":"2021-10-25"}],"authorContributionMap":{"tanhuakun":140}},{"path":"src/test/java/seedu/address/logic/commands/groups/DeleteGroupCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"kvihashini"},"content":"package seedu.address.logic.commands.groups;","lastModifiedDate":"2021-10-24"},{"lineNumber":2,"author":{"gitId":"kvihashini"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":3,"author":{"gitId":"kvihashini"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-10-24"},{"lineNumber":4,"author":{"gitId":"kvihashini"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-24"},{"lineNumber":5,"author":{"gitId":"kvihashini"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2021-10-24"},{"lineNumber":6,"author":{"gitId":"kvihashini"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2021-10-24"},{"lineNumber":7,"author":{"gitId":"kvihashini"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showGroupAtIndex;","lastModifiedDate":"2021-10-24"},{"lineNumber":8,"author":{"gitId":"kvihashini"},"content":"import static seedu.address.testutil.TypicalGroups.getTypicalAddressBook;","lastModifiedDate":"2021-10-24"},{"lineNumber":9,"author":{"gitId":"kvihashini"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_GROUP;","lastModifiedDate":"2021-10-24"},{"lineNumber":10,"author":{"gitId":"kvihashini"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_GROUP;","lastModifiedDate":"2021-10-24"},{"lineNumber":11,"author":{"gitId":"kvihashini"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":12,"author":{"gitId":"kvihashini"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-24"},{"lineNumber":13,"author":{"gitId":"kvihashini"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":14,"author":{"gitId":"kvihashini"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2021-10-24"},{"lineNumber":15,"author":{"gitId":"kvihashini"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-10-24"},{"lineNumber":16,"author":{"gitId":"kvihashini"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-10-24"},{"lineNumber":17,"author":{"gitId":"kvihashini"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2021-10-24"},{"lineNumber":18,"author":{"gitId":"kvihashini"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2021-10-24"},{"lineNumber":19,"author":{"gitId":"kvihashini"},"content":"import seedu.address.model.group.Group;","lastModifiedDate":"2021-10-24"},{"lineNumber":20,"author":{"gitId":"kvihashini"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":21,"author":{"gitId":"kvihashini"},"content":"/**","lastModifiedDate":"2021-10-24"},{"lineNumber":22,"author":{"gitId":"kvihashini"},"content":" * Contains integration tests (interaction with the Model) and unit tests for","lastModifiedDate":"2021-10-24"},{"lineNumber":23,"author":{"gitId":"kvihashini"},"content":" * {@code DeleteGroupCommand}.","lastModifiedDate":"2021-10-24"},{"lineNumber":24,"author":{"gitId":"kvihashini"},"content":" */","lastModifiedDate":"2021-10-24"},{"lineNumber":25,"author":{"gitId":"kvihashini"},"content":"public class DeleteGroupCommandTest {","lastModifiedDate":"2021-10-24"},{"lineNumber":26,"author":{"gitId":"kvihashini"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":27,"author":{"gitId":"kvihashini"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2021-10-24"},{"lineNumber":28,"author":{"gitId":"kvihashini"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":29,"author":{"gitId":"kvihashini"},"content":"    @Test","lastModifiedDate":"2021-10-24"},{"lineNumber":30,"author":{"gitId":"kvihashini"},"content":"    public void execute_validIndexUnfilteredList_success() {","lastModifiedDate":"2021-10-24"},{"lineNumber":31,"author":{"gitId":"kvihashini"},"content":"        Group groupToDelete \u003d model.getFilteredGroupList().get(INDEX_FIRST_GROUP.getZeroBased());","lastModifiedDate":"2021-10-24"},{"lineNumber":32,"author":{"gitId":"kvihashini"},"content":"        DeleteGroupCommand deleteGroupCommand \u003d new DeleteGroupCommand(INDEX_FIRST_GROUP);","lastModifiedDate":"2021-10-24"},{"lineNumber":33,"author":{"gitId":"kvihashini"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":34,"author":{"gitId":"kvihashini"},"content":"        String expectedMessage \u003d String.format(DeleteGroupCommand.MESSAGE_DELETE_GROUP_SUCCESS, groupToDelete);","lastModifiedDate":"2021-10-24"},{"lineNumber":35,"author":{"gitId":"kvihashini"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":36,"author":{"gitId":"kvihashini"},"content":"        ModelManager expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2021-10-24"},{"lineNumber":37,"author":{"gitId":"kvihashini"},"content":"        expectedModel.deleteGroup(groupToDelete);","lastModifiedDate":"2021-10-24"},{"lineNumber":38,"author":{"gitId":"kvihashini"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":39,"author":{"gitId":"kvihashini"},"content":"        assertCommandSuccess(deleteGroupCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2021-10-24"},{"lineNumber":40,"author":{"gitId":"kvihashini"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":41,"author":{"gitId":"kvihashini"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":42,"author":{"gitId":"kvihashini"},"content":"    @Test","lastModifiedDate":"2021-10-24"},{"lineNumber":43,"author":{"gitId":"kvihashini"},"content":"    public void execute_invalidIndexUnfilteredList_throwsCommandException() {","lastModifiedDate":"2021-10-24"},{"lineNumber":44,"author":{"gitId":"kvihashini"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredGroupList().size() + 1);","lastModifiedDate":"2021-10-24"},{"lineNumber":45,"author":{"gitId":"kvihashini"},"content":"        DeleteGroupCommand deleteGroupCommand \u003d new DeleteGroupCommand(outOfBoundIndex);","lastModifiedDate":"2021-10-24"},{"lineNumber":46,"author":{"gitId":"kvihashini"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":47,"author":{"gitId":"kvihashini"},"content":"        assertCommandFailure(deleteGroupCommand, model, Messages.MESSAGE_INVALID_GROUP_DISPLAYED_INDEX);","lastModifiedDate":"2021-10-24"},{"lineNumber":48,"author":{"gitId":"kvihashini"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":49,"author":{"gitId":"kvihashini"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":50,"author":{"gitId":"kvihashini"},"content":"    @Test","lastModifiedDate":"2021-10-24"},{"lineNumber":51,"author":{"gitId":"kvihashini"},"content":"    public void execute_validIndexFilteredList_success() {","lastModifiedDate":"2021-10-24"},{"lineNumber":52,"author":{"gitId":"kvihashini"},"content":"        showGroupAtIndex(model, INDEX_FIRST_GROUP);","lastModifiedDate":"2021-10-24"},{"lineNumber":53,"author":{"gitId":"kvihashini"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":54,"author":{"gitId":"kvihashini"},"content":"        Group groupToDelete \u003d model.getFilteredGroupList().get(INDEX_FIRST_GROUP.getZeroBased());","lastModifiedDate":"2021-10-24"},{"lineNumber":55,"author":{"gitId":"kvihashini"},"content":"        DeleteGroupCommand deleteGroupCommand \u003d new DeleteGroupCommand(INDEX_FIRST_GROUP);","lastModifiedDate":"2021-10-24"},{"lineNumber":56,"author":{"gitId":"kvihashini"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":57,"author":{"gitId":"kvihashini"},"content":"        String expectedMessage \u003d String.format(DeleteGroupCommand.MESSAGE_DELETE_GROUP_SUCCESS, groupToDelete);","lastModifiedDate":"2021-10-24"},{"lineNumber":58,"author":{"gitId":"kvihashini"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":59,"author":{"gitId":"kvihashini"},"content":"        Model expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2021-10-24"},{"lineNumber":60,"author":{"gitId":"kvihashini"},"content":"        expectedModel.deleteGroup(groupToDelete);","lastModifiedDate":"2021-10-24"},{"lineNumber":61,"author":{"gitId":"kvihashini"},"content":"        showNoGroup(expectedModel);","lastModifiedDate":"2021-10-24"},{"lineNumber":62,"author":{"gitId":"kvihashini"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":63,"author":{"gitId":"kvihashini"},"content":"        assertCommandSuccess(deleteGroupCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2021-10-24"},{"lineNumber":64,"author":{"gitId":"kvihashini"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":65,"author":{"gitId":"kvihashini"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":66,"author":{"gitId":"kvihashini"},"content":"    @Test","lastModifiedDate":"2021-10-24"},{"lineNumber":67,"author":{"gitId":"kvihashini"},"content":"    public void execute_invalidIndexFilteredList_throwsCommandException() {","lastModifiedDate":"2021-10-24"},{"lineNumber":68,"author":{"gitId":"kvihashini"},"content":"        showGroupAtIndex(model, INDEX_FIRST_GROUP);","lastModifiedDate":"2021-10-24"},{"lineNumber":69,"author":{"gitId":"kvihashini"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":70,"author":{"gitId":"kvihashini"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_GROUP;","lastModifiedDate":"2021-10-24"},{"lineNumber":71,"author":{"gitId":"kvihashini"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":72,"author":{"gitId":"kvihashini"},"content":"        // ensures that outOfBoundIndex is still in bounds of address book list","lastModifiedDate":"2021-10-24"},{"lineNumber":73,"author":{"gitId":"kvihashini"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getAddressBook().getGroupList().size());","lastModifiedDate":"2021-10-24"},{"lineNumber":74,"author":{"gitId":"kvihashini"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":75,"author":{"gitId":"kvihashini"},"content":"        DeleteGroupCommand deleteGroupCommand \u003d new DeleteGroupCommand(outOfBoundIndex);","lastModifiedDate":"2021-10-24"},{"lineNumber":76,"author":{"gitId":"kvihashini"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":77,"author":{"gitId":"kvihashini"},"content":"        assertCommandFailure(deleteGroupCommand, model, Messages.MESSAGE_INVALID_GROUP_DISPLAYED_INDEX);","lastModifiedDate":"2021-10-24"},{"lineNumber":78,"author":{"gitId":"kvihashini"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":79,"author":{"gitId":"kvihashini"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":80,"author":{"gitId":"kvihashini"},"content":"    @Test","lastModifiedDate":"2021-10-24"},{"lineNumber":81,"author":{"gitId":"kvihashini"},"content":"    public void equals() {","lastModifiedDate":"2021-10-24"},{"lineNumber":82,"author":{"gitId":"kvihashini"},"content":"        DeleteGroupCommand deleteFirstCommand \u003d new DeleteGroupCommand(INDEX_FIRST_GROUP);","lastModifiedDate":"2021-10-24"},{"lineNumber":83,"author":{"gitId":"kvihashini"},"content":"        DeleteGroupCommand deleteSecondCommand \u003d new DeleteGroupCommand(INDEX_SECOND_GROUP);","lastModifiedDate":"2021-10-24"},{"lineNumber":84,"author":{"gitId":"kvihashini"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":85,"author":{"gitId":"kvihashini"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2021-10-24"},{"lineNumber":86,"author":{"gitId":"kvihashini"},"content":"        assertTrue(deleteFirstCommand.equals(deleteFirstCommand));","lastModifiedDate":"2021-10-24"},{"lineNumber":87,"author":{"gitId":"kvihashini"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":88,"author":{"gitId":"kvihashini"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2021-10-24"},{"lineNumber":89,"author":{"gitId":"kvihashini"},"content":"        DeleteGroupCommand deleteFirstCommandCopy \u003d new DeleteGroupCommand(INDEX_FIRST_GROUP);","lastModifiedDate":"2021-10-24"},{"lineNumber":90,"author":{"gitId":"kvihashini"},"content":"        assertTrue(deleteFirstCommand.equals(deleteFirstCommandCopy));","lastModifiedDate":"2021-10-24"},{"lineNumber":91,"author":{"gitId":"kvihashini"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":92,"author":{"gitId":"kvihashini"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2021-10-24"},{"lineNumber":93,"author":{"gitId":"kvihashini"},"content":"        assertFalse(deleteFirstCommand.equals(1));","lastModifiedDate":"2021-10-24"},{"lineNumber":94,"author":{"gitId":"kvihashini"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":95,"author":{"gitId":"kvihashini"},"content":"        // null -\u003e returns false","lastModifiedDate":"2021-10-24"},{"lineNumber":96,"author":{"gitId":"kvihashini"},"content":"        assertFalse(deleteFirstCommand.equals(null));","lastModifiedDate":"2021-10-24"},{"lineNumber":97,"author":{"gitId":"kvihashini"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":98,"author":{"gitId":"kvihashini"},"content":"        // different group -\u003e returns false","lastModifiedDate":"2021-10-24"},{"lineNumber":99,"author":{"gitId":"kvihashini"},"content":"        assertFalse(deleteFirstCommand.equals(deleteSecondCommand));","lastModifiedDate":"2021-10-24"},{"lineNumber":100,"author":{"gitId":"kvihashini"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":101,"author":{"gitId":"kvihashini"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":102,"author":{"gitId":"kvihashini"},"content":"    /**","lastModifiedDate":"2021-10-24"},{"lineNumber":103,"author":{"gitId":"kvihashini"},"content":"     * Updates {@code model}\u0027s filtered list to show no one.","lastModifiedDate":"2021-10-24"},{"lineNumber":104,"author":{"gitId":"kvihashini"},"content":"     */","lastModifiedDate":"2021-10-24"},{"lineNumber":105,"author":{"gitId":"kvihashini"},"content":"    private void showNoGroup(Model model) {","lastModifiedDate":"2021-10-24"},{"lineNumber":106,"author":{"gitId":"kvihashini"},"content":"        model.updateFilteredGroupList(p -\u003e false);","lastModifiedDate":"2021-10-24"},{"lineNumber":107,"author":{"gitId":"kvihashini"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":108,"author":{"gitId":"kvihashini"},"content":"        assertTrue(model.getFilteredGroupList().isEmpty());","lastModifiedDate":"2021-10-24"},{"lineNumber":109,"author":{"gitId":"kvihashini"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":110,"author":{"gitId":"kvihashini"},"content":"}","lastModifiedDate":"2021-10-24"}],"authorContributionMap":{"kvihashini":110}},{"path":"src/test/java/seedu/address/logic/commands/groups/ViewGroupCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"kvihashini"},"content":"package seedu.address.logic.commands.groups;","lastModifiedDate":"2021-10-25"},{"lineNumber":2,"author":{"gitId":"kvihashini"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":3,"author":{"gitId":"kvihashini"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-10-25"},{"lineNumber":4,"author":{"gitId":"kvihashini"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-25"},{"lineNumber":5,"author":{"gitId":"kvihashini"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandFailure;","lastModifiedDate":"2021-10-25"},{"lineNumber":6,"author":{"gitId":"kvihashini"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2021-10-25"},{"lineNumber":7,"author":{"gitId":"kvihashini"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showGroupAtIndex;","lastModifiedDate":"2021-10-25"},{"lineNumber":8,"author":{"gitId":"kvihashini"},"content":"import static seedu.address.testutil.TypicalGroups.getTypicalAddressBook;","lastModifiedDate":"2021-10-25"},{"lineNumber":9,"author":{"gitId":"kvihashini"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_GROUP;","lastModifiedDate":"2021-10-25"},{"lineNumber":10,"author":{"gitId":"kvihashini"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_GROUP;","lastModifiedDate":"2021-10-25"},{"lineNumber":11,"author":{"gitId":"kvihashini"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":12,"author":{"gitId":"kvihashini"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-25"},{"lineNumber":13,"author":{"gitId":"kvihashini"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":14,"author":{"gitId":"kvihashini"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2021-10-25"},{"lineNumber":15,"author":{"gitId":"kvihashini"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-10-25"},{"lineNumber":16,"author":{"gitId":"kvihashini"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-10-25"},{"lineNumber":17,"author":{"gitId":"kvihashini"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2021-10-25"},{"lineNumber":18,"author":{"gitId":"kvihashini"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2021-10-25"},{"lineNumber":19,"author":{"gitId":"kvihashini"},"content":"import seedu.address.model.group.Group;","lastModifiedDate":"2021-10-25"},{"lineNumber":20,"author":{"gitId":"kvihashini"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":21,"author":{"gitId":"kvihashini"},"content":"/**","lastModifiedDate":"2021-10-25"},{"lineNumber":22,"author":{"gitId":"kvihashini"},"content":" * Contains integration tests (interaction with the Model) and unit tests for","lastModifiedDate":"2021-10-25"},{"lineNumber":23,"author":{"gitId":"kvihashini"},"content":" * {@code ViewPersonCommand}.","lastModifiedDate":"2021-10-25"},{"lineNumber":24,"author":{"gitId":"kvihashini"},"content":" */","lastModifiedDate":"2021-10-25"},{"lineNumber":25,"author":{"gitId":"kvihashini"},"content":"public class ViewGroupCommandTest {","lastModifiedDate":"2021-10-25"},{"lineNumber":26,"author":{"gitId":"kvihashini"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":27,"author":{"gitId":"kvihashini"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2021-10-25"},{"lineNumber":28,"author":{"gitId":"kvihashini"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":29,"author":{"gitId":"kvihashini"},"content":"    @Test","lastModifiedDate":"2021-10-25"},{"lineNumber":30,"author":{"gitId":"kvihashini"},"content":"    public void execute_validIndexUnfilteredList_success() {","lastModifiedDate":"2021-10-25"},{"lineNumber":31,"author":{"gitId":"kvihashini"},"content":"        Group groupToView \u003d model.getFilteredGroupList().get(INDEX_FIRST_GROUP.getZeroBased());","lastModifiedDate":"2021-10-25"},{"lineNumber":32,"author":{"gitId":"kvihashini"},"content":"        ViewGroupCommand viewGroupCommand \u003d new ViewGroupCommand(INDEX_FIRST_GROUP);","lastModifiedDate":"2021-10-25"},{"lineNumber":33,"author":{"gitId":"kvihashini"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":34,"author":{"gitId":"kvihashini"},"content":"        String expectedMessage \u003d String.format(ViewGroupCommand.MESSAGE_VIEW_GROUP_SUCCESS, groupToView);","lastModifiedDate":"2021-10-25"},{"lineNumber":35,"author":{"gitId":"kvihashini"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":36,"author":{"gitId":"kvihashini"},"content":"        ModelManager expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2021-10-25"},{"lineNumber":37,"author":{"gitId":"kvihashini"},"content":"        expectedModel.setGroupToView(groupToView);","lastModifiedDate":"2021-10-25"},{"lineNumber":38,"author":{"gitId":"kvihashini"},"content":"        assertCommandSuccess(viewGroupCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2021-10-25"},{"lineNumber":39,"author":{"gitId":"kvihashini"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":40,"author":{"gitId":"kvihashini"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":41,"author":{"gitId":"kvihashini"},"content":"    @Test","lastModifiedDate":"2021-10-25"},{"lineNumber":42,"author":{"gitId":"kvihashini"},"content":"    public void execute_invalidIndexUnfilteredList_throwsCommandException() {","lastModifiedDate":"2021-10-25"},{"lineNumber":43,"author":{"gitId":"kvihashini"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredGroupList().size() + 1);","lastModifiedDate":"2021-10-25"},{"lineNumber":44,"author":{"gitId":"kvihashini"},"content":"        ViewGroupCommand viewGroupCommand \u003d new ViewGroupCommand(outOfBoundIndex);","lastModifiedDate":"2021-10-25"},{"lineNumber":45,"author":{"gitId":"kvihashini"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":46,"author":{"gitId":"kvihashini"},"content":"        assertCommandFailure(viewGroupCommand, model, Messages.MESSAGE_INVALID_GROUP_DISPLAYED_INDEX);","lastModifiedDate":"2021-10-25"},{"lineNumber":47,"author":{"gitId":"kvihashini"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":48,"author":{"gitId":"kvihashini"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":49,"author":{"gitId":"kvihashini"},"content":"    @Test","lastModifiedDate":"2021-10-25"},{"lineNumber":50,"author":{"gitId":"kvihashini"},"content":"    public void execute_invalidIndexFilteredList_throwsCommandException() {","lastModifiedDate":"2021-10-25"},{"lineNumber":51,"author":{"gitId":"kvihashini"},"content":"        showGroupAtIndex(model, INDEX_FIRST_GROUP);","lastModifiedDate":"2021-10-25"},{"lineNumber":52,"author":{"gitId":"kvihashini"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":53,"author":{"gitId":"kvihashini"},"content":"        Index outOfBoundIndex \u003d INDEX_SECOND_GROUP;","lastModifiedDate":"2021-10-25"},{"lineNumber":54,"author":{"gitId":"kvihashini"},"content":"        // ensures that outOfBoundIndex is still in bounds of address book list","lastModifiedDate":"2021-10-25"},{"lineNumber":55,"author":{"gitId":"kvihashini"},"content":"        assertTrue(outOfBoundIndex.getZeroBased() \u003c model.getAddressBook().getGroupList().size());","lastModifiedDate":"2021-10-25"},{"lineNumber":56,"author":{"gitId":"kvihashini"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":57,"author":{"gitId":"kvihashini"},"content":"        ViewGroupCommand viewGroupCommand \u003d new ViewGroupCommand(outOfBoundIndex);","lastModifiedDate":"2021-10-25"},{"lineNumber":58,"author":{"gitId":"kvihashini"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":59,"author":{"gitId":"kvihashini"},"content":"        assertCommandFailure(viewGroupCommand, model, Messages.MESSAGE_INVALID_GROUP_DISPLAYED_INDEX);","lastModifiedDate":"2021-10-25"},{"lineNumber":60,"author":{"gitId":"kvihashini"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":61,"author":{"gitId":"kvihashini"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":62,"author":{"gitId":"kvihashini"},"content":"    @Test","lastModifiedDate":"2021-10-25"},{"lineNumber":63,"author":{"gitId":"kvihashini"},"content":"    public void equals() {","lastModifiedDate":"2021-10-25"},{"lineNumber":64,"author":{"gitId":"kvihashini"},"content":"        ViewGroupCommand viewFirstCommand \u003d new ViewGroupCommand(INDEX_FIRST_GROUP);","lastModifiedDate":"2021-10-25"},{"lineNumber":65,"author":{"gitId":"kvihashini"},"content":"        ViewGroupCommand viewSecondCommand \u003d new ViewGroupCommand(INDEX_SECOND_GROUP);","lastModifiedDate":"2021-10-25"},{"lineNumber":66,"author":{"gitId":"kvihashini"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":67,"author":{"gitId":"kvihashini"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2021-10-25"},{"lineNumber":68,"author":{"gitId":"kvihashini"},"content":"        assertTrue(viewFirstCommand.equals(viewFirstCommand));","lastModifiedDate":"2021-10-25"},{"lineNumber":69,"author":{"gitId":"kvihashini"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":70,"author":{"gitId":"kvihashini"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2021-10-25"},{"lineNumber":71,"author":{"gitId":"kvihashini"},"content":"        ViewGroupCommand viewFirstCommandCopy \u003d new ViewGroupCommand(INDEX_FIRST_GROUP);","lastModifiedDate":"2021-10-25"},{"lineNumber":72,"author":{"gitId":"kvihashini"},"content":"        assertTrue(viewFirstCommand.equals(viewFirstCommandCopy));","lastModifiedDate":"2021-10-25"},{"lineNumber":73,"author":{"gitId":"kvihashini"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":74,"author":{"gitId":"kvihashini"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2021-10-25"},{"lineNumber":75,"author":{"gitId":"kvihashini"},"content":"        assertFalse(viewFirstCommand.equals(1));","lastModifiedDate":"2021-10-25"},{"lineNumber":76,"author":{"gitId":"kvihashini"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":77,"author":{"gitId":"kvihashini"},"content":"        // null -\u003e returns false","lastModifiedDate":"2021-10-25"},{"lineNumber":78,"author":{"gitId":"kvihashini"},"content":"        assertFalse(viewFirstCommand.equals(null));","lastModifiedDate":"2021-10-25"},{"lineNumber":79,"author":{"gitId":"kvihashini"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":80,"author":{"gitId":"kvihashini"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2021-10-25"},{"lineNumber":81,"author":{"gitId":"kvihashini"},"content":"        assertFalse(viewFirstCommand.equals(viewSecondCommand));","lastModifiedDate":"2021-10-25"},{"lineNumber":82,"author":{"gitId":"kvihashini"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":83,"author":{"gitId":"kvihashini"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":84,"author":{"gitId":"kvihashini"},"content":"    /**","lastModifiedDate":"2021-10-25"},{"lineNumber":85,"author":{"gitId":"kvihashini"},"content":"     * Updates {@code model}\u0027s filtered list to show no group.","lastModifiedDate":"2021-10-25"},{"lineNumber":86,"author":{"gitId":"kvihashini"},"content":"     */","lastModifiedDate":"2021-10-25"},{"lineNumber":87,"author":{"gitId":"kvihashini"},"content":"    private void showNoGroup(Model model) {","lastModifiedDate":"2021-10-25"},{"lineNumber":88,"author":{"gitId":"kvihashini"},"content":"        model.updateFilteredGroupList(p -\u003e false);","lastModifiedDate":"2021-10-25"},{"lineNumber":89,"author":{"gitId":"kvihashini"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":90,"author":{"gitId":"kvihashini"},"content":"        assertTrue(model.getFilteredGroupList().isEmpty());","lastModifiedDate":"2021-10-25"},{"lineNumber":91,"author":{"gitId":"kvihashini"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":92,"author":{"gitId":"kvihashini"},"content":"}","lastModifiedDate":"2021-10-25"}],"authorContributionMap":{"kvihashini":92}},{"path":"src/test/java/seedu/address/logic/commands/tasks/EditTaskCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Neha-5678"},"content":"package seedu.address.logic.commands.tasks;","lastModifiedDate":"2021-10-19"},{"lineNumber":2,"author":{"gitId":"Neha-5678"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":3,"author":{"gitId":"Neha-5678"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-10-19"},{"lineNumber":4,"author":{"gitId":"Neha-5678"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-19"},{"lineNumber":5,"author":{"gitId":"Neha-5678"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_QUIZ1;","lastModifiedDate":"2021-10-19"},{"lineNumber":6,"author":{"gitId":"Neha-5678"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_QUIZ2;","lastModifiedDate":"2021-10-19"},{"lineNumber":7,"author":{"gitId":"Neha-5678"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_DEADLINE_QUIZ1;","lastModifiedDate":"2021-10-19"},{"lineNumber":8,"author":{"gitId":"Neha-5678"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_DESCRIPTION_QUIZ1;","lastModifiedDate":"2021-10-19"},{"lineNumber":9,"author":{"gitId":"Neha-5678"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2021-10-19"},{"lineNumber":10,"author":{"gitId":"Neha-5678"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertTaskCommandFailure;","lastModifiedDate":"2021-10-19"},{"lineNumber":11,"author":{"gitId":"Neha-5678"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2021-10-19"},{"lineNumber":12,"author":{"gitId":"Neha-5678"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_TASK;","lastModifiedDate":"2021-10-19"},{"lineNumber":13,"author":{"gitId":"Neha-5678"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_TASK;","lastModifiedDate":"2021-10-19"},{"lineNumber":14,"author":{"gitId":"Neha-5678"},"content":"import static seedu.address.testutil.TypicalObjects.getTypicalAddressBook;","lastModifiedDate":"2021-10-19"},{"lineNumber":15,"author":{"gitId":"Neha-5678"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":16,"author":{"gitId":"Neha-5678"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-19"},{"lineNumber":17,"author":{"gitId":"Neha-5678"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":18,"author":{"gitId":"Neha-5678"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2021-10-19"},{"lineNumber":19,"author":{"gitId":"Neha-5678"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-10-19"},{"lineNumber":20,"author":{"gitId":"Neha-5678"},"content":"import seedu.address.logic.commands.ClearCommand;","lastModifiedDate":"2021-10-19"},{"lineNumber":21,"author":{"gitId":"Neha-5678"},"content":"import seedu.address.logic.commands.tasks.EditTaskCommand.EditTaskDescriptor;","lastModifiedDate":"2021-10-19"},{"lineNumber":22,"author":{"gitId":"Neha-5678"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2021-10-19"},{"lineNumber":23,"author":{"gitId":"Neha-5678"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-10-19"},{"lineNumber":24,"author":{"gitId":"Neha-5678"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2021-10-19"},{"lineNumber":25,"author":{"gitId":"Neha-5678"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2021-10-19"},{"lineNumber":26,"author":{"gitId":"Neha-5678"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2021-10-19"},{"lineNumber":27,"author":{"gitId":"Neha-5678"},"content":"import seedu.address.testutil.EditTaskDescriptorBuilder;","lastModifiedDate":"2021-10-19"},{"lineNumber":28,"author":{"gitId":"Neha-5678"},"content":"import seedu.address.testutil.TaskBuilder;","lastModifiedDate":"2021-10-19"},{"lineNumber":29,"author":{"gitId":"Neha-5678"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":30,"author":{"gitId":"Neha-5678"},"content":"public class EditTaskCommandTest {","lastModifiedDate":"2021-10-19"},{"lineNumber":31,"author":{"gitId":"Neha-5678"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":32,"author":{"gitId":"Neha-5678"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2021-10-19"},{"lineNumber":33,"author":{"gitId":"Neha-5678"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":34,"author":{"gitId":"Neha-5678"},"content":"    @Test","lastModifiedDate":"2021-10-19"},{"lineNumber":35,"author":{"gitId":"Neha-5678"},"content":"    public void execute_allFieldsSpecifiedUnfilteredList_success() {","lastModifiedDate":"2021-10-19"},{"lineNumber":36,"author":{"gitId":"Neha-5678"},"content":"        Task editedTask \u003d new TaskBuilder().withUniqueId(\"f31648db-5619-4bad-99d2-87367a2b5f28\").build();","lastModifiedDate":"2021-10-19"},{"lineNumber":37,"author":{"gitId":"Neha-5678"},"content":"        EditTaskDescriptor descriptor \u003d new EditTaskDescriptorBuilder(editedTask).build();","lastModifiedDate":"2021-10-19"},{"lineNumber":38,"author":{"gitId":"Neha-5678"},"content":"        EditTaskCommand editTaskCommand \u003d new EditTaskCommand(INDEX_FIRST_TASK, descriptor);","lastModifiedDate":"2021-10-19"},{"lineNumber":39,"author":{"gitId":"Neha-5678"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":40,"author":{"gitId":"Neha-5678"},"content":"        String expectedMessage \u003d String.format(EditTaskCommand.MESSAGE_EDIT_TASK_SUCCESS, editedTask);","lastModifiedDate":"2021-10-19"},{"lineNumber":41,"author":{"gitId":"Neha-5678"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":42,"author":{"gitId":"Neha-5678"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2021-10-19"},{"lineNumber":43,"author":{"gitId":"Neha-5678"},"content":"        expectedModel.setTask(model.getFilteredTaskList().get(0), editedTask);","lastModifiedDate":"2021-10-19"},{"lineNumber":44,"author":{"gitId":"Neha-5678"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":45,"author":{"gitId":"Neha-5678"},"content":"        assertCommandSuccess(editTaskCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2021-10-19"},{"lineNumber":46,"author":{"gitId":"Neha-5678"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":47,"author":{"gitId":"Neha-5678"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":48,"author":{"gitId":"Neha-5678"},"content":"    @Test","lastModifiedDate":"2021-10-19"},{"lineNumber":49,"author":{"gitId":"Neha-5678"},"content":"    public void execute_someFieldsSpecifiedUnfilteredList_success() {","lastModifiedDate":"2021-10-19"},{"lineNumber":50,"author":{"gitId":"Neha-5678"},"content":"        Index indexLastTask \u003d Index.fromOneBased(model.getFilteredTaskList().size());","lastModifiedDate":"2021-10-19"},{"lineNumber":51,"author":{"gitId":"Neha-5678"},"content":"        Task lastTask \u003d model.getFilteredTaskList().get(indexLastTask.getZeroBased());","lastModifiedDate":"2021-10-19"},{"lineNumber":52,"author":{"gitId":"Neha-5678"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":53,"author":{"gitId":"Neha-5678"},"content":"        TaskBuilder taskInList \u003d new TaskBuilder(lastTask);","lastModifiedDate":"2021-10-19"},{"lineNumber":54,"author":{"gitId":"Neha-5678"},"content":"        Task editedTask \u003d taskInList.withDescription(VALID_DESCRIPTION_QUIZ1)","lastModifiedDate":"2021-10-19"},{"lineNumber":55,"author":{"gitId":"Neha-5678"},"content":"                .withDeadline(VALID_DEADLINE_QUIZ1).build();","lastModifiedDate":"2021-10-19"},{"lineNumber":56,"author":{"gitId":"Neha-5678"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":57,"author":{"gitId":"Neha-5678"},"content":"        EditTaskDescriptor descriptor \u003d new EditTaskDescriptorBuilder()","lastModifiedDate":"2021-10-19"},{"lineNumber":58,"author":{"gitId":"Neha-5678"},"content":"                .withDescription(VALID_DESCRIPTION_QUIZ1).withDeadline(VALID_DEADLINE_QUIZ1).build();","lastModifiedDate":"2021-10-19"},{"lineNumber":59,"author":{"gitId":"Neha-5678"},"content":"        EditTaskCommand editTaskCommand \u003d new EditTaskCommand(indexLastTask, descriptor);","lastModifiedDate":"2021-10-19"},{"lineNumber":60,"author":{"gitId":"Neha-5678"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":61,"author":{"gitId":"Neha-5678"},"content":"        String expectedMessage \u003d String.format(EditTaskCommand.MESSAGE_EDIT_TASK_SUCCESS, editedTask);","lastModifiedDate":"2021-10-19"},{"lineNumber":62,"author":{"gitId":"Neha-5678"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":63,"author":{"gitId":"Neha-5678"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2021-10-19"},{"lineNumber":64,"author":{"gitId":"Neha-5678"},"content":"        expectedModel.setTask(lastTask, editedTask);","lastModifiedDate":"2021-10-19"},{"lineNumber":65,"author":{"gitId":"Neha-5678"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":66,"author":{"gitId":"Neha-5678"},"content":"        assertCommandSuccess(editTaskCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2021-10-19"},{"lineNumber":67,"author":{"gitId":"Neha-5678"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":68,"author":{"gitId":"Neha-5678"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":69,"author":{"gitId":"Neha-5678"},"content":"    @Test","lastModifiedDate":"2021-10-19"},{"lineNumber":70,"author":{"gitId":"Neha-5678"},"content":"    public void execute_noFieldSpecifiedUnfilteredList_success() {","lastModifiedDate":"2021-10-19"},{"lineNumber":71,"author":{"gitId":"Neha-5678"},"content":"        EditTaskCommand editTaskCommand \u003d new EditTaskCommand(INDEX_FIRST_TASK, new EditTaskDescriptor());","lastModifiedDate":"2021-10-19"},{"lineNumber":72,"author":{"gitId":"Neha-5678"},"content":"        Task editedTask \u003d model.getFilteredTaskList().get(INDEX_FIRST_TASK.getZeroBased());","lastModifiedDate":"2021-10-19"},{"lineNumber":73,"author":{"gitId":"Neha-5678"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":74,"author":{"gitId":"Neha-5678"},"content":"        String expectedMessage \u003d String.format(EditTaskCommand.MESSAGE_EDIT_TASK_SUCCESS, editedTask);","lastModifiedDate":"2021-10-19"},{"lineNumber":75,"author":{"gitId":"Neha-5678"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":76,"author":{"gitId":"Neha-5678"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2021-10-19"},{"lineNumber":77,"author":{"gitId":"Neha-5678"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":78,"author":{"gitId":"Neha-5678"},"content":"        assertCommandSuccess(editTaskCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2021-10-19"},{"lineNumber":79,"author":{"gitId":"Neha-5678"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":80,"author":{"gitId":"Neha-5678"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":81,"author":{"gitId":"Neha-5678"},"content":"    @Test","lastModifiedDate":"2021-10-19"},{"lineNumber":82,"author":{"gitId":"Neha-5678"},"content":"    public void execute_filteredList_success() {","lastModifiedDate":"2021-10-19"},{"lineNumber":83,"author":{"gitId":"Neha-5678"},"content":"        Task taskInFilteredList \u003d model.getFilteredTaskList().get(INDEX_FIRST_TASK.getZeroBased());","lastModifiedDate":"2021-10-19"},{"lineNumber":84,"author":{"gitId":"Neha-5678"},"content":"        Task editedTask \u003d new TaskBuilder(taskInFilteredList).withDescription(VALID_DESCRIPTION_QUIZ1).build();","lastModifiedDate":"2021-10-19"},{"lineNumber":85,"author":{"gitId":"Neha-5678"},"content":"        EditTaskCommand editTaskCommand \u003d new EditTaskCommand(INDEX_FIRST_TASK,","lastModifiedDate":"2021-10-19"},{"lineNumber":86,"author":{"gitId":"Neha-5678"},"content":"                new EditTaskDescriptorBuilder().withDescription(VALID_DESCRIPTION_QUIZ1).build());","lastModifiedDate":"2021-10-19"},{"lineNumber":87,"author":{"gitId":"Neha-5678"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":88,"author":{"gitId":"Neha-5678"},"content":"        String expectedMessage \u003d String.format(EditTaskCommand.MESSAGE_EDIT_TASK_SUCCESS, editedTask);","lastModifiedDate":"2021-10-19"},{"lineNumber":89,"author":{"gitId":"Neha-5678"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":90,"author":{"gitId":"Neha-5678"},"content":"        Model expectedModel \u003d new ModelManager(new AddressBook(model.getAddressBook()), new UserPrefs());","lastModifiedDate":"2021-10-19"},{"lineNumber":91,"author":{"gitId":"Neha-5678"},"content":"        expectedModel.setTask(model.getFilteredTaskList().get(0), editedTask);","lastModifiedDate":"2021-10-19"},{"lineNumber":92,"author":{"gitId":"Neha-5678"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":93,"author":{"gitId":"Neha-5678"},"content":"        assertCommandSuccess(editTaskCommand, model, expectedMessage, expectedModel);","lastModifiedDate":"2021-10-19"},{"lineNumber":94,"author":{"gitId":"Neha-5678"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":95,"author":{"gitId":"Neha-5678"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":96,"author":{"gitId":"Neha-5678"},"content":"    @Test","lastModifiedDate":"2021-10-19"},{"lineNumber":97,"author":{"gitId":"Neha-5678"},"content":"    public void execute_duplicateTaskUnfilteredList_failure() {","lastModifiedDate":"2021-10-19"},{"lineNumber":98,"author":{"gitId":"Neha-5678"},"content":"        Task firstTask \u003d model.getFilteredTaskList().get(INDEX_FIRST_TASK.getZeroBased());","lastModifiedDate":"2021-10-19"},{"lineNumber":99,"author":{"gitId":"Neha-5678"},"content":"        EditTaskDescriptor descriptor \u003d new EditTaskDescriptorBuilder(firstTask).build();","lastModifiedDate":"2021-10-19"},{"lineNumber":100,"author":{"gitId":"Neha-5678"},"content":"        EditTaskCommand editTaskCommand \u003d new EditTaskCommand(INDEX_SECOND_TASK, descriptor);","lastModifiedDate":"2021-10-19"},{"lineNumber":101,"author":{"gitId":"Neha-5678"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":102,"author":{"gitId":"Neha-5678"},"content":"        assertTaskCommandFailure(editTaskCommand, model, EditTaskCommand.MESSAGE_DUPLICATE_TASK);","lastModifiedDate":"2021-10-19"},{"lineNumber":103,"author":{"gitId":"Neha-5678"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":104,"author":{"gitId":"Neha-5678"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":105,"author":{"gitId":"Neha-5678"},"content":"    @Test","lastModifiedDate":"2021-10-19"},{"lineNumber":106,"author":{"gitId":"Neha-5678"},"content":"    public void execute_duplicateTaskFilteredList_failure() {","lastModifiedDate":"2021-10-19"},{"lineNumber":107,"author":{"gitId":"Neha-5678"},"content":"        // edit task in filtered list into a duplicate in address book","lastModifiedDate":"2021-10-19"},{"lineNumber":108,"author":{"gitId":"Neha-5678"},"content":"        Task taskInList \u003d model.getAddressBook().getTaskList().get(INDEX_SECOND_TASK.getZeroBased());","lastModifiedDate":"2021-10-19"},{"lineNumber":109,"author":{"gitId":"Neha-5678"},"content":"        EditTaskCommand editTaskCommand \u003d new EditTaskCommand(INDEX_FIRST_TASK,","lastModifiedDate":"2021-10-19"},{"lineNumber":110,"author":{"gitId":"Neha-5678"},"content":"                new EditTaskDescriptorBuilder(taskInList).build());","lastModifiedDate":"2021-10-19"},{"lineNumber":111,"author":{"gitId":"Neha-5678"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":112,"author":{"gitId":"Neha-5678"},"content":"        assertTaskCommandFailure(editTaskCommand, model, EditTaskCommand.MESSAGE_DUPLICATE_TASK);","lastModifiedDate":"2021-10-19"},{"lineNumber":113,"author":{"gitId":"Neha-5678"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":114,"author":{"gitId":"Neha-5678"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":115,"author":{"gitId":"Neha-5678"},"content":"    @Test","lastModifiedDate":"2021-10-19"},{"lineNumber":116,"author":{"gitId":"Neha-5678"},"content":"    public void execute_invalidTaskIndexUnfilteredList_failure() {","lastModifiedDate":"2021-10-19"},{"lineNumber":117,"author":{"gitId":"Neha-5678"},"content":"        Index outOfBoundIndex \u003d Index.fromOneBased(model.getFilteredTaskList().size() + 1);","lastModifiedDate":"2021-10-19"},{"lineNumber":118,"author":{"gitId":"Neha-5678"},"content":"        EditTaskDescriptor descriptor \u003d new EditTaskDescriptorBuilder().withDeadline(VALID_DEADLINE_QUIZ1).build();","lastModifiedDate":"2021-10-19"},{"lineNumber":119,"author":{"gitId":"Neha-5678"},"content":"        EditTaskCommand editTaskCommand \u003d new EditTaskCommand(outOfBoundIndex, descriptor);","lastModifiedDate":"2021-10-19"},{"lineNumber":120,"author":{"gitId":"Neha-5678"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":121,"author":{"gitId":"Neha-5678"},"content":"        assertTaskCommandFailure(editTaskCommand, model, Messages.MESSAGE_INVALID_TASK_DISPLAYED_INDEX);","lastModifiedDate":"2021-10-19"},{"lineNumber":122,"author":{"gitId":"Neha-5678"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":123,"author":{"gitId":"Neha-5678"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":124,"author":{"gitId":"Neha-5678"},"content":"    @Test","lastModifiedDate":"2021-10-19"},{"lineNumber":125,"author":{"gitId":"Neha-5678"},"content":"    public void equals() {","lastModifiedDate":"2021-10-19"},{"lineNumber":126,"author":{"gitId":"Neha-5678"},"content":"        final EditTaskCommand standardCommand \u003d new EditTaskCommand(INDEX_FIRST_TASK, DESC_QUIZ1);","lastModifiedDate":"2021-10-19"},{"lineNumber":127,"author":{"gitId":"Neha-5678"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":128,"author":{"gitId":"Neha-5678"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2021-10-19"},{"lineNumber":129,"author":{"gitId":"Neha-5678"},"content":"        EditTaskDescriptor copyDescriptor \u003d new EditTaskDescriptor(DESC_QUIZ1);","lastModifiedDate":"2021-10-19"},{"lineNumber":130,"author":{"gitId":"Neha-5678"},"content":"        EditTaskCommand commandWithSameValues \u003d new EditTaskCommand(INDEX_FIRST_TASK, copyDescriptor);","lastModifiedDate":"2021-10-19"},{"lineNumber":131,"author":{"gitId":"Neha-5678"},"content":"        assertTrue(standardCommand.equals(commandWithSameValues));","lastModifiedDate":"2021-10-19"},{"lineNumber":132,"author":{"gitId":"Neha-5678"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":133,"author":{"gitId":"Neha-5678"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2021-10-19"},{"lineNumber":134,"author":{"gitId":"Neha-5678"},"content":"        assertTrue(standardCommand.equals(standardCommand));","lastModifiedDate":"2021-10-19"},{"lineNumber":135,"author":{"gitId":"Neha-5678"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":136,"author":{"gitId":"Neha-5678"},"content":"        // null -\u003e returns false","lastModifiedDate":"2021-10-19"},{"lineNumber":137,"author":{"gitId":"Neha-5678"},"content":"        assertFalse(standardCommand.equals(null));","lastModifiedDate":"2021-10-19"},{"lineNumber":138,"author":{"gitId":"Neha-5678"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":139,"author":{"gitId":"Neha-5678"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2021-10-19"},{"lineNumber":140,"author":{"gitId":"Neha-5678"},"content":"        assertFalse(standardCommand.equals(new ClearCommand()));","lastModifiedDate":"2021-10-19"},{"lineNumber":141,"author":{"gitId":"Neha-5678"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":142,"author":{"gitId":"Neha-5678"},"content":"        // different index -\u003e returns false","lastModifiedDate":"2021-10-19"},{"lineNumber":143,"author":{"gitId":"Neha-5678"},"content":"        assertFalse(standardCommand.equals(new EditTaskCommand(INDEX_SECOND_TASK, DESC_QUIZ1)));","lastModifiedDate":"2021-10-19"},{"lineNumber":144,"author":{"gitId":"Neha-5678"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":145,"author":{"gitId":"Neha-5678"},"content":"        // different descriptor -\u003e returns false","lastModifiedDate":"2021-10-19"},{"lineNumber":146,"author":{"gitId":"Neha-5678"},"content":"        assertFalse(standardCommand.equals(new EditTaskCommand(INDEX_FIRST_PERSON, DESC_QUIZ2)));","lastModifiedDate":"2021-10-19"},{"lineNumber":147,"author":{"gitId":"Neha-5678"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":148,"author":{"gitId":"Neha-5678"},"content":"}","lastModifiedDate":"2021-10-19"}],"authorContributionMap":{"Neha-5678":148}},{"path":"src/test/java/seedu/address/logic/commands/tasks/EditTaskDescriptorTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Neha-5678"},"content":"package seedu.address.logic.commands.tasks;","lastModifiedDate":"2021-10-19"},{"lineNumber":2,"author":{"gitId":"Neha-5678"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":3,"author":{"gitId":"Neha-5678"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-10-19"},{"lineNumber":4,"author":{"gitId":"Neha-5678"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-19"},{"lineNumber":5,"author":{"gitId":"Neha-5678"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_QUIZ1;","lastModifiedDate":"2021-10-19"},{"lineNumber":6,"author":{"gitId":"Neha-5678"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DESC_QUIZ2;","lastModifiedDate":"2021-10-19"},{"lineNumber":7,"author":{"gitId":"Neha-5678"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_DEADLINE_QUIZ2;","lastModifiedDate":"2021-10-19"},{"lineNumber":8,"author":{"gitId":"Neha-5678"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_DESCRIPTION_QUIZ2;","lastModifiedDate":"2021-10-19"},{"lineNumber":9,"author":{"gitId":"Neha-5678"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":10,"author":{"gitId":"Neha-5678"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-19"},{"lineNumber":11,"author":{"gitId":"Neha-5678"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":12,"author":{"gitId":"Neha-5678"},"content":"import seedu.address.logic.commands.tasks.EditTaskCommand.EditTaskDescriptor;","lastModifiedDate":"2021-10-19"},{"lineNumber":13,"author":{"gitId":"Neha-5678"},"content":"import seedu.address.testutil.EditTaskDescriptorBuilder;","lastModifiedDate":"2021-10-19"},{"lineNumber":14,"author":{"gitId":"Neha-5678"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":15,"author":{"gitId":"Neha-5678"},"content":"public class EditTaskDescriptorTest {","lastModifiedDate":"2021-10-19"},{"lineNumber":16,"author":{"gitId":"Neha-5678"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":17,"author":{"gitId":"Neha-5678"},"content":"    @Test","lastModifiedDate":"2021-10-19"},{"lineNumber":18,"author":{"gitId":"Neha-5678"},"content":"    public void equals() {","lastModifiedDate":"2021-10-19"},{"lineNumber":19,"author":{"gitId":"Neha-5678"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2021-10-19"},{"lineNumber":20,"author":{"gitId":"Neha-5678"},"content":"        EditTaskCommand.EditTaskDescriptor descriptorWithSameValues \u003d new EditTaskDescriptor(DESC_QUIZ1);","lastModifiedDate":"2021-10-19"},{"lineNumber":21,"author":{"gitId":"Neha-5678"},"content":"        assertTrue(DESC_QUIZ1.equals(descriptorWithSameValues));","lastModifiedDate":"2021-10-19"},{"lineNumber":22,"author":{"gitId":"Neha-5678"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":23,"author":{"gitId":"Neha-5678"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2021-10-19"},{"lineNumber":24,"author":{"gitId":"Neha-5678"},"content":"        assertTrue(DESC_QUIZ1.equals(DESC_QUIZ1));","lastModifiedDate":"2021-10-19"},{"lineNumber":25,"author":{"gitId":"Neha-5678"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":26,"author":{"gitId":"Neha-5678"},"content":"        // null -\u003e returns false","lastModifiedDate":"2021-10-19"},{"lineNumber":27,"author":{"gitId":"Neha-5678"},"content":"        assertFalse(DESC_QUIZ1.equals(null));","lastModifiedDate":"2021-10-19"},{"lineNumber":28,"author":{"gitId":"Neha-5678"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":29,"author":{"gitId":"Neha-5678"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2021-10-19"},{"lineNumber":30,"author":{"gitId":"Neha-5678"},"content":"        assertFalse(DESC_QUIZ1.equals(5));","lastModifiedDate":"2021-10-19"},{"lineNumber":31,"author":{"gitId":"Neha-5678"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":32,"author":{"gitId":"Neha-5678"},"content":"        // different values -\u003e returns false","lastModifiedDate":"2021-10-19"},{"lineNumber":33,"author":{"gitId":"Neha-5678"},"content":"        assertFalse(DESC_QUIZ1.equals(DESC_QUIZ2));","lastModifiedDate":"2021-10-19"},{"lineNumber":34,"author":{"gitId":"Neha-5678"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":35,"author":{"gitId":"Neha-5678"},"content":"        // different description -\u003e returns false","lastModifiedDate":"2021-10-19"},{"lineNumber":36,"author":{"gitId":"Neha-5678"},"content":"        EditTaskDescriptor editedQuiz1 \u003d new EditTaskDescriptorBuilder(DESC_QUIZ1)","lastModifiedDate":"2021-10-19"},{"lineNumber":37,"author":{"gitId":"Neha-5678"},"content":"                .withDescription(VALID_DESCRIPTION_QUIZ2).build();","lastModifiedDate":"2021-10-19"},{"lineNumber":38,"author":{"gitId":"Neha-5678"},"content":"        assertFalse(DESC_QUIZ1.equals(editedQuiz1));","lastModifiedDate":"2021-10-19"},{"lineNumber":39,"author":{"gitId":"Neha-5678"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":40,"author":{"gitId":"Neha-5678"},"content":"        // different deadline -\u003e returns false","lastModifiedDate":"2021-10-19"},{"lineNumber":41,"author":{"gitId":"Neha-5678"},"content":"        editedQuiz1 \u003d new EditTaskDescriptorBuilder(DESC_QUIZ1).withDeadline(VALID_DEADLINE_QUIZ2).build();","lastModifiedDate":"2021-10-19"},{"lineNumber":42,"author":{"gitId":"Neha-5678"},"content":"        assertFalse(DESC_QUIZ1.equals(editedQuiz1));","lastModifiedDate":"2021-10-19"},{"lineNumber":43,"author":{"gitId":"Neha-5678"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":44,"author":{"gitId":"Neha-5678"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":45,"author":{"gitId":"Neha-5678"},"content":"}","lastModifiedDate":"2021-10-19"}],"authorContributionMap":{"Neha-5678":45}},{"path":"src/test/java/seedu/address/logic/commands/tasks/FindTaskCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Neha-5678"},"content":"package seedu.address.logic.commands.tasks;","lastModifiedDate":"2021-10-25"},{"lineNumber":2,"author":{"gitId":"Neha-5678"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":3,"author":{"gitId":"Neha-5678"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-25"},{"lineNumber":4,"author":{"gitId":"Neha-5678"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-10-25"},{"lineNumber":5,"author":{"gitId":"Neha-5678"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-25"},{"lineNumber":6,"author":{"gitId":"Neha-5678"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_TASKS_LISTED_OVERVIEW;","lastModifiedDate":"2021-10-25"},{"lineNumber":7,"author":{"gitId":"Neha-5678"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2021-10-25"},{"lineNumber":8,"author":{"gitId":"Neha-5678"},"content":"import static seedu.address.testutil.TypicalObjects.getTypicalAddressBook;","lastModifiedDate":"2021-10-25"},{"lineNumber":9,"author":{"gitId":"Neha-5678"},"content":"import static seedu.address.testutil.TypicalTasks.MATH_HOMEWORK;","lastModifiedDate":"2021-11-06"},{"lineNumber":10,"author":{"gitId":"Neha-5678"},"content":"import static seedu.address.testutil.TypicalTasks.STATS_ASSIGNMENT;","lastModifiedDate":"2021-11-06"},{"lineNumber":11,"author":{"gitId":"Neha-5678"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":12,"author":{"gitId":"Neha-5678"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-10-25"},{"lineNumber":13,"author":{"gitId":"Neha-5678"},"content":"import java.util.Collections;","lastModifiedDate":"2021-10-25"},{"lineNumber":14,"author":{"gitId":"Neha-5678"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":15,"author":{"gitId":"Neha-5678"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-25"},{"lineNumber":16,"author":{"gitId":"Neha-5678"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":17,"author":{"gitId":"Neha-5678"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-10-25"},{"lineNumber":18,"author":{"gitId":"Neha-5678"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2021-10-25"},{"lineNumber":19,"author":{"gitId":"Neha-5678"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2021-10-25"},{"lineNumber":20,"author":{"gitId":"Neha-5678"},"content":"import seedu.address.model.task.TaskNameContainsKeywordsPredicate;","lastModifiedDate":"2021-10-25"},{"lineNumber":21,"author":{"gitId":"Neha-5678"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":22,"author":{"gitId":"Neha-5678"},"content":"/**","lastModifiedDate":"2021-10-25"},{"lineNumber":23,"author":{"gitId":"Neha-5678"},"content":" * Contains integration tests (interaction with the Model) for {@code FindTaskCommand}.","lastModifiedDate":"2021-10-25"},{"lineNumber":24,"author":{"gitId":"Neha-5678"},"content":" */","lastModifiedDate":"2021-10-25"},{"lineNumber":25,"author":{"gitId":"Neha-5678"},"content":"public class FindTaskCommandTest {","lastModifiedDate":"2021-10-25"},{"lineNumber":26,"author":{"gitId":"Neha-5678"},"content":"    private Model model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2021-10-25"},{"lineNumber":27,"author":{"gitId":"Neha-5678"},"content":"    private Model expectedModel \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2021-10-25"},{"lineNumber":28,"author":{"gitId":"Neha-5678"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":29,"author":{"gitId":"Neha-5678"},"content":"    @Test","lastModifiedDate":"2021-10-25"},{"lineNumber":30,"author":{"gitId":"Neha-5678"},"content":"    public void equals() {","lastModifiedDate":"2021-10-25"},{"lineNumber":31,"author":{"gitId":"Neha-5678"},"content":"        TaskNameContainsKeywordsPredicate firstPredicate \u003d","lastModifiedDate":"2021-10-25"},{"lineNumber":32,"author":{"gitId":"Neha-5678"},"content":"                new TaskNameContainsKeywordsPredicate(Collections.singletonList(\"first\"));","lastModifiedDate":"2021-10-25"},{"lineNumber":33,"author":{"gitId":"Neha-5678"},"content":"        TaskNameContainsKeywordsPredicate secondPredicate \u003d","lastModifiedDate":"2021-10-25"},{"lineNumber":34,"author":{"gitId":"Neha-5678"},"content":"                new TaskNameContainsKeywordsPredicate(Collections.singletonList(\"second\"));","lastModifiedDate":"2021-10-25"},{"lineNumber":35,"author":{"gitId":"Neha-5678"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":36,"author":{"gitId":"Neha-5678"},"content":"        FindTaskCommand findFirstCommand \u003d new FindTaskCommand(firstPredicate);","lastModifiedDate":"2021-10-25"},{"lineNumber":37,"author":{"gitId":"Neha-5678"},"content":"        FindTaskCommand findSecondCommand \u003d new FindTaskCommand(secondPredicate);","lastModifiedDate":"2021-10-25"},{"lineNumber":38,"author":{"gitId":"Neha-5678"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":39,"author":{"gitId":"Neha-5678"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2021-10-25"},{"lineNumber":40,"author":{"gitId":"Neha-5678"},"content":"        assertTrue(findFirstCommand.equals(findFirstCommand));","lastModifiedDate":"2021-10-25"},{"lineNumber":41,"author":{"gitId":"Neha-5678"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":42,"author":{"gitId":"Neha-5678"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2021-10-25"},{"lineNumber":43,"author":{"gitId":"Neha-5678"},"content":"        FindTaskCommand findFirstCommandCopy \u003d new FindTaskCommand(firstPredicate);","lastModifiedDate":"2021-10-25"},{"lineNumber":44,"author":{"gitId":"Neha-5678"},"content":"        assertTrue(findFirstCommand.equals(findFirstCommandCopy));","lastModifiedDate":"2021-10-25"},{"lineNumber":45,"author":{"gitId":"Neha-5678"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":46,"author":{"gitId":"Neha-5678"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2021-10-25"},{"lineNumber":47,"author":{"gitId":"Neha-5678"},"content":"        assertFalse(findFirstCommand.equals(1));","lastModifiedDate":"2021-10-25"},{"lineNumber":48,"author":{"gitId":"Neha-5678"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":49,"author":{"gitId":"Neha-5678"},"content":"        // null -\u003e returns false","lastModifiedDate":"2021-10-25"},{"lineNumber":50,"author":{"gitId":"Neha-5678"},"content":"        assertFalse(findFirstCommand.equals(null));","lastModifiedDate":"2021-10-25"},{"lineNumber":51,"author":{"gitId":"Neha-5678"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":52,"author":{"gitId":"Neha-5678"},"content":"        // different task -\u003e returns false","lastModifiedDate":"2021-10-25"},{"lineNumber":53,"author":{"gitId":"Neha-5678"},"content":"        assertFalse(findFirstCommand.equals(findSecondCommand));","lastModifiedDate":"2021-10-25"},{"lineNumber":54,"author":{"gitId":"Neha-5678"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":55,"author":{"gitId":"Neha-5678"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":56,"author":{"gitId":"Neha-5678"},"content":"    @Test","lastModifiedDate":"2021-10-25"},{"lineNumber":57,"author":{"gitId":"Neha-5678"},"content":"    public void execute_zeroKeywords_noTaskFound() {","lastModifiedDate":"2021-10-25"},{"lineNumber":58,"author":{"gitId":"Neha-5678"},"content":"        String expectedMessage \u003d String.format(MESSAGE_TASKS_LISTED_OVERVIEW, 0);","lastModifiedDate":"2021-10-25"},{"lineNumber":59,"author":{"gitId":"Neha-5678"},"content":"        TaskNameContainsKeywordsPredicate predicate \u003d preparePredicate(\" \");","lastModifiedDate":"2021-10-25"},{"lineNumber":60,"author":{"gitId":"Neha-5678"},"content":"        FindTaskCommand command \u003d new FindTaskCommand(predicate);","lastModifiedDate":"2021-10-25"},{"lineNumber":61,"author":{"gitId":"Neha-5678"},"content":"        expectedModel.updateFilteredTaskList(predicate);","lastModifiedDate":"2021-10-25"},{"lineNumber":62,"author":{"gitId":"Neha-5678"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2021-10-25"},{"lineNumber":63,"author":{"gitId":"Neha-5678"},"content":"        assertEquals(Collections.emptyList(), model.getFilteredTaskList());","lastModifiedDate":"2021-10-25"},{"lineNumber":64,"author":{"gitId":"Neha-5678"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":65,"author":{"gitId":"Neha-5678"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":66,"author":{"gitId":"Neha-5678"},"content":"    @Test","lastModifiedDate":"2021-10-25"},{"lineNumber":67,"author":{"gitId":"Neha-5678"},"content":"    public void execute_multipleKeywords_multipleTasksFound() {","lastModifiedDate":"2021-10-25"},{"lineNumber":68,"author":{"gitId":"Neha-5678"},"content":"        String expectedMessage \u003d String.format(MESSAGE_TASKS_LISTED_OVERVIEW, 2);","lastModifiedDate":"2021-10-25"},{"lineNumber":69,"author":{"gitId":"Neha-5678"},"content":"        TaskNameContainsKeywordsPredicate predicate \u003d preparePredicate(\"assignment homework\");","lastModifiedDate":"2021-10-25"},{"lineNumber":70,"author":{"gitId":"Neha-5678"},"content":"        FindTaskCommand command \u003d new FindTaskCommand(predicate);","lastModifiedDate":"2021-10-25"},{"lineNumber":71,"author":{"gitId":"Neha-5678"},"content":"        expectedModel.updateFilteredTaskList(predicate);","lastModifiedDate":"2021-10-25"},{"lineNumber":72,"author":{"gitId":"Neha-5678"},"content":"        assertCommandSuccess(command, model, expectedMessage, expectedModel);","lastModifiedDate":"2021-10-25"},{"lineNumber":73,"author":{"gitId":"Neha-5678"},"content":"        assertEquals(Arrays.asList(MATH_HOMEWORK, STATS_ASSIGNMENT), model.getFilteredTaskList());","lastModifiedDate":"2021-10-25"},{"lineNumber":74,"author":{"gitId":"Neha-5678"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":75,"author":{"gitId":"Neha-5678"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":76,"author":{"gitId":"Neha-5678"},"content":"    /**","lastModifiedDate":"2021-10-25"},{"lineNumber":77,"author":{"gitId":"Neha-5678"},"content":"     * Parses {@code userInput} into a {@code TaskNameContainsKeywordsPredicate}.","lastModifiedDate":"2021-10-25"},{"lineNumber":78,"author":{"gitId":"Neha-5678"},"content":"     */","lastModifiedDate":"2021-10-25"},{"lineNumber":79,"author":{"gitId":"Neha-5678"},"content":"    private TaskNameContainsKeywordsPredicate preparePredicate(String userInput) {","lastModifiedDate":"2021-10-25"},{"lineNumber":80,"author":{"gitId":"Neha-5678"},"content":"        return new TaskNameContainsKeywordsPredicate(Arrays.asList(userInput.split(\"\\\\s+\")));","lastModifiedDate":"2021-10-25"},{"lineNumber":81,"author":{"gitId":"Neha-5678"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":82,"author":{"gitId":"Neha-5678"},"content":"}","lastModifiedDate":"2021-10-25"}],"authorContributionMap":{"Neha-5678":82}},{"path":"src/test/java/seedu/address/logic/commands/tasks/ListTaskCommandTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Neha-5678"},"content":"package seedu.address.logic.commands.tasks;","lastModifiedDate":"2021-10-26"},{"lineNumber":2,"author":{"gitId":"Neha-5678"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":3,"author":{"gitId":"Neha-5678"},"content":"import static seedu.address.logic.commands.CommandTestUtil.assertCommandSuccess;","lastModifiedDate":"2021-10-26"},{"lineNumber":4,"author":{"gitId":"Neha-5678"},"content":"import static seedu.address.logic.commands.CommandTestUtil.showTaskAtIndex;","lastModifiedDate":"2021-10-26"},{"lineNumber":5,"author":{"gitId":"Neha-5678"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_TASK;","lastModifiedDate":"2021-10-26"},{"lineNumber":6,"author":{"gitId":"Neha-5678"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2021-10-26"},{"lineNumber":7,"author":{"gitId":"Neha-5678"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":8,"author":{"gitId":"Neha-5678"},"content":"import org.junit.jupiter.api.BeforeEach;","lastModifiedDate":"2021-10-26"},{"lineNumber":9,"author":{"gitId":"Neha-5678"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-26"},{"lineNumber":10,"author":{"gitId":"Neha-5678"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":11,"author":{"gitId":"Neha-5678"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-10-26"},{"lineNumber":12,"author":{"gitId":"Neha-5678"},"content":"import seedu.address.model.ModelManager;","lastModifiedDate":"2021-10-26"},{"lineNumber":13,"author":{"gitId":"Neha-5678"},"content":"import seedu.address.model.UserPrefs;","lastModifiedDate":"2021-10-26"},{"lineNumber":14,"author":{"gitId":"Neha-5678"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":15,"author":{"gitId":"Neha-5678"},"content":"/**","lastModifiedDate":"2021-10-26"},{"lineNumber":16,"author":{"gitId":"Neha-5678"},"content":" * Contains integration tests (interaction with the Model) and unit tests for ListTaskCommand.","lastModifiedDate":"2021-10-26"},{"lineNumber":17,"author":{"gitId":"Neha-5678"},"content":" */","lastModifiedDate":"2021-10-26"},{"lineNumber":18,"author":{"gitId":"Neha-5678"},"content":"public class ListTaskCommandTest {","lastModifiedDate":"2021-10-26"},{"lineNumber":19,"author":{"gitId":"Neha-5678"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":20,"author":{"gitId":"Neha-5678"},"content":"    private Model model;","lastModifiedDate":"2021-10-26"},{"lineNumber":21,"author":{"gitId":"Neha-5678"},"content":"    private Model expectedModel;","lastModifiedDate":"2021-10-26"},{"lineNumber":22,"author":{"gitId":"Neha-5678"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":23,"author":{"gitId":"Neha-5678"},"content":"    @BeforeEach","lastModifiedDate":"2021-10-26"},{"lineNumber":24,"author":{"gitId":"Neha-5678"},"content":"    public void setUp() {","lastModifiedDate":"2021-10-26"},{"lineNumber":25,"author":{"gitId":"Neha-5678"},"content":"        model \u003d new ModelManager(getTypicalAddressBook(), new UserPrefs());","lastModifiedDate":"2021-10-26"},{"lineNumber":26,"author":{"gitId":"Neha-5678"},"content":"        expectedModel \u003d new ModelManager(model.getAddressBook(), new UserPrefs());","lastModifiedDate":"2021-10-26"},{"lineNumber":27,"author":{"gitId":"Neha-5678"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":28,"author":{"gitId":"Neha-5678"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":29,"author":{"gitId":"Neha-5678"},"content":"    @Test","lastModifiedDate":"2021-10-26"},{"lineNumber":30,"author":{"gitId":"Neha-5678"},"content":"    public void execute_listIsNotFiltered_showsSameList() {","lastModifiedDate":"2021-10-26"},{"lineNumber":31,"author":{"gitId":"Neha-5678"},"content":"        assertCommandSuccess(new ListTaskCommand(), model, ListTaskCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2021-10-26"},{"lineNumber":32,"author":{"gitId":"Neha-5678"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":33,"author":{"gitId":"Neha-5678"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":34,"author":{"gitId":"Neha-5678"},"content":"    @Test","lastModifiedDate":"2021-10-26"},{"lineNumber":35,"author":{"gitId":"Neha-5678"},"content":"    public void execute_listIsFiltered_showsEverything() {","lastModifiedDate":"2021-10-26"},{"lineNumber":36,"author":{"gitId":"Neha-5678"},"content":"        showTaskAtIndex(model, INDEX_FIRST_TASK);","lastModifiedDate":"2021-10-26"},{"lineNumber":37,"author":{"gitId":"Neha-5678"},"content":"        assertCommandSuccess(new ListTaskCommand(), model, ListTaskCommand.MESSAGE_SUCCESS, expectedModel);","lastModifiedDate":"2021-10-26"},{"lineNumber":38,"author":{"gitId":"Neha-5678"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":39,"author":{"gitId":"Neha-5678"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":40,"author":{"gitId":"Neha-5678"},"content":"}","lastModifiedDate":"2021-10-26"}],"authorContributionMap":{"Neha-5678":40}},{"path":"src/test/java/seedu/address/logic/parser/AddPersonCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-06-15"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-06-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_ADDRESS_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_EMAIL_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_NAME_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_PHONE_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_TAG_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PREAMBLE_NON_EMPTY;","lastModifiedDate":"2017-12-23"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PREAMBLE_WHITESPACE;","lastModifiedDate":"2017-12-23"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_FRIEND;","lastModifiedDate":"2017-07-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_FRIEND;","lastModifiedDate":"2017-07-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2017-07-06"},{"lineNumber":28,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2017-07-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.AMY;","lastModifiedDate":"2018-07-25"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.BOB;","lastModifiedDate":"2018-07-25"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":34,"author":{"gitId":"tanhuakun"},"content":"import seedu.address.logic.commands.persons.AddPersonCommand;","lastModifiedDate":"2021-10-03"},{"lineNumber":35,"author":{"gitId":"tanhuakun"},"content":"import seedu.address.logic.parser.persons.AddPersonCommandParser;","lastModifiedDate":"2021-10-03"},{"lineNumber":36,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2017-06-15"},{"lineNumber":37,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-06-15"},{"lineNumber":38,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-06-15"},{"lineNumber":39,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-06-15"},{"lineNumber":40,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-06-15"},{"lineNumber":41,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-06-15"},{"lineNumber":42,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-06-15"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":44,"author":{"gitId":"tanhuakun"},"content":"public class AddPersonCommandParserTest {","lastModifiedDate":"2021-10-03"},{"lineNumber":45,"author":{"gitId":"tanhuakun"},"content":"    private AddPersonCommandParser parser \u003d new AddPersonCommandParser();","lastModifiedDate":"2021-10-03"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public void parse_allFieldsPresent_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        Person expectedPerson \u003d new PersonBuilder(BOB).withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2018-07-25"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        // whitespace only preamble","lastModifiedDate":"2017-12-23"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, PREAMBLE_WHITESPACE + NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":53,"author":{"gitId":"tanhuakun"},"content":"                + ADDRESS_DESC_BOB + TAG_DESC_FRIEND, new AddPersonCommand(expectedPerson));","lastModifiedDate":"2021-10-03"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        // multiple names - last name accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":56,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, NAME_DESC_AMY + NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":57,"author":{"gitId":"tanhuakun"},"content":"                + ADDRESS_DESC_BOB + TAG_DESC_FRIEND, new AddPersonCommand(expectedPerson));","lastModifiedDate":"2021-10-03"},{"lineNumber":58,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        // multiple phones - last phone accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + PHONE_DESC_AMY + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":61,"author":{"gitId":"tanhuakun"},"content":"                + ADDRESS_DESC_BOB + TAG_DESC_FRIEND, new AddPersonCommand(expectedPerson));","lastModifiedDate":"2021-10-03"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        // multiple emails - last email accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_AMY + EMAIL_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":65,"author":{"gitId":"tanhuakun"},"content":"                + ADDRESS_DESC_BOB + TAG_DESC_FRIEND, new AddPersonCommand(expectedPerson));","lastModifiedDate":"2021-10-03"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        // multiple addresses - last address accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_AMY","lastModifiedDate":"2017-12-23"},{"lineNumber":69,"author":{"gitId":"tanhuakun"},"content":"                + ADDRESS_DESC_BOB + TAG_DESC_FRIEND, new AddPersonCommand(expectedPerson));","lastModifiedDate":"2021-10-03"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        // multiple tags - all accepted","lastModifiedDate":"2017-06-15"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        Person expectedPersonMultipleTags \u003d new PersonBuilder(BOB).withTags(VALID_TAG_FRIEND, VALID_TAG_HUSBAND)","lastModifiedDate":"2018-07-25"},{"lineNumber":73,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-07-25"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":75,"author":{"gitId":"tanhuakun"},"content":"                + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, new AddPersonCommand(expectedPersonMultipleTags));","lastModifiedDate":"2021-10-03"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    public void parse_optionalFieldsMissing_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        // zero tags","lastModifiedDate":"2017-06-15"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        Person expectedPerson \u003d new PersonBuilder(AMY).withTags().build();","lastModifiedDate":"2018-07-25"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, NAME_DESC_AMY + PHONE_DESC_AMY + EMAIL_DESC_AMY + ADDRESS_DESC_AMY,","lastModifiedDate":"2017-12-23"},{"lineNumber":83,"author":{"gitId":"tanhuakun"},"content":"                new AddPersonCommand(expectedPerson));","lastModifiedDate":"2021-10-03"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    public void parse_compulsoryFieldMissing_failure() {","lastModifiedDate":"2017-06-15"},{"lineNumber":88,"author":{"gitId":"tanhuakun"},"content":"        String expectedMessage \u003d String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddPersonCommand.MESSAGE_USAGE);","lastModifiedDate":"2021-10-03"},{"lineNumber":89,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        // missing name prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, VALID_NAME_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB,","lastModifiedDate":"2017-12-23"},{"lineNumber":92,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        // missing phone prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":95,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + VALID_PHONE_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB,","lastModifiedDate":"2017-12-23"},{"lineNumber":96,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":97,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        // missing email prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + VALID_EMAIL_BOB + ADDRESS_DESC_BOB,","lastModifiedDate":"2017-12-23"},{"lineNumber":100,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        // missing address prefix","lastModifiedDate":"2017-06-15"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + VALID_ADDRESS_BOB,","lastModifiedDate":"2017-12-23"},{"lineNumber":104,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        // all prefixes missing","lastModifiedDate":"2017-06-15"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, VALID_NAME_BOB + VALID_PHONE_BOB + VALID_EMAIL_BOB + VALID_ADDRESS_BOB,","lastModifiedDate":"2017-12-23"},{"lineNumber":108,"author":{"gitId":"-"},"content":"                expectedMessage);","lastModifiedDate":"2017-12-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":110,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-15"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2017-06-15"},{"lineNumber":113,"author":{"gitId":"-"},"content":"        // invalid name","lastModifiedDate":"2017-06-15"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, INVALID_NAME_DESC + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":115,"author":{"gitId":"-"},"content":"                + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        // invalid phone","lastModifiedDate":"2017-06-15"},{"lineNumber":118,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + INVALID_PHONE_DESC + EMAIL_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":119,"author":{"gitId":"-"},"content":"                + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":120,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":121,"author":{"gitId":"-"},"content":"        // invalid email","lastModifiedDate":"2017-06-15"},{"lineNumber":122,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + INVALID_EMAIL_DESC + ADDRESS_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":123,"author":{"gitId":"-"},"content":"                + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, Email.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        // invalid address","lastModifiedDate":"2017-06-15"},{"lineNumber":126,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + INVALID_ADDRESS_DESC","lastModifiedDate":"2017-12-23"},{"lineNumber":127,"author":{"gitId":"-"},"content":"                + TAG_DESC_HUSBAND + TAG_DESC_FRIEND, Address.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":128,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        // invalid tag","lastModifiedDate":"2017-06-15"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB + ADDRESS_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":131,"author":{"gitId":"-"},"content":"                + INVALID_TAG_DESC + VALID_TAG_FRIEND, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-15"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        // two invalid values, only first invalid value reported","lastModifiedDate":"2017-06-15"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, INVALID_NAME_DESC + PHONE_DESC_BOB + EMAIL_DESC_BOB + INVALID_ADDRESS_DESC,","lastModifiedDate":"2017-12-23"},{"lineNumber":135,"author":{"gitId":"-"},"content":"                Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-12-23"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        // non-empty preamble","lastModifiedDate":"2017-12-23"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, PREAMBLE_NON_EMPTY + NAME_DESC_BOB + PHONE_DESC_BOB + EMAIL_DESC_BOB","lastModifiedDate":"2017-12-23"},{"lineNumber":139,"author":{"gitId":"-"},"content":"                + ADDRESS_DESC_BOB + TAG_DESC_HUSBAND + TAG_DESC_FRIEND,","lastModifiedDate":"2017-12-23"},{"lineNumber":140,"author":{"gitId":"tanhuakun"},"content":"                String.format(MESSAGE_INVALID_COMMAND_FORMAT, AddPersonCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-10-03"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-15"},{"lineNumber":142,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-15"}],"authorContributionMap":{"tanhuakun":13,"-":129}},{"path":"src/test/java/seedu/address/logic/parser/AddressBookParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-05-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-06-27"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_UNKNOWN_COMMAND;","lastModifiedDate":"2017-05-24"},{"lineNumber":7,"author":{"gitId":"tanhuakun"},"content":"import static seedu.address.logic.parser.persons.EditPersonCommandParser.MESSAGE_EDIT_PERSON_SUCCESS;","lastModifiedDate":"2021-10-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":9,"author":{"gitId":"kvihashini"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_GROUP;","lastModifiedDate":"2021-10-25"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-27"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2017-06-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ClearCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ExitCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.HelpCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.ListCommand;","lastModifiedDate":"2017-06-27"},{"lineNumber":22,"author":{"gitId":"kvihashini"},"content":"import seedu.address.logic.commands.groups.ViewGroupCommand;","lastModifiedDate":"2021-10-25"},{"lineNumber":23,"author":{"gitId":"tanhuakun"},"content":"import seedu.address.logic.commands.persons.AddPersonCommand;","lastModifiedDate":"2021-10-03"},{"lineNumber":24,"author":{"gitId":"tanhuakun"},"content":"import seedu.address.logic.commands.persons.DeletePersonCommand;","lastModifiedDate":"2021-10-03"},{"lineNumber":25,"author":{"gitId":"tanhuakun"},"content":"import seedu.address.logic.commands.persons.EditPersonCommand;","lastModifiedDate":"2021-10-03"},{"lineNumber":26,"author":{"gitId":"tanhuakun"},"content":"import seedu.address.logic.commands.persons.EditPersonCommand.EditPersonDescriptor;","lastModifiedDate":"2021-10-03"},{"lineNumber":27,"author":{"gitId":"tanhuakun"},"content":"import seedu.address.logic.commands.persons.FindPersonCommand;","lastModifiedDate":"2021-10-03"},{"lineNumber":28,"author":{"gitId":"kvihashini"},"content":"import seedu.address.logic.commands.persons.ViewPersonCommand;","lastModifiedDate":"2021-10-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-05-24"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-06-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2017-06-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2017-06-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonUtil;","lastModifiedDate":"2017-06-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":36,"author":{"gitId":"kvihashini"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"public class AddressBookParserTest {","lastModifiedDate":"2017-07-07"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    private final AddressBookParser parser \u003d new AddressBookParser();","lastModifiedDate":"2017-07-07"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-24"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public void parseCommand_add() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        Person person \u003d new PersonBuilder().build();","lastModifiedDate":"2017-06-27"},{"lineNumber":44,"author":{"gitId":"tanhuakun"},"content":"        AddPersonCommand command \u003d (AddPersonCommand) parser.parseCommand(PersonUtil.getAddCommand(person));","lastModifiedDate":"2021-10-03"},{"lineNumber":45,"author":{"gitId":"tanhuakun"},"content":"        assertEquals(new AddPersonCommand(person), command);","lastModifiedDate":"2021-10-03"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public void parseCommand_clear() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ClearCommand.COMMAND_WORD) instanceof ClearCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ClearCommand.COMMAND_WORD + \" 3\") instanceof ClearCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":53,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    public void parseCommand_delete() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":56,"author":{"gitId":"tanhuakun"},"content":"        DeletePersonCommand command \u003d (DeletePersonCommand) parser.parseCommand(CliSyntax.PERSON_COMMAND + \" \"","lastModifiedDate":"2021-11-05"},{"lineNumber":57,"author":{"gitId":"tanhuakun"},"content":"                + DeletePersonCommand.COMMAND_WORD + \" \" + INDEX_FIRST_PERSON.getOneBased());","lastModifiedDate":"2021-10-03"},{"lineNumber":58,"author":{"gitId":"tanhuakun"},"content":"        assertEquals(new DeletePersonCommand(INDEX_FIRST_PERSON), command);","lastModifiedDate":"2021-10-03"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":61,"author":{"gitId":"kvihashini"},"content":"    @Test","lastModifiedDate":"2021-10-05"},{"lineNumber":62,"author":{"gitId":"kvihashini"},"content":"    public void parseCommand_view() throws Exception {","lastModifiedDate":"2021-10-05"},{"lineNumber":63,"author":{"gitId":"tanhuakun"},"content":"        ViewPersonCommand command \u003d (ViewPersonCommand) parser.parseCommand(CliSyntax.PERSON_COMMAND + \" \"","lastModifiedDate":"2021-11-05"},{"lineNumber":64,"author":{"gitId":"kvihashini"},"content":"                + ViewPersonCommand.COMMAND_WORD + \" \" + INDEX_FIRST_PERSON.getOneBased());","lastModifiedDate":"2021-10-05"},{"lineNumber":65,"author":{"gitId":"tanhuakun"},"content":"        ViewGroupCommand groupCommand \u003d (ViewGroupCommand) parser.parseCommand(CliSyntax.GROUP_COMMAND + \" \"","lastModifiedDate":"2021-11-05"},{"lineNumber":66,"author":{"gitId":"kvihashini"},"content":"                + ViewGroupCommand.COMMAND_WORD + \" \" + INDEX_FIRST_GROUP.getOneBased());","lastModifiedDate":"2021-10-25"},{"lineNumber":67,"author":{"gitId":"kvihashini"},"content":"        assertEquals(new ViewPersonCommand(INDEX_FIRST_PERSON), command);","lastModifiedDate":"2021-10-05"},{"lineNumber":68,"author":{"gitId":"kvihashini"},"content":"        assertEquals(new ViewGroupCommand(INDEX_FIRST_GROUP), groupCommand);","lastModifiedDate":"2021-10-25"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":70,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public void parseCommand_edit() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        Person person \u003d new PersonBuilder().build();","lastModifiedDate":"2017-06-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder(person).build();","lastModifiedDate":"2017-06-27"},{"lineNumber":75,"author":{"gitId":"tanhuakun"},"content":"        EditPersonCommand command \u003d (EditPersonCommand) parser.parseCommand(CliSyntax.PERSON_COMMAND + \" \"","lastModifiedDate":"2021-11-05"},{"lineNumber":76,"author":{"gitId":"tanhuakun"},"content":"                + EditPersonCommand.COMMAND_WORD + \" \" + INDEX_FIRST_PERSON.getOneBased() + \" \"","lastModifiedDate":"2021-10-03"},{"lineNumber":77,"author":{"gitId":"tanhuakun"},"content":"                + PersonUtil.getEditPersonDescriptorDetails(descriptor));","lastModifiedDate":"2021-10-03"},{"lineNumber":78,"author":{"gitId":"tanhuakun"},"content":"        assertEquals(new EditPersonCommand(INDEX_FIRST_PERSON, descriptor, MESSAGE_EDIT_PERSON_SUCCESS), command);","lastModifiedDate":"2021-10-19"},{"lineNumber":79,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    public void parseCommand_exit() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":83,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ExitCommand.COMMAND_WORD) instanceof ExitCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ExitCommand.COMMAND_WORD + \" 3\") instanceof ExitCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    public void parseCommand_find() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        List\u003cString\u003e keywords \u003d Arrays.asList(\"foo\", \"bar\", \"baz\");","lastModifiedDate":"2017-06-12"},{"lineNumber":90,"author":{"gitId":"tanhuakun"},"content":"        FindPersonCommand command \u003d (FindPersonCommand) parser.parseCommand(CliSyntax.PERSON_COMMAND + \" \"","lastModifiedDate":"2021-11-05"},{"lineNumber":91,"author":{"gitId":"tanhuakun"},"content":"                + FindPersonCommand.COMMAND_WORD + \" \" + keywords.stream().collect(Collectors.joining(\" \")));","lastModifiedDate":"2021-10-03"},{"lineNumber":92,"author":{"gitId":"tanhuakun"},"content":"        assertEquals(new FindPersonCommand(new NameContainsKeywordsPredicate(keywords)), command);","lastModifiedDate":"2021-10-03"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    public void parseCommand_help() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(HelpCommand.COMMAND_WORD) instanceof HelpCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(HelpCommand.COMMAND_WORD + \" 3\") instanceof HelpCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":99,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":100,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    public void parseCommand_list() throws Exception {","lastModifiedDate":"2017-06-27"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ListCommand.COMMAND_WORD) instanceof ListCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        assertTrue(parser.parseCommand(ListCommand.COMMAND_WORD + \" 3\") instanceof ListCommand);","lastModifiedDate":"2017-06-27"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    public void parseCommand_unrecognisedInput_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, String.format(MESSAGE_INVALID_COMMAND_FORMAT, HelpCommand.MESSAGE_USAGE), ()","lastModifiedDate":"2019-03-23"},{"lineNumber":110,"author":{"gitId":"-"},"content":"            -\u003e parser.parseCommand(\"\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":111,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":112,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    public void parseCommand_unknownCommand_throwsParseException() {","lastModifiedDate":"2019-03-23"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        assertThrows(ParseException.class, MESSAGE_UNKNOWN_COMMAND, () -\u003e parser.parseCommand(\"unknownCommand\"));","lastModifiedDate":"2019-03-23"},{"lineNumber":116,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":117,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-24"}],"authorContributionMap":{"kvihashini":10,"tanhuakun":20,"-":87}},{"path":"src/test/java/seedu/address/logic/parser/CommandParserTestUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-07-06"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":5,"author":{"gitId":"tanhuakun"},"content":"import seedu.address.commons.core.Messages;","lastModifiedDate":"2021-11-02"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import seedu.address.logic.commands.Command;","lastModifiedDate":"2017-07-06"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2017-07-06"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":9,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-07-06"},{"lineNumber":10,"author":{"gitId":"-"},"content":" * Contains helper methods for testing command parsers.","lastModifiedDate":"2017-07-06"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-07-06"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class CommandParserTestUtil {","lastModifiedDate":"2017-07-06"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":14,"author":{"gitId":"tanhuakun"},"content":"    public static final String INVALID_COMMAND_INVALID_INDEX \u003d String.format(Messages.MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2021-11-02"},{"lineNumber":15,"author":{"gitId":"tanhuakun"},"content":"            Messages.MESSAGE_INVALID_INDEX_GIVEN);","lastModifiedDate":"2021-11-02"},{"lineNumber":16,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":17,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-06"},{"lineNumber":18,"author":{"gitId":"-"},"content":"     * Asserts that the parsing of {@code userInput} by {@code parser} is successful and the command created","lastModifiedDate":"2017-07-06"},{"lineNumber":19,"author":{"gitId":"-"},"content":"     * equals to {@code expectedCommand}.","lastModifiedDate":"2017-07-06"},{"lineNumber":20,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-06"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public static void assertParseSuccess(Parser parser, String userInput, Command expectedCommand) {","lastModifiedDate":"2017-08-15"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-08-15"},{"lineNumber":23,"author":{"gitId":"-"},"content":"            Command command \u003d parser.parse(userInput);","lastModifiedDate":"2017-07-06"},{"lineNumber":24,"author":{"gitId":"-"},"content":"            assertEquals(expectedCommand, command);","lastModifiedDate":"2017-07-06"},{"lineNumber":25,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2017-08-15"},{"lineNumber":26,"author":{"gitId":"-"},"content":"            throw new IllegalArgumentException(\"Invalid userInput.\", pe);","lastModifiedDate":"2017-08-15"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-08-15"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Asserts that the parsing of {@code userInput} by {@code parser} is unsuccessful and the error message","lastModifiedDate":"2017-07-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     * equals to {@code expectedMessage}.","lastModifiedDate":"2017-07-06"},{"lineNumber":33,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-06"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    public static void assertParseFailure(Parser parser, String userInput, String expectedMessage) {","lastModifiedDate":"2017-07-06"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2017-07-06"},{"lineNumber":36,"author":{"gitId":"-"},"content":"            parser.parse(userInput);","lastModifiedDate":"2017-07-06"},{"lineNumber":37,"author":{"gitId":"-"},"content":"            throw new AssertionError(\"The expected ParseException was not thrown.\");","lastModifiedDate":"2018-08-06"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        } catch (ParseException pe) {","lastModifiedDate":"2017-07-06"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            assertEquals(expectedMessage, pe.getMessage());","lastModifiedDate":"2017-07-06"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2017-07-06"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-06"},{"lineNumber":42,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-07-06"}],"authorContributionMap":{"tanhuakun":4,"-":38}},{"path":"src/test/java/seedu/address/logic/parser/DeletePersonCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-06-09"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-06-09"},{"lineNumber":4,"author":{"gitId":"tanhuakun"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_INDEX_GIVEN;","lastModifiedDate":"2021-11-02"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2017-07-06"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2017-07-06"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":11,"author":{"gitId":"tanhuakun"},"content":"import seedu.address.logic.commands.persons.DeletePersonCommand;","lastModifiedDate":"2021-10-03"},{"lineNumber":12,"author":{"gitId":"tanhuakun"},"content":"import seedu.address.logic.parser.persons.DeletePersonCommandParser;","lastModifiedDate":"2021-10-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-06-09"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * As we are only doing white-box testing, our test cases do not cover path variations","lastModifiedDate":"2017-06-09"},{"lineNumber":16,"author":{"gitId":"tanhuakun"},"content":" * outside of the DeletePersonCommand code. For example, inputs \"1\" and \"1 abc\" take the","lastModifiedDate":"2021-10-03"},{"lineNumber":17,"author":{"gitId":"tanhuakun"},"content":" * same path through the DeletePersonCommand, and therefore we test only one of them.","lastModifiedDate":"2021-10-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * The path variation for those two cases occur inside the ParserUtil, and","lastModifiedDate":"2017-06-09"},{"lineNumber":19,"author":{"gitId":"-"},"content":" * therefore should be covered by the ParserUtilTest.","lastModifiedDate":"2017-06-09"},{"lineNumber":20,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-06-09"},{"lineNumber":21,"author":{"gitId":"tanhuakun"},"content":"public class DeletePersonCommandParserTest {","lastModifiedDate":"2021-10-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":23,"author":{"gitId":"tanhuakun"},"content":"    private DeletePersonCommandParser parser \u003d new DeletePersonCommandParser();","lastModifiedDate":"2021-10-03"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-09"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public void parse_validArgs_returnsDeleteCommand() {","lastModifiedDate":"2017-08-15"},{"lineNumber":27,"author":{"gitId":"tanhuakun"},"content":"        assertParseSuccess(parser, \"1\", new DeletePersonCommand(INDEX_FIRST_PERSON));","lastModifiedDate":"2021-10-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-09"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-09"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-09"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public void parse_invalidArgs_throwsParseException() {","lastModifiedDate":"2017-08-15"},{"lineNumber":32,"author":{"gitId":"tanhuakun"},"content":"        assertParseFailure(parser, \"a\", String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2021-10-03"},{"lineNumber":33,"author":{"gitId":"tanhuakun"},"content":"                MESSAGE_INVALID_INDEX_GIVEN));","lastModifiedDate":"2021-11-02"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-09"},{"lineNumber":35,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-09"}],"authorContributionMap":{"tanhuakun":10,"-":25}},{"path":"src/test/java/seedu/address/logic/parser/EditPersonCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-05-04"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-05-04"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.ADDRESS_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.EMAIL_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_ADDRESS_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_EMAIL_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_NAME_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_PHONE_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_TAG_DESC;","lastModifiedDate":"2017-07-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.NAME_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PHONE_DESC_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_FRIEND;","lastModifiedDate":"2017-07-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TAG_DESC_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_AMY;","lastModifiedDate":"2017-07-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2017-07-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_FRIEND;","lastModifiedDate":"2017-07-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2017-07-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-05-04"},{"lineNumber":28,"author":{"gitId":"tanhuakun"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.INVALID_COMMAND_INVALID_INDEX;","lastModifiedDate":"2021-11-02"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2017-07-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2017-07-06"},{"lineNumber":31,"author":{"gitId":"tanhuakun"},"content":"import static seedu.address.logic.parser.persons.EditPersonCommandParser.MESSAGE_EDIT_PERSON_SUCCESS;","lastModifiedDate":"2021-10-19"},{"lineNumber":32,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_SECOND_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":34,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_THIRD_PERSON;","lastModifiedDate":"2017-08-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":36,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":38,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-05-25"},{"lineNumber":39,"author":{"gitId":"tanhuakun"},"content":"import seedu.address.logic.commands.persons.EditPersonCommand;","lastModifiedDate":"2021-10-03"},{"lineNumber":40,"author":{"gitId":"tanhuakun"},"content":"import seedu.address.logic.commands.persons.EditPersonCommand.EditPersonDescriptor;","lastModifiedDate":"2021-10-03"},{"lineNumber":41,"author":{"gitId":"tanhuakun"},"content":"import seedu.address.logic.parser.persons.EditPersonCommandParser;","lastModifiedDate":"2021-10-03"},{"lineNumber":42,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2017-05-04"},{"lineNumber":43,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-05-04"},{"lineNumber":44,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-05-04"},{"lineNumber":45,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-05-04"},{"lineNumber":46,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-05-04"},{"lineNumber":47,"author":{"gitId":"-"},"content":"import seedu.address.testutil.EditPersonDescriptorBuilder;","lastModifiedDate":"2017-05-04"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":49,"author":{"gitId":"tanhuakun"},"content":"public class EditPersonCommandParserTest {","lastModifiedDate":"2021-10-03"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    private static final String TAG_EMPTY \u003d \" \" + PREFIX_TAG;","lastModifiedDate":"2017-05-04"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    private static final String MESSAGE_INVALID_FORMAT \u003d","lastModifiedDate":"2017-05-04"},{"lineNumber":54,"author":{"gitId":"tanhuakun"},"content":"            String.format(MESSAGE_INVALID_COMMAND_FORMAT, EditPersonCommand.MESSAGE_USAGE);","lastModifiedDate":"2021-10-03"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":56,"author":{"gitId":"tanhuakun"},"content":"    private EditPersonCommandParser parser \u003d new EditPersonCommandParser();","lastModifiedDate":"2021-10-03"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public void parse_missingParts_failure() {","lastModifiedDate":"2017-05-04"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        // no index specified","lastModifiedDate":"2017-05-04"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, VALID_NAME_AMY, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2021-11-02"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        // no field specified","lastModifiedDate":"2017-05-04"},{"lineNumber":64,"author":{"gitId":"tanhuakun"},"content":"        assertParseFailure(parser, \"1\", EditPersonCommand.MESSAGE_NOT_EDITED);","lastModifiedDate":"2021-10-03"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        // no index and no field specified","lastModifiedDate":"2017-05-04"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2017-07-06"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    public void parse_invalidPreamble_failure() {","lastModifiedDate":"2017-06-06"},{"lineNumber":72,"author":{"gitId":"tanhuakun"},"content":"        // empty preamble","lastModifiedDate":"2021-11-02"},{"lineNumber":73,"author":{"gitId":"tanhuakun"},"content":"        assertParseFailure(parser, \"\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2021-11-02"},{"lineNumber":74,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        // negative index","lastModifiedDate":"2017-05-04"},{"lineNumber":76,"author":{"gitId":"tanhuakun"},"content":"        assertParseFailure(parser, \"-5\" + NAME_DESC_AMY, INVALID_COMMAND_INVALID_INDEX);","lastModifiedDate":"2021-11-02"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        // zero index","lastModifiedDate":"2017-06-06"},{"lineNumber":79,"author":{"gitId":"tanhuakun"},"content":"        assertParseFailure(parser, \"0\" + NAME_DESC_AMY, INVALID_COMMAND_INVALID_INDEX);","lastModifiedDate":"2021-11-02"},{"lineNumber":80,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-06"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        // invalid arguments being parsed as preamble","lastModifiedDate":"2017-06-06"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1 some random string\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2021-11-02"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-06"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        // invalid prefix being parsed as preamble","lastModifiedDate":"2017-06-06"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1 i/ string\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2021-11-02"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2017-05-04"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_NAME_DESC, Name.MESSAGE_CONSTRAINTS); // invalid name","lastModifiedDate":"2018-09-22"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_PHONE_DESC, Phone.MESSAGE_CONSTRAINTS); // invalid phone","lastModifiedDate":"2018-09-22"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_EMAIL_DESC, Email.MESSAGE_CONSTRAINTS); // invalid email","lastModifiedDate":"2018-09-22"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_ADDRESS_DESC, Address.MESSAGE_CONSTRAINTS); // invalid address","lastModifiedDate":"2018-09-22"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_TAG_DESC, Tag.MESSAGE_CONSTRAINTS); // invalid tag","lastModifiedDate":"2018-09-22"},{"lineNumber":95,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":96,"author":{"gitId":"-"},"content":"        // invalid phone followed by valid email","lastModifiedDate":"2017-05-04"},{"lineNumber":97,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_PHONE_DESC + EMAIL_DESC_AMY, Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":98,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        // valid phone followed by invalid phone. The test case for invalid phone followed by valid phone","lastModifiedDate":"2017-05-04"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        // is tested at {@code parse_invalidValueFollowedByValidValue_success()}","lastModifiedDate":"2017-05-04"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + PHONE_DESC_BOB + INVALID_PHONE_DESC, Phone.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":102,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        // while parsing {@code PREFIX_TAG} alone will reset the tags of the {@code Person} being edited,","lastModifiedDate":"2017-05-04"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        // parsing it together with a valid tag results in error","lastModifiedDate":"2017-05-04"},{"lineNumber":105,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + TAG_DESC_FRIEND + TAG_DESC_HUSBAND + TAG_EMPTY, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + TAG_DESC_FRIEND + TAG_EMPTY + TAG_DESC_HUSBAND, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":107,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + TAG_EMPTY + TAG_DESC_FRIEND + TAG_DESC_HUSBAND, Tag.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":108,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        // multiple invalid values, but only the first invalid value is captured","lastModifiedDate":"2017-05-04"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        assertParseFailure(parser, \"1\" + INVALID_NAME_DESC + INVALID_EMAIL_DESC + VALID_ADDRESS_AMY + VALID_PHONE_AMY,","lastModifiedDate":"2017-07-06"},{"lineNumber":111,"author":{"gitId":"-"},"content":"                Name.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2018-09-22"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    public void parse_allFieldsSpecified_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":116,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_SECOND_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + PHONE_DESC_BOB + TAG_DESC_HUSBAND","lastModifiedDate":"2017-06-06"},{"lineNumber":118,"author":{"gitId":"-"},"content":"                + EMAIL_DESC_AMY + ADDRESS_DESC_AMY + NAME_DESC_AMY + TAG_DESC_FRIEND;","lastModifiedDate":"2017-06-06"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_AMY)","lastModifiedDate":"2017-05-04"},{"lineNumber":121,"author":{"gitId":"-"},"content":"                .withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_AMY).withAddress(VALID_ADDRESS_AMY)","lastModifiedDate":"2017-05-04"},{"lineNumber":122,"author":{"gitId":"-"},"content":"                .withTags(VALID_TAG_HUSBAND, VALID_TAG_FRIEND).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":123,"author":{"gitId":"tanhuakun"},"content":"        EditPersonCommand expectedCommand \u003d new EditPersonCommand(targetIndex, descriptor, MESSAGE_EDIT_PERSON_SUCCESS);","lastModifiedDate":"2021-10-19"},{"lineNumber":124,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":127,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    public void parse_someFieldsSpecified_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_FIRST_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + PHONE_DESC_BOB + EMAIL_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":133,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2017-05-04"},{"lineNumber":134,"author":{"gitId":"-"},"content":"                .withEmail(VALID_EMAIL_AMY).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":135,"author":{"gitId":"tanhuakun"},"content":"        EditPersonCommand expectedCommand \u003d new EditPersonCommand(targetIndex, descriptor, MESSAGE_EDIT_PERSON_SUCCESS);","lastModifiedDate":"2021-10-19"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":137,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":139,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    public void parse_oneFieldSpecified_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":142,"author":{"gitId":"-"},"content":"        // name","lastModifiedDate":"2017-05-04"},{"lineNumber":143,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_THIRD_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + NAME_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withName(VALID_NAME_AMY).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":146,"author":{"gitId":"tanhuakun"},"content":"        EditPersonCommand expectedCommand \u003d new EditPersonCommand(targetIndex, descriptor, MESSAGE_EDIT_PERSON_SUCCESS);","lastModifiedDate":"2021-10-19"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":148,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        // phone","lastModifiedDate":"2017-05-04"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + PHONE_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":151,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withPhone(VALID_PHONE_AMY).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":152,"author":{"gitId":"tanhuakun"},"content":"        expectedCommand \u003d new EditPersonCommand(targetIndex, descriptor, MESSAGE_EDIT_PERSON_SUCCESS);","lastModifiedDate":"2021-10-19"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":154,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":155,"author":{"gitId":"-"},"content":"        // email","lastModifiedDate":"2017-05-04"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + EMAIL_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withEmail(VALID_EMAIL_AMY).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":158,"author":{"gitId":"tanhuakun"},"content":"        expectedCommand \u003d new EditPersonCommand(targetIndex, descriptor, MESSAGE_EDIT_PERSON_SUCCESS);","lastModifiedDate":"2021-10-19"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":160,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":161,"author":{"gitId":"-"},"content":"        // address","lastModifiedDate":"2017-05-04"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + ADDRESS_DESC_AMY;","lastModifiedDate":"2017-05-25"},{"lineNumber":163,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withAddress(VALID_ADDRESS_AMY).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":164,"author":{"gitId":"tanhuakun"},"content":"        expectedCommand \u003d new EditPersonCommand(targetIndex, descriptor, MESSAGE_EDIT_PERSON_SUCCESS);","lastModifiedDate":"2021-10-19"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":167,"author":{"gitId":"-"},"content":"        // tags","lastModifiedDate":"2017-05-04"},{"lineNumber":168,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + TAG_DESC_FRIEND;","lastModifiedDate":"2017-05-25"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":170,"author":{"gitId":"tanhuakun"},"content":"        expectedCommand \u003d new EditPersonCommand(targetIndex, descriptor, MESSAGE_EDIT_PERSON_SUCCESS);","lastModifiedDate":"2021-10-19"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":173,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    public void parse_multipleRepeatedFields_acceptsLast() {","lastModifiedDate":"2017-08-15"},{"lineNumber":176,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_FIRST_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":177,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + PHONE_DESC_AMY + ADDRESS_DESC_AMY + EMAIL_DESC_AMY","lastModifiedDate":"2017-05-25"},{"lineNumber":178,"author":{"gitId":"-"},"content":"                + TAG_DESC_FRIEND + PHONE_DESC_AMY + ADDRESS_DESC_AMY + EMAIL_DESC_AMY + TAG_DESC_FRIEND","lastModifiedDate":"2017-05-25"},{"lineNumber":179,"author":{"gitId":"-"},"content":"                + PHONE_DESC_BOB + ADDRESS_DESC_BOB + EMAIL_DESC_BOB + TAG_DESC_HUSBAND;","lastModifiedDate":"2017-05-25"},{"lineNumber":180,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":181,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2017-05-04"},{"lineNumber":182,"author":{"gitId":"-"},"content":"                .withEmail(VALID_EMAIL_BOB).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_FRIEND, VALID_TAG_HUSBAND)","lastModifiedDate":"2017-05-04"},{"lineNumber":183,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2017-05-04"},{"lineNumber":184,"author":{"gitId":"tanhuakun"},"content":"        EditPersonCommand expectedCommand \u003d new EditPersonCommand(targetIndex, descriptor, MESSAGE_EDIT_PERSON_SUCCESS);","lastModifiedDate":"2021-10-19"},{"lineNumber":185,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":186,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":187,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":188,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":189,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":190,"author":{"gitId":"-"},"content":"    public void parse_invalidValueFollowedByValidValue_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":191,"author":{"gitId":"-"},"content":"        // no other valid values specified","lastModifiedDate":"2017-05-04"},{"lineNumber":192,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_FIRST_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":193,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + INVALID_PHONE_DESC + PHONE_DESC_BOB;","lastModifiedDate":"2017-05-25"},{"lineNumber":194,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":195,"author":{"gitId":"tanhuakun"},"content":"        EditPersonCommand expectedCommand \u003d new EditPersonCommand(targetIndex, descriptor, MESSAGE_EDIT_PERSON_SUCCESS);","lastModifiedDate":"2021-10-19"},{"lineNumber":196,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":197,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":198,"author":{"gitId":"-"},"content":"        // other valid values specified","lastModifiedDate":"2017-05-04"},{"lineNumber":199,"author":{"gitId":"-"},"content":"        userInput \u003d targetIndex.getOneBased() + EMAIL_DESC_BOB + INVALID_PHONE_DESC + ADDRESS_DESC_BOB","lastModifiedDate":"2017-05-25"},{"lineNumber":200,"author":{"gitId":"-"},"content":"                + PHONE_DESC_BOB;","lastModifiedDate":"2017-05-25"},{"lineNumber":201,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptorBuilder().withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_BOB)","lastModifiedDate":"2017-05-04"},{"lineNumber":202,"author":{"gitId":"-"},"content":"                .withAddress(VALID_ADDRESS_BOB).build();","lastModifiedDate":"2017-05-04"},{"lineNumber":203,"author":{"gitId":"tanhuakun"},"content":"        expectedCommand \u003d new EditPersonCommand(targetIndex, descriptor, MESSAGE_EDIT_PERSON_SUCCESS);","lastModifiedDate":"2021-10-19"},{"lineNumber":204,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":205,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":206,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":207,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-04"},{"lineNumber":208,"author":{"gitId":"-"},"content":"    public void parse_resetTags_success() {","lastModifiedDate":"2017-08-15"},{"lineNumber":209,"author":{"gitId":"-"},"content":"        Index targetIndex \u003d INDEX_THIRD_PERSON;","lastModifiedDate":"2017-05-25"},{"lineNumber":210,"author":{"gitId":"-"},"content":"        String userInput \u003d targetIndex.getOneBased() + TAG_EMPTY;","lastModifiedDate":"2017-05-25"},{"lineNumber":211,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":212,"author":{"gitId":"-"},"content":"        EditPersonDescriptor descriptor \u003d new EditPersonDescriptorBuilder().withTags().build();","lastModifiedDate":"2017-05-04"},{"lineNumber":213,"author":{"gitId":"tanhuakun"},"content":"        EditPersonCommand expectedCommand \u003d new EditPersonCommand(targetIndex, descriptor, MESSAGE_EDIT_PERSON_SUCCESS);","lastModifiedDate":"2021-10-19"},{"lineNumber":214,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-04"},{"lineNumber":215,"author":{"gitId":"-"},"content":"        assertParseSuccess(parser, userInput, expectedCommand);","lastModifiedDate":"2017-07-06"},{"lineNumber":216,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-04"},{"lineNumber":217,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-04"}],"authorContributionMap":{"tanhuakun":25,"-":192}},{"path":"src/test/java/seedu/address/logic/parser/FindPersonCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2017-06-27"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2017-06-27"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2017-07-06"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2017-07-06"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-06-27"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":11,"author":{"gitId":"tanhuakun"},"content":"import seedu.address.logic.commands.persons.FindPersonCommand;","lastModifiedDate":"2021-10-03"},{"lineNumber":12,"author":{"gitId":"tanhuakun"},"content":"import seedu.address.logic.parser.persons.FindPersonCommandParser;","lastModifiedDate":"2021-10-03"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":15,"author":{"gitId":"tanhuakun"},"content":"public class FindPersonCommandParserTest {","lastModifiedDate":"2021-10-03"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":17,"author":{"gitId":"tanhuakun"},"content":"    private FindPersonCommandParser parser \u003d new FindPersonCommandParser();","lastModifiedDate":"2021-10-03"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public void parse_emptyArg_throwsParseException() {","lastModifiedDate":"2017-06-27"},{"lineNumber":21,"author":{"gitId":"tanhuakun"},"content":"        assertParseFailure(parser, \"     \", String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2021-10-03"},{"lineNumber":22,"author":{"gitId":"tanhuakun"},"content":"                FindPersonCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-10-03"},{"lineNumber":23,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-06-27"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public void parse_validArgs_returnsFindCommand() {","lastModifiedDate":"2017-08-15"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        // no leading and trailing whitespaces","lastModifiedDate":"2017-06-27"},{"lineNumber":28,"author":{"gitId":"tanhuakun"},"content":"        FindPersonCommand expectedFindPersonCommand \u003d","lastModifiedDate":"2021-10-03"},{"lineNumber":29,"author":{"gitId":"tanhuakun"},"content":"                new FindPersonCommand(new NameContainsKeywordsPredicate(Arrays.asList(\"Alice\", \"Bob\")));","lastModifiedDate":"2021-10-03"},{"lineNumber":30,"author":{"gitId":"tanhuakun"},"content":"        assertParseSuccess(parser, \"Alice Bob\", expectedFindPersonCommand);","lastModifiedDate":"2021-10-03"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        // multiple whitespaces between keywords","lastModifiedDate":"2017-06-27"},{"lineNumber":33,"author":{"gitId":"tanhuakun"},"content":"        assertParseSuccess(parser, \" \\n Alice \\n \\t Bob  \\t\", expectedFindPersonCommand);","lastModifiedDate":"2021-10-03"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-06-27"}],"authorContributionMap":{"tanhuakun":10,"-":26}},{"path":"src/test/java/seedu/address/logic/parser/ViewPersonCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"kvihashini"},"content":"package seedu.address.logic.parser;","lastModifiedDate":"2021-10-05"},{"lineNumber":2,"author":{"gitId":"kvihashini"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":3,"author":{"gitId":"kvihashini"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-10-05"},{"lineNumber":4,"author":{"gitId":"tanhuakun"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.INVALID_COMMAND_INVALID_INDEX;","lastModifiedDate":"2021-11-02"},{"lineNumber":5,"author":{"gitId":"kvihashini"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2021-10-05"},{"lineNumber":6,"author":{"gitId":"kvihashini"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2021-10-05"},{"lineNumber":7,"author":{"gitId":"kvihashini"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2021-10-05"},{"lineNumber":8,"author":{"gitId":"kvihashini"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":9,"author":{"gitId":"kvihashini"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-05"},{"lineNumber":10,"author":{"gitId":"kvihashini"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":11,"author":{"gitId":"kvihashini"},"content":"import seedu.address.logic.commands.persons.ViewPersonCommand;","lastModifiedDate":"2021-10-05"},{"lineNumber":12,"author":{"gitId":"kvihashini"},"content":"import seedu.address.logic.parser.persons.ViewPersonCommandParser;","lastModifiedDate":"2021-10-05"},{"lineNumber":13,"author":{"gitId":"kvihashini"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":14,"author":{"gitId":"kvihashini"},"content":"/**","lastModifiedDate":"2021-10-05"},{"lineNumber":15,"author":{"gitId":"kvihashini"},"content":" * As we are only doing white-box testing, our test cases do not cover path variations","lastModifiedDate":"2021-10-05"},{"lineNumber":16,"author":{"gitId":"kvihashini"},"content":" * outside of the ViewPersonCommand code. For example, inputs \"1\" and \"1 abc\" take the","lastModifiedDate":"2021-10-05"},{"lineNumber":17,"author":{"gitId":"kvihashini"},"content":" * same path through the ViewPersonCommand, and therefore we test only one of them.","lastModifiedDate":"2021-10-05"},{"lineNumber":18,"author":{"gitId":"kvihashini"},"content":" * The path variation for those two cases occur inside the ParserUtil, and","lastModifiedDate":"2021-10-05"},{"lineNumber":19,"author":{"gitId":"kvihashini"},"content":" * therefore should be covered by the ParserUtilTest.","lastModifiedDate":"2021-10-05"},{"lineNumber":20,"author":{"gitId":"kvihashini"},"content":" */","lastModifiedDate":"2021-10-05"},{"lineNumber":21,"author":{"gitId":"kvihashini"},"content":"public class ViewPersonCommandParserTest {","lastModifiedDate":"2021-10-05"},{"lineNumber":22,"author":{"gitId":"kvihashini"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":23,"author":{"gitId":"kvihashini"},"content":"    private ViewPersonCommandParser parser \u003d new ViewPersonCommandParser();","lastModifiedDate":"2021-10-05"},{"lineNumber":24,"author":{"gitId":"kvihashini"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":25,"author":{"gitId":"kvihashini"},"content":"    @Test","lastModifiedDate":"2021-10-05"},{"lineNumber":26,"author":{"gitId":"kvihashini"},"content":"    public void parse_validArgs_returnsViewCommand() {","lastModifiedDate":"2021-10-05"},{"lineNumber":27,"author":{"gitId":"kvihashini"},"content":"        assertParseSuccess(parser, \"1\", new ViewPersonCommand(INDEX_FIRST_PERSON));","lastModifiedDate":"2021-10-05"},{"lineNumber":28,"author":{"gitId":"kvihashini"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":29,"author":{"gitId":"kvihashini"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":30,"author":{"gitId":"kvihashini"},"content":"    @Test","lastModifiedDate":"2021-10-05"},{"lineNumber":31,"author":{"gitId":"kvihashini"},"content":"    public void parse_invalidArgs_throwsParseException() {","lastModifiedDate":"2021-10-05"},{"lineNumber":32,"author":{"gitId":"tanhuakun"},"content":"        // empty","lastModifiedDate":"2021-11-02"},{"lineNumber":33,"author":{"gitId":"tanhuakun"},"content":"        assertParseFailure(parser, \"\", String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2021-11-02"},{"lineNumber":34,"author":{"gitId":"kvihashini"},"content":"                ViewPersonCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-10-05"},{"lineNumber":35,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":36,"author":{"gitId":"tanhuakun"},"content":"        // invalid index","lastModifiedDate":"2021-11-02"},{"lineNumber":37,"author":{"gitId":"tanhuakun"},"content":"        assertParseFailure(parser, \"a\", INVALID_COMMAND_INVALID_INDEX);","lastModifiedDate":"2021-11-02"},{"lineNumber":38,"author":{"gitId":"kvihashini"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":39,"author":{"gitId":"kvihashini"},"content":"}","lastModifiedDate":"2021-10-05"}],"authorContributionMap":{"kvihashini":33,"tanhuakun":6}},{"path":"src/test/java/seedu/address/logic/parser/groups/AddGroupCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"tanhuakun"},"content":"package seedu.address.logic.parser.groups;","lastModifiedDate":"2021-10-25"},{"lineNumber":2,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":3,"author":{"gitId":"tanhuakun"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-10-25"},{"lineNumber":4,"author":{"gitId":"tanhuakun"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_INDEX_GIVEN;","lastModifiedDate":"2021-11-02"},{"lineNumber":5,"author":{"gitId":"tanhuakun"},"content":"import static seedu.address.logic.commands.CommandTestUtil.GROUP_DESC_TUTORIAL;","lastModifiedDate":"2021-10-25"},{"lineNumber":6,"author":{"gitId":"tanhuakun"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_GROUP_NAME_DESC;","lastModifiedDate":"2021-10-25"},{"lineNumber":7,"author":{"gitId":"tanhuakun"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_GROUP_TUTORIAL;","lastModifiedDate":"2021-10-25"},{"lineNumber":8,"author":{"gitId":"tanhuakun"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2021-10-25"},{"lineNumber":9,"author":{"gitId":"tanhuakun"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2021-10-25"},{"lineNumber":10,"author":{"gitId":"tanhuakun"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2021-10-25"},{"lineNumber":11,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":12,"author":{"gitId":"tanhuakun"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-25"},{"lineNumber":13,"author":{"gitId":"tanhuakun"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-10-25"},{"lineNumber":14,"author":{"gitId":"tanhuakun"},"content":"import java.util.List;","lastModifiedDate":"2021-10-25"},{"lineNumber":15,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":16,"author":{"gitId":"tanhuakun"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-25"},{"lineNumber":17,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":18,"author":{"gitId":"tanhuakun"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-10-25"},{"lineNumber":19,"author":{"gitId":"tanhuakun"},"content":"import seedu.address.logic.commands.groups.AddGroupCommand;","lastModifiedDate":"2021-10-25"},{"lineNumber":20,"author":{"gitId":"tanhuakun"},"content":"import seedu.address.model.group.Group;","lastModifiedDate":"2021-10-25"},{"lineNumber":21,"author":{"gitId":"tanhuakun"},"content":"import seedu.address.model.group.GroupName;","lastModifiedDate":"2021-10-25"},{"lineNumber":22,"author":{"gitId":"tanhuakun"},"content":"import seedu.address.testutil.GroupBuilder;","lastModifiedDate":"2021-10-25"},{"lineNumber":23,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":24,"author":{"gitId":"tanhuakun"},"content":"public class AddGroupCommandParserTest {","lastModifiedDate":"2021-10-25"},{"lineNumber":25,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":26,"author":{"gitId":"tanhuakun"},"content":"    private AddGroupCommandParser parser \u003d new AddGroupCommandParser();","lastModifiedDate":"2021-10-25"},{"lineNumber":27,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":28,"author":{"gitId":"tanhuakun"},"content":"    @Test","lastModifiedDate":"2021-10-25"},{"lineNumber":29,"author":{"gitId":"tanhuakun"},"content":"    public void parse_validInput_returnsCorrectCommand() {","lastModifiedDate":"2021-10-25"},{"lineNumber":30,"author":{"gitId":"tanhuakun"},"content":"        Group expectedGroup \u003d new GroupBuilder().withName(VALID_GROUP_TUTORIAL).build();","lastModifiedDate":"2021-10-25"},{"lineNumber":31,"author":{"gitId":"tanhuakun"},"content":"        List\u003cIndex\u003e expectedIndexes \u003d new ArrayList\u003c\u003e(Arrays.asList(INDEX_FIRST_PERSON));","lastModifiedDate":"2021-11-07"},{"lineNumber":32,"author":{"gitId":"tanhuakun"},"content":"        assertParseSuccess(parser, INDEX_FIRST_PERSON.getOneBased() + \" \" + GROUP_DESC_TUTORIAL,","lastModifiedDate":"2021-11-07"},{"lineNumber":33,"author":{"gitId":"tanhuakun"},"content":"                new AddGroupCommand(expectedGroup, expectedIndexes));","lastModifiedDate":"2021-10-25"},{"lineNumber":34,"author":{"gitId":"tanhuakun"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":35,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":36,"author":{"gitId":"tanhuakun"},"content":"    @Test","lastModifiedDate":"2021-10-25"},{"lineNumber":37,"author":{"gitId":"tanhuakun"},"content":"    public void parse_invalidInput_failure() {","lastModifiedDate":"2021-10-25"},{"lineNumber":38,"author":{"gitId":"tanhuakun"},"content":"        // invalid indexes","lastModifiedDate":"2021-11-07"},{"lineNumber":39,"author":{"gitId":"tanhuakun"},"content":"        assertParseFailure(parser, \"-1\" + GROUP_DESC_TUTORIAL, String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2021-10-25"},{"lineNumber":40,"author":{"gitId":"tanhuakun"},"content":"                MESSAGE_INVALID_INDEX_GIVEN));","lastModifiedDate":"2021-11-02"},{"lineNumber":41,"author":{"gitId":"tanhuakun"},"content":"        assertParseFailure(parser, \"abc\" + GROUP_DESC_TUTORIAL, String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2021-11-07"},{"lineNumber":42,"author":{"gitId":"tanhuakun"},"content":"                MESSAGE_INVALID_INDEX_GIVEN));","lastModifiedDate":"2021-11-07"},{"lineNumber":43,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":44,"author":{"gitId":"tanhuakun"},"content":"        // invalid name","lastModifiedDate":"2021-10-25"},{"lineNumber":45,"author":{"gitId":"tanhuakun"},"content":"        assertParseFailure(parser, INDEX_FIRST_PERSON.getOneBased() + INVALID_GROUP_NAME_DESC,","lastModifiedDate":"2021-10-25"},{"lineNumber":46,"author":{"gitId":"tanhuakun"},"content":"                GroupName.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-25"},{"lineNumber":47,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":48,"author":{"gitId":"tanhuakun"},"content":"        // repeated index","lastModifiedDate":"2021-10-25"},{"lineNumber":49,"author":{"gitId":"tanhuakun"},"content":"        assertParseFailure(parser, INDEX_FIRST_PERSON.getOneBased() + \" \" + INDEX_FIRST_PERSON.getOneBased()","lastModifiedDate":"2021-11-07"},{"lineNumber":50,"author":{"gitId":"tanhuakun"},"content":"                + GROUP_DESC_TUTORIAL, AddGroupCommandParser.MESSAGE_DUPLICATE_INDEX);","lastModifiedDate":"2021-11-07"},{"lineNumber":51,"author":{"gitId":"tanhuakun"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":52,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":53,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":54,"author":{"gitId":"tanhuakun"},"content":"}","lastModifiedDate":"2021-10-25"}],"authorContributionMap":{"tanhuakun":54}},{"path":"src/test/java/seedu/address/logic/parser/groups/DeleteGroupCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"kvihashini"},"content":"package seedu.address.logic.parser.groups;","lastModifiedDate":"2021-10-24"},{"lineNumber":2,"author":{"gitId":"kvihashini"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":3,"author":{"gitId":"kvihashini"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-10-24"},{"lineNumber":4,"author":{"gitId":"tanhuakun"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_INDEX_GIVEN;","lastModifiedDate":"2021-11-02"},{"lineNumber":5,"author":{"gitId":"kvihashini"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2021-10-24"},{"lineNumber":6,"author":{"gitId":"kvihashini"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2021-10-24"},{"lineNumber":7,"author":{"gitId":"kvihashini"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_GROUP;","lastModifiedDate":"2021-10-24"},{"lineNumber":8,"author":{"gitId":"kvihashini"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":9,"author":{"gitId":"kvihashini"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-24"},{"lineNumber":10,"author":{"gitId":"kvihashini"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":11,"author":{"gitId":"kvihashini"},"content":"import seedu.address.logic.commands.groups.DeleteGroupCommand;","lastModifiedDate":"2021-10-24"},{"lineNumber":12,"author":{"gitId":"kvihashini"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":13,"author":{"gitId":"kvihashini"},"content":"/**","lastModifiedDate":"2021-10-24"},{"lineNumber":14,"author":{"gitId":"kvihashini"},"content":" * As we are only doing white-box testing, our test cases do not cover path variations","lastModifiedDate":"2021-10-24"},{"lineNumber":15,"author":{"gitId":"kvihashini"},"content":" * outside of the DeleteGroupCommand code. For example, inputs \"1\" and \"1 abc\" take the","lastModifiedDate":"2021-10-24"},{"lineNumber":16,"author":{"gitId":"kvihashini"},"content":" * same path through the DeleteGroupCommand, and therefore we test only one of them.","lastModifiedDate":"2021-10-24"},{"lineNumber":17,"author":{"gitId":"kvihashini"},"content":" * The path variation for those two cases occur inside the ParserUtil, and","lastModifiedDate":"2021-10-24"},{"lineNumber":18,"author":{"gitId":"kvihashini"},"content":" * therefore should be covered by the ParserUtilTest.","lastModifiedDate":"2021-10-24"},{"lineNumber":19,"author":{"gitId":"kvihashini"},"content":" */","lastModifiedDate":"2021-10-24"},{"lineNumber":20,"author":{"gitId":"kvihashini"},"content":"public class DeleteGroupCommandParserTest {","lastModifiedDate":"2021-10-24"},{"lineNumber":21,"author":{"gitId":"kvihashini"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":22,"author":{"gitId":"kvihashini"},"content":"    private DeleteGroupCommandParser parser \u003d new DeleteGroupCommandParser();","lastModifiedDate":"2021-10-24"},{"lineNumber":23,"author":{"gitId":"kvihashini"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":24,"author":{"gitId":"kvihashini"},"content":"    @Test","lastModifiedDate":"2021-10-24"},{"lineNumber":25,"author":{"gitId":"kvihashini"},"content":"    public void parse_validArgs_returnsDeleteCommand() {","lastModifiedDate":"2021-10-24"},{"lineNumber":26,"author":{"gitId":"kvihashini"},"content":"        assertParseSuccess(parser, \"1\", new DeleteGroupCommand(INDEX_FIRST_GROUP));","lastModifiedDate":"2021-10-24"},{"lineNumber":27,"author":{"gitId":"kvihashini"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":28,"author":{"gitId":"kvihashini"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":29,"author":{"gitId":"kvihashini"},"content":"    @Test","lastModifiedDate":"2021-10-24"},{"lineNumber":30,"author":{"gitId":"kvihashini"},"content":"    public void parse_invalidArgs_throwsParseException() {","lastModifiedDate":"2021-10-24"},{"lineNumber":31,"author":{"gitId":"tanhuakun"},"content":"        // empty string","lastModifiedDate":"2021-11-02"},{"lineNumber":32,"author":{"gitId":"tanhuakun"},"content":"        assertParseFailure(parser, \"\", String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2021-11-02"},{"lineNumber":33,"author":{"gitId":"kvihashini"},"content":"                DeleteGroupCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-10-24"},{"lineNumber":34,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":35,"author":{"gitId":"tanhuakun"},"content":"        // invalid index","lastModifiedDate":"2021-11-02"},{"lineNumber":36,"author":{"gitId":"tanhuakun"},"content":"        assertParseFailure(parser, \"a\", String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2021-11-02"},{"lineNumber":37,"author":{"gitId":"tanhuakun"},"content":"                MESSAGE_INVALID_INDEX_GIVEN));","lastModifiedDate":"2021-11-02"},{"lineNumber":38,"author":{"gitId":"kvihashini"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":39,"author":{"gitId":"kvihashini"},"content":"}","lastModifiedDate":"2021-10-24"}],"authorContributionMap":{"kvihashini":32,"tanhuakun":7}},{"path":"src/test/java/seedu/address/logic/parser/groups/ViewGroupCommandParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"kvihashini"},"content":"package seedu.address.logic.parser.groups;","lastModifiedDate":"2021-10-25"},{"lineNumber":2,"author":{"gitId":"kvihashini"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":3,"author":{"gitId":"kvihashini"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-10-25"},{"lineNumber":4,"author":{"gitId":"tanhuakun"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_INDEX_GIVEN;","lastModifiedDate":"2021-11-02"},{"lineNumber":5,"author":{"gitId":"kvihashini"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2021-10-25"},{"lineNumber":6,"author":{"gitId":"kvihashini"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2021-10-25"},{"lineNumber":7,"author":{"gitId":"kvihashini"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_GROUP;","lastModifiedDate":"2021-10-25"},{"lineNumber":8,"author":{"gitId":"kvihashini"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":9,"author":{"gitId":"kvihashini"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-25"},{"lineNumber":10,"author":{"gitId":"kvihashini"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":11,"author":{"gitId":"kvihashini"},"content":"import seedu.address.logic.commands.groups.ViewGroupCommand;","lastModifiedDate":"2021-10-25"},{"lineNumber":12,"author":{"gitId":"kvihashini"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":13,"author":{"gitId":"kvihashini"},"content":"/**","lastModifiedDate":"2021-10-25"},{"lineNumber":14,"author":{"gitId":"kvihashini"},"content":" * As we are only doing white-box testing, our test cases do not cover path variations","lastModifiedDate":"2021-10-25"},{"lineNumber":15,"author":{"gitId":"kvihashini"},"content":" * outside of the ViewGroupCommand code. For example, inputs \"1\" and \"1 abc\" take the","lastModifiedDate":"2021-10-25"},{"lineNumber":16,"author":{"gitId":"kvihashini"},"content":" * same path through the ViewGroupCommand, and therefore we test only one of them.","lastModifiedDate":"2021-10-25"},{"lineNumber":17,"author":{"gitId":"kvihashini"},"content":" * The path variation for those two cases occur inside the ParserUtil, and","lastModifiedDate":"2021-10-25"},{"lineNumber":18,"author":{"gitId":"kvihashini"},"content":" * therefore should be covered by the ParserUtilTest.","lastModifiedDate":"2021-10-25"},{"lineNumber":19,"author":{"gitId":"kvihashini"},"content":" */","lastModifiedDate":"2021-10-25"},{"lineNumber":20,"author":{"gitId":"kvihashini"},"content":"public class ViewGroupCommandParserTest {","lastModifiedDate":"2021-10-25"},{"lineNumber":21,"author":{"gitId":"kvihashini"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":22,"author":{"gitId":"kvihashini"},"content":"    private ViewGroupCommandParser parser \u003d new ViewGroupCommandParser();","lastModifiedDate":"2021-10-25"},{"lineNumber":23,"author":{"gitId":"kvihashini"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":24,"author":{"gitId":"kvihashini"},"content":"    @Test","lastModifiedDate":"2021-10-25"},{"lineNumber":25,"author":{"gitId":"kvihashini"},"content":"    public void parse_validArgs_returnsViewCommand() {","lastModifiedDate":"2021-10-25"},{"lineNumber":26,"author":{"gitId":"kvihashini"},"content":"        assertParseSuccess(parser, \"1\", new ViewGroupCommand(INDEX_FIRST_GROUP));","lastModifiedDate":"2021-10-25"},{"lineNumber":27,"author":{"gitId":"kvihashini"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":28,"author":{"gitId":"kvihashini"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":29,"author":{"gitId":"kvihashini"},"content":"    @Test","lastModifiedDate":"2021-10-25"},{"lineNumber":30,"author":{"gitId":"kvihashini"},"content":"    public void parse_invalidArgs_throwsParseException() {","lastModifiedDate":"2021-10-25"},{"lineNumber":31,"author":{"gitId":"tanhuakun"},"content":"        // no arguments","lastModifiedDate":"2021-11-02"},{"lineNumber":32,"author":{"gitId":"tanhuakun"},"content":"        assertParseFailure(parser, \"\", String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2021-11-02"},{"lineNumber":33,"author":{"gitId":"kvihashini"},"content":"                ViewGroupCommand.MESSAGE_USAGE));","lastModifiedDate":"2021-10-25"},{"lineNumber":34,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":35,"author":{"gitId":"tanhuakun"},"content":"        // invalid index","lastModifiedDate":"2021-11-02"},{"lineNumber":36,"author":{"gitId":"tanhuakun"},"content":"        assertParseFailure(parser, \"a\", String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2021-11-02"},{"lineNumber":37,"author":{"gitId":"tanhuakun"},"content":"                MESSAGE_INVALID_INDEX_GIVEN));","lastModifiedDate":"2021-11-02"},{"lineNumber":38,"author":{"gitId":"kvihashini"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":39,"author":{"gitId":"kvihashini"},"content":"}","lastModifiedDate":"2021-10-25"}],"authorContributionMap":{"kvihashini":32,"tanhuakun":7}},{"path":"src/test/java/seedu/address/logic/parser/persons/PersonAddExamParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"tanhuakun"},"content":"package seedu.address.logic.parser.persons;","lastModifiedDate":"2021-10-25"},{"lineNumber":2,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":3,"author":{"gitId":"tanhuakun"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-10-25"},{"lineNumber":4,"author":{"gitId":"tanhuakun"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DATE_TIME_DESC1;","lastModifiedDate":"2021-10-25"},{"lineNumber":5,"author":{"gitId":"tanhuakun"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_DATE_TIME_DESC;","lastModifiedDate":"2021-10-25"},{"lineNumber":6,"author":{"gitId":"tanhuakun"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_SUBJECT_DESC;","lastModifiedDate":"2021-10-25"},{"lineNumber":7,"author":{"gitId":"tanhuakun"},"content":"import static seedu.address.logic.commands.CommandTestUtil.SUBJECT_DESC_MATH;","lastModifiedDate":"2021-10-25"},{"lineNumber":8,"author":{"gitId":"tanhuakun"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_DATE_TIME_1;","lastModifiedDate":"2021-10-25"},{"lineNumber":9,"author":{"gitId":"tanhuakun"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_SUBJECT_MATH;","lastModifiedDate":"2021-10-25"},{"lineNumber":10,"author":{"gitId":"tanhuakun"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.INVALID_COMMAND_INVALID_INDEX;","lastModifiedDate":"2021-11-02"},{"lineNumber":11,"author":{"gitId":"tanhuakun"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2021-10-25"},{"lineNumber":12,"author":{"gitId":"tanhuakun"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2021-10-25"},{"lineNumber":13,"author":{"gitId":"tanhuakun"},"content":"import static seedu.address.logic.parser.ParserUtil.INVALID_DATE_TIME_FORMAT;","lastModifiedDate":"2021-10-25"},{"lineNumber":14,"author":{"gitId":"tanhuakun"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2021-10-25"},{"lineNumber":15,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":16,"author":{"gitId":"tanhuakun"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-25"},{"lineNumber":17,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":18,"author":{"gitId":"tanhuakun"},"content":"import seedu.address.logic.commands.persons.EditPersonCommand;","lastModifiedDate":"2021-10-25"},{"lineNumber":19,"author":{"gitId":"tanhuakun"},"content":"import seedu.address.logic.parser.ParserUtil;","lastModifiedDate":"2021-10-25"},{"lineNumber":20,"author":{"gitId":"tanhuakun"},"content":"import seedu.address.logic.parser.exceptions.ParseException;","lastModifiedDate":"2021-10-25"},{"lineNumber":21,"author":{"gitId":"tanhuakun"},"content":"import seedu.address.model.lesson.Subject;","lastModifiedDate":"2021-10-25"},{"lineNumber":22,"author":{"gitId":"tanhuakun"},"content":"import seedu.address.model.person.Exam;","lastModifiedDate":"2021-10-25"},{"lineNumber":23,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":24,"author":{"gitId":"tanhuakun"},"content":"class PersonAddExamParserTest {","lastModifiedDate":"2021-10-25"},{"lineNumber":25,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":26,"author":{"gitId":"tanhuakun"},"content":"    private static final String MESSAGE_INVALID_FORMAT \u003d String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2021-10-25"},{"lineNumber":27,"author":{"gitId":"tanhuakun"},"content":"            PersonAddExamParser.MESSAGE_USAGE);","lastModifiedDate":"2021-10-25"},{"lineNumber":28,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":29,"author":{"gitId":"tanhuakun"},"content":"    private static final String VALID_INDEX \u003d String.format(\"%d\", INDEX_FIRST_PERSON.getOneBased());","lastModifiedDate":"2021-11-07"},{"lineNumber":30,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":31,"author":{"gitId":"tanhuakun"},"content":"    private PersonAddExamParser parser \u003d new PersonAddExamParser();","lastModifiedDate":"2021-10-25"},{"lineNumber":32,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":33,"author":{"gitId":"tanhuakun"},"content":"    @Test","lastModifiedDate":"2021-10-25"},{"lineNumber":34,"author":{"gitId":"tanhuakun"},"content":"    public void parse_validFields_success() throws ParseException {","lastModifiedDate":"2021-10-25"},{"lineNumber":35,"author":{"gitId":"tanhuakun"},"content":"        Exam expectedExam \u003d new Exam(ParserUtil.parseSubject(VALID_SUBJECT_MATH),","lastModifiedDate":"2021-10-25"},{"lineNumber":36,"author":{"gitId":"tanhuakun"},"content":"                ParserUtil.parseLocalDateTime(VALID_DATE_TIME_1));","lastModifiedDate":"2021-10-25"},{"lineNumber":37,"author":{"gitId":"tanhuakun"},"content":"        EditPersonCommand.EditPersonDescriptor descriptor \u003d new EditPersonCommand.EditPersonDescriptor();","lastModifiedDate":"2021-10-25"},{"lineNumber":38,"author":{"gitId":"tanhuakun"},"content":"        descriptor.addExam(expectedExam);","lastModifiedDate":"2021-10-25"},{"lineNumber":39,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":40,"author":{"gitId":"tanhuakun"},"content":"        assertParseSuccess(parser, VALID_INDEX + SUBJECT_DESC_MATH + DATE_TIME_DESC1,","lastModifiedDate":"2021-11-07"},{"lineNumber":41,"author":{"gitId":"tanhuakun"},"content":"                new EditPersonCommand(INDEX_FIRST_PERSON, descriptor, PersonAddExamParser.ADD_EXAM_SUCCESS));","lastModifiedDate":"2021-11-07"},{"lineNumber":42,"author":{"gitId":"tanhuakun"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":43,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":44,"author":{"gitId":"tanhuakun"},"content":"    @Test","lastModifiedDate":"2021-10-25"},{"lineNumber":45,"author":{"gitId":"tanhuakun"},"content":"    public void parse_missingFields_failure() {","lastModifiedDate":"2021-10-25"},{"lineNumber":46,"author":{"gitId":"tanhuakun"},"content":"        // no preamble","lastModifiedDate":"2021-10-25"},{"lineNumber":47,"author":{"gitId":"tanhuakun"},"content":"        assertParseFailure(parser, SUBJECT_DESC_MATH + DATE_TIME_DESC1, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2021-10-25"},{"lineNumber":48,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":49,"author":{"gitId":"tanhuakun"},"content":"        // no subject","lastModifiedDate":"2021-10-25"},{"lineNumber":50,"author":{"gitId":"tanhuakun"},"content":"        assertParseFailure(parser, VALID_INDEX + DATE_TIME_DESC1, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2021-10-25"},{"lineNumber":51,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":52,"author":{"gitId":"tanhuakun"},"content":"        // no date","lastModifiedDate":"2021-10-25"},{"lineNumber":53,"author":{"gitId":"tanhuakun"},"content":"        assertParseFailure(parser, VALID_INDEX + SUBJECT_DESC_MATH, MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2021-10-25"},{"lineNumber":54,"author":{"gitId":"tanhuakun"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":55,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":56,"author":{"gitId":"tanhuakun"},"content":"    @Test","lastModifiedDate":"2021-10-25"},{"lineNumber":57,"author":{"gitId":"tanhuakun"},"content":"    public void parse_invalidFields_failure() {","lastModifiedDate":"2021-10-25"},{"lineNumber":58,"author":{"gitId":"tanhuakun"},"content":"        // empty","lastModifiedDate":"2021-11-02"},{"lineNumber":59,"author":{"gitId":"tanhuakun"},"content":"        assertParseFailure(parser, \"\", MESSAGE_INVALID_FORMAT);","lastModifiedDate":"2021-11-02"},{"lineNumber":60,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":61,"author":{"gitId":"tanhuakun"},"content":"        // invalid index","lastModifiedDate":"2021-10-25"},{"lineNumber":62,"author":{"gitId":"tanhuakun"},"content":"        assertParseFailure(parser, \"-1\" + SUBJECT_DESC_MATH + DATE_TIME_DESC1, INVALID_COMMAND_INVALID_INDEX);","lastModifiedDate":"2021-11-02"},{"lineNumber":63,"author":{"gitId":"tanhuakun"},"content":"        assertParseFailure(parser, \"abc\" + SUBJECT_DESC_MATH + DATE_TIME_DESC1, INVALID_COMMAND_INVALID_INDEX);","lastModifiedDate":"2021-11-02"},{"lineNumber":64,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":65,"author":{"gitId":"tanhuakun"},"content":"        // invalid subject","lastModifiedDate":"2021-10-25"},{"lineNumber":66,"author":{"gitId":"tanhuakun"},"content":"        assertParseFailure(parser, VALID_INDEX + INVALID_SUBJECT_DESC + DATE_TIME_DESC1, Subject.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-11-07"},{"lineNumber":67,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":68,"author":{"gitId":"tanhuakun"},"content":"        // invalid date time","lastModifiedDate":"2021-10-25"},{"lineNumber":69,"author":{"gitId":"tanhuakun"},"content":"        assertParseFailure(parser, VALID_INDEX + SUBJECT_DESC_MATH + INVALID_DATE_TIME_DESC, INVALID_DATE_TIME_FORMAT);","lastModifiedDate":"2021-11-07"},{"lineNumber":70,"author":{"gitId":"tanhuakun"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":71,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":72,"author":{"gitId":"tanhuakun"},"content":"}","lastModifiedDate":"2021-10-25"}],"authorContributionMap":{"tanhuakun":72}},{"path":"src/test/java/seedu/address/logic/parser/persons/PersonAddLessonParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"tanhuakun"},"content":"package seedu.address.logic.parser.persons;","lastModifiedDate":"2021-10-12"},{"lineNumber":2,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":3,"author":{"gitId":"tanhuakun"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-10-12"},{"lineNumber":4,"author":{"gitId":"tanhuakun"},"content":"import static seedu.address.logic.commands.CommandTestUtil.DAY_MON;","lastModifiedDate":"2021-10-12"},{"lineNumber":5,"author":{"gitId":"tanhuakun"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_DAY_DESC;","lastModifiedDate":"2021-10-12"},{"lineNumber":6,"author":{"gitId":"tanhuakun"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_SUBJECT_DESC;","lastModifiedDate":"2021-10-12"},{"lineNumber":7,"author":{"gitId":"tanhuakun"},"content":"import static seedu.address.logic.commands.CommandTestUtil.INVALID_TIMESLOT_DESC;","lastModifiedDate":"2021-10-12"},{"lineNumber":8,"author":{"gitId":"tanhuakun"},"content":"import static seedu.address.logic.commands.CommandTestUtil.PREAMBLE_WHITESPACE;","lastModifiedDate":"2021-10-12"},{"lineNumber":9,"author":{"gitId":"tanhuakun"},"content":"import static seedu.address.logic.commands.CommandTestUtil.SUBJECT_DESC_BIO;","lastModifiedDate":"2021-10-12"},{"lineNumber":10,"author":{"gitId":"tanhuakun"},"content":"import static seedu.address.logic.commands.CommandTestUtil.SUBJECT_DESC_MATH;","lastModifiedDate":"2021-10-12"},{"lineNumber":11,"author":{"gitId":"tanhuakun"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TIMESLOT_DESC_10_12;","lastModifiedDate":"2021-10-12"},{"lineNumber":12,"author":{"gitId":"tanhuakun"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TIMESLOT_DESC_10_14;","lastModifiedDate":"2021-10-12"},{"lineNumber":13,"author":{"gitId":"tanhuakun"},"content":"import static seedu.address.logic.commands.CommandTestUtil.TIMESLOT_DESC_12_14;","lastModifiedDate":"2021-10-12"},{"lineNumber":14,"author":{"gitId":"tanhuakun"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_DAY_MON;","lastModifiedDate":"2021-10-12"},{"lineNumber":15,"author":{"gitId":"tanhuakun"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_SUBJECT_MATH;","lastModifiedDate":"2021-10-12"},{"lineNumber":16,"author":{"gitId":"tanhuakun"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TIME_10;","lastModifiedDate":"2021-10-12"},{"lineNumber":17,"author":{"gitId":"tanhuakun"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TIME_12;","lastModifiedDate":"2021-10-12"},{"lineNumber":18,"author":{"gitId":"tanhuakun"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.INVALID_COMMAND_INVALID_INDEX;","lastModifiedDate":"2021-11-07"},{"lineNumber":19,"author":{"gitId":"tanhuakun"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2021-10-12"},{"lineNumber":20,"author":{"gitId":"tanhuakun"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2021-10-12"},{"lineNumber":21,"author":{"gitId":"tanhuakun"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2021-10-12"},{"lineNumber":22,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":23,"author":{"gitId":"tanhuakun"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-12"},{"lineNumber":24,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":25,"author":{"gitId":"tanhuakun"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2021-10-12"},{"lineNumber":26,"author":{"gitId":"tanhuakun"},"content":"import seedu.address.logic.commands.persons.EditPersonCommand;","lastModifiedDate":"2021-10-19"},{"lineNumber":27,"author":{"gitId":"tanhuakun"},"content":"import seedu.address.logic.parser.ParserUtil;","lastModifiedDate":"2021-10-12"},{"lineNumber":28,"author":{"gitId":"tanhuakun"},"content":"import seedu.address.model.lesson.Lesson;","lastModifiedDate":"2021-10-12"},{"lineNumber":29,"author":{"gitId":"tanhuakun"},"content":"import seedu.address.model.lesson.Subject;","lastModifiedDate":"2021-10-12"},{"lineNumber":30,"author":{"gitId":"tanhuakun"},"content":"import seedu.address.model.lesson.Timeslot;","lastModifiedDate":"2021-10-12"},{"lineNumber":31,"author":{"gitId":"tanhuakun"},"content":"import seedu.address.testutil.LessonBuilder;","lastModifiedDate":"2021-10-12"},{"lineNumber":32,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":33,"author":{"gitId":"tanhuakun"},"content":"class PersonAddLessonParserTest {","lastModifiedDate":"2021-10-12"},{"lineNumber":34,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":35,"author":{"gitId":"tanhuakun"},"content":"    private PersonAddLessonParser parser \u003d new PersonAddLessonParser();","lastModifiedDate":"2021-10-12"},{"lineNumber":36,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":37,"author":{"gitId":"tanhuakun"},"content":"    private final Index targetIndex \u003d INDEX_FIRST_PERSON;","lastModifiedDate":"2021-11-07"},{"lineNumber":38,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":39,"author":{"gitId":"tanhuakun"},"content":"    @Test","lastModifiedDate":"2021-10-12"},{"lineNumber":40,"author":{"gitId":"tanhuakun"},"content":"    public void parse_allFieldsPresent_success() throws Exception {","lastModifiedDate":"2021-10-12"},{"lineNumber":41,"author":{"gitId":"tanhuakun"},"content":"        Lesson expectedLesson \u003d new LessonBuilder().withSubject(VALID_SUBJECT_MATH)","lastModifiedDate":"2021-10-12"},{"lineNumber":42,"author":{"gitId":"tanhuakun"},"content":"                .withTimeslot(VALID_TIME_10, VALID_TIME_12).withDayOfWeek(ParserUtil.parseDayOfWeek(VALID_DAY_MON))","lastModifiedDate":"2021-10-12"},{"lineNumber":43,"author":{"gitId":"tanhuakun"},"content":"                .build();","lastModifiedDate":"2021-10-12"},{"lineNumber":44,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":45,"author":{"gitId":"tanhuakun"},"content":"        EditPersonCommand.EditPersonDescriptor editPersonDesc \u003d new EditPersonCommand.EditPersonDescriptor();","lastModifiedDate":"2021-10-19"},{"lineNumber":46,"author":{"gitId":"tanhuakun"},"content":"        editPersonDesc.addLesson(expectedLesson);","lastModifiedDate":"2021-10-19"},{"lineNumber":47,"author":{"gitId":"tanhuakun"},"content":"        assertParseSuccess(parser, PREAMBLE_WHITESPACE + targetIndex.getOneBased() + SUBJECT_DESC_MATH","lastModifiedDate":"2021-10-12"},{"lineNumber":48,"author":{"gitId":"tanhuakun"},"content":"                + TIMESLOT_DESC_10_12 + DAY_MON, new EditPersonCommand(targetIndex, editPersonDesc,","lastModifiedDate":"2021-10-19"},{"lineNumber":49,"author":{"gitId":"tanhuakun"},"content":"                PersonAddLessonParser.ADD_LESSON_SUCCESS));","lastModifiedDate":"2021-10-19"},{"lineNumber":50,"author":{"gitId":"tanhuakun"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":51,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":52,"author":{"gitId":"tanhuakun"},"content":"    @Test","lastModifiedDate":"2021-10-12"},{"lineNumber":53,"author":{"gitId":"tanhuakun"},"content":"    public void parse_compulsoryFieldMissing_failure() {","lastModifiedDate":"2021-10-12"},{"lineNumber":54,"author":{"gitId":"tanhuakun"},"content":"        String expectedMessage \u003d String.format(MESSAGE_INVALID_COMMAND_FORMAT, PersonAddLessonParser.MESSAGE_USAGE);","lastModifiedDate":"2021-10-19"},{"lineNumber":55,"author":{"gitId":"tanhuakun"},"content":"        Index targetIndex \u003d INDEX_FIRST_PERSON;","lastModifiedDate":"2021-10-12"},{"lineNumber":56,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":57,"author":{"gitId":"tanhuakun"},"content":"        // no index","lastModifiedDate":"2021-11-07"},{"lineNumber":58,"author":{"gitId":"tanhuakun"},"content":"        assertParseFailure(parser, PREAMBLE_WHITESPACE + SUBJECT_DESC_MATH + DAY_MON","lastModifiedDate":"2021-10-12"},{"lineNumber":59,"author":{"gitId":"tanhuakun"},"content":"                + TIMESLOT_DESC_10_12, expectedMessage);","lastModifiedDate":"2021-10-12"},{"lineNumber":60,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":61,"author":{"gitId":"tanhuakun"},"content":"        // no day","lastModifiedDate":"2021-11-07"},{"lineNumber":62,"author":{"gitId":"tanhuakun"},"content":"        assertParseFailure(parser, PREAMBLE_WHITESPACE + targetIndex.getOneBased() + SUBJECT_DESC_MATH","lastModifiedDate":"2021-10-12"},{"lineNumber":63,"author":{"gitId":"tanhuakun"},"content":"                + TIMESLOT_DESC_10_12, expectedMessage);","lastModifiedDate":"2021-10-12"},{"lineNumber":64,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":65,"author":{"gitId":"tanhuakun"},"content":"        // no subject","lastModifiedDate":"2021-11-07"},{"lineNumber":66,"author":{"gitId":"tanhuakun"},"content":"        assertParseFailure(parser, PREAMBLE_WHITESPACE + targetIndex.getOneBased() + DAY_MON","lastModifiedDate":"2021-10-12"},{"lineNumber":67,"author":{"gitId":"tanhuakun"},"content":"                + TIMESLOT_DESC_10_14, expectedMessage);","lastModifiedDate":"2021-10-12"},{"lineNumber":68,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":69,"author":{"gitId":"tanhuakun"},"content":"        // no timeslot","lastModifiedDate":"2021-11-07"},{"lineNumber":70,"author":{"gitId":"tanhuakun"},"content":"        assertParseFailure(parser, PREAMBLE_WHITESPACE + targetIndex.getOneBased() + DAY_MON","lastModifiedDate":"2021-10-12"},{"lineNumber":71,"author":{"gitId":"tanhuakun"},"content":"                + SUBJECT_DESC_MATH, expectedMessage);","lastModifiedDate":"2021-10-12"},{"lineNumber":72,"author":{"gitId":"tanhuakun"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":73,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":74,"author":{"gitId":"tanhuakun"},"content":"    @Test","lastModifiedDate":"2021-10-12"},{"lineNumber":75,"author":{"gitId":"tanhuakun"},"content":"    public void parse_invalidValue_failure() {","lastModifiedDate":"2021-10-12"},{"lineNumber":76,"author":{"gitId":"tanhuakun"},"content":"        Index targetIndex \u003d INDEX_FIRST_PERSON;","lastModifiedDate":"2021-10-12"},{"lineNumber":77,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":78,"author":{"gitId":"tanhuakun"},"content":"        assertParseFailure(parser, PREAMBLE_WHITESPACE + \"abc\" + SUBJECT_DESC_MATH + TIMESLOT_DESC_10_12","lastModifiedDate":"2021-11-07"},{"lineNumber":79,"author":{"gitId":"tanhuakun"},"content":"                + DAY_MON, INVALID_COMMAND_INVALID_INDEX);","lastModifiedDate":"2021-11-07"},{"lineNumber":80,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":81,"author":{"gitId":"tanhuakun"},"content":"        assertParseFailure(parser, PREAMBLE_WHITESPACE + targetIndex.getOneBased() + INVALID_SUBJECT_DESC","lastModifiedDate":"2021-10-12"},{"lineNumber":82,"author":{"gitId":"tanhuakun"},"content":"                + TIMESLOT_DESC_10_12 + DAY_MON, Subject.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-12"},{"lineNumber":83,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":84,"author":{"gitId":"tanhuakun"},"content":"        assertParseFailure(parser, PREAMBLE_WHITESPACE + targetIndex.getOneBased() + SUBJECT_DESC_BIO","lastModifiedDate":"2021-10-12"},{"lineNumber":85,"author":{"gitId":"tanhuakun"},"content":"                + INVALID_TIMESLOT_DESC + DAY_MON, Timeslot.MESSAGE_CONSTRAINTS);","lastModifiedDate":"2021-10-12"},{"lineNumber":86,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":87,"author":{"gitId":"tanhuakun"},"content":"        assertParseFailure(parser, PREAMBLE_WHITESPACE + targetIndex.getOneBased() + SUBJECT_DESC_BIO","lastModifiedDate":"2021-10-12"},{"lineNumber":88,"author":{"gitId":"tanhuakun"},"content":"                + TIMESLOT_DESC_12_14 + INVALID_DAY_DESC, ParserUtil.MESSAGE_INVALID_DAY);","lastModifiedDate":"2021-10-12"},{"lineNumber":89,"author":{"gitId":"tanhuakun"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":90,"author":{"gitId":"tanhuakun"},"content":"}","lastModifiedDate":"2021-10-12"}],"authorContributionMap":{"tanhuakun":90}},{"path":"src/test/java/seedu/address/logic/parser/persons/PersonRemoveExamParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"tanhuakun"},"content":"package seedu.address.logic.parser.persons;","lastModifiedDate":"2021-10-25"},{"lineNumber":2,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":3,"author":{"gitId":"tanhuakun"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-10-25"},{"lineNumber":4,"author":{"gitId":"tanhuakun"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.INVALID_COMMAND_INVALID_INDEX;","lastModifiedDate":"2021-11-02"},{"lineNumber":5,"author":{"gitId":"tanhuakun"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2021-10-25"},{"lineNumber":6,"author":{"gitId":"tanhuakun"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2021-10-25"},{"lineNumber":7,"author":{"gitId":"tanhuakun"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_EXAM;","lastModifiedDate":"2021-10-25"},{"lineNumber":8,"author":{"gitId":"tanhuakun"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2021-10-25"},{"lineNumber":9,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":10,"author":{"gitId":"tanhuakun"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-25"},{"lineNumber":11,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":12,"author":{"gitId":"tanhuakun"},"content":"import seedu.address.logic.commands.persons.EditPersonCommand;","lastModifiedDate":"2021-10-25"},{"lineNumber":13,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":14,"author":{"gitId":"tanhuakun"},"content":"public class PersonRemoveExamParserTest {","lastModifiedDate":"2021-10-25"},{"lineNumber":15,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":16,"author":{"gitId":"tanhuakun"},"content":"    private static final String INVALID_FORMAT \u003d String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2021-10-25"},{"lineNumber":17,"author":{"gitId":"tanhuakun"},"content":"            PersonRemoveExamParser.MESSAGE_USAGE);","lastModifiedDate":"2021-10-25"},{"lineNumber":18,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":19,"author":{"gitId":"tanhuakun"},"content":"    private PersonRemoveExamParser parser \u003d new PersonRemoveExamParser();","lastModifiedDate":"2021-10-25"},{"lineNumber":20,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":21,"author":{"gitId":"tanhuakun"},"content":"    @Test","lastModifiedDate":"2021-10-25"},{"lineNumber":22,"author":{"gitId":"tanhuakun"},"content":"    public void parse_validArgs_returnsCorrectCommand() {","lastModifiedDate":"2021-10-25"},{"lineNumber":23,"author":{"gitId":"tanhuakun"},"content":"        EditPersonCommand.EditPersonDescriptor descriptor \u003d new EditPersonCommand.EditPersonDescriptor();","lastModifiedDate":"2021-10-25"},{"lineNumber":24,"author":{"gitId":"tanhuakun"},"content":"        descriptor.removeExam(INDEX_FIRST_EXAM);","lastModifiedDate":"2021-10-25"},{"lineNumber":25,"author":{"gitId":"tanhuakun"},"content":"        assertParseSuccess(parser, INDEX_FIRST_PERSON.getOneBased() + \" \" + INDEX_FIRST_EXAM.getOneBased(),","lastModifiedDate":"2021-10-25"},{"lineNumber":26,"author":{"gitId":"tanhuakun"},"content":"                new EditPersonCommand(INDEX_FIRST_PERSON, descriptor, PersonRemoveExamParser.MESSAGE_SUCCESS));","lastModifiedDate":"2021-10-25"},{"lineNumber":27,"author":{"gitId":"tanhuakun"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":28,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":29,"author":{"gitId":"tanhuakun"},"content":"    @Test","lastModifiedDate":"2021-10-25"},{"lineNumber":30,"author":{"gitId":"tanhuakun"},"content":"    public void parse_invalidArgs_throwsParseException() {","lastModifiedDate":"2021-10-25"},{"lineNumber":31,"author":{"gitId":"tanhuakun"},"content":"        // empty","lastModifiedDate":"2021-11-02"},{"lineNumber":32,"author":{"gitId":"tanhuakun"},"content":"        assertParseFailure(parser, \"\", INVALID_FORMAT);","lastModifiedDate":"2021-11-02"},{"lineNumber":33,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":34,"author":{"gitId":"tanhuakun"},"content":"        // missing index","lastModifiedDate":"2021-11-07"},{"lineNumber":35,"author":{"gitId":"tanhuakun"},"content":"        assertParseFailure(parser, \" \" + INDEX_FIRST_PERSON.getOneBased(), INVALID_FORMAT);","lastModifiedDate":"2021-11-07"},{"lineNumber":36,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":37,"author":{"gitId":"tanhuakun"},"content":"        // one invalid index","lastModifiedDate":"2021-11-07"},{"lineNumber":38,"author":{"gitId":"tanhuakun"},"content":"        assertParseFailure(parser, \"...\" + \" \" + INDEX_FIRST_EXAM.getOneBased(), INVALID_COMMAND_INVALID_INDEX);","lastModifiedDate":"2021-11-07"},{"lineNumber":39,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":40,"author":{"gitId":"tanhuakun"},"content":"        assertParseFailure(parser, INDEX_FIRST_PERSON.getOneBased() + \" \" + \"abc\", INVALID_COMMAND_INVALID_INDEX);","lastModifiedDate":"2021-11-07"},{"lineNumber":41,"author":{"gitId":"tanhuakun"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":42,"author":{"gitId":"tanhuakun"},"content":"}","lastModifiedDate":"2021-10-25"}],"authorContributionMap":{"tanhuakun":42}},{"path":"src/test/java/seedu/address/logic/parser/persons/PersonRemoveLessonParserTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"tanhuakun"},"content":"package seedu.address.logic.parser.persons;","lastModifiedDate":"2021-10-12"},{"lineNumber":2,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":3,"author":{"gitId":"tanhuakun"},"content":"import static seedu.address.commons.core.Messages.MESSAGE_INVALID_COMMAND_FORMAT;","lastModifiedDate":"2021-10-12"},{"lineNumber":4,"author":{"gitId":"tanhuakun"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.INVALID_COMMAND_INVALID_INDEX;","lastModifiedDate":"2021-11-02"},{"lineNumber":5,"author":{"gitId":"tanhuakun"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseFailure;","lastModifiedDate":"2021-10-12"},{"lineNumber":6,"author":{"gitId":"tanhuakun"},"content":"import static seedu.address.logic.parser.CommandParserTestUtil.assertParseSuccess;","lastModifiedDate":"2021-10-12"},{"lineNumber":7,"author":{"gitId":"tanhuakun"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2021-10-12"},{"lineNumber":8,"author":{"gitId":"tanhuakun"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_LESSON;","lastModifiedDate":"2021-10-25"},{"lineNumber":9,"author":{"gitId":"tanhuakun"},"content":"import static seedu.address.testutil.TypicalIndexes.INDEX_FIRST_PERSON;","lastModifiedDate":"2021-10-12"},{"lineNumber":10,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":11,"author":{"gitId":"tanhuakun"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-12"},{"lineNumber":12,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":13,"author":{"gitId":"tanhuakun"},"content":"import seedu.address.logic.commands.persons.EditPersonCommand;","lastModifiedDate":"2021-10-19"},{"lineNumber":14,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":15,"author":{"gitId":"tanhuakun"},"content":"class PersonRemoveLessonParserTest {","lastModifiedDate":"2021-10-12"},{"lineNumber":16,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":17,"author":{"gitId":"tanhuakun"},"content":"    private static final String INVALID_COMMAND \u003d String.format(MESSAGE_INVALID_COMMAND_FORMAT,","lastModifiedDate":"2021-11-02"},{"lineNumber":18,"author":{"gitId":"tanhuakun"},"content":"            PersonRemoveLessonParser.MESSAGE_USAGE);","lastModifiedDate":"2021-11-02"},{"lineNumber":19,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":20,"author":{"gitId":"tanhuakun"},"content":"    private PersonRemoveLessonParser parser \u003d new PersonRemoveLessonParser();","lastModifiedDate":"2021-10-12"},{"lineNumber":21,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":22,"author":{"gitId":"tanhuakun"},"content":"    @Test","lastModifiedDate":"2021-10-12"},{"lineNumber":23,"author":{"gitId":"tanhuakun"},"content":"    void parse_nullInput_throwsNullPointerException() {","lastModifiedDate":"2021-10-12"},{"lineNumber":24,"author":{"gitId":"tanhuakun"},"content":"        assertThrows(NullPointerException.class, () -\u003e parser.parse(null));","lastModifiedDate":"2021-10-12"},{"lineNumber":25,"author":{"gitId":"tanhuakun"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":26,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":27,"author":{"gitId":"tanhuakun"},"content":"    @Test","lastModifiedDate":"2021-10-12"},{"lineNumber":28,"author":{"gitId":"tanhuakun"},"content":"    public void parse_validArgs_returnsCorrectCommand() {","lastModifiedDate":"2021-10-12"},{"lineNumber":29,"author":{"gitId":"tanhuakun"},"content":"        EditPersonCommand.EditPersonDescriptor editPersonDesc \u003d new EditPersonCommand.EditPersonDescriptor();","lastModifiedDate":"2021-10-19"},{"lineNumber":30,"author":{"gitId":"tanhuakun"},"content":"        editPersonDesc.removeLesson(INDEX_FIRST_LESSON);","lastModifiedDate":"2021-10-25"},{"lineNumber":31,"author":{"gitId":"tanhuakun"},"content":"        assertParseSuccess(parser, \"1 1\", new EditPersonCommand(INDEX_FIRST_PERSON, editPersonDesc,","lastModifiedDate":"2021-10-19"},{"lineNumber":32,"author":{"gitId":"tanhuakun"},"content":"                PersonRemoveLessonParser.MESSAGE_SUCCESS));","lastModifiedDate":"2021-10-19"},{"lineNumber":33,"author":{"gitId":"tanhuakun"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":34,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":35,"author":{"gitId":"tanhuakun"},"content":"    @Test","lastModifiedDate":"2021-10-12"},{"lineNumber":36,"author":{"gitId":"tanhuakun"},"content":"    public void parse_invalidArgs_throwsParseException() {","lastModifiedDate":"2021-10-12"},{"lineNumber":37,"author":{"gitId":"tanhuakun"},"content":"        // empty","lastModifiedDate":"2021-11-02"},{"lineNumber":38,"author":{"gitId":"tanhuakun"},"content":"        assertParseFailure(parser, \" \", INVALID_COMMAND);","lastModifiedDate":"2021-11-02"},{"lineNumber":39,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":40,"author":{"gitId":"tanhuakun"},"content":"        // all wrong","lastModifiedDate":"2021-11-02"},{"lineNumber":41,"author":{"gitId":"tanhuakun"},"content":"        assertParseFailure(parser, \"abcdefgh\", INVALID_COMMAND);","lastModifiedDate":"2021-11-02"},{"lineNumber":42,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":43,"author":{"gitId":"tanhuakun"},"content":"        // half right :)","lastModifiedDate":"2021-10-12"},{"lineNumber":44,"author":{"gitId":"tanhuakun"},"content":"        assertParseFailure(parser, \"1 abc\", INVALID_COMMAND_INVALID_INDEX);","lastModifiedDate":"2021-11-02"},{"lineNumber":45,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-11-02"},{"lineNumber":46,"author":{"gitId":"tanhuakun"},"content":"        assertParseFailure(parser, \"abc 1\", INVALID_COMMAND_INVALID_INDEX);","lastModifiedDate":"2021-11-02"},{"lineNumber":47,"author":{"gitId":"tanhuakun"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":48,"author":{"gitId":"tanhuakun"},"content":"}","lastModifiedDate":"2021-10-12"}],"authorContributionMap":{"tanhuakun":48}},{"path":"src/test/java/seedu/address/model/AddressBookTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2016-12-24"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2018-04-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":9,"author":{"gitId":"kvihashini"},"content":"import static seedu.address.testutil.TypicalGroups.GROUP_1;","lastModifiedDate":"2021-10-18"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2017-07-19"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalAddressBook;","lastModifiedDate":"2017-07-19"},{"lineNumber":12,"author":{"gitId":"eltonyeh"},"content":"import static seedu.address.testutil.TypicalTasks.REPORT_1;","lastModifiedDate":"2021-10-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2016-12-24"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.Collection;","lastModifiedDate":"2016-12-24"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.util.Collections;","lastModifiedDate":"2016-12-24"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2016-12-24"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":20,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import javafx.collections.FXCollections;","lastModifiedDate":"2016-12-24"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2016-12-24"},{"lineNumber":23,"author":{"gitId":"kvihashini"},"content":"import seedu.address.model.group.Group;","lastModifiedDate":"2021-10-18"},{"lineNumber":24,"author":{"gitId":"tanhuakun"},"content":"import seedu.address.model.lesson.LessonWithAttendees;","lastModifiedDate":"2021-10-20"},{"lineNumber":25,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2016-12-24"},{"lineNumber":26,"author":{"gitId":"-"},"content":"import seedu.address.model.person.exceptions.DuplicatePersonException;","lastModifiedDate":"2018-08-07"},{"lineNumber":27,"author":{"gitId":"eltonyeh"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2021-10-08"},{"lineNumber":28,"author":{"gitId":"eltonyeh"},"content":"import seedu.address.model.task.exceptions.DuplicateTaskException;","lastModifiedDate":"2021-10-10"},{"lineNumber":29,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2018-04-19"},{"lineNumber":30,"author":{"gitId":"eltonyeh"},"content":"import seedu.address.testutil.TaskBuilder;","lastModifiedDate":"2021-10-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":32,"author":{"gitId":"-"},"content":"public class AddressBookTest {","lastModifiedDate":"2016-12-24"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private final AddressBook addressBook \u003d new AddressBook();","lastModifiedDate":"2016-12-24"},{"lineNumber":35,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    public void constructor() {","lastModifiedDate":"2016-12-24"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertEquals(Collections.emptyList(), addressBook.getPersonList());","lastModifiedDate":"2016-12-24"},{"lineNumber":39,"author":{"gitId":"eltonyeh"},"content":"        assertEquals(Collections.emptyList(), addressBook.getTaskList());","lastModifiedDate":"2021-10-10"},{"lineNumber":40,"author":{"gitId":"kvihashini"},"content":"        assertEquals(Collections.emptyList(), addressBook.getGroupList());","lastModifiedDate":"2021-10-18"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":42,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    public void resetData_null_throwsNullPointerException() {","lastModifiedDate":"2017-05-15"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e addressBook.resetData(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public void resetData_withValidReadOnlyAddressBook_replacesData() {","lastModifiedDate":"2016-12-24"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        AddressBook newData \u003d getTypicalAddressBook();","lastModifiedDate":"2017-07-19"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        addressBook.resetData(newData);","lastModifiedDate":"2016-12-24"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        assertEquals(newData, addressBook);","lastModifiedDate":"2016-12-24"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":54,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2016-12-24"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public void resetData_withDuplicatePersons_throwsDuplicatePersonException() {","lastModifiedDate":"2018-08-07"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        // Two persons with the same identity fields","lastModifiedDate":"2018-04-19"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND)","lastModifiedDate":"2018-04-19"},{"lineNumber":59,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-04-19"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        List\u003cPerson\u003e newPersons \u003d Arrays.asList(ALICE, editedAlice);","lastModifiedDate":"2018-04-19"},{"lineNumber":61,"author":{"gitId":"eltonyeh"},"content":"        List\u003cTask\u003e sampleTaskList \u003d List.of(REPORT_1);","lastModifiedDate":"2021-10-10"},{"lineNumber":62,"author":{"gitId":"kvihashini"},"content":"        List\u003cGroup\u003e sampleGroupList \u003d List.of(GROUP_1);","lastModifiedDate":"2021-10-18"},{"lineNumber":63,"author":{"gitId":"kvihashini"},"content":"        AddressBookStub newData \u003d new AddressBookStub(newPersons, sampleTaskList, sampleGroupList);","lastModifiedDate":"2021-10-18"},{"lineNumber":64,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertThrows(DuplicatePersonException.class, () -\u003e addressBook.resetData(newData));","lastModifiedDate":"2019-03-23"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":68,"author":{"gitId":"eltonyeh"},"content":"    @Test","lastModifiedDate":"2021-10-10"},{"lineNumber":69,"author":{"gitId":"eltonyeh"},"content":"    public void resetData_withDuplicateTasks_throwsDuplicatePersonException() {","lastModifiedDate":"2021-10-10"},{"lineNumber":70,"author":{"gitId":"eltonyeh"},"content":"        // Two tasks with the same identity fields","lastModifiedDate":"2021-10-10"},{"lineNumber":71,"author":{"gitId":"eltonyeh"},"content":"        Task editedReport1 \u003d new TaskBuilder(REPORT_1).build();","lastModifiedDate":"2021-10-10"},{"lineNumber":72,"author":{"gitId":"eltonyeh"},"content":"        List\u003cTask\u003e newTaskList \u003d List.of(REPORT_1, editedReport1);","lastModifiedDate":"2021-10-10"},{"lineNumber":73,"author":{"gitId":"eltonyeh"},"content":"        List\u003cPerson\u003e samplePersonList \u003d List.of(ALICE);","lastModifiedDate":"2021-10-10"},{"lineNumber":74,"author":{"gitId":"kvihashini"},"content":"        List\u003cGroup\u003e sampleGroupList \u003d List.of(GROUP_1);","lastModifiedDate":"2021-10-18"},{"lineNumber":75,"author":{"gitId":"kvihashini"},"content":"        AddressBookStub newData \u003d new AddressBookStub(samplePersonList, newTaskList, sampleGroupList);","lastModifiedDate":"2021-10-18"},{"lineNumber":76,"author":{"gitId":"eltonyeh"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":77,"author":{"gitId":"eltonyeh"},"content":"        assertThrows(DuplicateTaskException.class, () -\u003e addressBook.resetData(newData));","lastModifiedDate":"2021-10-10"},{"lineNumber":78,"author":{"gitId":"eltonyeh"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":79,"author":{"gitId":"eltonyeh"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public void hasPerson_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-06"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e addressBook.hasPerson(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":85,"author":{"gitId":"eltonyeh"},"content":"    @Test","lastModifiedDate":"2021-10-10"},{"lineNumber":86,"author":{"gitId":"eltonyeh"},"content":"    public void hasTask_nullTask_throwsNullPointerException() {","lastModifiedDate":"2021-10-10"},{"lineNumber":87,"author":{"gitId":"eltonyeh"},"content":"        assertThrows(NullPointerException.class, () -\u003e addressBook.hasTask(null));","lastModifiedDate":"2021-10-10"},{"lineNumber":88,"author":{"gitId":"eltonyeh"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":89,"author":{"gitId":"eltonyeh"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    public void hasPerson_personNotInAddressBook_returnsFalse() {","lastModifiedDate":"2018-08-06"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        assertFalse(addressBook.hasPerson(ALICE));","lastModifiedDate":"2018-08-06"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":95,"author":{"gitId":"eltonyeh"},"content":"    @Test","lastModifiedDate":"2021-10-10"},{"lineNumber":96,"author":{"gitId":"eltonyeh"},"content":"    public void hasTask_taskNotInAddressBook_returnsFalse() {","lastModifiedDate":"2021-10-10"},{"lineNumber":97,"author":{"gitId":"eltonyeh"},"content":"        assertFalse(addressBook.hasTask(REPORT_1));","lastModifiedDate":"2021-10-10"},{"lineNumber":98,"author":{"gitId":"eltonyeh"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":99,"author":{"gitId":"eltonyeh"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    public void hasPerson_personInAddressBook_returnsTrue() {","lastModifiedDate":"2018-08-07"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        addressBook.addPerson(ALICE);","lastModifiedDate":"2018-08-06"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        assertTrue(addressBook.hasPerson(ALICE));","lastModifiedDate":"2018-08-06"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":106,"author":{"gitId":"eltonyeh"},"content":"    @Test","lastModifiedDate":"2021-10-10"},{"lineNumber":107,"author":{"gitId":"eltonyeh"},"content":"    public void hasTask_taskInAddressBook_returnsTrue() {","lastModifiedDate":"2021-10-10"},{"lineNumber":108,"author":{"gitId":"eltonyeh"},"content":"        addressBook.addTask(REPORT_1);","lastModifiedDate":"2021-10-10"},{"lineNumber":109,"author":{"gitId":"eltonyeh"},"content":"        assertTrue(addressBook.hasTask(REPORT_1));","lastModifiedDate":"2021-10-10"},{"lineNumber":110,"author":{"gitId":"eltonyeh"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":111,"author":{"gitId":"eltonyeh"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    public void hasPerson_personWithSameIdentityFieldsInAddressBook_returnsTrue() {","lastModifiedDate":"2018-08-07"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        addressBook.addPerson(ALICE);","lastModifiedDate":"2018-08-06"},{"lineNumber":115,"author":{"gitId":"-"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND)","lastModifiedDate":"2018-08-06"},{"lineNumber":116,"author":{"gitId":"-"},"content":"                .build();","lastModifiedDate":"2018-08-06"},{"lineNumber":117,"author":{"gitId":"-"},"content":"        assertTrue(addressBook.hasPerson(editedAlice));","lastModifiedDate":"2018-08-06"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":119,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":120,"author":{"gitId":"eltonyeh"},"content":"    @Test","lastModifiedDate":"2021-10-10"},{"lineNumber":121,"author":{"gitId":"eltonyeh"},"content":"    public void hasTask_taskWithSameIdentityFieldsInAddressBook_returnsTrue() {","lastModifiedDate":"2021-10-10"},{"lineNumber":122,"author":{"gitId":"eltonyeh"},"content":"        addressBook.addTask(REPORT_1);","lastModifiedDate":"2021-10-10"},{"lineNumber":123,"author":{"gitId":"eltonyeh"},"content":"        Task editedReport1 \u003d new TaskBuilder(REPORT_1).build();","lastModifiedDate":"2021-10-10"},{"lineNumber":124,"author":{"gitId":"eltonyeh"},"content":"        assertTrue(addressBook.hasTask(editedReport1));","lastModifiedDate":"2021-10-10"},{"lineNumber":125,"author":{"gitId":"eltonyeh"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":126,"author":{"gitId":"eltonyeh"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    public void getPersonList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e addressBook.getPersonList().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":132,"author":{"gitId":"eltonyeh"},"content":"    @Test","lastModifiedDate":"2021-10-10"},{"lineNumber":133,"author":{"gitId":"eltonyeh"},"content":"    public void getTaskList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2021-10-10"},{"lineNumber":134,"author":{"gitId":"eltonyeh"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e addressBook.getTaskList().remove(0));","lastModifiedDate":"2021-10-10"},{"lineNumber":135,"author":{"gitId":"eltonyeh"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":136,"author":{"gitId":"eltonyeh"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":137,"author":{"gitId":"kvihashini"},"content":"    @Test","lastModifiedDate":"2021-10-18"},{"lineNumber":138,"author":{"gitId":"kvihashini"},"content":"    public void getGroupList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2021-10-18"},{"lineNumber":139,"author":{"gitId":"kvihashini"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e addressBook.getGroupList().remove(0));","lastModifiedDate":"2021-10-18"},{"lineNumber":140,"author":{"gitId":"kvihashini"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":141,"author":{"gitId":"kvihashini"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-24"},{"lineNumber":143,"author":{"gitId":"-"},"content":"     * A stub ReadOnlyAddressBook whose persons list can violate interface constraints.","lastModifiedDate":"2018-03-29"},{"lineNumber":144,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-24"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    private static class AddressBookStub implements ReadOnlyAddressBook {","lastModifiedDate":"2016-12-24"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        private final ObservableList\u003cPerson\u003e persons \u003d FXCollections.observableArrayList();","lastModifiedDate":"2018-01-10"},{"lineNumber":147,"author":{"gitId":"eltonyeh"},"content":"        private final ObservableList\u003cTask\u003e tasks \u003d FXCollections.observableArrayList();","lastModifiedDate":"2021-10-08"},{"lineNumber":148,"author":{"gitId":"kvihashini"},"content":"        private final ObservableList\u003cGroup\u003e groups \u003d FXCollections.observableArrayList();","lastModifiedDate":"2021-10-18"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":150,"author":{"gitId":"kvihashini"},"content":"        AddressBookStub(Collection\u003cPerson\u003e persons, Collection\u003cTask\u003e tasks, Collection\u003cGroup\u003e groups) {","lastModifiedDate":"2021-10-18"},{"lineNumber":151,"author":{"gitId":"-"},"content":"            this.persons.setAll(persons);","lastModifiedDate":"2016-12-24"},{"lineNumber":152,"author":{"gitId":"eltonyeh"},"content":"            this.tasks.setAll(tasks);","lastModifiedDate":"2021-10-08"},{"lineNumber":153,"author":{"gitId":"kvihashini"},"content":"            this.groups.setAll(groups);","lastModifiedDate":"2021-10-18"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-24"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2016-12-24"},{"lineNumber":157,"author":{"gitId":"-"},"content":"        public ObservableList\u003cPerson\u003e getPersonList() {","lastModifiedDate":"2018-01-10"},{"lineNumber":158,"author":{"gitId":"-"},"content":"            return persons;","lastModifiedDate":"2016-12-24"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-12-24"},{"lineNumber":160,"author":{"gitId":"eltonyeh"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":161,"author":{"gitId":"eltonyeh"},"content":"        @Override","lastModifiedDate":"2021-10-08"},{"lineNumber":162,"author":{"gitId":"eltonyeh"},"content":"        public ObservableList\u003cTask\u003e getTaskList() {","lastModifiedDate":"2021-10-08"},{"lineNumber":163,"author":{"gitId":"eltonyeh"},"content":"            return tasks;","lastModifiedDate":"2021-10-08"},{"lineNumber":164,"author":{"gitId":"eltonyeh"},"content":"        }","lastModifiedDate":"2021-10-08"},{"lineNumber":165,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":166,"author":{"gitId":"kvihashini"},"content":"        @Override","lastModifiedDate":"2021-10-18"},{"lineNumber":167,"author":{"gitId":"kvihashini"},"content":"        public ObservableList\u003cGroup\u003e getGroupList() {","lastModifiedDate":"2021-10-18"},{"lineNumber":168,"author":{"gitId":"kvihashini"},"content":"            return groups;","lastModifiedDate":"2021-10-18"},{"lineNumber":169,"author":{"gitId":"kvihashini"},"content":"        }","lastModifiedDate":"2021-10-18"},{"lineNumber":170,"author":{"gitId":"kvihashini"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":171,"author":{"gitId":"tanhuakun"},"content":"        @Override","lastModifiedDate":"2021-10-16"},{"lineNumber":172,"author":{"gitId":"tanhuakun"},"content":"        public List\u003cLessonWithAttendees\u003e getSortedLessonsWithAttendees() {","lastModifiedDate":"2021-10-20"},{"lineNumber":173,"author":{"gitId":"tanhuakun"},"content":"            throw new AssertionError(\"Unsupported command!\");","lastModifiedDate":"2021-10-20"},{"lineNumber":174,"author":{"gitId":"tanhuakun"},"content":"        }","lastModifiedDate":"2021-10-16"},{"lineNumber":175,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":176,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-24"},{"lineNumber":177,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-24"},{"lineNumber":178,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-12-24"}],"authorContributionMap":{"kvihashini":20,"eltonyeh":51,"tanhuakun":7,"-":100}},{"path":"src/test/java/seedu/address/model/ModelManagerTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model;","lastModifiedDate":"2017-05-31"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"eltonyeh"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2021-10-10"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.model.Model.PREDICATE_SHOW_ALL_PERSONS;","lastModifiedDate":"2017-08-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2017-07-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.BENSON;","lastModifiedDate":"2017-07-19"},{"lineNumber":11,"author":{"gitId":"eltonyeh"},"content":"import static seedu.address.testutil.TypicalTasks.REPORT_1;","lastModifiedDate":"2021-10-10"},{"lineNumber":12,"author":{"gitId":"eltonyeh"},"content":"import static seedu.address.testutil.TypicalTasks.REPORT_2;","lastModifiedDate":"2021-10-10"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-11-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-08-09"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-05-31"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":20,"author":{"gitId":"tanhuakun"},"content":"import javafx.beans.value.ChangeListener;","lastModifiedDate":"2021-10-25"},{"lineNumber":21,"author":{"gitId":"tanhuakun"},"content":"import javafx.beans.value.ObservableValue;","lastModifiedDate":"2021-10-25"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2018-11-27"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.person.NameContainsKeywordsPredicate;","lastModifiedDate":"2017-06-12"},{"lineNumber":24,"author":{"gitId":"-"},"content":"import seedu.address.testutil.AddressBookBuilder;","lastModifiedDate":"2017-05-31"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":26,"author":{"gitId":"-"},"content":"public class ModelManagerTest {","lastModifiedDate":"2017-05-31"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private ModelManager modelManager \u003d new ModelManager();","lastModifiedDate":"2018-08-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":31,"author":{"gitId":"-"},"content":"    public void constructor() {","lastModifiedDate":"2018-11-27"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertEquals(new UserPrefs(), modelManager.getUserPrefs());","lastModifiedDate":"2018-11-27"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        assertEquals(new GuiSettings(), modelManager.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        assertEquals(new AddressBook(), new AddressBook(modelManager.getAddressBook()));","lastModifiedDate":"2018-11-27"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public void setUserPrefs_nullUserPrefs_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setUserPrefs(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public void setUserPrefs_validUserPrefs_copiesUserPrefs() {","lastModifiedDate":"2018-12-06"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2018-11-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        userPrefs.setAddressBookFilePath(Paths.get(\"address/book/file/path\"));","lastModifiedDate":"2018-11-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        userPrefs.setGuiSettings(new GuiSettings(1, 2, 3, 4));","lastModifiedDate":"2018-11-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        modelManager.setUserPrefs(userPrefs);","lastModifiedDate":"2018-11-27"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        assertEquals(userPrefs, modelManager.getUserPrefs());","lastModifiedDate":"2018-11-27"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-12-06"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        // Modifying userPrefs should not modify modelManager\u0027s userPrefs","lastModifiedDate":"2018-12-06"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        UserPrefs oldUserPrefs \u003d new UserPrefs(userPrefs);","lastModifiedDate":"2018-12-06"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        userPrefs.setAddressBookFilePath(Paths.get(\"new/address/book/file/path\"));","lastModifiedDate":"2018-12-06"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        assertEquals(oldUserPrefs, modelManager.getUserPrefs());","lastModifiedDate":"2018-12-06"},{"lineNumber":54,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":55,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    public void setGuiSettings_nullGuiSettings_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":58,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setGuiSettings(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    public void setGuiSettings_validGuiSettings_setsGuiSettings() {","lastModifiedDate":"2018-11-27"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        GuiSettings guiSettings \u003d new GuiSettings(1, 2, 3, 4);","lastModifiedDate":"2018-11-27"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        modelManager.setGuiSettings(guiSettings);","lastModifiedDate":"2018-11-27"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertEquals(guiSettings, modelManager.getGuiSettings());","lastModifiedDate":"2018-11-27"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":67,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath_nullPath_throwsNullPointerException() {","lastModifiedDate":"2018-11-27"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.setAddressBookFilePath(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-11-27"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath_validPath_setsAddressBookFilePath() {","lastModifiedDate":"2018-11-27"},{"lineNumber":75,"author":{"gitId":"-"},"content":"        Path path \u003d Paths.get(\"address/book/file/path\");","lastModifiedDate":"2018-11-27"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        modelManager.setAddressBookFilePath(path);","lastModifiedDate":"2018-11-27"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        assertEquals(path, modelManager.getAddressBookFilePath());","lastModifiedDate":"2018-11-27"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-11-27"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-11-27"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    public void hasPerson_nullPerson_throwsNullPointerException() {","lastModifiedDate":"2018-08-06"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.hasPerson(null));","lastModifiedDate":"2019-03-23"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":85,"author":{"gitId":"eltonyeh"},"content":"    @Test","lastModifiedDate":"2021-10-10"},{"lineNumber":86,"author":{"gitId":"eltonyeh"},"content":"    public void hasTask_nullTask_throwsNullPointerException() {","lastModifiedDate":"2021-10-10"},{"lineNumber":87,"author":{"gitId":"eltonyeh"},"content":"        assertThrows(NullPointerException.class, () -\u003e modelManager.hasTask(null));","lastModifiedDate":"2021-10-10"},{"lineNumber":88,"author":{"gitId":"eltonyeh"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":89,"author":{"gitId":"eltonyeh"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":91,"author":{"gitId":"-"},"content":"    public void hasPerson_personNotInAddressBook_returnsFalse() {","lastModifiedDate":"2018-08-06"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        assertFalse(modelManager.hasPerson(ALICE));","lastModifiedDate":"2018-08-06"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":95,"author":{"gitId":"eltonyeh"},"content":"    @Test","lastModifiedDate":"2021-10-10"},{"lineNumber":96,"author":{"gitId":"eltonyeh"},"content":"    public void hasTask_taskNotInAddressBook_returnsFalse() {","lastModifiedDate":"2021-10-10"},{"lineNumber":97,"author":{"gitId":"eltonyeh"},"content":"        assertFalse(modelManager.hasTask(REPORT_1));","lastModifiedDate":"2021-10-10"},{"lineNumber":98,"author":{"gitId":"eltonyeh"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":99,"author":{"gitId":"eltonyeh"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-06"},{"lineNumber":101,"author":{"gitId":"-"},"content":"    public void hasPerson_personInAddressBook_returnsTrue() {","lastModifiedDate":"2018-08-07"},{"lineNumber":102,"author":{"gitId":"-"},"content":"        modelManager.addPerson(ALICE);","lastModifiedDate":"2018-08-06"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        assertTrue(modelManager.hasPerson(ALICE));","lastModifiedDate":"2018-08-06"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-06"},{"lineNumber":105,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-06"},{"lineNumber":106,"author":{"gitId":"eltonyeh"},"content":"    @Test","lastModifiedDate":"2021-10-10"},{"lineNumber":107,"author":{"gitId":"eltonyeh"},"content":"    public void hasTask_taskInAddressBook_returnsTrue() {","lastModifiedDate":"2021-10-10"},{"lineNumber":108,"author":{"gitId":"eltonyeh"},"content":"        modelManager.addTask(REPORT_1);","lastModifiedDate":"2021-10-10"},{"lineNumber":109,"author":{"gitId":"eltonyeh"},"content":"        assertTrue(modelManager.hasTask(REPORT_1));","lastModifiedDate":"2021-10-10"},{"lineNumber":110,"author":{"gitId":"eltonyeh"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":111,"author":{"gitId":"eltonyeh"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    public void getFilteredPersonList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e modelManager.getFilteredPersonList().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":117,"author":{"gitId":"eltonyeh"},"content":"    @Test","lastModifiedDate":"2021-10-10"},{"lineNumber":118,"author":{"gitId":"eltonyeh"},"content":"    public void getFilteredTaskList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2021-10-10"},{"lineNumber":119,"author":{"gitId":"eltonyeh"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e modelManager.getFilteredTaskList().remove(0));","lastModifiedDate":"2021-10-10"},{"lineNumber":120,"author":{"gitId":"eltonyeh"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":121,"author":{"gitId":"eltonyeh"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":122,"author":{"gitId":"tanhuakun"},"content":"    @Test","lastModifiedDate":"2021-10-25"},{"lineNumber":123,"author":{"gitId":"tanhuakun"},"content":"    public void setViewingType_changeViewingType_updatesObservableFromGetViewingType() {","lastModifiedDate":"2021-10-25"},{"lineNumber":124,"author":{"gitId":"tanhuakun"},"content":"        ObservableValue\u003cViewingType\u003e observableValue \u003d modelManager.getViewingType();","lastModifiedDate":"2021-10-25"},{"lineNumber":125,"author":{"gitId":"tanhuakun"},"content":"        modelManager.setViewingType(ViewingType.SCHEDULE);","lastModifiedDate":"2021-10-25"},{"lineNumber":126,"author":{"gitId":"tanhuakun"},"content":"        final boolean[] isUpdatedHolder \u003d new boolean[] {false};","lastModifiedDate":"2021-10-25"},{"lineNumber":127,"author":{"gitId":"tanhuakun"},"content":"        ChangeListener\u003c? super ViewingType\u003e changeListener \u003d new ChangeListener\u003cViewingType\u003e() {","lastModifiedDate":"2021-10-25"},{"lineNumber":128,"author":{"gitId":"tanhuakun"},"content":"            @Override","lastModifiedDate":"2021-10-25"},{"lineNumber":129,"author":{"gitId":"tanhuakun"},"content":"            public void changed(ObservableValue\u003c? extends ViewingType\u003e observable,","lastModifiedDate":"2021-10-25"},{"lineNumber":130,"author":{"gitId":"tanhuakun"},"content":"                                ViewingType oldValue, ViewingType newValue) {","lastModifiedDate":"2021-10-25"},{"lineNumber":131,"author":{"gitId":"tanhuakun"},"content":"                isUpdatedHolder[0] \u003d true;","lastModifiedDate":"2021-10-25"},{"lineNumber":132,"author":{"gitId":"tanhuakun"},"content":"            }","lastModifiedDate":"2021-10-25"},{"lineNumber":133,"author":{"gitId":"tanhuakun"},"content":"        };","lastModifiedDate":"2021-10-25"},{"lineNumber":134,"author":{"gitId":"tanhuakun"},"content":"        observableValue.addListener(changeListener);","lastModifiedDate":"2021-10-25"},{"lineNumber":135,"author":{"gitId":"tanhuakun"},"content":"        assertFalse(isUpdatedHolder[0]);","lastModifiedDate":"2021-10-25"},{"lineNumber":136,"author":{"gitId":"tanhuakun"},"content":"        modelManager.setViewingType(ViewingType.PERSON);","lastModifiedDate":"2021-10-25"},{"lineNumber":137,"author":{"gitId":"tanhuakun"},"content":"        assertTrue(isUpdatedHolder[0]);","lastModifiedDate":"2021-10-25"},{"lineNumber":138,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":139,"author":{"gitId":"tanhuakun"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":140,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":141,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-05-31"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2017-08-15"},{"lineNumber":143,"author":{"gitId":"eltonyeh"},"content":"        AddressBook addressBook \u003d new AddressBookBuilder().withPerson(ALICE).withPerson(BENSON)","lastModifiedDate":"2021-10-10"},{"lineNumber":144,"author":{"gitId":"eltonyeh"},"content":"                .withTask(REPORT_1).withTask(REPORT_2).build();","lastModifiedDate":"2021-10-10"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        AddressBook differentAddressBook \u003d new AddressBook();","lastModifiedDate":"2017-05-31"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        UserPrefs userPrefs \u003d new UserPrefs();","lastModifiedDate":"2017-05-31"},{"lineNumber":147,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":148,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2017-05-31"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        modelManager \u003d new ModelManager(addressBook, userPrefs);","lastModifiedDate":"2018-08-06"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        ModelManager modelManagerCopy \u003d new ModelManager(addressBook, userPrefs);","lastModifiedDate":"2017-05-31"},{"lineNumber":151,"author":{"gitId":"eltonyeh"},"content":"        assertEquals(modelManager, modelManagerCopy);","lastModifiedDate":"2021-10-10"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":153,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2017-05-31"},{"lineNumber":154,"author":{"gitId":"eltonyeh"},"content":"        assertEquals(modelManager, modelManager);","lastModifiedDate":"2021-10-10"},{"lineNumber":155,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":156,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":157,"author":{"gitId":"eltonyeh"},"content":"        assertNotEquals(null, modelManager);","lastModifiedDate":"2021-10-10"},{"lineNumber":158,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        // different types -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":160,"author":{"gitId":"eltonyeh"},"content":"        assertNotEquals(5, modelManager);","lastModifiedDate":"2021-10-10"},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":162,"author":{"gitId":"-"},"content":"        // different addressBook -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":163,"author":{"gitId":"eltonyeh"},"content":"        assertNotEquals(modelManager, new ModelManager(differentAddressBook, userPrefs));","lastModifiedDate":"2021-10-10"},{"lineNumber":164,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":165,"author":{"gitId":"-"},"content":"        // different filteredList -\u003e returns false","lastModifiedDate":"2017-05-31"},{"lineNumber":166,"author":{"gitId":"eltonyeh"},"content":"        String[] keywordsForName \u003d ALICE.getName().fullName.split(\"\\\\s+\");","lastModifiedDate":"2021-10-10"},{"lineNumber":167,"author":{"gitId":"eltonyeh"},"content":"        modelManager.updateFilteredPersonList(new NameContainsKeywordsPredicate(Arrays.asList(keywordsForName)));","lastModifiedDate":"2021-10-10"},{"lineNumber":168,"author":{"gitId":"eltonyeh"},"content":"        assertNotEquals(modelManager, new ModelManager(addressBook, userPrefs));","lastModifiedDate":"2021-10-10"},{"lineNumber":169,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":170,"author":{"gitId":"-"},"content":"        // resets modelManager to initial state for upcoming tests","lastModifiedDate":"2017-08-05"},{"lineNumber":171,"author":{"gitId":"-"},"content":"        modelManager.updateFilteredPersonList(PREDICATE_SHOW_ALL_PERSONS);","lastModifiedDate":"2017-08-05"},{"lineNumber":172,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":173,"author":{"gitId":"-"},"content":"        // different userPrefs -\u003e returns false","lastModifiedDate":"2018-11-27"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        UserPrefs differentUserPrefs \u003d new UserPrefs();","lastModifiedDate":"2017-05-31"},{"lineNumber":175,"author":{"gitId":"-"},"content":"        differentUserPrefs.setAddressBookFilePath(Paths.get(\"differentFilePath\"));","lastModifiedDate":"2018-08-09"},{"lineNumber":176,"author":{"gitId":"eltonyeh"},"content":"        assertNotEquals(modelManager, new ModelManager(addressBook, differentUserPrefs));","lastModifiedDate":"2021-10-10"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31"},{"lineNumber":178,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-31"}],"authorContributionMap":{"eltonyeh":35,"tanhuakun":21,"-":122}},{"path":"src/test/java/seedu/address/model/id/UniqueIdTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"eltonyeh"},"content":"package seedu.address.model.id;","lastModifiedDate":"2021-10-10"},{"lineNumber":2,"author":{"gitId":"eltonyeh"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":3,"author":{"gitId":"eltonyeh"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-10"},{"lineNumber":4,"author":{"gitId":"eltonyeh"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2021-10-10"},{"lineNumber":5,"author":{"gitId":"eltonyeh"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-10"},{"lineNumber":6,"author":{"gitId":"kvihashini"},"content":"import static seedu.address.testutil.TypicalGroups.GROUP_1;","lastModifiedDate":"2021-10-18"},{"lineNumber":7,"author":{"gitId":"Neha-5678"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE_WITH_LESSON;","lastModifiedDate":"2021-11-06"},{"lineNumber":8,"author":{"gitId":"eltonyeh"},"content":"import static seedu.address.testutil.TypicalTasks.REPORT_1;","lastModifiedDate":"2021-10-12"},{"lineNumber":9,"author":{"gitId":"eltonyeh"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":10,"author":{"gitId":"eltonyeh"},"content":"import java.util.List;","lastModifiedDate":"2021-10-10"},{"lineNumber":11,"author":{"gitId":"eltonyeh"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":12,"author":{"gitId":"eltonyeh"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-10"},{"lineNumber":13,"author":{"gitId":"eltonyeh"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":14,"author":{"gitId":"kvihashini"},"content":"import seedu.address.model.group.Group;","lastModifiedDate":"2021-10-18"},{"lineNumber":15,"author":{"gitId":"eltonyeh"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2021-10-10"},{"lineNumber":16,"author":{"gitId":"eltonyeh"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2021-10-10"},{"lineNumber":17,"author":{"gitId":"kvihashini"},"content":"import seedu.address.testutil.TypicalGroups;","lastModifiedDate":"2021-10-18"},{"lineNumber":18,"author":{"gitId":"eltonyeh"},"content":"import seedu.address.testutil.TypicalPersons;","lastModifiedDate":"2021-10-10"},{"lineNumber":19,"author":{"gitId":"eltonyeh"},"content":"import seedu.address.testutil.TypicalTasks;","lastModifiedDate":"2021-10-10"},{"lineNumber":20,"author":{"gitId":"eltonyeh"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":21,"author":{"gitId":"eltonyeh"},"content":"public class UniqueIdTest {","lastModifiedDate":"2021-10-10"},{"lineNumber":22,"author":{"gitId":"eltonyeh"},"content":"    private final List\u003cTask\u003e tasks \u003d TypicalTasks.getTypicalTasks();","lastModifiedDate":"2021-10-10"},{"lineNumber":23,"author":{"gitId":"eltonyeh"},"content":"    private final List\u003cPerson\u003e students \u003d TypicalPersons.getTypicalPersons();","lastModifiedDate":"2021-10-10"},{"lineNumber":24,"author":{"gitId":"kvihashini"},"content":"    private final List\u003cGroup\u003e groups \u003d TypicalGroups.getTypicalGroups();","lastModifiedDate":"2021-10-18"},{"lineNumber":25,"author":{"gitId":"eltonyeh"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":26,"author":{"gitId":"eltonyeh"},"content":"    @Test","lastModifiedDate":"2021-10-10"},{"lineNumber":27,"author":{"gitId":"eltonyeh"},"content":"    public void generateIdTest() {","lastModifiedDate":"2021-10-10"},{"lineNumber":28,"author":{"gitId":"eltonyeh"},"content":"        // id should be unique","lastModifiedDate":"2021-10-10"},{"lineNumber":29,"author":{"gitId":"eltonyeh"},"content":"        for (int i \u003d 0; i \u003c tasks.size() - 1; i++) {","lastModifiedDate":"2021-10-10"},{"lineNumber":30,"author":{"gitId":"eltonyeh"},"content":"            assertNotEquals(UniqueId.generateId(tasks.get(i)), UniqueId.generateId(tasks.get(i + 1)));","lastModifiedDate":"2021-10-10"},{"lineNumber":31,"author":{"gitId":"eltonyeh"},"content":"        }","lastModifiedDate":"2021-10-10"},{"lineNumber":32,"author":{"gitId":"eltonyeh"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":33,"author":{"gitId":"eltonyeh"},"content":"        for (int i \u003d 0; i \u003c students.size() - 1; i++) {","lastModifiedDate":"2021-10-10"},{"lineNumber":34,"author":{"gitId":"eltonyeh"},"content":"            assertNotEquals(UniqueId.generateId(students.get(i)), UniqueId.generateId(students.get(i + 1)));","lastModifiedDate":"2021-10-10"},{"lineNumber":35,"author":{"gitId":"eltonyeh"},"content":"        }","lastModifiedDate":"2021-10-10"},{"lineNumber":36,"author":{"gitId":"kvihashini"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":37,"author":{"gitId":"kvihashini"},"content":"        for (int i \u003d 0; i \u003c groups.size() - 1; i++) {","lastModifiedDate":"2021-10-18"},{"lineNumber":38,"author":{"gitId":"kvihashini"},"content":"            assertNotEquals(UniqueId.generateId(groups.get(i)), UniqueId.generateId(groups.get(i + 1)));","lastModifiedDate":"2021-10-18"},{"lineNumber":39,"author":{"gitId":"kvihashini"},"content":"        }","lastModifiedDate":"2021-10-18"},{"lineNumber":40,"author":{"gitId":"eltonyeh"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":41,"author":{"gitId":"eltonyeh"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":42,"author":{"gitId":"eltonyeh"},"content":"    @Test","lastModifiedDate":"2021-10-10"},{"lineNumber":43,"author":{"gitId":"eltonyeh"},"content":"    public void getOwnerTest() {","lastModifiedDate":"2021-10-10"},{"lineNumber":44,"author":{"gitId":"eltonyeh"},"content":"        Task task \u003d REPORT_1;","lastModifiedDate":"2021-10-12"},{"lineNumber":45,"author":{"gitId":"Neha-5678"},"content":"        Person student \u003d ALICE_WITH_LESSON;","lastModifiedDate":"2021-11-06"},{"lineNumber":46,"author":{"gitId":"kvihashini"},"content":"        Group group \u003d GROUP_1;","lastModifiedDate":"2021-10-18"},{"lineNumber":47,"author":{"gitId":"eltonyeh"},"content":"        UniqueId taskId \u003d task.getId();","lastModifiedDate":"2021-10-12"},{"lineNumber":48,"author":{"gitId":"eltonyeh"},"content":"        UniqueId studentId \u003d student.getId();","lastModifiedDate":"2021-10-12"},{"lineNumber":49,"author":{"gitId":"kvihashini"},"content":"        UniqueId groupId \u003d group.getId();","lastModifiedDate":"2021-10-18"},{"lineNumber":50,"author":{"gitId":"eltonyeh"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":51,"author":{"gitId":"eltonyeh"},"content":"        assertEquals(task, taskId.getOwner());","lastModifiedDate":"2021-10-12"},{"lineNumber":52,"author":{"gitId":"eltonyeh"},"content":"        assertEquals(student, studentId.getOwner());","lastModifiedDate":"2021-10-12"},{"lineNumber":53,"author":{"gitId":"kvihashini"},"content":"        assertEquals(group, groupId.getOwner());","lastModifiedDate":"2021-10-18"},{"lineNumber":54,"author":{"gitId":"eltonyeh"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":55,"author":{"gitId":"eltonyeh"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":56,"author":{"gitId":"eltonyeh"},"content":"    @Test","lastModifiedDate":"2021-10-10"},{"lineNumber":57,"author":{"gitId":"eltonyeh"},"content":"    public void equalsTest() {","lastModifiedDate":"2021-10-10"},{"lineNumber":58,"author":{"gitId":"eltonyeh"},"content":"        UniqueId id1 \u003d UniqueId.generateId(tasks.get(0));","lastModifiedDate":"2021-10-10"},{"lineNumber":59,"author":{"gitId":"eltonyeh"},"content":"        UniqueId id2 \u003d UniqueId.generateId(students.get(0));","lastModifiedDate":"2021-10-10"},{"lineNumber":60,"author":{"gitId":"kvihashini"},"content":"        UniqueId id3 \u003d UniqueId.generateId(groups.get(0));","lastModifiedDate":"2021-10-18"},{"lineNumber":61,"author":{"gitId":"eltonyeh"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":62,"author":{"gitId":"eltonyeh"},"content":"        // Same id and owner -\u003e equal","lastModifiedDate":"2021-10-10"},{"lineNumber":63,"author":{"gitId":"eltonyeh"},"content":"        assertEquals(id1, id1);","lastModifiedDate":"2021-10-10"},{"lineNumber":64,"author":{"gitId":"eltonyeh"},"content":"        assertEquals(id2, id2);","lastModifiedDate":"2021-10-10"},{"lineNumber":65,"author":{"gitId":"kvihashini"},"content":"        assertEquals(id3, id3);","lastModifiedDate":"2021-10-18"},{"lineNumber":66,"author":{"gitId":"eltonyeh"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":67,"author":{"gitId":"eltonyeh"},"content":"        // Not equal to null","lastModifiedDate":"2021-10-10"},{"lineNumber":68,"author":{"gitId":"eltonyeh"},"content":"        assertNotEquals(null, id1);","lastModifiedDate":"2021-10-10"},{"lineNumber":69,"author":{"gitId":"eltonyeh"},"content":"        assertNotEquals(null, id2);","lastModifiedDate":"2021-10-10"},{"lineNumber":70,"author":{"gitId":"kvihashini"},"content":"        assertNotEquals(null, id3);","lastModifiedDate":"2021-10-18"},{"lineNumber":71,"author":{"gitId":"eltonyeh"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":72,"author":{"gitId":"eltonyeh"},"content":"        // Same owner but different id -\u003e Not equal","lastModifiedDate":"2021-10-10"},{"lineNumber":73,"author":{"gitId":"eltonyeh"},"content":"        assertNotEquals(tasks.get(0).getId(), id1);","lastModifiedDate":"2021-10-10"},{"lineNumber":74,"author":{"gitId":"eltonyeh"},"content":"        assertNotEquals(students.get(0).getId(), id2);","lastModifiedDate":"2021-10-10"},{"lineNumber":75,"author":{"gitId":"kvihashini"},"content":"        assertNotEquals(groups.get(0).getId(), id3);","lastModifiedDate":"2021-10-18"},{"lineNumber":76,"author":{"gitId":"eltonyeh"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":77,"author":{"gitId":"eltonyeh"},"content":"        // Different id -\u003e Not equal","lastModifiedDate":"2021-10-10"},{"lineNumber":78,"author":{"gitId":"eltonyeh"},"content":"        assertNotEquals(id1, id2);","lastModifiedDate":"2021-10-10"},{"lineNumber":79,"author":{"gitId":"eltonyeh"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":80,"author":{"gitId":"eltonyeh"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":81,"author":{"gitId":"eltonyeh"},"content":"    @Test","lastModifiedDate":"2021-10-10"},{"lineNumber":82,"author":{"gitId":"eltonyeh"},"content":"    public void toStringTest() {","lastModifiedDate":"2021-10-10"},{"lineNumber":83,"author":{"gitId":"eltonyeh"},"content":"        for (Task task : tasks) {","lastModifiedDate":"2021-10-10"},{"lineNumber":84,"author":{"gitId":"eltonyeh"},"content":"            assertTrue(task.getId().toString().startsWith(\"T-\"));","lastModifiedDate":"2021-10-10"},{"lineNumber":85,"author":{"gitId":"eltonyeh"},"content":"        }","lastModifiedDate":"2021-10-10"},{"lineNumber":86,"author":{"gitId":"eltonyeh"},"content":"        for (Person student : students) {","lastModifiedDate":"2021-10-10"},{"lineNumber":87,"author":{"gitId":"eltonyeh"},"content":"            assertTrue(student.getId().toString().startsWith(\"S-\"));","lastModifiedDate":"2021-10-10"},{"lineNumber":88,"author":{"gitId":"eltonyeh"},"content":"        }","lastModifiedDate":"2021-10-10"},{"lineNumber":89,"author":{"gitId":"kvihashini"},"content":"        for (Group group: groups) {","lastModifiedDate":"2021-10-18"},{"lineNumber":90,"author":{"gitId":"kvihashini"},"content":"            assertTrue(group.getId().toString().startsWith(\"G-\"));","lastModifiedDate":"2021-10-18"},{"lineNumber":91,"author":{"gitId":"kvihashini"},"content":"        }","lastModifiedDate":"2021-10-18"},{"lineNumber":92,"author":{"gitId":"eltonyeh"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":93,"author":{"gitId":"eltonyeh"},"content":"        HasUniqueIdStub hasUniqueIdStub \u003d new HasUniqueIdStub();","lastModifiedDate":"2021-10-10"},{"lineNumber":94,"author":{"gitId":"eltonyeh"},"content":"        assertEquals(\"#INVALID\", hasUniqueIdStub.getId().toString());","lastModifiedDate":"2021-10-10"},{"lineNumber":95,"author":{"gitId":"eltonyeh"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":96,"author":{"gitId":"eltonyeh"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":97,"author":{"gitId":"eltonyeh"},"content":"    public static class HasUniqueIdStub implements HasUniqueId {","lastModifiedDate":"2021-10-10"},{"lineNumber":98,"author":{"gitId":"eltonyeh"},"content":"        @Override","lastModifiedDate":"2021-10-10"},{"lineNumber":99,"author":{"gitId":"eltonyeh"},"content":"        public UniqueId getId() {","lastModifiedDate":"2021-10-10"},{"lineNumber":100,"author":{"gitId":"eltonyeh"},"content":"            return UniqueId.generateId(this);","lastModifiedDate":"2021-10-10"},{"lineNumber":101,"author":{"gitId":"eltonyeh"},"content":"        }","lastModifiedDate":"2021-10-10"},{"lineNumber":102,"author":{"gitId":"eltonyeh"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":103,"author":{"gitId":"eltonyeh"},"content":"}","lastModifiedDate":"2021-10-10"}],"authorContributionMap":{"Neha-5678":2,"kvihashini":18,"eltonyeh":83}},{"path":"src/test/java/seedu/address/model/lesson/LessonTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"tanhuakun"},"content":"package seedu.address.model.lesson;","lastModifiedDate":"2021-10-12"},{"lineNumber":2,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":3,"author":{"gitId":"tanhuakun"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-16"},{"lineNumber":4,"author":{"gitId":"tanhuakun"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-10-12"},{"lineNumber":5,"author":{"gitId":"tanhuakun"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-12"},{"lineNumber":6,"author":{"gitId":"tanhuakun"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2021-10-12"},{"lineNumber":7,"author":{"gitId":"tanhuakun"},"content":"import static seedu.address.testutil.TypicalLessons.MON_10_12_BIOLOGY;","lastModifiedDate":"2021-10-12"},{"lineNumber":8,"author":{"gitId":"tanhuakun"},"content":"import static seedu.address.testutil.TypicalLessons.MON_11_13_MATH;","lastModifiedDate":"2021-10-12"},{"lineNumber":9,"author":{"gitId":"tanhuakun"},"content":"import static seedu.address.testutil.TypicalLessons.MON_16_18_MATH;","lastModifiedDate":"2021-10-12"},{"lineNumber":10,"author":{"gitId":"tanhuakun"},"content":"import static seedu.address.testutil.TypicalLessons.TUE_16_18_ENGLISH;","lastModifiedDate":"2021-10-12"},{"lineNumber":11,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":12,"author":{"gitId":"tanhuakun"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-12"},{"lineNumber":13,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":14,"author":{"gitId":"tanhuakun"},"content":"import seedu.address.testutil.LessonBuilder;","lastModifiedDate":"2021-11-07"},{"lineNumber":15,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":16,"author":{"gitId":"tanhuakun"},"content":"class LessonTest {","lastModifiedDate":"2021-10-12"},{"lineNumber":17,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":18,"author":{"gitId":"tanhuakun"},"content":"    @Test","lastModifiedDate":"2021-10-12"},{"lineNumber":19,"author":{"gitId":"tanhuakun"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2021-10-12"},{"lineNumber":20,"author":{"gitId":"tanhuakun"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Lesson(null, null, null));","lastModifiedDate":"2021-10-20"},{"lineNumber":21,"author":{"gitId":"tanhuakun"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":22,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":23,"author":{"gitId":"tanhuakun"},"content":"    @Test","lastModifiedDate":"2021-10-12"},{"lineNumber":24,"author":{"gitId":"tanhuakun"},"content":"    void doLessonsOverlap_overlappingLessons_returnsTrue() {","lastModifiedDate":"2021-10-12"},{"lineNumber":25,"author":{"gitId":"tanhuakun"},"content":"        // overlapping timing same day","lastModifiedDate":"2021-10-12"},{"lineNumber":26,"author":{"gitId":"tanhuakun"},"content":"        assertTrue(MON_10_12_BIOLOGY.doLessonsOverlap(MON_11_13_MATH));","lastModifiedDate":"2021-10-12"},{"lineNumber":27,"author":{"gitId":"tanhuakun"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":28,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":29,"author":{"gitId":"tanhuakun"},"content":"    @Test","lastModifiedDate":"2021-10-12"},{"lineNumber":30,"author":{"gitId":"tanhuakun"},"content":"    void doLessonsOverlap_noOverlapLessons_returnsFalse() {","lastModifiedDate":"2021-10-12"},{"lineNumber":31,"author":{"gitId":"tanhuakun"},"content":"        // totally different","lastModifiedDate":"2021-10-12"},{"lineNumber":32,"author":{"gitId":"tanhuakun"},"content":"        assertFalse(MON_10_12_BIOLOGY.doLessonsOverlap(TUE_16_18_ENGLISH));","lastModifiedDate":"2021-10-12"},{"lineNumber":33,"author":{"gitId":"tanhuakun"},"content":"        // same timing different day","lastModifiedDate":"2021-10-12"},{"lineNumber":34,"author":{"gitId":"tanhuakun"},"content":"        assertFalse(MON_16_18_MATH.doLessonsOverlap(TUE_16_18_ENGLISH));","lastModifiedDate":"2021-10-12"},{"lineNumber":35,"author":{"gitId":"tanhuakun"},"content":"        // same day different timing","lastModifiedDate":"2021-10-12"},{"lineNumber":36,"author":{"gitId":"tanhuakun"},"content":"        assertFalse(MON_10_12_BIOLOGY.doLessonsOverlap(MON_16_18_MATH));","lastModifiedDate":"2021-10-12"},{"lineNumber":37,"author":{"gitId":"tanhuakun"},"content":"        // same name different timing","lastModifiedDate":"2021-10-12"},{"lineNumber":38,"author":{"gitId":"tanhuakun"},"content":"        assertFalse(MON_11_13_MATH.doLessonsOverlap(MON_16_18_MATH));","lastModifiedDate":"2021-10-12"},{"lineNumber":39,"author":{"gitId":"tanhuakun"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":40,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":41,"author":{"gitId":"tanhuakun"},"content":"    @Test","lastModifiedDate":"2021-10-16"},{"lineNumber":42,"author":{"gitId":"tanhuakun"},"content":"    void compareToTest() {","lastModifiedDate":"2021-10-16"},{"lineNumber":43,"author":{"gitId":"tanhuakun"},"content":"        // Mon 10-12 is earlier than Tue 16-18","lastModifiedDate":"2021-10-16"},{"lineNumber":44,"author":{"gitId":"tanhuakun"},"content":"        assertEquals(MON_10_12_BIOLOGY.compareTo(TUE_16_18_ENGLISH), -1);","lastModifiedDate":"2021-10-16"},{"lineNumber":45,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":46,"author":{"gitId":"tanhuakun"},"content":"        // 16:00-18:00 is later than 10:00 - 12:00","lastModifiedDate":"2021-10-16"},{"lineNumber":47,"author":{"gitId":"tanhuakun"},"content":"        assertEquals(MON_16_18_MATH.compareTo(MON_10_12_BIOLOGY), 1);","lastModifiedDate":"2021-10-16"},{"lineNumber":48,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":49,"author":{"gitId":"tanhuakun"},"content":"        // equal","lastModifiedDate":"2021-10-16"},{"lineNumber":50,"author":{"gitId":"tanhuakun"},"content":"        assertEquals(MON_10_12_BIOLOGY.compareTo(MON_10_12_BIOLOGY), 0);","lastModifiedDate":"2021-10-16"},{"lineNumber":51,"author":{"gitId":"tanhuakun"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":52,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":53,"author":{"gitId":"tanhuakun"},"content":"    @Test","lastModifiedDate":"2021-10-12"},{"lineNumber":54,"author":{"gitId":"tanhuakun"},"content":"    void testEquals() {","lastModifiedDate":"2021-11-07"},{"lineNumber":55,"author":{"gitId":"tanhuakun"},"content":"        // same details","lastModifiedDate":"2021-11-07"},{"lineNumber":56,"author":{"gitId":"tanhuakun"},"content":"        Lesson lesson \u003d new LessonBuilder().withTimeslot(\"10:00\", \"14:00\").withSubject(\"Math\").withDayOfWeek(5).build();","lastModifiedDate":"2021-11-07"},{"lineNumber":57,"author":{"gitId":"tanhuakun"},"content":"        Lesson sameDetails \u003d new LessonBuilder(lesson).build();","lastModifiedDate":"2021-11-07"},{"lineNumber":58,"author":{"gitId":"tanhuakun"},"content":"        assertTrue(lesson.equals(sameDetails));","lastModifiedDate":"2021-11-07"},{"lineNumber":59,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":60,"author":{"gitId":"tanhuakun"},"content":"        // different timeslot","lastModifiedDate":"2021-11-07"},{"lineNumber":61,"author":{"gitId":"tanhuakun"},"content":"        Lesson differentTimeslot \u003d new LessonBuilder(lesson).withTimeslot(\"12:00\", \"16:00\").build();","lastModifiedDate":"2021-11-07"},{"lineNumber":62,"author":{"gitId":"tanhuakun"},"content":"        assertFalse(lesson.equals(differentTimeslot));","lastModifiedDate":"2021-11-07"},{"lineNumber":63,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":64,"author":{"gitId":"tanhuakun"},"content":"        // different subject","lastModifiedDate":"2021-11-07"},{"lineNumber":65,"author":{"gitId":"tanhuakun"},"content":"        Lesson differentSubject \u003d new LessonBuilder(lesson).withSubject(\"Biology\").build();","lastModifiedDate":"2021-11-07"},{"lineNumber":66,"author":{"gitId":"tanhuakun"},"content":"        assertFalse(lesson.equals(differentSubject));","lastModifiedDate":"2021-11-07"},{"lineNumber":67,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":68,"author":{"gitId":"tanhuakun"},"content":"        // different day of week","lastModifiedDate":"2021-11-07"},{"lineNumber":69,"author":{"gitId":"tanhuakun"},"content":"        Lesson differentDay \u003d new LessonBuilder(lesson).withDayOfWeek(2).build();","lastModifiedDate":"2021-11-07"},{"lineNumber":70,"author":{"gitId":"tanhuakun"},"content":"        assertFalse(lesson.equals(differentDay));","lastModifiedDate":"2021-11-07"},{"lineNumber":71,"author":{"gitId":"tanhuakun"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":72,"author":{"gitId":"tanhuakun"},"content":"}","lastModifiedDate":"2021-10-12"}],"authorContributionMap":{"tanhuakun":72}},{"path":"src/test/java/seedu/address/model/lesson/NoOverlapLessonListTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"tanhuakun"},"content":"package seedu.address.model.lesson;","lastModifiedDate":"2021-10-12"},{"lineNumber":2,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":3,"author":{"gitId":"tanhuakun"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-12"},{"lineNumber":4,"author":{"gitId":"tanhuakun"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-10-12"},{"lineNumber":5,"author":{"gitId":"tanhuakun"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-12"},{"lineNumber":6,"author":{"gitId":"tanhuakun"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2021-10-12"},{"lineNumber":7,"author":{"gitId":"tanhuakun"},"content":"import static seedu.address.testutil.TypicalLessons.MON_10_12_BIOLOGY;","lastModifiedDate":"2021-10-12"},{"lineNumber":8,"author":{"gitId":"tanhuakun"},"content":"import static seedu.address.testutil.TypicalLessons.MON_11_13_MATH;","lastModifiedDate":"2021-10-12"},{"lineNumber":9,"author":{"gitId":"tanhuakun"},"content":"import static seedu.address.testutil.TypicalLessons.MON_16_18_MATH;","lastModifiedDate":"2021-10-12"},{"lineNumber":10,"author":{"gitId":"tanhuakun"},"content":"import static seedu.address.testutil.TypicalLessons.TUE_16_18_ENGLISH;","lastModifiedDate":"2021-10-12"},{"lineNumber":11,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":12,"author":{"gitId":"tanhuakun"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-10-12"},{"lineNumber":13,"author":{"gitId":"tanhuakun"},"content":"import java.util.List;","lastModifiedDate":"2021-10-12"},{"lineNumber":14,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":15,"author":{"gitId":"tanhuakun"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-12"},{"lineNumber":16,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":17,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":18,"author":{"gitId":"tanhuakun"},"content":"public class NoOverlapLessonListTest {","lastModifiedDate":"2021-10-12"},{"lineNumber":19,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":20,"author":{"gitId":"tanhuakun"},"content":"    @Test","lastModifiedDate":"2021-10-12"},{"lineNumber":21,"author":{"gitId":"tanhuakun"},"content":"    void doAnyLessonsOverlap_noOverlap_returnFalse() {","lastModifiedDate":"2021-10-12"},{"lineNumber":22,"author":{"gitId":"tanhuakun"},"content":"        List\u003cLesson\u003e lessonList \u003d Arrays.asList(MON_10_12_BIOLOGY, MON_16_18_MATH, TUE_16_18_ENGLISH);","lastModifiedDate":"2021-10-12"},{"lineNumber":23,"author":{"gitId":"tanhuakun"},"content":"        assertFalse(NoOverlapLessonList.doAnyLessonsOverlap(lessonList));","lastModifiedDate":"2021-10-12"},{"lineNumber":24,"author":{"gitId":"tanhuakun"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":25,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":26,"author":{"gitId":"tanhuakun"},"content":"    @Test","lastModifiedDate":"2021-10-12"},{"lineNumber":27,"author":{"gitId":"tanhuakun"},"content":"    void doAnyLessonsOverlap_overlaps_returnTrue() {","lastModifiedDate":"2021-10-12"},{"lineNumber":28,"author":{"gitId":"tanhuakun"},"content":"        List\u003cLesson\u003e lessonList \u003d Arrays.asList(MON_10_12_BIOLOGY, MON_16_18_MATH, TUE_16_18_ENGLISH,","lastModifiedDate":"2021-10-12"},{"lineNumber":29,"author":{"gitId":"tanhuakun"},"content":"                MON_11_13_MATH);","lastModifiedDate":"2021-10-12"},{"lineNumber":30,"author":{"gitId":"tanhuakun"},"content":"        assertTrue(NoOverlapLessonList.doAnyLessonsOverlap(lessonList));","lastModifiedDate":"2021-10-12"},{"lineNumber":31,"author":{"gitId":"tanhuakun"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":32,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":33,"author":{"gitId":"tanhuakun"},"content":"    @Test","lastModifiedDate":"2021-10-12"},{"lineNumber":34,"author":{"gitId":"tanhuakun"},"content":"    void doesLessonOverlap_overlappingLesson_returnTrue() {","lastModifiedDate":"2021-10-12"},{"lineNumber":35,"author":{"gitId":"tanhuakun"},"content":"        List\u003cLesson\u003e lessonList \u003d Arrays.asList(MON_10_12_BIOLOGY, MON_16_18_MATH, TUE_16_18_ENGLISH);","lastModifiedDate":"2021-10-12"},{"lineNumber":36,"author":{"gitId":"tanhuakun"},"content":"        NoOverlapLessonList noOverlapLessonList \u003d NoOverlapLessonList.of(lessonList);","lastModifiedDate":"2021-10-12"},{"lineNumber":37,"author":{"gitId":"tanhuakun"},"content":"        // test above list with new lesson below","lastModifiedDate":"2021-11-07"},{"lineNumber":38,"author":{"gitId":"tanhuakun"},"content":"        assertTrue(noOverlapLessonList.doesLessonOverlap(MON_11_13_MATH));","lastModifiedDate":"2021-10-12"},{"lineNumber":39,"author":{"gitId":"tanhuakun"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":40,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":41,"author":{"gitId":"tanhuakun"},"content":"    @Test","lastModifiedDate":"2021-10-12"},{"lineNumber":42,"author":{"gitId":"tanhuakun"},"content":"    void isValidIndex() {","lastModifiedDate":"2021-10-12"},{"lineNumber":43,"author":{"gitId":"tanhuakun"},"content":"        List\u003cLesson\u003e lessonList \u003d Arrays.asList(MON_10_12_BIOLOGY, MON_16_18_MATH, TUE_16_18_ENGLISH);","lastModifiedDate":"2021-10-12"},{"lineNumber":44,"author":{"gitId":"tanhuakun"},"content":"        NoOverlapLessonList noOverlapLessonList \u003d NoOverlapLessonList.of(lessonList);","lastModifiedDate":"2021-10-12"},{"lineNumber":45,"author":{"gitId":"tanhuakun"},"content":"        assertFalse(noOverlapLessonList.isValidIndex(-1));","lastModifiedDate":"2021-11-07"},{"lineNumber":46,"author":{"gitId":"tanhuakun"},"content":"        assertTrue(noOverlapLessonList.isValidIndex(0));","lastModifiedDate":"2021-11-07"},{"lineNumber":47,"author":{"gitId":"tanhuakun"},"content":"        assertTrue(noOverlapLessonList.isValidIndex(2));","lastModifiedDate":"2021-11-07"},{"lineNumber":48,"author":{"gitId":"tanhuakun"},"content":"        assertFalse(noOverlapLessonList.isValidIndex(100));","lastModifiedDate":"2021-10-12"},{"lineNumber":49,"author":{"gitId":"tanhuakun"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":50,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":51,"author":{"gitId":"tanhuakun"},"content":"    @Test","lastModifiedDate":"2021-10-12"},{"lineNumber":52,"author":{"gitId":"tanhuakun"},"content":"    void addLesson_validLesson_returnsNewInstanceWithLesson() {","lastModifiedDate":"2021-10-12"},{"lineNumber":53,"author":{"gitId":"tanhuakun"},"content":"        List\u003cLesson\u003e lessonList \u003d Arrays.asList(MON_10_12_BIOLOGY, MON_16_18_MATH);","lastModifiedDate":"2021-10-12"},{"lineNumber":54,"author":{"gitId":"tanhuakun"},"content":"        NoOverlapLessonList noOverlapLessonList \u003d NoOverlapLessonList.of(lessonList);","lastModifiedDate":"2021-10-12"},{"lineNumber":55,"author":{"gitId":"tanhuakun"},"content":"        NoOverlapLessonList addedList \u003d noOverlapLessonList.addLesson(TUE_16_18_ENGLISH);","lastModifiedDate":"2021-10-12"},{"lineNumber":56,"author":{"gitId":"tanhuakun"},"content":"        assertEquals(addedList.getLessons().get(2), TUE_16_18_ENGLISH);","lastModifiedDate":"2021-10-12"},{"lineNumber":57,"author":{"gitId":"tanhuakun"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":58,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":59,"author":{"gitId":"tanhuakun"},"content":"    @Test","lastModifiedDate":"2021-10-12"},{"lineNumber":60,"author":{"gitId":"tanhuakun"},"content":"    void addLesson_nullLesson_throwsNullPointerException() {","lastModifiedDate":"2021-10-12"},{"lineNumber":61,"author":{"gitId":"tanhuakun"},"content":"        NoOverlapLessonList lessonList \u003d new NoOverlapLessonList();","lastModifiedDate":"2021-10-12"},{"lineNumber":62,"author":{"gitId":"tanhuakun"},"content":"        assertThrows(NullPointerException.class, () -\u003e lessonList.addLesson(null));","lastModifiedDate":"2021-10-12"},{"lineNumber":63,"author":{"gitId":"tanhuakun"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":64,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":65,"author":{"gitId":"tanhuakun"},"content":"    @Test","lastModifiedDate":"2021-10-12"},{"lineNumber":66,"author":{"gitId":"tanhuakun"},"content":"    void removeLesson_validIndex_returnsNewInstanceWithoutLesson() {","lastModifiedDate":"2021-10-12"},{"lineNumber":67,"author":{"gitId":"tanhuakun"},"content":"        List\u003cLesson\u003e lessonList \u003d Arrays.asList(MON_10_12_BIOLOGY, MON_16_18_MATH, TUE_16_18_ENGLISH);","lastModifiedDate":"2021-10-12"},{"lineNumber":68,"author":{"gitId":"tanhuakun"},"content":"        NoOverlapLessonList noOverlapLessonList \u003d NoOverlapLessonList.of(lessonList);","lastModifiedDate":"2021-10-12"},{"lineNumber":69,"author":{"gitId":"tanhuakun"},"content":"        NoOverlapLessonList removedList \u003d noOverlapLessonList.removeLesson(2);","lastModifiedDate":"2021-10-12"},{"lineNumber":70,"author":{"gitId":"tanhuakun"},"content":"        assertEquals(removedList.getLessons().size(), 2);","lastModifiedDate":"2021-10-12"},{"lineNumber":71,"author":{"gitId":"tanhuakun"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":72,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":73,"author":{"gitId":"tanhuakun"},"content":"    @Test","lastModifiedDate":"2021-10-12"},{"lineNumber":74,"author":{"gitId":"tanhuakun"},"content":"    void removeLesson_inValidIndex_throwsIndexOutOfBoundsException() {","lastModifiedDate":"2021-10-12"},{"lineNumber":75,"author":{"gitId":"tanhuakun"},"content":"        NoOverlapLessonList lessonList \u003d new NoOverlapLessonList();","lastModifiedDate":"2021-10-12"},{"lineNumber":76,"author":{"gitId":"tanhuakun"},"content":"        assertThrows(IndexOutOfBoundsException.class, () -\u003e lessonList.removeLesson(1));","lastModifiedDate":"2021-10-12"},{"lineNumber":77,"author":{"gitId":"tanhuakun"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":78,"author":{"gitId":"tanhuakun"},"content":"}","lastModifiedDate":"2021-10-12"},{"lineNumber":79,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-10-12"}],"authorContributionMap":{"tanhuakun":79}},{"path":"src/test/java/seedu/address/model/lesson/SubjectTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"tanhuakun"},"content":"package seedu.address.model.lesson;","lastModifiedDate":"2021-10-12"},{"lineNumber":2,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":3,"author":{"gitId":"tanhuakun"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-10-12"},{"lineNumber":4,"author":{"gitId":"tanhuakun"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-12"},{"lineNumber":5,"author":{"gitId":"tanhuakun"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2021-10-12"},{"lineNumber":6,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":7,"author":{"gitId":"tanhuakun"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-12"},{"lineNumber":8,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":9,"author":{"gitId":"tanhuakun"},"content":"class SubjectTest {","lastModifiedDate":"2021-10-12"},{"lineNumber":10,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":11,"author":{"gitId":"tanhuakun"},"content":"    @Test","lastModifiedDate":"2021-10-12"},{"lineNumber":12,"author":{"gitId":"tanhuakun"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2021-10-12"},{"lineNumber":13,"author":{"gitId":"tanhuakun"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Subject(null));","lastModifiedDate":"2021-10-12"},{"lineNumber":14,"author":{"gitId":"tanhuakun"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":15,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":16,"author":{"gitId":"tanhuakun"},"content":"    @Test","lastModifiedDate":"2021-10-12"},{"lineNumber":17,"author":{"gitId":"tanhuakun"},"content":"    public void constructor_invalidAddress_throwsIllegalArgumentException() {","lastModifiedDate":"2021-10-12"},{"lineNumber":18,"author":{"gitId":"tanhuakun"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Subject(\"\"));","lastModifiedDate":"2021-10-12"},{"lineNumber":19,"author":{"gitId":"tanhuakun"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":20,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":21,"author":{"gitId":"tanhuakun"},"content":"    @Test","lastModifiedDate":"2021-10-12"},{"lineNumber":22,"author":{"gitId":"tanhuakun"},"content":"    void isValidSubject_invalidSubject_returnsFalse() {","lastModifiedDate":"2021-10-12"},{"lineNumber":23,"author":{"gitId":"tanhuakun"},"content":"        // no characters","lastModifiedDate":"2021-11-07"},{"lineNumber":24,"author":{"gitId":"tanhuakun"},"content":"        assertFalse(Subject.isValidSubject(\"\"));","lastModifiedDate":"2021-10-12"},{"lineNumber":25,"author":{"gitId":"tanhuakun"},"content":"        assertFalse(Subject.isValidSubject(\"-\"));","lastModifiedDate":"2021-10-12"},{"lineNumber":26,"author":{"gitId":"tanhuakun"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":27,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":28,"author":{"gitId":"tanhuakun"},"content":"    @Test","lastModifiedDate":"2021-10-12"},{"lineNumber":29,"author":{"gitId":"tanhuakun"},"content":"    void isValidSubject_validSubject_returnsTrue() {","lastModifiedDate":"2021-10-12"},{"lineNumber":30,"author":{"gitId":"tanhuakun"},"content":"        // single number","lastModifiedDate":"2021-11-07"},{"lineNumber":31,"author":{"gitId":"tanhuakun"},"content":"        assertTrue(Subject.isValidSubject(\"1\"));","lastModifiedDate":"2021-11-07"},{"lineNumber":32,"author":{"gitId":"tanhuakun"},"content":"        // single character","lastModifiedDate":"2021-11-07"},{"lineNumber":33,"author":{"gitId":"tanhuakun"},"content":"        assertTrue(Subject.isValidSubject(\"E\"));","lastModifiedDate":"2021-11-07"},{"lineNumber":34,"author":{"gitId":"tanhuakun"},"content":"        // word with numbers","lastModifiedDate":"2021-11-07"},{"lineNumber":35,"author":{"gitId":"tanhuakun"},"content":"        assertTrue(Subject.isValidSubject(\"English123\"));","lastModifiedDate":"2021-11-07"},{"lineNumber":36,"author":{"gitId":"tanhuakun"},"content":"        // word with symbols","lastModifiedDate":"2021-11-07"},{"lineNumber":37,"author":{"gitId":"tanhuakun"},"content":"        assertTrue(Subject.isValidSubject(\"English-Basic\"));","lastModifiedDate":"2021-11-07"},{"lineNumber":38,"author":{"gitId":"tanhuakun"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":39,"author":{"gitId":"tanhuakun"},"content":"}","lastModifiedDate":"2021-10-12"}],"authorContributionMap":{"tanhuakun":39}},{"path":"src/test/java/seedu/address/model/lesson/TimeslotTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"tanhuakun"},"content":"package seedu.address.model.lesson;","lastModifiedDate":"2021-10-12"},{"lineNumber":2,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":3,"author":{"gitId":"tanhuakun"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-12"},{"lineNumber":4,"author":{"gitId":"tanhuakun"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-10-12"},{"lineNumber":5,"author":{"gitId":"tanhuakun"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2021-11-07"},{"lineNumber":6,"author":{"gitId":"tanhuakun"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-12"},{"lineNumber":7,"author":{"gitId":"tanhuakun"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2021-10-12"},{"lineNumber":8,"author":{"gitId":"tanhuakun"},"content":"import static seedu.address.testutil.TypicalTimeslots.ELEVEN_TO_ONE;","lastModifiedDate":"2021-10-12"},{"lineNumber":9,"author":{"gitId":"tanhuakun"},"content":"import static seedu.address.testutil.TypicalTimeslots.TEN_TO_TWELVE;","lastModifiedDate":"2021-10-12"},{"lineNumber":10,"author":{"gitId":"tanhuakun"},"content":"import static seedu.address.testutil.TypicalTimeslots.TWELVE_TO_TWO;","lastModifiedDate":"2021-10-12"},{"lineNumber":11,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":12,"author":{"gitId":"tanhuakun"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-12"},{"lineNumber":13,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":14,"author":{"gitId":"tanhuakun"},"content":"class TimeslotTest {","lastModifiedDate":"2021-10-12"},{"lineNumber":15,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":16,"author":{"gitId":"tanhuakun"},"content":"    @Test","lastModifiedDate":"2021-10-12"},{"lineNumber":17,"author":{"gitId":"tanhuakun"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2021-10-12"},{"lineNumber":18,"author":{"gitId":"tanhuakun"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Timeslot(null, null));","lastModifiedDate":"2021-10-12"},{"lineNumber":19,"author":{"gitId":"tanhuakun"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":20,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":21,"author":{"gitId":"tanhuakun"},"content":"    @Test","lastModifiedDate":"2021-10-12"},{"lineNumber":22,"author":{"gitId":"tanhuakun"},"content":"    public void constructor_invalidTimings_throwsIllegalArgumentException() {","lastModifiedDate":"2021-10-12"},{"lineNumber":23,"author":{"gitId":"tanhuakun"},"content":"        // invalid format","lastModifiedDate":"2021-10-12"},{"lineNumber":24,"author":{"gitId":"tanhuakun"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Timeslot(\"....\", \"._.\"));","lastModifiedDate":"2021-10-12"},{"lineNumber":25,"author":{"gitId":"tanhuakun"},"content":"        // end time earlier than start time","lastModifiedDate":"2021-10-12"},{"lineNumber":26,"author":{"gitId":"tanhuakun"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Timeslot(\"14:00\", \"12:00\"));","lastModifiedDate":"2021-10-12"},{"lineNumber":27,"author":{"gitId":"tanhuakun"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":28,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":29,"author":{"gitId":"tanhuakun"},"content":"    @Test","lastModifiedDate":"2021-10-12"},{"lineNumber":30,"author":{"gitId":"tanhuakun"},"content":"    void isValidTimeslot_invalidTimings_returnsFalse() {","lastModifiedDate":"2021-10-12"},{"lineNumber":31,"author":{"gitId":"tanhuakun"},"content":"        assertFalse(Timeslot.isValidTimeslot(\"hahahaha\", \"thisiswrong\"));","lastModifiedDate":"2021-10-12"},{"lineNumber":32,"author":{"gitId":"tanhuakun"},"content":"        assertFalse(Timeslot.isValidTimeslot(\"15:00\", \"14:00\"));","lastModifiedDate":"2021-10-12"},{"lineNumber":33,"author":{"gitId":"tanhuakun"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":34,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":35,"author":{"gitId":"tanhuakun"},"content":"    @Test","lastModifiedDate":"2021-10-12"},{"lineNumber":36,"author":{"gitId":"tanhuakun"},"content":"    void isValidTimeslot_validTimings_returnsTrue() {","lastModifiedDate":"2021-10-12"},{"lineNumber":37,"author":{"gitId":"tanhuakun"},"content":"        assertTrue(Timeslot.isValidTimeslot(\"14:00\", \"15:00\"));","lastModifiedDate":"2021-11-07"},{"lineNumber":38,"author":{"gitId":"tanhuakun"},"content":"        assertTrue(Timeslot.isValidTimeslot(\"15:00\", \"15:01\"));","lastModifiedDate":"2021-10-12"},{"lineNumber":39,"author":{"gitId":"tanhuakun"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":40,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":41,"author":{"gitId":"tanhuakun"},"content":"    @Test","lastModifiedDate":"2021-10-12"},{"lineNumber":42,"author":{"gitId":"tanhuakun"},"content":"    void doTimingsOverlap_overlappingTimeslots_returnsTrue() {","lastModifiedDate":"2021-10-12"},{"lineNumber":43,"author":{"gitId":"tanhuakun"},"content":"        assertTrue(TEN_TO_TWELVE.doTimingsOverlap(ELEVEN_TO_ONE));","lastModifiedDate":"2021-10-12"},{"lineNumber":44,"author":{"gitId":"tanhuakun"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":45,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":46,"author":{"gitId":"tanhuakun"},"content":"    @Test","lastModifiedDate":"2021-10-12"},{"lineNumber":47,"author":{"gitId":"tanhuakun"},"content":"    void doTimingsOverlap_noOverlapTimeslots_returnsFalse() {","lastModifiedDate":"2021-10-12"},{"lineNumber":48,"author":{"gitId":"tanhuakun"},"content":"        assertFalse(TEN_TO_TWELVE.doTimingsOverlap(TWELVE_TO_TWO));","lastModifiedDate":"2021-10-12"},{"lineNumber":49,"author":{"gitId":"tanhuakun"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":50,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":51,"author":{"gitId":"tanhuakun"},"content":"    @Test","lastModifiedDate":"2021-10-12"},{"lineNumber":52,"author":{"gitId":"tanhuakun"},"content":"    void testEquals_sameTimings_returnsTrue() {","lastModifiedDate":"2021-10-12"},{"lineNumber":53,"author":{"gitId":"tanhuakun"},"content":"        Timeslot t1 \u003d new Timeslot(\"10:00\", \"12:00\");","lastModifiedDate":"2021-10-12"},{"lineNumber":54,"author":{"gitId":"tanhuakun"},"content":"        Timeslot t2 \u003d new Timeslot(\"10:00\", \"12:00\");","lastModifiedDate":"2021-10-12"},{"lineNumber":55,"author":{"gitId":"tanhuakun"},"content":"        assertEquals(t1, t2);","lastModifiedDate":"2021-10-12"},{"lineNumber":56,"author":{"gitId":"tanhuakun"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":57,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-11-07"},{"lineNumber":58,"author":{"gitId":"tanhuakun"},"content":"    @Test","lastModifiedDate":"2021-11-07"},{"lineNumber":59,"author":{"gitId":"tanhuakun"},"content":"    void testEquals_sameTimings_returnsFalse() {","lastModifiedDate":"2021-11-07"},{"lineNumber":60,"author":{"gitId":"tanhuakun"},"content":"        Timeslot timeSlot \u003d new Timeslot(\"10:00\", \"12:00\");","lastModifiedDate":"2021-11-07"},{"lineNumber":61,"author":{"gitId":"tanhuakun"},"content":"        Timeslot differentEnd \u003d new Timeslot(\"10:00\", \"11:00\");","lastModifiedDate":"2021-11-07"},{"lineNumber":62,"author":{"gitId":"tanhuakun"},"content":"        Timeslot differentStart \u003d new Timeslot(\"11:00\", \"12:00\");","lastModifiedDate":"2021-11-07"},{"lineNumber":63,"author":{"gitId":"tanhuakun"},"content":"        assertNotEquals(timeSlot, differentEnd);","lastModifiedDate":"2021-11-07"},{"lineNumber":64,"author":{"gitId":"tanhuakun"},"content":"        assertNotEquals(timeSlot, differentStart);","lastModifiedDate":"2021-11-07"},{"lineNumber":65,"author":{"gitId":"tanhuakun"},"content":"    }","lastModifiedDate":"2021-11-07"},{"lineNumber":66,"author":{"gitId":"tanhuakun"},"content":"}","lastModifiedDate":"2021-10-12"}],"authorContributionMap":{"tanhuakun":66}},{"path":"src/test/java/seedu/address/model/person/ExamTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"tanhuakun"},"content":"package seedu.address.model.person;","lastModifiedDate":"2021-10-25"},{"lineNumber":2,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":3,"author":{"gitId":"tanhuakun"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-25"},{"lineNumber":4,"author":{"gitId":"tanhuakun"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2021-10-25"},{"lineNumber":5,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":6,"author":{"gitId":"tanhuakun"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-10-25"},{"lineNumber":7,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":8,"author":{"gitId":"tanhuakun"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-25"},{"lineNumber":9,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":10,"author":{"gitId":"tanhuakun"},"content":"import seedu.address.model.lesson.Subject;","lastModifiedDate":"2021-10-25"},{"lineNumber":11,"author":{"gitId":"tanhuakun"},"content":"import seedu.address.testutil.TestUtil;","lastModifiedDate":"2021-10-25"},{"lineNumber":12,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":13,"author":{"gitId":"tanhuakun"},"content":"class ExamTest {","lastModifiedDate":"2021-10-25"},{"lineNumber":14,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":15,"author":{"gitId":"tanhuakun"},"content":"    private Subject math \u003d new Subject(\"Math\");","lastModifiedDate":"2021-10-25"},{"lineNumber":16,"author":{"gitId":"tanhuakun"},"content":"    private Subject biology \u003d new Subject(\"Biology\");","lastModifiedDate":"2021-10-25"},{"lineNumber":17,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":18,"author":{"gitId":"tanhuakun"},"content":"    private LocalDateTime january1Late \u003d TestUtil.createLocalDateTime(\"2021-01-01 23:59\");","lastModifiedDate":"2021-10-25"},{"lineNumber":19,"author":{"gitId":"tanhuakun"},"content":"    private LocalDateTime january1Early \u003d TestUtil.createLocalDateTime(\"2021-01-01 00:01\");","lastModifiedDate":"2021-10-25"},{"lineNumber":20,"author":{"gitId":"tanhuakun"},"content":"    private LocalDateTime january2Late \u003d TestUtil.createLocalDateTime(\"2021-01-02 23:59\");","lastModifiedDate":"2021-10-25"},{"lineNumber":21,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":22,"author":{"gitId":"tanhuakun"},"content":"    @Test","lastModifiedDate":"2021-10-25"},{"lineNumber":23,"author":{"gitId":"tanhuakun"},"content":"    void testEquals_sameDetailsDifferentObjects_returnsTrue() {","lastModifiedDate":"2021-10-25"},{"lineNumber":24,"author":{"gitId":"tanhuakun"},"content":"        Subject math2 \u003d new Subject(\"Math\");","lastModifiedDate":"2021-10-25"},{"lineNumber":25,"author":{"gitId":"tanhuakun"},"content":"        LocalDateTime january1Late2 \u003d TestUtil.createLocalDateTime(\"2021-01-01 23:59\");","lastModifiedDate":"2021-10-25"},{"lineNumber":26,"author":{"gitId":"tanhuakun"},"content":"        assertEquals(new Exam(math, january1Late), new Exam(math2, january1Late2));","lastModifiedDate":"2021-10-25"},{"lineNumber":27,"author":{"gitId":"tanhuakun"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":28,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":29,"author":{"gitId":"tanhuakun"},"content":"    @Test","lastModifiedDate":"2021-10-25"},{"lineNumber":30,"author":{"gitId":"tanhuakun"},"content":"    void testEquals_differentDetails_returnsFalse() {","lastModifiedDate":"2021-10-25"},{"lineNumber":31,"author":{"gitId":"tanhuakun"},"content":"        // same time different subject","lastModifiedDate":"2021-10-25"},{"lineNumber":32,"author":{"gitId":"tanhuakun"},"content":"        assertNotEquals(new Exam(math, january1Late), new Exam(biology, january1Late));","lastModifiedDate":"2021-10-25"},{"lineNumber":33,"author":{"gitId":"tanhuakun"},"content":"        // same subject different time","lastModifiedDate":"2021-10-25"},{"lineNumber":34,"author":{"gitId":"tanhuakun"},"content":"        assertNotEquals(new Exam(math, january1Late), new Exam(math, january2Late));","lastModifiedDate":"2021-10-25"},{"lineNumber":35,"author":{"gitId":"tanhuakun"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":36,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":37,"author":{"gitId":"tanhuakun"},"content":"    @Test","lastModifiedDate":"2021-10-25"},{"lineNumber":38,"author":{"gitId":"tanhuakun"},"content":"    void compareTo() {","lastModifiedDate":"2021-10-25"},{"lineNumber":39,"author":{"gitId":"tanhuakun"},"content":"        Subject math \u003d new Subject(\"Math\");","lastModifiedDate":"2021-10-25"},{"lineNumber":40,"author":{"gitId":"tanhuakun"},"content":"        Exam jan1Late \u003d new Exam(math, january1Late);","lastModifiedDate":"2021-10-25"},{"lineNumber":41,"author":{"gitId":"tanhuakun"},"content":"        Exam jan1Early \u003d new Exam(math, january1Early);","lastModifiedDate":"2021-10-25"},{"lineNumber":42,"author":{"gitId":"tanhuakun"},"content":"        Exam jan2Late \u003d new Exam(math, january2Late);","lastModifiedDate":"2021-10-25"},{"lineNumber":43,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":44,"author":{"gitId":"tanhuakun"},"content":"        // different time, same day","lastModifiedDate":"2021-10-25"},{"lineNumber":45,"author":{"gitId":"tanhuakun"},"content":"        assertEquals(jan1Late.compareTo(jan1Early), 1);","lastModifiedDate":"2021-10-25"},{"lineNumber":46,"author":{"gitId":"tanhuakun"},"content":"        assertEquals(jan1Early.compareTo(jan1Late), -1);","lastModifiedDate":"2021-10-25"},{"lineNumber":47,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":48,"author":{"gitId":"tanhuakun"},"content":"        // different day, same time","lastModifiedDate":"2021-10-25"},{"lineNumber":49,"author":{"gitId":"tanhuakun"},"content":"        assertEquals(jan2Late.compareTo(jan1Late), 1);","lastModifiedDate":"2021-10-25"},{"lineNumber":50,"author":{"gitId":"tanhuakun"},"content":"        assertEquals(jan1Late.compareTo(jan2Late), -1);","lastModifiedDate":"2021-10-25"},{"lineNumber":51,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":52,"author":{"gitId":"tanhuakun"},"content":"        // exactly the same, should be 0.","lastModifiedDate":"2021-10-25"},{"lineNumber":53,"author":{"gitId":"tanhuakun"},"content":"        assertEquals(jan1Early.compareTo(jan1Early), 0);","lastModifiedDate":"2021-10-25"},{"lineNumber":54,"author":{"gitId":"tanhuakun"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":55,"author":{"gitId":"tanhuakun"},"content":"}","lastModifiedDate":"2021-10-25"}],"authorContributionMap":{"tanhuakun":55}},{"path":"src/test/java/seedu/address/model/person/PersonTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.model.person;","lastModifiedDate":"2018-03-26"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2019-03-15"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2018-04-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.ALICE;","lastModifiedDate":"2018-04-19"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.BOB;","lastModifiedDate":"2018-04-19"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.testutil.PersonBuilder;","lastModifiedDate":"2018-03-26"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class PersonTest {","lastModifiedDate":"2018-03-26"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-01"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2017-09-01"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    public void asObservableList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2017-09-01"},{"lineNumber":22,"author":{"gitId":"-"},"content":"        Person person \u003d new PersonBuilder().build();","lastModifiedDate":"2018-03-26"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e person.getTags().remove(0));","lastModifiedDate":"2019-03-23"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-09-01"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-19"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public void isSamePerson() {","lastModifiedDate":"2018-04-19"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2018-04-19"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.isSamePerson(ALICE));","lastModifiedDate":"2018-04-19"},{"lineNumber":30,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":32,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.isSamePerson(null));","lastModifiedDate":"2018-04-19"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":34,"author":{"gitId":"eltonyeh"},"content":"        // same name, phone number and email, all other attributes different -\u003e returns true","lastModifiedDate":"2021-11-05"},{"lineNumber":35,"author":{"gitId":"eltonyeh"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withAddress(VALID_ADDRESS_BOB)","lastModifiedDate":"2021-11-05"},{"lineNumber":36,"author":{"gitId":"eltonyeh"},"content":"                .withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2021-11-05"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.isSamePerson(editedAlice));","lastModifiedDate":"2020-12-18"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":39,"author":{"gitId":"eltonyeh"},"content":"        // same name, all other attributes different -\u003e returns false","lastModifiedDate":"2021-11-05"},{"lineNumber":40,"author":{"gitId":"eltonyeh"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withPhone(VALID_PHONE_BOB).withEmail(VALID_EMAIL_BOB)","lastModifiedDate":"2021-11-05"},{"lineNumber":41,"author":{"gitId":"eltonyeh"},"content":"                .withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2021-11-05"},{"lineNumber":42,"author":{"gitId":"eltonyeh"},"content":"        assertFalse(ALICE.isSamePerson(editedAlice));","lastModifiedDate":"2021-11-05"},{"lineNumber":43,"author":{"gitId":"eltonyeh"},"content":"","lastModifiedDate":"2021-11-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        // different name, all other attributes same -\u003e returns false","lastModifiedDate":"2020-12-18"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.isSamePerson(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":47,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":48,"author":{"gitId":"-"},"content":"        // name differs in case, all other attributes same -\u003e returns false","lastModifiedDate":"2020-12-18"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        Person editedBob \u003d new PersonBuilder(BOB).withName(VALID_NAME_BOB.toLowerCase()).build();","lastModifiedDate":"2020-12-18"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        assertFalse(BOB.isSamePerson(editedBob));","lastModifiedDate":"2020-12-18"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        // name has trailing spaces, all other attributes same -\u003e returns false","lastModifiedDate":"2020-12-18"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        String nameWithTrailingSpaces \u003d VALID_NAME_BOB + \" \";","lastModifiedDate":"2020-12-18"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        editedBob \u003d new PersonBuilder(BOB).withName(nameWithTrailingSpaces).build();","lastModifiedDate":"2020-12-18"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        assertFalse(BOB.isSamePerson(editedBob));","lastModifiedDate":"2020-12-18"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-04-19"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public void equals() {","lastModifiedDate":"2018-04-19"},{"lineNumber":60,"author":{"gitId":"-"},"content":"        // same values -\u003e returns true","lastModifiedDate":"2018-04-19"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        Person aliceCopy \u003d new PersonBuilder(ALICE).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.equals(aliceCopy));","lastModifiedDate":"2018-04-19"},{"lineNumber":63,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2018-04-19"},{"lineNumber":65,"author":{"gitId":"-"},"content":"        assertTrue(ALICE.equals(ALICE));","lastModifiedDate":"2018-04-19"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        // null -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(null));","lastModifiedDate":"2018-04-19"},{"lineNumber":69,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        // different type -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(5));","lastModifiedDate":"2018-04-19"},{"lineNumber":72,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        // different person -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(BOB));","lastModifiedDate":"2018-04-19"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":76,"author":{"gitId":"-"},"content":"        // different name -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":77,"author":{"gitId":"-"},"content":"        Person editedAlice \u003d new PersonBuilder(ALICE).withName(VALID_NAME_BOB).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":78,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":79,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        // different phone -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withPhone(VALID_PHONE_BOB).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        // different email -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withEmail(VALID_EMAIL_BOB).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":86,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":87,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-19"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        // different address -\u003e returns false","lastModifiedDate":"2018-04-19"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withAddress(VALID_ADDRESS_BOB).build();","lastModifiedDate":"2018-04-19"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-19"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-04-18"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        // different tags -\u003e returns false","lastModifiedDate":"2018-04-18"},{"lineNumber":93,"author":{"gitId":"-"},"content":"        editedAlice \u003d new PersonBuilder(ALICE).withTags(VALID_TAG_HUSBAND).build();","lastModifiedDate":"2018-04-18"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        assertFalse(ALICE.equals(editedAlice));","lastModifiedDate":"2018-04-18"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-04-19"},{"lineNumber":96,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-09-01"}],"authorContributionMap":{"eltonyeh":8,"-":88}},{"path":"src/test/java/seedu/address/model/task/DeadlineTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"eltonyeh"},"content":"package seedu.address.model.task;","lastModifiedDate":"2021-10-10"},{"lineNumber":2,"author":{"gitId":"eltonyeh"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":3,"author":{"gitId":"eltonyeh"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-10"},{"lineNumber":4,"author":{"gitId":"eltonyeh"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-10-10"},{"lineNumber":5,"author":{"gitId":"eltonyeh"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2021-10-10"},{"lineNumber":6,"author":{"gitId":"eltonyeh"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-10"},{"lineNumber":7,"author":{"gitId":"eltonyeh"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2021-10-10"},{"lineNumber":8,"author":{"gitId":"eltonyeh"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":9,"author":{"gitId":"eltonyeh"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-10"},{"lineNumber":10,"author":{"gitId":"eltonyeh"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":11,"author":{"gitId":"eltonyeh"},"content":"public class DeadlineTest {","lastModifiedDate":"2021-10-10"},{"lineNumber":12,"author":{"gitId":"eltonyeh"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":13,"author":{"gitId":"eltonyeh"},"content":"    @Test","lastModifiedDate":"2021-10-10"},{"lineNumber":14,"author":{"gitId":"eltonyeh"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2021-10-10"},{"lineNumber":15,"author":{"gitId":"eltonyeh"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Deadline(null));","lastModifiedDate":"2021-10-12"},{"lineNumber":16,"author":{"gitId":"eltonyeh"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":17,"author":{"gitId":"eltonyeh"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":18,"author":{"gitId":"eltonyeh"},"content":"    @Test","lastModifiedDate":"2021-10-10"},{"lineNumber":19,"author":{"gitId":"eltonyeh"},"content":"    public void constructor_invalidDeadline_throwsIllegalArgumentException() {","lastModifiedDate":"2021-10-12"},{"lineNumber":20,"author":{"gitId":"eltonyeh"},"content":"        String invalidDeadline \u003d \"2021/12/12\";","lastModifiedDate":"2021-10-12"},{"lineNumber":21,"author":{"gitId":"eltonyeh"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Deadline(invalidDeadline));","lastModifiedDate":"2021-10-12"},{"lineNumber":22,"author":{"gitId":"eltonyeh"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":23,"author":{"gitId":"eltonyeh"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":24,"author":{"gitId":"eltonyeh"},"content":"    @Test","lastModifiedDate":"2021-10-10"},{"lineNumber":25,"author":{"gitId":"eltonyeh"},"content":"    public void isValidDeadline() {","lastModifiedDate":"2021-10-12"},{"lineNumber":26,"author":{"gitId":"eltonyeh"},"content":"        // null deadline","lastModifiedDate":"2021-10-12"},{"lineNumber":27,"author":{"gitId":"eltonyeh"},"content":"        assertThrows(NullPointerException.class, () -\u003e Deadline.isValidDeadline(null));","lastModifiedDate":"2021-10-12"},{"lineNumber":28,"author":{"gitId":"eltonyeh"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":29,"author":{"gitId":"eltonyeh"},"content":"        // Invalid deadline","lastModifiedDate":"2021-10-12"},{"lineNumber":30,"author":{"gitId":"eltonyeh"},"content":"        assertFalse(Deadline.isValidDeadline(\"\"));","lastModifiedDate":"2021-10-12"},{"lineNumber":31,"author":{"gitId":"eltonyeh"},"content":"        assertFalse(Deadline.isValidDeadline(\"2020\"));","lastModifiedDate":"2021-10-12"},{"lineNumber":32,"author":{"gitId":"eltonyeh"},"content":"        assertFalse(Deadline.isValidDeadline(\"2020/12/12\"));","lastModifiedDate":"2021-10-12"},{"lineNumber":33,"author":{"gitId":"eltonyeh"},"content":"        assertFalse(Deadline.isValidDeadline(\"Dec 12 2020\"));","lastModifiedDate":"2021-10-12"},{"lineNumber":34,"author":{"gitId":"eltonyeh"},"content":"        assertFalse(Deadline.isValidDeadline(\"2020-1-1\"));","lastModifiedDate":"2021-10-12"},{"lineNumber":35,"author":{"gitId":"eltonyeh"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":36,"author":{"gitId":"eltonyeh"},"content":"        // Valid deadline","lastModifiedDate":"2021-10-12"},{"lineNumber":37,"author":{"gitId":"eltonyeh"},"content":"        assertTrue(Deadline.isValidDeadline(\"2020-12-12\"));","lastModifiedDate":"2021-10-12"},{"lineNumber":38,"author":{"gitId":"eltonyeh"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":39,"author":{"gitId":"eltonyeh"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":40,"author":{"gitId":"eltonyeh"},"content":"    @Test","lastModifiedDate":"2021-10-10"},{"lineNumber":41,"author":{"gitId":"eltonyeh"},"content":"    public void equals() {","lastModifiedDate":"2021-10-10"},{"lineNumber":42,"author":{"gitId":"eltonyeh"},"content":"        Deadline deadline1 \u003d new Deadline(\"2020-12-12\");","lastModifiedDate":"2021-10-12"},{"lineNumber":43,"author":{"gitId":"eltonyeh"},"content":"        Deadline deadline2 \u003d new Deadline(\"2020-12-12\");","lastModifiedDate":"2021-10-12"},{"lineNumber":44,"author":{"gitId":"eltonyeh"},"content":"        Deadline deadline3 \u003d new Deadline(\"2021-12-12\");","lastModifiedDate":"2021-10-12"},{"lineNumber":45,"author":{"gitId":"eltonyeh"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":46,"author":{"gitId":"eltonyeh"},"content":"        assertNotEquals(deadline1, deadline3);","lastModifiedDate":"2021-10-12"},{"lineNumber":47,"author":{"gitId":"eltonyeh"},"content":"        assertEquals(deadline1, deadline2);","lastModifiedDate":"2021-10-12"},{"lineNumber":48,"author":{"gitId":"eltonyeh"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":49,"author":{"gitId":"eltonyeh"},"content":"}","lastModifiedDate":"2021-10-10"},{"lineNumber":50,"author":{"gitId":"eltonyeh"},"content":"","lastModifiedDate":"2021-10-12"}],"authorContributionMap":{"eltonyeh":50}},{"path":"src/test/java/seedu/address/model/task/DescriptionTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"eltonyeh"},"content":"package seedu.address.model.task;","lastModifiedDate":"2021-10-12"},{"lineNumber":2,"author":{"gitId":"eltonyeh"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":3,"author":{"gitId":"eltonyeh"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-12"},{"lineNumber":4,"author":{"gitId":"eltonyeh"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-10-12"},{"lineNumber":5,"author":{"gitId":"eltonyeh"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2021-10-12"},{"lineNumber":6,"author":{"gitId":"eltonyeh"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-12"},{"lineNumber":7,"author":{"gitId":"eltonyeh"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2021-10-12"},{"lineNumber":8,"author":{"gitId":"eltonyeh"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":9,"author":{"gitId":"eltonyeh"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-12"},{"lineNumber":10,"author":{"gitId":"eltonyeh"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":11,"author":{"gitId":"eltonyeh"},"content":"public class DescriptionTest {","lastModifiedDate":"2021-10-12"},{"lineNumber":12,"author":{"gitId":"eltonyeh"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":13,"author":{"gitId":"eltonyeh"},"content":"    @Test","lastModifiedDate":"2021-10-12"},{"lineNumber":14,"author":{"gitId":"eltonyeh"},"content":"    public void constructor_null_throwsNullPointerException() {","lastModifiedDate":"2021-10-12"},{"lineNumber":15,"author":{"gitId":"eltonyeh"},"content":"        assertThrows(NullPointerException.class, () -\u003e new Description(null));","lastModifiedDate":"2021-10-12"},{"lineNumber":16,"author":{"gitId":"eltonyeh"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":17,"author":{"gitId":"eltonyeh"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":18,"author":{"gitId":"eltonyeh"},"content":"    @Test","lastModifiedDate":"2021-10-12"},{"lineNumber":19,"author":{"gitId":"eltonyeh"},"content":"    public void constructor_invalidName_throwsIllegalArgumentException() {","lastModifiedDate":"2021-10-12"},{"lineNumber":20,"author":{"gitId":"eltonyeh"},"content":"        String invalidName \u003d \"\";","lastModifiedDate":"2021-10-12"},{"lineNumber":21,"author":{"gitId":"eltonyeh"},"content":"        assertThrows(IllegalArgumentException.class, () -\u003e new Description(invalidName));","lastModifiedDate":"2021-10-12"},{"lineNumber":22,"author":{"gitId":"eltonyeh"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":23,"author":{"gitId":"eltonyeh"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":24,"author":{"gitId":"eltonyeh"},"content":"    @Test","lastModifiedDate":"2021-10-12"},{"lineNumber":25,"author":{"gitId":"eltonyeh"},"content":"    public void isValidName() {","lastModifiedDate":"2021-10-12"},{"lineNumber":26,"author":{"gitId":"eltonyeh"},"content":"        // null name","lastModifiedDate":"2021-10-12"},{"lineNumber":27,"author":{"gitId":"eltonyeh"},"content":"        assertThrows(NullPointerException.class, () -\u003e seedu.address.model.person.Name.isValidName(null));","lastModifiedDate":"2021-10-12"},{"lineNumber":28,"author":{"gitId":"eltonyeh"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":29,"author":{"gitId":"eltonyeh"},"content":"        // invalid name","lastModifiedDate":"2021-10-12"},{"lineNumber":30,"author":{"gitId":"eltonyeh"},"content":"        assertFalse(Description.isValidDescription(\"\")); // empty string","lastModifiedDate":"2021-10-12"},{"lineNumber":31,"author":{"gitId":"eltonyeh"},"content":"        assertFalse(Description.isValidDescription(\" \")); // spaces only","lastModifiedDate":"2021-10-12"},{"lineNumber":32,"author":{"gitId":"eltonyeh"},"content":"        assertFalse(Description.isValidDescription(\"^\")); // only non-alphanumeric characters","lastModifiedDate":"2021-10-12"},{"lineNumber":33,"author":{"gitId":"eltonyeh"},"content":"        assertFalse(Description.isValidDescription(\"Report *\")); // contains non-alphanumeric characters","lastModifiedDate":"2021-10-12"},{"lineNumber":34,"author":{"gitId":"eltonyeh"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":35,"author":{"gitId":"eltonyeh"},"content":"        // valid name","lastModifiedDate":"2021-10-12"},{"lineNumber":36,"author":{"gitId":"eltonyeh"},"content":"        assertTrue(Description.isValidDescription(\"homework\")); // alphabets only","lastModifiedDate":"2021-10-12"},{"lineNumber":37,"author":{"gitId":"eltonyeh"},"content":"        assertTrue(Description.isValidDescription(\"12345\")); // numbers only","lastModifiedDate":"2021-10-12"},{"lineNumber":38,"author":{"gitId":"eltonyeh"},"content":"        assertTrue(Description.isValidDescription(\"cs2103 report\")); // alphanumeric characters","lastModifiedDate":"2021-10-12"},{"lineNumber":39,"author":{"gitId":"eltonyeh"},"content":"        assertTrue(Description.isValidDescription(\"CS2103 Report\")); // with capital letters","lastModifiedDate":"2021-10-12"},{"lineNumber":40,"author":{"gitId":"eltonyeh"},"content":"        assertTrue(Description.isValidDescription(\"A very very long task name\")); // long names","lastModifiedDate":"2021-10-12"},{"lineNumber":41,"author":{"gitId":"eltonyeh"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":42,"author":{"gitId":"eltonyeh"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":43,"author":{"gitId":"eltonyeh"},"content":"    @Test","lastModifiedDate":"2021-10-12"},{"lineNumber":44,"author":{"gitId":"eltonyeh"},"content":"    public void equals() {","lastModifiedDate":"2021-10-12"},{"lineNumber":45,"author":{"gitId":"eltonyeh"},"content":"        Description description1 \u003d new Description(\"Report\");","lastModifiedDate":"2021-10-12"},{"lineNumber":46,"author":{"gitId":"eltonyeh"},"content":"        Description description2 \u003d new Description(\"Report\");","lastModifiedDate":"2021-10-12"},{"lineNumber":47,"author":{"gitId":"eltonyeh"},"content":"        Description description3 \u003d new Description(\"report\");","lastModifiedDate":"2021-10-12"},{"lineNumber":48,"author":{"gitId":"eltonyeh"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":49,"author":{"gitId":"eltonyeh"},"content":"        assertNotEquals(description1, description3);","lastModifiedDate":"2021-10-12"},{"lineNumber":50,"author":{"gitId":"eltonyeh"},"content":"        assertEquals(description1, description2);","lastModifiedDate":"2021-10-12"},{"lineNumber":51,"author":{"gitId":"eltonyeh"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":52,"author":{"gitId":"eltonyeh"},"content":"}","lastModifiedDate":"2021-10-12"}],"authorContributionMap":{"eltonyeh":52}},{"path":"src/test/java/seedu/address/model/task/TaskTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"eltonyeh"},"content":"package seedu.address.model.task;","lastModifiedDate":"2021-10-10"},{"lineNumber":2,"author":{"gitId":"eltonyeh"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":3,"author":{"gitId":"eltonyeh"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-10"},{"lineNumber":4,"author":{"gitId":"eltonyeh"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-10-10"},{"lineNumber":5,"author":{"gitId":"eltonyeh"},"content":"import static org.junit.jupiter.api.Assertions.assertNotEquals;","lastModifiedDate":"2021-10-10"},{"lineNumber":6,"author":{"gitId":"eltonyeh"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-10"},{"lineNumber":7,"author":{"gitId":"eltonyeh"},"content":"import static seedu.address.testutil.TypicalTasks.REPORT_1;","lastModifiedDate":"2021-10-10"},{"lineNumber":8,"author":{"gitId":"eltonyeh"},"content":"import static seedu.address.testutil.TypicalTasks.REPORT_2;","lastModifiedDate":"2021-10-10"},{"lineNumber":9,"author":{"gitId":"eltonyeh"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":10,"author":{"gitId":"eltonyeh"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-10"},{"lineNumber":11,"author":{"gitId":"eltonyeh"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":12,"author":{"gitId":"eltonyeh"},"content":"import seedu.address.testutil.TaskBuilder;","lastModifiedDate":"2021-10-10"},{"lineNumber":13,"author":{"gitId":"eltonyeh"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":14,"author":{"gitId":"eltonyeh"},"content":"public class TaskTest {","lastModifiedDate":"2021-10-10"},{"lineNumber":15,"author":{"gitId":"eltonyeh"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":16,"author":{"gitId":"eltonyeh"},"content":"    @Test","lastModifiedDate":"2021-10-10"},{"lineNumber":17,"author":{"gitId":"eltonyeh"},"content":"    public void isSameTask() {","lastModifiedDate":"2021-10-10"},{"lineNumber":18,"author":{"gitId":"eltonyeh"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2021-10-10"},{"lineNumber":19,"author":{"gitId":"eltonyeh"},"content":"        assertTrue(REPORT_1.isSameTask(REPORT_1));","lastModifiedDate":"2021-10-10"},{"lineNumber":20,"author":{"gitId":"eltonyeh"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":21,"author":{"gitId":"eltonyeh"},"content":"        // null -\u003e returns false","lastModifiedDate":"2021-10-10"},{"lineNumber":22,"author":{"gitId":"eltonyeh"},"content":"        assertFalse(REPORT_1.isSameTask(null));","lastModifiedDate":"2021-10-10"},{"lineNumber":23,"author":{"gitId":"eltonyeh"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":24,"author":{"gitId":"eltonyeh"},"content":"        // same name and deadline -\u003e returns true","lastModifiedDate":"2021-10-10"},{"lineNumber":25,"author":{"gitId":"eltonyeh"},"content":"        Task editedReport1 \u003d new TaskBuilder(REPORT_1).build();","lastModifiedDate":"2021-10-10"},{"lineNumber":26,"author":{"gitId":"eltonyeh"},"content":"        assertTrue(REPORT_1.isSameTask(editedReport1));","lastModifiedDate":"2021-10-10"},{"lineNumber":27,"author":{"gitId":"eltonyeh"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":28,"author":{"gitId":"eltonyeh"},"content":"        // different name, deadline same -\u003e returns false","lastModifiedDate":"2021-10-10"},{"lineNumber":29,"author":{"gitId":"eltonyeh"},"content":"        editedReport1 \u003d new TaskBuilder(REPORT_2).withDeadline(\"2021-10-10\").build();","lastModifiedDate":"2021-10-10"},{"lineNumber":30,"author":{"gitId":"eltonyeh"},"content":"        assertFalse(REPORT_1.isSameTask(editedReport1));","lastModifiedDate":"2021-10-10"},{"lineNumber":31,"author":{"gitId":"eltonyeh"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":32,"author":{"gitId":"eltonyeh"},"content":"        // different deadline, name same -\u003e returns false","lastModifiedDate":"2021-10-10"},{"lineNumber":33,"author":{"gitId":"eltonyeh"},"content":"        editedReport1 \u003d new TaskBuilder(REPORT_1).withDeadline(\"2010-10-10\").build();","lastModifiedDate":"2021-10-10"},{"lineNumber":34,"author":{"gitId":"eltonyeh"},"content":"        assertFalse(REPORT_1.isSameTask(editedReport1));","lastModifiedDate":"2021-10-10"},{"lineNumber":35,"author":{"gitId":"eltonyeh"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":36,"author":{"gitId":"eltonyeh"},"content":"        // name differs in case, deadline same -\u003e returns false","lastModifiedDate":"2021-10-10"},{"lineNumber":37,"author":{"gitId":"Neha-5678"},"content":"        String nameInLowerCase \u003d REPORT_2.getDescription().toString().toLowerCase();","lastModifiedDate":"2021-10-19"},{"lineNumber":38,"author":{"gitId":"Neha-5678"},"content":"        Task editedReport2 \u003d new TaskBuilder(REPORT_2).withDescription(nameInLowerCase).build();","lastModifiedDate":"2021-10-19"},{"lineNumber":39,"author":{"gitId":"eltonyeh"},"content":"        assertFalse(REPORT_2.isSameTask(editedReport2));","lastModifiedDate":"2021-10-10"},{"lineNumber":40,"author":{"gitId":"eltonyeh"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":41,"author":{"gitId":"eltonyeh"},"content":"        // name has trailing spaces, deadline same -\u003e returns false","lastModifiedDate":"2021-10-10"},{"lineNumber":42,"author":{"gitId":"Neha-5678"},"content":"        String nameWithTrailingSpaces \u003d REPORT_2.getDescription().toString() + \" \";","lastModifiedDate":"2021-10-19"},{"lineNumber":43,"author":{"gitId":"Neha-5678"},"content":"        editedReport2 \u003d new TaskBuilder(REPORT_2).withDescription(nameWithTrailingSpaces).build();","lastModifiedDate":"2021-10-19"},{"lineNumber":44,"author":{"gitId":"eltonyeh"},"content":"        assertFalse(REPORT_2.isSameTask(editedReport2));","lastModifiedDate":"2021-10-10"},{"lineNumber":45,"author":{"gitId":"eltonyeh"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":46,"author":{"gitId":"eltonyeh"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":47,"author":{"gitId":"eltonyeh"},"content":"    @Test","lastModifiedDate":"2021-10-10"},{"lineNumber":48,"author":{"gitId":"eltonyeh"},"content":"    public void equals() {","lastModifiedDate":"2021-10-10"},{"lineNumber":49,"author":{"gitId":"eltonyeh"},"content":"        // same object -\u003e returns true","lastModifiedDate":"2021-10-10"},{"lineNumber":50,"author":{"gitId":"eltonyeh"},"content":"        assertEquals(REPORT_1, REPORT_1);","lastModifiedDate":"2021-10-10"},{"lineNumber":51,"author":{"gitId":"eltonyeh"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":52,"author":{"gitId":"eltonyeh"},"content":"        // null -\u003e returns false","lastModifiedDate":"2021-10-10"},{"lineNumber":53,"author":{"gitId":"eltonyeh"},"content":"        assertNotEquals(null, REPORT_1);","lastModifiedDate":"2021-10-10"},{"lineNumber":54,"author":{"gitId":"eltonyeh"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":55,"author":{"gitId":"eltonyeh"},"content":"        // different type -\u003e returns false","lastModifiedDate":"2021-10-10"},{"lineNumber":56,"author":{"gitId":"eltonyeh"},"content":"        assertNotEquals(5, REPORT_1);","lastModifiedDate":"2021-10-10"},{"lineNumber":57,"author":{"gitId":"eltonyeh"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":58,"author":{"gitId":"eltonyeh"},"content":"        // different task -\u003e returns false","lastModifiedDate":"2021-10-10"},{"lineNumber":59,"author":{"gitId":"eltonyeh"},"content":"        assertNotEquals(REPORT_1, REPORT_2);","lastModifiedDate":"2021-10-10"},{"lineNumber":60,"author":{"gitId":"eltonyeh"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":61,"author":{"gitId":"eltonyeh"},"content":"        // different name -\u003e returns false","lastModifiedDate":"2021-10-10"},{"lineNumber":62,"author":{"gitId":"Neha-5678"},"content":"        Task editedReport1 \u003d new TaskBuilder(REPORT_1).withDescription(\"Random name\").build();","lastModifiedDate":"2021-10-19"},{"lineNumber":63,"author":{"gitId":"eltonyeh"},"content":"        assertNotEquals(REPORT_1, editedReport1);","lastModifiedDate":"2021-10-10"},{"lineNumber":64,"author":{"gitId":"eltonyeh"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":65,"author":{"gitId":"eltonyeh"},"content":"        // different deadline -\u003e returns false","lastModifiedDate":"2021-10-10"},{"lineNumber":66,"author":{"gitId":"eltonyeh"},"content":"        editedReport1 \u003d new TaskBuilder(REPORT_1).withDeadline(\"2010-12-12\").build();","lastModifiedDate":"2021-10-10"},{"lineNumber":67,"author":{"gitId":"eltonyeh"},"content":"        assertNotEquals(REPORT_1, editedReport1);","lastModifiedDate":"2021-10-10"},{"lineNumber":68,"author":{"gitId":"eltonyeh"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":69,"author":{"gitId":"eltonyeh"},"content":"        // different id -\u003e returns false","lastModifiedDate":"2021-10-10"},{"lineNumber":70,"author":{"gitId":"eltonyeh"},"content":"        editedReport1 \u003d new TaskBuilder(REPORT_1).withUniqueId(\"29b89cca-8a8b-43ab-8155-e839fb9711f0\").build();","lastModifiedDate":"2021-10-12"},{"lineNumber":71,"author":{"gitId":"eltonyeh"},"content":"        assertNotEquals(REPORT_1, editedReport1);","lastModifiedDate":"2021-10-10"},{"lineNumber":72,"author":{"gitId":"eltonyeh"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":73,"author":{"gitId":"eltonyeh"},"content":"}","lastModifiedDate":"2021-10-10"}],"authorContributionMap":{"Neha-5678":5,"eltonyeh":68}},{"path":"src/test/java/seedu/address/model/task/UniqueTaskListTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"eltonyeh"},"content":"package seedu.address.model.task;","lastModifiedDate":"2021-10-10"},{"lineNumber":2,"author":{"gitId":"eltonyeh"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":3,"author":{"gitId":"eltonyeh"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-10"},{"lineNumber":4,"author":{"gitId":"eltonyeh"},"content":"import static org.junit.jupiter.api.Assertions.assertFalse;","lastModifiedDate":"2021-10-10"},{"lineNumber":5,"author":{"gitId":"eltonyeh"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;","lastModifiedDate":"2021-10-10"},{"lineNumber":6,"author":{"gitId":"eltonyeh"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2021-10-10"},{"lineNumber":7,"author":{"gitId":"eltonyeh"},"content":"import static seedu.address.testutil.TypicalTasks.REPORT_1;","lastModifiedDate":"2021-10-10"},{"lineNumber":8,"author":{"gitId":"eltonyeh"},"content":"import static seedu.address.testutil.TypicalTasks.REPORT_2;","lastModifiedDate":"2021-10-10"},{"lineNumber":9,"author":{"gitId":"eltonyeh"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":10,"author":{"gitId":"eltonyeh"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-10-10"},{"lineNumber":11,"author":{"gitId":"eltonyeh"},"content":"import java.util.Collections;","lastModifiedDate":"2021-10-10"},{"lineNumber":12,"author":{"gitId":"eltonyeh"},"content":"import java.util.List;","lastModifiedDate":"2021-10-10"},{"lineNumber":13,"author":{"gitId":"eltonyeh"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":14,"author":{"gitId":"eltonyeh"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-10"},{"lineNumber":15,"author":{"gitId":"eltonyeh"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":16,"author":{"gitId":"eltonyeh"},"content":"import seedu.address.model.task.exceptions.DuplicateTaskException;","lastModifiedDate":"2021-10-10"},{"lineNumber":17,"author":{"gitId":"eltonyeh"},"content":"import seedu.address.model.task.exceptions.TaskNotFoundException;","lastModifiedDate":"2021-10-10"},{"lineNumber":18,"author":{"gitId":"eltonyeh"},"content":"import seedu.address.testutil.TaskBuilder;","lastModifiedDate":"2021-10-10"},{"lineNumber":19,"author":{"gitId":"eltonyeh"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":20,"author":{"gitId":"eltonyeh"},"content":"public class UniqueTaskListTest {","lastModifiedDate":"2021-10-10"},{"lineNumber":21,"author":{"gitId":"eltonyeh"},"content":"    private final UniqueTaskList uniqueTaskList \u003d new UniqueTaskList();","lastModifiedDate":"2021-10-10"},{"lineNumber":22,"author":{"gitId":"eltonyeh"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":23,"author":{"gitId":"eltonyeh"},"content":"    @Test","lastModifiedDate":"2021-10-10"},{"lineNumber":24,"author":{"gitId":"eltonyeh"},"content":"    public void contains_nullTask_throwsNullPointerException() {","lastModifiedDate":"2021-10-10"},{"lineNumber":25,"author":{"gitId":"eltonyeh"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueTaskList.contains(null));","lastModifiedDate":"2021-10-10"},{"lineNumber":26,"author":{"gitId":"eltonyeh"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":27,"author":{"gitId":"eltonyeh"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":28,"author":{"gitId":"eltonyeh"},"content":"    @Test","lastModifiedDate":"2021-10-10"},{"lineNumber":29,"author":{"gitId":"eltonyeh"},"content":"    public void contains_taskNotInList_returnsFalse() {","lastModifiedDate":"2021-10-10"},{"lineNumber":30,"author":{"gitId":"eltonyeh"},"content":"        assertFalse(uniqueTaskList.contains(REPORT_1));","lastModifiedDate":"2021-10-10"},{"lineNumber":31,"author":{"gitId":"eltonyeh"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":32,"author":{"gitId":"eltonyeh"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":33,"author":{"gitId":"eltonyeh"},"content":"    @Test","lastModifiedDate":"2021-10-10"},{"lineNumber":34,"author":{"gitId":"eltonyeh"},"content":"    public void contains_taskInList_returnsTrue() {","lastModifiedDate":"2021-10-10"},{"lineNumber":35,"author":{"gitId":"eltonyeh"},"content":"        uniqueTaskList.add(REPORT_1);","lastModifiedDate":"2021-10-10"},{"lineNumber":36,"author":{"gitId":"eltonyeh"},"content":"        assertTrue(uniqueTaskList.contains(REPORT_1));","lastModifiedDate":"2021-10-10"},{"lineNumber":37,"author":{"gitId":"eltonyeh"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":38,"author":{"gitId":"eltonyeh"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":39,"author":{"gitId":"eltonyeh"},"content":"    @Test","lastModifiedDate":"2021-10-10"},{"lineNumber":40,"author":{"gitId":"eltonyeh"},"content":"    public void contains_taskWithSameIdentityFieldsInList_returnsTrue() {","lastModifiedDate":"2021-10-10"},{"lineNumber":41,"author":{"gitId":"eltonyeh"},"content":"        uniqueTaskList.add(REPORT_1);","lastModifiedDate":"2021-10-10"},{"lineNumber":42,"author":{"gitId":"eltonyeh"},"content":"        Task editedReport1 \u003d new TaskBuilder(REPORT_1).build();","lastModifiedDate":"2021-10-10"},{"lineNumber":43,"author":{"gitId":"eltonyeh"},"content":"        assertTrue(uniqueTaskList.contains(editedReport1));","lastModifiedDate":"2021-10-10"},{"lineNumber":44,"author":{"gitId":"eltonyeh"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":45,"author":{"gitId":"eltonyeh"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":46,"author":{"gitId":"eltonyeh"},"content":"    @Test","lastModifiedDate":"2021-10-10"},{"lineNumber":47,"author":{"gitId":"eltonyeh"},"content":"    public void add_nullTask_throwsNullPointerException() {","lastModifiedDate":"2021-10-10"},{"lineNumber":48,"author":{"gitId":"eltonyeh"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueTaskList.add(null));","lastModifiedDate":"2021-10-10"},{"lineNumber":49,"author":{"gitId":"eltonyeh"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":50,"author":{"gitId":"eltonyeh"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":51,"author":{"gitId":"eltonyeh"},"content":"    @Test","lastModifiedDate":"2021-10-10"},{"lineNumber":52,"author":{"gitId":"eltonyeh"},"content":"    public void add_duplicateTask_throwsDuplicateTaskException() {","lastModifiedDate":"2021-10-10"},{"lineNumber":53,"author":{"gitId":"eltonyeh"},"content":"        uniqueTaskList.add(REPORT_1);","lastModifiedDate":"2021-10-10"},{"lineNumber":54,"author":{"gitId":"eltonyeh"},"content":"        assertThrows(DuplicateTaskException.class, () -\u003e uniqueTaskList.add(REPORT_1));","lastModifiedDate":"2021-10-10"},{"lineNumber":55,"author":{"gitId":"eltonyeh"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":56,"author":{"gitId":"eltonyeh"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":57,"author":{"gitId":"eltonyeh"},"content":"    @Test","lastModifiedDate":"2021-10-10"},{"lineNumber":58,"author":{"gitId":"eltonyeh"},"content":"    public void setTask_nullTargetTask_throwsNullPointerException() {","lastModifiedDate":"2021-10-10"},{"lineNumber":59,"author":{"gitId":"eltonyeh"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueTaskList.setTask(null, REPORT_1));","lastModifiedDate":"2021-10-10"},{"lineNumber":60,"author":{"gitId":"eltonyeh"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":61,"author":{"gitId":"eltonyeh"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":62,"author":{"gitId":"eltonyeh"},"content":"    @Test","lastModifiedDate":"2021-10-10"},{"lineNumber":63,"author":{"gitId":"eltonyeh"},"content":"    public void setTask_nullEditedTask_throwsNullPointerException() {","lastModifiedDate":"2021-10-10"},{"lineNumber":64,"author":{"gitId":"eltonyeh"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueTaskList.setTask(REPORT_1, null));","lastModifiedDate":"2021-10-10"},{"lineNumber":65,"author":{"gitId":"eltonyeh"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":66,"author":{"gitId":"eltonyeh"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":67,"author":{"gitId":"eltonyeh"},"content":"    @Test","lastModifiedDate":"2021-10-10"},{"lineNumber":68,"author":{"gitId":"eltonyeh"},"content":"    public void setTask_targetTaskNotInList_throwsTaskNotFoundException() {","lastModifiedDate":"2021-10-10"},{"lineNumber":69,"author":{"gitId":"eltonyeh"},"content":"        assertThrows(TaskNotFoundException.class, () -\u003e uniqueTaskList.setTask(REPORT_1, REPORT_1));","lastModifiedDate":"2021-10-10"},{"lineNumber":70,"author":{"gitId":"eltonyeh"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":71,"author":{"gitId":"eltonyeh"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":72,"author":{"gitId":"eltonyeh"},"content":"    @Test","lastModifiedDate":"2021-10-10"},{"lineNumber":73,"author":{"gitId":"eltonyeh"},"content":"    public void setTask_editedTaskIsSameTask_success() {","lastModifiedDate":"2021-10-10"},{"lineNumber":74,"author":{"gitId":"eltonyeh"},"content":"        uniqueTaskList.add(REPORT_1);","lastModifiedDate":"2021-10-10"},{"lineNumber":75,"author":{"gitId":"eltonyeh"},"content":"        uniqueTaskList.setTask(REPORT_1, REPORT_1);","lastModifiedDate":"2021-10-10"},{"lineNumber":76,"author":{"gitId":"eltonyeh"},"content":"        UniqueTaskList expectedUniqueTaskList \u003d new UniqueTaskList();","lastModifiedDate":"2021-10-10"},{"lineNumber":77,"author":{"gitId":"eltonyeh"},"content":"        expectedUniqueTaskList.add(REPORT_1);","lastModifiedDate":"2021-10-10"},{"lineNumber":78,"author":{"gitId":"eltonyeh"},"content":"        assertEquals(expectedUniqueTaskList, uniqueTaskList);","lastModifiedDate":"2021-10-10"},{"lineNumber":79,"author":{"gitId":"eltonyeh"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":80,"author":{"gitId":"eltonyeh"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":81,"author":{"gitId":"eltonyeh"},"content":"    @Test","lastModifiedDate":"2021-10-10"},{"lineNumber":82,"author":{"gitId":"eltonyeh"},"content":"    public void setTask_editedTaskHasSameIdentity_success() {","lastModifiedDate":"2021-10-10"},{"lineNumber":83,"author":{"gitId":"eltonyeh"},"content":"        uniqueTaskList.add(REPORT_1);","lastModifiedDate":"2021-10-10"},{"lineNumber":84,"author":{"gitId":"eltonyeh"},"content":"        Task editedReport1 \u003d new TaskBuilder(REPORT_1).build();","lastModifiedDate":"2021-10-10"},{"lineNumber":85,"author":{"gitId":"eltonyeh"},"content":"        uniqueTaskList.setTask(REPORT_1, editedReport1);","lastModifiedDate":"2021-10-10"},{"lineNumber":86,"author":{"gitId":"eltonyeh"},"content":"        UniqueTaskList expectedUniqueTaskList \u003d new UniqueTaskList();","lastModifiedDate":"2021-10-10"},{"lineNumber":87,"author":{"gitId":"eltonyeh"},"content":"        expectedUniqueTaskList.add(editedReport1);","lastModifiedDate":"2021-10-10"},{"lineNumber":88,"author":{"gitId":"eltonyeh"},"content":"        assertEquals(expectedUniqueTaskList, uniqueTaskList);","lastModifiedDate":"2021-10-10"},{"lineNumber":89,"author":{"gitId":"eltonyeh"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":90,"author":{"gitId":"eltonyeh"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":91,"author":{"gitId":"eltonyeh"},"content":"    @Test","lastModifiedDate":"2021-10-10"},{"lineNumber":92,"author":{"gitId":"eltonyeh"},"content":"    public void setTask_editedTaskHasDifferentIdentity_success() {","lastModifiedDate":"2021-10-10"},{"lineNumber":93,"author":{"gitId":"eltonyeh"},"content":"        uniqueTaskList.add(REPORT_1);","lastModifiedDate":"2021-10-10"},{"lineNumber":94,"author":{"gitId":"eltonyeh"},"content":"        uniqueTaskList.setTask(REPORT_1, REPORT_2);","lastModifiedDate":"2021-10-10"},{"lineNumber":95,"author":{"gitId":"eltonyeh"},"content":"        UniqueTaskList expectedUniqueTaskList \u003d new UniqueTaskList();","lastModifiedDate":"2021-10-10"},{"lineNumber":96,"author":{"gitId":"eltonyeh"},"content":"        expectedUniqueTaskList.add(REPORT_2);","lastModifiedDate":"2021-10-10"},{"lineNumber":97,"author":{"gitId":"eltonyeh"},"content":"        assertEquals(expectedUniqueTaskList, uniqueTaskList);","lastModifiedDate":"2021-10-10"},{"lineNumber":98,"author":{"gitId":"eltonyeh"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":99,"author":{"gitId":"eltonyeh"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":100,"author":{"gitId":"eltonyeh"},"content":"    @Test","lastModifiedDate":"2021-10-10"},{"lineNumber":101,"author":{"gitId":"eltonyeh"},"content":"    public void setTask_editedTaskHasNonUniqueIdentity_throwsDuplicateTaskException() {","lastModifiedDate":"2021-10-10"},{"lineNumber":102,"author":{"gitId":"eltonyeh"},"content":"        uniqueTaskList.add(REPORT_1);","lastModifiedDate":"2021-10-10"},{"lineNumber":103,"author":{"gitId":"eltonyeh"},"content":"        uniqueTaskList.add(REPORT_2);","lastModifiedDate":"2021-10-10"},{"lineNumber":104,"author":{"gitId":"eltonyeh"},"content":"        assertThrows(DuplicateTaskException.class, () -\u003e uniqueTaskList.setTask(REPORT_1, REPORT_2));","lastModifiedDate":"2021-10-10"},{"lineNumber":105,"author":{"gitId":"eltonyeh"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":106,"author":{"gitId":"eltonyeh"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":107,"author":{"gitId":"eltonyeh"},"content":"    @Test","lastModifiedDate":"2021-10-10"},{"lineNumber":108,"author":{"gitId":"eltonyeh"},"content":"    public void remove_nullTask_throwsNullPointerException() {","lastModifiedDate":"2021-10-10"},{"lineNumber":109,"author":{"gitId":"eltonyeh"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueTaskList.remove(null));","lastModifiedDate":"2021-10-10"},{"lineNumber":110,"author":{"gitId":"eltonyeh"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":111,"author":{"gitId":"eltonyeh"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":112,"author":{"gitId":"eltonyeh"},"content":"    @Test","lastModifiedDate":"2021-10-10"},{"lineNumber":113,"author":{"gitId":"eltonyeh"},"content":"    public void remove_taskDoesNotExist_throwsTaskNotFoundException() {","lastModifiedDate":"2021-10-10"},{"lineNumber":114,"author":{"gitId":"eltonyeh"},"content":"        assertThrows(TaskNotFoundException.class, () -\u003e uniqueTaskList.remove(REPORT_1));","lastModifiedDate":"2021-10-10"},{"lineNumber":115,"author":{"gitId":"eltonyeh"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":116,"author":{"gitId":"eltonyeh"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":117,"author":{"gitId":"eltonyeh"},"content":"    @Test","lastModifiedDate":"2021-10-10"},{"lineNumber":118,"author":{"gitId":"eltonyeh"},"content":"    public void remove_existingTask_removesTask() {","lastModifiedDate":"2021-10-10"},{"lineNumber":119,"author":{"gitId":"eltonyeh"},"content":"        uniqueTaskList.add(REPORT_1);","lastModifiedDate":"2021-10-10"},{"lineNumber":120,"author":{"gitId":"eltonyeh"},"content":"        uniqueTaskList.remove(REPORT_1);","lastModifiedDate":"2021-10-10"},{"lineNumber":121,"author":{"gitId":"eltonyeh"},"content":"        UniqueTaskList expectedUniqueTaskList \u003d new UniqueTaskList();","lastModifiedDate":"2021-10-10"},{"lineNumber":122,"author":{"gitId":"eltonyeh"},"content":"        assertEquals(expectedUniqueTaskList, uniqueTaskList);","lastModifiedDate":"2021-10-10"},{"lineNumber":123,"author":{"gitId":"eltonyeh"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":124,"author":{"gitId":"eltonyeh"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":125,"author":{"gitId":"eltonyeh"},"content":"    @Test","lastModifiedDate":"2021-10-10"},{"lineNumber":126,"author":{"gitId":"eltonyeh"},"content":"    public void setTasks_nullUniqueTaskList_throwsNullPointerException() {","lastModifiedDate":"2021-10-10"},{"lineNumber":127,"author":{"gitId":"eltonyeh"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueTaskList.setTasks((UniqueTaskList) null));","lastModifiedDate":"2021-10-10"},{"lineNumber":128,"author":{"gitId":"eltonyeh"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":129,"author":{"gitId":"eltonyeh"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":130,"author":{"gitId":"eltonyeh"},"content":"    @Test","lastModifiedDate":"2021-10-10"},{"lineNumber":131,"author":{"gitId":"eltonyeh"},"content":"    public void setTasks_uniqueTaskList_replacesOwnListWithProvidedUniqueTaskList() {","lastModifiedDate":"2021-10-10"},{"lineNumber":132,"author":{"gitId":"eltonyeh"},"content":"        uniqueTaskList.add(REPORT_1);","lastModifiedDate":"2021-10-10"},{"lineNumber":133,"author":{"gitId":"eltonyeh"},"content":"        UniqueTaskList expectedUniqueTaskList \u003d new UniqueTaskList();","lastModifiedDate":"2021-10-10"},{"lineNumber":134,"author":{"gitId":"eltonyeh"},"content":"        expectedUniqueTaskList.add(REPORT_2);","lastModifiedDate":"2021-10-10"},{"lineNumber":135,"author":{"gitId":"eltonyeh"},"content":"        uniqueTaskList.setTasks(expectedUniqueTaskList);","lastModifiedDate":"2021-10-10"},{"lineNumber":136,"author":{"gitId":"eltonyeh"},"content":"        assertEquals(expectedUniqueTaskList, uniqueTaskList);","lastModifiedDate":"2021-10-10"},{"lineNumber":137,"author":{"gitId":"eltonyeh"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":138,"author":{"gitId":"eltonyeh"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":139,"author":{"gitId":"eltonyeh"},"content":"    @Test","lastModifiedDate":"2021-10-10"},{"lineNumber":140,"author":{"gitId":"eltonyeh"},"content":"    public void setTasks_nullList_throwsNullPointerException() {","lastModifiedDate":"2021-10-10"},{"lineNumber":141,"author":{"gitId":"eltonyeh"},"content":"        assertThrows(NullPointerException.class, () -\u003e uniqueTaskList.setTasks((List\u003cTask\u003e) null));","lastModifiedDate":"2021-10-10"},{"lineNumber":142,"author":{"gitId":"eltonyeh"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":143,"author":{"gitId":"eltonyeh"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":144,"author":{"gitId":"eltonyeh"},"content":"    @Test","lastModifiedDate":"2021-10-10"},{"lineNumber":145,"author":{"gitId":"eltonyeh"},"content":"    public void setTasks_list_replacesOwnListWithProvidedList() {","lastModifiedDate":"2021-10-10"},{"lineNumber":146,"author":{"gitId":"eltonyeh"},"content":"        uniqueTaskList.add(REPORT_1);","lastModifiedDate":"2021-10-10"},{"lineNumber":147,"author":{"gitId":"eltonyeh"},"content":"        List\u003cTask\u003e taskList \u003d Collections.singletonList(REPORT_2);","lastModifiedDate":"2021-10-10"},{"lineNumber":148,"author":{"gitId":"eltonyeh"},"content":"        uniqueTaskList.setTasks(taskList);","lastModifiedDate":"2021-10-10"},{"lineNumber":149,"author":{"gitId":"eltonyeh"},"content":"        UniqueTaskList expectedUniqueTaskList \u003d new UniqueTaskList();","lastModifiedDate":"2021-10-10"},{"lineNumber":150,"author":{"gitId":"eltonyeh"},"content":"        expectedUniqueTaskList.add(REPORT_2);","lastModifiedDate":"2021-10-10"},{"lineNumber":151,"author":{"gitId":"eltonyeh"},"content":"        assertEquals(expectedUniqueTaskList, uniqueTaskList);","lastModifiedDate":"2021-10-10"},{"lineNumber":152,"author":{"gitId":"eltonyeh"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":153,"author":{"gitId":"eltonyeh"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":154,"author":{"gitId":"eltonyeh"},"content":"    @Test","lastModifiedDate":"2021-10-10"},{"lineNumber":155,"author":{"gitId":"eltonyeh"},"content":"    public void setTasks_listWithDuplicateTasks_throwsDuplicateTaskException() {","lastModifiedDate":"2021-10-10"},{"lineNumber":156,"author":{"gitId":"eltonyeh"},"content":"        List\u003cTask\u003e listWithDuplicateTasks \u003d Arrays.asList(REPORT_1, REPORT_1);","lastModifiedDate":"2021-10-10"},{"lineNumber":157,"author":{"gitId":"eltonyeh"},"content":"        assertThrows(DuplicateTaskException.class, () -\u003e uniqueTaskList.setTasks(listWithDuplicateTasks));","lastModifiedDate":"2021-10-10"},{"lineNumber":158,"author":{"gitId":"eltonyeh"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":159,"author":{"gitId":"eltonyeh"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":160,"author":{"gitId":"eltonyeh"},"content":"    @Test","lastModifiedDate":"2021-10-10"},{"lineNumber":161,"author":{"gitId":"eltonyeh"},"content":"    public void asUnmodifiableObservableList_modifyList_throwsUnsupportedOperationException() {","lastModifiedDate":"2021-10-10"},{"lineNumber":162,"author":{"gitId":"eltonyeh"},"content":"        assertThrows(UnsupportedOperationException.class, () -\u003e","lastModifiedDate":"2021-10-10"},{"lineNumber":163,"author":{"gitId":"eltonyeh"},"content":"                uniqueTaskList.asUnmodifiableObservableList().remove(0));","lastModifiedDate":"2021-10-10"},{"lineNumber":164,"author":{"gitId":"eltonyeh"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":165,"author":{"gitId":"eltonyeh"},"content":"}","lastModifiedDate":"2021-10-10"}],"authorContributionMap":{"eltonyeh":165}},{"path":"src/test/java/seedu/address/storage/JsonAdaptedGroupTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Neha-5678"},"content":"package seedu.address.storage;","lastModifiedDate":"2021-11-06"},{"lineNumber":2,"author":{"gitId":"Neha-5678"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":3,"author":{"gitId":"Neha-5678"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-11-06"},{"lineNumber":4,"author":{"gitId":"Neha-5678"},"content":"import static seedu.address.storage.JsonAdaptedGroup.MISSING_FIELD_MESSAGE_FORMAT;","lastModifiedDate":"2021-11-06"},{"lineNumber":5,"author":{"gitId":"Neha-5678"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2021-11-06"},{"lineNumber":6,"author":{"gitId":"Neha-5678"},"content":"import static seedu.address.testutil.TypicalGroups.GROUP_1;","lastModifiedDate":"2021-11-06"},{"lineNumber":7,"author":{"gitId":"Neha-5678"},"content":"import static seedu.address.testutil.TypicalLessons.MON_10_12_BIOLOGY;","lastModifiedDate":"2021-11-06"},{"lineNumber":8,"author":{"gitId":"Neha-5678"},"content":"import static seedu.address.testutil.TypicalLessons.MON_11_13_MATH;","lastModifiedDate":"2021-11-06"},{"lineNumber":9,"author":{"gitId":"Neha-5678"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":10,"author":{"gitId":"Neha-5678"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-11-06"},{"lineNumber":11,"author":{"gitId":"Neha-5678"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-11-06"},{"lineNumber":12,"author":{"gitId":"Neha-5678"},"content":"import java.util.List;","lastModifiedDate":"2021-11-06"},{"lineNumber":13,"author":{"gitId":"Neha-5678"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2021-11-06"},{"lineNumber":14,"author":{"gitId":"Neha-5678"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":15,"author":{"gitId":"Neha-5678"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-11-06"},{"lineNumber":16,"author":{"gitId":"Neha-5678"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":17,"author":{"gitId":"Neha-5678"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2021-11-06"},{"lineNumber":18,"author":{"gitId":"Neha-5678"},"content":"import seedu.address.model.group.GroupName;","lastModifiedDate":"2021-11-06"},{"lineNumber":19,"author":{"gitId":"Neha-5678"},"content":"import seedu.address.model.id.UniqueId;","lastModifiedDate":"2021-11-06"},{"lineNumber":20,"author":{"gitId":"Neha-5678"},"content":"import seedu.address.model.lesson.NoOverlapLessonList;","lastModifiedDate":"2021-11-06"},{"lineNumber":21,"author":{"gitId":"Neha-5678"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":22,"author":{"gitId":"Neha-5678"},"content":"public class JsonAdaptedGroupTest {","lastModifiedDate":"2021-11-06"},{"lineNumber":23,"author":{"gitId":"Neha-5678"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":24,"author":{"gitId":"Neha-5678"},"content":"    private static final String INVALID_NAME \u003d \"M@them@tics\";","lastModifiedDate":"2021-11-06"},{"lineNumber":25,"author":{"gitId":"Neha-5678"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":26,"author":{"gitId":"Neha-5678"},"content":"    private static final String VALID_ID \u003d GROUP_1.getId().toString();","lastModifiedDate":"2021-11-06"},{"lineNumber":27,"author":{"gitId":"Neha-5678"},"content":"    private static final String VALID_NAME \u003d GROUP_1.getName().toString();","lastModifiedDate":"2021-11-06"},{"lineNumber":28,"author":{"gitId":"Neha-5678"},"content":"    private static final List\u003cJsonAdaptedUniqueId\u003e VALID_ASSIGNED_TASK_IDS \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-11-06"},{"lineNumber":29,"author":{"gitId":"Neha-5678"},"content":"    private static final List\u003cJsonAdaptedUniqueId\u003e VALID_ASSIGNED_PERSON_IDS \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-11-06"},{"lineNumber":30,"author":{"gitId":"Neha-5678"},"content":"    private static final List\u003cJsonAdaptedLesson\u003e VALID_LESSONS \u003d GROUP_1.getLessons()","lastModifiedDate":"2021-11-06"},{"lineNumber":31,"author":{"gitId":"Neha-5678"},"content":"            .stream().map(JsonAdaptedLesson::new).collect(Collectors.toList());","lastModifiedDate":"2021-11-06"},{"lineNumber":32,"author":{"gitId":"Neha-5678"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":33,"author":{"gitId":"Neha-5678"},"content":"    @Test","lastModifiedDate":"2021-11-06"},{"lineNumber":34,"author":{"gitId":"Neha-5678"},"content":"    public void toModelType_validGroupDetails_returnsGroup() throws Exception {","lastModifiedDate":"2021-11-06"},{"lineNumber":35,"author":{"gitId":"Neha-5678"},"content":"        JsonAdaptedGroup group \u003d new JsonAdaptedGroup(GROUP_1);","lastModifiedDate":"2021-11-06"},{"lineNumber":36,"author":{"gitId":"Neha-5678"},"content":"        assertEquals(GROUP_1, group.toModelType());","lastModifiedDate":"2021-11-06"},{"lineNumber":37,"author":{"gitId":"Neha-5678"},"content":"    }","lastModifiedDate":"2021-11-06"},{"lineNumber":38,"author":{"gitId":"Neha-5678"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":39,"author":{"gitId":"Neha-5678"},"content":"    @Test","lastModifiedDate":"2021-11-06"},{"lineNumber":40,"author":{"gitId":"Neha-5678"},"content":"    public void toModelType_nullId_throwsIllegalValueException() {","lastModifiedDate":"2021-11-06"},{"lineNumber":41,"author":{"gitId":"Neha-5678"},"content":"        JsonAdaptedGroup group \u003d new JsonAdaptedGroup(null, VALID_NAME, VALID_ASSIGNED_TASK_IDS,","lastModifiedDate":"2021-11-06"},{"lineNumber":42,"author":{"gitId":"Neha-5678"},"content":"                VALID_ASSIGNED_PERSON_IDS, VALID_LESSONS);","lastModifiedDate":"2021-11-06"},{"lineNumber":43,"author":{"gitId":"Neha-5678"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, UniqueId.class.getSimpleName());","lastModifiedDate":"2021-11-06"},{"lineNumber":44,"author":{"gitId":"Neha-5678"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, group::toModelType);","lastModifiedDate":"2021-11-06"},{"lineNumber":45,"author":{"gitId":"Neha-5678"},"content":"    }","lastModifiedDate":"2021-11-06"},{"lineNumber":46,"author":{"gitId":"Neha-5678"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":47,"author":{"gitId":"Neha-5678"},"content":"    @Test","lastModifiedDate":"2021-11-06"},{"lineNumber":48,"author":{"gitId":"Neha-5678"},"content":"    public void toModelType_invalidName_throwsIllegalValueException() {","lastModifiedDate":"2021-11-06"},{"lineNumber":49,"author":{"gitId":"Neha-5678"},"content":"        JsonAdaptedGroup group \u003d new JsonAdaptedGroup(VALID_ID, INVALID_NAME, VALID_ASSIGNED_TASK_IDS,","lastModifiedDate":"2021-11-06"},{"lineNumber":50,"author":{"gitId":"Neha-5678"},"content":"                VALID_ASSIGNED_PERSON_IDS, VALID_LESSONS);","lastModifiedDate":"2021-11-06"},{"lineNumber":51,"author":{"gitId":"Neha-5678"},"content":"        String expectedMessage \u003d GroupName.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2021-11-06"},{"lineNumber":52,"author":{"gitId":"Neha-5678"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, group::toModelType);","lastModifiedDate":"2021-11-06"},{"lineNumber":53,"author":{"gitId":"Neha-5678"},"content":"    }","lastModifiedDate":"2021-11-06"},{"lineNumber":54,"author":{"gitId":"Neha-5678"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":55,"author":{"gitId":"Neha-5678"},"content":"    @Test","lastModifiedDate":"2021-11-06"},{"lineNumber":56,"author":{"gitId":"Neha-5678"},"content":"    public void toModelType_nullName_throwsIllegalValueException() {","lastModifiedDate":"2021-11-06"},{"lineNumber":57,"author":{"gitId":"Neha-5678"},"content":"        JsonAdaptedGroup group \u003d new JsonAdaptedGroup(VALID_ID, null, VALID_ASSIGNED_TASK_IDS,","lastModifiedDate":"2021-11-06"},{"lineNumber":58,"author":{"gitId":"Neha-5678"},"content":"                VALID_ASSIGNED_PERSON_IDS, VALID_LESSONS);","lastModifiedDate":"2021-11-06"},{"lineNumber":59,"author":{"gitId":"Neha-5678"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, GroupName.class.getSimpleName());","lastModifiedDate":"2021-11-06"},{"lineNumber":60,"author":{"gitId":"Neha-5678"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, group::toModelType);","lastModifiedDate":"2021-11-06"},{"lineNumber":61,"author":{"gitId":"Neha-5678"},"content":"    }","lastModifiedDate":"2021-11-06"},{"lineNumber":62,"author":{"gitId":"Neha-5678"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":63,"author":{"gitId":"Neha-5678"},"content":"    @Test","lastModifiedDate":"2021-11-06"},{"lineNumber":64,"author":{"gitId":"Neha-5678"},"content":"    void toModelType_overlappingList_throwsIllegalValueException() {","lastModifiedDate":"2021-11-06"},{"lineNumber":65,"author":{"gitId":"Neha-5678"},"content":"        List\u003cJsonAdaptedLesson\u003e overlappingLessons \u003d Arrays.asList(new JsonAdaptedLesson(MON_10_12_BIOLOGY),","lastModifiedDate":"2021-11-06"},{"lineNumber":66,"author":{"gitId":"Neha-5678"},"content":"                new JsonAdaptedLesson(MON_11_13_MATH));","lastModifiedDate":"2021-11-06"},{"lineNumber":67,"author":{"gitId":"Neha-5678"},"content":"        JsonAdaptedGroup group \u003d new JsonAdaptedGroup(VALID_ID, VALID_NAME, VALID_ASSIGNED_TASK_IDS,","lastModifiedDate":"2021-11-06"},{"lineNumber":68,"author":{"gitId":"Neha-5678"},"content":"                VALID_ASSIGNED_PERSON_IDS, overlappingLessons);","lastModifiedDate":"2021-11-06"},{"lineNumber":69,"author":{"gitId":"Neha-5678"},"content":"        assertThrows(IllegalValueException.class, NoOverlapLessonList.LESSON_OVERLAP, group::toModelType);","lastModifiedDate":"2021-11-06"},{"lineNumber":70,"author":{"gitId":"Neha-5678"},"content":"    }","lastModifiedDate":"2021-11-06"},{"lineNumber":71,"author":{"gitId":"Neha-5678"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":72,"author":{"gitId":"Neha-5678"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":73,"author":{"gitId":"Neha-5678"},"content":"}","lastModifiedDate":"2021-11-06"}],"authorContributionMap":{"Neha-5678":73}},{"path":"src/test/java/seedu/address/storage/JsonAdaptedLessonTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"tanhuakun"},"content":"package seedu.address.storage;","lastModifiedDate":"2021-10-12"},{"lineNumber":2,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":3,"author":{"gitId":"tanhuakun"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-12"},{"lineNumber":4,"author":{"gitId":"tanhuakun"},"content":"import static seedu.address.storage.JsonAdaptedPerson.MISSING_FIELD_MESSAGE_FORMAT;","lastModifiedDate":"2021-10-12"},{"lineNumber":5,"author":{"gitId":"tanhuakun"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2021-10-12"},{"lineNumber":6,"author":{"gitId":"tanhuakun"},"content":"import static seedu.address.testutil.TypicalLessons.MON_10_12_BIOLOGY;","lastModifiedDate":"2021-10-12"},{"lineNumber":7,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":8,"author":{"gitId":"tanhuakun"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-12"},{"lineNumber":9,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":10,"author":{"gitId":"tanhuakun"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2021-10-12"},{"lineNumber":11,"author":{"gitId":"tanhuakun"},"content":"import seedu.address.logic.parser.ValidateUtil;","lastModifiedDate":"2021-10-12"},{"lineNumber":12,"author":{"gitId":"tanhuakun"},"content":"import seedu.address.model.lesson.Subject;","lastModifiedDate":"2021-10-12"},{"lineNumber":13,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":14,"author":{"gitId":"tanhuakun"},"content":"class JsonAdaptedLessonTest {","lastModifiedDate":"2021-10-12"},{"lineNumber":15,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":16,"author":{"gitId":"tanhuakun"},"content":"    public static final String INVALID_SUBJECT \u003d \"-\";","lastModifiedDate":"2021-10-12"},{"lineNumber":17,"author":{"gitId":"tanhuakun"},"content":"    public static final int INVALID_DAY_OF_WEEK \u003d 1000;","lastModifiedDate":"2021-10-12"},{"lineNumber":18,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":19,"author":{"gitId":"tanhuakun"},"content":"    public static final String VALID_SUBJECT \u003d \"Hi\";","lastModifiedDate":"2021-10-12"},{"lineNumber":20,"author":{"gitId":"tanhuakun"},"content":"    public static final int VALID_DAY_OF_WEEK \u003d 7;","lastModifiedDate":"2021-10-12"},{"lineNumber":21,"author":{"gitId":"tanhuakun"},"content":"    public static final JsonAdaptedTimeslot VALID_TIMESLOT \u003d new JsonAdaptedTimeslot(","lastModifiedDate":"2021-10-12"},{"lineNumber":22,"author":{"gitId":"tanhuakun"},"content":"            MON_10_12_BIOLOGY.getTimeslot());","lastModifiedDate":"2021-10-12"},{"lineNumber":23,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":24,"author":{"gitId":"tanhuakun"},"content":"    @Test","lastModifiedDate":"2021-10-12"},{"lineNumber":25,"author":{"gitId":"tanhuakun"},"content":"    void toModelType_validLessonDetails_returnsLesson() throws Exception {","lastModifiedDate":"2021-10-12"},{"lineNumber":26,"author":{"gitId":"tanhuakun"},"content":"        JsonAdaptedLesson lesson \u003d new JsonAdaptedLesson(MON_10_12_BIOLOGY);","lastModifiedDate":"2021-10-12"},{"lineNumber":27,"author":{"gitId":"tanhuakun"},"content":"        assertEquals(MON_10_12_BIOLOGY, lesson.toModelType());","lastModifiedDate":"2021-10-12"},{"lineNumber":28,"author":{"gitId":"tanhuakun"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":29,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":30,"author":{"gitId":"tanhuakun"},"content":"    @Test","lastModifiedDate":"2021-10-12"},{"lineNumber":31,"author":{"gitId":"tanhuakun"},"content":"    void toModelType_invalidSubject_throwsIllegalValueException() {","lastModifiedDate":"2021-10-12"},{"lineNumber":32,"author":{"gitId":"tanhuakun"},"content":"        JsonAdaptedLesson lesson \u003d new JsonAdaptedLesson(VALID_TIMESLOT, INVALID_SUBJECT, VALID_DAY_OF_WEEK);","lastModifiedDate":"2021-10-12"},{"lineNumber":33,"author":{"gitId":"tanhuakun"},"content":"        assertThrows(IllegalValueException.class, Subject.MESSAGE_CONSTRAINTS, lesson::toModelType);","lastModifiedDate":"2021-10-12"},{"lineNumber":34,"author":{"gitId":"tanhuakun"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":35,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":36,"author":{"gitId":"tanhuakun"},"content":"    @Test","lastModifiedDate":"2021-10-12"},{"lineNumber":37,"author":{"gitId":"tanhuakun"},"content":"    void toModelType_nullSubject_throwsIllegalValueException() {","lastModifiedDate":"2021-10-12"},{"lineNumber":38,"author":{"gitId":"tanhuakun"},"content":"        JsonAdaptedLesson lesson \u003d new JsonAdaptedLesson(VALID_TIMESLOT, null, VALID_DAY_OF_WEEK);","lastModifiedDate":"2021-10-12"},{"lineNumber":39,"author":{"gitId":"tanhuakun"},"content":"        String expected \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Subject.class.getSimpleName());","lastModifiedDate":"2021-10-12"},{"lineNumber":40,"author":{"gitId":"tanhuakun"},"content":"        assertThrows(IllegalValueException.class, expected, lesson::toModelType);","lastModifiedDate":"2021-10-12"},{"lineNumber":41,"author":{"gitId":"tanhuakun"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":42,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":43,"author":{"gitId":"tanhuakun"},"content":"    @Test","lastModifiedDate":"2021-10-12"},{"lineNumber":44,"author":{"gitId":"tanhuakun"},"content":"    void toModelType_invalidDayOfWeek_throwsIllegalValueException() {","lastModifiedDate":"2021-10-12"},{"lineNumber":45,"author":{"gitId":"tanhuakun"},"content":"        JsonAdaptedLesson lesson \u003d new JsonAdaptedLesson(VALID_TIMESLOT, VALID_SUBJECT, INVALID_DAY_OF_WEEK);","lastModifiedDate":"2021-10-12"},{"lineNumber":46,"author":{"gitId":"tanhuakun"},"content":"        assertThrows(IllegalValueException.class, ValidateUtil.DAY_OF_WEEK_CONSTRAINTS, lesson::toModelType);","lastModifiedDate":"2021-10-12"},{"lineNumber":47,"author":{"gitId":"tanhuakun"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":48,"author":{"gitId":"tanhuakun"},"content":"}","lastModifiedDate":"2021-10-12"}],"authorContributionMap":{"tanhuakun":48}},{"path":"src/test/java/seedu/address/storage/JsonAdaptedPersonTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.storage.JsonAdaptedPerson.MISSING_FIELD_MESSAGE_FORMAT;","lastModifiedDate":"2018-08-13"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-14"},{"lineNumber":6,"author":{"gitId":"tanhuakun"},"content":"import static seedu.address.testutil.TypicalLessons.MON_10_12_BIOLOGY;","lastModifiedDate":"2021-10-12"},{"lineNumber":7,"author":{"gitId":"tanhuakun"},"content":"import static seedu.address.testutil.TypicalLessons.MON_11_13_MATH;","lastModifiedDate":"2021-10-12"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.TypicalPersons.BENSON;","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"tanhuakun"},"content":"import java.util.Arrays;","lastModifiedDate":"2021-10-12"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"eltonyeh"},"content":"import seedu.address.model.id.UniqueId;","lastModifiedDate":"2021-10-12"},{"lineNumber":19,"author":{"gitId":"tanhuakun"},"content":"import seedu.address.model.lesson.NoOverlapLessonList;","lastModifiedDate":"2021-10-12"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2018-08-13"},{"lineNumber":23,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2018-08-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"public class JsonAdaptedPersonTest {","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    private static final String INVALID_NAME \u003d \"R@chel\";","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    private static final String INVALID_PHONE \u003d \"+651234\";","lastModifiedDate":"2018-08-13"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    private static final String INVALID_ADDRESS \u003d \" \";","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    private static final String INVALID_EMAIL \u003d \"example.com\";","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    private static final String INVALID_TAG \u003d \"#friend\";","lastModifiedDate":"2018-08-13"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"eltonyeh"},"content":"    private static final String VALID_ID \u003d BENSON.getId().toString();","lastModifiedDate":"2021-10-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private static final String VALID_NAME \u003d BENSON.getName().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private static final String VALID_PHONE \u003d BENSON.getPhone().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private static final String VALID_EMAIL \u003d BENSON.getEmail().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private static final String VALID_ADDRESS \u003d BENSON.getAddress().toString();","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private static final List\u003cJsonAdaptedTag\u003e VALID_TAGS \u003d BENSON.getTags().stream()","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"            .map(JsonAdaptedTag::new)","lastModifiedDate":"2018-08-13"},{"lineNumber":39,"author":{"gitId":"-"},"content":"            .collect(Collectors.toList());","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"Neha-5678"},"content":"    private static final List\u003cJsonAdaptedUniqueId\u003e VALID_ASSIGNED_TASK_IDS \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-28"},{"lineNumber":41,"author":{"gitId":"Neha-5678"},"content":"    private static final List\u003cJsonAdaptedUniqueId\u003e VALID_ASSIGNED_GROUP_IDS \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-28"},{"lineNumber":42,"author":{"gitId":"jeremy-7007"},"content":"    private static final List\u003cJsonAdaptedTaskCompletion\u003e VALID_TASKS_COMPLETION \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-26"},{"lineNumber":43,"author":{"gitId":"tanhuakun"},"content":"    private static final List\u003cJsonAdaptedLesson\u003e VALID_LESSONS \u003d BENSON.getLessonsList()","lastModifiedDate":"2021-10-12"},{"lineNumber":44,"author":{"gitId":"tanhuakun"},"content":"            .getLessons()","lastModifiedDate":"2021-10-12"},{"lineNumber":45,"author":{"gitId":"tanhuakun"},"content":"            .stream().map(JsonAdaptedLesson::new)","lastModifiedDate":"2021-10-12"},{"lineNumber":46,"author":{"gitId":"tanhuakun"},"content":"            .collect(Collectors.toList());","lastModifiedDate":"2021-10-12"},{"lineNumber":47,"author":{"gitId":"tanhuakun"},"content":"    private static final List\u003cJsonAdaptedExam\u003e VALID_EXAMS \u003d BENSON.getExams().stream()","lastModifiedDate":"2021-10-19"},{"lineNumber":48,"author":{"gitId":"tanhuakun"},"content":"            .map(JsonAdaptedExam::new)","lastModifiedDate":"2021-10-19"},{"lineNumber":49,"author":{"gitId":"tanhuakun"},"content":"            .collect(Collectors.toList());","lastModifiedDate":"2021-10-19"},{"lineNumber":50,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    public void toModelType_validPersonDetails_returnsPerson() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(BENSON);","lastModifiedDate":"2018-08-13"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        assertEquals(BENSON, person.toModelType());","lastModifiedDate":"2018-08-13"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":57,"author":{"gitId":"eltonyeh"},"content":"    @Test","lastModifiedDate":"2021-10-12"},{"lineNumber":58,"author":{"gitId":"eltonyeh"},"content":"    public void toModelType_nullId_throwsIllegalValueException() {","lastModifiedDate":"2021-10-12"},{"lineNumber":59,"author":{"gitId":"eltonyeh"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(null, VALID_NAME, VALID_PHONE, VALID_EMAIL,","lastModifiedDate":"2021-10-12"},{"lineNumber":60,"author":{"gitId":"Neha-5678"},"content":"                VALID_ADDRESS, VALID_TAGS, VALID_ASSIGNED_TASK_IDS, VALID_ASSIGNED_GROUP_IDS,","lastModifiedDate":"2021-10-28"},{"lineNumber":61,"author":{"gitId":"Neha-5678"},"content":"                VALID_TASKS_COMPLETION, VALID_LESSONS, VALID_EXAMS);","lastModifiedDate":"2021-10-28"},{"lineNumber":62,"author":{"gitId":"eltonyeh"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, UniqueId.class.getSimpleName());","lastModifiedDate":"2021-10-12"},{"lineNumber":63,"author":{"gitId":"eltonyeh"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2021-10-12"},{"lineNumber":64,"author":{"gitId":"eltonyeh"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":65,"author":{"gitId":"eltonyeh"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    public void toModelType_invalidName_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":69,"author":{"gitId":"tanhuakun"},"content":"                new JsonAdaptedPerson(VALID_ID, INVALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS,","lastModifiedDate":"2021-10-12"},{"lineNumber":70,"author":{"gitId":"Neha-5678"},"content":"                        VALID_TAGS, VALID_ASSIGNED_TASK_IDS, VALID_ASSIGNED_GROUP_IDS,","lastModifiedDate":"2021-10-28"},{"lineNumber":71,"author":{"gitId":"Neha-5678"},"content":"                        VALID_TASKS_COMPLETION, VALID_LESSONS, VALID_EXAMS);","lastModifiedDate":"2021-10-28"},{"lineNumber":72,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Name.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":73,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    public void toModelType_nullName_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":78,"author":{"gitId":"eltonyeh"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_ID, null, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS,","lastModifiedDate":"2021-10-12"},{"lineNumber":79,"author":{"gitId":"Neha-5678"},"content":"                VALID_TAGS, VALID_ASSIGNED_TASK_IDS, VALID_ASSIGNED_GROUP_IDS,","lastModifiedDate":"2021-10-28"},{"lineNumber":80,"author":{"gitId":"Neha-5678"},"content":"                VALID_TASKS_COMPLETION, VALID_LESSONS, VALID_EXAMS);","lastModifiedDate":"2021-10-28"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Name.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":82,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":84,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public void toModelType_invalidPhone_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":88,"author":{"gitId":"tanhuakun"},"content":"                new JsonAdaptedPerson(VALID_ID, VALID_NAME, INVALID_PHONE, VALID_EMAIL, VALID_ADDRESS,","lastModifiedDate":"2021-10-12"},{"lineNumber":89,"author":{"gitId":"Neha-5678"},"content":"                        VALID_TAGS, VALID_ASSIGNED_TASK_IDS, VALID_ASSIGNED_GROUP_IDS,","lastModifiedDate":"2021-10-28"},{"lineNumber":90,"author":{"gitId":"Neha-5678"},"content":"                        VALID_TASKS_COMPLETION, VALID_LESSONS, VALID_EXAMS);","lastModifiedDate":"2021-10-28"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Phone.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":92,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":94,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":96,"author":{"gitId":"-"},"content":"    public void toModelType_nullPhone_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":97,"author":{"gitId":"eltonyeh"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_ID, VALID_NAME, null, VALID_EMAIL, VALID_ADDRESS,","lastModifiedDate":"2021-10-12"},{"lineNumber":98,"author":{"gitId":"Neha-5678"},"content":"                VALID_TAGS, VALID_ASSIGNED_TASK_IDS, VALID_ASSIGNED_GROUP_IDS,","lastModifiedDate":"2021-10-28"},{"lineNumber":99,"author":{"gitId":"Neha-5678"},"content":"                VALID_TASKS_COMPLETION, VALID_LESSONS, VALID_EXAMS);","lastModifiedDate":"2021-10-28"},{"lineNumber":100,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Phone.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":101,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":103,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    public void toModelType_invalidEmail_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":106,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":107,"author":{"gitId":"tanhuakun"},"content":"                new JsonAdaptedPerson(VALID_ID, VALID_NAME, VALID_PHONE, INVALID_EMAIL, VALID_ADDRESS,","lastModifiedDate":"2021-10-12"},{"lineNumber":108,"author":{"gitId":"Neha-5678"},"content":"                        VALID_TAGS, VALID_ASSIGNED_TASK_IDS, VALID_ASSIGNED_GROUP_IDS,","lastModifiedDate":"2021-10-28"},{"lineNumber":109,"author":{"gitId":"Neha-5678"},"content":"                        VALID_TASKS_COMPLETION, VALID_LESSONS, VALID_EXAMS);","lastModifiedDate":"2021-10-28"},{"lineNumber":110,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Email.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":111,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":113,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":114,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    public void toModelType_nullEmail_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":116,"author":{"gitId":"eltonyeh"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_ID, VALID_NAME, VALID_PHONE, null, VALID_ADDRESS,","lastModifiedDate":"2021-10-12"},{"lineNumber":117,"author":{"gitId":"Neha-5678"},"content":"                VALID_TAGS, VALID_ASSIGNED_TASK_IDS, VALID_ASSIGNED_GROUP_IDS,","lastModifiedDate":"2021-10-28"},{"lineNumber":118,"author":{"gitId":"Neha-5678"},"content":"                VALID_TASKS_COMPLETION, VALID_LESSONS, VALID_EXAMS);","lastModifiedDate":"2021-10-28"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Email.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":120,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":121,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":122,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":124,"author":{"gitId":"-"},"content":"    public void toModelType_invalidAddress_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":125,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":126,"author":{"gitId":"tanhuakun"},"content":"                new JsonAdaptedPerson(VALID_ID, VALID_NAME, VALID_PHONE, VALID_EMAIL, INVALID_ADDRESS,","lastModifiedDate":"2021-10-12"},{"lineNumber":127,"author":{"gitId":"Neha-5678"},"content":"                        VALID_TAGS, VALID_ASSIGNED_TASK_IDS, VALID_ASSIGNED_GROUP_IDS,","lastModifiedDate":"2021-10-28"},{"lineNumber":128,"author":{"gitId":"Neha-5678"},"content":"                        VALID_TASKS_COMPLETION, VALID_LESSONS, VALID_EXAMS);","lastModifiedDate":"2021-10-28"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d Address.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2018-08-13"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":131,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":132,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    public void toModelType_nullAddress_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":135,"author":{"gitId":"eltonyeh"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_ID, VALID_NAME, VALID_PHONE, VALID_EMAIL, null,","lastModifiedDate":"2021-10-12"},{"lineNumber":136,"author":{"gitId":"Neha-5678"},"content":"                VALID_TAGS, VALID_ASSIGNED_TASK_IDS, VALID_ASSIGNED_GROUP_IDS,","lastModifiedDate":"2021-10-28"},{"lineNumber":137,"author":{"gitId":"Neha-5678"},"content":"                VALID_TASKS_COMPLETION, VALID_LESSONS, VALID_EXAMS);","lastModifiedDate":"2021-10-28"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Address.class.getSimpleName());","lastModifiedDate":"2018-08-13"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    public void toModelType_invalidTags_throwsIllegalValueException() {","lastModifiedDate":"2018-08-13"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        List\u003cJsonAdaptedTag\u003e invalidTags \u003d new ArrayList\u003c\u003e(VALID_TAGS);","lastModifiedDate":"2018-08-13"},{"lineNumber":145,"author":{"gitId":"-"},"content":"        invalidTags.add(new JsonAdaptedTag(INVALID_TAG));","lastModifiedDate":"2018-08-13"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        JsonAdaptedPerson person \u003d","lastModifiedDate":"2018-08-13"},{"lineNumber":147,"author":{"gitId":"tanhuakun"},"content":"                new JsonAdaptedPerson(VALID_ID, VALID_NAME, VALID_PHONE, VALID_EMAIL, VALID_ADDRESS,","lastModifiedDate":"2021-10-12"},{"lineNumber":148,"author":{"gitId":"Neha-5678"},"content":"                        invalidTags, VALID_ASSIGNED_TASK_IDS, VALID_ASSIGNED_GROUP_IDS,","lastModifiedDate":"2021-10-28"},{"lineNumber":149,"author":{"gitId":"Neha-5678"},"content":"                        VALID_TASKS_COMPLETION, VALID_LESSONS, VALID_EXAMS);","lastModifiedDate":"2021-10-28"},{"lineNumber":150,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, person::toModelType);","lastModifiedDate":"2019-03-14"},{"lineNumber":151,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":152,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":153,"author":{"gitId":"tanhuakun"},"content":"    @Test","lastModifiedDate":"2021-10-12"},{"lineNumber":154,"author":{"gitId":"tanhuakun"},"content":"    void toModelType_overlappingList_throwsIllegalValueException() {","lastModifiedDate":"2021-10-12"},{"lineNumber":155,"author":{"gitId":"tanhuakun"},"content":"        List\u003cJsonAdaptedLesson\u003e overlappingLessons \u003d Arrays.asList(new JsonAdaptedLesson(MON_10_12_BIOLOGY),","lastModifiedDate":"2021-10-12"},{"lineNumber":156,"author":{"gitId":"tanhuakun"},"content":"                new JsonAdaptedLesson(MON_11_13_MATH));","lastModifiedDate":"2021-10-12"},{"lineNumber":157,"author":{"gitId":"tanhuakun"},"content":"        JsonAdaptedPerson person \u003d new JsonAdaptedPerson(VALID_ID, VALID_NAME, VALID_PHONE, VALID_EMAIL,","lastModifiedDate":"2021-10-12"},{"lineNumber":158,"author":{"gitId":"Neha-5678"},"content":"                VALID_ADDRESS, VALID_TAGS, VALID_ASSIGNED_TASK_IDS, VALID_ASSIGNED_GROUP_IDS,","lastModifiedDate":"2021-10-26"},{"lineNumber":159,"author":{"gitId":"jeremy-7007"},"content":"                VALID_TASKS_COMPLETION, overlappingLessons, VALID_EXAMS);","lastModifiedDate":"2021-10-26"},{"lineNumber":160,"author":{"gitId":"tanhuakun"},"content":"        assertThrows(IllegalValueException.class, NoOverlapLessonList.LESSON_OVERLAP, person::toModelType);","lastModifiedDate":"2021-10-12"},{"lineNumber":161,"author":{"gitId":"tanhuakun"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":162,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":163,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"Neha-5678":23,"jeremy-7007":2,"tanhuakun":24,"eltonyeh":13,"-":101}},{"path":"src/test/java/seedu/address/storage/JsonAdaptedTaskTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Neha-5678"},"content":"package seedu.address.storage;","lastModifiedDate":"2021-10-11"},{"lineNumber":2,"author":{"gitId":"Neha-5678"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":3,"author":{"gitId":"Neha-5678"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-11"},{"lineNumber":4,"author":{"gitId":"Neha-5678"},"content":"import static seedu.address.storage.JsonAdaptedTask.MISSING_FIELD_MESSAGE_FORMAT;","lastModifiedDate":"2021-10-11"},{"lineNumber":5,"author":{"gitId":"Neha-5678"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2021-10-11"},{"lineNumber":6,"author":{"gitId":"Neha-5678"},"content":"import static seedu.address.testutil.TypicalTasks.REPORT_1;","lastModifiedDate":"2021-10-11"},{"lineNumber":7,"author":{"gitId":"Neha-5678"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":8,"author":{"gitId":"Neha-5678"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-11"},{"lineNumber":9,"author":{"gitId":"Neha-5678"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":10,"author":{"gitId":"Neha-5678"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2021-10-11"},{"lineNumber":11,"author":{"gitId":"Neha-5678"},"content":"import seedu.address.model.task.Deadline;","lastModifiedDate":"2021-10-11"},{"lineNumber":12,"author":{"gitId":"eltonyeh"},"content":"import seedu.address.model.task.Description;","lastModifiedDate":"2021-10-12"},{"lineNumber":13,"author":{"gitId":"Neha-5678"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":14,"author":{"gitId":"Neha-5678"},"content":"public class JsonAdaptedTaskTest {","lastModifiedDate":"2021-10-11"},{"lineNumber":15,"author":{"gitId":"Neha-5678"},"content":"    private static final String INVALID_NAME \u003d \"@REPORT_1\";","lastModifiedDate":"2021-10-11"},{"lineNumber":16,"author":{"gitId":"Neha-5678"},"content":"    private static final String INVALID_DEADLINE \u003d \"2021-13-13\";","lastModifiedDate":"2021-10-11"},{"lineNumber":17,"author":{"gitId":"Neha-5678"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":18,"author":{"gitId":"Neha-5678"},"content":"    private static final String VALID_NAME \u003d REPORT_1.getDescription().toString();","lastModifiedDate":"2021-10-19"},{"lineNumber":19,"author":{"gitId":"Neha-5678"},"content":"    private static final String VALID_DEADLINE \u003d REPORT_1.getDeadline().toString();","lastModifiedDate":"2021-10-11"},{"lineNumber":20,"author":{"gitId":"Neha-5678"},"content":"    private static final String VALID_UNIQUEID \u003d REPORT_1.getId().getUuid().toString();","lastModifiedDate":"2021-10-11"},{"lineNumber":21,"author":{"gitId":"Neha-5678"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":22,"author":{"gitId":"Neha-5678"},"content":"    @Test","lastModifiedDate":"2021-10-11"},{"lineNumber":23,"author":{"gitId":"Neha-5678"},"content":"    public void toModelType_validTaskDetails_returnsTask() throws Exception {","lastModifiedDate":"2021-10-11"},{"lineNumber":24,"author":{"gitId":"Neha-5678"},"content":"        JsonAdaptedTask task \u003d new JsonAdaptedTask(REPORT_1);","lastModifiedDate":"2021-10-11"},{"lineNumber":25,"author":{"gitId":"Neha-5678"},"content":"        assertEquals(REPORT_1, task.toModelType());","lastModifiedDate":"2021-10-11"},{"lineNumber":26,"author":{"gitId":"Neha-5678"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":27,"author":{"gitId":"Neha-5678"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":28,"author":{"gitId":"Neha-5678"},"content":"    @Test","lastModifiedDate":"2021-10-11"},{"lineNumber":29,"author":{"gitId":"Neha-5678"},"content":"    public void toModelType_invalidName_throwsIllegalValueException() {","lastModifiedDate":"2021-10-11"},{"lineNumber":30,"author":{"gitId":"Neha-5678"},"content":"        JsonAdaptedTask task \u003d","lastModifiedDate":"2021-10-11"},{"lineNumber":31,"author":{"gitId":"Neha-5678"},"content":"                new JsonAdaptedTask(INVALID_NAME, VALID_DEADLINE, VALID_UNIQUEID);","lastModifiedDate":"2021-10-11"},{"lineNumber":32,"author":{"gitId":"eltonyeh"},"content":"        String expectedMessage \u003d Description.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2021-10-12"},{"lineNumber":33,"author":{"gitId":"Neha-5678"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, task::toModelType);","lastModifiedDate":"2021-10-11"},{"lineNumber":34,"author":{"gitId":"Neha-5678"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":35,"author":{"gitId":"Neha-5678"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":36,"author":{"gitId":"Neha-5678"},"content":"    @Test","lastModifiedDate":"2021-10-11"},{"lineNumber":37,"author":{"gitId":"Neha-5678"},"content":"    public void toModelType_nullName_throwsIllegalValueException() {","lastModifiedDate":"2021-10-11"},{"lineNumber":38,"author":{"gitId":"Neha-5678"},"content":"        JsonAdaptedTask task \u003d new JsonAdaptedTask(null, VALID_DEADLINE, VALID_UNIQUEID);","lastModifiedDate":"2021-10-11"},{"lineNumber":39,"author":{"gitId":"eltonyeh"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Description.class.getSimpleName());","lastModifiedDate":"2021-10-12"},{"lineNumber":40,"author":{"gitId":"Neha-5678"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, task::toModelType);","lastModifiedDate":"2021-10-11"},{"lineNumber":41,"author":{"gitId":"Neha-5678"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":42,"author":{"gitId":"Neha-5678"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":43,"author":{"gitId":"Neha-5678"},"content":"    @Test","lastModifiedDate":"2021-10-11"},{"lineNumber":44,"author":{"gitId":"Neha-5678"},"content":"    public void toModelType_invalidDeadline_throwsIllegalValueException() {","lastModifiedDate":"2021-10-11"},{"lineNumber":45,"author":{"gitId":"Neha-5678"},"content":"        JsonAdaptedTask task \u003d","lastModifiedDate":"2021-10-11"},{"lineNumber":46,"author":{"gitId":"Neha-5678"},"content":"                new JsonAdaptedTask(VALID_NAME, INVALID_DEADLINE, VALID_UNIQUEID);","lastModifiedDate":"2021-10-11"},{"lineNumber":47,"author":{"gitId":"Neha-5678"},"content":"        String expectedMessage \u003d Deadline.MESSAGE_CONSTRAINTS;","lastModifiedDate":"2021-10-11"},{"lineNumber":48,"author":{"gitId":"Neha-5678"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, task::toModelType);","lastModifiedDate":"2021-10-11"},{"lineNumber":49,"author":{"gitId":"Neha-5678"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":50,"author":{"gitId":"Neha-5678"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":51,"author":{"gitId":"Neha-5678"},"content":"    @Test","lastModifiedDate":"2021-10-11"},{"lineNumber":52,"author":{"gitId":"Neha-5678"},"content":"    public void toModelType_nullDeadline_throwsIllegalValueException() {","lastModifiedDate":"2021-10-11"},{"lineNumber":53,"author":{"gitId":"Neha-5678"},"content":"        JsonAdaptedTask task \u003d new JsonAdaptedTask(VALID_NAME, null, VALID_UNIQUEID);","lastModifiedDate":"2021-10-11"},{"lineNumber":54,"author":{"gitId":"Neha-5678"},"content":"        String expectedMessage \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Deadline.class.getSimpleName());","lastModifiedDate":"2021-10-11"},{"lineNumber":55,"author":{"gitId":"Neha-5678"},"content":"        assertThrows(IllegalValueException.class, expectedMessage, task::toModelType);","lastModifiedDate":"2021-10-11"},{"lineNumber":56,"author":{"gitId":"Neha-5678"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":57,"author":{"gitId":"Neha-5678"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":58,"author":{"gitId":"Neha-5678"},"content":"}","lastModifiedDate":"2021-10-11"}],"authorContributionMap":{"Neha-5678":55,"eltonyeh":3}},{"path":"src/test/java/seedu/address/storage/JsonAdaptedTimeslotTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"tanhuakun"},"content":"package seedu.address.storage;","lastModifiedDate":"2021-10-12"},{"lineNumber":2,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":3,"author":{"gitId":"tanhuakun"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2021-10-12"},{"lineNumber":4,"author":{"gitId":"tanhuakun"},"content":"import static seedu.address.storage.JsonAdaptedPerson.MISSING_FIELD_MESSAGE_FORMAT;","lastModifiedDate":"2021-10-12"},{"lineNumber":5,"author":{"gitId":"tanhuakun"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2021-10-12"},{"lineNumber":6,"author":{"gitId":"tanhuakun"},"content":"import static seedu.address.testutil.TypicalTimeslots.TEN_TO_TWELVE;","lastModifiedDate":"2021-10-12"},{"lineNumber":7,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":8,"author":{"gitId":"tanhuakun"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2021-10-12"},{"lineNumber":9,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":10,"author":{"gitId":"tanhuakun"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2021-10-12"},{"lineNumber":11,"author":{"gitId":"tanhuakun"},"content":"import seedu.address.model.lesson.Timeslot;","lastModifiedDate":"2021-10-12"},{"lineNumber":12,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":13,"author":{"gitId":"tanhuakun"},"content":"class JsonAdaptedTimeslotTest {","lastModifiedDate":"2021-10-12"},{"lineNumber":14,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":15,"author":{"gitId":"tanhuakun"},"content":"    public static final String TEN_AM \u003d \"10:00\";","lastModifiedDate":"2021-10-12"},{"lineNumber":16,"author":{"gitId":"tanhuakun"},"content":"    public static final String TWELVE_PM \u003d \"12:00\";","lastModifiedDate":"2021-10-12"},{"lineNumber":17,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":18,"author":{"gitId":"tanhuakun"},"content":"    @Test","lastModifiedDate":"2021-10-12"},{"lineNumber":19,"author":{"gitId":"tanhuakun"},"content":"    void toModelType_validTimings_returnsTimeslot() throws Exception {","lastModifiedDate":"2021-10-12"},{"lineNumber":20,"author":{"gitId":"tanhuakun"},"content":"        JsonAdaptedTimeslot timeslot \u003d new JsonAdaptedTimeslot(TEN_TO_TWELVE);","lastModifiedDate":"2021-10-12"},{"lineNumber":21,"author":{"gitId":"tanhuakun"},"content":"        assertEquals(TEN_TO_TWELVE, timeslot.toModelType());","lastModifiedDate":"2021-10-12"},{"lineNumber":22,"author":{"gitId":"tanhuakun"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":23,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":24,"author":{"gitId":"tanhuakun"},"content":"    @Test","lastModifiedDate":"2021-10-12"},{"lineNumber":25,"author":{"gitId":"tanhuakun"},"content":"    void toModelType_invalidTimings_throwsIllegalValueException() {","lastModifiedDate":"2021-10-12"},{"lineNumber":26,"author":{"gitId":"tanhuakun"},"content":"        JsonAdaptedTimeslot jsonTimeslot \u003d new JsonAdaptedTimeslot(TWELVE_PM, TEN_AM);","lastModifiedDate":"2021-10-12"},{"lineNumber":27,"author":{"gitId":"tanhuakun"},"content":"        assertThrows(IllegalValueException.class, Timeslot.MESSAGE_CONSTRAINTS, jsonTimeslot::toModelType);","lastModifiedDate":"2021-10-12"},{"lineNumber":28,"author":{"gitId":"tanhuakun"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":29,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":30,"author":{"gitId":"tanhuakun"},"content":"    @Test","lastModifiedDate":"2021-10-12"},{"lineNumber":31,"author":{"gitId":"tanhuakun"},"content":"    void toModelType_nullTiming_throwsIllegalValueException() {","lastModifiedDate":"2021-10-12"},{"lineNumber":32,"author":{"gitId":"tanhuakun"},"content":"        JsonAdaptedTimeslot jsonTimeslot \u003d new JsonAdaptedTimeslot(null, null);","lastModifiedDate":"2021-10-12"},{"lineNumber":33,"author":{"gitId":"tanhuakun"},"content":"        String expected \u003d String.format(MISSING_FIELD_MESSAGE_FORMAT, Timeslot.class.getSimpleName());","lastModifiedDate":"2021-10-12"},{"lineNumber":34,"author":{"gitId":"tanhuakun"},"content":"        assertThrows(IllegalValueException.class, expected, jsonTimeslot::toModelType);","lastModifiedDate":"2021-10-12"},{"lineNumber":35,"author":{"gitId":"tanhuakun"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":36,"author":{"gitId":"tanhuakun"},"content":"}","lastModifiedDate":"2021-10-12"}],"authorContributionMap":{"tanhuakun":36}},{"path":"src/test/java/seedu/address/storage/JsonSerializableAddressBookTest.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.storage;","lastModifiedDate":"2018-08-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;","lastModifiedDate":"2019-03-15"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.testutil.Assert.assertThrows;","lastModifiedDate":"2019-03-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-08-13"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-08-13"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import org.junit.jupiter.api.Test;","lastModifiedDate":"2019-04-27"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.commons.exceptions.IllegalValueException;","lastModifiedDate":"2018-08-13"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.commons.util.JsonUtil;","lastModifiedDate":"2018-08-13"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2018-08-13"},{"lineNumber":14,"author":{"gitId":"Neha-5678"},"content":"import seedu.address.testutil.TypicalObjects;","lastModifiedDate":"2021-10-11"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":16,"author":{"gitId":"-"},"content":"public class JsonSerializableAddressBookTest {","lastModifiedDate":"2018-08-13"},{"lineNumber":17,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    private static final Path TEST_DATA_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"JsonSerializableAddressBookTest\");","lastModifiedDate":"2018-08-13"},{"lineNumber":19,"author":{"gitId":"Neha-5678"},"content":"    private static final Path TYPICAL_OBJECTS_FILE \u003d TEST_DATA_FOLDER.resolve(\"typicalAddressBook.json\");","lastModifiedDate":"2021-10-11"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private static final Path INVALID_PERSON_FILE \u003d TEST_DATA_FOLDER.resolve(\"invalidPersonAddressBook.json\");","lastModifiedDate":"2018-08-13"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    private static final Path DUPLICATE_PERSON_FILE \u003d TEST_DATA_FOLDER.resolve(\"duplicatePersonAddressBook.json\");","lastModifiedDate":"2018-08-13"},{"lineNumber":22,"author":{"gitId":"Neha-5678"},"content":"    private static final Path INVALID_TASK_FILE \u003d TEST_DATA_FOLDER.resolve(\"invalidTaskAddressBook.json\");","lastModifiedDate":"2021-10-11"},{"lineNumber":23,"author":{"gitId":"Neha-5678"},"content":"    private static final Path DUPLICATE_TASK_FILE \u003d TEST_DATA_FOLDER.resolve(\"duplicateTaskAddressBook.json\");","lastModifiedDate":"2021-10-11"},{"lineNumber":24,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public void toModelType_typicalPersonsFile_success() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":27,"author":{"gitId":"Neha-5678"},"content":"        JsonSerializableAddressBook dataFromFile \u003d JsonUtil.readJsonFile(TYPICAL_OBJECTS_FILE,","lastModifiedDate":"2021-10-11"},{"lineNumber":28,"author":{"gitId":"-"},"content":"                JsonSerializableAddressBook.class).get();","lastModifiedDate":"2018-08-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        AddressBook addressBookFromFile \u003d dataFromFile.toModelType();","lastModifiedDate":"2018-08-13"},{"lineNumber":30,"author":{"gitId":"Neha-5678"},"content":"        AddressBook typicalPersonsAddressBook \u003d TypicalObjects.getTypicalAddressBook();","lastModifiedDate":"2021-10-11"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        assertEquals(addressBookFromFile, typicalPersonsAddressBook);","lastModifiedDate":"2018-08-13"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":33,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    public void toModelType_invalidPersonFile_throwsIllegalValueException() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        JsonSerializableAddressBook dataFromFile \u003d JsonUtil.readJsonFile(INVALID_PERSON_FILE,","lastModifiedDate":"2018-08-13"},{"lineNumber":37,"author":{"gitId":"-"},"content":"                JsonSerializableAddressBook.class).get();","lastModifiedDate":"2018-08-13"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, dataFromFile::toModelType);","lastModifiedDate":"2019-03-23"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":40,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":41,"author":{"gitId":"-"},"content":"    @Test","lastModifiedDate":"2018-08-13"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public void toModelType_duplicatePersons_throwsIllegalValueException() throws Exception {","lastModifiedDate":"2018-08-13"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        JsonSerializableAddressBook dataFromFile \u003d JsonUtil.readJsonFile(DUPLICATE_PERSON_FILE,","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"                JsonSerializableAddressBook.class).get();","lastModifiedDate":"2018-08-13"},{"lineNumber":45,"author":{"gitId":"-"},"content":"        assertThrows(IllegalValueException.class, JsonSerializableAddressBook.MESSAGE_DUPLICATE_PERSON,","lastModifiedDate":"2019-03-23"},{"lineNumber":46,"author":{"gitId":"-"},"content":"                dataFromFile::toModelType);","lastModifiedDate":"2019-03-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-08-13"},{"lineNumber":48,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-08-13"},{"lineNumber":49,"author":{"gitId":"Neha-5678"},"content":"    @Test","lastModifiedDate":"2021-10-11"},{"lineNumber":50,"author":{"gitId":"Neha-5678"},"content":"    public void toModelType_typicalTasksFile_success() throws Exception {","lastModifiedDate":"2021-10-11"},{"lineNumber":51,"author":{"gitId":"Neha-5678"},"content":"        JsonSerializableAddressBook dataFromFile \u003d JsonUtil.readJsonFile(TYPICAL_OBJECTS_FILE,","lastModifiedDate":"2021-10-11"},{"lineNumber":52,"author":{"gitId":"Neha-5678"},"content":"                JsonSerializableAddressBook.class).get();","lastModifiedDate":"2021-10-11"},{"lineNumber":53,"author":{"gitId":"Neha-5678"},"content":"        AddressBook addressBookFromFile \u003d dataFromFile.toModelType();","lastModifiedDate":"2021-10-11"},{"lineNumber":54,"author":{"gitId":"Neha-5678"},"content":"        AddressBook typicalTasksAddressBook \u003d TypicalObjects.getTypicalAddressBook();","lastModifiedDate":"2021-10-11"},{"lineNumber":55,"author":{"gitId":"Neha-5678"},"content":"        assertEquals(addressBookFromFile, typicalTasksAddressBook);","lastModifiedDate":"2021-10-11"},{"lineNumber":56,"author":{"gitId":"Neha-5678"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":57,"author":{"gitId":"Neha-5678"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":58,"author":{"gitId":"Neha-5678"},"content":"    @Test","lastModifiedDate":"2021-10-11"},{"lineNumber":59,"author":{"gitId":"Neha-5678"},"content":"    public void toModelType_invalidTaskFile_throwsIllegalValueException() throws Exception {","lastModifiedDate":"2021-10-11"},{"lineNumber":60,"author":{"gitId":"Neha-5678"},"content":"        JsonSerializableAddressBook dataFromFile \u003d JsonUtil.readJsonFile(INVALID_TASK_FILE,","lastModifiedDate":"2021-10-11"},{"lineNumber":61,"author":{"gitId":"Neha-5678"},"content":"                JsonSerializableAddressBook.class).get();","lastModifiedDate":"2021-10-11"},{"lineNumber":62,"author":{"gitId":"Neha-5678"},"content":"        assertThrows(IllegalValueException.class, dataFromFile::toModelType);","lastModifiedDate":"2021-10-11"},{"lineNumber":63,"author":{"gitId":"Neha-5678"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":64,"author":{"gitId":"Neha-5678"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":65,"author":{"gitId":"Neha-5678"},"content":"    @Test","lastModifiedDate":"2021-10-11"},{"lineNumber":66,"author":{"gitId":"Neha-5678"},"content":"    public void toModelType_duplicateTasks_throwsIllegalValueException() throws Exception {","lastModifiedDate":"2021-10-11"},{"lineNumber":67,"author":{"gitId":"Neha-5678"},"content":"        JsonSerializableAddressBook dataFromFile \u003d JsonUtil.readJsonFile(DUPLICATE_TASK_FILE,","lastModifiedDate":"2021-10-11"},{"lineNumber":68,"author":{"gitId":"Neha-5678"},"content":"                JsonSerializableAddressBook.class).get();","lastModifiedDate":"2021-10-11"},{"lineNumber":69,"author":{"gitId":"Neha-5678"},"content":"        assertThrows(IllegalValueException.class, JsonSerializableAddressBook.MESSAGE_DUPLICATE_TASK,","lastModifiedDate":"2021-10-11"},{"lineNumber":70,"author":{"gitId":"Neha-5678"},"content":"                dataFromFile::toModelType);","lastModifiedDate":"2021-10-11"},{"lineNumber":71,"author":{"gitId":"Neha-5678"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":72,"author":{"gitId":"Neha-5678"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":73,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2018-08-13"}],"authorContributionMap":{"Neha-5678":30,"-":43}},{"path":"src/test/java/seedu/address/testutil/AddressBookBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2016-09-21"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":5,"author":{"gitId":"eltonyeh"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2021-10-10"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":7,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":8,"author":{"gitId":"-"},"content":" * A utility class to help with building Addressbook objects.","lastModifiedDate":"2016-08-08"},{"lineNumber":9,"author":{"gitId":"-"},"content":" * Example usage: \u003cbr\u003e","lastModifiedDate":"2016-08-08"},{"lineNumber":10,"author":{"gitId":"-"},"content":" *     {@code AddressBook ab \u003d new AddressBookBuilder().withPerson(\"John\", \"Doe\").build();}","lastModifiedDate":"2018-03-29"},{"lineNumber":11,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":12,"author":{"gitId":"-"},"content":"public class AddressBookBuilder {","lastModifiedDate":"2016-08-08"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    private AddressBook addressBook;","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":"    public AddressBookBuilder() {","lastModifiedDate":"2017-05-31"},{"lineNumber":17,"author":{"gitId":"-"},"content":"        addressBook \u003d new AddressBook();","lastModifiedDate":"2017-05-31"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-31"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-31"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    public AddressBookBuilder(AddressBook addressBook) {","lastModifiedDate":"2016-08-08"},{"lineNumber":21,"author":{"gitId":"-"},"content":"        this.addressBook \u003d addressBook;","lastModifiedDate":"2016-08-08"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":25,"author":{"gitId":"-"},"content":"     * Adds a new {@code Person} to the {@code AddressBook} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":26,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public AddressBookBuilder withPerson(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":28,"author":{"gitId":"-"},"content":"        addressBook.addPerson(person);","lastModifiedDate":"2016-09-01"},{"lineNumber":29,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":32,"author":{"gitId":"eltonyeh"},"content":"    /**","lastModifiedDate":"2021-10-10"},{"lineNumber":33,"author":{"gitId":"eltonyeh"},"content":"     * Adds a new {@code Task} to the {@code AddressBook} that we are building.","lastModifiedDate":"2021-10-10"},{"lineNumber":34,"author":{"gitId":"eltonyeh"},"content":"     */","lastModifiedDate":"2021-10-10"},{"lineNumber":35,"author":{"gitId":"eltonyeh"},"content":"    public AddressBookBuilder withTask(Task task) {","lastModifiedDate":"2021-10-10"},{"lineNumber":36,"author":{"gitId":"eltonyeh"},"content":"        addressBook.addTask(task);","lastModifiedDate":"2021-10-10"},{"lineNumber":37,"author":{"gitId":"eltonyeh"},"content":"        return this;","lastModifiedDate":"2021-10-10"},{"lineNumber":38,"author":{"gitId":"eltonyeh"},"content":"    }","lastModifiedDate":"2021-10-10"},{"lineNumber":39,"author":{"gitId":"eltonyeh"},"content":"","lastModifiedDate":"2021-10-10"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    public AddressBook build() {","lastModifiedDate":"2016-08-08"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        return addressBook;","lastModifiedDate":"2016-08-08"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":43,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"eltonyeh":9,"-":34}},{"path":"src/test/java/seedu/address/testutil/EditPersonDescriptorBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2017-05-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-12-23"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.util.stream.Collectors;","lastModifiedDate":"2017-12-23"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.stream.Stream;","lastModifiedDate":"2017-12-23"},{"lineNumber":6,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":7,"author":{"gitId":"tanhuakun"},"content":"import seedu.address.logic.commands.persons.EditPersonCommand.EditPersonDescriptor;","lastModifiedDate":"2021-10-03"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2017-12-23"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-12-23"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-12-23"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-12-23"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-12-23"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":15,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-05-05"},{"lineNumber":16,"author":{"gitId":"-"},"content":" * A utility class to help with building EditPersonDescriptor objects.","lastModifiedDate":"2017-05-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-05-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"public class EditPersonDescriptorBuilder {","lastModifiedDate":"2017-05-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    private EditPersonDescriptor descriptor;","lastModifiedDate":"2017-05-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder() {","lastModifiedDate":"2017-05-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptor();","lastModifiedDate":"2017-05-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder(EditPersonDescriptor descriptor) {","lastModifiedDate":"2017-05-05"},{"lineNumber":27,"author":{"gitId":"-"},"content":"        this.descriptor \u003d new EditPersonDescriptor(descriptor);","lastModifiedDate":"2017-05-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-06-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Returns an {@code EditPersonDescriptor} with fields containing {@code person}\u0027s details","lastModifiedDate":"2017-06-05"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-06-05"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        descriptor \u003d new EditPersonDescriptor();","lastModifiedDate":"2017-06-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        descriptor.setName(person.getName());","lastModifiedDate":"2017-06-21"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        descriptor.setPhone(person.getPhone());","lastModifiedDate":"2017-06-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        descriptor.setEmail(person.getEmail());","lastModifiedDate":"2017-06-21"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        descriptor.setAddress(person.getAddress());","lastModifiedDate":"2017-06-21"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        descriptor.setTags(person.getTags());","lastModifiedDate":"2017-06-21"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-06-05"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-06-05"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":43,"author":{"gitId":"-"},"content":"     * Sets the {@code Name} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":44,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withName(String name) {","lastModifiedDate":"2017-08-15"},{"lineNumber":46,"author":{"gitId":"-"},"content":"        descriptor.setName(new Name(name));","lastModifiedDate":"2017-12-23"},{"lineNumber":47,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":49,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":51,"author":{"gitId":"-"},"content":"     * Sets the {@code Phone} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":52,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withPhone(String phone) {","lastModifiedDate":"2017-08-15"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        descriptor.setPhone(new Phone(phone));","lastModifiedDate":"2017-12-23"},{"lineNumber":55,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":57,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":59,"author":{"gitId":"-"},"content":"     * Sets the {@code Email} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":60,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withEmail(String email) {","lastModifiedDate":"2017-08-15"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        descriptor.setEmail(new Email(email));","lastModifiedDate":"2017-12-23"},{"lineNumber":63,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":65,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":67,"author":{"gitId":"-"},"content":"     * Sets the {@code Address} of the {@code EditPersonDescriptor} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":68,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withAddress(String address) {","lastModifiedDate":"2017-08-15"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        descriptor.setAddress(new Address(address));","lastModifiedDate":"2017-12-23"},{"lineNumber":71,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":73,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":74,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":75,"author":{"gitId":"-"},"content":"     * Parses the {@code tags} into a {@code Set\u003cTag\u003e} and set it to the {@code EditPersonDescriptor}","lastModifiedDate":"2017-07-26"},{"lineNumber":76,"author":{"gitId":"-"},"content":"     * that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":77,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public EditPersonDescriptorBuilder withTags(String... tags) {","lastModifiedDate":"2017-08-15"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        Set\u003cTag\u003e tagSet \u003d Stream.of(tags).map(Tag::new).collect(Collectors.toSet());","lastModifiedDate":"2017-12-23"},{"lineNumber":80,"author":{"gitId":"-"},"content":"        descriptor.setTags(tagSet);","lastModifiedDate":"2017-12-23"},{"lineNumber":81,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2017-05-05"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":83,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-05"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    public EditPersonDescriptor build() {","lastModifiedDate":"2017-05-05"},{"lineNumber":85,"author":{"gitId":"-"},"content":"        return descriptor;","lastModifiedDate":"2017-05-05"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-05-05"},{"lineNumber":87,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-05-05"}],"authorContributionMap":{"tanhuakun":1,"-":86}},{"path":"src/test/java/seedu/address/testutil/EditTaskDescriptorBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Neha-5678"},"content":"package seedu.address.testutil;","lastModifiedDate":"2021-10-19"},{"lineNumber":2,"author":{"gitId":"Neha-5678"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":3,"author":{"gitId":"Neha-5678"},"content":"import seedu.address.logic.commands.tasks.EditTaskCommand.EditTaskDescriptor;","lastModifiedDate":"2021-10-19"},{"lineNumber":4,"author":{"gitId":"Neha-5678"},"content":"import seedu.address.model.task.Deadline;","lastModifiedDate":"2021-10-19"},{"lineNumber":5,"author":{"gitId":"Neha-5678"},"content":"import seedu.address.model.task.Description;","lastModifiedDate":"2021-10-19"},{"lineNumber":6,"author":{"gitId":"Neha-5678"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2021-10-19"},{"lineNumber":7,"author":{"gitId":"Neha-5678"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":8,"author":{"gitId":"Neha-5678"},"content":"/**","lastModifiedDate":"2021-10-19"},{"lineNumber":9,"author":{"gitId":"Neha-5678"},"content":" * A utility class to help with building EditTaskDescriptor objects.","lastModifiedDate":"2021-10-19"},{"lineNumber":10,"author":{"gitId":"Neha-5678"},"content":" */","lastModifiedDate":"2021-10-19"},{"lineNumber":11,"author":{"gitId":"Neha-5678"},"content":"public class EditTaskDescriptorBuilder {","lastModifiedDate":"2021-10-19"},{"lineNumber":12,"author":{"gitId":"Neha-5678"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":13,"author":{"gitId":"Neha-5678"},"content":"    private EditTaskDescriptor descriptor;","lastModifiedDate":"2021-10-19"},{"lineNumber":14,"author":{"gitId":"Neha-5678"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":15,"author":{"gitId":"Neha-5678"},"content":"    public EditTaskDescriptorBuilder() {","lastModifiedDate":"2021-10-19"},{"lineNumber":16,"author":{"gitId":"Neha-5678"},"content":"        descriptor \u003d new EditTaskDescriptor();","lastModifiedDate":"2021-10-19"},{"lineNumber":17,"author":{"gitId":"Neha-5678"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":18,"author":{"gitId":"Neha-5678"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":19,"author":{"gitId":"Neha-5678"},"content":"    public EditTaskDescriptorBuilder(EditTaskDescriptor descriptor) {","lastModifiedDate":"2021-10-19"},{"lineNumber":20,"author":{"gitId":"Neha-5678"},"content":"        this.descriptor \u003d new EditTaskDescriptor(descriptor);","lastModifiedDate":"2021-10-19"},{"lineNumber":21,"author":{"gitId":"Neha-5678"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":22,"author":{"gitId":"Neha-5678"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":23,"author":{"gitId":"Neha-5678"},"content":"    /**","lastModifiedDate":"2021-10-19"},{"lineNumber":24,"author":{"gitId":"Neha-5678"},"content":"     * Returns an {@code EditPersonDescriptor} with fields containing {@code person}\u0027s details","lastModifiedDate":"2021-10-19"},{"lineNumber":25,"author":{"gitId":"Neha-5678"},"content":"     */","lastModifiedDate":"2021-10-19"},{"lineNumber":26,"author":{"gitId":"Neha-5678"},"content":"    public EditTaskDescriptorBuilder(Task task) {","lastModifiedDate":"2021-10-19"},{"lineNumber":27,"author":{"gitId":"Neha-5678"},"content":"        descriptor \u003d new EditTaskDescriptor();","lastModifiedDate":"2021-10-19"},{"lineNumber":28,"author":{"gitId":"Neha-5678"},"content":"        descriptor.setDescription(task.getDescription());","lastModifiedDate":"2021-10-19"},{"lineNumber":29,"author":{"gitId":"Neha-5678"},"content":"        descriptor.setDeadline(task.getDeadline());","lastModifiedDate":"2021-10-19"},{"lineNumber":30,"author":{"gitId":"Neha-5678"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":31,"author":{"gitId":"Neha-5678"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":32,"author":{"gitId":"Neha-5678"},"content":"    /**","lastModifiedDate":"2021-10-19"},{"lineNumber":33,"author":{"gitId":"Neha-5678"},"content":"     * Sets the {@code Description} of the {@code EditTaskDescriptor} that we are building.","lastModifiedDate":"2021-10-19"},{"lineNumber":34,"author":{"gitId":"Neha-5678"},"content":"     */","lastModifiedDate":"2021-10-19"},{"lineNumber":35,"author":{"gitId":"Neha-5678"},"content":"    public EditTaskDescriptorBuilder withDescription(String description) {","lastModifiedDate":"2021-10-19"},{"lineNumber":36,"author":{"gitId":"Neha-5678"},"content":"        descriptor.setDescription(new Description(description));","lastModifiedDate":"2021-10-19"},{"lineNumber":37,"author":{"gitId":"Neha-5678"},"content":"        return this;","lastModifiedDate":"2021-10-19"},{"lineNumber":38,"author":{"gitId":"Neha-5678"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":39,"author":{"gitId":"Neha-5678"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":40,"author":{"gitId":"Neha-5678"},"content":"    /**","lastModifiedDate":"2021-10-19"},{"lineNumber":41,"author":{"gitId":"Neha-5678"},"content":"     * Sets the {@code Deadline} of the {@code EditTaskDescriptor} that we are building.","lastModifiedDate":"2021-10-19"},{"lineNumber":42,"author":{"gitId":"Neha-5678"},"content":"     */","lastModifiedDate":"2021-10-19"},{"lineNumber":43,"author":{"gitId":"Neha-5678"},"content":"    public EditTaskDescriptorBuilder withDeadline(String deadline) {","lastModifiedDate":"2021-10-19"},{"lineNumber":44,"author":{"gitId":"Neha-5678"},"content":"        descriptor.setDeadline(new Deadline(deadline));","lastModifiedDate":"2021-10-19"},{"lineNumber":45,"author":{"gitId":"Neha-5678"},"content":"        return this;","lastModifiedDate":"2021-10-19"},{"lineNumber":46,"author":{"gitId":"Neha-5678"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":47,"author":{"gitId":"Neha-5678"},"content":"","lastModifiedDate":"2021-10-19"},{"lineNumber":48,"author":{"gitId":"Neha-5678"},"content":"    public EditTaskDescriptor build() {","lastModifiedDate":"2021-10-19"},{"lineNumber":49,"author":{"gitId":"Neha-5678"},"content":"        return descriptor;","lastModifiedDate":"2021-10-19"},{"lineNumber":50,"author":{"gitId":"Neha-5678"},"content":"    }","lastModifiedDate":"2021-10-19"},{"lineNumber":51,"author":{"gitId":"Neha-5678"},"content":"}","lastModifiedDate":"2021-10-19"}],"authorContributionMap":{"Neha-5678":51}},{"path":"src/test/java/seedu/address/testutil/GroupBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"kvihashini"},"content":"package seedu.address.testutil;","lastModifiedDate":"2021-10-18"},{"lineNumber":2,"author":{"gitId":"kvihashini"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":3,"author":{"gitId":"Neha-5678"},"content":"import java.util.HashSet;","lastModifiedDate":"2021-11-06"},{"lineNumber":4,"author":{"gitId":"Neha-5678"},"content":"import java.util.Set;","lastModifiedDate":"2021-11-06"},{"lineNumber":5,"author":{"gitId":"kvihashini"},"content":"import java.util.UUID;","lastModifiedDate":"2021-10-18"},{"lineNumber":6,"author":{"gitId":"kvihashini"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":7,"author":{"gitId":"kvihashini"},"content":"import seedu.address.model.group.Group;","lastModifiedDate":"2021-10-18"},{"lineNumber":8,"author":{"gitId":"kvihashini"},"content":"import seedu.address.model.group.GroupName;","lastModifiedDate":"2021-10-18"},{"lineNumber":9,"author":{"gitId":"kvihashini"},"content":"import seedu.address.model.id.UniqueId;","lastModifiedDate":"2021-10-18"},{"lineNumber":10,"author":{"gitId":"Neha-5678"},"content":"import seedu.address.model.lesson.NoOverlapLessonList;","lastModifiedDate":"2021-11-06"},{"lineNumber":11,"author":{"gitId":"Neha-5678"},"content":"import seedu.address.model.util.SampleDataUtil;","lastModifiedDate":"2021-11-06"},{"lineNumber":12,"author":{"gitId":"kvihashini"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":13,"author":{"gitId":"Neha-5678"},"content":"/**","lastModifiedDate":"2021-11-06"},{"lineNumber":14,"author":{"gitId":"Neha-5678"},"content":" * A utility class to help with building Group objects.","lastModifiedDate":"2021-11-06"},{"lineNumber":15,"author":{"gitId":"Neha-5678"},"content":" */","lastModifiedDate":"2021-11-06"},{"lineNumber":16,"author":{"gitId":"kvihashini"},"content":"public class GroupBuilder {","lastModifiedDate":"2021-10-18"},{"lineNumber":17,"author":{"gitId":"Neha-5678"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":18,"author":{"gitId":"Neha-5678"},"content":"    public static final String DEFAULT_NAME \u003d \"Stats tutorial\";","lastModifiedDate":"2021-11-06"},{"lineNumber":19,"author":{"gitId":"kvihashini"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":20,"author":{"gitId":"kvihashini"},"content":"    private GroupName name;","lastModifiedDate":"2021-10-18"},{"lineNumber":21,"author":{"gitId":"kvihashini"},"content":"    private UniqueId uniqueId;","lastModifiedDate":"2021-10-18"},{"lineNumber":22,"author":{"gitId":"Neha-5678"},"content":"    private Set\u003cUniqueId\u003e assignedTaskIds;","lastModifiedDate":"2021-11-06"},{"lineNumber":23,"author":{"gitId":"Neha-5678"},"content":"    private Set\u003cUniqueId\u003e assignedPersonIds;","lastModifiedDate":"2021-11-06"},{"lineNumber":24,"author":{"gitId":"Neha-5678"},"content":"    private NoOverlapLessonList lessonsList;","lastModifiedDate":"2021-11-06"},{"lineNumber":25,"author":{"gitId":"kvihashini"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":26,"author":{"gitId":"kvihashini"},"content":"    /**","lastModifiedDate":"2021-10-18"},{"lineNumber":27,"author":{"gitId":"kvihashini"},"content":"     * Creates a {@code GroupBuilder} with the default details.","lastModifiedDate":"2021-10-18"},{"lineNumber":28,"author":{"gitId":"kvihashini"},"content":"     */","lastModifiedDate":"2021-10-18"},{"lineNumber":29,"author":{"gitId":"kvihashini"},"content":"    public GroupBuilder() {","lastModifiedDate":"2021-10-18"},{"lineNumber":30,"author":{"gitId":"kvihashini"},"content":"        this.name \u003d new GroupName(DEFAULT_NAME);","lastModifiedDate":"2021-10-18"},{"lineNumber":31,"author":{"gitId":"kvihashini"},"content":"        this.uniqueId \u003d UniqueId.generateId(UUID.randomUUID().toString());","lastModifiedDate":"2021-10-18"},{"lineNumber":32,"author":{"gitId":"Neha-5678"},"content":"        this.assignedTaskIds \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2021-11-06"},{"lineNumber":33,"author":{"gitId":"Neha-5678"},"content":"        this.assignedPersonIds \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2021-11-06"},{"lineNumber":34,"author":{"gitId":"Neha-5678"},"content":"        this.lessonsList \u003d new NoOverlapLessonList();","lastModifiedDate":"2021-11-06"},{"lineNumber":35,"author":{"gitId":"kvihashini"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":36,"author":{"gitId":"kvihashini"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":37,"author":{"gitId":"kvihashini"},"content":"    /**","lastModifiedDate":"2021-10-18"},{"lineNumber":38,"author":{"gitId":"kvihashini"},"content":"     * Initializes the GroupBuilder with the data of {@code groupToCopy}.","lastModifiedDate":"2021-10-18"},{"lineNumber":39,"author":{"gitId":"kvihashini"},"content":"     */","lastModifiedDate":"2021-10-18"},{"lineNumber":40,"author":{"gitId":"kvihashini"},"content":"    public GroupBuilder(Group groupToCopy) {","lastModifiedDate":"2021-10-18"},{"lineNumber":41,"author":{"gitId":"kvihashini"},"content":"        name \u003d groupToCopy.getName();","lastModifiedDate":"2021-10-18"},{"lineNumber":42,"author":{"gitId":"kvihashini"},"content":"        uniqueId \u003d groupToCopy.getId();","lastModifiedDate":"2021-10-18"},{"lineNumber":43,"author":{"gitId":"Neha-5678"},"content":"        this.assignedTaskIds \u003d new HashSet\u003c\u003e(groupToCopy.getAssignedTaskIds());","lastModifiedDate":"2021-11-06"},{"lineNumber":44,"author":{"gitId":"Neha-5678"},"content":"        this.assignedPersonIds \u003d new HashSet\u003c\u003e(groupToCopy.getAssignedPersonIds());","lastModifiedDate":"2021-11-06"},{"lineNumber":45,"author":{"gitId":"Neha-5678"},"content":"        this.lessonsList \u003d NoOverlapLessonList.of(groupToCopy.getLessons());","lastModifiedDate":"2021-11-06"},{"lineNumber":46,"author":{"gitId":"kvihashini"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":47,"author":{"gitId":"kvihashini"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":48,"author":{"gitId":"kvihashini"},"content":"    /**","lastModifiedDate":"2021-10-18"},{"lineNumber":49,"author":{"gitId":"kvihashini"},"content":"     * Sets the {@code Description} of the {@code Group} that we are building.","lastModifiedDate":"2021-10-18"},{"lineNumber":50,"author":{"gitId":"kvihashini"},"content":"     */","lastModifiedDate":"2021-10-18"},{"lineNumber":51,"author":{"gitId":"kvihashini"},"content":"    public GroupBuilder withName(String name) {","lastModifiedDate":"2021-10-18"},{"lineNumber":52,"author":{"gitId":"kvihashini"},"content":"        this.name \u003d new GroupName(name);","lastModifiedDate":"2021-10-18"},{"lineNumber":53,"author":{"gitId":"kvihashini"},"content":"        return this;","lastModifiedDate":"2021-10-18"},{"lineNumber":54,"author":{"gitId":"kvihashini"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":55,"author":{"gitId":"kvihashini"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":56,"author":{"gitId":"kvihashini"},"content":"    /**","lastModifiedDate":"2021-10-18"},{"lineNumber":57,"author":{"gitId":"kvihashini"},"content":"     * Sets the {@code UniqueId} of the {@code Group} that we are building.","lastModifiedDate":"2021-10-18"},{"lineNumber":58,"author":{"gitId":"kvihashini"},"content":"     */","lastModifiedDate":"2021-10-18"},{"lineNumber":59,"author":{"gitId":"kvihashini"},"content":"    public GroupBuilder withUniqueId(String uniqueId) {","lastModifiedDate":"2021-10-18"},{"lineNumber":60,"author":{"gitId":"kvihashini"},"content":"        this.uniqueId \u003d UniqueId.generateId(uniqueId);","lastModifiedDate":"2021-10-18"},{"lineNumber":61,"author":{"gitId":"kvihashini"},"content":"        return this;","lastModifiedDate":"2021-10-18"},{"lineNumber":62,"author":{"gitId":"kvihashini"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":63,"author":{"gitId":"kvihashini"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":64,"author":{"gitId":"Neha-5678"},"content":"    /**","lastModifiedDate":"2021-11-06"},{"lineNumber":65,"author":{"gitId":"Neha-5678"},"content":"     * Parses the {@code ids} into a {@code Set\u003cUniqueId\u003e} and set it to the {@code Group} that we are building.","lastModifiedDate":"2021-11-06"},{"lineNumber":66,"author":{"gitId":"Neha-5678"},"content":"     */","lastModifiedDate":"2021-11-06"},{"lineNumber":67,"author":{"gitId":"Neha-5678"},"content":"    public GroupBuilder withAssignedTaskIds(String ... assignedTaskIds) {","lastModifiedDate":"2021-11-06"},{"lineNumber":68,"author":{"gitId":"Neha-5678"},"content":"        this.assignedTaskIds \u003d SampleDataUtil.getUniqueIdSet(assignedTaskIds);","lastModifiedDate":"2021-11-06"},{"lineNumber":69,"author":{"gitId":"Neha-5678"},"content":"        return this;","lastModifiedDate":"2021-11-06"},{"lineNumber":70,"author":{"gitId":"Neha-5678"},"content":"    }","lastModifiedDate":"2021-11-06"},{"lineNumber":71,"author":{"gitId":"Neha-5678"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":72,"author":{"gitId":"Neha-5678"},"content":"    /**","lastModifiedDate":"2021-11-06"},{"lineNumber":73,"author":{"gitId":"Neha-5678"},"content":"     * Parses the {@code ids} into a {@code Set\u003cUniqueId\u003e} and set it to the {@code Group} that we are building.","lastModifiedDate":"2021-11-06"},{"lineNumber":74,"author":{"gitId":"Neha-5678"},"content":"     */","lastModifiedDate":"2021-11-06"},{"lineNumber":75,"author":{"gitId":"Neha-5678"},"content":"    public GroupBuilder withAssignedPersonIds(String ... assignedPersonIds) {","lastModifiedDate":"2021-11-06"},{"lineNumber":76,"author":{"gitId":"Neha-5678"},"content":"        this.assignedPersonIds \u003d SampleDataUtil.getUniqueIdSet(assignedPersonIds);","lastModifiedDate":"2021-11-06"},{"lineNumber":77,"author":{"gitId":"Neha-5678"},"content":"        return this;","lastModifiedDate":"2021-11-06"},{"lineNumber":78,"author":{"gitId":"Neha-5678"},"content":"    }","lastModifiedDate":"2021-11-06"},{"lineNumber":79,"author":{"gitId":"Neha-5678"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":80,"author":{"gitId":"Neha-5678"},"content":"    /**","lastModifiedDate":"2021-11-06"},{"lineNumber":81,"author":{"gitId":"Neha-5678"},"content":"     * Sets the {@code Lessons List} of the {@code Group} that we are building.","lastModifiedDate":"2021-11-06"},{"lineNumber":82,"author":{"gitId":"Neha-5678"},"content":"     */","lastModifiedDate":"2021-11-06"},{"lineNumber":83,"author":{"gitId":"Neha-5678"},"content":"    public GroupBuilder withLessonsList(NoOverlapLessonList lessonsList) {","lastModifiedDate":"2021-11-06"},{"lineNumber":84,"author":{"gitId":"Neha-5678"},"content":"        this.lessonsList \u003d lessonsList;","lastModifiedDate":"2021-11-06"},{"lineNumber":85,"author":{"gitId":"Neha-5678"},"content":"        return this;","lastModifiedDate":"2021-11-06"},{"lineNumber":86,"author":{"gitId":"Neha-5678"},"content":"    }","lastModifiedDate":"2021-11-06"},{"lineNumber":87,"author":{"gitId":"Neha-5678"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":88,"author":{"gitId":"kvihashini"},"content":"    /**","lastModifiedDate":"2021-10-18"},{"lineNumber":89,"author":{"gitId":"kvihashini"},"content":"     * Builds a {@code Group} object from the {@code GroupBuilder}.","lastModifiedDate":"2021-10-18"},{"lineNumber":90,"author":{"gitId":"kvihashini"},"content":"     *","lastModifiedDate":"2021-10-18"},{"lineNumber":91,"author":{"gitId":"kvihashini"},"content":"     * @return A {@code Group} object.","lastModifiedDate":"2021-10-18"},{"lineNumber":92,"author":{"gitId":"kvihashini"},"content":"     */","lastModifiedDate":"2021-10-18"},{"lineNumber":93,"author":{"gitId":"kvihashini"},"content":"    public Group build() {","lastModifiedDate":"2021-10-18"},{"lineNumber":94,"author":{"gitId":"kvihashini"},"content":"        Group group \u003d new Group(name);","lastModifiedDate":"2021-10-18"},{"lineNumber":95,"author":{"gitId":"kvihashini"},"content":"        uniqueId.setOwner(group);","lastModifiedDate":"2021-10-18"},{"lineNumber":96,"author":{"gitId":"kvihashini"},"content":"        return group;","lastModifiedDate":"2021-10-18"},{"lineNumber":97,"author":{"gitId":"kvihashini"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":98,"author":{"gitId":"kvihashini"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":99,"author":{"gitId":"kvihashini"},"content":"    /**","lastModifiedDate":"2021-10-25"},{"lineNumber":100,"author":{"gitId":"kvihashini"},"content":"     * Builds a {@code Group} object with ID from the {@code GroupBuilder}.","lastModifiedDate":"2021-10-25"},{"lineNumber":101,"author":{"gitId":"kvihashini"},"content":"     *","lastModifiedDate":"2021-10-25"},{"lineNumber":102,"author":{"gitId":"kvihashini"},"content":"     * @return A {@code Group} object.","lastModifiedDate":"2021-10-25"},{"lineNumber":103,"author":{"gitId":"kvihashini"},"content":"     */","lastModifiedDate":"2021-10-25"},{"lineNumber":104,"author":{"gitId":"kvihashini"},"content":"    public Group buildWithID() {","lastModifiedDate":"2021-10-25"},{"lineNumber":105,"author":{"gitId":"kvihashini"},"content":"        Group anotherGroup \u003d new Group(name, uniqueId);","lastModifiedDate":"2021-10-25"},{"lineNumber":106,"author":{"gitId":"kvihashini"},"content":"        uniqueId.setOwner(anotherGroup);","lastModifiedDate":"2021-10-25"},{"lineNumber":107,"author":{"gitId":"kvihashini"},"content":"        return anotherGroup;","lastModifiedDate":"2021-10-25"},{"lineNumber":108,"author":{"gitId":"kvihashini"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":109,"author":{"gitId":"kvihashini"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":110,"author":{"gitId":"kvihashini"},"content":"    /**","lastModifiedDate":"2021-10-25"},{"lineNumber":111,"author":{"gitId":"kvihashini"},"content":"     * Builds a {@code Group} object to copy from the {@code GroupBuilder}.","lastModifiedDate":"2021-10-25"},{"lineNumber":112,"author":{"gitId":"kvihashini"},"content":"     *","lastModifiedDate":"2021-10-25"},{"lineNumber":113,"author":{"gitId":"kvihashini"},"content":"     * @return A {@code Group} object.","lastModifiedDate":"2021-10-25"},{"lineNumber":114,"author":{"gitId":"kvihashini"},"content":"     */","lastModifiedDate":"2021-10-25"},{"lineNumber":115,"author":{"gitId":"kvihashini"},"content":"    public Group buildToCopy() {","lastModifiedDate":"2021-10-25"},{"lineNumber":116,"author":{"gitId":"kvihashini"},"content":"        Group groupToCopy \u003d new Group(name, uniqueId);","lastModifiedDate":"2021-10-25"},{"lineNumber":117,"author":{"gitId":"kvihashini"},"content":"        Group originalGroup \u003d new Group(groupToCopy);","lastModifiedDate":"2021-10-25"},{"lineNumber":118,"author":{"gitId":"kvihashini"},"content":"        return originalGroup;","lastModifiedDate":"2021-10-25"},{"lineNumber":119,"author":{"gitId":"kvihashini"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":120,"author":{"gitId":"kvihashini"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":121,"author":{"gitId":"kvihashini"},"content":"}","lastModifiedDate":"2021-10-18"}],"authorContributionMap":{"Neha-5678":42,"kvihashini":79}},{"path":"src/test/java/seedu/address/testutil/LessonBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"tanhuakun"},"content":"package seedu.address.testutil;","lastModifiedDate":"2021-10-12"},{"lineNumber":2,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":3,"author":{"gitId":"tanhuakun"},"content":"import java.time.DayOfWeek;","lastModifiedDate":"2021-10-12"},{"lineNumber":4,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":5,"author":{"gitId":"tanhuakun"},"content":"import seedu.address.model.lesson.Lesson;","lastModifiedDate":"2021-10-12"},{"lineNumber":6,"author":{"gitId":"tanhuakun"},"content":"import seedu.address.model.lesson.Subject;","lastModifiedDate":"2021-10-12"},{"lineNumber":7,"author":{"gitId":"tanhuakun"},"content":"import seedu.address.model.lesson.Timeslot;","lastModifiedDate":"2021-10-12"},{"lineNumber":8,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":9,"author":{"gitId":"tanhuakun"},"content":"/**","lastModifiedDate":"2021-10-12"},{"lineNumber":10,"author":{"gitId":"tanhuakun"},"content":" * A utility class to help with building Person objects.","lastModifiedDate":"2021-10-12"},{"lineNumber":11,"author":{"gitId":"tanhuakun"},"content":" */","lastModifiedDate":"2021-10-12"},{"lineNumber":12,"author":{"gitId":"tanhuakun"},"content":"public class LessonBuilder {","lastModifiedDate":"2021-10-12"},{"lineNumber":13,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":14,"author":{"gitId":"tanhuakun"},"content":"    public static final Timeslot DEFAULT_TIMESLOT \u003d new Timeslot(\"11:00\", \"13:00\");","lastModifiedDate":"2021-10-12"},{"lineNumber":15,"author":{"gitId":"tanhuakun"},"content":"    public static final Subject DEFAULT_SUBJECT \u003d new Subject(\"Biology\");","lastModifiedDate":"2021-10-12"},{"lineNumber":16,"author":{"gitId":"tanhuakun"},"content":"    public static final DayOfWeek DEFAULT_DAY_OF_WEEK \u003d DayOfWeek.of(1);","lastModifiedDate":"2021-10-12"},{"lineNumber":17,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":18,"author":{"gitId":"tanhuakun"},"content":"    private Timeslot timeslot;","lastModifiedDate":"2021-10-12"},{"lineNumber":19,"author":{"gitId":"tanhuakun"},"content":"    private Subject subject;","lastModifiedDate":"2021-10-12"},{"lineNumber":20,"author":{"gitId":"tanhuakun"},"content":"    private DayOfWeek dayOfWeek;","lastModifiedDate":"2021-10-12"},{"lineNumber":21,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":22,"author":{"gitId":"tanhuakun"},"content":"    /**","lastModifiedDate":"2021-10-12"},{"lineNumber":23,"author":{"gitId":"tanhuakun"},"content":"     * Creates a {@code LessonBuilder} with the default details.","lastModifiedDate":"2021-10-12"},{"lineNumber":24,"author":{"gitId":"tanhuakun"},"content":"     */","lastModifiedDate":"2021-10-12"},{"lineNumber":25,"author":{"gitId":"tanhuakun"},"content":"    public LessonBuilder() {","lastModifiedDate":"2021-10-12"},{"lineNumber":26,"author":{"gitId":"tanhuakun"},"content":"        timeslot \u003d DEFAULT_TIMESLOT;","lastModifiedDate":"2021-10-12"},{"lineNumber":27,"author":{"gitId":"tanhuakun"},"content":"        subject \u003d DEFAULT_SUBJECT;","lastModifiedDate":"2021-10-12"},{"lineNumber":28,"author":{"gitId":"tanhuakun"},"content":"        dayOfWeek \u003d DEFAULT_DAY_OF_WEEK;","lastModifiedDate":"2021-10-12"},{"lineNumber":29,"author":{"gitId":"tanhuakun"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":30,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":31,"author":{"gitId":"tanhuakun"},"content":"    /**","lastModifiedDate":"2021-10-12"},{"lineNumber":32,"author":{"gitId":"tanhuakun"},"content":"     * Creates a {@code LessonBuilder} with the details from toCopy.","lastModifiedDate":"2021-10-12"},{"lineNumber":33,"author":{"gitId":"tanhuakun"},"content":"     */","lastModifiedDate":"2021-10-12"},{"lineNumber":34,"author":{"gitId":"tanhuakun"},"content":"    public LessonBuilder(Lesson toCopy) {","lastModifiedDate":"2021-10-12"},{"lineNumber":35,"author":{"gitId":"tanhuakun"},"content":"        this.timeslot \u003d toCopy.getTimeslot();","lastModifiedDate":"2021-10-12"},{"lineNumber":36,"author":{"gitId":"tanhuakun"},"content":"        this.subject \u003d toCopy.getSubject();","lastModifiedDate":"2021-10-12"},{"lineNumber":37,"author":{"gitId":"tanhuakun"},"content":"        this.dayOfWeek \u003d toCopy.getDayOfWeek();","lastModifiedDate":"2021-10-12"},{"lineNumber":38,"author":{"gitId":"tanhuakun"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":39,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":40,"author":{"gitId":"tanhuakun"},"content":"    /**","lastModifiedDate":"2021-10-12"},{"lineNumber":41,"author":{"gitId":"tanhuakun"},"content":"     * Sets the {@code Timeslot} of the {@code Lesson} that we are building.","lastModifiedDate":"2021-10-12"},{"lineNumber":42,"author":{"gitId":"tanhuakun"},"content":"     */","lastModifiedDate":"2021-10-12"},{"lineNumber":43,"author":{"gitId":"tanhuakun"},"content":"    public LessonBuilder withTimeslot(String startTime, String endTime) {","lastModifiedDate":"2021-10-12"},{"lineNumber":44,"author":{"gitId":"tanhuakun"},"content":"        this.timeslot \u003d new Timeslot(startTime, endTime);","lastModifiedDate":"2021-10-12"},{"lineNumber":45,"author":{"gitId":"tanhuakun"},"content":"        return this;","lastModifiedDate":"2021-10-12"},{"lineNumber":46,"author":{"gitId":"tanhuakun"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":47,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":48,"author":{"gitId":"tanhuakun"},"content":"    /**","lastModifiedDate":"2021-10-12"},{"lineNumber":49,"author":{"gitId":"tanhuakun"},"content":"     * Sets the {@code Subject} of the {@code Lesson} that we are building.","lastModifiedDate":"2021-10-12"},{"lineNumber":50,"author":{"gitId":"tanhuakun"},"content":"     */","lastModifiedDate":"2021-10-12"},{"lineNumber":51,"author":{"gitId":"tanhuakun"},"content":"    public LessonBuilder withSubject(String subject) {","lastModifiedDate":"2021-10-12"},{"lineNumber":52,"author":{"gitId":"tanhuakun"},"content":"        this.subject \u003d new Subject(subject);","lastModifiedDate":"2021-10-12"},{"lineNumber":53,"author":{"gitId":"tanhuakun"},"content":"        return this;","lastModifiedDate":"2021-10-12"},{"lineNumber":54,"author":{"gitId":"tanhuakun"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":55,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":56,"author":{"gitId":"tanhuakun"},"content":"    /**","lastModifiedDate":"2021-10-12"},{"lineNumber":57,"author":{"gitId":"tanhuakun"},"content":"     * Sets the {@code DayOfWeek} of the {@code Lesson} that we are building.","lastModifiedDate":"2021-10-12"},{"lineNumber":58,"author":{"gitId":"tanhuakun"},"content":"     */","lastModifiedDate":"2021-10-12"},{"lineNumber":59,"author":{"gitId":"tanhuakun"},"content":"    public LessonBuilder withDayOfWeek(int day) {","lastModifiedDate":"2021-10-12"},{"lineNumber":60,"author":{"gitId":"tanhuakun"},"content":"        this.dayOfWeek \u003d DayOfWeek.of(day);","lastModifiedDate":"2021-10-12"},{"lineNumber":61,"author":{"gitId":"tanhuakun"},"content":"        return this;","lastModifiedDate":"2021-10-12"},{"lineNumber":62,"author":{"gitId":"tanhuakun"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":63,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":64,"author":{"gitId":"tanhuakun"},"content":"    /**","lastModifiedDate":"2021-10-12"},{"lineNumber":65,"author":{"gitId":"tanhuakun"},"content":"     * Sets the {@code DayOfWeek} of the {@code Lesson} that we are building","lastModifiedDate":"2021-10-12"},{"lineNumber":66,"author":{"gitId":"tanhuakun"},"content":"     */","lastModifiedDate":"2021-10-12"},{"lineNumber":67,"author":{"gitId":"tanhuakun"},"content":"    public LessonBuilder withDayOfWeek(DayOfWeek dayOfWeek) {","lastModifiedDate":"2021-10-12"},{"lineNumber":68,"author":{"gitId":"tanhuakun"},"content":"        this.dayOfWeek \u003d dayOfWeek;","lastModifiedDate":"2021-10-12"},{"lineNumber":69,"author":{"gitId":"tanhuakun"},"content":"        return this;","lastModifiedDate":"2021-10-12"},{"lineNumber":70,"author":{"gitId":"tanhuakun"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":71,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":72,"author":{"gitId":"tanhuakun"},"content":"    public Lesson build() {","lastModifiedDate":"2021-10-12"},{"lineNumber":73,"author":{"gitId":"tanhuakun"},"content":"        return new Lesson(timeslot, subject, dayOfWeek);","lastModifiedDate":"2021-10-20"},{"lineNumber":74,"author":{"gitId":"tanhuakun"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":75,"author":{"gitId":"tanhuakun"},"content":"}","lastModifiedDate":"2021-10-12"}],"authorContributionMap":{"tanhuakun":75}},{"path":"src/test/java/seedu/address/testutil/ModelStub.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"tanhuakun"},"content":"package seedu.address.testutil;","lastModifiedDate":"2021-10-12"},{"lineNumber":2,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":3,"author":{"gitId":"tanhuakun"},"content":"import static java.util.Objects.requireNonNull;","lastModifiedDate":"2021-10-12"},{"lineNumber":4,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":5,"author":{"gitId":"tanhuakun"},"content":"import java.nio.file.Path;","lastModifiedDate":"2021-10-12"},{"lineNumber":6,"author":{"gitId":"tanhuakun"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-12"},{"lineNumber":7,"author":{"gitId":"tanhuakun"},"content":"import java.util.function.Predicate;","lastModifiedDate":"2021-10-12"},{"lineNumber":8,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":9,"author":{"gitId":"tanhuakun"},"content":"import javafx.beans.value.ObservableValue;","lastModifiedDate":"2021-10-25"},{"lineNumber":10,"author":{"gitId":"tanhuakun"},"content":"import javafx.collections.ObservableList;","lastModifiedDate":"2021-10-12"},{"lineNumber":11,"author":{"gitId":"tanhuakun"},"content":"import seedu.address.commons.core.GuiSettings;","lastModifiedDate":"2021-10-12"},{"lineNumber":12,"author":{"gitId":"tanhuakun"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2021-10-12"},{"lineNumber":13,"author":{"gitId":"tanhuakun"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2021-10-12"},{"lineNumber":14,"author":{"gitId":"tanhuakun"},"content":"import seedu.address.model.ReadOnlyAddressBook;","lastModifiedDate":"2021-10-12"},{"lineNumber":15,"author":{"gitId":"tanhuakun"},"content":"import seedu.address.model.ReadOnlyUserPrefs;","lastModifiedDate":"2021-10-12"},{"lineNumber":16,"author":{"gitId":"tanhuakun"},"content":"import seedu.address.model.ViewingType;","lastModifiedDate":"2021-10-25"},{"lineNumber":17,"author":{"gitId":"kvihashini"},"content":"import seedu.address.model.group.Group;","lastModifiedDate":"2021-10-18"},{"lineNumber":18,"author":{"gitId":"kvihashini"},"content":"import seedu.address.model.group.GroupWithDetails;","lastModifiedDate":"2021-10-25"},{"lineNumber":19,"author":{"gitId":"tanhuakun"},"content":"import seedu.address.model.id.UniqueIdMapper;","lastModifiedDate":"2021-10-24"},{"lineNumber":20,"author":{"gitId":"tanhuakun"},"content":"import seedu.address.model.lesson.LessonWithAttendees;","lastModifiedDate":"2021-10-20"},{"lineNumber":21,"author":{"gitId":"tanhuakun"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2021-10-12"},{"lineNumber":22,"author":{"gitId":"tanhuakun"},"content":"import seedu.address.model.person.PersonWithDetails;","lastModifiedDate":"2021-10-25"},{"lineNumber":23,"author":{"gitId":"tanhuakun"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2021-10-12"},{"lineNumber":24,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":25,"author":{"gitId":"-"},"content":"// @@author {tanhuakun}-reused","lastModifiedDate":"2021-11-08"},{"lineNumber":26,"author":{"gitId":"-"},"content":"// Refactored from an inner class in AB3 code. Should not be counted as mine.","lastModifiedDate":"2021-11-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-11-08"},{"lineNumber":28,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2021-10-12"},{"lineNumber":29,"author":{"gitId":"-"},"content":" * A default model stub that have all the methods failing.","lastModifiedDate":"2021-10-12"},{"lineNumber":30,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2021-10-12"},{"lineNumber":31,"author":{"gitId":"-"},"content":"public class ModelStub implements Model {","lastModifiedDate":"2021-10-12"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2021-10-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public void setUserPrefs(ReadOnlyUserPrefs userPrefs) {","lastModifiedDate":"2021-10-12"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-12"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":36,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2021-10-12"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    public ReadOnlyUserPrefs getUserPrefs() {","lastModifiedDate":"2021-10-12"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-12"},{"lineNumber":40,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":41,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2021-10-12"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    public GuiSettings getGuiSettings() {","lastModifiedDate":"2021-10-12"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-12"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":46,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2021-10-12"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public void setGuiSettings(GuiSettings guiSettings) {","lastModifiedDate":"2021-10-12"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-12"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":51,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":52,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2021-10-12"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public Path getAddressBookFilePath() {","lastModifiedDate":"2021-10-12"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-12"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":56,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":57,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2021-10-12"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    public void setAddressBookFilePath(Path addressBookFilePath) {","lastModifiedDate":"2021-10-12"},{"lineNumber":59,"author":{"gitId":"-"},"content":"        throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-12"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":61,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2021-10-12"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    public void setAddressBook(ReadOnlyAddressBook newData) {","lastModifiedDate":"2021-10-12"},{"lineNumber":64,"author":{"gitId":"-"},"content":"        throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-12"},{"lineNumber":65,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":66,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":67,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2021-10-12"},{"lineNumber":68,"author":{"gitId":"-"},"content":"    public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2021-10-12"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-12"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":71,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2021-10-12"},{"lineNumber":73,"author":{"gitId":"-"},"content":"    public void addPerson(Person person) {","lastModifiedDate":"2021-10-12"},{"lineNumber":74,"author":{"gitId":"-"},"content":"        throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-12"},{"lineNumber":75,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":76,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":77,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2021-10-12"},{"lineNumber":78,"author":{"gitId":"-"},"content":"    public boolean hasPerson(Person person) {","lastModifiedDate":"2021-10-12"},{"lineNumber":79,"author":{"gitId":"-"},"content":"        throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-12"},{"lineNumber":80,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":81,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":82,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2021-10-12"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    public void deletePerson(Person target) {","lastModifiedDate":"2021-10-12"},{"lineNumber":84,"author":{"gitId":"-"},"content":"        throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-12"},{"lineNumber":85,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":86,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":87,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2021-10-12"},{"lineNumber":88,"author":{"gitId":"-"},"content":"    public void setPerson(Person target, Person editedPerson) {","lastModifiedDate":"2021-10-12"},{"lineNumber":89,"author":{"gitId":"-"},"content":"        throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-12"},{"lineNumber":90,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":91,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2021-10-12"},{"lineNumber":93,"author":{"gitId":"-"},"content":"    public ObservableList\u003cPerson\u003e getFilteredPersonList() {","lastModifiedDate":"2021-10-12"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-12"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2021-10-12"},{"lineNumber":98,"author":{"gitId":"-"},"content":"    public void updateFilteredPersonList(Predicate\u003cPerson\u003e predicate) {","lastModifiedDate":"2021-10-12"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-12"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2021-10-12"},{"lineNumber":103,"author":{"gitId":"-"},"content":"    public void addTask(Task task) {","lastModifiedDate":"2021-10-12"},{"lineNumber":104,"author":{"gitId":"-"},"content":"        throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-12"},{"lineNumber":105,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":106,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":107,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2021-10-12"},{"lineNumber":108,"author":{"gitId":"-"},"content":"    public boolean hasTask(Task task) {","lastModifiedDate":"2021-10-12"},{"lineNumber":109,"author":{"gitId":"-"},"content":"        throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-12"},{"lineNumber":110,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":111,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":112,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2021-10-12"},{"lineNumber":113,"author":{"gitId":"-"},"content":"    public void deleteTask(Task target) {","lastModifiedDate":"2021-10-12"},{"lineNumber":114,"author":{"gitId":"-"},"content":"        throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-12"},{"lineNumber":115,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":116,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":117,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2021-10-12"},{"lineNumber":118,"author":{"gitId":"-"},"content":"    public void setTask(Task target, Task editedTask) {","lastModifiedDate":"2021-10-12"},{"lineNumber":119,"author":{"gitId":"-"},"content":"        throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-12"},{"lineNumber":120,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":121,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":122,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2021-10-12"},{"lineNumber":123,"author":{"gitId":"-"},"content":"    public ObservableList\u003cTask\u003e getFilteredTaskList() {","lastModifiedDate":"2021-10-12"},{"lineNumber":124,"author":{"gitId":"-"},"content":"        throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-12"},{"lineNumber":125,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":126,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":127,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2021-10-12"},{"lineNumber":128,"author":{"gitId":"-"},"content":"    public void updateFilteredTaskList(Predicate\u003cTask\u003e predicate) {","lastModifiedDate":"2021-10-12"},{"lineNumber":129,"author":{"gitId":"-"},"content":"        throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-12"},{"lineNumber":130,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":131,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2021-10-18"},{"lineNumber":133,"author":{"gitId":"-"},"content":"    public void addGroup(Group group) {","lastModifiedDate":"2021-10-18"},{"lineNumber":134,"author":{"gitId":"-"},"content":"        throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-18"},{"lineNumber":135,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":136,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2021-10-18"},{"lineNumber":138,"author":{"gitId":"-"},"content":"    public boolean hasGroup(Group group) {","lastModifiedDate":"2021-10-18"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-18"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2021-10-18"},{"lineNumber":143,"author":{"gitId":"-"},"content":"    public void deleteGroup(Group target) {","lastModifiedDate":"2021-10-18"},{"lineNumber":144,"author":{"gitId":"-"},"content":"        throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-18"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":146,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":147,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2021-10-18"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    public void setGroup(Group target, Group editedGroup) {","lastModifiedDate":"2021-10-18"},{"lineNumber":149,"author":{"gitId":"-"},"content":"        throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-18"},{"lineNumber":150,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":151,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":152,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2021-10-18"},{"lineNumber":153,"author":{"gitId":"-"},"content":"    public ObservableList\u003cGroup\u003e getFilteredGroupList() {","lastModifiedDate":"2021-10-18"},{"lineNumber":154,"author":{"gitId":"-"},"content":"        throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-18"},{"lineNumber":155,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":156,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":157,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2021-10-18"},{"lineNumber":158,"author":{"gitId":"-"},"content":"    public void updateFilteredGroupList(Predicate\u003cGroup\u003e predicate) {","lastModifiedDate":"2021-10-18"},{"lineNumber":159,"author":{"gitId":"-"},"content":"        throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-18"},{"lineNumber":160,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":161,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":162,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2021-10-20"},{"lineNumber":163,"author":{"gitId":"-"},"content":"    public ObservableList\u003cLessonWithAttendees\u003e getSortedLessonsWithAttendees() {","lastModifiedDate":"2021-10-25"},{"lineNumber":164,"author":{"gitId":"-"},"content":"        throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-25"},{"lineNumber":165,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":166,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":167,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2021-10-25"},{"lineNumber":168,"author":{"gitId":"-"},"content":"    public void updateLessonWithAttendeesList() {","lastModifiedDate":"2021-10-25"},{"lineNumber":169,"author":{"gitId":"-"},"content":"        throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-25"},{"lineNumber":170,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":171,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":172,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2021-10-25"},{"lineNumber":173,"author":{"gitId":"-"},"content":"    public ObservableValue\u003cViewingType\u003e getViewingType() {","lastModifiedDate":"2021-10-25"},{"lineNumber":174,"author":{"gitId":"-"},"content":"        throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-25"},{"lineNumber":175,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":176,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":177,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2021-10-25"},{"lineNumber":178,"author":{"gitId":"-"},"content":"    public void setViewingType(ViewingType type) {","lastModifiedDate":"2021-10-25"},{"lineNumber":179,"author":{"gitId":"-"},"content":"        throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-25"},{"lineNumber":180,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":181,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":182,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2021-10-25"},{"lineNumber":183,"author":{"gitId":"-"},"content":"    public ObservableValue\u003cPersonWithDetails\u003e getViewingPersonWithDetails() {","lastModifiedDate":"2021-10-25"},{"lineNumber":184,"author":{"gitId":"-"},"content":"        throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-25"},{"lineNumber":185,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":186,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":187,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2021-10-25"},{"lineNumber":188,"author":{"gitId":"-"},"content":"    public ObservableValue\u003cGroupWithDetails\u003e getViewingGroupWithDetails() {","lastModifiedDate":"2021-10-25"},{"lineNumber":189,"author":{"gitId":"-"},"content":"        throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-25"},{"lineNumber":190,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":191,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":192,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2021-10-25"},{"lineNumber":193,"author":{"gitId":"-"},"content":"    public void setPersonToView(Person person) {","lastModifiedDate":"2021-10-25"},{"lineNumber":194,"author":{"gitId":"-"},"content":"        throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-20"},{"lineNumber":195,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-20"},{"lineNumber":196,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-20"},{"lineNumber":197,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2021-10-25"},{"lineNumber":198,"author":{"gitId":"-"},"content":"    public void setGroupToView(Group group) {","lastModifiedDate":"2021-10-25"},{"lineNumber":199,"author":{"gitId":"-"},"content":"        throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-25"},{"lineNumber":200,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":201,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":202,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2021-10-24"},{"lineNumber":203,"author":{"gitId":"-"},"content":"    public UniqueIdMapper\u003cPerson\u003e getPersonMapper() {","lastModifiedDate":"2021-10-24"},{"lineNumber":204,"author":{"gitId":"-"},"content":"        throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-24"},{"lineNumber":205,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":206,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":207,"author":{"gitId":"-"},"content":"    @Override","lastModifiedDate":"2021-10-24"},{"lineNumber":208,"author":{"gitId":"-"},"content":"    public UniqueIdMapper\u003cGroup\u003e getGroupMapper() {","lastModifiedDate":"2021-10-24"},{"lineNumber":209,"author":{"gitId":"-"},"content":"        throw new AssertionError(\"This method should not be called.\");","lastModifiedDate":"2021-10-24"},{"lineNumber":210,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-24"},{"lineNumber":211,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":212,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-10-12"},{"lineNumber":213,"author":{"gitId":"-"},"content":"     * A Model stub that contains a single person.","lastModifiedDate":"2021-10-12"},{"lineNumber":214,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-10-12"},{"lineNumber":215,"author":{"gitId":"-"},"content":"    public static class ModelStubWithPerson extends ModelStub {","lastModifiedDate":"2021-10-12"},{"lineNumber":216,"author":{"gitId":"-"},"content":"        private final Person person;","lastModifiedDate":"2021-10-12"},{"lineNumber":217,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":218,"author":{"gitId":"-"},"content":"        /**","lastModifiedDate":"2021-10-12"},{"lineNumber":219,"author":{"gitId":"-"},"content":"         * Constructs a {@code ModelStubWithPerson} with the specified person","lastModifiedDate":"2021-10-12"},{"lineNumber":220,"author":{"gitId":"-"},"content":"         * @param person person to add to this model stub","lastModifiedDate":"2021-10-12"},{"lineNumber":221,"author":{"gitId":"-"},"content":"         */","lastModifiedDate":"2021-10-12"},{"lineNumber":222,"author":{"gitId":"-"},"content":"        public ModelStubWithPerson(Person person) {","lastModifiedDate":"2021-10-12"},{"lineNumber":223,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2021-10-12"},{"lineNumber":224,"author":{"gitId":"-"},"content":"            this.person \u003d person;","lastModifiedDate":"2021-10-12"},{"lineNumber":225,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":226,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":227,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2021-10-12"},{"lineNumber":228,"author":{"gitId":"-"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2021-10-12"},{"lineNumber":229,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2021-10-12"},{"lineNumber":230,"author":{"gitId":"-"},"content":"            return this.person.isSamePerson(person);","lastModifiedDate":"2021-10-12"},{"lineNumber":231,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":232,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":233,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":234,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2021-10-12"},{"lineNumber":235,"author":{"gitId":"-"},"content":"     * A Model stub that always accept the person being added.","lastModifiedDate":"2021-10-12"},{"lineNumber":236,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2021-10-12"},{"lineNumber":237,"author":{"gitId":"-"},"content":"    public static class ModelStubAcceptingPersonAdded extends ModelStub {","lastModifiedDate":"2021-10-12"},{"lineNumber":238,"author":{"gitId":"-"},"content":"        public final ArrayList\u003cPerson\u003e personsAdded \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-12"},{"lineNumber":239,"author":{"gitId":"-"},"content":"        private Person toView \u003d null;","lastModifiedDate":"2021-11-04"},{"lineNumber":240,"author":{"gitId":"-"},"content":"        private ViewingType viewingType \u003d null;","lastModifiedDate":"2021-11-04"},{"lineNumber":241,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":242,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2021-10-12"},{"lineNumber":243,"author":{"gitId":"-"},"content":"        public boolean hasPerson(Person person) {","lastModifiedDate":"2021-10-12"},{"lineNumber":244,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2021-10-12"},{"lineNumber":245,"author":{"gitId":"-"},"content":"            return personsAdded.stream().anyMatch(person::isSamePerson);","lastModifiedDate":"2021-10-12"},{"lineNumber":246,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":247,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":248,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2021-10-12"},{"lineNumber":249,"author":{"gitId":"-"},"content":"        public void addPerson(Person person) {","lastModifiedDate":"2021-10-12"},{"lineNumber":250,"author":{"gitId":"-"},"content":"            requireNonNull(person);","lastModifiedDate":"2021-10-12"},{"lineNumber":251,"author":{"gitId":"-"},"content":"            personsAdded.add(person);","lastModifiedDate":"2021-10-12"},{"lineNumber":252,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":253,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":254,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2021-11-04"},{"lineNumber":255,"author":{"gitId":"-"},"content":"        public void setPersonToView(Person person) {","lastModifiedDate":"2021-11-04"},{"lineNumber":256,"author":{"gitId":"-"},"content":"            toView \u003d person;","lastModifiedDate":"2021-11-04"},{"lineNumber":257,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-11-04"},{"lineNumber":258,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":259,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2021-11-04"},{"lineNumber":260,"author":{"gitId":"-"},"content":"        public void setViewingType(ViewingType type) {","lastModifiedDate":"2021-11-04"},{"lineNumber":261,"author":{"gitId":"-"},"content":"            viewingType \u003d type;","lastModifiedDate":"2021-11-04"},{"lineNumber":262,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-11-04"},{"lineNumber":263,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-11-04"},{"lineNumber":264,"author":{"gitId":"-"},"content":"        @Override","lastModifiedDate":"2021-10-12"},{"lineNumber":265,"author":{"gitId":"-"},"content":"        public ReadOnlyAddressBook getAddressBook() {","lastModifiedDate":"2021-10-12"},{"lineNumber":266,"author":{"gitId":"-"},"content":"            return new AddressBook();","lastModifiedDate":"2021-10-12"},{"lineNumber":267,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2021-10-12"},{"lineNumber":268,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":269,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":270,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2021-10-12"}],"authorContributionMap":{"kvihashini":2,"tanhuakun":22,"-":246}},{"path":"src/test/java/seedu/address/testutil/PersonBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2016-09-03"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":3,"author":{"gitId":"tanhuakun"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-16"},{"lineNumber":4,"author":{"gitId":"jeremy-7007"},"content":"import java.util.HashMap;","lastModifiedDate":"2021-10-26"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.util.HashSet;","lastModifiedDate":"2017-12-20"},{"lineNumber":6,"author":{"gitId":"tanhuakun"},"content":"import java.util.List;","lastModifiedDate":"2021-10-16"},{"lineNumber":7,"author":{"gitId":"jeremy-7007"},"content":"import java.util.Map;","lastModifiedDate":"2021-10-26"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2017-04-05"},{"lineNumber":9,"author":{"gitId":"eltonyeh"},"content":"import java.util.UUID;","lastModifiedDate":"2021-10-12"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":11,"author":{"gitId":"eltonyeh"},"content":"import seedu.address.model.id.UniqueId;","lastModifiedDate":"2021-10-12"},{"lineNumber":12,"author":{"gitId":"tanhuakun"},"content":"import seedu.address.model.lesson.NoOverlapLessonList;","lastModifiedDate":"2021-10-05"},{"lineNumber":13,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Address;","lastModifiedDate":"2017-01-18"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Email;","lastModifiedDate":"2017-01-18"},{"lineNumber":15,"author":{"gitId":"tanhuakun"},"content":"import seedu.address.model.person.Exam;","lastModifiedDate":"2021-10-16"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Name;","lastModifiedDate":"2017-01-18"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2017-04-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Phone;","lastModifiedDate":"2017-01-18"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2017-04-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"import seedu.address.model.util.SampleDataUtil;","lastModifiedDate":"2017-04-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":22,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-03"},{"lineNumber":23,"author":{"gitId":"-"},"content":" * A utility class to help with building Person objects.","lastModifiedDate":"2017-04-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-03"},{"lineNumber":25,"author":{"gitId":"-"},"content":"public class PersonBuilder {","lastModifiedDate":"2016-09-03"},{"lineNumber":26,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":27,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_NAME \u003d \"Amy Bee\";","lastModifiedDate":"2020-12-18"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_PHONE \u003d \"85355255\";","lastModifiedDate":"2017-04-05"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_EMAIL \u003d \"amy@gmail.com\";","lastModifiedDate":"2020-12-18"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public static final String DEFAULT_ADDRESS \u003d \"123, Jurong West Ave 6, #08-111\";","lastModifiedDate":"2017-04-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":32,"author":{"gitId":"eltonyeh"},"content":"    private UniqueId id;","lastModifiedDate":"2021-10-12"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    private Name name;","lastModifiedDate":"2017-12-20"},{"lineNumber":34,"author":{"gitId":"-"},"content":"    private Phone phone;","lastModifiedDate":"2017-12-20"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    private Email email;","lastModifiedDate":"2017-12-20"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    private Address address;","lastModifiedDate":"2017-12-20"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    private Set\u003cTag\u003e tags;","lastModifiedDate":"2017-12-20"},{"lineNumber":38,"author":{"gitId":"jeremy-7007"},"content":"    private Set\u003cUniqueId\u003e assignedTaskIds;","lastModifiedDate":"2021-10-12"},{"lineNumber":39,"author":{"gitId":"jeremy-7007"},"content":"    private Map\u003cUniqueId, Boolean\u003e tasksCompletion;","lastModifiedDate":"2021-10-26"},{"lineNumber":40,"author":{"gitId":"tanhuakun"},"content":"    private NoOverlapLessonList lessonsList;","lastModifiedDate":"2021-10-05"},{"lineNumber":41,"author":{"gitId":"tanhuakun"},"content":"    private List\u003cExam\u003e exams;","lastModifiedDate":"2021-10-16"},{"lineNumber":42,"author":{"gitId":"tanhuakun"},"content":"    private Set\u003cUniqueId\u003e assignedGroupIds;","lastModifiedDate":"2021-10-23"},{"lineNumber":43,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2020-05-27"},{"lineNumber":45,"author":{"gitId":"-"},"content":"     * Creates a {@code PersonBuilder} with the default details.","lastModifiedDate":"2020-05-27"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2020-05-27"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public PersonBuilder() {","lastModifiedDate":"2017-08-15"},{"lineNumber":48,"author":{"gitId":"eltonyeh"},"content":"        id \u003d UniqueId.generateId(UUID.randomUUID().toString());","lastModifiedDate":"2021-10-12"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        name \u003d new Name(DEFAULT_NAME);","lastModifiedDate":"2017-12-20"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        phone \u003d new Phone(DEFAULT_PHONE);","lastModifiedDate":"2017-12-20"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        email \u003d new Email(DEFAULT_EMAIL);","lastModifiedDate":"2017-12-20"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        address \u003d new Address(DEFAULT_ADDRESS);","lastModifiedDate":"2017-12-20"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        tags \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2018-03-26"},{"lineNumber":54,"author":{"gitId":"jeremy-7007"},"content":"        assignedTaskIds \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2021-10-12"},{"lineNumber":55,"author":{"gitId":"jeremy-7007"},"content":"        tasksCompletion \u003d new HashMap\u003c\u003e();","lastModifiedDate":"2021-10-26"},{"lineNumber":56,"author":{"gitId":"tanhuakun"},"content":"        lessonsList \u003d new NoOverlapLessonList();","lastModifiedDate":"2021-10-05"},{"lineNumber":57,"author":{"gitId":"tanhuakun"},"content":"        exams \u003d new ArrayList\u003c\u003e();","lastModifiedDate":"2021-10-16"},{"lineNumber":58,"author":{"gitId":"tanhuakun"},"content":"        assignedGroupIds \u003d new HashSet\u003c\u003e();","lastModifiedDate":"2021-10-23"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":60,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":61,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-12-11"},{"lineNumber":62,"author":{"gitId":"-"},"content":"     * Initializes the PersonBuilder with the data of {@code personToCopy}.","lastModifiedDate":"2016-12-11"},{"lineNumber":63,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-12-11"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public PersonBuilder(Person personToCopy) {","lastModifiedDate":"2018-01-10"},{"lineNumber":65,"author":{"gitId":"eltonyeh"},"content":"        id \u003d personToCopy.getId();","lastModifiedDate":"2021-10-12"},{"lineNumber":66,"author":{"gitId":"-"},"content":"        name \u003d personToCopy.getName();","lastModifiedDate":"2017-12-20"},{"lineNumber":67,"author":{"gitId":"-"},"content":"        phone \u003d personToCopy.getPhone();","lastModifiedDate":"2017-12-20"},{"lineNumber":68,"author":{"gitId":"-"},"content":"        email \u003d personToCopy.getEmail();","lastModifiedDate":"2017-12-20"},{"lineNumber":69,"author":{"gitId":"-"},"content":"        address \u003d personToCopy.getAddress();","lastModifiedDate":"2017-12-20"},{"lineNumber":70,"author":{"gitId":"-"},"content":"        tags \u003d new HashSet\u003c\u003e(personToCopy.getTags());","lastModifiedDate":"2017-12-20"},{"lineNumber":71,"author":{"gitId":"jeremy-7007"},"content":"        assignedTaskIds \u003d new HashSet\u003c\u003e(personToCopy.getAssignedTaskIds());","lastModifiedDate":"2021-10-12"},{"lineNumber":72,"author":{"gitId":"jeremy-7007"},"content":"        tasksCompletion \u003d new HashMap\u003c\u003e(personToCopy.getTasksCompletion());","lastModifiedDate":"2021-10-26"},{"lineNumber":73,"author":{"gitId":"tanhuakun"},"content":"        lessonsList \u003d personToCopy.getLessonsList();","lastModifiedDate":"2021-10-12"},{"lineNumber":74,"author":{"gitId":"tanhuakun"},"content":"        exams \u003d new ArrayList\u003c\u003e(personToCopy.getExams());","lastModifiedDate":"2021-10-16"},{"lineNumber":75,"author":{"gitId":"tanhuakun"},"content":"        assignedGroupIds \u003d new HashSet\u003c\u003e(personToCopy.getAssignedGroupIds());","lastModifiedDate":"2021-10-23"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-12-11"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-12-11"},{"lineNumber":78,"author":{"gitId":"eltonyeh"},"content":"    /**","lastModifiedDate":"2021-10-12"},{"lineNumber":79,"author":{"gitId":"eltonyeh"},"content":"     * Sets the {@code Id} of the {@code Person} that we are building.","lastModifiedDate":"2021-10-12"},{"lineNumber":80,"author":{"gitId":"eltonyeh"},"content":"     */","lastModifiedDate":"2021-10-12"},{"lineNumber":81,"author":{"gitId":"eltonyeh"},"content":"    public PersonBuilder withId(String id) {","lastModifiedDate":"2021-10-12"},{"lineNumber":82,"author":{"gitId":"eltonyeh"},"content":"        this.id \u003d UniqueId.generateId(id);","lastModifiedDate":"2021-10-12"},{"lineNumber":83,"author":{"gitId":"eltonyeh"},"content":"        return this;","lastModifiedDate":"2021-10-12"},{"lineNumber":84,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":85,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":87,"author":{"gitId":"-"},"content":"     * Sets the {@code Name} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":88,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":89,"author":{"gitId":"-"},"content":"    public PersonBuilder withName(String name) {","lastModifiedDate":"2017-08-15"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        this.name \u003d new Name(name);","lastModifiedDate":"2017-12-20"},{"lineNumber":91,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":92,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":93,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":94,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":95,"author":{"gitId":"-"},"content":"     * Parses the {@code tags} into a {@code Set\u003cTag\u003e} and set it to the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":96,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":97,"author":{"gitId":"-"},"content":"    public PersonBuilder withTags(String ... tags) {","lastModifiedDate":"2017-08-15"},{"lineNumber":98,"author":{"gitId":"-"},"content":"        this.tags \u003d SampleDataUtil.getTagSet(tags);","lastModifiedDate":"2017-12-20"},{"lineNumber":99,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":100,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":101,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":102,"author":{"gitId":"jeremy-7007"},"content":"    /**","lastModifiedDate":"2021-10-12"},{"lineNumber":103,"author":{"gitId":"jeremy-7007"},"content":"     * Parses the {@code ids} into a {@code Set\u003cUniqueId\u003e} and set it to the {@code Person} that we are building.","lastModifiedDate":"2021-10-12"},{"lineNumber":104,"author":{"gitId":"jeremy-7007"},"content":"     */","lastModifiedDate":"2021-10-12"},{"lineNumber":105,"author":{"gitId":"jeremy-7007"},"content":"    public PersonBuilder withAssignedTaskIds(String ... assignedTaskIds) {","lastModifiedDate":"2021-10-12"},{"lineNumber":106,"author":{"gitId":"jeremy-7007"},"content":"        this.assignedTaskIds \u003d SampleDataUtil.getUniqueIdSet(assignedTaskIds);","lastModifiedDate":"2021-10-12"},{"lineNumber":107,"author":{"gitId":"jeremy-7007"},"content":"        return this;","lastModifiedDate":"2021-10-12"},{"lineNumber":108,"author":{"gitId":"jeremy-7007"},"content":"    }","lastModifiedDate":"2021-10-12"},{"lineNumber":109,"author":{"gitId":"jeremy-7007"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":110,"author":{"gitId":"Neha-5678"},"content":"    /**","lastModifiedDate":"2021-10-26"},{"lineNumber":111,"author":{"gitId":"Neha-5678"},"content":"     * Parses the {@code ids} into a {@code Set\u003cUniqueId\u003e} and set it to the {@code Person} that we are building.","lastModifiedDate":"2021-10-26"},{"lineNumber":112,"author":{"gitId":"Neha-5678"},"content":"     */","lastModifiedDate":"2021-10-26"},{"lineNumber":113,"author":{"gitId":"Neha-5678"},"content":"    public PersonBuilder withAssignedGroupIds(String ... assignedGroupIds) {","lastModifiedDate":"2021-10-26"},{"lineNumber":114,"author":{"gitId":"Neha-5678"},"content":"        this.assignedGroupIds \u003d SampleDataUtil.getUniqueIdSet(assignedGroupIds);","lastModifiedDate":"2021-10-26"},{"lineNumber":115,"author":{"gitId":"Neha-5678"},"content":"        return this;","lastModifiedDate":"2021-10-28"},{"lineNumber":116,"author":{"gitId":"Neha-5678"},"content":"    }","lastModifiedDate":"2021-10-28"},{"lineNumber":117,"author":{"gitId":"Neha-5678"},"content":"","lastModifiedDate":"2021-10-28"},{"lineNumber":118,"author":{"gitId":"jeremy-7007"},"content":"    /**","lastModifiedDate":"2021-10-26"},{"lineNumber":119,"author":{"gitId":"jeremy-7007"},"content":"     * Copies the task completion map into {@code tasksCompletion} of the {@code Person} that we are building.","lastModifiedDate":"2021-10-26"},{"lineNumber":120,"author":{"gitId":"jeremy-7007"},"content":"     */","lastModifiedDate":"2021-10-26"},{"lineNumber":121,"author":{"gitId":"jeremy-7007"},"content":"    public PersonBuilder withTasksCompletion(Map\u003cUniqueId, Boolean\u003e tasksCompletion) {","lastModifiedDate":"2021-10-26"},{"lineNumber":122,"author":{"gitId":"jeremy-7007"},"content":"        this.tasksCompletion \u003d new HashMap\u003c\u003e(tasksCompletion);","lastModifiedDate":"2021-10-26"},{"lineNumber":123,"author":{"gitId":"Neha-5678"},"content":"        return this;","lastModifiedDate":"2021-10-26"},{"lineNumber":124,"author":{"gitId":"Neha-5678"},"content":"    }","lastModifiedDate":"2021-10-26"},{"lineNumber":125,"author":{"gitId":"Neha-5678"},"content":"","lastModifiedDate":"2021-10-26"},{"lineNumber":126,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":127,"author":{"gitId":"-"},"content":"     * Sets the {@code Address} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":128,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":129,"author":{"gitId":"-"},"content":"    public PersonBuilder withAddress(String address) {","lastModifiedDate":"2017-08-15"},{"lineNumber":130,"author":{"gitId":"-"},"content":"        this.address \u003d new Address(address);","lastModifiedDate":"2017-12-20"},{"lineNumber":131,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":132,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":133,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":134,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":135,"author":{"gitId":"-"},"content":"     * Sets the {@code Phone} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":136,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":137,"author":{"gitId":"-"},"content":"    public PersonBuilder withPhone(String phone) {","lastModifiedDate":"2017-08-15"},{"lineNumber":138,"author":{"gitId":"-"},"content":"        this.phone \u003d new Phone(phone);","lastModifiedDate":"2017-12-20"},{"lineNumber":139,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":140,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":141,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":142,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":143,"author":{"gitId":"-"},"content":"     * Sets the {@code Email} of the {@code Person} that we are building.","lastModifiedDate":"2017-07-26"},{"lineNumber":144,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":145,"author":{"gitId":"-"},"content":"    public PersonBuilder withEmail(String email) {","lastModifiedDate":"2017-08-15"},{"lineNumber":146,"author":{"gitId":"-"},"content":"        this.email \u003d new Email(email);","lastModifiedDate":"2017-12-20"},{"lineNumber":147,"author":{"gitId":"-"},"content":"        return this;","lastModifiedDate":"2016-09-03"},{"lineNumber":148,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":149,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":150,"author":{"gitId":"tanhuakun"},"content":"    /**","lastModifiedDate":"2021-10-05"},{"lineNumber":151,"author":{"gitId":"tanhuakun"},"content":"     * Sets the {@code NoOverlapLessonsList} of the {@code Person} that we are building.","lastModifiedDate":"2021-10-05"},{"lineNumber":152,"author":{"gitId":"tanhuakun"},"content":"     */","lastModifiedDate":"2021-10-05"},{"lineNumber":153,"author":{"gitId":"tanhuakun"},"content":"    public PersonBuilder withLessonsList(NoOverlapLessonList lessonsList) {","lastModifiedDate":"2021-10-05"},{"lineNumber":154,"author":{"gitId":"tanhuakun"},"content":"        this.lessonsList \u003d lessonsList;","lastModifiedDate":"2021-10-05"},{"lineNumber":155,"author":{"gitId":"tanhuakun"},"content":"        return this;","lastModifiedDate":"2021-10-05"},{"lineNumber":156,"author":{"gitId":"tanhuakun"},"content":"    }","lastModifiedDate":"2021-10-05"},{"lineNumber":157,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-10-05"},{"lineNumber":158,"author":{"gitId":"tanhuakun"},"content":"    /**","lastModifiedDate":"2021-10-16"},{"lineNumber":159,"author":{"gitId":"tanhuakun"},"content":"     * Sets the {@code List\u003cExam} of the {@code Person} that we are building.","lastModifiedDate":"2021-10-16"},{"lineNumber":160,"author":{"gitId":"tanhuakun"},"content":"     */","lastModifiedDate":"2021-10-16"},{"lineNumber":161,"author":{"gitId":"tanhuakun"},"content":"    public PersonBuilder withExams(List\u003cExam\u003e exams) {","lastModifiedDate":"2021-10-16"},{"lineNumber":162,"author":{"gitId":"tanhuakun"},"content":"        this.exams \u003d new ArrayList\u003c\u003e(exams);","lastModifiedDate":"2021-10-16"},{"lineNumber":163,"author":{"gitId":"tanhuakun"},"content":"        return this;","lastModifiedDate":"2021-10-16"},{"lineNumber":164,"author":{"gitId":"tanhuakun"},"content":"    }","lastModifiedDate":"2021-10-16"},{"lineNumber":165,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-10-16"},{"lineNumber":166,"author":{"gitId":"eltonyeh"},"content":"    /**","lastModifiedDate":"2021-10-12"},{"lineNumber":167,"author":{"gitId":"eltonyeh"},"content":"     * Builds a {@code Person} object from the {@code PersonBuilder}.","lastModifiedDate":"2021-10-12"},{"lineNumber":168,"author":{"gitId":"eltonyeh"},"content":"     *","lastModifiedDate":"2021-10-12"},{"lineNumber":169,"author":{"gitId":"eltonyeh"},"content":"     * @return A {@code Person} object.","lastModifiedDate":"2021-10-12"},{"lineNumber":170,"author":{"gitId":"eltonyeh"},"content":"     */","lastModifiedDate":"2021-10-12"},{"lineNumber":171,"author":{"gitId":"-"},"content":"    public Person build() {","lastModifiedDate":"2017-04-05"},{"lineNumber":172,"author":{"gitId":"jeremy-7007"},"content":"        return new Person(id, name, phone, email, address, tags, assignedTaskIds, tasksCompletion,","lastModifiedDate":"2021-10-26"},{"lineNumber":173,"author":{"gitId":"jeremy-7007"},"content":"                lessonsList, exams, assignedGroupIds);","lastModifiedDate":"2021-10-26"},{"lineNumber":174,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-03"},{"lineNumber":175,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-03"},{"lineNumber":176,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-03"}],"authorContributionMap":{"Neha-5678":11,"jeremy-7007":23,"tanhuakun":29,"eltonyeh":16,"-":97}},{"path":"src/test/java/seedu/address/testutil/PersonUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2017-04-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_ADDRESS;","lastModifiedDate":"2017-05-09"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_EMAIL;","lastModifiedDate":"2017-05-09"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_NAME;","lastModifiedDate":"2017-06-06"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_PHONE;","lastModifiedDate":"2017-05-09"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.parser.CliSyntax.PREFIX_TAG;","lastModifiedDate":"2017-05-09"},{"lineNumber":8,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-05-09"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import java.util.Set;","lastModifiedDate":"2018-03-26"},{"lineNumber":10,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-26"},{"lineNumber":11,"author":{"gitId":"tanhuakun"},"content":"import seedu.address.logic.commands.persons.AddPersonCommand;","lastModifiedDate":"2021-10-03"},{"lineNumber":12,"author":{"gitId":"tanhuakun"},"content":"import seedu.address.logic.commands.persons.EditPersonCommand.EditPersonDescriptor;","lastModifiedDate":"2021-10-03"},{"lineNumber":13,"author":{"gitId":"tanhuakun"},"content":"import seedu.address.logic.parser.CliSyntax;","lastModifiedDate":"2021-11-05"},{"lineNumber":14,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import seedu.address.model.tag.Tag;","lastModifiedDate":"2018-03-26"},{"lineNumber":16,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":17,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-04-05"},{"lineNumber":18,"author":{"gitId":"-"},"content":" * A utility class for Person.","lastModifiedDate":"2017-04-05"},{"lineNumber":19,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-04-05"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class PersonUtil {","lastModifiedDate":"2017-04-05"},{"lineNumber":21,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-05"},{"lineNumber":22,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-04-05"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     * Returns an add command string for adding the {@code person}.","lastModifiedDate":"2017-04-05"},{"lineNumber":24,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-04-05"},{"lineNumber":25,"author":{"gitId":"-"},"content":"    public static String getAddCommand(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":26,"author":{"gitId":"tanhuakun"},"content":"        return CliSyntax.PERSON_COMMAND + \" \" + AddPersonCommand.COMMAND_WORD + \" \"","lastModifiedDate":"2021-11-05"},{"lineNumber":27,"author":{"gitId":"tanhuakun"},"content":"                + getPersonDetails(person);","lastModifiedDate":"2021-10-03"},{"lineNumber":28,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-04-06"},{"lineNumber":29,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-04-06"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-04-06"},{"lineNumber":31,"author":{"gitId":"-"},"content":"     * Returns the part of command string for the given {@code person}\u0027s details.","lastModifiedDate":"2017-04-06"},{"lineNumber":32,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-04-06"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    public static String getPersonDetails(Person person) {","lastModifiedDate":"2018-01-10"},{"lineNumber":34,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2017-04-05"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        sb.append(PREFIX_NAME + person.getName().fullName + \" \");","lastModifiedDate":"2017-06-06"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        sb.append(PREFIX_PHONE + person.getPhone().value + \" \");","lastModifiedDate":"2017-05-09"},{"lineNumber":37,"author":{"gitId":"-"},"content":"        sb.append(PREFIX_EMAIL + person.getEmail().value + \" \");","lastModifiedDate":"2017-05-09"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        sb.append(PREFIX_ADDRESS + person.getAddress().value + \" \");","lastModifiedDate":"2017-05-09"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        person.getTags().stream().forEach(","lastModifiedDate":"2017-05-09"},{"lineNumber":40,"author":{"gitId":"-"},"content":"            s -\u003e sb.append(PREFIX_TAG + s.tagName + \" \")","lastModifiedDate":"2017-05-09"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        );","lastModifiedDate":"2017-05-09"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2017-04-05"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-04-05"},{"lineNumber":44,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2018-03-26"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2018-03-26"},{"lineNumber":46,"author":{"gitId":"-"},"content":"     * Returns the part of command string for the given {@code EditPersonDescriptor}\u0027s details.","lastModifiedDate":"2018-03-26"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2018-03-26"},{"lineNumber":48,"author":{"gitId":"-"},"content":"    public static String getEditPersonDescriptorDetails(EditPersonDescriptor descriptor) {","lastModifiedDate":"2018-03-26"},{"lineNumber":49,"author":{"gitId":"-"},"content":"        StringBuilder sb \u003d new StringBuilder();","lastModifiedDate":"2018-03-26"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        descriptor.getName().ifPresent(name -\u003e sb.append(PREFIX_NAME).append(name.fullName).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":51,"author":{"gitId":"-"},"content":"        descriptor.getPhone().ifPresent(phone -\u003e sb.append(PREFIX_PHONE).append(phone.value).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":52,"author":{"gitId":"-"},"content":"        descriptor.getEmail().ifPresent(email -\u003e sb.append(PREFIX_EMAIL).append(email.value).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":53,"author":{"gitId":"-"},"content":"        descriptor.getAddress().ifPresent(address -\u003e sb.append(PREFIX_ADDRESS).append(address.value).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":54,"author":{"gitId":"-"},"content":"        if (descriptor.getTags().isPresent()) {","lastModifiedDate":"2018-03-26"},{"lineNumber":55,"author":{"gitId":"-"},"content":"            Set\u003cTag\u003e tags \u003d descriptor.getTags().get();","lastModifiedDate":"2018-03-26"},{"lineNumber":56,"author":{"gitId":"-"},"content":"            if (tags.isEmpty()) {","lastModifiedDate":"2018-03-26"},{"lineNumber":57,"author":{"gitId":"-"},"content":"                sb.append(PREFIX_TAG);","lastModifiedDate":"2018-03-26"},{"lineNumber":58,"author":{"gitId":"-"},"content":"            } else {","lastModifiedDate":"2018-03-26"},{"lineNumber":59,"author":{"gitId":"-"},"content":"                tags.forEach(s -\u003e sb.append(PREFIX_TAG).append(s.tagName).append(\" \"));","lastModifiedDate":"2018-03-26"},{"lineNumber":60,"author":{"gitId":"-"},"content":"            }","lastModifiedDate":"2018-03-26"},{"lineNumber":61,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2018-03-26"},{"lineNumber":62,"author":{"gitId":"-"},"content":"        return sb.toString();","lastModifiedDate":"2018-03-26"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2018-03-26"},{"lineNumber":64,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-04-05"}],"authorContributionMap":{"tanhuakun":5,"-":59}},{"path":"src/test/java/seedu/address/testutil/TaskBuilder.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"eltonyeh"},"content":"package seedu.address.testutil;","lastModifiedDate":"2021-10-08"},{"lineNumber":2,"author":{"gitId":"eltonyeh"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":3,"author":{"gitId":"eltonyeh"},"content":"import static seedu.address.model.id.UniqueId.DEFAULT_ID;","lastModifiedDate":"2021-10-12"},{"lineNumber":4,"author":{"gitId":"eltonyeh"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":5,"author":{"gitId":"eltonyeh"},"content":"import seedu.address.model.id.UniqueId;","lastModifiedDate":"2021-10-12"},{"lineNumber":6,"author":{"gitId":"eltonyeh"},"content":"import seedu.address.model.task.Deadline;","lastModifiedDate":"2021-10-08"},{"lineNumber":7,"author":{"gitId":"eltonyeh"},"content":"import seedu.address.model.task.Description;","lastModifiedDate":"2021-10-12"},{"lineNumber":8,"author":{"gitId":"eltonyeh"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2021-10-08"},{"lineNumber":9,"author":{"gitId":"eltonyeh"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":10,"author":{"gitId":"eltonyeh"},"content":"public class TaskBuilder {","lastModifiedDate":"2021-10-08"},{"lineNumber":11,"author":{"gitId":"eltonyeh"},"content":"    public static final String DEFAULT_NAME \u003d \"Homework 1\";","lastModifiedDate":"2021-10-08"},{"lineNumber":12,"author":{"gitId":"eltonyeh"},"content":"    public static final String DEFAULT_DEADLINE \u003d \"2000-01-01\";","lastModifiedDate":"2021-10-12"},{"lineNumber":13,"author":{"gitId":"eltonyeh"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":14,"author":{"gitId":"eltonyeh"},"content":"    private Description description;","lastModifiedDate":"2021-10-12"},{"lineNumber":15,"author":{"gitId":"eltonyeh"},"content":"    private Deadline deadline;","lastModifiedDate":"2021-10-08"},{"lineNumber":16,"author":{"gitId":"Neha-5678"},"content":"    private UniqueId uniqueId;","lastModifiedDate":"2021-10-11"},{"lineNumber":17,"author":{"gitId":"eltonyeh"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":18,"author":{"gitId":"eltonyeh"},"content":"    /**","lastModifiedDate":"2021-10-08"},{"lineNumber":19,"author":{"gitId":"eltonyeh"},"content":"     * Creates a {@code TaskBuilder} with the default details.","lastModifiedDate":"2021-10-08"},{"lineNumber":20,"author":{"gitId":"eltonyeh"},"content":"     */","lastModifiedDate":"2021-10-08"},{"lineNumber":21,"author":{"gitId":"eltonyeh"},"content":"    public TaskBuilder() {","lastModifiedDate":"2021-10-08"},{"lineNumber":22,"author":{"gitId":"eltonyeh"},"content":"        this.description \u003d new Description(DEFAULT_NAME);","lastModifiedDate":"2021-10-12"},{"lineNumber":23,"author":{"gitId":"eltonyeh"},"content":"        this.deadline \u003d new Deadline(DEFAULT_DEADLINE);","lastModifiedDate":"2021-10-08"},{"lineNumber":24,"author":{"gitId":"eltonyeh"},"content":"        this.uniqueId \u003d DEFAULT_ID;","lastModifiedDate":"2021-10-12"},{"lineNumber":25,"author":{"gitId":"eltonyeh"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":26,"author":{"gitId":"eltonyeh"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":27,"author":{"gitId":"eltonyeh"},"content":"    /**","lastModifiedDate":"2021-10-08"},{"lineNumber":28,"author":{"gitId":"eltonyeh"},"content":"     * Initializes the TaskBuilder with the data of {@code taskToCopy}.","lastModifiedDate":"2021-10-08"},{"lineNumber":29,"author":{"gitId":"eltonyeh"},"content":"     */","lastModifiedDate":"2021-10-08"},{"lineNumber":30,"author":{"gitId":"eltonyeh"},"content":"    public TaskBuilder(Task taskToCopy) {","lastModifiedDate":"2021-10-08"},{"lineNumber":31,"author":{"gitId":"Neha-5678"},"content":"        description \u003d taskToCopy.getDescription();","lastModifiedDate":"2021-10-19"},{"lineNumber":32,"author":{"gitId":"eltonyeh"},"content":"        deadline \u003d taskToCopy.getDeadline();","lastModifiedDate":"2021-10-08"},{"lineNumber":33,"author":{"gitId":"Neha-5678"},"content":"        uniqueId \u003d taskToCopy.getId();","lastModifiedDate":"2021-10-11"},{"lineNumber":34,"author":{"gitId":"eltonyeh"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":35,"author":{"gitId":"eltonyeh"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":36,"author":{"gitId":"eltonyeh"},"content":"    /**","lastModifiedDate":"2021-10-08"},{"lineNumber":37,"author":{"gitId":"eltonyeh"},"content":"     * Sets the {@code Description} of the {@code Task} that we are building.","lastModifiedDate":"2021-10-12"},{"lineNumber":38,"author":{"gitId":"eltonyeh"},"content":"     */","lastModifiedDate":"2021-10-08"},{"lineNumber":39,"author":{"gitId":"Neha-5678"},"content":"    public TaskBuilder withDescription(String description) {","lastModifiedDate":"2021-10-19"},{"lineNumber":40,"author":{"gitId":"Neha-5678"},"content":"        this.description \u003d new Description(description);","lastModifiedDate":"2021-10-19"},{"lineNumber":41,"author":{"gitId":"eltonyeh"},"content":"        return this;","lastModifiedDate":"2021-10-08"},{"lineNumber":42,"author":{"gitId":"eltonyeh"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":43,"author":{"gitId":"eltonyeh"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":44,"author":{"gitId":"eltonyeh"},"content":"    /**","lastModifiedDate":"2021-10-08"},{"lineNumber":45,"author":{"gitId":"eltonyeh"},"content":"     * Sets the {@code Deadline} of the {@code Task} that we are building.","lastModifiedDate":"2021-10-08"},{"lineNumber":46,"author":{"gitId":"eltonyeh"},"content":"     */","lastModifiedDate":"2021-10-08"},{"lineNumber":47,"author":{"gitId":"eltonyeh"},"content":"    public TaskBuilder withDeadline(String deadline) {","lastModifiedDate":"2021-10-08"},{"lineNumber":48,"author":{"gitId":"eltonyeh"},"content":"        this.deadline \u003d new Deadline(deadline);","lastModifiedDate":"2021-10-08"},{"lineNumber":49,"author":{"gitId":"eltonyeh"},"content":"        return this;","lastModifiedDate":"2021-10-08"},{"lineNumber":50,"author":{"gitId":"eltonyeh"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":51,"author":{"gitId":"eltonyeh"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":52,"author":{"gitId":"Neha-5678"},"content":"    /**","lastModifiedDate":"2021-10-11"},{"lineNumber":53,"author":{"gitId":"Neha-5678"},"content":"     * Sets the {@code UniqueId} of the {@code Task} that we are building.","lastModifiedDate":"2021-10-11"},{"lineNumber":54,"author":{"gitId":"Neha-5678"},"content":"     */","lastModifiedDate":"2021-10-11"},{"lineNumber":55,"author":{"gitId":"Neha-5678"},"content":"    public TaskBuilder withUniqueId(String uniqueId) {","lastModifiedDate":"2021-10-11"},{"lineNumber":56,"author":{"gitId":"eltonyeh"},"content":"        this.uniqueId \u003d UniqueId.generateId(uniqueId);","lastModifiedDate":"2021-10-12"},{"lineNumber":57,"author":{"gitId":"Neha-5678"},"content":"        return this;","lastModifiedDate":"2021-10-11"},{"lineNumber":58,"author":{"gitId":"Neha-5678"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":59,"author":{"gitId":"Neha-5678"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":60,"author":{"gitId":"eltonyeh"},"content":"    /**","lastModifiedDate":"2021-10-12"},{"lineNumber":61,"author":{"gitId":"eltonyeh"},"content":"     * Builds a {@code Task} object from the {@code TaskBuilder}.","lastModifiedDate":"2021-10-12"},{"lineNumber":62,"author":{"gitId":"eltonyeh"},"content":"     *","lastModifiedDate":"2021-10-12"},{"lineNumber":63,"author":{"gitId":"eltonyeh"},"content":"     * @return A {@code Task} object.","lastModifiedDate":"2021-10-12"},{"lineNumber":64,"author":{"gitId":"eltonyeh"},"content":"     */","lastModifiedDate":"2021-10-12"},{"lineNumber":65,"author":{"gitId":"eltonyeh"},"content":"    public Task build() {","lastModifiedDate":"2021-10-08"},{"lineNumber":66,"author":{"gitId":"eltonyeh"},"content":"        Task task \u003d new Task(description, deadline, uniqueId);","lastModifiedDate":"2021-10-12"},{"lineNumber":67,"author":{"gitId":"eltonyeh"},"content":"        uniqueId.setOwner(task);","lastModifiedDate":"2021-10-12"},{"lineNumber":68,"author":{"gitId":"eltonyeh"},"content":"        return task;","lastModifiedDate":"2021-10-12"},{"lineNumber":69,"author":{"gitId":"eltonyeh"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":70,"author":{"gitId":"eltonyeh"},"content":"}","lastModifiedDate":"2021-10-08"}],"authorContributionMap":{"Neha-5678":12,"eltonyeh":58}},{"path":"src/test/java/seedu/address/testutil/TestUtil.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2016-08-08"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import java.io.IOException;","lastModifiedDate":"2017-01-19"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import java.nio.file.Files;","lastModifiedDate":"2018-04-21"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import java.nio.file.Path;","lastModifiedDate":"2018-04-21"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import java.nio.file.Paths;","lastModifiedDate":"2018-04-21"},{"lineNumber":7,"author":{"gitId":"tanhuakun"},"content":"import java.time.LocalDateTime;","lastModifiedDate":"2021-10-25"},{"lineNumber":8,"author":{"gitId":"tanhuakun"},"content":"import java.time.format.DateTimeFormatter;","lastModifiedDate":"2021-10-25"},{"lineNumber":9,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-01-19"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-07-30"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import seedu.address.model.Model;","lastModifiedDate":"2017-07-30"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":13,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":14,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-08-08"},{"lineNumber":15,"author":{"gitId":"-"},"content":" * A utility class for test cases.","lastModifiedDate":"2016-08-08"},{"lineNumber":16,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-08-08"},{"lineNumber":17,"author":{"gitId":"-"},"content":"public class TestUtil {","lastModifiedDate":"2016-08-08"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":19,"author":{"gitId":"tanhuakun"},"content":"    public static final String DATE_TIME_FORMAT \u003d \"yyyy-MM-dd HH:mm\";","lastModifiedDate":"2021-10-25"},{"lineNumber":20,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-10-16"},{"lineNumber":22,"author":{"gitId":"-"},"content":"     * Folder used for temp files created during testing. Ignored by Git.","lastModifiedDate":"2016-10-16"},{"lineNumber":23,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-10-16"},{"lineNumber":24,"author":{"gitId":"-"},"content":"    private static final Path SANDBOX_FOLDER \u003d Paths.get(\"src\", \"test\", \"data\", \"sandbox\");","lastModifiedDate":"2018-04-21"},{"lineNumber":25,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-10-16"},{"lineNumber":26,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2016-08-08"},{"lineNumber":27,"author":{"gitId":"-"},"content":"     * Appends {@code fileName} to the sandbox folder path and returns the resulting path.","lastModifiedDate":"2018-04-21"},{"lineNumber":28,"author":{"gitId":"-"},"content":"     * Creates the sandbox folder if it doesn\u0027t exist.","lastModifiedDate":"2016-09-28"},{"lineNumber":29,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2016-08-08"},{"lineNumber":30,"author":{"gitId":"-"},"content":"    public static Path getFilePathInSandboxFolder(String fileName) {","lastModifiedDate":"2018-04-21"},{"lineNumber":31,"author":{"gitId":"-"},"content":"        try {","lastModifiedDate":"2016-09-28"},{"lineNumber":32,"author":{"gitId":"-"},"content":"            Files.createDirectories(SANDBOX_FOLDER);","lastModifiedDate":"2018-04-21"},{"lineNumber":33,"author":{"gitId":"-"},"content":"        } catch (IOException e) {","lastModifiedDate":"2016-09-28"},{"lineNumber":34,"author":{"gitId":"-"},"content":"            throw new RuntimeException(e);","lastModifiedDate":"2016-09-28"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-28"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        return SANDBOX_FOLDER.resolve(fileName);","lastModifiedDate":"2018-04-21"},{"lineNumber":37,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-08-08"},{"lineNumber":38,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-08-08"},{"lineNumber":39,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-30"},{"lineNumber":40,"author":{"gitId":"-"},"content":"     * Returns the middle index of the person in the {@code model}\u0027s person list.","lastModifiedDate":"2017-07-30"},{"lineNumber":41,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-30"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public static Index getMidIndex(Model model) {","lastModifiedDate":"2017-07-30"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        return Index.fromOneBased(model.getFilteredPersonList().size() / 2);","lastModifiedDate":"2018-08-13"},{"lineNumber":44,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-30"},{"lineNumber":45,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-30"},{"lineNumber":46,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-30"},{"lineNumber":47,"author":{"gitId":"-"},"content":"     * Returns the last index of the person in the {@code model}\u0027s person list.","lastModifiedDate":"2017-07-30"},{"lineNumber":48,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-30"},{"lineNumber":49,"author":{"gitId":"-"},"content":"    public static Index getLastIndex(Model model) {","lastModifiedDate":"2017-07-30"},{"lineNumber":50,"author":{"gitId":"-"},"content":"        return Index.fromOneBased(model.getFilteredPersonList().size());","lastModifiedDate":"2018-08-13"},{"lineNumber":51,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-30"},{"lineNumber":52,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-30"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-30"},{"lineNumber":54,"author":{"gitId":"-"},"content":"     * Returns the person in the {@code model}\u0027s person list at {@code index}.","lastModifiedDate":"2017-07-30"},{"lineNumber":55,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-30"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public static Person getPerson(Model model, Index index) {","lastModifiedDate":"2018-01-10"},{"lineNumber":57,"author":{"gitId":"-"},"content":"        return model.getFilteredPersonList().get(index.getZeroBased());","lastModifiedDate":"2018-08-13"},{"lineNumber":58,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-07-30"},{"lineNumber":59,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-10-25"},{"lineNumber":60,"author":{"gitId":"tanhuakun"},"content":"    public static LocalDateTime createLocalDateTime(String input) {","lastModifiedDate":"2021-10-25"},{"lineNumber":61,"author":{"gitId":"tanhuakun"},"content":"        return LocalDateTime.parse(input, DateTimeFormatter.ofPattern(DATE_TIME_FORMAT));","lastModifiedDate":"2021-10-25"},{"lineNumber":62,"author":{"gitId":"tanhuakun"},"content":"    }","lastModifiedDate":"2021-10-25"},{"lineNumber":63,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-08-08"}],"authorContributionMap":{"tanhuakun":8,"-":55}},{"path":"src/test/java/seedu/address/testutil/TypicalGroups.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"kvihashini"},"content":"package seedu.address.testutil;","lastModifiedDate":"2021-10-18"},{"lineNumber":2,"author":{"gitId":"kvihashini"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":3,"author":{"gitId":"kvihashini"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-18"},{"lineNumber":4,"author":{"gitId":"kvihashini"},"content":"import java.util.List;","lastModifiedDate":"2021-10-18"},{"lineNumber":5,"author":{"gitId":"kvihashini"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":6,"author":{"gitId":"kvihashini"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2021-10-18"},{"lineNumber":7,"author":{"gitId":"kvihashini"},"content":"import seedu.address.model.group.Group;","lastModifiedDate":"2021-10-18"},{"lineNumber":8,"author":{"gitId":"kvihashini"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":9,"author":{"gitId":"kvihashini"},"content":"/**","lastModifiedDate":"2021-10-18"},{"lineNumber":10,"author":{"gitId":"kvihashini"},"content":" * A utility class containing a list of {@code Group} objects to be used in tests.","lastModifiedDate":"2021-10-18"},{"lineNumber":11,"author":{"gitId":"kvihashini"},"content":" */","lastModifiedDate":"2021-10-18"},{"lineNumber":12,"author":{"gitId":"kvihashini"},"content":"public class TypicalGroups {","lastModifiedDate":"2021-10-18"},{"lineNumber":13,"author":{"gitId":"kvihashini"},"content":"    public static final Group GROUP_1 \u003d new GroupBuilder().withName(\"CS2103T\")","lastModifiedDate":"2021-10-18"},{"lineNumber":14,"author":{"gitId":"kvihashini"},"content":"            .withUniqueId(\"c42f4eea-2cb4-443b-bd0d-fdccd98641df\").build();","lastModifiedDate":"2021-10-18"},{"lineNumber":15,"author":{"gitId":"Neha-5678"},"content":"    public static final Group GROUP_2 \u003d new GroupBuilder().withName(\"CS2100\")","lastModifiedDate":"2021-11-06"},{"lineNumber":16,"author":{"gitId":"Neha-5678"},"content":"            .withUniqueId(\"ee2226bd-b34f-4fd0-accd-05068e314146\").build();","lastModifiedDate":"2021-11-06"},{"lineNumber":17,"author":{"gitId":"kvihashini"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":18,"author":{"gitId":"kvihashini"},"content":"    /**","lastModifiedDate":"2021-10-18"},{"lineNumber":19,"author":{"gitId":"kvihashini"},"content":"     * Returns an {@code AddressBook} with all the typical groups.","lastModifiedDate":"2021-10-18"},{"lineNumber":20,"author":{"gitId":"kvihashini"},"content":"     */","lastModifiedDate":"2021-10-18"},{"lineNumber":21,"author":{"gitId":"kvihashini"},"content":"    public static AddressBook getTypicalAddressBook() {","lastModifiedDate":"2021-10-18"},{"lineNumber":22,"author":{"gitId":"kvihashini"},"content":"        AddressBook ab \u003d new AddressBook();","lastModifiedDate":"2021-10-18"},{"lineNumber":23,"author":{"gitId":"kvihashini"},"content":"        for (Group group : getTypicalGroups()) {","lastModifiedDate":"2021-10-18"},{"lineNumber":24,"author":{"gitId":"kvihashini"},"content":"            ab.addGroup(group);","lastModifiedDate":"2021-10-18"},{"lineNumber":25,"author":{"gitId":"kvihashini"},"content":"        }","lastModifiedDate":"2021-10-18"},{"lineNumber":26,"author":{"gitId":"kvihashini"},"content":"        return ab;","lastModifiedDate":"2021-10-18"},{"lineNumber":27,"author":{"gitId":"kvihashini"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":28,"author":{"gitId":"kvihashini"},"content":"","lastModifiedDate":"2021-10-18"},{"lineNumber":29,"author":{"gitId":"kvihashini"},"content":"    public static List\u003cGroup\u003e getTypicalGroups() {","lastModifiedDate":"2021-10-18"},{"lineNumber":30,"author":{"gitId":"kvihashini"},"content":"        return new ArrayList\u003c\u003e(List.of(GROUP_1, GROUP_2));","lastModifiedDate":"2021-10-18"},{"lineNumber":31,"author":{"gitId":"kvihashini"},"content":"    }","lastModifiedDate":"2021-10-18"},{"lineNumber":32,"author":{"gitId":"kvihashini"},"content":"}","lastModifiedDate":"2021-10-18"}],"authorContributionMap":{"Neha-5678":2,"kvihashini":30}},{"path":"src/test/java/seedu/address/testutil/TypicalIndexes.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2017-08-05"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import seedu.address.commons.core.index.Index;","lastModifiedDate":"2017-08-05"},{"lineNumber":4,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-05"},{"lineNumber":5,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2017-08-05"},{"lineNumber":6,"author":{"gitId":"-"},"content":" * A utility class containing a list of {@code Index} objects to be used in tests.","lastModifiedDate":"2017-08-05"},{"lineNumber":7,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2017-08-05"},{"lineNumber":8,"author":{"gitId":"-"},"content":"public class TypicalIndexes {","lastModifiedDate":"2017-08-05"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    public static final Index INDEX_FIRST_PERSON \u003d Index.fromOneBased(1);","lastModifiedDate":"2017-08-05"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    public static final Index INDEX_SECOND_PERSON \u003d Index.fromOneBased(2);","lastModifiedDate":"2017-08-05"},{"lineNumber":11,"author":{"gitId":"-"},"content":"    public static final Index INDEX_THIRD_PERSON \u003d Index.fromOneBased(3);","lastModifiedDate":"2017-08-05"},{"lineNumber":12,"author":{"gitId":"Neha-5678"},"content":"    public static final Index INDEX_FIRST_TASK \u003d Index.fromOneBased(1);","lastModifiedDate":"2021-10-19"},{"lineNumber":13,"author":{"gitId":"Neha-5678"},"content":"    public static final Index INDEX_SECOND_TASK \u003d Index.fromOneBased(2);","lastModifiedDate":"2021-10-19"},{"lineNumber":14,"author":{"gitId":"kvihashini"},"content":"    public static final Index INDEX_FIRST_GROUP \u003d Index.fromOneBased(1);","lastModifiedDate":"2021-10-24"},{"lineNumber":15,"author":{"gitId":"kvihashini"},"content":"    public static final Index INDEX_SECOND_GROUP \u003d Index.fromOneBased(2);","lastModifiedDate":"2021-10-24"},{"lineNumber":16,"author":{"gitId":"tanhuakun"},"content":"    public static final Index INDEX_FIRST_EXAM \u003d Index.fromOneBased(1);","lastModifiedDate":"2021-10-25"},{"lineNumber":17,"author":{"gitId":"tanhuakun"},"content":"    public static final Index INDEX_FIRST_LESSON \u003d Index.fromOneBased(1);","lastModifiedDate":"2021-10-25"},{"lineNumber":18,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2017-08-05"}],"authorContributionMap":{"Neha-5678":2,"kvihashini":2,"tanhuakun":2,"-":12}},{"path":"src/test/java/seedu/address/testutil/TypicalLessons.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"tanhuakun"},"content":"package seedu.address.testutil;","lastModifiedDate":"2021-10-12"},{"lineNumber":2,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":3,"author":{"gitId":"tanhuakun"},"content":"import seedu.address.model.lesson.Lesson;","lastModifiedDate":"2021-10-12"},{"lineNumber":4,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":5,"author":{"gitId":"tanhuakun"},"content":"/**","lastModifiedDate":"2021-10-12"},{"lineNumber":6,"author":{"gitId":"tanhuakun"},"content":" * A utility class containing a list of {@code Lesson} objects to be used in tests.","lastModifiedDate":"2021-10-12"},{"lineNumber":7,"author":{"gitId":"tanhuakun"},"content":" */","lastModifiedDate":"2021-10-12"},{"lineNumber":8,"author":{"gitId":"tanhuakun"},"content":"public class TypicalLessons {","lastModifiedDate":"2021-10-12"},{"lineNumber":9,"author":{"gitId":"tanhuakun"},"content":"    public static final Lesson MON_10_12_BIOLOGY \u003d new LessonBuilder().withTimeslot(\"10:00\", \"12:00\")","lastModifiedDate":"2021-10-12"},{"lineNumber":10,"author":{"gitId":"tanhuakun"},"content":"            .withDayOfWeek(1).withSubject(\"Biology\").build();","lastModifiedDate":"2021-10-12"},{"lineNumber":11,"author":{"gitId":"tanhuakun"},"content":"    public static final Lesson MON_11_13_MATH \u003d new LessonBuilder().withTimeslot(\"11:00\", \"13:00\")","lastModifiedDate":"2021-10-12"},{"lineNumber":12,"author":{"gitId":"tanhuakun"},"content":"            .withDayOfWeek(1).withSubject(\"Math\").build();","lastModifiedDate":"2021-10-12"},{"lineNumber":13,"author":{"gitId":"tanhuakun"},"content":"    public static final Lesson MON_16_18_MATH \u003d new LessonBuilder().withTimeslot(\"16:00\", \"18:00\")","lastModifiedDate":"2021-10-12"},{"lineNumber":14,"author":{"gitId":"tanhuakun"},"content":"            .withDayOfWeek(1).withSubject(\"Math\").build();","lastModifiedDate":"2021-10-12"},{"lineNumber":15,"author":{"gitId":"tanhuakun"},"content":"    public static final Lesson TUE_16_18_ENGLISH \u003d new LessonBuilder().withTimeslot(\"16:00\", \"18:00\")","lastModifiedDate":"2021-10-12"},{"lineNumber":16,"author":{"gitId":"tanhuakun"},"content":"            .withDayOfWeek(2).withSubject(\"English\").build();","lastModifiedDate":"2021-10-12"},{"lineNumber":17,"author":{"gitId":"tanhuakun"},"content":"}","lastModifiedDate":"2021-10-12"}],"authorContributionMap":{"tanhuakun":17}},{"path":"src/test/java/seedu/address/testutil/TypicalObjects.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"Neha-5678"},"content":"package seedu.address.testutil;","lastModifiedDate":"2021-10-11"},{"lineNumber":2,"author":{"gitId":"Neha-5678"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":3,"author":{"gitId":"Neha-5678"},"content":"import static seedu.address.testutil.TypicalPersons.getTypicalPersonsWithLesson;","lastModifiedDate":"2021-11-06"},{"lineNumber":4,"author":{"gitId":"Neha-5678"},"content":"import static seedu.address.testutil.TypicalTasks.getTypicalTasks;","lastModifiedDate":"2021-11-06"},{"lineNumber":5,"author":{"gitId":"Neha-5678"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":6,"author":{"gitId":"Neha-5678"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2021-10-11"},{"lineNumber":7,"author":{"gitId":"Neha-5678"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2021-10-11"},{"lineNumber":8,"author":{"gitId":"Neha-5678"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2021-10-11"},{"lineNumber":9,"author":{"gitId":"Neha-5678"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":10,"author":{"gitId":"Neha-5678"},"content":"/**","lastModifiedDate":"2021-10-11"},{"lineNumber":11,"author":{"gitId":"Neha-5678"},"content":" * A utility class containing a list of {@code Person} and {@code Task} objects to be used in tests.","lastModifiedDate":"2021-10-11"},{"lineNumber":12,"author":{"gitId":"Neha-5678"},"content":" */","lastModifiedDate":"2021-10-11"},{"lineNumber":13,"author":{"gitId":"Neha-5678"},"content":"public class TypicalObjects {","lastModifiedDate":"2021-10-11"},{"lineNumber":14,"author":{"gitId":"Neha-5678"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":15,"author":{"gitId":"Neha-5678"},"content":"    private TypicalObjects() {} // prevents instantiation","lastModifiedDate":"2021-10-11"},{"lineNumber":16,"author":{"gitId":"Neha-5678"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":17,"author":{"gitId":"Neha-5678"},"content":"    /**","lastModifiedDate":"2021-10-11"},{"lineNumber":18,"author":{"gitId":"Neha-5678"},"content":"     * Returns an {@code AddressBook} with all the typical persons and tasks.","lastModifiedDate":"2021-11-08"},{"lineNumber":19,"author":{"gitId":"Neha-5678"},"content":"     */","lastModifiedDate":"2021-10-11"},{"lineNumber":20,"author":{"gitId":"Neha-5678"},"content":"    public static AddressBook getTypicalAddressBook() {","lastModifiedDate":"2021-10-11"},{"lineNumber":21,"author":{"gitId":"Neha-5678"},"content":"        AddressBook ab \u003d new AddressBook();","lastModifiedDate":"2021-10-11"},{"lineNumber":22,"author":{"gitId":"Neha-5678"},"content":"        for (Person person : getTypicalPersonsWithLesson()) {","lastModifiedDate":"2021-11-06"},{"lineNumber":23,"author":{"gitId":"Neha-5678"},"content":"            ab.addPerson(person);","lastModifiedDate":"2021-10-11"},{"lineNumber":24,"author":{"gitId":"Neha-5678"},"content":"        }","lastModifiedDate":"2021-10-11"},{"lineNumber":25,"author":{"gitId":"Neha-5678"},"content":"        for (Task task : getTypicalTasks()) {","lastModifiedDate":"2021-10-11"},{"lineNumber":26,"author":{"gitId":"Neha-5678"},"content":"            ab.addTask(task);","lastModifiedDate":"2021-10-11"},{"lineNumber":27,"author":{"gitId":"Neha-5678"},"content":"        }","lastModifiedDate":"2021-10-11"},{"lineNumber":28,"author":{"gitId":"Neha-5678"},"content":"        return ab;","lastModifiedDate":"2021-10-11"},{"lineNumber":29,"author":{"gitId":"Neha-5678"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":30,"author":{"gitId":"Neha-5678"},"content":"}","lastModifiedDate":"2021-10-11"}],"authorContributionMap":{"Neha-5678":30}},{"path":"src/test/java/seedu/address/testutil/TypicalPersons.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"package seedu.address.testutil;","lastModifiedDate":"2016-09-13"},{"lineNumber":2,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":3,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_AMY;","lastModifiedDate":"2017-08-22"},{"lineNumber":4,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_ADDRESS_BOB;","lastModifiedDate":"2017-08-22"},{"lineNumber":5,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_AMY;","lastModifiedDate":"2017-08-22"},{"lineNumber":6,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_EMAIL_BOB;","lastModifiedDate":"2017-08-22"},{"lineNumber":7,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_AMY;","lastModifiedDate":"2017-08-22"},{"lineNumber":8,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_NAME_BOB;","lastModifiedDate":"2017-08-22"},{"lineNumber":9,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_AMY;","lastModifiedDate":"2017-08-22"},{"lineNumber":10,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_PHONE_BOB;","lastModifiedDate":"2017-08-22"},{"lineNumber":11,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_FRIEND;","lastModifiedDate":"2017-08-22"},{"lineNumber":12,"author":{"gitId":"-"},"content":"import static seedu.address.logic.commands.CommandTestUtil.VALID_TAG_HUSBAND;","lastModifiedDate":"2017-08-22"},{"lineNumber":13,"author":{"gitId":"Neha-5678"},"content":"import static seedu.address.testutil.TypicalLessons.MON_10_12_BIOLOGY;","lastModifiedDate":"2021-11-06"},{"lineNumber":14,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-22"},{"lineNumber":15,"author":{"gitId":"-"},"content":"import java.util.ArrayList;","lastModifiedDate":"2017-08-07"},{"lineNumber":16,"author":{"gitId":"-"},"content":"import java.util.Arrays;","lastModifiedDate":"2017-08-07"},{"lineNumber":17,"author":{"gitId":"-"},"content":"import java.util.List;","lastModifiedDate":"2017-08-07"},{"lineNumber":18,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-07"},{"lineNumber":19,"author":{"gitId":"-"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2016-09-21"},{"lineNumber":20,"author":{"gitId":"Neha-5678"},"content":"import seedu.address.model.lesson.NoOverlapLessonList;","lastModifiedDate":"2021-11-06"},{"lineNumber":21,"author":{"gitId":"-"},"content":"import seedu.address.model.person.Person;","lastModifiedDate":"2018-01-10"},{"lineNumber":22,"author":{"gitId":"Neha-5678"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2021-10-11"},{"lineNumber":23,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":24,"author":{"gitId":"-"},"content":"/**","lastModifiedDate":"2016-09-13"},{"lineNumber":25,"author":{"gitId":"-"},"content":" * A utility class containing a list of {@code Person} objects to be used in tests.","lastModifiedDate":"2017-08-05"},{"lineNumber":26,"author":{"gitId":"-"},"content":" */","lastModifiedDate":"2016-09-13"},{"lineNumber":27,"author":{"gitId":"-"},"content":"public class TypicalPersons {","lastModifiedDate":"2017-04-05"},{"lineNumber":28,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    public static final Person ALICE \u003d new PersonBuilder().withName(\"Alice Pauline\")","lastModifiedDate":"2018-01-10"},{"lineNumber":30,"author":{"gitId":"-"},"content":"            .withAddress(\"123, Jurong West Ave 6, #08-111\").withEmail(\"alice@example.com\")","lastModifiedDate":"2017-04-05"},{"lineNumber":31,"author":{"gitId":"-"},"content":"            .withPhone(\"94351253\")","lastModifiedDate":"2018-04-19"},{"lineNumber":32,"author":{"gitId":"Neha-5678"},"content":"            .withTags(\"friends\")","lastModifiedDate":"2021-11-06"},{"lineNumber":33,"author":{"gitId":"Neha-5678"},"content":"            .withId(\"05404585-7339-4fb4-9899-c470e0068829\")","lastModifiedDate":"2021-11-06"},{"lineNumber":34,"author":{"gitId":"Neha-5678"},"content":"            .build();","lastModifiedDate":"2021-11-06"},{"lineNumber":35,"author":{"gitId":"Neha-5678"},"content":"    public static final Person ALICE_WITH_LESSON \u003d new PersonBuilder().withName(\"Alice Pauline\")","lastModifiedDate":"2021-11-06"},{"lineNumber":36,"author":{"gitId":"Neha-5678"},"content":"            .withAddress(\"123, Jurong West Ave 6, #08-111\").withEmail(\"alice@example.com\")","lastModifiedDate":"2021-11-06"},{"lineNumber":37,"author":{"gitId":"Neha-5678"},"content":"            .withPhone(\"94351253\")","lastModifiedDate":"2021-11-06"},{"lineNumber":38,"author":{"gitId":"Neha-5678"},"content":"            .withTags(\"friends\")","lastModifiedDate":"2021-11-06"},{"lineNumber":39,"author":{"gitId":"Neha-5678"},"content":"            .withLessonsList((new NoOverlapLessonList()).addLesson(MON_10_12_BIOLOGY))","lastModifiedDate":"2021-11-06"},{"lineNumber":40,"author":{"gitId":"Neha-5678"},"content":"            .withId(\"05404585-7339-4fb4-9899-c470e0068829\")","lastModifiedDate":"2021-11-06"},{"lineNumber":41,"author":{"gitId":"Neha-5678"},"content":"            .build();","lastModifiedDate":"2021-11-06"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    public static final Person BENSON \u003d new PersonBuilder().withName(\"Benson Meier\")","lastModifiedDate":"2018-01-10"},{"lineNumber":43,"author":{"gitId":"-"},"content":"            .withAddress(\"311, Clementi Ave 2, #02-25\")","lastModifiedDate":"2017-09-21"},{"lineNumber":44,"author":{"gitId":"-"},"content":"            .withEmail(\"johnd@example.com\").withPhone(\"98765432\")","lastModifiedDate":"2017-04-05"},{"lineNumber":45,"author":{"gitId":"Neha-5678"},"content":"            .withTags(\"owesMoney\", \"friends\").withId(\"99f5ad00-6e1b-49c8-98d8-5ae3459bb262\")","lastModifiedDate":"2021-10-26"},{"lineNumber":46,"author":{"gitId":"Neha-5678"},"content":"            .build();","lastModifiedDate":"2021-10-28"},{"lineNumber":47,"author":{"gitId":"-"},"content":"    public static final Person CARL \u003d new PersonBuilder().withName(\"Carl Kurz\").withPhone(\"95352563\")","lastModifiedDate":"2018-01-10"},{"lineNumber":48,"author":{"gitId":"eltonyeh"},"content":"            .withEmail(\"heinz@example.com\").withAddress(\"wall street\")","lastModifiedDate":"2021-10-12"},{"lineNumber":49,"author":{"gitId":"eltonyeh"},"content":"            .withId(\"984c2915-9d24-4931-917c-03b98c621f39\").build();","lastModifiedDate":"2021-10-12"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    public static final Person DANIEL \u003d new PersonBuilder().withName(\"Daniel Meier\").withPhone(\"87652533\")","lastModifiedDate":"2018-01-10"},{"lineNumber":51,"author":{"gitId":"eltonyeh"},"content":"            .withEmail(\"cornelia@example.com\").withAddress(\"10th street\").withTags(\"friends\")","lastModifiedDate":"2021-10-12"},{"lineNumber":52,"author":{"gitId":"eltonyeh"},"content":"            .withId(\"559ab00a-ce9a-4799-be3d-a126290707b1\").build();","lastModifiedDate":"2021-10-12"},{"lineNumber":53,"author":{"gitId":"-"},"content":"    public static final Person ELLE \u003d new PersonBuilder().withName(\"Elle Meyer\").withPhone(\"9482224\")","lastModifiedDate":"2018-01-10"},{"lineNumber":54,"author":{"gitId":"eltonyeh"},"content":"            .withEmail(\"werner@example.com\").withAddress(\"michegan ave\")","lastModifiedDate":"2021-10-12"},{"lineNumber":55,"author":{"gitId":"eltonyeh"},"content":"            .withId(\"25706097-cc50-4832-b972-2a115f08f26f\").build();","lastModifiedDate":"2021-10-12"},{"lineNumber":56,"author":{"gitId":"-"},"content":"    public static final Person FIONA \u003d new PersonBuilder().withName(\"Fiona Kunz\").withPhone(\"9482427\")","lastModifiedDate":"2018-01-10"},{"lineNumber":57,"author":{"gitId":"eltonyeh"},"content":"            .withEmail(\"lydia@example.com\").withAddress(\"little tokyo\")","lastModifiedDate":"2021-10-12"},{"lineNumber":58,"author":{"gitId":"eltonyeh"},"content":"            .withId(\"bcf3308b-6813-4482-96e4-7eae771e78f4\").build();","lastModifiedDate":"2021-10-12"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    public static final Person GEORGE \u003d new PersonBuilder().withName(\"George Best\").withPhone(\"9482442\")","lastModifiedDate":"2018-01-10"},{"lineNumber":60,"author":{"gitId":"eltonyeh"},"content":"            .withEmail(\"anna@example.com\").withAddress(\"4th street\")","lastModifiedDate":"2021-10-12"},{"lineNumber":61,"author":{"gitId":"eltonyeh"},"content":"            .withId(\"f4907d65-ffdb-4041-ae04-5165214eec67\").build();","lastModifiedDate":"2021-10-12"},{"lineNumber":62,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":63,"author":{"gitId":"-"},"content":"    // Manually added","lastModifiedDate":"2016-09-13"},{"lineNumber":64,"author":{"gitId":"-"},"content":"    public static final Person HOON \u003d new PersonBuilder().withName(\"Hoon Meier\").withPhone(\"8482424\")","lastModifiedDate":"2018-01-10"},{"lineNumber":65,"author":{"gitId":"-"},"content":"            .withEmail(\"stefan@example.com\").withAddress(\"little india\").build();","lastModifiedDate":"2017-04-05"},{"lineNumber":66,"author":{"gitId":"-"},"content":"    public static final Person IDA \u003d new PersonBuilder().withName(\"Ida Mueller\").withPhone(\"8482131\")","lastModifiedDate":"2018-01-10"},{"lineNumber":67,"author":{"gitId":"-"},"content":"            .withEmail(\"hans@example.com\").withAddress(\"chicago ave\").build();","lastModifiedDate":"2017-04-05"},{"lineNumber":68,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-22"},{"lineNumber":69,"author":{"gitId":"-"},"content":"    // Manually added - Person\u0027s details found in {@code CommandTestUtil}","lastModifiedDate":"2017-08-22"},{"lineNumber":70,"author":{"gitId":"-"},"content":"    public static final Person AMY \u003d new PersonBuilder().withName(VALID_NAME_AMY).withPhone(VALID_PHONE_AMY)","lastModifiedDate":"2018-01-10"},{"lineNumber":71,"author":{"gitId":"-"},"content":"            .withEmail(VALID_EMAIL_AMY).withAddress(VALID_ADDRESS_AMY).withTags(VALID_TAG_FRIEND).build();","lastModifiedDate":"2017-09-21"},{"lineNumber":72,"author":{"gitId":"-"},"content":"    public static final Person BOB \u003d new PersonBuilder().withName(VALID_NAME_BOB).withPhone(VALID_PHONE_BOB)","lastModifiedDate":"2018-01-10"},{"lineNumber":73,"author":{"gitId":"-"},"content":"            .withEmail(VALID_EMAIL_BOB).withAddress(VALID_ADDRESS_BOB).withTags(VALID_TAG_HUSBAND, VALID_TAG_FRIEND)","lastModifiedDate":"2017-09-21"},{"lineNumber":74,"author":{"gitId":"-"},"content":"            .build();","lastModifiedDate":"2017-09-21"},{"lineNumber":75,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-09-21"},{"lineNumber":76,"author":{"gitId":"-"},"content":"    public static final String KEYWORD_MATCHING_MEIER \u003d \"Meier\"; // A keyword that matches MEIER","lastModifiedDate":"2017-09-21"},{"lineNumber":77,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2016-09-13"},{"lineNumber":78,"author":{"gitId":"Neha-5678"},"content":"    public static final Task REPORT_1 \u003d new TaskBuilder().withDescription(\"Report 1\")","lastModifiedDate":"2021-10-19"},{"lineNumber":79,"author":{"gitId":"Neha-5678"},"content":"            .withDeadline(\"2021-10-10\").build();","lastModifiedDate":"2021-10-19"},{"lineNumber":80,"author":{"gitId":"Neha-5678"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":81,"author":{"gitId":"-"},"content":"    private TypicalPersons() {} // prevents instantiation","lastModifiedDate":"2017-07-20"},{"lineNumber":82,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-07-20"},{"lineNumber":83,"author":{"gitId":"-"},"content":"    /**","lastModifiedDate":"2017-07-26"},{"lineNumber":84,"author":{"gitId":"Neha-5678"},"content":"     * Returns an {@code AddressBook} with all the typical persons and tasks.","lastModifiedDate":"2021-11-08"},{"lineNumber":85,"author":{"gitId":"-"},"content":"     */","lastModifiedDate":"2017-07-26"},{"lineNumber":86,"author":{"gitId":"-"},"content":"    public static AddressBook getTypicalAddressBook() {","lastModifiedDate":"2017-08-05"},{"lineNumber":87,"author":{"gitId":"-"},"content":"        AddressBook ab \u003d new AddressBook();","lastModifiedDate":"2017-08-05"},{"lineNumber":88,"author":{"gitId":"-"},"content":"        for (Person person : getTypicalPersons()) {","lastModifiedDate":"2018-01-10"},{"lineNumber":89,"author":{"gitId":"-"},"content":"            ab.addPerson(person);","lastModifiedDate":"2017-08-05"},{"lineNumber":90,"author":{"gitId":"-"},"content":"        }","lastModifiedDate":"2016-09-13"},{"lineNumber":91,"author":{"gitId":"Neha-5678"},"content":"        for (Task task : getTypicalTasks()) {","lastModifiedDate":"2021-10-11"},{"lineNumber":92,"author":{"gitId":"Neha-5678"},"content":"            ab.addTask(task);","lastModifiedDate":"2021-10-11"},{"lineNumber":93,"author":{"gitId":"Neha-5678"},"content":"        }","lastModifiedDate":"2021-10-11"},{"lineNumber":94,"author":{"gitId":"-"},"content":"        return ab;","lastModifiedDate":"2016-09-24"},{"lineNumber":95,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2016-09-24"},{"lineNumber":96,"author":{"gitId":"-"},"content":"","lastModifiedDate":"2017-08-04"},{"lineNumber":97,"author":{"gitId":"Neha-5678"},"content":"    /**","lastModifiedDate":"2021-11-08"},{"lineNumber":98,"author":{"gitId":"Neha-5678"},"content":"     * Returns all typical persons.","lastModifiedDate":"2021-11-08"},{"lineNumber":99,"author":{"gitId":"Neha-5678"},"content":"     *","lastModifiedDate":"2021-11-08"},{"lineNumber":100,"author":{"gitId":"Neha-5678"},"content":"     * @return List of all typical persons.","lastModifiedDate":"2021-11-08"},{"lineNumber":101,"author":{"gitId":"Neha-5678"},"content":"     */","lastModifiedDate":"2021-11-08"},{"lineNumber":102,"author":{"gitId":"-"},"content":"    public static List\u003cPerson\u003e getTypicalPersons() {","lastModifiedDate":"2018-01-10"},{"lineNumber":103,"author":{"gitId":"-"},"content":"        return new ArrayList\u003c\u003e(Arrays.asList(ALICE, BENSON, CARL, DANIEL, ELLE, FIONA, GEORGE));","lastModifiedDate":"2017-08-07"},{"lineNumber":104,"author":{"gitId":"-"},"content":"    }","lastModifiedDate":"2017-08-04"},{"lineNumber":105,"author":{"gitId":"Neha-5678"},"content":"","lastModifiedDate":"2021-10-11"},{"lineNumber":106,"author":{"gitId":"Neha-5678"},"content":"    /**","lastModifiedDate":"2021-11-08"},{"lineNumber":107,"author":{"gitId":"Neha-5678"},"content":"     * Returns a particular person with lesson and all other persons.","lastModifiedDate":"2021-11-08"},{"lineNumber":108,"author":{"gitId":"Neha-5678"},"content":"     *","lastModifiedDate":"2021-11-08"},{"lineNumber":109,"author":{"gitId":"Neha-5678"},"content":"     * @return List including a particular person with lesson and all other typical persons.","lastModifiedDate":"2021-11-08"},{"lineNumber":110,"author":{"gitId":"Neha-5678"},"content":"     */","lastModifiedDate":"2021-11-08"},{"lineNumber":111,"author":{"gitId":"Neha-5678"},"content":"    public static List\u003cPerson\u003e getTypicalPersonsWithLesson() {","lastModifiedDate":"2021-11-06"},{"lineNumber":112,"author":{"gitId":"Neha-5678"},"content":"        return new ArrayList\u003c\u003e(Arrays.asList(ALICE_WITH_LESSON, BENSON, CARL, DANIEL, ELLE, FIONA, GEORGE));","lastModifiedDate":"2021-11-06"},{"lineNumber":113,"author":{"gitId":"Neha-5678"},"content":"    }","lastModifiedDate":"2021-11-06"},{"lineNumber":114,"author":{"gitId":"Neha-5678"},"content":"","lastModifiedDate":"2021-11-06"},{"lineNumber":115,"author":{"gitId":"Neha-5678"},"content":"    /**","lastModifiedDate":"2021-11-08"},{"lineNumber":116,"author":{"gitId":"Neha-5678"},"content":"     * Returns all typical tasks.","lastModifiedDate":"2021-11-08"},{"lineNumber":117,"author":{"gitId":"Neha-5678"},"content":"     *","lastModifiedDate":"2021-11-08"},{"lineNumber":118,"author":{"gitId":"Neha-5678"},"content":"     * @return List of typical tasks.","lastModifiedDate":"2021-11-08"},{"lineNumber":119,"author":{"gitId":"Neha-5678"},"content":"     */","lastModifiedDate":"2021-11-08"},{"lineNumber":120,"author":{"gitId":"Neha-5678"},"content":"    public static List\u003cTask\u003e getTypicalTasks() {","lastModifiedDate":"2021-10-11"},{"lineNumber":121,"author":{"gitId":"Neha-5678"},"content":"        return new ArrayList\u003c\u003e(List.of(REPORT_1));","lastModifiedDate":"2021-10-11"},{"lineNumber":122,"author":{"gitId":"Neha-5678"},"content":"    }","lastModifiedDate":"2021-10-11"},{"lineNumber":123,"author":{"gitId":"kvihashini"},"content":"","lastModifiedDate":"2021-10-24"},{"lineNumber":124,"author":{"gitId":"-"},"content":"}","lastModifiedDate":"2016-09-13"}],"authorContributionMap":{"Neha-5678":45,"kvihashini":1,"eltonyeh":10,"-":68}},{"path":"src/test/java/seedu/address/testutil/TypicalTasks.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"eltonyeh"},"content":"package seedu.address.testutil;","lastModifiedDate":"2021-10-08"},{"lineNumber":2,"author":{"gitId":"eltonyeh"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":3,"author":{"gitId":"eltonyeh"},"content":"import java.util.ArrayList;","lastModifiedDate":"2021-10-08"},{"lineNumber":4,"author":{"gitId":"eltonyeh"},"content":"import java.util.List;","lastModifiedDate":"2021-10-08"},{"lineNumber":5,"author":{"gitId":"eltonyeh"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":6,"author":{"gitId":"eltonyeh"},"content":"import seedu.address.model.AddressBook;","lastModifiedDate":"2021-10-08"},{"lineNumber":7,"author":{"gitId":"eltonyeh"},"content":"import seedu.address.model.task.Task;","lastModifiedDate":"2021-10-08"},{"lineNumber":8,"author":{"gitId":"eltonyeh"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":9,"author":{"gitId":"eltonyeh"},"content":"/**","lastModifiedDate":"2021-10-08"},{"lineNumber":10,"author":{"gitId":"eltonyeh"},"content":" * A utility class containing a list of {@code Task} objects to be used in tests.","lastModifiedDate":"2021-10-08"},{"lineNumber":11,"author":{"gitId":"eltonyeh"},"content":" */","lastModifiedDate":"2021-10-08"},{"lineNumber":12,"author":{"gitId":"eltonyeh"},"content":"public class TypicalTasks {","lastModifiedDate":"2021-10-08"},{"lineNumber":13,"author":{"gitId":"Neha-5678"},"content":"    public static final Task REPORT_1 \u003d new TaskBuilder().withDescription(\"Report 1\")","lastModifiedDate":"2021-10-19"},{"lineNumber":14,"author":{"gitId":"eltonyeh"},"content":"            .withUniqueId(\"f31648db-5619-4bad-99d2-87367a2b5f28\").withDeadline(\"2021-10-10\").build();","lastModifiedDate":"2021-10-12"},{"lineNumber":15,"author":{"gitId":"Neha-5678"},"content":"    public static final Task REPORT_2 \u003d new TaskBuilder().withDescription(\"Report 2\")","lastModifiedDate":"2021-10-19"},{"lineNumber":16,"author":{"gitId":"Neha-5678"},"content":"            .withUniqueId(\"84213370-69bf-44e4-9d11-229411f3c1c9\").withDeadline(\"2021-10-20\").build();","lastModifiedDate":"2021-11-06"},{"lineNumber":17,"author":{"gitId":"Neha-5678"},"content":"    public static final Task MATH_HOMEWORK \u003d new TaskBuilder().withDescription(\"Math Homework\")","lastModifiedDate":"2021-11-06"},{"lineNumber":18,"author":{"gitId":"Neha-5678"},"content":"            .withUniqueId(\"d3ecfc97-be80-40b3-a798-1674c542ed46\").withDeadline(\"2021-12-21\").build();","lastModifiedDate":"2021-11-06"},{"lineNumber":19,"author":{"gitId":"Neha-5678"},"content":"    public static final Task STATS_ASSIGNMENT \u003d new TaskBuilder().withDescription(\"Statistics assignment\")","lastModifiedDate":"2021-11-06"},{"lineNumber":20,"author":{"gitId":"Neha-5678"},"content":"            .withUniqueId(\"c6ada13b-2617-4870-8f57-d9c39c94229b\").withDeadline(\"2021-11-15\").build();","lastModifiedDate":"2021-11-06"},{"lineNumber":21,"author":{"gitId":"eltonyeh"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":22,"author":{"gitId":"eltonyeh"},"content":"    /**","lastModifiedDate":"2021-10-08"},{"lineNumber":23,"author":{"gitId":"eltonyeh"},"content":"     * Returns an {@code AddressBook} with all the typical tasks.","lastModifiedDate":"2021-10-08"},{"lineNumber":24,"author":{"gitId":"eltonyeh"},"content":"     */","lastModifiedDate":"2021-10-08"},{"lineNumber":25,"author":{"gitId":"eltonyeh"},"content":"    public static AddressBook getTypicalAddressBook() {","lastModifiedDate":"2021-10-08"},{"lineNumber":26,"author":{"gitId":"eltonyeh"},"content":"        AddressBook ab \u003d new AddressBook();","lastModifiedDate":"2021-10-08"},{"lineNumber":27,"author":{"gitId":"eltonyeh"},"content":"        for (Task task : getTypicalTasks()) {","lastModifiedDate":"2021-10-08"},{"lineNumber":28,"author":{"gitId":"eltonyeh"},"content":"            ab.addTask(task);","lastModifiedDate":"2021-10-08"},{"lineNumber":29,"author":{"gitId":"eltonyeh"},"content":"        }","lastModifiedDate":"2021-10-08"},{"lineNumber":30,"author":{"gitId":"eltonyeh"},"content":"        return ab;","lastModifiedDate":"2021-10-08"},{"lineNumber":31,"author":{"gitId":"eltonyeh"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":32,"author":{"gitId":"eltonyeh"},"content":"","lastModifiedDate":"2021-10-08"},{"lineNumber":33,"author":{"gitId":"Neha-5678"},"content":"    /**","lastModifiedDate":"2021-11-08"},{"lineNumber":34,"author":{"gitId":"Neha-5678"},"content":"     * Returns all typical tasks.","lastModifiedDate":"2021-11-08"},{"lineNumber":35,"author":{"gitId":"Neha-5678"},"content":"     *","lastModifiedDate":"2021-11-08"},{"lineNumber":36,"author":{"gitId":"Neha-5678"},"content":"     * @return List of typical tasks.","lastModifiedDate":"2021-11-08"},{"lineNumber":37,"author":{"gitId":"Neha-5678"},"content":"     */","lastModifiedDate":"2021-11-08"},{"lineNumber":38,"author":{"gitId":"eltonyeh"},"content":"    public static List\u003cTask\u003e getTypicalTasks() {","lastModifiedDate":"2021-10-08"},{"lineNumber":39,"author":{"gitId":"Neha-5678"},"content":"        return new ArrayList\u003c\u003e(List.of(REPORT_1, REPORT_2,","lastModifiedDate":"2021-11-06"},{"lineNumber":40,"author":{"gitId":"Neha-5678"},"content":"                MATH_HOMEWORK, STATS_ASSIGNMENT));","lastModifiedDate":"2021-11-06"},{"lineNumber":41,"author":{"gitId":"eltonyeh"},"content":"    }","lastModifiedDate":"2021-10-08"},{"lineNumber":42,"author":{"gitId":"eltonyeh"},"content":"}","lastModifiedDate":"2021-10-08"}],"authorContributionMap":{"Neha-5678":14,"eltonyeh":28}},{"path":"src/test/java/seedu/address/testutil/TypicalTimeslots.java","fileType":"test-code","lines":[{"lineNumber":1,"author":{"gitId":"tanhuakun"},"content":"package seedu.address.testutil;","lastModifiedDate":"2021-10-12"},{"lineNumber":2,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":3,"author":{"gitId":"tanhuakun"},"content":"import seedu.address.model.lesson.Timeslot;","lastModifiedDate":"2021-10-12"},{"lineNumber":4,"author":{"gitId":"tanhuakun"},"content":"","lastModifiedDate":"2021-10-12"},{"lineNumber":5,"author":{"gitId":"tanhuakun"},"content":"/**","lastModifiedDate":"2021-10-12"},{"lineNumber":6,"author":{"gitId":"tanhuakun"},"content":" * A utility class containing a list of {@code Timeslot} objects to be used in tests.","lastModifiedDate":"2021-10-12"},{"lineNumber":7,"author":{"gitId":"tanhuakun"},"content":" */","lastModifiedDate":"2021-10-12"},{"lineNumber":8,"author":{"gitId":"tanhuakun"},"content":"public class TypicalTimeslots {","lastModifiedDate":"2021-10-12"},{"lineNumber":9,"author":{"gitId":"tanhuakun"},"content":"    public static final Timeslot TEN_TO_TWELVE \u003d new Timeslot(\"10:00\", \"12:00\");","lastModifiedDate":"2021-10-12"},{"lineNumber":10,"author":{"gitId":"tanhuakun"},"content":"    public static final Timeslot ELEVEN_TO_ONE \u003d new Timeslot(\"11:00\", \"13:00\");","lastModifiedDate":"2021-10-12"},{"lineNumber":11,"author":{"gitId":"tanhuakun"},"content":"    public static final Timeslot TWELVE_TO_TWO \u003d new Timeslot(\"12:00\", \"14:00\");","lastModifiedDate":"2021-10-12"},{"lineNumber":12,"author":{"gitId":"tanhuakun"},"content":"}","lastModifiedDate":"2021-10-12"}],"authorContributionMap":{"tanhuakun":12}}]
